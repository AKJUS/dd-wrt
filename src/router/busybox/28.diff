diff -urpN busybox-1.27.2/Config.in busybox-1.28.0/Config.in
--- busybox-1.27.2/Config.in	2017-08-04 02:21:39.000000000 +0200
+++ busybox-1.28.0/Config.in	2017-08-18 19:22:37.000000000 +0200
@@ -3,35 +3,39 @@
 # see scripts/kbuild/config-language.txt.
 #
 
-mainmenu "BusyBox Configuration"
+mainmenu "Configuration"
 
 config HAVE_DOT_CONFIG
 	bool
 	default y
 
-menu "Busybox Settings"
+menu "Settings"
 
 config DESKTOP
-	bool "Enable options for full-blown desktop systems"
+	bool "Enable compatibility for full-blown desktop systems"
 	default y
 	help
-	  Enable options and features which are not essential.
-	  Select this if you plan to use busybox on full-blown desktop machine
-	  with common Linux distro, which needs higher level of command-line
-	  compatibility.
+	Enable applet options and features which are not essential.
+	Many applet options have dedicated config options to (de)select them
+	under that applet; this options enables those options which have no
+	individual config item for them.
 
-	  If you are preparing your build to be used on an embedded box
-	  where you have tighter control over the entire set of userspace
-	  tools, you can unselect this option for smaller code size.
+	Select this if you plan to use busybox on full-blown desktop machine
+	with common Linux distro, which needs higher level of command-line
+	compatibility.
+
+	If you are preparing your build to be used on an embedded box
+	where you have tighter control over the entire set of userspace
+	tools, you can unselect this option for smaller code size.
 
 config EXTRA_COMPAT
 	bool "Provide compatible behavior for rare corner cases (bigger code)"
 	default n
 	help
-	  This option makes grep, sed etc handle rare corner cases
-	  (embedded NUL bytes and such). This makes code bigger and uses
-	  some GNU extensions in libc. You probably only need this option
-	  if you plan to run busybox on desktop.
+	This option makes grep, sed etc handle rare corner cases
+	(embedded NUL bytes and such). This makes code bigger and uses
+	some GNU extensions in libc. You probably only need this option
+	if you plan to run busybox on desktop.
 
 config FEDORA_COMPAT
 	bool "Building for Fedora distribution"
@@ -50,279 +54,285 @@ config INCLUDE_SUSv2
 	bool "Enable obsolete features removed before SUSv3"
 	default y
 	help
-	  This option will enable backwards compatibility with SuSv2,
-	  specifically, old-style numeric options ('command -1 <file>')
-	  will be supported in head, tail, and fold. (Note: should
-	  affect renice too.)
+	This option will enable backwards compatibility with SuSv2,
+	specifically, old-style numeric options ('command -1 <file>')
+	will be supported in head, tail, and fold. (Note: should
+	affect renice too.)
 
-config USE_PORTABLE_CODE
-	bool "Avoid using GCC-specific code constructs"
-	default n
+config LONG_OPTS
+	bool "Support --long-options"
+	default y
 	help
-	  Use this option if you are trying to compile busybox with
-	  compiler other than gcc.
-	  If you do use gcc, this option may needlessly increase code size.
+	Enable this if you want busybox applets to use the gnu --long-option
+	style, in addition to single character -a -b -c style options.
 
 config SHOW_USAGE
 	bool "Show applet usage messages"
 	default y
 	help
-	  Enabling this option, BusyBox applets will show terse help messages
-	  when invoked with wrong arguments.
-	  If you do not want to show any (helpful) usage message when
-	  issuing wrong command syntax, you can say 'N' here,
-	  saving approximately 7k.
+	Enabling this option, applets will show terse help messages
+	when invoked with wrong arguments.
+	If you do not want to show any (helpful) usage message when
+	issuing wrong command syntax, you can say 'N' here,
+	saving approximately 7k.
 
 config FEATURE_VERBOSE_USAGE
 	bool "Show verbose applet usage messages"
 	default y
 	depends on SHOW_USAGE
 	help
-	  All BusyBox applets will show verbose help messages when
-	  busybox is invoked with --help. This will add a lot of text to the
-	  busybox binary. In the default configuration, this will add about
-	  13k, but it can add much more depending on your configuration.
+	All applets will show verbose help messages when invoked with --help.
+	This will add a lot of text to the binary.
 
 config FEATURE_COMPRESS_USAGE
 	bool "Store applet usage messages in compressed form"
 	default y
 	depends on SHOW_USAGE
 	help
-	  Store usage messages in .bz compressed form, uncompress them
-	  on-the-fly when <applet> --help is called.
-
-	  If you have a really tiny busybox with few applets enabled (and
-	  bunzip2 isn't one of them), the overhead of the decompressor might
-	  be noticeable. Also, if you run executables directly from ROM
-	  and have very little memory, this might not be a win. Otherwise,
-	  you probably want this.
-
-config BUSYBOX
-	bool "Include busybox applet"
-	default y
-	help
-	  The busybox applet provides general help regarding busybox and
-	  allows the included applets to be listed.  It's also required
-	  if applet links are to be installed at runtime.
+	Store usage messages in .bz2 compressed form, uncompress them
+	on-the-fly when "APPLET --help" is run.
 
-	  If you can live without these features disabling this will save
-	  some space.
+	If you have a really tiny busybox with few applets enabled (and
+	bunzip2 isn't one of them), the overhead of the decompressor might
+	be noticeable. Also, if you run executables directly from ROM
+	and have very little memory, this might not be a win. Otherwise,
+	you probably want this.
 
-config FEATURE_INSTALLER
-	bool "Support --install [-s] to install applet links at runtime"
+config LFS
+	bool "Support files > 2 GB"
 	default y
-	depends on BUSYBOX
-	help
-	  Enable 'busybox --install [-s]' support. This will allow you to use
-	  busybox at runtime to create hard links or symlinks for all the
-	  applets that are compiled into busybox.
-
-config INSTALL_NO_USR
-	bool "Don't use /usr"
-	default n
 	help
-	  Disable use of /usr. busybox --install and "make install"
-	  will install applets only to /bin and /sbin,
-	  never to /usr/bin or /usr/sbin.
+	If you need to work with large files, enable this option.
+	This will have no effect if your kernel or your C
+	library lacks large file support for large files. Some of the
+	programs that can benefit from large file support include dd, gzip,
+	cp, mount, tar.
 
 config PAM
 	bool "Support PAM (Pluggable Authentication Modules)"
 	default n
 	help
-	  Use PAM in some busybox applets (currently login and httpd) instead
-	  of direct access to password database.
-
-config LONG_OPTS
-	bool "Support --long-options"
-	default y
-	help
-	  Enable this if you want busybox applets to use the gnu --long-option
-	  style, in addition to single character -a -b -c style options.
+	Use PAM in some applets (currently login and httpd) instead
+	of direct access to password database.
 
 config FEATURE_DEVPTS
 	bool "Use the devpts filesystem for Unix98 PTYs"
 	default y
 	help
-	  Enable if you want BusyBox to use Unix98 PTY support. If enabled,
-	  busybox will use /dev/ptmx for the master side of the pseudoterminal
-	  and /dev/pts/<number> for the slave side. Otherwise, BSD style
-	  /dev/ttyp<number> will be used. To use this option, you should have
-	  devpts mounted.
-
-config FEATURE_CLEAN_UP
-	bool "Clean up all memory before exiting (usually not needed)"
-	default n
-	help
-	  As a size optimization, busybox normally exits without explicitly
-	  freeing dynamically allocated memory or closing files. This saves
-	  space since the OS will clean up for us, but it can confuse debuggers
-	  like valgrind, which report tons of memory and resource leaks.
-
-	  Don't enable this unless you have a really good reason to clean
-	  things up manually.
+	Enable if you want to use Unix98 PTY support. If enabled,
+	busybox will use /dev/ptmx for the master side of the pseudoterminal
+	and /dev/pts/<number> for the slave side. Otherwise, BSD style
+	/dev/ttyp<number> will be used. To use this option, you should have
+	devpts mounted.
 
 config FEATURE_UTMP
 	bool "Support utmp file"
 	default y
 	help
-	  The file /var/run/utmp is used to track who is currently logged in.
-	  With this option on, certain applets (getty, login, telnetd etc)
-	  will create and delete entries there.
-	  "who" applet requires this option.
+	The file /var/run/utmp is used to track who is currently logged in.
+	With this option on, certain applets (getty, login, telnetd etc)
+	will create and delete entries there.
+	"who" applet requires this option.
 
 config FEATURE_WTMP
 	bool "Support wtmp file"
 	default y
 	depends on FEATURE_UTMP
 	help
-	  The file /var/run/wtmp is used to track when users have logged into
-	  and logged out of the system.
-	  With this option on, certain applets (getty, login, telnetd etc)
-	  will append new entries there.
-	  "last" applet requires this option.
+	The file /var/run/wtmp is used to track when users have logged into
+	and logged out of the system.
+	With this option on, certain applets (getty, login, telnetd etc)
+	will append new entries there.
+	"last" applet requires this option.
 
 config FEATURE_PIDFILE
 	bool "Support writing pidfiles"
 	default y
 	help
-	  This option makes some applets (e.g. crond, syslogd, inetd) write
-	  a pidfile at the configured PID_FILE_PATH.  It has no effect
-	  on applets which require pidfiles to run.
+	This option makes some applets (e.g. crond, syslogd, inetd) write
+	a pidfile at the configured PID_FILE_PATH.  It has no effect
+	on applets which require pidfiles to run.
 
 config PID_FILE_PATH
-	string "Path to directory for pidfile"
+	string "Directory for pidfiles"
 	default "/var/run"
 	depends on FEATURE_PIDFILE
 	help
-	  This is the default path where pidfiles are created.  Applets which
-	  allow you to set the pidfile path on the command line will override
-	  this value.  The option has no effect on applets that require you to
-	  specify a pidfile path.
+	This is the default path where pidfiles are created.  Applets which
+	allow you to set the pidfile path on the command line will override
+	this value.  The option has no effect on applets that require you to
+	specify a pidfile path.
+
+config BUSYBOX
+	bool "Include busybox applet"
+	default y
+	help
+	The busybox applet provides general help message and allows
+	the included applets to be listed.  It also provides
+	optional --install command to create applet links. If you unselect
+	this option, running busybox without any arguments will give
+	just a cryptic error message:
+
+	$ busybox
+	busybox: applet not found
+
+	Running "busybox APPLET [ARGS...]" will still work, of course.
+
+config FEATURE_INSTALLER
+	bool "Support --install [-s] to install applet links at runtime"
+	default y
+	depends on BUSYBOX
+	help
+	Enable 'busybox --install [-s]' support. This will allow you to use
+	busybox at runtime to create hard links or symlinks for all the
+	applets that are compiled into busybox.
+
+config INSTALL_NO_USR
+	bool "Don't use /usr"
+	default n
+	help
+	Disable use of /usr. "busybox --install" and "make install"
+	will install applets only to /bin and /sbin,
+	never to /usr/bin or /usr/sbin.
 
 config FEATURE_SUID
-	bool "Support SUID/SGID handling"
+	bool "Drop SUID state for most applets"
 	default y
 	help
-	  With this option you can install the busybox binary belonging
-	  to root with the suid bit set, enabling some applets to perform
-	  root-level operations even when run by ordinary users
-	  (for example, mounting of user mounts in fstab needs this).
-
-	  Busybox will automatically drop privileges for applets
-	  that don't need root access.
-
-	  If you are really paranoid and don't want to do this, build two
-	  busybox binaries with different applets in them (and the appropriate
-	  symlinks pointing to each binary), and only set the suid bit on the
-	  one that needs it.
-
-	  The applets which require root rights (need suid bit or
-	  to be run by root) and will refuse to execute otherwise:
-	  crontab, login, passwd, su, vlock, wall.
-
-	  The applets which will use root rights if they have them
-	  (via suid bit, or because run by root), but would try to work
-	  without root right nevertheless:
-	  findfs, ping[6], traceroute[6], mount.
-
-	  Note that if you DONT select this option, but DO make busybox
-	  suid root, ALL applets will run under root, which is a huge
-	  security hole (think "cp /some/file /etc/passwd").
+	With this option you can install the busybox binary belonging
+	to root with the suid bit set, enabling some applets to perform
+	root-level operations even when run by ordinary users
+	(for example, mounting of user mounts in fstab needs this).
+
+	With this option enabled, busybox drops privileges for applets
+	that don't need root access, before entering their main() function.
+
+	If you are really paranoid and don't want even initial busybox code
+	to run under root for every applet, build two busybox binaries with
+	different applets in them (and the appropriate symlinks pointing
+	to each binary), and only set the suid bit on the one that needs it.
+
+	Some applets which require root rights (need suid bit on the binary
+	or to be run by root) and will refuse to execute otherwise:
+	crontab, login, passwd, su, vlock, wall.
+
+	The applets which will use root rights if they have them
+	(via suid bit, or because run by root), but would try to work
+	without root right nevertheless:
+	findfs, ping[6], traceroute[6], mount.
+
+	Note that if you DO NOT select this option, but DO make busybox
+	suid root, ALL applets will run under root, which is a huge
+	security hole (think "cp /some/file /etc/passwd").
 
 config FEATURE_SUID_CONFIG
-	bool "Runtime SUID/SGID configuration via /etc/busybox.conf"
+	bool "Enable SUID configuration via /etc/busybox.conf"
 	default y
 	depends on FEATURE_SUID
 	help
-	  Allow the SUID / SGID state of an applet to be determined at runtime
-	  by checking /etc/busybox.conf. (This is sort of a poor man's sudo.)
-	  The format of this file is as follows:
-
-	  APPLET = [Ssx-][Ssx-][x-] [USER.GROUP]
-
-	  s: USER or GROUP is allowed to execute APPLET.
-	     APPLET will run under USER or GROUP
-	     (reagardless of who's running it).
-	  S: USER or GROUP is NOT allowed to execute APPLET.
-	     APPLET will run under USER or GROUP.
-	     This option is not very sensical.
-	  x: USER/GROUP/others are allowed to execute APPLET.
-	     No UID/GID change will be done when it is run.
-	  -: USER/GROUP/others are not allowed to execute APPLET.
-
-	  An example might help:
-
-	  [SUID]
-	  su = ssx root.0 # applet su can be run by anyone and runs with
-	                  # euid=0/egid=0
-	  su = ssx        # exactly the same
-
-	  mount = sx- root.disk # applet mount can be run by root and members
-	                        # of group disk (but not anyone else)
-	                        # and runs with euid=0 (egid is not changed)
-
-	  cp = --- # disable applet cp for everyone
-
-	  The file has to be owned by user root, group root and has to be
-	  writeable only by root:
-	        (chown 0.0 /etc/busybox.conf; chmod 600 /etc/busybox.conf)
-	  The busybox executable has to be owned by user root, group
-	  root and has to be setuid root for this to work:
-	        (chown 0.0 /bin/busybox; chmod 4755 /bin/busybox)
+	Allow the SUID/SGID state of an applet to be determined at runtime
+	by checking /etc/busybox.conf. (This is sort of a poor man's sudo.)
+	The format of this file is as follows:
+
+	APPLET = [Ssx-][Ssx-][x-] [USER.GROUP]
+
+	s: USER or GROUP is allowed to execute APPLET.
+	   APPLET will run under USER or GROUP
+	   (regardless of who's running it).
+	S: USER or GROUP is NOT allowed to execute APPLET.
+	   APPLET will run under USER or GROUP.
+	   This option is not very sensical.
+	x: USER/GROUP/others are allowed to execute APPLET.
+	   No UID/GID change will be done when it is run.
+	-: USER/GROUP/others are not allowed to execute APPLET.
+
+	An example might help:
+
+	|[SUID]
+	|su = ssx root.0 # applet su can be run by anyone and runs with
+	|                # euid=0,egid=0
+	|su = ssx        # exactly the same
+	|
+	|mount = sx- root.disk # applet mount can be run by root and members
+	|                      # of group disk (but not anyone else)
+	|                      # and runs with euid=0 (egid is not changed)
+	|
+	|cp = --- # disable applet cp for everyone
+
+	The file has to be owned by user root, group root and has to be
+	writeable only by root:
+		(chown 0.0 /etc/busybox.conf; chmod 600 /etc/busybox.conf)
+	The busybox executable has to be owned by user root, group
+	root and has to be setuid root for this to work:
+		(chown 0.0 /bin/busybox; chmod 4755 /bin/busybox)
 
-	  Robert 'sandman' Griebl has more information here:
-	  <url: http://www.softforge.de/bb/suid.html >.
+	Robert 'sandman' Griebl has more information here:
+	<url: http://www.softforge.de/bb/suid.html >.
 
 config FEATURE_SUID_CONFIG_QUIET
 	bool "Suppress warning message if /etc/busybox.conf is not readable"
 	default y
 	depends on FEATURE_SUID_CONFIG
 	help
-	  /etc/busybox.conf should be readable by the user needing the SUID,
-	  check this option to avoid users to be notified about missing
-	  permissions.
+	/etc/busybox.conf should be readable by the user needing the SUID,
+	check this option to avoid users to be notified about missing
+	permissions.
+
+config FEATURE_PREFER_APPLETS
+	bool "exec prefers applets"
+	default n
+	help
+	This is an experimental option which directs applets about to
+	call 'exec' to try and find an applicable busybox applet before
+	searching the PATH. This is typically done by exec'ing
+	/proc/self/exe.
+
+	This may affect shell, find -exec, xargs and similar applets.
+	They will use applets even if /bin/APPLET -> busybox link
+	is missing (or is not a link to busybox). However, this causes
+	problems in chroot jails without mounted /proc and with ps/top
+	(command name can be shown as 'exe' for applets started this way).
+
+config BUSYBOX_EXEC_PATH
+	string "Path to busybox executable"
+	default "/proc/self/exe"
+	help
+	When applets need to run other applets, busybox
+	sometimes needs to exec() itself. When the /proc filesystem is
+	mounted, /proc/self/exe always points to the currently running
+	executable. If you haven't got /proc, set this to wherever you
+	want to run busybox from.
 
 config SELINUX
 	bool "Support NSA Security Enhanced Linux"
 	default n
 	select PLATFORM_LINUX
 	help
-	  Enable support for SELinux in applets ls, ps, and id. Also provide
-	  the option of compiling in SELinux applets.
+	Enable support for SELinux in applets ls, ps, and id. Also provide
+	the option of compiling in SELinux applets.
+
+	If you do not have a complete SELinux userland installed, this stuff
+	will not compile.  Specifially, libselinux 1.28 or better is
+	directly required by busybox. If the installation is located in a
+	non-standard directory, provide it by invoking make as follows:
 
-	  If you do not have a complete SELinux userland installed, this stuff
-	  will not compile.  Specifially, libselinux 1.28 or better is
-	  directly required by busybox. If the installation is located in a
-	  non-standard directory, provide it by invoking make as follows:
 		CFLAGS=-I<libselinux-include-path> \
 		LDFLAGS=-L<libselinux-lib-path> \
 		make
 
-	  Most people will leave this set to 'N'.
+	Most people will leave this set to 'N'.
 
-config FEATURE_PREFER_APPLETS
-	bool "exec prefers applets"
+config FEATURE_CLEAN_UP
+	bool "Clean up all memory before exiting (usually not needed)"
 	default n
 	help
-	  This is an experimental option which directs applets about to
-	  call 'exec' to try and find an applicable busybox applet before
-	  searching the PATH. This is typically done by exec'ing
-	  /proc/self/exe.
-	  This may affect shell, find -exec, xargs and similar applets.
-	  They will use applets even if /bin/<applet> -> busybox link
-	  is missing (or is not a link to busybox). However, this causes
-	  problems in chroot jails without mounted /proc and with ps/top
-	  (command name can be shown as 'exe' for applets started this way).
+	As a size optimization, busybox normally exits without explicitly
+	freeing dynamically allocated memory or closing files. This saves
+	space since the OS will clean up for us, but it can confuse debuggers
+	like valgrind, which report tons of memory and resource leaks.
 
-config BUSYBOX_EXEC_PATH
-	string "Path to BusyBox executable"
-	default "/proc/self/exe"
-	help
-	  When Busybox applets need to run other busybox applets, BusyBox
-	  sometimes needs to exec() itself. When the /proc filesystem is
-	  mounted, /proc/self/exe always points to the currently running
-	  executable. If you haven't got /proc, set this to wherever you
-	  want to run BusyBox from.
+	Don't enable this unless you have a really good reason to clean
+	things up manually.
 
 # These are auto-selected by other options
 
@@ -330,64 +340,53 @@ config FEATURE_SYSLOG
 	bool #No description makes it a hidden option
 	default n
 	#help
-	#  This option is auto-selected when you select any applet which may
-	#  send its output to syslog. You do not need to select it manually.
-
-config FEATURE_HAVE_RPC
-	bool #No description makes it a hidden option
-	default n
-	#help
-	#  This is automatically selected if any of enabled applets need it.
-	#  You do not need to select it manually.
+	#This option is auto-selected when you select any applet which may
+	#send its output to syslog. You do not need to select it manually.
 
 config PLATFORM_LINUX
 	bool #No description makes it a hidden option
 	default n
 	#help
-	#  For the most part, busybox requires only POSIX compatibility
-	#  from the target system, but some applets and features use
-	#  Linux-specific interfaces.
+	#For the most part, busybox requires only POSIX compatibility
+	#from the target system, but some applets and features use
+	#Linux-specific interfaces.
 	#
-	#  This is automatically selected if any applet or feature requires
-	#  Linux-specific interfaces. You do not need to select it manually.
+	#This is automatically selected if any applet or feature requires
+	#Linux-specific interfaces. You do not need to select it manually.
 
 comment 'Build Options'
 
 config STATIC
-	bool "Build BusyBox as a static binary (no shared libs)"
+	bool "Build static binary (no shared libs)"
 	default n
 	help
-	  If you want to build a static BusyBox binary, which does not
-	  use or require any shared libraries, then enable this option.
-	  This can cause BusyBox to be considerably larger, so you should
-	  leave this option false unless you have a good reason (i.e.
-	  your target platform does not support shared libraries, or
-	  you are building an initrd which doesn't need anything but
-	  BusyBox, etc).
-
-	  Most people will leave this set to 'N'.
+	If you want to build a static binary, which does not use
+	or require any shared libraries, enable this option.
+	Static binaries are larger, but do not require functioning
+	dynamic libraries to be present, which is important if used
+	as a system rescue tool.
 
 config PIE
-	bool "Build BusyBox as a position independent executable"
+	bool "Build position independent executable"
 	default n
 	depends on !STATIC
 	help
-	  Hardened code option. PIE binaries are loaded at a different
-	  address at each invocation. This has some overhead,
-	  particularly on x86-32 which is short on registers.
+	Hardened code option. PIE binaries are loaded at a different
+	address at each invocation. This has some overhead,
+	particularly on x86-32 which is short on registers.
 
-	  Most people will leave this set to 'N'.
+	Most people will leave this set to 'N'.
 
 config NOMMU
 	bool "Force NOMMU build"
 	default n
 	help
-	  Busybox tries to detect whether architecture it is being
-	  built against supports MMU or not. If this detection fails,
-	  or if you want to build NOMMU version of busybox for testing,
-	  you may force NOMMU build here.
+	Busybox tries to detect whether architecture it is being
+	built against supports MMU or not. If this detection fails,
+	or if you want to build NOMMU version of busybox for testing,
+	you may force NOMMU build here.
 
-	  Most people will leave this set to 'N'.
+	Most people will leave this set to 'N'.
 
 # PIE can be made to work with BUILD_LIBBUSYBOX, but currently
 # build system does not support that
@@ -396,135 +395,128 @@ config BUILD_LIBBUSYBOX
 	default n
 	depends on !FEATURE_PREFER_APPLETS && !PIE && !STATIC
 	help
-	  Build a shared library libbusybox.so.N.N.N which contains all
-	  busybox code.
+	Build a shared library libbusybox.so.N.N.N which contains all
+	busybox code.
 
-	  This feature allows every applet to be built as a tiny
-	  separate executable. Enabling it for "one big busybox binary"
-	  approach serves no purpose and increases code size.
-	  You should almost certainly say "no" to this.
-
-### config FEATURE_FULL_LIBBUSYBOX
-###	bool "Feature-complete libbusybox"
-###	default n if !FEATURE_SHARED_BUSYBOX
-###	depends on BUILD_LIBBUSYBOX
-###	help
-###	  Build a libbusybox with the complete feature-set, disregarding
-###	  the actually selected config.
-###
-###	  Normally, libbusybox will only contain the features which are
-###	  used by busybox itself. If you plan to write a separate
-###	  standalone application which uses libbusybox say 'Y'.
-###
-###	  Note: libbusybox is GPL, not LGPL, and exports no stable API that
-###	  might act as a copyright barrier. We can and will modify the
-###	  exported function set between releases (even minor version number
-###	  changes), and happily break out-of-tree features.
-###
-###	  Say 'N' if in doubt.
+	This feature allows every applet to be built as a really tiny
+	separate executable linked against the library:
+	|$ size 0_lib/l*
+	|    text  data   bss     dec    hex filename
+	|     939   212    28    1179    49b 0_lib/last
+	|     939   212    28    1179    49b 0_lib/less
+	|  919138  8328  1556  929022  e2cfe 0_lib/libbusybox.so.1.N.M
+
+	This is useful on NOMMU systems which are not capable
+	of sharing executables, but are capable of sharing code
+	in dynamic libraries.
+
+config FEATURE_LIBBUSYBOX_STATIC
+	bool "Pull in all external references into libbusybox"
+	default n
+	depends on BUILD_LIBBUSYBOX
+	help
+	Make libbusybox library independent, not using or requiring
+	any other shared libraries.
 
 config FEATURE_INDIVIDUAL
 	bool "Produce a binary for each applet, linked against libbusybox"
 	default y
 	depends on BUILD_LIBBUSYBOX
 	help
-	  If your CPU architecture doesn't allow for sharing text/rodata
-	  sections of running binaries, but allows for runtime dynamic
-	  libraries, this option will allow you to reduce memory footprint
-	  when you have many different applets running at once.
+	If your CPU architecture doesn't allow for sharing text/rodata
+	sections of running binaries, but allows for runtime dynamic
+	libraries, this option will allow you to reduce memory footprint
+	when you have many different applets running at once.
 
-	  If your CPU architecture allows for sharing text/rodata,
-	  having single binary is more optimal.
+	If your CPU architecture allows for sharing text/rodata,
+	having single binary is more optimal.
 
-	  Each applet will be a tiny program, dynamically linked
-	  against libbusybox.so.N.N.N.
+	Each applet will be a tiny program, dynamically linked
+	against libbusybox.so.N.N.N.
 
-	  You need to have a working dynamic linker.
+	You need to have a working dynamic linker.
 
 config FEATURE_SHARED_BUSYBOX
 	bool "Produce additional busybox binary linked against libbusybox"
 	default y
 	depends on BUILD_LIBBUSYBOX
 	help
-	  Build busybox, dynamically linked against libbusybox.so.N.N.N.
+	Build busybox, dynamically linked against libbusybox.so.N.N.N.
 
-	  You need to have a working dynamic linker.
+	You need to have a working dynamic linker.
 
 ### config BUILD_AT_ONCE
 ###	bool "Compile all sources at once"
 ###	default n
 ###	help
-###	  Normally each source-file is compiled with one invocation of
-###	  the compiler.
-###	  If you set this option, all sources are compiled at once.
-###	  This gives the compiler more opportunities to optimize which can
-###	  result in smaller and/or faster binaries.
+###	Normally each source-file is compiled with one invocation of
+###	the compiler.
+###	If you set this option, all sources are compiled at once.
+###	This gives the compiler more opportunities to optimize which can
+###	result in smaller and/or faster binaries.
 ###
-###	  Setting this option will consume alot of memory, e.g. if you
-###	  enable all applets with all features, gcc uses more than 300MB
-###	  RAM during compilation of busybox.
+###	Setting this option will consume alot of memory, e.g. if you
+###	enable all applets with all features, gcc uses more than 300MB
+###	RAM during compilation of busybox.
 ###
-###	  This option is most likely only beneficial for newer compilers
-###	  such as gcc-4.1 and above.
+###	This option is most likely only beneficial for newer compilers
+###	such as gcc-4.1 and above.
 ###
-###	  Say 'N' unless you know what you are doing.
-
-config LFS
-	bool "Build with Large File Support (for accessing files > 2 GB)"
-	default y
-	help
-	  If you want to build BusyBox with large file support, then enable
-	  this option. This will have no effect if your kernel or your C
-	  library lacks large file support for large files. Some of the
-	  programs that can benefit from large file support include dd, gzip,
-	  cp, mount, tar, and many others. If you want to access files larger
-	  than 2 Gigabytes, enable this option. Otherwise, leave it set to 'N'.
+###	Say 'N' unless you know what you are doing.
 
 config CROSS_COMPILER_PREFIX
-	string "Cross Compiler prefix"
+	string "Cross compiler prefix"
 	default ""
 	help
-	  If you want to build BusyBox with a cross compiler, then you
-	  will need to set this to the cross-compiler prefix, for example,
-	  "i386-uclibc-".
+	If you want to build busybox with a cross compiler, then you
+	will need to set this to the cross-compiler prefix, for example,
+	"i386-uclibc-".
 
-	  Note that CROSS_COMPILE environment variable or
-	  "make CROSS_COMPILE=xxx ..." will override this selection.
+	Note that CROSS_COMPILE environment variable or
+	"make CROSS_COMPILE=xxx ..." will override this selection.
 
-	  Native builds leave this empty.
+	Native builds leave this empty.
 
 config SYSROOT
 	string "Path to sysroot"
 	default ""
 	help
-	  If you want to build BusyBox with a cross compiler, then you
-	  might also need to specify where /usr/include and /usr/lib
-	  will be found.
+	If you want to build busybox with a cross compiler, then you
+	might also need to specify where /usr/include and /usr/lib
+	will be found.
 
-	  For example, BusyBox can be built against an installed
-	  Android NDK, platform version 9, for ARM ABI with
+	For example, busybox can be built against an installed
+	Android NDK, platform version 9, for ARM ABI with
 
-	  CONFIG_SYSROOT=/opt/android-ndk/platforms/android-9/arch-arm
+	CONFIG_SYSROOT=/opt/android-ndk/platforms/android-9/arch-arm
 
-	  Native builds leave this empty.
+	Native builds leave this empty.
 
 config EXTRA_CFLAGS
 	string "Additional CFLAGS"
 	default ""
 	help
-	  Additional CFLAGS to pass to the compiler verbatim.
+	Additional CFLAGS to pass to the compiler verbatim.
 
 config EXTRA_LDFLAGS
 	string "Additional LDFLAGS"
 	default ""
 	help
-	  Additional LDFLAGS to pass to the linker verbatim.
+	Additional LDFLAGS to pass to the linker verbatim.
 
 config EXTRA_LDLIBS
 	string "Additional LDLIBS"
 	default ""
 	help
-	  Additional LDLIBS to pass to the linker with -l.
+	Additional LDLIBS to pass to the linker with -l.
+
+config USE_PORTABLE_CODE
+	bool "Avoid using GCC-specific code constructs"
+	default n
+	help
+	Use this option if you are trying to compile busybox with
+	compiler other than gcc.
+	If you do use gcc, this option may needlessly increase code size.
 
 comment 'Installation Options ("make install" behavior)'
 
@@ -532,32 +524,32 @@ choice
 	prompt "What kind of applet links to install"
 	default INSTALL_APPLET_SYMLINKS
 	help
-	  Choose what kind of links to applets are created by "make install".
+	Choose what kind of links to applets are created by "make install".
 
 config INSTALL_APPLET_SYMLINKS
 	bool "as soft-links"
 	help
-	  Install applets as soft-links to the busybox binary. This needs some
-	  free inodes on the filesystem, but might help with filesystem
-	  generators that can't cope with hard-links.
+	Install applets as soft-links to the busybox binary. This needs some
+	free inodes on the filesystem, but might help with filesystem
+	generators that can't cope with hard-links.
 
 config INSTALL_APPLET_HARDLINKS
 	bool "as hard-links"
 	help
-	  Install applets as hard-links to the busybox binary. This might
-	  count on a filesystem with few inodes.
+	Install applets as hard-links to the busybox binary. This might
+	count on a filesystem with few inodes.
 
 config INSTALL_APPLET_SCRIPT_WRAPPERS
 	bool "as script wrappers"
 	help
-	  Install applets as script wrappers that call the busybox binary.
+	Install applets as script wrappers that call the busybox binary.
 
 config INSTALL_APPLET_DONT
 	bool "not installed"
 	help
-	  Do not install applet links. Useful when you plan to use
-	  busybox --install for installing links, or plan to use
-	  a standalone shell and thus don't need applet links.
+	Do not install applet links. Useful when you plan to use
+	busybox --install for installing links, or plan to use
+	a standalone shell and thus don't need applet links.
 
 endchoice
 
@@ -566,113 +558,116 @@ choice
 	default INSTALL_SH_APPLET_SYMLINK
 	depends on INSTALL_APPLET_SCRIPT_WRAPPERS
 	help
-	  Choose how you install /bin/sh applet link.
+	Choose how you install /bin/sh applet link.
 
 config INSTALL_SH_APPLET_SYMLINK
 	bool "as soft-link"
 	help
-	  Install /bin/sh applet as soft-link to the busybox binary.
+	Install /bin/sh applet as soft-link to the busybox binary.
 
 config INSTALL_SH_APPLET_HARDLINK
 	bool "as hard-link"
 	help
-	  Install /bin/sh applet as hard-link to the busybox binary.
+	Install /bin/sh applet as hard-link to the busybox binary.
 
 config INSTALL_SH_APPLET_SCRIPT_WRAPPER
 	bool "as script wrapper"
 	help
-	  Install /bin/sh applet as script wrapper that calls
-	  the busybox binary.
+	Install /bin/sh applet as script wrapper that calls
+	the busybox binary.
 
 endchoice
 
 config PREFIX
-	string "BusyBox installation prefix"
+	string "Destination path for 'make install'"
 	default "./_install"
 	help
-	  Define your directory to install BusyBox files/subdirs in.
+	Where "make install" should install busybox binary and links.
 
 comment 'Debugging Options'
 
 config DEBUG
-	bool "Build BusyBox with extra Debugging symbols"
+	bool "Build with debug information"
 	default n
 	help
-	  Say Y here if you wish to examine BusyBox internals while applets are
-	  running. This increases the size of the binary considerably, and
-	  should only be used when doing development. If you are doing
-	  development and want to debug BusyBox, answer Y.
+	Say Y here to compile with debug information.
+	This increases the size of the binary considerably, and
+	should only be used when doing development.
 
-	  Most people should answer N.
+	This adds -g option to gcc command line.
+
+	Most people should answer N.
 
 config DEBUG_PESSIMIZE
 	bool "Disable compiler optimizations"
 	default n
 	depends on DEBUG
 	help
-	  The compiler's optimization of source code can eliminate and reorder
-	  code, resulting in an executable that's hard to understand when
-	  stepping through it with a debugger. This switches it off, resulting
-	  in a much bigger executable that more closely matches the source
-	  code.
+	The compiler's optimization of source code can eliminate and reorder
+	code, resulting in an executable that's hard to understand when
+	stepping through it with a debugger. This switches it off, resulting
+	in a much bigger executable that more closely matches the source
+	code.
+
+	This replaces -Os/-O2 with -O0 in gcc command line.
 
 config DEBUG_SANITIZE
 	bool "Enable runtime sanitizers (ASAN/LSAN/USAN/etc...)"
 	default n
 	help
-	  Say Y here if you want to enable runtime sanitizers. These help
-	  catch bad memory accesses (e.g. buffer overflows), but will make
-	  the executable larger and slow down runtime a bit.
+	Say Y here if you want to enable runtime sanitizers. These help
+	catch bad memory accesses (e.g. buffer overflows), but will make
+	the executable larger and slow down runtime a bit.
 
-	  This adds -fsanitize=foo options to gcc command line.
+	This adds -fsanitize=foo options to gcc command line.
 
-	  If you aren't developing/testing busybox, say N here.
+	If you aren't developing/testing busybox, say N here.
 
 config UNIT_TEST
 	bool "Build unit tests"
 	default n
 	help
-	  Say Y here if you want to build unit tests (both the framework and
-	  test cases) as a Busybox applet. This results in bigger code, so you
-	  probably don't want this option in production builds.
+	Say Y here if you want to build unit tests (both the framework and
+	test cases) as an applet. This results in bigger code, so you
+	probably don't want this option in production builds.
 
 config WERROR
 	bool "Abort compilation on any warning"
 	default n
 	help
-	  This adds -Werror to gcc command line.
+	This adds -Werror to gcc command line.
 
-	  Most people should answer N.
+	Most people should answer N.
 
 choice
 	prompt "Additional debugging library"
 	default NO_DEBUG_LIB
 	help
-	  Using an additional debugging library will make BusyBox become
-	  considerable larger and will cause it to run more slowly. You
-	  should always leave this option disabled for production use.
-
-	  dmalloc support:
-	  ----------------
-	  This enables compiling with dmalloc ( http://dmalloc.com/ )
-	  which is an excellent public domain mem leak and malloc problem
-	  detector. To enable dmalloc, before running busybox you will
-	  want to properly set your environment, for example:
-	    export DMALLOC_OPTIONS=debug=0x34f47d83,inter=100,log=logfile
-	  The 'debug=' value is generated using the following command
-	    dmalloc -p log-stats -p log-non-free -p log-bad-space \
-	       -p log-elapsed-time -p check-fence -p check-heap \
-	       -p check-lists -p check-blank -p check-funcs -p realloc-copy \
-	       -p allow-free-null
-
-	  Electric-fence support:
-	  -----------------------
-	  This enables compiling with Electric-fence support. Electric
-	  fence is another very useful malloc debugging library which uses
-	  your computer's virtual memory hardware to detect illegal memory
-	  accesses. This support will make BusyBox be considerable larger
-	  and run slower, so you should leave this option disabled unless
-	  you are hunting a hard to find memory problem.
+	Using an additional debugging library will make busybox become
+	considerably larger and will cause it to run more slowly. You
+	should always leave this option disabled for production use.
+
+	dmalloc support:
+	----------------
+	This enables compiling with dmalloc ( http://dmalloc.com/ )
+	which is an excellent public domain mem leak and malloc problem
+	detector. To enable dmalloc, before running busybox you will
+	want to properly set your environment, for example:
+		export DMALLOC_OPTIONS=debug=0x34f47d83,inter=100,log=logfile
+	The 'debug=' value is generated using the following command
+	dmalloc -p log-stats -p log-non-free -p log-bad-space \
+		-p log-elapsed-time -p check-fence -p check-heap \
+		-p check-lists -p check-blank -p check-funcs -p realloc-copy \
+		-p allow-free-null
+
+	Electric-fence support:
+	-----------------------
+	This enables compiling with Electric-fence support. Electric
+	fence is another very useful malloc debugging library which uses
+	your computer's virtual memory hardware to detect illegal memory
+	accesses. This support will make busybox be considerably larger
+	and run slower, so you should leave this option disabled unless
+	you are hunting a hard to find memory problem.
 
 
 config NO_DEBUG_LIB
@@ -686,16 +681,17 @@ config EFENCE
 
 endchoice
 
-endmenu
-
 source libbb/Config.in
 
+endmenu
+
 comment "Applets"
 
 source archival/Config.in
 source coreutils/Config.in
 source console-tools/Config.in
 source debianutils/Config.in
+source klibc-utils/Config.in
 source editors/Config.in
 source findutils/Config.in
 source init/Config.in
diff -urpN busybox-1.27.2/Makefile busybox-1.28.0/Makefile
--- busybox-1.27.2/Makefile	2017-08-17 12:58:23.000000000 +0200
+++ busybox-1.28.0/Makefile	2018-01-02 06:06:02.000000000 +0100
@@ -1,6 +1,6 @@
 VERSION = 1
-PATCHLEVEL = 27
-SUBLEVEL = 2
+PATCHLEVEL = 28
+SUBLEVEL = 0
 EXTRAVERSION =
 NAME = Unnamed
 
@@ -178,7 +178,7 @@ endif
 # SUBARCH is subsequently ignored.
 
 ifneq ($(CROSS_COMPILE),)
-SUBARCH := $(shell echo $(CROSS_COMPILE) | cut -d- -f1)
+SUBARCH := $(shell echo $(CROSS_COMPILE) | cut -d- -f1 | sed 's:^.*/::g')
 else
 SUBARCH := $(shell uname -m)
 endif
@@ -470,6 +470,7 @@ libs-y		:= \
 		coreutils/ \
 		coreutils/libcoreutils/ \
 		debianutils/ \
+		klibc-utils/ \
 		e2fsprogs/ \
 		editors/ \
 		findutils/ \
@@ -508,6 +509,8 @@ ifeq ($(dot-config),1)
 # To avoid any implicit rule to kick in, define an empty command
 .config .kconfig.d: ;
 
+-include $(srctree)/arch/$(ARCH)/Makefile
+
 # Now we can define CFLAGS etc according to .config
 include $(srctree)/Makefile.flags
 
@@ -531,8 +534,6 @@ endif
 # Defaults busybox but it is usually overridden in the arch makefile
 all: busybox doc
 
--include $(srctree)/arch/$(ARCH)/Makefile
-
 # arch Makefile may override CC so keep this after arch Makefile is included
 #bbox# NOSTDINC_FLAGS += -nostdinc -isystem $(shell $(CC) -print-file-name=include)
 CHECKFLAGS += $(NOSTDINC_FLAGS)
diff -urpN busybox-1.27.2/Makefile.flags busybox-1.28.0/Makefile.flags
--- busybox-1.27.2/Makefile.flags	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/Makefile.flags	2017-07-06 17:14:57.000000000 +0200
@@ -15,7 +15,7 @@ CPPFLAGS += \
 	-include include/autoconf.h \
 	-D_GNU_SOURCE -DNDEBUG \
 	$(if $(CONFIG_LFS),-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64) \
-	-D"BB_VER=KBUILD_STR($(BB_VER))" -DBB_BT=AUTOCONF_TIMESTAMP
+	-D"BB_VER=KBUILD_STR($(BB_VER))"
 
 CFLAGS += $(call cc-option,-Wall,)
 CFLAGS += $(call cc-option,-Wshadow,)
diff -urpN busybox-1.27.2/NOFORK_NOEXEC.lst busybox-1.28.0/NOFORK_NOEXEC.lst
--- busybox-1.27.2/NOFORK_NOEXEC.lst	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/NOFORK_NOEXEC.lst	2017-10-20 10:36:58.000000000 +0200
@@ -0,0 +1,437 @@
+Why an applet can't be NOFORK or NOEXEC?
+
+Why can't be NOFORK:
+interactive: may wait for user input, ^C has to work
+spawner: "tool PROG ARGS" which changes program state and execs - must fork
+changes state: e.g. environment, signal handlers
+leaks: does not free allocated memory or opened fds
+	alloc+xfunc: xmalloc, then xfunc - leaks memory if xfunc dies
+	open+xfunc: opens fd, then calls xfunc - fd is leaked if xfunc dies
+talks to network/serial/etc: it's not known how long the delay can be,
+	it's reasonable to expect it might be many seconds
+	(even if usually it is not), so ^C has to work
+runner: sometimes may run for long(ish) time, and/or works with network:
+	^C has to work (cat BIGFILE, chmod -R, ftpget, nc)
+
+"runners" can become eligible after shell is taught ^C to interrupt NOFORKs,
+need to be inspected that they do not fall into alloc+xfunc, open+xfunc,
+leak categories.
+
+Why can't be NOEXEC:
+suid: runs under different uid - must fork+exec
+if it's important that /proc/PID/cmdline and comm are correct.
+	("pkill sh" killing itself before it kills real "sh" is no fun)
+
+Why shouldn't be NOFORK/NOEXEC:
+rare: not started often enough to bother optimizing (example: poweroff)
+daemon: runs indefinitely; these are also always fit "rare" category
+longterm: often runs for a long time (many seconds), execing makes
+	memory footprint smaller
+complex: no immediately obvious reason why NOFORK wouldn't work,
+	but does some non-obvoius operations (example: fuser, lsof, losetup);
+	detailed audit often turns out that it's a leaker
+hardware: performs unusual hardware ops which may take long,
+	or even hang due to hardware or firmware bugs
+
+Interesting example of "interactive" applet which is nevertheless can be
+(and is) NOEXEC is "rm". Yes, "rm -i" is interactive - but it's not that typical
+for users to keep it waiting for many minutes, whereas running "rm" in shell
+is very typical, and speeding up this common use via NOEXEC is useful.
+IOW: rm is "interactive", but not "longterm".
+
+Interesting example of an applet which can be NOFORK but if not,
+then should not be NOEXEC, is "usleep". As NOFORK, it amount to simply
+nanosleep()ing in the calling program (usually shell). No memory wasted.
+But if ran as NOEXEC, it would create a potentially long-term process,
+which would be taking more memory because it did not exec
+and did not free much of the copied memory of the parent
+(COW helps with this only as long as parent doesn't modify its memory).
+
+
+[ - NOFORK
+[[ - NOFORK
+acpid - daemon
+add-shell - noexec. leaks: open+xfunc
+addgroup - noexec. leaks
+adduser - noexec. leaks
+adjtimex - NOFORK
+ar - runner
+arch - NOFORK
+arp - talks to network: arp -n queries DNS
+arping - longterm
+ash - interactive, longterm
+awk - noexec. runner
+base64 - runner
+basename - NOFORK
+beep - longterm: beep -r 999999999
+blkdiscard - noexec. leaks: open+xioctl
+blkid - noexec
+blockdev - noexec. leaks fd
+bootchartd - daemon
+brctl - noexec
+bunzip2 - runner
+bzcat - runner
+bzip2 - runner
+cal - runner: cal -n9999
+cat - runner: cat HUGEFILE
+chat - longterm (when used as intended - talking to modem over stdin/out)
+chattr - noexec. runner
+chgrp - noexec. runner
+chmod - noexec. runner
+chown - noexec. runner
+chpasswd - longterm? (list of "user:password"s from stdin)
+chpst - noexec. spawner
+chroot - noexec. spawner
+chrt - noexec. spawner
+chvt - noexec. leaks: get_console_fd_or_die() may open a new fd, or return one of stdio fds
+cksum - noexec. runner
+clear - NOFORK
+cmp - runner
+comm - runner
+conspy - interactive, longterm
+cp - noexec. runner
+cpio - runner
+crond - daemon
+crontab - longterm (runs $EDITOR), leaks: open+xasprintf
+cryptpw - noexec. changes state: with --password-fd=N, moves N to stdin
+cttyhack - noexec. spawner
+cut - noexec. runner
+date - noexec. nofork candidate(needs to stop messing up env, free xasprintf result, not use xfuncs after xasprintf)
+dc - longterm (eats stdin if no params)
+dd - noexec. runner
+deallocvt - noexec. leaks: get_console_fd_or_die() may open a new fd, or return one of stdio fds
+delgroup - noexec. leaks
+deluser - noexec. leaks
+depmod - longterm(ish)
+devmem - hardware (access to device memory may hang)
+df - noexec. leaks: nested allocs
+dhcprelay - daemon
+diff - runner
+dirname - NOFORK
+dmesg - runner
+dnsd - daemon
+dnsdomainname - noexec. talks to network (may query DNS)
+dos2unix - noexec. runner
+dpkg - runner
+du - runner
+dumpkmap - noexec. leaks: get_console_fd_or_die() may open a new fd, or return one of stdio fds
+dumpleases - noexec. leaks: open+xread
+echo - NOFORK
+ed - interactive, longterm
+egrep - longterm runner ("CMD | egrep ..."  may run indefinitely, better to exec to conserve memory)
+eject - hardware, leaks: open+ioctl_or_perror_and_die, changes state (moves fds)
+env - noexec. spawner, changes state (env)
+envdir - noexec. spawner
+envuidgid - noexec. spawner
+expand - runner
+expr - noexec. leaks: nested allocs
+factor - longterm (eats stdin if no params)
+fakeidentd - daemon
+false - NOFORK
+fatattr - noexec. leaks: open+xioctl, complex
+fbset - hardware, leaks: open+xfunc
+fbsplash - runner, longterm
+fdflush - hardware, leaks: open+ioctl_or_perror_and_die
+fdformat - hardware, longterm
+fdisk - interactive, longterm
+fgconsole - noexec. leaks: get_console_fd_or_die() may open a new fd, or return one of stdio fds
+fgrep - longterm runner ("CMD | fgrep ..."  may run indefinitely, better to exec to conserve memory)
+find - noexec. runner
+findfs - suid
+flash_eraseall - hardware
+flash_lock - hardware
+flash_unlock - hardware
+flashcp - hardware
+flock - spawner, changes state (file locks), let's play safe and not be noexec
+fold - noexec. runner
+free - NOFORK
+freeramdisk - noexec. leaks: open+ioctl_or_perror_and_die
+fsck - interactive, longterm
+fsck.minix - needs ^C
+fsfreeze - noexec. leaks: open+xioctl
+fstrim - noexec. leaks: open+xioctl, find_block_device -> readdir+xstrdup
+fsync - NOFORK
+ftpd - daemon
+ftpget - runner
+ftpput - runner
+fuser - complex
+getopt - noexec. leaks: many allocs
+getty - interactive, longterm
+grep - longterm runner ("CMD | grep ..."  may run indefinitely, better to exec to conserve memory)
+groups - noexec
+gunzip - runner
+gzip - runner
+halt - rare
+hd - noexec. runner
+hdparm - hardware
+head - noexec. runner
+hexdump - noexec. runner
+hexedit - interactive, longterm
+hostid - NOFORK
+hostname - noexec. talks to network (hostname -d may query DNS)
+httpd - daemon
+hush - interactive, longterm
+hwclock - hardware (xioctl(RTC_RD_TIME))
+i2cdetect - hardware
+i2cdump - hardware
+i2cget - hardware
+i2cset - hardware
+id - noexec
+ifconfig - hardware? (mem_start NN io_addr NN irq NN), leaks: xsocket+ioctl_or_perror_and_die
+ifenslave - noexec. leaks: xsocket+bb_perror_msg_and_die
+ifplugd - daemon
+inetd - daemon
+init - daemon
+inotifyd - daemon
+insmod - noexec
+install - runner
+ionice - noexec. spawner
+iostat - longterm: "iostat 1" runs indefinitely
+ip - noexec
+ipaddr - noexec
+ipcalc - noexec. ipcalc -h talks to network
+ipcrm - noexec
+ipcs - noexec
+iplink - noexec
+ipneigh - noexec
+iproute - noexec
+iprule - noexec
+iptunnel - noexec
+kbd_mode - noexec. leaks: xopen_nonblocking+xioctl
+kill - NOFORK
+killall - NOFORK
+killall5 - NOFORK
+klogd - daemon
+last - runner (I've got 1300 lines of output when tried it)
+less - interactive, longterm
+link - NOFORK
+linux32 - noexec. spawner
+linux64 - noexec. spawner
+linuxrc - daemon
+ln - noexec
+loadfont - noexec. leaks: config_open+bb_error_msg_and_die("map format")
+loadkmap - noexec. leaks: get_console_fd_or_die() may open a new fd, or return one of stdio fds
+logger - runner
+login - suid, interactive, longterm
+logname - NOFORK
+losetup - noexec. complex
+lpd - daemon
+lpq - runner
+lpr - runner
+ls - noexec. runner
+lsattr - noexec. runner
+lsmod - noexec
+lsof - complex
+lspci - noexec. too rare to bother for nofork
+lsscsi - noexec. too rare to bother for nofork
+lsusb - noexec. too rare to bother for nofork
+lzcat - runner
+lzma - runner
+lzop - runner
+lzopcat - runner
+makedevs - noexec
+makemime - runner
+man - spawner, interactive, longterm
+md5sum - noexec. runner
+mdev - daemon
+mesg - NOFORK
+microcom - interactive, longterm
+minips - noexec
+mkdir - NOFORK
+mkdosfs - needs ^C
+mke2fs - needs ^C
+mkfifo - noexec
+mkfs.ext2 - needs ^C
+mkfs.minix - needs ^C
+mkfs.vfat - needs ^C
+mknod - noexec
+mkpasswd - noexec. changes state: with --password-fd=N, moves N to stdin
+mkswap - needs ^C
+mktemp - noexec. leaks: xstrdup+concat_path_file
+modinfo - noexec
+modprobe - noexec
+more - interactive, longterm
+mount - suid
+mountpoint - noexec. leaks: option -n "print dev name": find_block_device -> readdir+xstrdup
+mpstat - longterm: "mpstat 1" runs indefinitely
+mt - hardware
+mv - noexec candidate, runner
+nameif - noexec. openlog(), leaks: config_open2+ioctl_or_perror_and_die
+nbd-client - noexec
+nc - runner
+netstat - longterm with -c (continuous listing)
+nice - noexec. spawner
+nl - runner
+nmeter - longterm
+nohup - noexec. spawner
+nproc - NOFORK
+ntpd - daemon
+nuke - noexec
+od - runner
+openvt - longterm: spawns a child and waits for it
+partprobe - noexec. leaks: open+ioctl_or_perror_and_die(BLKRRPART)
+passwd - suid
+paste - noexec. runner
+patch - needs ^C
+pgrep - must fork+exec to get correct /proc/PID/cmdline and comm field
+pidof - must fork+exec to get correct /proc/PID/cmdline and comm field
+ping - suid, longterm
+ping6 - suid, longterm
+pipe_progress - longterm
+pivot_root - NOFORK
+pkill - must fork+exec to get correct /proc/PID/cmdline and comm field
+pmap - noexec candidate, leaks: open+xstrdup
+popmaildir - runner
+poweroff - rare
+powertop - interactive, longterm
+printenv - NOFORK
+printf - NOFORK
+ps - noexec
+pscan - talks to network
+pstree - noexec
+pwd - NOFORK
+pwdx - NOFORK
+raidautorun - noexec. very simple. leaks: open+xioctl
+rdate - talks to network
+rdev - noexec. leaks: find_block_device -> readdir+xstrdup
+readlink - NOFORK
+readprofile - reads /boot/System.map and /proc/profile, better to free more memory by execing?
+realpath - NOFORK
+reboot - rare
+reformime - runner
+remove-shell - noexec. leaks: open+xfunc
+renice - noexec. nofork candidate(uses getpwnam, is that ok?)
+reset - noexec. spawner (execs "stty")
+resize - noexec. changes state (signal handlers)
+resume - noexec
+rev - runner
+rm - noexec. rm -i interactive
+rmdir - NOFORK
+rmmod - noexec
+route - talks to network (may query DNS to convert IPs to names)
+rpm - runner
+rpm2cpio - runner
+rtcwake - longterm: puts system to sleep, optimizing this for speed is pointless
+run-init - spawner, rare, changes state (oh yes), execing may be important to free binary's inode
+run-parts - longterm
+runlevel - noexec. can be nofork if "endutxent()" is called unconditionally, but too rare to bother?
+runsv - daemon
+runsvdir - daemon
+rx - runner
+script - longterm: pumps script output from slave pty
+scriptreplay - longterm: plays back "script" saved output, sleeping as necessary.
+sed - runner
+sendmail - runner
+seq - noexec. runner
+setarch - noexec. spawner
+setconsole - noexec
+setfattr - noexec
+setfont - noexec. leaks a lot of stuff
+setkeycodes - noexec
+setlogcons - noexec
+setpriv - spawner, changes state, let's play safe and not be noexec
+setserial - noexec
+setsid - spawner, uses fork_or_rexec() [not audited to work in noexec], let's play safe and not be noexec
+setuidgid - noexec. spawner
+sha1sum - noexec. runner
+sha256sum - noexec. runner
+sha3sum - noexec. runner
+sha512sum - noexec. runner
+showkey - interactive, longterm
+shred - runner
+shuf - noexec. runner
+slattach - longterm (may sleep forever), uses bb_common_bufsiz1
+sleep - longterm. Could be nofork, if not the problem of "killall sleep" not killing it.
+smemcap - runner
+softlimit - noexec. spawner
+sort - noexec. runner
+split - runner
+ssl_client - longterm
+start-stop-daemon - not noexec: uses bb_common_bufsiz1
+stat - noexec. nofork candidate(needs fewer allocs)
+strings - runner
+stty - noexec. nofork candidate: has no allocs or opens except xmove_fd(xopen("-F DEVICE"),STDIN). tcsetattr(STDIN) is not a problem: it would work the same across processes sharing this fd
+su - suid, spawner
+sulogin - noexec. spawner
+sum - runner
+sv - noexec. needs ^C (uses usleep(420000))
+svc - noexec. needs ^C (uses usleep(420000))
+svlogd - daemon
+swapoff - longterm: may cause memory pressure, execing is beneficial
+swapon - rare
+switch_root - spawner, rare, changes state (oh yes), execing may be important to free binary's inode
+sync - NOFORK
+sysctl - noexec. leaks: xstrdup+xmalloc_read
+syslogd - daemon
+tac - noexec. runner
+tail - runner
+tar - runner
+taskset - noexec. spawner
+tcpsvd - daemon
+tee - runner
+telnet - interactive, longterm
+telnetd - daemon
+test - NOFORK
+tftp - runner
+tftpd - daemon
+time - spawner, longterm, changes state (signals)
+timeout - spawner, longterm, changes state (signals)
+top - interactive, longterm
+touch - NOFORK
+tr - runner
+traceroute - suid, longterm
+traceroute6 - suid, longterm
+true - NOFORK
+truncate - NOFORK
+tty - NOFORK
+ttysize - NOFORK
+tunctl - noexec
+tune2fs - noexec. leaks: open+xfunc
+ubiattach - hardware
+ubidetach - hardware
+ubimkvol - hardware
+ubirename - hardware
+ubirmvol - hardware
+ubirsvol - hardware
+ubiupdatevol - hardware
+udhcpc - daemon
+udhcpd - daemon
+udpsvd - daemon
+uevent - daemon
+umount - noexec. leaks: nested xmalloc
+uname - NOFORK
+uncompress - runner
+unexpand - runner
+uniq - runner
+unix2dos - noexec. runner
+unlink - NOFORK
+unlzma - runner
+unlzop - runner
+unxz - runner
+unzip - runner
+uptime - noexec. nofork candidate(is getutxent ok?)
+users - noexec. nofork candidate(is getutxent ok?)
+usleep - NOFORK. But what about "killall usleep"?
+uudecode - runner
+uuencode - runner
+vconfig - noexec. leaks: xsocket+ioctl_or_perror_and_die
+vi - interactive, longterm
+vlock - suid
+volname - hardware (reads CDROM, this can take long-ish if need to spin up)
+w - noexec. nofork candidate(is getutxent ok?)
+wall - suid
+watch - longterm
+watchdog - daemon
+wc - runner
+wget - longterm
+which - NOFORK
+who - noexec. nofork candidate(is getutxent ok?)
+whoami - NOFORK
+whois - talks to network
+xargs - noexec. spawner
+xxd - noexec. runner
+xz - runner
+xzcat - runner
+yes - noexec. runner
+zcat - runner
+zcip - daemon
diff -urpN busybox-1.27.2/TODO busybox-1.28.0/TODO
--- busybox-1.27.2/TODO	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/TODO	2017-07-29 23:01:53.000000000 +0200
@@ -224,8 +224,6 @@ Minor stuff:
 ---
   support start-stop-daemon -d <chdir-path>
 ---
-vdprintf() -> similar sized functionality
----
 
 (TODO list after discussion 11.05.2009)
 
diff -urpN busybox-1.27.2/arch/sparc/Makefile busybox-1.28.0/arch/sparc/Makefile
--- busybox-1.27.2/arch/sparc/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/arch/sparc/Makefile	2017-07-24 18:57:09.000000000 +0200
@@ -0,0 +1,11 @@
+# When building a library, even intra-library references,
+# such as from find_applet_by_name() to applet_names[],
+# don't work with -fpic on sparc, needs -fPIC.
+# Don't know why it fails in this case but works when
+# a binary is being built.
+#
+# (if is superfluous, ARCH_FPIC is only used by library build, but it
+# demonstrates the point: non-pic binary does not need it)
+ifeq ($(CONFIG_BUILD_LIBBUSYBOX),y)
+ARCH_FPIC = -fPIC
+endif
diff -urpN busybox-1.27.2/arch/sparc64/Makefile busybox-1.28.0/arch/sparc64/Makefile
--- busybox-1.27.2/arch/sparc64/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/arch/sparc64/Makefile	2017-07-24 18:57:09.000000000 +0200
@@ -0,0 +1,11 @@
+# When building a library, even intra-library references,
+# such as from find_applet_by_name() to applet_names[],
+# don't work with -fpic on sparc, needs -fPIC.
+# Don't know why it fails in this case but works when
+# a binary is being built.
+#
+# (if is superfluous, ARCH_FPIC is only used by library build, but it
+# demonstrates the point: non-pic binary does not need it)
+ifeq ($(CONFIG_BUILD_LIBBUSYBOX),y)
+ARCH_FPIC = -fPIC
+endif
diff -urpN busybox-1.27.2/archival/Config.src busybox-1.28.0/archival/Config.src
--- busybox-1.27.2/archival/Config.src	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/Config.src	2017-07-24 18:57:09.000000000 +0200
@@ -27,4 +27,12 @@ config FEATURE_SEAMLESS_Z
 
 INSERT
 
+config FEATURE_LZMA_FAST
+	bool "Optimize lzma for speed"
+	default n
+	depends on UNLZMA || LZCAT || LZMA || FEATURE_SEAMLESS_LZMA
+	help
+	This option reduces decompression time by about 25% at the cost of
+	a 1K bigger binary.
+
 endmenu
diff -urpN busybox-1.27.2/archival/ar.c busybox-1.28.0/archival/ar.c
--- busybox-1.27.2/archival/ar.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/ar.c	2017-10-05 11:53:08.000000000 +0200
@@ -16,38 +16,36 @@
  * between different systems
  * http://www.unix-systems.org/single_unix_specification_v2/xcu/ar.html
  */
-
 //config:config AR
-//config:	bool "ar"
+//config:	bool "ar (9.5 kb)"
 //config:	default n  # needs to be improved to be able to replace binutils ar
 //config:	help
-//config:	  ar is an archival utility program used to create, modify, and
-//config:	  extract contents from archives. In practice, it is used exclusively
-//config:	  for object module archives used by compilers.
-//config:
-//config:	  On an x86 system, the ar applet adds about 1K.
+//config:	ar is an archival utility program used to create, modify, and
+//config:	extract contents from archives. In practice, it is used exclusively
+//config:	for object module archives used by compilers.
 //config:
-//config:	  Unless you have a specific application which requires ar, you should
-//config:	  probably say N here: most compilers come with their own ar utility.
+//config:	Unless you have a specific application which requires ar, you should
+//config:	probably say N here: most compilers come with their own ar utility.
 //config:
 //config:config FEATURE_AR_LONG_FILENAMES
 //config:	bool "Support long filenames (not needed for debs)"
 //config:	default y
 //config:	depends on AR
 //config:	help
-//config:	  By default the ar format can only store the first 15 characters
-//config:	  of the filename, this option removes that limitation.
-//config:	  It supports the GNU ar long filename method which moves multiple long
-//config:	  filenames into a the data section of a new ar entry.
+//config:	By default the ar format can only store the first 15 characters
+//config:	of the filename, this option removes that limitation.
+//config:	It supports the GNU ar long filename method which moves multiple long
+//config:	filenames into a the data section of a new ar entry.
 //config:
 //config:config FEATURE_AR_CREATE
 //config:	bool "Support archive creation"
 //config:	default y
 //config:	depends on AR
 //config:	help
-//config:	  This enables archive creation (-c and -r) with busybox ar.
+//config:	This enables archive creation (-c and -r) with busybox ar.
 
 //applet:IF_AR(APPLET(ar, BB_DIR_USR_BIN, BB_SUID_DROP))
+
 //kbuild:lib-$(CONFIG_AR) += ar.o
 
 //usage:#define ar_trivial_usage
@@ -242,11 +240,16 @@ int ar_main(int argc UNUSED_PARAM, char
 
 	archive_handle = init_handle();
 
-	/* --: prepend '-' to the first argument if required */
-	/* -1: at least one param is reqd */
-	/* one of p,t,x[,r] is required */
-	opt_complementary = "--:-1:p:t:x"IF_FEATURE_AR_CREATE(":r");
-	opt = getopt32(argv, "voc""ptx"IF_FEATURE_AR_CREATE("r"));
+	/* prepend '-' to the first argument if required */
+	if (argv[1] && argv[1][0] != '-' && argv[1][0] != '\0')
+		argv[1] = xasprintf("-%s", argv[1]);
+	opt = getopt32(argv, "^"
+		"voc""ptx"IF_FEATURE_AR_CREATE("r")
+		"\0"
+		/* -1: at least one arg is reqd */
+		/* one of p,t,x[,r] is required */
+		"-1:p:t:x"IF_FEATURE_AR_CREATE(":r")
+	);
 	argv += optind;
 
 	t = opt / FIRST_CMD;
diff -urpN busybox-1.27.2/archival/bbunzip.c busybox-1.28.0/archival/bbunzip.c
--- busybox-1.27.2/archival/bbunzip.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/archival/bbunzip.c	2017-10-05 11:53:08.000000000 +0200
@@ -4,9 +4,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-#include "libbb.h"
-#include "bb_archive.h"
-
 //kbuild:lib-$(CONFIG_ZCAT) += bbunzip.o
 //kbuild:lib-$(CONFIG_GUNZIP) += bbunzip.o
 //kbuild:lib-$(CONFIG_BZCAT) += bbunzip.o
@@ -21,6 +18,9 @@
 /* gzip_main() too: */
 //kbuild:lib-$(CONFIG_GZIP) += bbunzip.o
 
+#include "libbb.h"
+#include "bb_archive.h"
+
 /* Note: must be kept in sync with archival/lzop.c */
 enum {
 	OPT_STDOUT     = 1 << 0,
@@ -237,11 +237,11 @@ char* FAST_FUNC make_new_name_generic(ch
 //usage:     "\n	-f	Overwrite"
 
 //config:config UNCOMPRESS
-//config:	bool "uncompress"
+//config:	bool "uncompress (7.1 kb)"
 //config:	default n  # ancient
 //config:	help
-//config:	  uncompress is used to decompress archives created by compress.
-//config:	  Not much used anymore, replaced by gzip/gunzip.
+//config:	uncompress is used to decompress archives created by compress.
+//config:	Not much used anymore, replaced by gzip/gunzip.
 
 //applet:IF_UNCOMPRESS(APPLET(uncompress, BB_DIR_BIN, BB_SUID_DROP))
 //kbuild:lib-$(CONFIG_UNCOMPRESS) += bbunzip.o
@@ -312,20 +312,20 @@ int uncompress_main(int argc UNUSED_PARA
 //usage:       "Decompress to stdout"
 
 //config:config GUNZIP
-//config:	bool "gunzip"
+//config:	bool "gunzip (12 kb)"
 //config:	default y
 //config:	select FEATURE_GZIP_DECOMPRESS
 //config:	help
-//config:	  gunzip is used to decompress archives created by gzip.
-//config:	  You can use the `-t' option to test the integrity of
-//config:	  an archive, without decompressing it.
+//config:	gunzip is used to decompress archives created by gzip.
+//config:	You can use the '-t' option to test the integrity of
+//config:	an archive, without decompressing it.
 //config:
 //config:config ZCAT
-//config:	bool "zcat"
+//config:	bool "zcat (25 kb)"
 //config:	default y
 //config:	select FEATURE_GZIP_DECOMPRESS
 //config:	help
-//config:	  Alias to "gunzip -c".
+//config:	Alias to "gunzip -c".
 //config:
 //config:config FEATURE_GUNZIP_LONG_OPTIONS
 //config:	bool "Enable long options"
@@ -389,16 +389,17 @@ int gunzip_main(int argc, char **argv) M
 int gunzip_main(int argc UNUSED_PARAM, char **argv)
 {
 #if ENABLE_FEATURE_GUNZIP_LONG_OPTIONS
-	applet_long_options = gunzip_longopts;
-#endif
+	getopt32long(argv, "cfkvqdtn", gunzip_longopts);
+#else
 	getopt32(argv, "cfkvqdtn");
+#endif
 	argv += optind;
 
 	/* If called as zcat...
 	 * Normally, "zcat" is just "gunzip -c".
 	 * But if seamless magic is enabled, then we are much more clever.
 	 */
-	if (ENABLE_ZCAT && applet_name[1] == 'c')
+	if (ENABLE_ZCAT && (!ENABLE_GUNZIP || applet_name[1] == 'c'))
 		option_mask32 |= OPT_STDOUT | SEAMLESS_MAGIC;
 
 	return bbunpack(argv, unpack_gz_stream, make_new_name_gunzip, /*unused:*/ NULL);
@@ -425,25 +426,25 @@ int gunzip_main(int argc UNUSED_PARAM, c
 //usage:       "Decompress to stdout"
 
 //config:config BUNZIP2
-//config:	bool "bunzip2"
+//config:	bool "bunzip2 (8.8 kb)"
 //config:	default y
 //config:	select FEATURE_BZIP2_DECOMPRESS
 //config:	help
-//config:	  bunzip2 is a compression utility using the Burrows-Wheeler block
-//config:	  sorting text compression algorithm, and Huffman coding. Compression
-//config:	  is generally considerably better than that achieved by more
-//config:	  conventional LZ77/LZ78-based compressors, and approaches the
-//config:	  performance of the PPM family of statistical compressors.
+//config:	bunzip2 is a compression utility using the Burrows-Wheeler block
+//config:	sorting text compression algorithm, and Huffman coding. Compression
+//config:	is generally considerably better than that achieved by more
+//config:	conventional LZ77/LZ78-based compressors, and approaches the
+//config:	performance of the PPM family of statistical compressors.
 //config:
-//config:	  Unless you have a specific application which requires bunzip2, you
-//config:	  should probably say N here.
+//config:	Unless you have a specific application which requires bunzip2, you
+//config:	should probably say N here.
 //config:
 //config:config BZCAT
-//config:	bool "bzcat"
+//config:	bool "bzcat (8.8 kb)"
 //config:	default y
 //config:	select FEATURE_BZIP2_DECOMPRESS
 //config:	help
-//config:	  Alias to "bunzip2 -c".
+//config:	Alias to "bunzip2 -c".
 
 //applet:IF_BUNZIP2(APPLET(bunzip2, BB_DIR_USR_BIN, BB_SUID_DROP))
 //                APPLET_ODDNAME:name   main     location        suid_type     help
@@ -454,7 +455,7 @@ int bunzip2_main(int argc UNUSED_PARAM,
 {
 	getopt32(argv, "cfkvqdt");
 	argv += optind;
-	if (ENABLE_BZCAT && applet_name[2] == 'c') /* bzcat */
+	if (ENABLE_BZCAT && (!ENABLE_BUNZIP2 || applet_name[2] == 'c')) /* bzcat */
 		option_mask32 |= OPT_STDOUT;
 
 	return bbunpack(argv, unpack_bz2_stream, make_new_name_generic, "bz2");
@@ -493,43 +494,26 @@ int bunzip2_main(int argc UNUSED_PARAM,
 //usage:       "Decompress to stdout"
 
 //config:config UNLZMA
-//config:	bool "unlzma"
+//config:	bool "unlzma (8.6 kb)"
 //config:	default y
 //config:	help
-//config:	  unlzma is a compression utility using the Lempel-Ziv-Markov chain
-//config:	  compression algorithm, and range coding. Compression
-//config:	  is generally considerably better than that achieved by the bzip2
-//config:	  compressors.
-//config:
-//config:	  The BusyBox unlzma applet is limited to decompression only.
-//config:	  On an x86 system, this applet adds about 4K.
+//config:	unlzma is a compression utility using the Lempel-Ziv-Markov chain
+//config:	compression algorithm, and range coding. Compression
+//config:	is generally considerably better than that achieved by the bzip2
+//config:	compressors.
 //config:
 //config:config LZCAT
-//config:	bool "lzcat"
+//config:	bool "lzcat (8.5 kb)"
 //config:	default y
 //config:	help
-//config:	  unlzma is a compression utility using the Lempel-Ziv-Markov chain
-//config:	  compression algorithm, and range coding. Compression
-//config:	  is generally considerably better than that achieved by the bzip2
-//config:	  compressors.
-//config:
-//config:	  The BusyBox unlzma applet is limited to decompression only.
-//config:	  On an x86 system, this applet adds about 4K.
+//config:	Alias to "unlzma -c".
 //config:
 //config:config LZMA
 //config:	bool "lzma -d"
 //config:	default y
 //config:	help
-//config:	  Enable this option if you want commands like "lzma -d" to work.
-//config:	  IOW: you'll get lzma applet, but it will always require -d option.
-//config:
-//config:config FEATURE_LZMA_FAST
-//config:	bool "Optimize for speed"
-//config:	default n
-//config:	depends on UNLZMA || LZCAT || LZMA
-//config:	help
-//config:	  This option reduces decompression time by about 25% at the cost of
-//config:	  a 1K bigger binary.
+//config:	Enable this option if you want commands like "lzma -d" to work.
+//config:	IOW: you'll get lzma applet, but it will always require -d option.
 
 //applet:IF_UNLZMA(APPLET(unlzma, BB_DIR_USR_BIN, BB_SUID_DROP))
 //                APPLET_ODDNAME:name   main    location        suid_type     help
@@ -581,23 +565,23 @@ int unlzma_main(int argc UNUSED_PARAM, c
 //usage:       "Decompress to stdout"
 
 //config:config UNXZ
-//config:	bool "unxz"
+//config:	bool "unxz (13 kb)"
 //config:	default y
 //config:	help
-//config:	  unxz is a unlzma successor.
+//config:	unxz is a unlzma successor.
 //config:
 //config:config XZCAT
-//config:	bool "xzcat"
+//config:	bool "xzcat (13 kb)"
 //config:	default y
 //config:	help
-//config:	  Alias to "unxz -c".
+//config:	Alias to "unxz -c".
 //config:
 //config:config XZ
 //config:	bool "xz -d"
 //config:	default y
 //config:	help
-//config:	  Enable this option if you want commands like "xz -d" to work.
-//config:	  IOW: you'll get xz applet, but it will always require -d option.
+//config:	Enable this option if you want commands like "xz -d" to work.
+//config:	IOW: you'll get xz applet, but it will always require -d option.
 
 //applet:IF_UNXZ(APPLET(unxz, BB_DIR_USR_BIN, BB_SUID_DROP))
 //                APPLET_ODDNAME:name   main  location        suid_type     help
diff -urpN busybox-1.27.2/archival/bzip2.c busybox-1.28.0/archival/bzip2.c
--- busybox-1.27.2/archival/bzip2.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/bzip2.c	2017-10-05 11:53:08.000000000 +0200
@@ -6,30 +6,30 @@
  * See README and LICENSE files in bz/ directory for more information
  * about bzip2 library code.
  */
-
 //config:config BZIP2
-//config:	bool "bzip2"
+//config:	bool "bzip2 (18 kb)"
 //config:	default y
 //config:	help
-//config:	  bzip2 is a compression utility using the Burrows-Wheeler block
-//config:	  sorting text compression algorithm, and Huffman coding. Compression
-//config:	  is generally considerably better than that achieved by more
-//config:	  conventional LZ77/LZ78-based compressors, and approaches the
-//config:	  performance of the PPM family of statistical compressors.
+//config:	bzip2 is a compression utility using the Burrows-Wheeler block
+//config:	sorting text compression algorithm, and Huffman coding. Compression
+//config:	is generally considerably better than that achieved by more
+//config:	conventional LZ77/LZ78-based compressors, and approaches the
+//config:	performance of the PPM family of statistical compressors.
 //config:
-//config:	  Unless you have a specific application which requires bzip2, you
-//config:	  should probably say N here.
+//config:	Unless you have a specific application which requires bzip2, you
+//config:	should probably say N here.
 //config:
 //config:config FEATURE_BZIP2_DECOMPRESS
 //config:	bool "Enable decompression"
 //config:	default y
 //config:	depends on BZIP2 || BUNZIP2 || BZCAT
 //config:	help
-//config:	  Enable -d (--decompress) and -t (--test) options for bzip2.
-//config:	  This will be automatically selected if bunzip2 or bzcat is
-//config:	  enabled.
+//config:	Enable -d (--decompress) and -t (--test) options for bzip2.
+//config:	This will be automatically selected if bunzip2 or bzcat is
+//config:	enabled.
 
 //applet:IF_BZIP2(APPLET(bzip2, BB_DIR_USR_BIN, BB_SUID_DROP))
+
 //kbuild:lib-$(CONFIG_BZIP2) += bzip2.o
 
 //usage:#define bzip2_trivial_usage
@@ -195,9 +195,11 @@ int bzip2_main(int argc UNUSED_PARAM, ch
 	 * --best        alias for -9
 	 */
 
-	opt_complementary = "s2"; /* -s means -2 (compatibility) */
-	/* Must match bbunzip's constants OPT_STDOUT, OPT_FORCE! */
-	opt = getopt32(argv, "cfkv" IF_FEATURE_BZIP2_DECOMPRESS("dt") "123456789qzs");
+	opt = getopt32(argv, "^"
+		/* Must match bbunzip's constants OPT_STDOUT, OPT_FORCE! */
+		"cfkv" IF_FEATURE_BZIP2_DECOMPRESS("dt") "123456789qzs"
+		"\0" "s2" /* -s means -2 (compatibility) */
+	);
 #if ENABLE_FEATURE_BZIP2_DECOMPRESS /* bunzip2_main may not be visible... */
 	if (opt & 0x30) // -d and/or -t
 		return bunzip2_main(argc, argv);
diff -urpN busybox-1.27.2/archival/cpio.c busybox-1.28.0/archival/cpio.c
--- busybox-1.27.2/archival/cpio.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/cpio.c	2017-10-05 11:53:08.000000000 +0200
@@ -10,40 +10,37 @@
  * Doesn't check CRC's
  * Only supports new ASCII and CRC formats
  */
-#include "libbb.h"
-#include "common_bufsiz.h"
-#include "bb_archive.h"
-
 //config:config CPIO
-//config:	bool "cpio"
+//config:	bool "cpio (14 kb)"
 //config:	default y
 //config:	help
-//config:	  cpio is an archival utility program used to create, modify, and
-//config:	  extract contents from archives.
-//config:	  cpio has 110 bytes of overheads for every stored file.
+//config:	cpio is an archival utility program used to create, modify, and
+//config:	extract contents from archives.
+//config:	cpio has 110 bytes of overheads for every stored file.
 //config:
-//config:	  This implementation of cpio can extract cpio archives created in the
-//config:	  "newc" or "crc" format.
+//config:	This implementation of cpio can extract cpio archives created in the
+//config:	"newc" or "crc" format.
 //config:
-//config:	  Unless you have a specific application which requires cpio, you
-//config:	  should probably say N here.
+//config:	Unless you have a specific application which requires cpio, you
+//config:	should probably say N here.
 //config:
 //config:config FEATURE_CPIO_O
 //config:	bool "Support archive creation"
 //config:	default y
 //config:	depends on CPIO
 //config:	help
-//config:	  This implementation of cpio can create cpio archives in the "newc"
-//config:	  format only.
+//config:	This implementation of cpio can create cpio archives in the "newc"
+//config:	format only.
 //config:
 //config:config FEATURE_CPIO_P
 //config:	bool "Support passthrough mode"
 //config:	default y
 //config:	depends on FEATURE_CPIO_O
 //config:	help
-//config:	  Passthrough mode. Rarely used.
+//config:	Passthrough mode. Rarely used.
 
 //applet:IF_CPIO(APPLET(cpio, BB_DIR_BIN, BB_SUID_DROP))
+
 //kbuild:lib-$(CONFIG_CPIO) += cpio.o
 
 //usage:#define cpio_trivial_usage
@@ -142,6 +139,10 @@
   -u, --unconditional        Replace all files unconditionally
  */
 
+#include "libbb.h"
+#include "common_bufsiz.h"
+#include "bb_archive.h"
+
 enum {
 	OPT_EXTRACT            = (1 << 0),
 	OPT_TEST               = (1 << 1),
@@ -360,9 +361,8 @@ int cpio_main(int argc UNUSED_PARAM, cha
 	char *cpio_owner;
 	IF_FEATURE_CPIO_O(const char *cpio_fmt = "";)
 	unsigned opt;
-
 #if ENABLE_LONG_OPTS
-	applet_long_options =
+	const char *long_opts =
 		"extract\0"      No_argument       "i"
 		"list\0"         No_argument       "t"
 #if ENABLE_FEATURE_CPIO_O
@@ -390,9 +390,9 @@ int cpio_main(int argc UNUSED_PARAM, cha
 	/* -L makes sense only with -o or -p */
 
 #if !ENABLE_FEATURE_CPIO_O
-	opt = getopt32(argv, OPTION_STR, &cpio_filename, &cpio_owner);
+	opt = getopt32long(argv, OPTION_STR, long_opts, &cpio_filename, &cpio_owner);
 #else
-	opt = getopt32(argv, OPTION_STR "oH:" IF_FEATURE_CPIO_P("p"),
+	opt = getopt32long(argv, OPTION_STR "oH:" IF_FEATURE_CPIO_P("p"), long_opts,
 		       &cpio_filename, &cpio_owner, &cpio_fmt);
 #endif
 	argv += optind;
diff -urpN busybox-1.27.2/archival/dpkg.c busybox-1.28.0/archival/dpkg.c
--- busybox-1.27.2/archival/dpkg.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/archival/dpkg.c	2017-10-05 11:53:08.000000000 +0200
@@ -25,19 +25,19 @@
  * bugs that need to be fixed
  *  - (unknown, please let me know when you find any)
  */
-
 //config:config DPKG
-//config:	bool "dpkg"
+//config:	bool "dpkg (44 kb)"
 //config:	default y
 //config:	select FEATURE_SEAMLESS_GZ
 //config:	help
-//config:	  dpkg is a medium-level tool to install, build, remove and manage
-//config:	  Debian packages.
+//config:	dpkg is a medium-level tool to install, build, remove and manage
+//config:	Debian packages.
 //config:
-//config:	  This implementation of dpkg has a number of limitations,
-//config:	  you should use the official dpkg if possible.
+//config:	This implementation of dpkg has a number of limitations,
+//config:	you should use the official dpkg if possible.
 
 //applet:IF_DPKG(APPLET(dpkg, BB_DIR_USR_BIN, BB_SUID_DROP))
+
 //kbuild:lib-$(CONFIG_DPKG) += dpkg.o
 
 //usage:#define dpkg_trivial_usage
@@ -1766,8 +1766,7 @@ int dpkg_main(int argc UNUSED_PARAM, cha
 
 	INIT_G();
 
-	IF_LONG_OPTS(applet_long_options = dpkg_longopts);
-	opt = getopt32(argv, "CilPruF:", &str_f);
+	opt = getopt32long(argv, "CilPruF:", dpkg_longopts, &str_f);
 	argv += optind;
 	//if (opt & OPT_configure) ... // -C
 	if (opt & OPT_force) { // -F (--force in official dpkg)
diff -urpN busybox-1.27.2/archival/dpkg_deb.c busybox-1.28.0/archival/dpkg_deb.c
--- busybox-1.27.2/archival/dpkg_deb.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/dpkg_deb.c	2017-10-05 11:53:08.000000000 +0200
@@ -4,18 +4,17 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config DPKG_DEB
 //config:	bool "dpkg_deb"
 //config:	default y
 //config:	select FEATURE_SEAMLESS_GZ
 //config:	help
-//config:	  dpkg-deb unpacks and provides information about Debian archives.
+//config:	dpkg-deb unpacks and provides information about Debian archives.
 //config:
-//config:	  This implementation of dpkg-deb cannot pack archives.
+//config:	This implementation of dpkg-deb cannot pack archives.
 //config:
-//config:	  Unless you have a specific application which requires dpkg-deb,
-//config:	  say N here.
+//config:	Unless you have a specific application which requires dpkg-deb,
+//config:	say N here.
 
 //applet:IF_DPKG_DEB(APPLET_ODDNAME(dpkg-deb, dpkg_deb, BB_DIR_USR_BIN, BB_SUID_DROP, dpkg_deb))
 
@@ -80,8 +79,9 @@ int dpkg_deb_main(int argc UNUSED_PARAM,
 #endif
 
 	/* Must have 1 or 2 args */
-	opt_complementary = "-1:?2:c--efXx:e--cfXx:f--ceXx:X--cefx:x--cefX";
-	opt = getopt32(argv, "cefXx");
+	opt = getopt32(argv, "^" "cefXx"
+			"\0" "-1:?2:c--efXx:e--cfXx:f--ceXx:X--cefx:x--cefX"
+	);
 	argv += optind;
 	//argc -= optind;
 
diff -urpN busybox-1.27.2/archival/gzip.c busybox-1.28.0/archival/gzip.c
--- busybox-1.27.2/archival/gzip.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/gzip.c	2017-10-05 11:53:08.000000000 +0200
@@ -36,13 +36,12 @@ a:       85.1% -- replaced with a.gz
 gzip: bogus: No such file or directory
 aa:      85.1% -- replaced with aa.gz
 */
-
 //config:config GZIP
-//config:	bool "gzip"
+//config:	bool "gzip (19 kb)"
 //config:	default y
 //config:	help
-//config:	  gzip is used to compress files.
-//config:	  It's probably the most widely used UNIX compression program.
+//config:	gzip is used to compress files.
+//config:	It's probably the most widely used UNIX compression program.
 //config:
 //config:config FEATURE_GZIP_LONG_OPTIONS
 //config:	bool "Enable long options"
@@ -55,32 +54,33 @@ aa:      85.1% -- replaced with aa.gz
 //config:	range 0 2
 //config:	depends on GZIP
 //config:	help
-//config:	  Enable big memory options for gzip.
-//config:	  0: small buffers, small hash-tables
-//config:	  1: larger buffers, larger hash-tables
-//config:	  2: larger buffers, largest hash-tables
-//config:	  Larger models may give slightly better compression
+//config:	Enable big memory options for gzip.
+//config:	0: small buffers, small hash-tables
+//config:	1: larger buffers, larger hash-tables
+//config:	2: larger buffers, largest hash-tables
+//config:	Larger models may give slightly better compression
 //config:
 //config:config FEATURE_GZIP_LEVELS
 //config:	bool "Enable compression levels"
 //config:	default n
 //config:	depends on GZIP
 //config:	help
-//config:	  Enable support for compression levels 4-9. The default level
-//config:	  is 6. If levels 1-3 are specified, 4 is used.
-//config:	  If this option is not selected, -N options are ignored and -9
-//config:	  is used.
+//config:	Enable support for compression levels 4-9. The default level
+//config:	is 6. If levels 1-3 are specified, 4 is used.
+//config:	If this option is not selected, -N options are ignored and -9
+//config:	is used.
 //config:
 //config:config FEATURE_GZIP_DECOMPRESS
 //config:	bool "Enable decompression"
 //config:	default y
 //config:	depends on GZIP || GUNZIP || ZCAT
 //config:	help
-//config:	  Enable -d (--decompress) and -t (--test) options for gzip.
-//config:	  This will be automatically selected if gunzip or zcat is
-//config:	  enabled.
+//config:	Enable -d (--decompress) and -t (--test) options for gzip.
+//config:	This will be automatically selected if gunzip or zcat is
+//config:	enabled.
 
 //applet:IF_GZIP(APPLET(gzip, BB_DIR_BIN, BB_SUID_DROP))
+
 //kbuild:lib-$(CONFIG_GZIP) += gzip.o
 
 //usage:#define gzip_trivial_usage
@@ -2216,11 +2216,12 @@ int gzip_main(int argc UNUSED_PARAM, cha
 	SET_PTR_TO_GLOBALS((char *)xzalloc(sizeof(struct globals)+sizeof(struct globals2))
 			+ sizeof(struct globals));
 
-#if ENABLE_FEATURE_GZIP_LONG_OPTIONS
-	applet_long_options = gzip_longopts;
-#endif
 	/* Must match bbunzip's constants OPT_STDOUT, OPT_FORCE! */
+#if ENABLE_FEATURE_GZIP_LONG_OPTIONS
+	opt = getopt32long(argv, "cfkv" IF_FEATURE_GZIP_DECOMPRESS("dt") "qn123456789", gzip_longopts);
+#else
 	opt = getopt32(argv, "cfkv" IF_FEATURE_GZIP_DECOMPRESS("dt") "qn123456789");
+#endif
 #if ENABLE_FEATURE_GZIP_DECOMPRESS /* gunzip_main may not be visible... */
 	if (opt & 0x30) // -d and/or -t
 		return gunzip_main(argc, argv);
diff -urpN busybox-1.27.2/archival/libarchive/Kbuild.src busybox-1.28.0/archival/libarchive/Kbuild.src
--- busybox-1.27.2/archival/libarchive/Kbuild.src	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/Kbuild.src	2017-08-17 13:50:45.000000000 +0200
@@ -12,6 +12,8 @@ COMMON_FILES:= \
 	data_extract_all.o \
 	data_extract_to_stdout.o \
 \
+	unsafe_symlink_target.o \
+\
 	filter_accept_all.o \
 	filter_accept_list.o \
 	filter_accept_reject_list.o \
diff -urpN busybox-1.27.2/archival/libarchive/common.c busybox-1.28.0/archival/libarchive/common.c
--- busybox-1.27.2/archival/libarchive/common.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/common.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/data_align.c busybox-1.28.0/archival/libarchive/data_align.c
--- busybox-1.27.2/archival/libarchive/data_align.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/data_align.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/data_extract_all.c busybox-1.28.0/archival/libarchive/data_extract_all.c
--- busybox-1.27.2/archival/libarchive/data_extract_all.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/data_extract_all.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
@@ -128,10 +127,9 @@ void FAST_FUNC data_extract_all(archive_
 		res = link(hard_link, dst_name);
 		if (res != 0 && !(archive_handle->ah_flags & ARCHIVE_EXTRACT_QUIET)) {
 			/* shared message */
-			bb_perror_msg("can't create %slink "
-					"%s to %s", "hard",
-					dst_name,
-					hard_link);
+			bb_perror_msg("can't create %slink '%s' to '%s'",
+				"hard",	dst_name, hard_link
+			);
 		}
 		/* Hardlinks have no separate mode/ownership, skip chown/chmod */
 		goto ret;
@@ -178,15 +176,39 @@ void FAST_FUNC data_extract_all(archive_
 	case S_IFLNK:
 		/* Symlink */
 //TODO: what if file_header->link_target == NULL (say, corrupted tarball?)
-		res = symlink(file_header->link_target, dst_name);
-		if (res != 0
-		 && !(archive_handle->ah_flags & ARCHIVE_EXTRACT_QUIET)
-		) {
-			/* shared message */
-			bb_perror_msg("can't create %slink "
-				"%s to %s", "sym",
-				dst_name,
-				file_header->link_target);
+
+		/* To avoid a directory traversal attack via symlinks,
+		 * do not restore symlinks with ".." components
+		 * or symlinks starting with "/", unless a magic
+		 * envvar is set.
+		 *
+		 * For example, consider a .tar created via:
+		 *  $ tar cvf bug.tar anything.txt
+		 *  $ ln -s /tmp symlink
+		 *  $ tar --append -f bug.tar symlink
+		 *  $ rm symlink
+		 *  $ mkdir symlink
+		 *  $ tar --append -f bug.tar symlink/evil.py
+		 *
+		 * This will result in an archive that contains:
+		 *  $ tar --list -f bug.tar
+		 *  anything.txt
+		 *  symlink [-> /tmp]
+		 *  symlink/evil.py
+		 *
+		 * Untarring bug.tar would otherwise place evil.py in '/tmp'.
+		 */
+		if (!unsafe_symlink_target(file_header->link_target)) {
+			res = symlink(file_header->link_target, dst_name);
+			if (res != 0
+			 && !(archive_handle->ah_flags & ARCHIVE_EXTRACT_QUIET)
+			) {
+				/* shared message */
+				bb_perror_msg("can't create %slink '%s' to '%s'",
+					"sym",
+					dst_name, file_header->link_target
+				);
+			}
 		}
 		break;
 	case S_IFSOCK:
diff -urpN busybox-1.27.2/archival/libarchive/data_extract_to_command.c busybox-1.28.0/archival/libarchive/data_extract_to_command.c
--- busybox-1.27.2/archival/libarchive/data_extract_to_command.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/data_extract_to_command.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/data_extract_to_stdout.c busybox-1.28.0/archival/libarchive/data_extract_to_stdout.c
--- busybox-1.27.2/archival/libarchive/data_extract_to_stdout.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/data_extract_to_stdout.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/data_skip.c busybox-1.28.0/archival/libarchive/data_skip.c
--- busybox-1.27.2/archival/libarchive/data_skip.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/data_skip.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/decompress_bunzip2.c busybox-1.28.0/archival/libarchive/decompress_bunzip2.c
--- busybox-1.27.2/archival/libarchive/decompress_bunzip2.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/decompress_bunzip2.c	2017-12-04 16:07:47.000000000 +0100
@@ -1,14 +1,14 @@
 /* vi: set sw=4 ts=4: */
-/* Small bzip2 deflate implementation, by Rob Landley (rob@landley.net).
-
-   Based on bzip2 decompression code by Julian R Seward (jseward@acm.org),
-   which also acknowledges contributions by Mike Burrows, David Wheeler,
-   Peter Fenwick, Alistair Moffat, Radford Neal, Ian H. Witten,
-   Robert Sedgewick, and Jon L. Bentley.
-
-   Licensed under GPLv2 or later, see file LICENSE in this source tree.
-*/
-
+/*
+ * Small bzip2 deflate implementation, by Rob Landley (rob@landley.net).
+ *
+ * Based on bzip2 decompression code by Julian R Seward (jseward@acm.org),
+ * which also acknowledges contributions by Mike Burrows, David Wheeler,
+ * Peter Fenwick, Alistair Moffat, Radford Neal, Ian H. Witten,
+ * Robert Sedgewick, and Jon L. Bentley.
+ *
+ * Licensed under GPLv2 or later, see file LICENSE in this source tree.
+ */
 /*
 	Size and speed optimizations by Manuel Novoa III  (mjn3@codepoet.org).
 
@@ -38,7 +38,6 @@
 
 	Manuel
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
@@ -157,15 +156,15 @@ static unsigned get_bits(bunzip_data *bd
 static int get_next_block(bunzip_data *bd)
 {
 	struct group_data *hufGroup;
-	int dbufCount, dbufSize, groupCount, *base, *limit, selector,
-		i, j, runPos, symCount, symTotal, nSelectors, byteCount[256];
-	int runCnt = runCnt; /* for compiler */
+	int groupCount, *base, *limit, selector,
+		i, j, symCount, symTotal, nSelectors, byteCount[256];
 	uint8_t uc, symToByte[256], mtfSymbol[256], *selectors;
 	uint32_t *dbuf;
 	unsigned origPtr, t;
+	unsigned dbufCount, runPos;
+	unsigned runCnt = runCnt; /* for compiler */
 
 	dbuf = bd->dbuf;
-	dbufSize = bd->dbufSize;
 	selectors = bd->selectors;
 
 /* In bbox, we are ok with aborting through setjmp which is set up in start_bunzip */
@@ -188,7 +187,7 @@ static int get_next_block(bunzip_data *b
 	   it didn't actually work. */
 	if (get_bits(bd, 1)) return RETVAL_OBSOLETE_INPUT;
 	origPtr = get_bits(bd, 24);
-	if ((int)origPtr > dbufSize) return RETVAL_DATA_ERROR;
+	if (origPtr > bd->dbufSize) return RETVAL_DATA_ERROR;
 
 	/* mapping table: if some byte values are never used (encoding things
 	   like ascii text), the compression code removes the gaps to have fewer
@@ -436,7 +435,14 @@ static int get_next_block(bunzip_data *b
 			   symbols, but a run of length 0 doesn't mean anything in this
 			   context).  Thus space is saved. */
 			runCnt += (runPos << nextSym); /* +runPos if RUNA; +2*runPos if RUNB */
-			if (runPos < dbufSize) runPos <<= 1;
+//The 32-bit overflow of runCnt wasn't yet seen, but probably can happen.
+//This would be the fix (catches too large count way before it can overflow):
+//			if (runCnt > bd->dbufSize) {
+//				dbg("runCnt:%u > dbufSize:%u RETVAL_DATA_ERROR",
+//						runCnt, bd->dbufSize);
+//				return RETVAL_DATA_ERROR;
+//			}
+			if (runPos < bd->dbufSize) runPos <<= 1;
 			goto end_of_huffman_loop;
 		}
 
@@ -446,14 +452,15 @@ static int get_next_block(bunzip_data *b
 		   literal used is the one at the head of the mtfSymbol array.) */
 		if (runPos != 0) {
 			uint8_t tmp_byte;
-			if (dbufCount + runCnt > dbufSize) {
-				dbg("dbufCount:%d+runCnt:%d %d > dbufSize:%d RETVAL_DATA_ERROR",
-						dbufCount, runCnt, dbufCount + runCnt, dbufSize);
+			if (dbufCount + runCnt > bd->dbufSize) {
+				dbg("dbufCount:%u+runCnt:%u %u > dbufSize:%u RETVAL_DATA_ERROR",
+						dbufCount, runCnt, dbufCount + runCnt, bd->dbufSize);
 				return RETVAL_DATA_ERROR;
 			}
 			tmp_byte = symToByte[mtfSymbol[0]];
 			byteCount[tmp_byte] += runCnt;
-			while (--runCnt >= 0) dbuf[dbufCount++] = (uint32_t)tmp_byte;
+			while ((int)--runCnt >= 0)
+				dbuf[dbufCount++] = (uint32_t)tmp_byte;
 			runPos = 0;
 		}
 
@@ -467,7 +474,7 @@ static int get_next_block(bunzip_data *b
 		   first symbol in the mtf array, position 0, would have been handled
 		   as part of a run above.  Therefore 1 unused mtf position minus
 		   2 non-literal nextSym values equals -1.) */
-		if (dbufCount >= dbufSize) return RETVAL_DATA_ERROR;
+		if (dbufCount >= bd->dbufSize) return RETVAL_DATA_ERROR;
 		i = nextSym - 1;
 		uc = mtfSymbol[i];
 
diff -urpN busybox-1.27.2/archival/libarchive/decompress_gunzip.c busybox-1.28.0/archival/libarchive/decompress_gunzip.c
--- busybox-1.27.2/archival/libarchive/decompress_gunzip.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/decompress_gunzip.c	2017-10-20 10:36:58.000000000 +0200
@@ -32,7 +32,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include <setjmp.h>
 #include "libbb.h"
 #include "bb_archive.h"
diff -urpN busybox-1.27.2/archival/libarchive/decompress_uncompress.c busybox-1.28.0/archival/libarchive/decompress_uncompress.c
--- busybox-1.27.2/archival/libarchive/decompress_uncompress.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/decompress_uncompress.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,10 +1,10 @@
 /* vi: set sw=4 ts=4: */
-/* uncompress for busybox -- (c) 2002 Robert Griebl
+/*
+ * uncompress for busybox -- (c) 2002 Robert Griebl
  *
  * based on the original compress42.c source
  * (see disclaimer below)
  */
-
 /* (N)compress42.c - File compression ala IEEE Computer, Mar 1992.
  *
  * Authors:
@@ -21,9 +21,7 @@
  * marc@suse.de : a small security fix for a buffer overflow
  *
  * [... History snipped ...]
- *
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/decompress_unlzma.c busybox-1.28.0/archival/libarchive/decompress_unlzma.c
--- busybox-1.27.2/archival/libarchive/decompress_unlzma.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/decompress_unlzma.c	2017-12-04 16:07:47.000000000 +0100
@@ -450,8 +450,12 @@ unpack_lzma_stream(transformer_state_t *
  IF_NOT_FEATURE_LZMA_FAST(string:)
 			do {
 				uint32_t pos = buffer_pos - rep0;
-				if ((int32_t)pos < 0)
+				if ((int32_t)pos < 0) {
 					pos += header.dict_size;
+					/* bug 10436 has an example file where this triggers: */
+					if ((int32_t)pos < 0)
+						goto bad;
+				}
 				previous_byte = buffer[pos];
  IF_NOT_FEATURE_LZMA_FAST(one_byte2:)
 				buffer[buffer_pos++] = previous_byte;
diff -urpN busybox-1.27.2/archival/libarchive/decompress_unxz.c busybox-1.28.0/archival/libarchive/decompress_unxz.c
--- busybox-1.27.2/archival/libarchive/decompress_unxz.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/decompress_unxz.c	2017-08-08 14:08:06.000000000 +0200
@@ -27,11 +27,16 @@ static uint32_t xz_crc32(const uint8_t *
 	return ~crc32_block_endian0(~crc, buf, size, global_crc32_table);
 }
 
-/* We use arch-optimized unaligned accessors */
-#define get_unaligned_le32(buf) ({ uint32_t v; move_from_unaligned32(v, buf); SWAP_LE32(v); })
-#define get_unaligned_be32(buf) ({ uint32_t v; move_from_unaligned32(v, buf); SWAP_BE32(v); })
-#define put_unaligned_le32(val, buf) move_to_unaligned32(buf, SWAP_LE32(val))
-#define put_unaligned_be32(val, buf) move_to_unaligned32(buf, SWAP_BE32(val))
+/* We use arch-optimized unaligned fixed-endian accessors.
+ * They have been moved to libbb (proved to be useful elsewhere as well),
+ * just check that we have them defined:
+ */
+#if !defined(get_unaligned_le32) \
+ || !defined(get_unaligned_be32) \
+ || !defined(put_unaligned_le32) \
+ || !defined(put_unaligned_be32)
+# error get_unaligned_le32 accessors are not defined
+#endif
 
 #include "unxz/xz_dec_bcj.c"
 #include "unxz/xz_dec_lzma2.c"
diff -urpN busybox-1.27.2/archival/libarchive/filter_accept_all.c busybox-1.28.0/archival/libarchive/filter_accept_all.c
--- busybox-1.27.2/archival/libarchive/filter_accept_all.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/filter_accept_all.c	2017-10-20 10:36:58.000000000 +0200
@@ -4,7 +4,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/filter_accept_list.c busybox-1.28.0/archival/libarchive/filter_accept_list.c
--- busybox-1.27.2/archival/libarchive/filter_accept_list.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/filter_accept_list.c	2017-10-20 10:36:58.000000000 +0200
@@ -4,7 +4,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/filter_accept_list_reassign.c busybox-1.28.0/archival/libarchive/filter_accept_list_reassign.c
--- busybox-1.27.2/archival/libarchive/filter_accept_list_reassign.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/filter_accept_list_reassign.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,10 +1,9 @@
 /* vi: set sw=4 ts=4: */
 /*
- *  Copyright (C) 2002 by Glenn McGrath
+ * Copyright (C) 2002 by Glenn McGrath
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/filter_accept_reject_list.c busybox-1.28.0/archival/libarchive/filter_accept_reject_list.c
--- busybox-1.27.2/archival/libarchive/filter_accept_reject_list.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/filter_accept_reject_list.c	2017-10-20 10:36:58.000000000 +0200
@@ -4,7 +4,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/find_list_entry.c busybox-1.28.0/archival/libarchive/find_list_entry.c
--- busybox-1.27.2/archival/libarchive/find_list_entry.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/find_list_entry.c	2017-10-20 10:36:58.000000000 +0200
@@ -4,7 +4,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include <fnmatch.h>
 #include "libbb.h"
 #include "bb_archive.h"
diff -urpN busybox-1.27.2/archival/libarchive/get_header_ar.c busybox-1.28.0/archival/libarchive/get_header_ar.c
--- busybox-1.27.2/archival/libarchive/get_header_ar.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/get_header_ar.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,9 +1,9 @@
 /* vi: set sw=4 ts=4: */
-/* Copyright 2001 Glenn McGrath.
+/*
+ * Copyright 2001 Glenn McGrath.
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 #include "ar.h"
diff -urpN busybox-1.27.2/archival/libarchive/get_header_cpio.c busybox-1.28.0/archival/libarchive/get_header_cpio.c
--- busybox-1.27.2/archival/libarchive/get_header_cpio.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/get_header_cpio.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,9 +1,9 @@
 /* vi: set sw=4 ts=4: */
-/* Copyright 2002 Laurence Anderson
+/*
+ * Copyright 2002 Laurence Anderson
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/get_header_tar.c busybox-1.28.0/archival/libarchive/get_header_tar.c
--- busybox-1.27.2/archival/libarchive/get_header_tar.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/get_header_tar.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,5 +1,6 @@
 /* vi: set sw=4 ts=4: */
-/* Licensed under GPLv2 or later, see file LICENSE in this source tree.
+/*
+ * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  *
  * FIXME:
  *    In privileged mode if uname and gname map to a uid and gid then use the
@@ -10,7 +11,6 @@
  *    Opengroup's ustar interchange format,
  *    http://www.opengroup.org/onlinepubs/007904975/utilities/pax.html
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/get_header_tar_bz2.c busybox-1.28.0/archival/libarchive/get_header_tar_bz2.c
--- busybox-1.27.2/archival/libarchive/get_header_tar_bz2.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/get_header_tar_bz2.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/get_header_tar_gz.c busybox-1.28.0/archival/libarchive/get_header_tar_gz.c
--- busybox-1.27.2/archival/libarchive/get_header_tar_gz.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/get_header_tar_gz.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/get_header_tar_lzma.c busybox-1.28.0/archival/libarchive/get_header_tar_lzma.c
--- busybox-1.27.2/archival/libarchive/get_header_tar_lzma.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/get_header_tar_lzma.c	2017-10-20 10:36:58.000000000 +0200
@@ -5,7 +5,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/get_header_tar_xz.c busybox-1.28.0/archival/libarchive/get_header_tar_xz.c
--- busybox-1.27.2/archival/libarchive/get_header_tar_xz.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/get_header_tar_xz.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/header_verbose_list.c busybox-1.28.0/archival/libarchive/header_verbose_list.c
--- busybox-1.27.2/archival/libarchive/header_verbose_list.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/header_verbose_list.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/init_handle.c busybox-1.28.0/archival/libarchive/init_handle.c
--- busybox-1.27.2/archival/libarchive/init_handle.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/init_handle.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/open_transformer.c busybox-1.28.0/archival/libarchive/open_transformer.c
--- busybox-1.27.2/archival/libarchive/open_transformer.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/open_transformer.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
@@ -225,18 +224,8 @@ static transformer_state_t *setup_transf
 	return xstate;
 }
 
-/* Used by e.g. rpm which gives us a fd without filename,
- * thus we can't guess the format from filename's extension.
- */
-int FAST_FUNC setup_unzip_on_fd(int fd, int fail_if_not_compressed)
+static void fork_transformer_and_free(transformer_state_t *xstate)
 {
-	transformer_state_t *xstate = setup_transformer_on_fd(fd, fail_if_not_compressed);
-
-	if (!xstate || !xstate->xformer) {
-		free(xstate);
-		return 1;
-	}
-
 # if BB_MMU
 	fork_transformer_with_no_sig(xstate->src_fd, xstate->xformer);
 # else
@@ -244,13 +233,39 @@ int FAST_FUNC setup_unzip_on_fd(int fd,
 	 * an external unzipper that wants
 	 * file position at the start of the file.
 	 */
-	xlseek(fd, - xstate->signature_skipped, SEEK_CUR);
+	xlseek(xstate->src_fd, - xstate->signature_skipped, SEEK_CUR);
 	xstate->signature_skipped = 0;
 	fork_transformer_with_sig(xstate->src_fd, xstate->xformer, xstate->xformer_prog);
 # endif
 	free(xstate);
+}
+
+/* Used by e.g. rpm which gives us a fd without filename,
+ * thus we can't guess the format from filename's extension.
+ */
+int FAST_FUNC setup_unzip_on_fd(int fd, int fail_if_not_compressed)
+{
+	transformer_state_t *xstate = setup_transformer_on_fd(fd, fail_if_not_compressed);
+
+	if (!xstate->xformer) {
+		free(xstate);
+		return 1;
+	}
+
+	fork_transformer_and_free(xstate);
 	return 0;
 }
+#if ENABLE_FEATURE_SEAMLESS_LZMA
+/* ...and custom version for LZMA */
+void FAST_FUNC setup_lzma_on_fd(int fd)
+{
+	transformer_state_t *xstate = xzalloc(sizeof(*xstate));
+	xstate->src_fd = fd;
+	xstate->xformer = unpack_lzma_stream;
+	USE_FOR_NOMMU(xstate->xformer_prog = "unlzma";)
+	fork_transformer_and_free(xstate);
+}
+#endif
 
 static transformer_state_t *open_transformer(const char *fname, int fail_if_not_compressed)
 {
diff -urpN busybox-1.27.2/archival/libarchive/seek_by_jump.c busybox-1.28.0/archival/libarchive/seek_by_jump.c
--- busybox-1.27.2/archival/libarchive/seek_by_jump.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/seek_by_jump.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/seek_by_read.c busybox-1.28.0/archival/libarchive/seek_by_read.c
--- busybox-1.27.2/archival/libarchive/seek_by_read.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/seek_by_read.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/unpack_ar_archive.c busybox-1.28.0/archival/libarchive/unpack_ar_archive.c
--- busybox-1.27.2/archival/libarchive/unpack_ar_archive.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/unpack_ar_archive.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 #include "ar.h"
diff -urpN busybox-1.27.2/archival/libarchive/unsafe_prefix.c busybox-1.28.0/archival/libarchive/unsafe_prefix.c
--- busybox-1.27.2/archival/libarchive/unsafe_prefix.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/libarchive/unsafe_prefix.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/archival/libarchive/unsafe_symlink_target.c busybox-1.28.0/archival/libarchive/unsafe_symlink_target.c
--- busybox-1.27.2/archival/libarchive/unsafe_symlink_target.c	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/archival/libarchive/unsafe_symlink_target.c	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,48 @@
+/* vi: set sw=4 ts=4: */
+/*
+ * Licensed under GPLv2 or later, see file LICENSE in this source tree.
+ */
+#include "libbb.h"
+#include "bb_archive.h"
+
+int FAST_FUNC unsafe_symlink_target(const char *target)
+{
+	const char *dot;
+
+	if (target[0] == '/') {
+		const char *var;
+ unsafe:
+		var = getenv("EXTRACT_UNSAFE_SYMLINKS");
+		if (var) {
+			if (LONE_CHAR(var, '1'))
+				return 0; /* pretend it's safe */
+			return 1; /* "UNSAFE!" */
+		}
+		bb_error_msg("skipping unsafe symlink to '%s' in archive,"
+			" set %s=1 to extract",
+			target,
+			"EXTRACT_UNSAFE_SYMLINKS"
+		);
+		/* Prevent further messages */
+		setenv("EXTRACT_UNSAFE_SYMLINKS", "0", 0);
+		return 1; /* "UNSAFE!" */
+	}
+
+	dot = target;
+	for (;;) {
+		dot = strchr(dot, '.');
+		if (!dot)
+			return 0; /* safe target */
+
+		/* Is it a path component starting with ".."? */
+		if ((dot[1] == '.')
+		 && (dot == target || dot[-1] == '/')
+		    /* Is it exactly ".."? */
+		 && (dot[2] == '/' || dot[2] == '\0')
+		) {
+			goto unsafe;
+		}
+		/* NB: it can even be trailing ".", should only add 1 */
+		dot += 1;
+	}
+}
diff -urpN busybox-1.27.2/archival/lzop.c busybox-1.28.0/archival/lzop.c
--- busybox-1.27.2/archival/lzop.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/lzop.c	2017-10-05 11:53:08.000000000 +0200
@@ -24,38 +24,38 @@
 
    "Minimalized" for busybox by Alain Knaff
 */
-
 //config:config LZOP
-//config:	bool "lzop"
+//config:	bool "lzop (13 kb)"
 //config:	default y
 //config:	help
-//config:	  Lzop compression/decompresion.
+//config:	Lzop compression/decompresion.
 //config:
 //config:config UNLZOP
-//config:	bool "unlzop"
+//config:	bool "unlzop (13 kb)"
 //config:	default n  # INCOMPAT: upstream lzop does not provide such tool
 //config:	help
-//config:	  Lzop decompresion.
+//config:	Lzop decompresion.
 //config:
 //config:config LZOPCAT
-//config:	bool "lzopcat"
+//config:	bool "lzopcat (13 kb)"
 //config:	default n  # INCOMPAT: upstream lzop does not provide such tool
 //config:	help
-//config:	  Alias to "unlzop -c".
+//config:	Alias to "lzop -dc".
 //config:
 //config:config LZOP_COMPR_HIGH
 //config:	bool "lzop compression levels 7,8,9 (not very useful)"
 //config:	default n
 //config:	depends on LZOP || UNLZOP || LZOPCAT
 //config:	help
-//config:	  High levels (7,8,9) of lzop compression. These levels
-//config:	  are actually slower than gzip at equivalent compression ratios
-//config:	  and take up 3.2K of code.
+//config:	High levels (7,8,9) of lzop compression. These levels
+//config:	are actually slower than gzip at equivalent compression ratios
+//config:	and take up 3.2K of code.
 
 //applet:IF_LZOP(APPLET(lzop, BB_DIR_BIN, BB_SUID_DROP))
 //                  APPLET_ODDNAME:name     main  location        suid_type     help
 //applet:IF_UNLZOP( APPLET_ODDNAME(unlzop,  lzop, BB_DIR_USR_BIN, BB_SUID_DROP, unlzop))
 //applet:IF_LZOPCAT(APPLET_ODDNAME(lzopcat, lzop, BB_DIR_USR_BIN, BB_SUID_DROP, lzopcat))
+
 //kbuild:lib-$(CONFIG_LZOP) += lzop.o
 //kbuild:lib-$(CONFIG_UNLZOP) += lzop.o
 //kbuild:lib-$(CONFIG_LZOPCAT) += lzop.o
@@ -1138,7 +1138,7 @@ int lzop_main(int argc UNUSED_PARAM, cha
 	/* -U is "anti -k", invert bit for bbunpack(): */
 	option_mask32 ^= OPT_KEEP;
 	/* -k disables -U (if any): */
-	/* opt_complementary = "k-U"; - nope, only handles -Uk, not -kU */
+	/* opt_complementary "k-U"? - nope, only handles -Uk, not -kU */
 	if (option_mask32 & OPT_k)
 		option_mask32 |= OPT_KEEP;
 
diff -urpN busybox-1.27.2/archival/rpm.c busybox-1.28.0/archival/rpm.c
--- busybox-1.27.2/archival/rpm.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/rpm.c	2017-09-07 14:42:40.000000000 +0200
@@ -6,27 +6,15 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config RPM
-//config:	bool "rpm"
+//config:	bool "rpm (33 kb)"
 //config:	default y
 //config:	help
-//config:	  Mini RPM applet - queries and extracts RPM packages.
+//config:	Mini RPM applet - queries and extracts RPM packages.
 
 //applet:IF_RPM(APPLET(rpm, BB_DIR_BIN, BB_SUID_DROP))
-//kbuild:lib-$(CONFIG_RPM) += rpm.o
 
-//usage:#define rpm_trivial_usage
-//usage:       "-i PACKAGE.rpm; rpm -qp[ildc] PACKAGE.rpm"
-//usage:#define rpm_full_usage "\n\n"
-//usage:       "Manipulate RPM packages\n"
-//usage:     "\nCommands:"
-//usage:     "\n	-i	Install package"
-//usage:     "\n	-qp	Query package"
-//usage:     "\n	-qpi	Show information"
-//usage:     "\n	-qpl	List contents"
-//usage:     "\n	-qpd	List documents"
-//usage:     "\n	-qpc	List config files"
+//kbuild:lib-$(CONFIG_RPM) += rpm.o
 
 #include "libbb.h"
 #include "common_bufsiz.h"
@@ -68,6 +56,8 @@
 #define TAG_DIRINDEXES          1116
 #define TAG_BASENAMES           1117
 #define TAG_DIRNAMES            1118
+#define TAG_PAYLOADCOMPRESSOR   1125
+
 
 #define RPMFILE_CONFIG          (1 << 0)
 #define RPMFILE_DOC             (1 << 1)
@@ -91,148 +81,145 @@ typedef struct {
 
 struct globals {
 	void *map;
-	rpm_index **mytags;
+	rpm_index *mytags;
 	int tagcount;
+	unsigned mapsize, pagesize;
 } FIX_ALIASING;
 #define G (*(struct globals*)bb_common_bufsiz1)
 #define INIT_G() do { setup_common_bufsiz(); } while (0)
 
-static void extract_cpio(int fd, const char *source_rpm)
-{
-	archive_handle_t *archive_handle;
-
-	if (source_rpm != NULL) {
-		/* Binary rpm (it was built from some SRPM), install to root */
-		xchdir("/");
-	} /* else: SRPM, install to current dir */
-
-	/* Initialize */
-	archive_handle = init_handle();
-	archive_handle->seek = seek_by_read;
-	archive_handle->action_data = data_extract_all;
-#if 0 /* For testing (rpm -i only lists the files in internal cpio): */
-	archive_handle->action_header = header_list;
-	archive_handle->action_data = data_skip;
-#endif
-	archive_handle->ah_flags = ARCHIVE_RESTORE_DATE | ARCHIVE_CREATE_LEADING_DIRS
-		/* compat: overwrite existing files.
-		 * try "rpm -i foo.src.rpm" few times in a row -
-		 * standard rpm will not complain.
-		 */
-		| ARCHIVE_REPLACE_VIA_RENAME;
-	archive_handle->src_fd = fd;
-	/*archive_handle->offset = 0; - init_handle() did it */
-
-	setup_unzip_on_fd(archive_handle->src_fd, /*fail_if_not_compressed:*/ 1);
-	while (get_header_cpio(archive_handle) == EXIT_SUCCESS)
-		continue;
-}
-
-static rpm_index **rpm_gettags(int fd, int *num_tags)
+static int rpm_gettags(const char *filename)
 {
-	/* We should never need more than 200 (shrink via realloc later) */
-	rpm_index **tags = xzalloc(200 * sizeof(tags[0]));
-	int pass, tagindex = 0;
-
-	xlseek(fd, 96, SEEK_CUR); /* Seek past the unused lead */
+	rpm_index *tags;
+	int fd;
+	unsigned pass, idx;
+	unsigned storepos;
+
+	if (!filename) { /* rpm2cpio w/o filename? */
+		filename = bb_msg_standard_output;
+		fd = 0;
+	} else {
+		fd = xopen(filename, O_RDONLY);
+	}
 
+	storepos = xlseek(fd, 96, SEEK_CUR); /* Seek past the unused lead */
+	G.tagcount = 0;
+	tags = NULL;
+	idx = 0;
 	/* 1st pass is the signature headers, 2nd is the main stuff */
 	for (pass = 0; pass < 2; pass++) {
 		struct rpm_header header;
-		rpm_index *tmpindex;
-		int storepos;
+		unsigned cnt;
 
 		xread(fd, &header, sizeof(header));
 		if (header.magic_and_ver != htonl(RPM_HEADER_MAGICnVER))
-			return NULL; /* Invalid magic, or not version 1 */
+			bb_error_msg_and_die("invalid RPM header magic in '%s'", filename);
 		header.size = ntohl(header.size);
-		header.entries = ntohl(header.entries);
-		storepos = xlseek(fd, 0, SEEK_CUR) + header.entries * 16;
+		cnt = ntohl(header.entries);
+		storepos += sizeof(header) + cnt * 16;
 
-		while (header.entries--) {
-			tmpindex = tags[tagindex++] = xmalloc(sizeof(*tmpindex));
-			xread(fd, tmpindex, sizeof(*tmpindex));
-			tmpindex->tag = ntohl(tmpindex->tag);
-			tmpindex->type = ntohl(tmpindex->type);
-			tmpindex->count = ntohl(tmpindex->count);
-			tmpindex->offset = storepos + ntohl(tmpindex->offset);
+		G.tagcount += cnt;
+		tags = xrealloc(tags, sizeof(tags[0]) * G.tagcount);
+		xread(fd, &tags[idx], sizeof(tags[0]) * cnt);
+		while (cnt--) {
+			rpm_index *tag = &tags[idx];
+			tag->tag = ntohl(tag->tag);
+			tag->type = ntohl(tag->type);
+			tag->count = ntohl(tag->count);
+			tag->offset = storepos + ntohl(tag->offset);
 			if (pass == 0)
-				tmpindex->tag -= 743;
+				tag->tag -= 743;
+			idx++;
 		}
-		storepos = xlseek(fd, header.size, SEEK_CUR); /* Seek past store */
 		/* Skip padding to 8 byte boundary after reading signature headers */
 		if (pass == 0)
-			xlseek(fd, (-storepos) & 0x7, SEEK_CUR);
+			while (header.size & 7)
+				header.size++;
+		/* Seek past store */
+		storepos = xlseek(fd, header.size, SEEK_CUR);
 	}
-	/* realloc tags to save space */
-	tags = xrealloc(tags, tagindex * sizeof(tags[0]));
-	*num_tags = tagindex;
-	/* All done, leave the file at the start of the gzipped cpio archive */
-	return tags;
+	G.mytags = tags;
+
+	/* Map the store */
+	storepos = (storepos + G.pagesize) & -(int)G.pagesize;
+	/* remember size for munmap */
+	G.mapsize = storepos;
+	/* some NOMMU systems prefer MAP_PRIVATE over MAP_SHARED */
+	G.map = mmap(0, storepos, PROT_READ, MAP_PRIVATE, fd, 0);
+	if (G.map == MAP_FAILED)
+		bb_perror_msg_and_die("mmap '%s'", filename);
+
+	return fd;
 }
 
 static int bsearch_rpmtag(const void *key, const void *item)
 {
 	int *tag = (int *)key;
-	rpm_index **tmp = (rpm_index **) item;
-	return (*tag - tmp[0]->tag);
-}
-
-static int rpm_getcount(int tag)
-{
-	rpm_index **found;
-	found = bsearch(&tag, G.mytags, G.tagcount, sizeof(struct rpmtag *), bsearch_rpmtag);
-	if (!found)
-		return 0;
-	return found[0]->count;
+	rpm_index *tmp = (rpm_index *) item;
+	return (*tag - tmp->tag);
 }
 
 static char *rpm_getstr(int tag, int itemindex)
 {
-	rpm_index **found;
-	found = bsearch(&tag, G.mytags, G.tagcount, sizeof(struct rpmtag *), bsearch_rpmtag);
-	if (!found || itemindex >= found[0]->count)
+	rpm_index *found;
+	found = bsearch(&tag, G.mytags, G.tagcount, sizeof(G.mytags[0]), bsearch_rpmtag);
+	if (!found || itemindex >= found->count)
 		return NULL;
-	if (found[0]->type == RPM_STRING_TYPE
-	 || found[0]->type == RPM_I18NSTRING_TYPE
-	 || found[0]->type == RPM_STRING_ARRAY_TYPE
+	if (found->type == RPM_STRING_TYPE
+	 || found->type == RPM_I18NSTRING_TYPE
+	 || found->type == RPM_STRING_ARRAY_TYPE
 	) {
 		int n;
-		char *tmpstr = (char *) G.map + found[0]->offset;
+		char *tmpstr = (char *) G.map + found->offset;
 		for (n = 0; n < itemindex; n++)
 			tmpstr = tmpstr + strlen(tmpstr) + 1;
 		return tmpstr;
 	}
 	return NULL;
 }
+static char *rpm_getstr0(int tag)
+{
+	return rpm_getstr(tag, 0);
+}
+
+#if ENABLE_RPM
 
 static int rpm_getint(int tag, int itemindex)
 {
-	rpm_index **found;
+	rpm_index *found;
 	char *tmpint;
 
 	/* gcc throws warnings here when sizeof(void*)!=sizeof(int) ...
 	 * it's ok to ignore it because tag won't be used as a pointer */
-	found = bsearch(&tag, G.mytags, G.tagcount, sizeof(struct rpmtag *), bsearch_rpmtag);
-	if (!found || itemindex >= found[0]->count)
+	found = bsearch(&tag, G.mytags, G.tagcount, sizeof(G.mytags[0]), bsearch_rpmtag);
+	if (!found || itemindex >= found->count)
 		return -1;
 
-	tmpint = (char *) G.map + found[0]->offset;
-	if (found[0]->type == RPM_INT32_TYPE) {
+	tmpint = (char *) G.map + found->offset;
+	if (found->type == RPM_INT32_TYPE) {
 		tmpint += itemindex*4;
 		return ntohl(*(int32_t*)tmpint);
 	}
-	if (found[0]->type == RPM_INT16_TYPE) {
+	if (found->type == RPM_INT16_TYPE) {
 		tmpint += itemindex*2;
 		return ntohs(*(int16_t*)tmpint);
 	}
-	if (found[0]->type == RPM_INT8_TYPE) {
+	if (found->type == RPM_INT8_TYPE) {
 		tmpint += itemindex;
 		return *(int8_t*)tmpint;
 	}
 	return -1;
 }
 
+static int rpm_getcount(int tag)
+{
+	rpm_index *found;
+	found = bsearch(&tag, G.mytags, G.tagcount, sizeof(G.mytags[0]), bsearch_rpmtag);
+	if (!found)
+		return 0;
+	return found->count;
+}
+
 static void fileaction_dobackup(char *filename, int fileref)
 {
 	struct stat oldfile;
@@ -273,11 +260,103 @@ static void loop_through_files(int filet
 	}
 }
 
+#if 0 //DEBUG
+static void print_all_tags(void)
+{
+	unsigned i = 0;
+	while (i < G.tagcount) {
+		rpm_index *tag = &G.mytags[i];
+		if (tag->type == RPM_STRING_TYPE
+		 || tag->type == RPM_I18NSTRING_TYPE
+		 || tag->type == RPM_STRING_ARRAY_TYPE
+		) {
+			unsigned n;
+			char *str = (char *) G.map + tag->offset;
+
+			printf("tag[%u] %08x type %08x offset %08x count %d '%s'\n",
+				i, tag->tag, tag->type, tag->offset, tag->count, str
+			);
+			for (n = 1; n < tag->count; n++) {
+				str += strlen(str) + 1;
+				printf("\t'%s'\n", str);
+			}
+		}
+		i++;
+	}
+}
+#else
+#define print_all_tags() ((void)0)
+#endif
+
+static void extract_cpio(int fd, const char *source_rpm)
+{
+	archive_handle_t *archive_handle;
+
+	if (source_rpm != NULL) {
+		/* Binary rpm (it was built from some SRPM), install to root */
+		xchdir("/");
+	} /* else: SRPM, install to current dir */
+
+	/* Initialize */
+	archive_handle = init_handle();
+	archive_handle->seek = seek_by_read;
+	archive_handle->action_data = data_extract_all;
+#if 0 /* For testing (rpm -i only lists the files in internal cpio): */
+	archive_handle->action_header = header_list;
+	archive_handle->action_data = data_skip;
+#endif
+	archive_handle->ah_flags = ARCHIVE_RESTORE_DATE | ARCHIVE_CREATE_LEADING_DIRS
+		/* compat: overwrite existing files.
+		 * try "rpm -i foo.src.rpm" few times in a row -
+		 * standard rpm will not complain.
+		 */
+		| ARCHIVE_REPLACE_VIA_RENAME;
+	archive_handle->src_fd = fd;
+	/*archive_handle->offset = 0; - init_handle() did it */
+
+	setup_unzip_on_fd(archive_handle->src_fd, /*fail_if_not_compressed:*/ 1);
+	while (get_header_cpio(archive_handle) == EXIT_SUCCESS)
+		continue;
+}
+
+//usage:#define rpm_trivial_usage
+//usage:       "-i PACKAGE.rpm; rpm -qp[ildc] PACKAGE.rpm"
+//usage:#define rpm_full_usage "\n\n"
+//usage:       "Manipulate RPM packages\n"
+//usage:     "\nCommands:"
+//usage:     "\n	-i	Install package"
+//usage:     "\n	-qp	Query package"
+//usage:     "\n	-qpi	Show information"
+//usage:     "\n	-qpl	List contents"
+//usage:     "\n	-qpd	List documents"
+//usage:     "\n	-qpc	List config files"
+
+/* RPM version 4.13.0.1:
+ * Unlike -q, -i seems to imply -p: -i, -ip and -pi work the same.
+ * OTOH, with -q order is important: "-piq FILE.rpm" works as -qp, not -qpi
+ * (IOW: shows only package name, not package info).
+ * "-iq ARG" works as -q: treats ARG as package name, not a file.
+ *
+ * "man rpm" on -l option and options implying it:
+ * -l, --list		List files in package.
+ * -c, --configfiles	List only configuration files (implies -l).
+ * -d, --docfiles	List only documentation files (implies -l).
+ * -L, --licensefiles	List only license files (implies -l).
+ * --dump	Dump file information as follows (implies -l):
+ *		path size mtime digest mode owner group isconfig isdoc rdev symlink
+ * -s, --state	Display the states of files in the package (implies -l).
+ *		The state of each file is one of normal, not installed, or replaced.
+ *
+ * Looks like we can switch to getopt32 here: in practice, people
+ * do place -q first if they intend to use it (misinterpreting "-piq" wouldn't matter).
+ */
 int rpm_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int rpm_main(int argc, char **argv)
 {
 	int opt, func = 0;
-	const unsigned pagesize = getpagesize();
+
+	INIT_G();
+	G.pagesize = getpagesize();
 
 	while ((opt = getopt(argc, argv, "iqpldc")) != -1) {
 		switch (opt) {
@@ -289,17 +368,17 @@ int rpm_main(int argc, char **argv)
 			if (func) bb_show_usage();
 			func = rpm_query;
 			break;
-		case 'p': /* Query a package */
+		case 'p': /* Query a package (IOW: .rpm file, we are not querying RPMDB) */
 			func |= rpm_query_package;
 			break;
 		case 'l': /* List files in a package */
 			func |= rpm_query_list;
 			break;
-		case 'd': /* List doc files in a package (implies list) */
+		case 'd': /* List doc files in a package (implies -l) */
 			func |= rpm_query_list;
 			func |= rpm_query_list_doc;
 			break;
-		case 'c': /* List config files in a package (implies list) */
+		case 'c': /* List config files in a package (implies -l) */
 			func |= rpm_query_list;
 			func |= rpm_query_list_config;
 			break;
@@ -313,24 +392,18 @@ int rpm_main(int argc, char **argv)
 		bb_show_usage();
 	}
 
-	while (*argv) {
+	for (;;) {
 		int rpm_fd;
-		unsigned mapsize;
 		const char *source_rpm;
 
-		rpm_fd = xopen(*argv++, O_RDONLY);
-		G.mytags = rpm_gettags(rpm_fd, &G.tagcount);
-		if (!G.mytags)
-			bb_error_msg_and_die("error reading rpm header");
-		mapsize = xlseek(rpm_fd, 0, SEEK_CUR);
-		mapsize = (mapsize + pagesize) & -(int)pagesize;
-		/* Some NOMMU systems prefer MAP_PRIVATE over MAP_SHARED */
-		G.map = mmap(0, mapsize, PROT_READ, MAP_PRIVATE, rpm_fd, 0);
-//FIXME: error check?
+		rpm_fd = rpm_gettags(*argv);
+		print_all_tags();
 
-		source_rpm = rpm_getstr(TAG_SOURCERPM, 0);
+		source_rpm = rpm_getstr0(TAG_SOURCERPM);
 
 		if (func & rpm_install) {
+			/* -i (and not -qi) */
+
 			/* Backup any config files */
 			loop_through_files(TAG_BASENAMES, fileaction_dobackup);
 			/* Extact the archive */
@@ -338,10 +411,13 @@ int rpm_main(int argc, char **argv)
 			/* Set the correct file uid/gid's */
 			loop_through_files(TAG_BASENAMES, fileaction_setowngrp);
 		}
-		else if ((func & (rpm_query|rpm_query_package)) == (rpm_query|rpm_query_package)) {
+		else
+		if ((func & (rpm_query|rpm_query_package)) == (rpm_query|rpm_query_package)) {
+			/* -qp */
+
 			if (!(func & (rpm_query_info|rpm_query_list))) {
 				/* If just a straight query, just give package name */
-				printf("%s-%s-%s\n", rpm_getstr(TAG_NAME, 0), rpm_getstr(TAG_VERSION, 0), rpm_getstr(TAG_RELEASE, 0));
+				printf("%s-%s-%s\n", rpm_getstr0(TAG_NAME), rpm_getstr0(TAG_VERSION), rpm_getstr0(TAG_RELEASE));
 			}
 			if (func & rpm_query_info) {
 				/* Do the nice printout */
@@ -350,30 +426,33 @@ int rpm_main(int argc, char **argv)
 				char bdatestring[50];
 				const char *p;
 
-				printf("%-12s: %s\n", "Name"        , rpm_getstr(TAG_NAME, 0));
+				printf("%-12s: %s\n", "Name"        , rpm_getstr0(TAG_NAME));
 				/* TODO compat: add "Epoch" here */
-				printf("%-12s: %s\n", "Version"     , rpm_getstr(TAG_VERSION, 0));
-				printf("%-12s: %s\n", "Release"     , rpm_getstr(TAG_RELEASE, 0));
+				printf("%-12s: %s\n", "Version"     , rpm_getstr0(TAG_VERSION));
+				printf("%-12s: %s\n", "Release"     , rpm_getstr0(TAG_RELEASE));
 				/* add "Architecture" */
-				printf("%-12s: %s\n", "Install Date", "(not installed)");
-				printf("%-12s: %s\n", "Group"       , rpm_getstr(TAG_GROUP, 0));
+				/* printf("%-12s: %s\n", "Install Date", "(not installed)"); - we don't know */
+				printf("%-12s: %s\n", "Group"       , rpm_getstr0(TAG_GROUP));
 				printf("%-12s: %d\n", "Size"        , rpm_getint(TAG_SIZE, 0));
-				printf("%-12s: %s\n", "License"     , rpm_getstr(TAG_LICENSE, 0));
+				printf("%-12s: %s\n", "License"     , rpm_getstr0(TAG_LICENSE));
 				/* add "Signature" */
 				printf("%-12s: %s\n", "Source RPM"  , source_rpm ? source_rpm : "(none)");
 				bdate_time = rpm_getint(TAG_BUILDTIME, 0);
 				bdate_ptm = localtime(&bdate_time);
 				strftime(bdatestring, 50, "%a %d %b %Y %T %Z", bdate_ptm);
 				printf("%-12s: %s\n", "Build Date"  , bdatestring);
-				printf("%-12s: %s\n", "Build Host"  , rpm_getstr(TAG_BUILDHOST, 0));
-				p = rpm_getstr(TAG_PREFIXS, 0);
+				printf("%-12s: %s\n", "Build Host"  , rpm_getstr0(TAG_BUILDHOST));
+				p = rpm_getstr0(TAG_PREFIXS);
 				printf("%-12s: %s\n", "Relocations" , p ? p : "(not relocatable)");
 				/* add "Packager" */
-				p = rpm_getstr(TAG_VENDOR, 0);
-				printf("%-12s: %s\n", "Vendor"      , p ? p : "(none)");
-				printf("%-12s: %s\n", "URL"         , rpm_getstr(TAG_URL, 0));
-				printf("%-12s: %s\n", "Summary"     , rpm_getstr(TAG_SUMMARY, 0));
-				printf("Description :\n%s\n", rpm_getstr(TAG_DESCRIPTION, 0));
+				p = rpm_getstr0(TAG_VENDOR);
+				if (p) /* rpm 4.13.0.1 does not show "(none)" for Vendor: */
+				printf("%-12s: %s\n", "Vendor"      , p);
+				p = rpm_getstr0(TAG_URL);
+				if (p) /* rpm 4.13.0.1 does not show "(none)"/"(null)" for URL: */
+				printf("%-12s: %s\n", "URL"         , p);
+				printf("%-12s: %s\n", "Summary"     , rpm_getstr0(TAG_SUMMARY));
+				printf("Description :\n%s\n", rpm_getstr0(TAG_DESCRIPTION));
 			}
 			if (func & rpm_query_list) {
 				int count, it, flags;
@@ -396,10 +475,85 @@ int rpm_main(int argc, char **argv)
 						rpm_getstr(TAG_BASENAMES, it));
 				}
 			}
+		} else {
+			/* Unsupported (help text shows what we support) */
+			bb_show_usage();
 		}
-		munmap(G.map, mapsize);
+		if (!*++argv)
+			break;
+		munmap(G.map, G.mapsize);
 		free(G.mytags);
 		close(rpm_fd);
 	}
+
 	return 0;
 }
+
+#endif /* RPM */
+
+/*
+ * Mini rpm2cpio implementation for busybox
+ *
+ * Copyright (C) 2001 by Laurence Anderson
+ *
+ * Licensed under GPLv2 or later, see file LICENSE in this source tree.
+ */
+//config:config RPM2CPIO
+//config:	bool "rpm2cpio (20 kb)"
+//config:	default y
+//config:	help
+//config:	Converts a RPM file into a CPIO archive.
+
+//applet:IF_RPM2CPIO(APPLET(rpm2cpio, BB_DIR_USR_BIN, BB_SUID_DROP))
+
+//kbuild:lib-$(CONFIG_RPM2CPIO) += rpm.o
+
+//usage:#define rpm2cpio_trivial_usage
+//usage:       "PACKAGE.rpm"
+//usage:#define rpm2cpio_full_usage "\n\n"
+//usage:       "Output a cpio archive of the rpm file"
+
+#if ENABLE_RPM2CPIO
+
+/* No getopt required */
+int rpm2cpio_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
+int rpm2cpio_main(int argc UNUSED_PARAM, char **argv)
+{
+	const char *str;
+	int rpm_fd;
+
+	INIT_G();
+	G.pagesize = getpagesize();
+
+	rpm_fd = rpm_gettags(argv[1]);
+
+	//if (SEAMLESS_COMPRESSION) - we do this at the end instead.
+	//	/* We need to know whether child (gzip/bzip/etc) exits abnormally */
+	//	signal(SIGCHLD, check_errors_in_children);
+
+	if (ENABLE_FEATURE_SEAMLESS_LZMA
+	 && (str = rpm_getstr0(TAG_PAYLOADCOMPRESSOR)) != NULL
+	 && strcmp(str, "lzma") == 0
+	) {
+		// lzma compression can't be detected
+		// set up decompressor without detection
+		setup_lzma_on_fd(rpm_fd);
+	} else {
+		setup_unzip_on_fd(rpm_fd, /*fail_if_not_compressed:*/ 1);
+	}
+
+	if (bb_copyfd_eof(rpm_fd, STDOUT_FILENO) < 0)
+		bb_error_msg_and_die("error unpacking");
+
+	if (ENABLE_FEATURE_CLEAN_UP) {
+		close(rpm_fd);
+	}
+
+	if (SEAMLESS_COMPRESSION) {
+		check_errors_in_children(0);
+		return bb_got_signal;
+	}
+	return EXIT_SUCCESS;
+}
+
+#endif /* RPM2CPIO */
diff -urpN busybox-1.27.2/archival/rpm2cpio.c busybox-1.28.0/archival/rpm2cpio.c
--- busybox-1.27.2/archival/rpm2cpio.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/rpm2cpio.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,96 +0,0 @@
-/* vi: set sw=4 ts=4: */
-/*
- * Mini rpm2cpio implementation for busybox
- *
- * Copyright (C) 2001 by Laurence Anderson
- *
- * Licensed under GPLv2 or later, see file LICENSE in this source tree.
- */
-
-//config:config RPM2CPIO
-//config:	bool "rpm2cpio"
-//config:	default y
-//config:	help
-//config:	  Converts a RPM file into a CPIO archive.
-
-//applet:IF_RPM2CPIO(APPLET(rpm2cpio, BB_DIR_USR_BIN, BB_SUID_DROP))
-//kbuild:lib-$(CONFIG_RPM2CPIO) += rpm2cpio.o
-
-//usage:#define rpm2cpio_trivial_usage
-//usage:       "package.rpm"
-//usage:#define rpm2cpio_full_usage "\n\n"
-//usage:       "Output a cpio archive of the rpm file"
-
-#include "libbb.h"
-#include "bb_archive.h"
-#include "rpm.h"
-
-enum { rpm_fd = STDIN_FILENO };
-
-static unsigned skip_header(void)
-{
-	struct rpm_header header;
-	unsigned len;
-
-	xread(rpm_fd, &header, sizeof(header));
-//	if (strncmp((char *) &header.magic, RPM_HEADER_MAGIC_STR, 3) != 0) {
-//		bb_error_msg_and_die("invalid RPM header magic");
-//	}
-//	if (header.version != 1) {
-//		bb_error_msg_and_die("unsupported RPM header version");
-//	}
-	if (header.magic_and_ver != htonl(RPM_HEADER_MAGICnVER)) {
-		bb_error_msg_and_die("invalid RPM header magic or unsupported version");
-		// ": %x != %x", header.magic_and_ver, htonl(RPM_HEADER_MAGICnVER));
-	}
-
-	/* Seek past index entries, and past store */
-	len = 16 * ntohl(header.entries) + ntohl(header.size);
-	seek_by_jump(rpm_fd, len);
-
-	return sizeof(header) + len;
-}
-
-/* No getopt required */
-int rpm2cpio_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
-int rpm2cpio_main(int argc UNUSED_PARAM, char **argv)
-{
-	struct rpm_lead lead;
-	unsigned pos;
-
-	if (argv[1]) {
-		xmove_fd(xopen(argv[1], O_RDONLY), rpm_fd);
-	}
-	xread(rpm_fd, &lead, sizeof(lead));
-
-	/* Just check the magic, the rest is irrelevant */
-	if (lead.magic != htonl(RPM_LEAD_MAGIC)) {
-		bb_error_msg_and_die("invalid RPM magic");
-	}
-
-	/* Skip the signature header, align to 8 bytes */
-	pos = skip_header();
-	seek_by_jump(rpm_fd, (-(int)pos) & 7);
-
-	/* Skip the main header */
-	skip_header();
-
-	//if (SEAMLESS_COMPRESSION)
-	//	/* We need to know whether child (gzip/bzip/etc) exits abnormally */
-	//	signal(SIGCHLD, check_errors_in_children);
-
-	/* This works, but doesn't report uncompress errors (they happen in child) */
-	setup_unzip_on_fd(rpm_fd, /*fail_if_not_compressed:*/ 1);
-	if (bb_copyfd_eof(rpm_fd, STDOUT_FILENO) < 0)
-		bb_error_msg_and_die("error unpacking");
-
-	if (ENABLE_FEATURE_CLEAN_UP) {
-		close(rpm_fd);
-	}
-
-	if (SEAMLESS_COMPRESSION) {
-		check_errors_in_children(0);
-		return bb_got_signal;
-	}
-	return EXIT_SUCCESS;
-}
diff -urpN busybox-1.27.2/archival/tar.c busybox-1.28.0/archival/tar.c
--- busybox-1.27.2/archival/tar.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/archival/tar.c	2017-12-04 16:07:47.000000000 +0100
@@ -22,32 +22,13 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-/* TODO: security with -C DESTDIR option can be enhanced.
- * Consider tar file created via:
- * $ tar cvf bug.tar anything.txt
- * $ ln -s /tmp symlink
- * $ tar --append -f bug.tar symlink
- * $ rm symlink
- * $ mkdir symlink
- * $ tar --append -f bug.tar symlink/evil.py
- *
- * This will result in an archive which contains:
- * $ tar --list -f bug.tar
- * anything.txt
- * symlink
- * symlink/evil.py
- *
- * Untarring it puts evil.py in '/tmp' even if the -C DESTDIR is given.
- * This doesn't feel right, and IIRC GNU tar doesn't do that.
- */
-
 //config:config TAR
-//config:	bool "tar"
+//config:	bool "tar (40 kb)"
 //config:	default y
 //config:	help
-//config:	  tar is an archiving program. It's commonly used with gzip to
-//config:	  create compressed archives. It's probably the most widely used
-//config:	  UNIX archive program.
+//config:	tar is an archiving program. It's commonly used with gzip to
+//config:	create compressed archives. It's probably the most widely used
+//config:	UNIX archive program.
 //config:
 //config:config FEATURE_TAR_LONG_OPTIONS
 //config:	bool "Enable long options"
@@ -64,35 +45,35 @@
 //config:	default y
 //config:	depends on TAR && (FEATURE_SEAMLESS_Z || FEATURE_SEAMLESS_GZ || FEATURE_SEAMLESS_BZ2 || FEATURE_SEAMLESS_LZMA || FEATURE_SEAMLESS_XZ)
 //config:	help
-//config:	  With this option tar can automatically detect compressed
-//config:	  tarballs. Currently it works only on files (not pipes etc).
+//config:	With this option tar can automatically detect compressed
+//config:	tarballs. Currently it works only on files (not pipes etc).
 //config:
 //config:config FEATURE_TAR_FROM
-//config:	bool "Enable -X (exclude from) and -T (include from) options)"
+//config:	bool "Enable -X (exclude from) and -T (include from) options"
 //config:	default y
 //config:	depends on TAR
 //config:	help
-//config:	  If you enable this option you'll be able to specify
-//config:	  a list of files to include or exclude from an archive.
+//config:	If you enable this option you'll be able to specify
+//config:	a list of files to include or exclude from an archive.
 //config:
 //config:config FEATURE_TAR_OLDGNU_COMPATIBILITY
 //config:	bool "Support old tar header format"
 //config:	default y
 //config:	depends on TAR || DPKG
 //config:	help
-//config:	  This option is required to unpack archives created in
-//config:	  the old GNU format; help to kill this old format by
-//config:	  repacking your ancient archives with the new format.
+//config:	This option is required to unpack archives created in
+//config:	the old GNU format; help to kill this old format by
+//config:	repacking your ancient archives with the new format.
 //config:
 //config:config FEATURE_TAR_OLDSUN_COMPATIBILITY
 //config:	bool "Enable untarring of tarballs with checksums produced by buggy Sun tar"
 //config:	default y
 //config:	depends on TAR || DPKG
 //config:	help
-//config:	  This option is required to unpack archives created by some old
-//config:	  version of Sun's tar (it was calculating checksum using signed
-//config:	  arithmetic). It is said to be fixed in newer Sun tar, but "old"
-//config:	  tarballs still exist.
+//config:	This option is required to unpack archives created by some old
+//config:	version of Sun's tar (it was calculating checksum using signed
+//config:	arithmetic). It is said to be fixed in newer Sun tar, but "old"
+//config:	tarballs still exist.
 //config:
 //config:config FEATURE_TAR_GNU_EXTENSIONS
 //config:	bool "Support GNU tar extensions (long filenames)"
@@ -104,18 +85,18 @@
 //config:	default y
 //config:	depends on TAR && FEATURE_TAR_LONG_OPTIONS
 //config:	help
-//config:	  If you enable this option you'll be able to instruct tar to send
-//config:	  the contents of each extracted file to the standard input of an
-//config:	  external program.
+//config:	If you enable this option you'll be able to instruct tar to send
+//config:	the contents of each extracted file to the standard input of an
+//config:	external program.
 //config:
 //config:config FEATURE_TAR_UNAME_GNAME
 //config:	bool "Enable use of user and group names"
 //config:	default y
 //config:	depends on TAR
 //config:	help
-//config:	  Enable use of user and group names in tar. This affects contents
-//config:	  listings (-t) and preserving permissions when unpacking (-p).
-//config:	  +200 bytes.
+//config:	Enable use of user and group names in tar. This affects contents
+//config:	listings (-t) and preserving permissions when unpacking (-p).
+//config:	+200 bytes.
 //config:
 //config:config FEATURE_TAR_NOPRESERVE_TIME
 //config:	bool "Enable -m (do not preserve time) GNU option"
@@ -127,10 +108,11 @@
 //config:	default n
 //config:	depends on TAR && SELINUX
 //config:	help
-//config:	  With this option busybox supports restoring SELinux labels
-//config:	  when extracting files from tar archives.
+//config:	With this option busybox supports restoring SELinux labels
+//config:	when extracting files from tar archives.
 
 //applet:IF_TAR(APPLET(tar, BB_DIR_BIN, BB_SUID_DROP))
+
 //kbuild:lib-$(CONFIG_TAR) += tar.o
 
 #include <fnmatch.h>
@@ -174,7 +156,9 @@ typedef struct TarBallInfo {
 	int tarFd;                      /* Open-for-write file descriptor
 	                                 * for the tarball */
 	int verboseFlag;                /* Whether to print extra stuff or not */
+# if ENABLE_FEATURE_TAR_FROM
 	const llist_t *excludeList;     /* List of files to not include */
+# endif
 	HardLinkInfo *hlInfoHead;       /* Hard Link Tracking Information */
 	HardLinkInfo *hlInfo;           /* Hard Link Info for the current file */
 //TODO: save only st_dev + st_ino
@@ -296,7 +280,7 @@ static void chksum_and_xwrite(int fd, st
 	xwrite(fd, hp, sizeof(*hp));
 }
 
-#if ENABLE_FEATURE_TAR_GNU_EXTENSIONS
+# if ENABLE_FEATURE_TAR_GNU_EXTENSIONS
 static void writeLongname(int fd, int type, const char *name, int dir)
 {
 	static const struct {
@@ -336,7 +320,7 @@ static void writeLongname(int fd, int ty
 	memset(&header, 0, size);
 	xwrite(fd, &header, size);
 }
-#endif
+# endif
 
 /* Write out a tar header for the specified file/directory/whatever */
 static int writeTarHeader(struct TarBallInfo *tbInfo,
@@ -365,30 +349,30 @@ static int writeTarHeader(struct TarBall
 		header.typeflag = LNKTYPE;
 		strncpy(header.linkname, tbInfo->hlInfo->name,
 				sizeof(header.linkname));
-#if ENABLE_FEATURE_TAR_GNU_EXTENSIONS
+# if ENABLE_FEATURE_TAR_GNU_EXTENSIONS
 		/* Write out long linkname if needed */
 		if (header.linkname[sizeof(header.linkname)-1])
 			writeLongname(tbInfo->tarFd, GNULONGLINK,
 					tbInfo->hlInfo->name, 0);
-#endif
+# endif
 	} else if (S_ISLNK(statbuf->st_mode)) {
 		char *lpath = xmalloc_readlink_or_warn(fileName);
 		if (!lpath)
 			return FALSE;
 		header.typeflag = SYMTYPE;
 		strncpy(header.linkname, lpath, sizeof(header.linkname));
-#if ENABLE_FEATURE_TAR_GNU_EXTENSIONS
+# if ENABLE_FEATURE_TAR_GNU_EXTENSIONS
 		/* Write out long linkname if needed */
 		if (header.linkname[sizeof(header.linkname)-1])
 			writeLongname(tbInfo->tarFd, GNULONGLINK, lpath, 0);
-#else
+# else
 		/* If it is larger than 100 bytes, bail out */
 		if (header.linkname[sizeof(header.linkname)-1]) {
 			free(lpath);
 			bb_error_msg("names longer than "NAME_SIZE_STR" chars not supported");
 			return FALSE;
 		}
-#endif
+# endif
 		free(lpath);
 	} else if (S_ISDIR(statbuf->st_mode)) {
 		header.typeflag = DIRTYPE;
@@ -418,9 +402,9 @@ static int writeTarHeader(struct TarBall
 		 * It always does unless off_t is wider than 64 bits.
 		 */
 		else if (ENABLE_FEATURE_TAR_GNU_EXTENSIONS
-#if ULLONG_MAX > 0xffffffffffffffffLL /* 2^64-1 */
+# if ULLONG_MAX > 0xffffffffffffffffLL /* 2^64-1 */
 		 && (filesize <= 0x3fffffffffffffffffffffffLL)
-#endif
+# endif
 		) {
 			/* GNU tar uses "base-256 encoding" for very large numbers.
 			 * Encoding is binary, with highest bit always set as a marker
@@ -447,13 +431,13 @@ static int writeTarHeader(struct TarBall
 		return FALSE;
 	}
 
-#if ENABLE_FEATURE_TAR_GNU_EXTENSIONS
+# if ENABLE_FEATURE_TAR_GNU_EXTENSIONS
 	/* Write out long name if needed */
 	/* (we, like GNU tar, output long linkname *before* long name) */
 	if (header.name[sizeof(header.name)-1])
 		writeLongname(tbInfo->tarFd, GNULONGNAME,
 				header_name, S_ISDIR(statbuf->st_mode));
-#endif
+# endif
 
 	/* Now write the header out to disk */
 	chksum_and_xwrite(tbInfo->tarFd, &header);
@@ -475,7 +459,7 @@ static int writeTarHeader(struct TarBall
 	return TRUE;
 }
 
-#if ENABLE_FEATURE_TAR_FROM
+# if ENABLE_FEATURE_TAR_FROM
 static int exclude_file(const llist_t *excluded_files, const char *file)
 {
 	while (excluded_files) {
@@ -501,9 +485,9 @@ static int exclude_file(const llist_t *e
 
 	return 0;
 }
-#else
-# define exclude_file(excluded_files, file) 0
-#endif
+# else
+#  define exclude_file(excluded_files, file) 0
+# endif
 
 static int FAST_FUNC writeFileToTarball(const char *fileName, struct stat *statbuf,
 			void *userData, int depth UNUSED_PARAM)
@@ -556,12 +540,12 @@ static int FAST_FUNC writeFileToTarball(
 	if (exclude_file(tbInfo->excludeList, header_name))
 		return SKIP;
 
-#if !ENABLE_FEATURE_TAR_GNU_EXTENSIONS
+# if !ENABLE_FEATURE_TAR_GNU_EXTENSIONS
 	if (strlen(header_name) >= NAME_SIZE) {
 		bb_error_msg("names longer than "NAME_SIZE_STR" chars not supported");
 		return TRUE;
 	}
-#endif
+# endif
 
 	/* Is this a regular file? */
 	if (tbInfo->hlInfo == NULL && S_ISREG(statbuf->st_mode)) {
@@ -608,7 +592,7 @@ static int FAST_FUNC writeFileToTarball(
 	return TRUE;
 }
 
-#if SEAMLESS_COMPRESSION
+# if SEAMLESS_COMPRESSION
 /* Don't inline: vfork scares gcc and pessimizes code */
 static void NOINLINE vfork_compressor(int tar_fd, const char *gzip)
 {
@@ -616,13 +600,13 @@ static void NOINLINE vfork_compressor(in
 
 	// On Linux, vfork never unpauses parent early, although standard
 	// allows for that. Do we want to waste bytes checking for it?
-# define WAIT_FOR_CHILD 0
+#  define WAIT_FOR_CHILD 0
 	volatile int vfork_exec_errno = 0;
 	struct fd_pair gzipDataPipe;
-# if WAIT_FOR_CHILD
+#  if WAIT_FOR_CHILD
 	struct fd_pair gzipStatusPipe;
 	xpiped_pair(gzipStatusPipe);
-# endif
+#  endif
 	xpiped_pair(gzipDataPipe);
 
 	signal(SIGPIPE, SIG_IGN); /* we only want EPIPE on errors */
@@ -633,12 +617,12 @@ static void NOINLINE vfork_compressor(in
 		/* child */
 		/* NB: close _first_, then move fds! */
 		close(gzipDataPipe.wr);
-# if WAIT_FOR_CHILD
+#  if WAIT_FOR_CHILD
 		close(gzipStatusPipe.rd);
 		/* gzipStatusPipe.wr will close only on exec -
 		 * parent waits for this close to happen */
 		fcntl(gzipStatusPipe.wr, F_SETFD, FD_CLOEXEC);
-# endif
+#  endif
 		xmove_fd(gzipDataPipe.rd, 0);
 		xmove_fd(tar_fd, 1);
 		/* exec gzip/bzip2 program/applet */
@@ -650,7 +634,7 @@ static void NOINLINE vfork_compressor(in
 	/* parent */
 	xmove_fd(gzipDataPipe.wr, tar_fd);
 	close(gzipDataPipe.rd);
-# if WAIT_FOR_CHILD
+#  if WAIT_FOR_CHILD
 	close(gzipStatusPipe.wr);
 	while (1) {
 		char buf;
@@ -662,55 +646,52 @@ static void NOINLINE vfork_compressor(in
 			continue;	/* try it again */
 	}
 	close(gzipStatusPipe.rd);
-# endif
+#  endif
 	if (vfork_exec_errno) {
 		errno = vfork_exec_errno;
 		bb_perror_msg_and_die("can't execute '%s'", gzip);
 	}
 }
-#endif /* SEAMLESS_COMPRESSION */
+# endif /* SEAMLESS_COMPRESSION */
 
 
-#if !SEAMLESS_COMPRESSION
+# if !SEAMLESS_COMPRESSION
 /* Do not pass gzip flag to writeTarFile() */
-#define writeTarFile(tar_fd, verboseFlag, recurseFlags, include, exclude, gzip) \
-	writeTarFile(tar_fd, verboseFlag, recurseFlags, include, exclude)
-#endif
+#define writeTarFile(tbInfo, recurseFlags, filelist, gzip) \
+	writeTarFile(tbInfo, recurseFlags, filelist)
+# endif
 /* gcc 4.2.1 inlines it, making code bigger */
-static NOINLINE int writeTarFile(int tar_fd, int verboseFlag,
-	int recurseFlags, const llist_t *include,
-	const llist_t *exclude, const char *gzip)
+static NOINLINE int writeTarFile(
+	struct TarBallInfo *tbInfo,
+	int recurseFlags,
+	const llist_t *filelist,
+	const char *gzip)
 {
 	int errorFlag = FALSE;
-	struct TarBallInfo tbInfo;
 
-	tbInfo.hlInfoHead = NULL;
-	tbInfo.tarFd = tar_fd;
-	tbInfo.verboseFlag = verboseFlag;
+	/*tbInfo->hlInfoHead = NULL; - already is */
 
 	/* Store the stat info for the tarball's file, so
 	 * can avoid including the tarball into itself....  */
-	xfstat(tbInfo.tarFd, &tbInfo.tarFileStatBuf, "can't stat tar file");
+	xfstat(tbInfo->tarFd, &tbInfo->tarFileStatBuf, "can't stat tar file");
 
-#if SEAMLESS_COMPRESSION
+# if SEAMLESS_COMPRESSION
 	if (gzip)
-		vfork_compressor(tbInfo.tarFd, gzip);
-#endif
-
-	tbInfo.excludeList = exclude;
+		vfork_compressor(tbInfo->tarFd, gzip);
+# endif
 
 	/* Read the directory/files and iterate over them one at a time */
-	while (include) {
-		if (!recursive_action(include->data, recurseFlags,
-				writeFileToTarball, writeFileToTarball, &tbInfo, 0)
+	while (filelist) {
+		if (!recursive_action(filelist->data, recurseFlags,
+				writeFileToTarball, writeFileToTarball, tbInfo, 0)
 		) {
 			errorFlag = TRUE;
 		}
-		include = include->link;
+		filelist = filelist->link;
 	}
 	/* Write two empty blocks to the end of the archive */
 	memset(block_buf, 0, 2*TAR_BLOCK_SIZE);
-	xwrite(tbInfo.tarFd, block_buf, 2*TAR_BLOCK_SIZE);
+	xwrite(tbInfo->tarFd, block_buf, 2*TAR_BLOCK_SIZE);
 
 	/* To be pedantically correct, we would check if the tarball
 	 * is smaller than 20 tar blocks, and pad it if it was smaller,
@@ -718,16 +699,16 @@ static NOINLINE int writeTarFile(int tar
 	 * so is considered a waste of space */
 
 	/* Close so the child process (if any) will exit */
-	close(tbInfo.tarFd);
+	close(tbInfo->tarFd);
 
 	/* Hang up the tools, close up shop, head home */
 	if (ENABLE_FEATURE_CLEAN_UP)
-		freeHardLinkInfo(&tbInfo.hlInfoHead);
+		freeHardLinkInfo(&tbInfo->hlInfoHead);
 
 	if (errorFlag)
 		bb_error_msg("error exit delayed from previous errors");
 
-#if SEAMLESS_COMPRESSION
+# if SEAMLESS_COMPRESSION
 	if (gzip) {
 		int status;
 		if (safe_waitpid(-1, &status, 0) == -1)
@@ -736,21 +717,25 @@ static NOINLINE int writeTarFile(int tar
 			/* gzip was killed or has exited with nonzero! */
 			errorFlag = TRUE;
 	}
-#endif
+# endif
 	return errorFlag;
 }
+
 #else /* !FEATURE_TAR_CREATE */
+
 # define writeTarFile(...) 0
+
 #endif
 
 #if ENABLE_FEATURE_TAR_FROM
 static llist_t *append_file_list_to_list(llist_t *list)
 {
-	FILE *src_stream;
-	char *line;
 	llist_t *newlist = NULL;
 
 	while (list) {
+		FILE *src_stream;
+		char *line;
+
 		src_stream = xfopen_stdin(llist_pop(&list));
 		while ((line = xmalloc_fgetline(src_stream)) != NULL) {
 			/* kill trailing '/' unless the string is just "/" */
@@ -766,7 +751,7 @@ static llist_t *append_file_list_to_list
 #endif
 
 //usage:#define tar_trivial_usage
-//usage:	"-[" IF_FEATURE_TAR_CREATE("c") "xt"
+//usage:	IF_FEATURE_TAR_CREATE("c|") "x|t [-"
 //usage:	IF_FEATURE_SEAMLESS_Z("Z")
 //usage:	IF_FEATURE_SEAMLESS_GZ("z")
 //usage:	IF_FEATURE_SEAMLESS_XZ("J")
@@ -775,8 +760,9 @@ static llist_t *append_file_list_to_list
 //usage:	IF_FEATURE_TAR_CREATE("h")
 //usage:	IF_FEATURE_TAR_NOPRESERVE_TIME("m")
 //usage:	"vO] "
-//usage:	IF_FEATURE_TAR_FROM("[-X FILE] [-T FILE] ")
-//usage:	"[-f TARFILE] [-C DIR] [FILE]..."
+//usage:	"[-f TARFILE] [-C DIR] "
+//usage:	IF_FEATURE_TAR_FROM("[-T FILE] [-X FILE] "IF_FEATURE_TAR_LONG_OPTIONS("[--exclude PATTERN]... "))
+//usage:	"[FILE]..."
 //usage:#define tar_full_usage "\n\n"
 //usage:	IF_FEATURE_TAR_CREATE("Create, extract, ")
 //usage:	IF_NOT_FEATURE_TAR_CREATE("Extract ")
@@ -787,37 +773,37 @@ static llist_t *append_file_list_to_list
 //usage:	)
 //usage:     "\n	x	Extract"
 //usage:     "\n	t	List"
-//usage:     "\n	f	Name of TARFILE ('-' for stdin/out)"
-//usage:     "\n	C	Change to DIR before operation"
-//usage:     "\n	v	Verbose"
+//usage:     "\n	-f FILE	Name of TARFILE ('-' for stdin/out)"
+//usage:     "\n	-C DIR	Change to DIR before operation"
+//usage:     "\n	-v	Verbose"
 //usage:	IF_FEATURE_SEAMLESS_Z(
-//usage:     "\n	Z	(De)compress using compress"
+//usage:     "\n	-Z	(De)compress using compress"
 //usage:	)
 //usage:	IF_FEATURE_SEAMLESS_GZ(
-//usage:     "\n	z	(De)compress using gzip"
+//usage:     "\n	-z	(De)compress using gzip"
 //usage:	)
 //usage:	IF_FEATURE_SEAMLESS_XZ(
-//usage:     "\n	J	(De)compress using xz"
+//usage:     "\n	-J	(De)compress using xz"
 //usage:	)
 //usage:	IF_FEATURE_SEAMLESS_BZ2(
-//usage:     "\n	j	(De)compress using bzip2"
+//usage:     "\n	-j	(De)compress using bzip2"
 //usage:	)
 //usage:	IF_FEATURE_SEAMLESS_LZMA(
-//usage:     "\n	a	(De)compress using lzma"
+//usage:     "\n	-a	(De)compress using lzma"
 //usage:	)
-//usage:     "\n	O	Extract to stdout"
+//usage:     "\n	-O	Extract to stdout"
 //usage:	IF_FEATURE_TAR_CREATE(
-//usage:     "\n	h	Follow symlinks"
+//usage:     "\n	-h	Follow symlinks"
 //usage:	)
 //usage:	IF_FEATURE_TAR_NOPRESERVE_TIME(
-//usage:     "\n	m	Don't restore mtime"
+//usage:     "\n	-m	Don't restore mtime"
 //usage:	)
 //usage:	IF_FEATURE_TAR_FROM(
+//usage:     "\n	-T FILE	File with names to include"
+//usage:     "\n	-X FILE	File with glob patterns to exclude"
 //usage:	IF_FEATURE_TAR_LONG_OPTIONS(
-//usage:     "\n	exclude	File to exclude"
+//usage:     "\n	--exclude PATTERN	Glob pattern to exclude"
 //usage:	)
-//usage:     "\n	X	File with names to exclude"
-//usage:     "\n	T	File with names to include"
 //usage:	)
 //usage:
 //usage:#define tar_example_usage
@@ -941,6 +927,11 @@ static const char tar_longopts[] ALIGN1
 	"exclude\0"             Required_argument "\xff"
 # endif
 	;
+# define GETOPT32 getopt32long
+# define LONGOPTS ,tar_longopts
+#else
+# define GETOPT32 getopt32
+# define LONGOPTS
 #endif
 
 int tar_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
@@ -966,22 +957,6 @@ int tar_main(int argc UNUSED_PARAM, char
 	if (getuid() != 0)
 		tar_handle->ah_flags |= ARCHIVE_DONT_RESTORE_PERM;
 
-	/* Prepend '-' to the first argument if required */
-	opt_complementary = "--:" // first arg is options
-		"tt:vv:" // count -t,-v
-#if ENABLE_FEATURE_TAR_LONG_OPTIONS && ENABLE_FEATURE_TAR_FROM
-		"\xff::" // --exclude=PATTERN is a list
-#endif
-		IF_FEATURE_TAR_CREATE("c:") "t:x:" // at least one of these is reqd
-		IF_FEATURE_TAR_CREATE("c--tx:t--cx:x--ct") // mutually exclusive
-		IF_NOT_FEATURE_TAR_CREATE("t--x:x--t") // mutually exclusive
-#if ENABLE_FEATURE_TAR_LONG_OPTIONS
-		":\xf9+" // --strip-components=NUM
-#endif
-	;
-#if ENABLE_FEATURE_TAR_LONG_OPTIONS
-	applet_long_options = tar_longopts;
-#endif
 #if ENABLE_DESKTOP
 	/* Lie to buildroot when it starts asking stupid questions. */
 	if (argv[1] && strcmp(argv[1], "--version") == 0) {
@@ -992,11 +967,12 @@ int tar_main(int argc UNUSED_PARAM, char
 		puts("tar (busybox) " BB_VER);
 		return 0;
 	}
-	if (argv[1] && argv[1][0] != '-') {
+#endif
+	if (argv[1] && argv[1][0] != '-' && argv[1][0] != '\0') {
 		/* Compat:
 		 * 1st argument without dash handles options with parameters
 		 * differently from dashed one: it takes *next argv[i]*
-		 * as paramenter even if there are more chars in 1st argument:
+		 * as parameter even if there are more chars in 1st argument:
 		 *  "tar fx TARFILE" - "x" is not taken as f's param
 		 *  but is interpreted as -x option
 		 *  "tar -xf TARFILE" - dashed equivalent of the above
@@ -1016,9 +992,10 @@ int tar_main(int argc UNUSED_PARAM, char
 			}
 			*f = 'f';
 		}
+		/* Prepend '-' to the first argument  */
+		argv[1] = xasprintf("-%s", argv[1]);
 	}
-#endif
-	opt = getopt32(argv,
+	opt = GETOPT32(argv, "^"
 		"txC:f:Oopvk"
 		IF_FEATURE_TAR_CREATE(   "ch"    )
 		IF_FEATURE_SEAMLESS_BZ2( "j"     )
@@ -1029,6 +1006,18 @@ int tar_main(int argc UNUSED_PARAM, char
 		IF_FEATURE_SEAMLESS_Z(   "Z"     )
 		IF_FEATURE_TAR_NOPRESERVE_TIME("m")
 		IF_FEATURE_TAR_LONG_OPTIONS("\xf9:") // --strip-components
+		"\0"
+		"tt:vv:" // count -t,-v
+#if ENABLE_FEATURE_TAR_LONG_OPTIONS && ENABLE_FEATURE_TAR_FROM
+		"\xff::" // --exclude=PATTERN is a list
+#endif
+		IF_FEATURE_TAR_CREATE("c:") "t:x:" // at least one of these is reqd
+		IF_FEATURE_TAR_CREATE("c--tx:t--cx:x--ct") // mutually exclusive
+		IF_NOT_FEATURE_TAR_CREATE("t--x:x--t") // mutually exclusive
+#if ENABLE_FEATURE_TAR_LONG_OPTIONS
+		":\xf9+" // --strip-components=NUM
+#endif
+		LONGOPTS
 		, &base_dir // -C dir
 		, &tar_filename // -f filename
 		IF_FEATURE_TAR_FROM(, &(tar_handle->accept)) // T
@@ -1183,13 +1172,10 @@ int tar_main(int argc UNUSED_PARAM, char
 	if (base_dir)
 		xchdir(base_dir);
 
-	//if (SEAMLESS_COMPRESSION)
-	//	/* We need to know whether child (gzip/bzip/etc) exits abnormally */
-	//	signal(SIGCHLD, check_errors_in_children);
-
 #if ENABLE_FEATURE_TAR_CREATE
 	/* Create an archive */
 	if (opt & OPT_CREATE) {
+		struct TarBallInfo *tbInfo;
 # if SEAMLESS_COMPRESSION
 		const char *zipMode = NULL;
 		if (opt & OPT_COMPRESS)
@@ -1203,12 +1189,18 @@ int tar_main(int argc UNUSED_PARAM, char
 		if (opt & OPT_XZ)
 			zipMode = "xz";
 # endif
+		tbInfo = xzalloc(sizeof(*tbInfo));
+		tbInfo->tarFd = tar_handle->src_fd;
+		tbInfo->verboseFlag = verboseFlag;
+# if ENABLE_FEATURE_TAR_FROM
+		tbInfo->excludeList = tar_handle->reject;
+# endif
 		/* NB: writeTarFile() closes tar_handle->src_fd */
-		return writeTarFile(tar_handle->src_fd, verboseFlag,
+		return writeTarFile(tbInfo,
 				(opt & OPT_DEREFERENCE ? ACTION_FOLLOWLINKS : 0)
 				| (opt & OPT_NORECURSION ? 0 : ACTION_RECURSE),
 				tar_handle->accept,
-				tar_handle->reject, zipMode);
+				zipMode);
 	}
 #endif
 
diff -urpN busybox-1.27.2/archival/tar_symlink_attack busybox-1.28.0/archival/tar_symlink_attack
--- busybox-1.27.2/archival/tar_symlink_attack	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/archival/tar_symlink_attack	2017-07-24 18:57:09.000000000 +0200
@@ -0,0 +1,16 @@
+#!/bin/sh
+# Makes "symlink attack" tarball (needs GNU tar for --append)
+
+true >anything.txt
+tar cvf tar_symlink_attack.tar anything.txt
+rm anything.txt
+
+ln -s /tmp symlink
+tar --append -f tar_symlink_attack.tar symlink
+rm symlink
+
+mkdir symlink
+echo BUG >symlink/bb_test_evilfile
+tar --append -f tar_symlink_attack.tar symlink/bb_test_evilfile
+rm symlink/bb_test_evilfile
+rmdir symlink
diff -urpN busybox-1.27.2/archival/unzip.c busybox-1.28.0/archival/unzip.c
--- busybox-1.27.2/archival/unzip.c	2017-08-04 14:54:16.000000000 +0200
+++ busybox-1.28.0/archival/unzip.c	2017-12-04 16:07:47.000000000 +0100
@@ -17,23 +17,23 @@
  * Zip64 + other methods
  */
 //config:config UNZIP
-//config:	bool "unzip"
+//config:	bool "unzip (24 kb)"
 //config:	default y
 //config:	help
-//config:	  unzip will list or extract files from a ZIP archive,
-//config:	  commonly found on DOS/WIN systems. The default behavior
-//config:	  (with no options) is to extract the archive into the
-//config:	  current directory.
+//config:	unzip will list or extract files from a ZIP archive,
+//config:	commonly found on DOS/WIN systems. The default behavior
+//config:	(with no options) is to extract the archive into the
+//config:	current directory.
 //config:
 //config:config FEATURE_UNZIP_CDF
 //config:	bool "Read and use Central Directory data"
 //config:	default y
 //config:	depends on UNZIP
 //config:	help
-//config:	  If you know that you only need to deal with simple
-//config:	  ZIP files without deleted/updated files, SFX archives etc,
-//config:	  you can reduce code size by unselecting this option.
-//config:	  To support less trivial ZIPs, say Y.
+//config:	If you know that you only need to deal with simple
+//config:	ZIP files without deleted/updated files, SFX archives etc,
+//config:	you can reduce code size by unselecting this option.
+//config:	To support less trivial ZIPs, say Y.
 //config:
 //config:config FEATURE_UNZIP_BZIP2
 //config:	bool "Support compression method 12 (bzip2)"
@@ -56,12 +56,13 @@
 //kbuild:lib-$(CONFIG_UNZIP) += unzip.o
 
 //usage:#define unzip_trivial_usage
-//usage:       "[-lnopq] FILE[.zip] [FILE]... [-x FILE...] [-d DIR]"
+//usage:       "[-lnojpq] FILE[.zip] [FILE]... [-x FILE...] [-d DIR]"
 //usage:#define unzip_full_usage "\n\n"
 //usage:       "Extract FILEs from ZIP archive\n"
 //usage:     "\n	-l	List contents (with -q for short form)"
 //usage:     "\n	-n	Never overwrite files (default: ask)"
 //usage:     "\n	-o	Overwrite"
+//usage:     "\n	-j	Do not restore paths"
 //usage:     "\n	-p	Print to stdout"
 //usage:     "\n	-q	Quiet"
 //usage:     "\n	-x FILE	Exclude FILEs"
@@ -318,6 +319,12 @@ static uint32_t read_next_cdf(uint32_t c
 };
 #endif
 
+static void die_if_bad_fnamesize(unsigned sz)
+{
+	if (sz > 0xfff) /* more than 4k?! no funny business please */
+		bb_error_msg_and_die("bad archive");
+}
+
 static void unzip_skip(off_t skip)
 {
 	if (skip != 0)
@@ -335,6 +342,45 @@ static void unzip_create_leading_dirs(co
 	free(name);
 }
 
+#if ENABLE_FEATURE_UNZIP_CDF
+static void unzip_extract_symlink(zip_header_t *zip, const char *dst_fn)
+{
+	char *target;
+
+	die_if_bad_fnamesize(zip->fmt.ucmpsize);
+
+	if (zip->fmt.method == 0) {
+		/* Method 0 - stored (not compressed) */
+		target = xzalloc(zip->fmt.ucmpsize + 1);
+		xread(zip_fd, target, zip->fmt.ucmpsize);
+	} else {
+#if 1
+		bb_error_msg_and_die("compressed symlink is not supported");
+#else
+		transformer_state_t xstate;
+		init_transformer_state(&xstate);
+		xstate.mem_output_size_max = zip->fmt.ucmpsize;
+		/* ...unpack... */
+		if (!xstate.mem_output_buf)
+			WTF();
+		target = xstate.mem_output_buf;
+		target = xrealloc(target, xstate.mem_output_size + 1);
+		target[xstate.mem_output_size] = '\0';
+#endif
+	}
+	if (!unsafe_symlink_target(target)) {
+//TODO: libbb candidate
+		if (symlink(target, dst_fn)) {
+			/* shared message */
+			bb_perror_msg_and_die("can't create %slink '%s' to '%s'",
+				"sym", dst_fn, target
+			);
+		}
+	}
+	free(target);
+}
+#endif
+
 static void unzip_extract(zip_header_t *zip, int dst_fd)
 {
 	transformer_state_t xstate;
@@ -406,16 +452,32 @@ static void my_fgets80(char *buf80)
 	}
 }
 
+static int get_lstat_mode(const char *dst_fn)
+{
+	struct stat stat_buf;
+	if (lstat(dst_fn, &stat_buf) == -1) {
+		if (errno != ENOENT) {
+			bb_perror_msg_and_die("can't stat '%s'", dst_fn);
+		}
+		/* File does not exist */
+		return -1;
+	}
+	return stat_buf.st_mode;
+}
+
 int unzip_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int unzip_main(int argc, char **argv)
 {
-	enum { O_PROMPT, O_NEVER, O_ALWAYS };
-
+	enum {
+		OPT_l = (1 << 0),
+		OPT_x = (1 << 1),
+		OPT_j = (1 << 2),
+	};
+	unsigned opts;
 	smallint quiet = 0;
 	IF_NOT_FEATURE_UNZIP_CDF(const) smallint verbose = 0;
-	smallint listing = 0;
+	enum { O_PROMPT, O_NEVER, O_ALWAYS };
 	smallint overwrite = O_PROMPT;
-	smallint x_opt_seen;
 	uint32_t cdf_offset;
 	unsigned long total_usize;
 	unsigned long total_size;
@@ -426,9 +488,8 @@ int unzip_main(int argc, char **argv)
 	llist_t *zaccept = NULL;
 	llist_t *zreject = NULL;
 	char *base_dir = NULL;
-	int i, opt;
+	int i;
 	char key_buf[80]; /* must match size used by my_fgets80 */
-	struct stat stat_buf;
 
 /* -q, -l and -v: UnZip 5.52 of 28 February 2005, by Info-ZIP:
  *
@@ -471,16 +532,16 @@ int unzip_main(int argc, char **argv)
  *    204372                   1 file
  */
 
-	x_opt_seen = 0;
+	opts = 0;
 	/* '-' makes getopt return 1 for non-options */
-	while ((opt = getopt(argc, argv, "-d:lnopqxv")) != -1) {
-		switch (opt) {
+	while ((i = getopt(argc, argv, "-d:lnopqxjv")) != -1) {
+		switch (i) {
 		case 'd':  /* Extract to base directory */
 			base_dir = optarg;
 			break;
 
 		case 'l': /* List */
-			listing = 1;
+			opts |= OPT_l;
 			break;
 
 		case 'n': /* Never overwrite existing files */
@@ -500,11 +561,15 @@ int unzip_main(int argc, char **argv)
 
 		case 'v': /* Verbose list */
 			IF_FEATURE_UNZIP_CDF(verbose++;)
-			listing = 1;
+			opts |= OPT_l;
 			break;
 
 		case 'x':
-			x_opt_seen = 1;
+			opts |= OPT_x;
+			break;
+
+		case 'j':
+			opts |= OPT_j;
 			break;
 
 		case 1:
@@ -513,7 +578,7 @@ int unzip_main(int argc, char **argv)
 				/* +5: space for ".zip" and NUL */
 				src_fn = xmalloc(strlen(optarg) + 5);
 				strcpy(src_fn, optarg);
-			} else if (!x_opt_seen) {
+			} else if (!(opts & OPT_x)) {
 				/* Include files */
 				llist_add_to(&zaccept, optarg);
 			} else {
@@ -581,7 +646,7 @@ int unzip_main(int argc, char **argv)
 	if (quiet <= 1) { /* not -qq */
 		if (quiet == 0)
 			printf("Archive:  %s\n", src_fn);
-		if (listing) {
+		if (opts & OPT_l) {
 			puts(verbose ?
 				" Length   Method    Size  Cmpr    Date    Time   CRC-32   Name\n"
 				"--------  ------  ------- ---- ---------- ----- --------  ----"
@@ -686,6 +751,20 @@ int unzip_main(int argc, char **argv)
 				zip.fmt.cmpsize  = cdf.fmt.cmpsize;
 				zip.fmt.ucmpsize = cdf.fmt.ucmpsize;
 			}
+// Seen in some zipfiles: central directory 9 byte extra field contains
+// a subfield with ID 0x5455 and 5 data bytes, which is a Unix-style UTC mtime.
+// Local header version:
+//  u16 0x5455 ("UT")
+//  u16 size (1 + 4 * n)
+//  u8  flags: bit 0:mtime is present, bit 1:atime is present, bit 2:ctime is present
+//  u32 mtime
+//  u32 atime
+//  u32 ctime
+// Central header version:
+//  u16 0x5455 ("UT")
+//  u16 size (5 (or 1?))
+//  u8  flags: bit 0:mtime is present, bit 1:atime is present, bit 2:ctime is present
+//  u32 mtime (CDF does not store atime/ctime)
 # else
 			/* CDF has the same data as local header, no need to read the latter...
 			 * ...not really. An archive was seen with cdf.extra_len == 6 but
@@ -717,9 +796,9 @@ int unzip_main(int argc, char **argv)
 
 		/* Read filename */
 		free(dst_fn);
+		die_if_bad_fnamesize(zip.fmt.filename_len);
 		dst_fn = xzalloc(zip.fmt.filename_len + 1);
 		xread(zip_fd, dst_fn, zip.fmt.filename_len);
-
 		/* Skip extra header bytes */
 		unzip_skip(zip.fmt.extra_len);
 
@@ -733,7 +812,7 @@ int unzip_main(int argc, char **argv)
 			goto skip_cmpsize;
 		}
 
-		if (listing) {
+		if (opts & OPT_l) {
 			/* List entry */
 			char dtbuf[sizeof("mm-dd-yyyy hh:mm")];
 			sprintf(dtbuf, "%02u-%02u-%04u %02u:%02u",
@@ -790,12 +869,20 @@ int unzip_main(int argc, char **argv)
 			/* Extracting to STDOUT */
 			goto do_extract;
 		}
+
+		/* Strip paths (after -l: unzip -lj a.zip lists full names) */
+		if (opts & OPT_j)
+			overlapping_strcpy(dst_fn, bb_basename(dst_fn));
+		/* Did this strip everything ("DIR/" case)? Then skip */
+		if (!dst_fn[0])
+			goto skip_cmpsize;
+
 		if (last_char_is(dst_fn, '/')) {
+			int mode;
+
 			/* Extract directory */
-			if (stat(dst_fn, &stat_buf) == -1) {
-				if (errno != ENOENT) {
-					bb_perror_msg_and_die("can't stat '%s'", dst_fn);
-				}
+			mode = get_lstat_mode(dst_fn);
+			if (mode == -1) { /* ENOENT */
 				if (!quiet) {
 					printf("   creating: %s\n", dst_fn);
 				}
@@ -804,7 +891,7 @@ int unzip_main(int argc, char **argv)
 					xfunc_die();
 				}
 			} else {
-				if (!S_ISDIR(stat_buf.st_mode)) {
+				if (!S_ISDIR(mode)) {
 					bb_error_msg_and_die("'%s' exists but is not a %s",
 						dst_fn, "directory");
 				}
@@ -812,29 +899,33 @@ int unzip_main(int argc, char **argv)
 			goto skip_cmpsize;
 		}
  check_file:
-		/* Extract file */
-		if (stat(dst_fn, &stat_buf) == -1) {
-			/* File does not exist */
-			if (errno != ENOENT) {
-				bb_perror_msg_and_die("can't stat '%s'", dst_fn);
+		/* Does target file already exist? */
+		{
+			int mode = get_lstat_mode(dst_fn);
+			if (mode == -1) {
+				/* ENOENT: does not exist */
+				goto do_open_and_extract;
+			}
+			if (overwrite == O_NEVER) {
+				goto skip_cmpsize;
+			}
+			if (!S_ISREG(mode)) {
+ fishy:
+				bb_error_msg_and_die("'%s' exists but is not a %s",
+					dst_fn, "regular file");
 			}
-			goto do_open_and_extract;
-		}
-		/* File already exists */
-		if (overwrite == O_NEVER) {
-			goto skip_cmpsize;
+			if (overwrite == O_ALWAYS) {
+				goto do_open_and_extract;
+			}
+			printf("replace %s? [y]es, [n]o, [A]ll, [N]one, [r]ename: ", dst_fn);
+			my_fgets80(key_buf);
+			/* User input could take a long time. Is it still a regular file? */
+			mode = get_lstat_mode(dst_fn);
+			if (!S_ISREG(mode))
+				goto fishy;
 		}
-		if (!S_ISREG(stat_buf.st_mode)) {
-			/* File is not regular file */
-			bb_error_msg_and_die("'%s' exists but is not a %s",
-				dst_fn, "regular file");
-		}
-		/* File is regular file */
-		if (overwrite == O_ALWAYS)
-			goto do_open_and_extract;
-		printf("replace %s? [y]es, [n]o, [A]ll, [N]one, [r]ename: ", dst_fn);
-		my_fgets80(key_buf);
 
+		/* Extract (or skip) it */
 		switch (key_buf[0]) {
 		case 'A':
 			overwrite = O_ALWAYS;
@@ -842,9 +933,15 @@ int unzip_main(int argc, char **argv)
  do_open_and_extract:
 			unzip_create_leading_dirs(dst_fn);
 #if ENABLE_FEATURE_UNZIP_CDF
-			dst_fd = xopen3(dst_fn, O_WRONLY | O_CREAT | O_TRUNC, file_mode);
+			dst_fd = -1;
+			if (!S_ISLNK(file_mode)) {
+				dst_fd = xopen3(dst_fn,
+					O_WRONLY | O_CREAT | O_TRUNC | O_NOFOLLOW,
+					file_mode);
+			}
 #else
-			dst_fd = xopen(dst_fn, O_WRONLY | O_CREAT | O_TRUNC);
+			/* O_NOFOLLOW defends against symlink attacks */
+			dst_fd = xopen(dst_fn, O_WRONLY | O_CREAT | O_TRUNC | O_NOFOLLOW);
 #endif
  do_extract:
 			if (!quiet) {
@@ -852,10 +949,18 @@ int unzip_main(int argc, char **argv)
 					? " extracting: %s\n"
 					: */ "  inflating: %s\n", dst_fn);
 			}
-			unzip_extract(&zip, dst_fd);
-			if (dst_fd != STDOUT_FILENO) {
-				/* closing STDOUT is potentially bad for future business */
-				close(dst_fd);
+#if ENABLE_FEATURE_UNZIP_CDF
+			if (S_ISLNK(file_mode)) {
+				if (dst_fd != STDOUT_FILENO) /* not -p? */
+					unzip_extract_symlink(&zip, dst_fn);
+			} else
+#endif
+			{
+				unzip_extract(&zip, dst_fd);
+				if (dst_fd != STDOUT_FILENO) {
+					/* closing STDOUT is potentially bad for future business */
+					close(dst_fd);
+				}
 			}
 			break;
 
@@ -883,7 +988,7 @@ int unzip_main(int argc, char **argv)
 		total_entries++;
 	}
 
-	if (listing && quiet <= 1) {
+	if ((opts & OPT_l) && quiet <= 1) {
 		if (!verbose) {
 			//	"  Length      Date    Time    Name\n"
 			//	"---------  ---------- -----   ----"
diff -urpN busybox-1.27.2/configs/TEST_nommu_defconfig busybox-1.28.0/configs/TEST_nommu_defconfig
--- busybox-1.27.2/configs/TEST_nommu_defconfig	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/configs/TEST_nommu_defconfig	2017-08-17 13:50:45.000000000 +0200
@@ -37,7 +37,6 @@ CONFIG_SELINUX=y
 CONFIG_FEATURE_PREFER_APPLETS=y
 CONFIG_BUSYBOX_EXEC_PATH="/proc/self/exe"
 CONFIG_FEATURE_SYSLOG=y
-CONFIG_FEATURE_HAVE_RPC=y
 
 #
 # Build Options
@@ -891,7 +890,6 @@ CONFIG_HUSH_FUNCTIONS=y
 CONFIG_HUSH_LOCAL=y
 CONFIG_HUSH_EXPORT_N=y
 CONFIG_HUSH_RANDOM_SUPPORT=y
-CONFIG_MSH=y
 CONFIG_SH_MATH_SUPPORT=y
 CONFIG_SH_MATH_SUPPORT_64=y
 CONFIG_FEATURE_SH_EXTRA_QUIET=y
diff -urpN busybox-1.27.2/configs/TEST_noprintf_defconfig busybox-1.28.0/configs/TEST_noprintf_defconfig
--- busybox-1.27.2/configs/TEST_noprintf_defconfig	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/configs/TEST_noprintf_defconfig	2017-08-17 13:50:45.000000000 +0200
@@ -47,7 +47,6 @@ CONFIG_FEATURE_PIDFILE=y
 # CONFIG_FEATURE_PREFER_APPLETS is not set
 CONFIG_BUSYBOX_EXEC_PATH="/proc/self/exe"
 # CONFIG_FEATURE_SYSLOG is not set
-# CONFIG_FEATURE_HAVE_RPC is not set
 
 #
 # Build Options
@@ -898,7 +897,6 @@ CONFIG_FEATURE_SH_IS_NONE=y
 # CONFIG_FEATURE_BASH_IS_ASH is not set
 # CONFIG_FEATURE_BASH_IS_HUSH is not set
 CONFIG_FEATURE_BASH_IS_NONE=y
-# CONFIG_MSH is not set
 # CONFIG_SH_MATH_SUPPORT is not set
 # CONFIG_SH_MATH_SUPPORT_64 is not set
 # CONFIG_FEATURE_SH_EXTRA_QUIET is not set
diff -urpN busybox-1.27.2/configs/TEST_rh9_defconfig busybox-1.28.0/configs/TEST_rh9_defconfig
--- busybox-1.27.2/configs/TEST_rh9_defconfig	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/configs/TEST_rh9_defconfig	2017-08-17 13:50:45.000000000 +0200
@@ -46,7 +46,6 @@ CONFIG_FEATURE_SUID_CONFIG_QUIET=y
 # CONFIG_FEATURE_PREFER_APPLETS is not set
 CONFIG_BUSYBOX_EXEC_PATH="/proc/self/exe"
 CONFIG_FEATURE_SYSLOG=y
-CONFIG_FEATURE_HAVE_RPC=y
 
 #
 # Build Options
@@ -905,7 +904,6 @@ CONFIG_HUSH_FUNCTIONS=y
 CONFIG_HUSH_LOCAL=y
 CONFIG_HUSH_EXPORT_N=y
 CONFIG_HUSH_RANDOM_SUPPORT=y
-CONFIG_MSH=y
 CONFIG_SH_MATH_SUPPORT=y
 CONFIG_SH_MATH_SUPPORT_64=y
 CONFIG_FEATURE_SH_EXTRA_QUIET=y
diff -urpN busybox-1.27.2/configs/android2_defconfig busybox-1.28.0/configs/android2_defconfig
--- busybox-1.27.2/configs/android2_defconfig	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/configs/android2_defconfig	2017-08-17 13:50:45.000000000 +0200
@@ -49,7 +49,6 @@ CONFIG_LAST_SUPPORTED_WCHAR=0
 # CONFIG_FEATURE_PREFER_APPLETS is not set
 CONFIG_BUSYBOX_EXEC_PATH="/proc/self/exe"
 CONFIG_FEATURE_SYSLOG=y
-# CONFIG_FEATURE_HAVE_RPC is not set
 
 #
 # Build Options
@@ -952,7 +951,6 @@ CONFIG_CTTYHACK=y
 # CONFIG_HUSH_RANDOM_SUPPORT is not set
 # CONFIG_HUSH_EXPORT_N is not set
 # CONFIG_HUSH_MODE_X is not set
-# CONFIG_MSH is not set
 # CONFIG_FEATURE_SH_IS_ASH is not set
 # CONFIG_FEATURE_SH_IS_HUSH is not set
 CONFIG_FEATURE_SH_IS_NONE=y
diff -urpN busybox-1.27.2/configs/android_502_defconfig busybox-1.28.0/configs/android_502_defconfig
--- busybox-1.27.2/configs/android_502_defconfig	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/configs/android_502_defconfig	2017-08-17 13:50:45.000000000 +0200
@@ -123,7 +123,6 @@ CONFIG_FEATURE_SUID_CONFIG_QUIET=y
 # CONFIG_FEATURE_PREFER_APPLETS is not set
 CONFIG_BUSYBOX_EXEC_PATH="/proc/self/exe"
 CONFIG_FEATURE_SYSLOG=y
-# CONFIG_FEATURE_HAVE_RPC is not set
 
 #
 # Build Options
@@ -1098,7 +1097,6 @@ CONFIG_CTTYHACK=y
 # CONFIG_HUSH_RANDOM_SUPPORT is not set
 # CONFIG_HUSH_EXPORT_N is not set
 # CONFIG_HUSH_MODE_X is not set
-# CONFIG_MSH is not set
 CONFIG_FEATURE_SH_IS_ASH=y
 # CONFIG_FEATURE_SH_IS_HUSH is not set
 # CONFIG_FEATURE_SH_IS_NONE is not set
diff -urpN busybox-1.27.2/configs/android_defconfig busybox-1.28.0/configs/android_defconfig
--- busybox-1.27.2/configs/android_defconfig	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/configs/android_defconfig	2017-08-17 13:50:45.000000000 +0200
@@ -49,7 +49,6 @@ CONFIG_LAST_SUPPORTED_WCHAR=0
 # CONFIG_FEATURE_PREFER_APPLETS is not set
 CONFIG_BUSYBOX_EXEC_PATH="/proc/self/exe"
 CONFIG_FEATURE_SYSLOG=y
-# CONFIG_FEATURE_HAVE_RPC is not set
 
 #
 # Build Options
@@ -984,7 +983,6 @@ CONFIG_CTTYHACK=y
 # CONFIG_HUSH_RANDOM_SUPPORT is not set
 # CONFIG_HUSH_EXPORT_N is not set
 # CONFIG_HUSH_MODE_X is not set
-# CONFIG_MSH is not set
 # CONFIG_FEATURE_SH_IS_ASH is not set
 # CONFIG_FEATURE_SH_IS_HUSH is not set
 CONFIG_FEATURE_SH_IS_NONE=y
diff -urpN busybox-1.27.2/configs/android_ndk_defconfig busybox-1.28.0/configs/android_ndk_defconfig
--- busybox-1.27.2/configs/android_ndk_defconfig	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/configs/android_ndk_defconfig	2017-08-17 13:50:45.000000000 +0200
@@ -52,7 +52,6 @@ CONFIG_PID_FILE_PATH=""
 # CONFIG_FEATURE_PREFER_APPLETS is not set
 CONFIG_BUSYBOX_EXEC_PATH="/proc/self/exe"
 CONFIG_FEATURE_SYSLOG=y
-# CONFIG_FEATURE_HAVE_RPC is not set
 
 #
 # Build Options
@@ -1013,7 +1012,6 @@ CONFIG_CTTYHACK=y
 # CONFIG_HUSH_RANDOM_SUPPORT is not set
 # CONFIG_HUSH_EXPORT_N is not set
 # CONFIG_HUSH_MODE_X is not set
-# CONFIG_MSH is not set
 # CONFIG_FEATURE_SH_IS_ASH is not set
 # CONFIG_FEATURE_SH_IS_HUSH is not set
 CONFIG_FEATURE_SH_IS_NONE=y
diff -urpN busybox-1.27.2/configs/cygwin_defconfig busybox-1.28.0/configs/cygwin_defconfig
--- busybox-1.27.2/configs/cygwin_defconfig	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/configs/cygwin_defconfig	2017-08-17 13:50:45.000000000 +0200
@@ -49,7 +49,6 @@ CONFIG_FEATURE_SUID=y
 # CONFIG_FEATURE_PREFER_APPLETS is not set
 CONFIG_BUSYBOX_EXEC_PATH="/proc/self/exe"
 CONFIG_FEATURE_SYSLOG=y
-# CONFIG_FEATURE_HAVE_RPC is not set
 
 #
 # Build Options
@@ -955,7 +954,6 @@ CONFIG_HUSH_LOCAL=y
 CONFIG_HUSH_RANDOM_SUPPORT=y
 CONFIG_HUSH_EXPORT_N=y
 CONFIG_HUSH_MODE_X=y
-# CONFIG_MSH is not set
 CONFIG_FEATURE_SH_IS_ASH=y
 # CONFIG_FEATURE_SH_IS_HUSH is not set
 # CONFIG_FEATURE_SH_IS_NONE is not set
diff -urpN busybox-1.27.2/configs/freebsd_defconfig busybox-1.28.0/configs/freebsd_defconfig
--- busybox-1.27.2/configs/freebsd_defconfig	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/configs/freebsd_defconfig	2017-08-17 13:50:45.000000000 +0200
@@ -49,7 +49,6 @@ CONFIG_FEATURE_SUID_CONFIG_QUIET=y
 # CONFIG_FEATURE_PREFER_APPLETS is not set
 CONFIG_BUSYBOX_EXEC_PATH="/proc/self/exe"
 CONFIG_FEATURE_SYSLOG=y
-# CONFIG_FEATURE_HAVE_RPC is not set
 
 #
 # Build Options
@@ -931,7 +930,6 @@ CONFIG_ASH=y
 # CONFIG_HUSH_RANDOM_SUPPORT is not set
 # CONFIG_HUSH_EXPORT_N is not set
 # CONFIG_HUSH_MODE_X is not set
-# CONFIG_MSH is not set
 CONFIG_FEATURE_SH_IS_ASH=y
 # CONFIG_FEATURE_SH_IS_HUSH is not set
 # CONFIG_FEATURE_SH_IS_NONE is not set
diff -urpN busybox-1.27.2/console-tools/chvt.c busybox-1.28.0/console-tools/chvt.c
--- busybox-1.27.2/console-tools/chvt.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/console-tools/chvt.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,14 +7,14 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config CHVT
-//config:	bool "chvt"
+//config:	bool "chvt (2 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  This program is used to change to another terminal.
-//config:	  Example: chvt 4 (change to terminal /dev/tty4)
+//config:	This program is used to change to another terminal.
+//config:	Example: chvt 4 (change to terminal /dev/tty4)
 
-//applet:IF_CHVT(APPLET(chvt, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_CHVT(APPLET_NOEXEC(chvt, chvt, BB_DIR_USR_BIN, BB_SUID_DROP, chvt))
 
 //kbuild:lib-$(CONFIG_CHVT) += chvt.o
 
diff -urpN busybox-1.27.2/console-tools/clear.c busybox-1.28.0/console-tools/clear.c
--- busybox-1.27.2/console-tools/clear.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/console-tools/clear.c	2017-10-05 11:53:08.000000000 +0200
@@ -7,12 +7,12 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config CLEAR
-//config:	bool "clear"
+//config:	bool "clear (tiny)"
 //config:	default y
 //config:	help
-//config:	  This program clears the terminal screen.
+//config:	This program clears the terminal screen.
 
-//applet:IF_CLEAR(APPLET(clear, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_CLEAR(APPLET_NOFORK(clear, clear, BB_DIR_USR_BIN, BB_SUID_DROP, clear))
 
 //kbuild:lib-$(CONFIG_CLEAR) += clear.o
 
@@ -23,9 +23,11 @@
 
 #include "libbb.h"
 
+#define ESC "\033"
+
 int clear_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int clear_main(int argc UNUSED_PARAM, char **argv UNUSED_PARAM)
 {
 	/* home; clear to the end of screen */
-	return full_write1_str("\033[H""\033[J") != 6;
+	return full_write1_str(ESC"[H" ESC"[J") != 6;
 }
diff -urpN busybox-1.27.2/console-tools/deallocvt.c busybox-1.28.0/console-tools/deallocvt.c
--- busybox-1.27.2/console-tools/deallocvt.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/console-tools/deallocvt.c	2017-08-08 14:08:06.000000000 +0200
@@ -8,13 +8,13 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config DEALLOCVT
-//config:	bool "deallocvt"
+//config:	bool "deallocvt (1.9 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  This program deallocates unused virtual consoles.
+//config:	This program deallocates unused virtual consoles.
 
-//applet:IF_DEALLOCVT(APPLET(deallocvt, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_DEALLOCVT(APPLET_NOEXEC(deallocvt, deallocvt, BB_DIR_USR_BIN, BB_SUID_DROP, deallocvt))
 
 //kbuild:lib-$(CONFIG_DEALLOCVT) += deallocvt.o
 
diff -urpN busybox-1.27.2/console-tools/dumpkmap.c busybox-1.28.0/console-tools/dumpkmap.c
--- busybox-1.27.2/console-tools/dumpkmap.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/console-tools/dumpkmap.c	2017-10-05 11:53:08.000000000 +0200
@@ -5,17 +5,17 @@
  * Copyright (C) Arne Bernin <arne@matrix.loopback.org>
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
- *
  */
 //config:config DUMPKMAP
-//config:	bool "dumpkmap"
+//config:	bool "dumpkmap (1.3 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  This program dumps the kernel's keyboard translation table to
-//config:	  stdout, in binary format. You can then use loadkmap to load it.
+//config:	This program dumps the kernel's keyboard translation table to
+//config:	stdout, in binary format. You can then use loadkmap to load it.
 
-//applet:IF_DUMPKMAP(APPLET(dumpkmap, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_DUMPKMAP(APPLET_NOEXEC(dumpkmap, dumpkmap, BB_DIR_BIN, BB_SUID_DROP, dumpkmap))
+/* bb_common_bufsiz1 usage here is safe wrt NOEXEC: not expecting it to be zeroed. */
 
 //kbuild:lib-$(CONFIG_DUMPKMAP) += dumpkmap.o
 
@@ -47,8 +47,6 @@ int dumpkmap_main(int argc UNUSED_PARAM,
 {
 	struct kbentry ke;
 	int i, j, fd;
-#define flags bb_common_bufsiz1
-	setup_common_bufsiz();
 
 	/* When user accidentally runs "dumpkmap FILE"
 	 * instead of "dumpkmap >FILE", we'd dump binary stuff to tty.
@@ -60,19 +58,8 @@ int dumpkmap_main(int argc UNUSED_PARAM,
 
 	fd = get_console_fd_or_die();
 
-#if 0
-	write(STDOUT_FILENO, "bkeymap", 7);
-	/* Here we want to set everything to 0 except for indexes:
-	 * [0-2] [4-6] [8-10] [12]
-	 */
-	/*memset(flags, 0x00, MAX_NR_KEYMAPS); - already is */
-	memset(flags, 0x01, 13);
-	flags[3] = flags[7] = flags[11] = 0;
-	/* dump flags */
-	write(STDOUT_FILENO, flags, MAX_NR_KEYMAPS);
-#define flags7 flags
-#else
-	/* Same effect */
+#define flags bb_common_bufsiz1
+	setup_common_bufsiz();
 	/*                     0 1 2 3 4 5 6 7 8 9 a b c=12 */
 	memcpy(flags, "bkeymap\1\1\1\0\1\1\1\0\1\1\1\0\1",
 	/* Can use sizeof, or sizeof-1. sizeof is even, using that */
@@ -80,7 +67,6 @@ int dumpkmap_main(int argc UNUSED_PARAM,
 	);
 	write(STDOUT_FILENO, flags, 7 + MAX_NR_KEYMAPS);
 #define flags7 (flags + 7)
-#endif
 
 	for (i = 0; i < 13; i++) {
 		if (flags7[i]) {
diff -urpN busybox-1.27.2/console-tools/fgconsole.c busybox-1.28.0/console-tools/fgconsole.c
--- busybox-1.27.2/console-tools/fgconsole.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/console-tools/fgconsole.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,13 +7,13 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config FGCONSOLE
-//config:	bool "fgconsole"
+//config:	bool "fgconsole (1.6 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  This program prints active (foreground) console number.
+//config:	This program prints active (foreground) console number.
 
-//applet:IF_FGCONSOLE(APPLET(fgconsole, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_FGCONSOLE(APPLET_NOEXEC(fgconsole, fgconsole, BB_DIR_USR_BIN, BB_SUID_DROP, fgconsole))
 
 //kbuild:lib-$(CONFIG_FGCONSOLE) += fgconsole.o
 
diff -urpN busybox-1.27.2/console-tools/kbd_mode.c busybox-1.28.0/console-tools/kbd_mode.c
--- busybox-1.27.2/console-tools/kbd_mode.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/console-tools/kbd_mode.c	2017-08-08 14:08:06.000000000 +0200
@@ -9,25 +9,25 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config KBD_MODE
-//config:	bool "kbd_mode"
+//config:	bool "kbd_mode (4 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  This program reports and sets keyboard mode.
+//config:	This program reports and sets keyboard mode.
 
-//applet:IF_KBD_MODE(APPLET(kbd_mode, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_KBD_MODE(APPLET_NOEXEC(kbd_mode, kbd_mode, BB_DIR_BIN, BB_SUID_DROP, kbd_mode))
 
 //kbuild:lib-$(CONFIG_KBD_MODE) += kbd_mode.o
 
 //usage:#define kbd_mode_trivial_usage
 //usage:       "[-a|k|s|u] [-C TTY]"
 //usage:#define kbd_mode_full_usage "\n\n"
-//usage:       "Report or set the keyboard mode\n"
+//usage:       "Report or set VT console keyboard mode\n"
 //usage:     "\n	-a	Default (ASCII)"
-//usage:     "\n	-k	Medium-raw (keyboard)"
+//usage:     "\n	-k	Medium-raw (keycode)"
 //usage:     "\n	-s	Raw (scancode)"
 //usage:     "\n	-u	Unicode (utf-8)"
-//usage:     "\n	-C TTY	Affect TTY instead of /dev/tty"
+//usage:     "\n	-C TTY	Affect TTY"
 
 #include "libbb.h"
 #include <linux/kd.h>
@@ -43,11 +43,20 @@ int kbd_mode_main(int argc UNUSED_PARAM,
 	};
 	int fd;
 	unsigned opt;
-	const char *tty_name = CURRENT_TTY;
+	const char *tty_name;
 
 	opt = getopt32(argv, "sakuC:", &tty_name);
-	fd = xopen_nonblocking(tty_name);
-	opt &= 0xf; /* clear -C bit, see (*) */
+	if (opt & 0x10) {
+		opt &= 0xf; /* clear -C bit, see (*) */
+		fd = xopen_nonblocking(tty_name);
+	} else {
+		/* kbd-2.0.3 tries in sequence:
+		 * fd#0, /dev/tty, /dev/tty0.
+		 * get_console_fd_or_die: /dev/console, /dev/tty0, /dev/tty.
+		 * kbd-2.0.3 checks KDGKBTYPE, get_console_fd_or_die checks too.
+		 */
+		fd = get_console_fd_or_die();
+	}
 
 	if (!opt) { /* print current setting */
 		const char *mode = "unknown";
@@ -62,9 +71,19 @@ int kbd_mode_main(int argc UNUSED_PARAM,
 			mode = "mediumraw (keycode)";
 		else if (m == K_UNICODE)
 			mode = "Unicode (UTF-8)";
+		else if (m == 4 /*K_OFF*/) /* kbd-2.0.3 does not show this mode, says "unknown" */
+			mode = "off";
 		printf("The keyboard is in %s mode\n", mode);
 	} else {
-		/* here we depend on specific bits assigned to options (*) */
+		/* here we depend on specific bits assigned to options (*)
+		 * KDSKBMODE constants have these values:
+		 * #define K_RAW           0x00
+		 * #define K_XLATE         0x01
+		 * #define K_MEDIUMRAW     0x02
+		 * #define K_UNICODE       0x03
+		 * #define K_OFF           0x04
+		 * (looks like "-ak" together would cause the same effect as -u)
+		 */
 		opt = opt & UNICODE ? 3 : opt >> 1;
 		/* double cast prevents warnings about widening conversion */
 		xioctl(fd, KDSKBMODE, (void*)(ptrdiff_t)opt);
diff -urpN busybox-1.27.2/console-tools/loadfont.c busybox-1.28.0/console-tools/loadfont.c
--- busybox-1.27.2/console-tools/loadfont.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/console-tools/loadfont.c	2017-08-17 13:50:45.000000000 +0200
@@ -10,33 +10,33 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config LOADFONT
-//config:	bool "loadfont"
+//config:	bool "loadfont (5.4 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  This program loads a console font from standard input.
+//config:	This program loads a console font from standard input.
 //config:
 //config:config SETFONT
-//config:	bool "setfont"
+//config:	bool "setfont (26 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Allows to load console screen map. Useful for i18n.
+//config:	Allows to load console screen map. Useful for i18n.
 //config:
 //config:config FEATURE_SETFONT_TEXTUAL_MAP
 //config:	bool "Support reading textual screen maps"
 //config:	default y
 //config:	depends on SETFONT
 //config:	help
-//config:	  Support reading textual screen maps.
+//config:	Support reading textual screen maps.
 //config:
 //config:config DEFAULT_SETFONT_DIR
 //config:	string "Default directory for console-tools files"
 //config:	default ""
 //config:	depends on SETFONT
 //config:	help
-//config:	  Directory to use if setfont's params are simple filenames
-//config:	  (not /path/to/file or ./file). Default is "" (no default directory).
+//config:	Directory to use if setfont's params are simple filenames
+//config:	(not /path/to/file or ./file). Default is "" (no default directory).
 //config:
 //config:comment "Common options for loadfont and setfont"
 //config:	depends on LOADFONT || SETFONT
@@ -51,31 +51,12 @@
 //config:	default y
 //config:	depends on LOADFONT || SETFONT
 
-//applet:IF_LOADFONT(APPLET(loadfont, BB_DIR_USR_SBIN, BB_SUID_DROP))
-//applet:IF_SETFONT(APPLET(setfont, BB_DIR_USR_SBIN, BB_SUID_DROP))
+//applet:IF_LOADFONT(APPLET_NOEXEC(loadfont, loadfont, BB_DIR_USR_SBIN, BB_SUID_DROP, loadfont))
+//applet:IF_SETFONT(APPLET_NOEXEC(setfont, setfont, BB_DIR_USR_SBIN, BB_SUID_DROP, setfont))
 
 //kbuild:lib-$(CONFIG_LOADFONT) += loadfont.o
 //kbuild:lib-$(CONFIG_SETFONT) += loadfont.o
 
-//usage:#define loadfont_trivial_usage
-//usage:       "< font"
-//usage:#define loadfont_full_usage "\n\n"
-//usage:       "Load a console font from stdin"
-/* //usage:     "\n	-C TTY	Affect TTY instead of /dev/tty" */
-//usage:
-//usage:#define loadfont_example_usage
-//usage:       "$ loadfont < /etc/i18n/fontname\n"
-//usage:
-//usage:#define setfont_trivial_usage
-//usage:       "FONT [-m MAPFILE] [-C TTY]"
-//usage:#define setfont_full_usage "\n\n"
-//usage:       "Load a console font\n"
-//usage:     "\n	-m MAPFILE	Load console screen map"
-//usage:     "\n	-C TTY		Affect TTY instead of /dev/tty"
-//usage:
-//usage:#define setfont_example_usage
-//usage:       "$ setfont -m koi8-r /etc/i18n/fontname\n"
-
 #include "libbb.h"
 #include <sys/kd.h>
 
@@ -352,6 +333,14 @@ static void do_load(int fd, unsigned cha
 
 
 #if ENABLE_LOADFONT
+//usage:#define loadfont_trivial_usage
+//usage:       "< font"
+//usage:#define loadfont_full_usage "\n\n"
+//usage:       "Load a console font from stdin"
+/* //usage:     "\n	-C TTY	Affect TTY instead of /dev/tty" */
+//usage:
+//usage:#define loadfont_example_usage
+//usage:       "$ loadfont < /etc/i18n/fontname\n"
 int loadfont_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int loadfont_main(int argc UNUSED_PARAM, char **argv)
 {
@@ -359,8 +348,7 @@ int loadfont_main(int argc UNUSED_PARAM,
 	unsigned char *buffer;
 
 	// no arguments allowed!
-	opt_complementary = "=0";
-	getopt32(argv, "");
+	getopt32(argv, "^" "" "\0" "=0");
 
 	/*
 	 * We used to look at the length of the input file
@@ -380,11 +368,9 @@ int loadfont_main(int argc UNUSED_PARAM,
 }
 #endif
 
-#if ENABLE_SETFONT
-
-/*
-kbd-1.12:
 
+#if ENABLE_SETFONT
+/* kbd-1.12:
 setfont [-O font+umap.orig] [-o font.orig] [-om cmap.orig]
 [-ou umap.orig] [-N] [font.new ...] [-m cmap] [-u umap] [-C console]
 [-hNN] [-v] [-V]
@@ -414,8 +400,17 @@ setfont [-O font+umap.orig] [-o font.ori
 -v     Verbose
 -V     Version
 */
+//usage:#define setfont_trivial_usage
+//usage:       "FONT [-m MAPFILE] [-C TTY]"
+//usage:#define setfont_full_usage "\n\n"
+//usage:       "Load a console font\n"
+//usage:     "\n	-m MAPFILE	Load console screen map"
+//usage:     "\n	-C TTY		Affect TTY instead of /dev/tty"
+//usage:
+//usage:#define setfont_example_usage
+//usage:       "$ setfont -m koi8-r /etc/i18n/fontname\n"
 
-#if ENABLE_FEATURE_SETFONT_TEXTUAL_MAP
+# if ENABLE_FEATURE_SETFONT_TEXTUAL_MAP
 static int ctoi(char *s)
 {
 	if (s[0] == '\'' && s[1] != '\0' && s[2] == '\'' && s[3] == '\0')
@@ -429,7 +424,7 @@ static int ctoi(char *s)
 		return -1;
 	return xstrtoul(s, 0);
 }
-#endif
+# endif
 
 int setfont_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int setfont_main(int argc UNUSED_PARAM, char **argv)
@@ -441,8 +436,7 @@ int setfont_main(int argc UNUSED_PARAM,
 	char *mapfilename;
 	const char *tty_name = CURRENT_TTY;
 
-	opt_complementary = "=1";
-	opts = getopt32(argv, "m:C:", &mapfilename, &tty_name);
+	opts = getopt32(argv, "^" "m:C:" "\0" "=1", &mapfilename, &tty_name);
 	argv += optind;
 
 	fd = xopen_nonblocking(tty_name);
@@ -480,7 +474,7 @@ int setfont_main(int argc UNUSED_PARAM,
 			if (len == 2*E_TABSZ)
 				mode = PIO_UNISCRNMAP;
 		}
-#if ENABLE_FEATURE_SETFONT_TEXTUAL_MAP
+# if ENABLE_FEATURE_SETFONT_TEXTUAL_MAP
 		// assume textual Unicode console maps:
 		// 0x00 U+0000  #  NULL (NUL)
 		// 0x01 U+0001  #  START OF HEADING (SOH)
@@ -527,7 +521,7 @@ int setfont_main(int argc UNUSED_PARAM,
 			}
 #undef unicodes
 		}
-#endif // ENABLE_FEATURE_SETFONT_TEXTUAL_MAP
+# endif // ENABLE_FEATURE_SETFONT_TEXTUAL_MAP
 
 		// do set screen map
 		xioctl(fd, mode, map);
diff -urpN busybox-1.27.2/console-tools/loadkmap.c busybox-1.28.0/console-tools/loadkmap.c
--- busybox-1.27.2/console-tools/loadkmap.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/console-tools/loadkmap.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,14 +7,14 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config LOADKMAP
-//config:	bool "loadkmap"
+//config:	bool "loadkmap (1.5 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  This program loads a keyboard translation table from
-//config:	  standard input.
+//config:	This program loads a keyboard translation table from
+//config:	standard input.
 
-//applet:IF_LOADKMAP(APPLET(loadkmap, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_LOADKMAP(APPLET_NOEXEC(loadkmap, loadkmap, BB_DIR_SBIN, BB_SUID_DROP, loadkmap))
 
 //kbuild:lib-$(CONFIG_LOADKMAP) += loadkmap.o
 
diff -urpN busybox-1.27.2/console-tools/openvt.c busybox-1.28.0/console-tools/openvt.c
--- busybox-1.27.2/console-tools/openvt.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/console-tools/openvt.c	2017-08-08 14:08:06.000000000 +0200
@@ -8,12 +8,12 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config OPENVT
-//config:	bool "openvt"
+//config:	bool "openvt (7 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  This program is used to start a command on an unused
-//config:	  virtual terminal.
+//config:	This program is used to start a command on an unused
+//config:	virtual terminal.
 
 //applet:IF_OPENVT(APPLET(openvt, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -99,7 +99,7 @@ static int find_free_vtno(void)
 	/*xfunc_error_retval = 3; - do we need compat? */
 	if (ioctl(fd, VT_OPENQRY, &vtno) != 0 || vtno <= 0)
 		bb_perror_msg_and_die("can't find open VT");
-// Not really needed, grep for DAEMON_ONLY_SANITIZE
+// Not really needed, grep for DAEMON_CLOSE_EXTRA_FDS
 //	if (fd > 2)
 //		close(fd);
 	return vtno;
@@ -155,7 +155,7 @@ int openvt_main(int argc UNUSED_PARAM, c
 	/* Grab new VT */
 	sprintf(vtname, VC_FORMAT, vtno);
 	/* (Try to) clean up stray open fds above fd 2 */
-	bb_daemonize_or_rexec(DAEMON_CLOSE_EXTRA_FDS | DAEMON_ONLY_SANITIZE, NULL);
+	bb_daemon_helper(DAEMON_CLOSE_EXTRA_FDS);
 	close(STDIN_FILENO);
 	/*setsid(); - BAD IDEA: after we exit, child is SIGHUPed... */
 	xopen(vtname, O_RDWR);
diff -urpN busybox-1.27.2/console-tools/reset.c busybox-1.28.0/console-tools/reset.c
--- busybox-1.27.2/console-tools/reset.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/console-tools/reset.c	2017-10-05 11:53:08.000000000 +0200
@@ -7,16 +7,14 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-/* "Standard" version of this tool is in ncurses package */
-
 //config:config RESET
-//config:	bool "reset"
+//config:	bool "reset (275 bytes)"
 //config:	default y
 //config:	help
-//config:	  This program is used to reset the terminal screen, if it
-//config:	  gets messed up.
+//config:	This program is used to reset the terminal screen, if it
+//config:	gets messed up.
 
-//applet:IF_RESET(APPLET(reset, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_RESET(APPLET_NOEXEC(reset, reset, BB_DIR_USR_BIN, BB_SUID_DROP, reset))
 
 //kbuild:lib-$(CONFIG_RESET) += reset.o
 
@@ -25,6 +23,8 @@
 //usage:#define reset_full_usage "\n\n"
 //usage:       "Reset the screen"
 
+/* "Standard" version of this tool is in ncurses package */
+
 #include "libbb.h"
 
 #define ESC "\033"
@@ -46,11 +46,11 @@ int reset_main(int argc UNUSED_PARAM, ch
 		/* See 'man 4 console_codes' for details:
 		 * "ESC c"        -- Reset
 		 * "ESC ( B"      -- Select G0 Character Set (B = US)
-		 * "ESC [ 0 m"    -- Reset all display attributes
+		 * "ESC [ m"      -- Reset all display attributes
 		 * "ESC [ J"      -- Erase to the end of screen
 		 * "ESC [ ? 25 h" -- Make cursor visible
 		 */
-		printf(ESC"c" ESC"(B" ESC"[0m" ESC"[J" ESC"[?25h");
+		printf(ESC"c" ESC"(B" ESC"[m" ESC"[J" ESC"[?25h");
 		/* http://bugs.busybox.net/view.php?id=1414:
 		 * people want it to reset echo etc: */
 #if ENABLE_STTY
diff -urpN busybox-1.27.2/console-tools/resize.c busybox-1.28.0/console-tools/resize.c
--- busybox-1.27.2/console-tools/resize.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/console-tools/resize.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,23 +7,24 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config RESIZE
-//config:	bool "resize"
+//config:	bool "resize (756 bytes)"
 //config:	default y
 //config:	help
-//config:	  This program is used to (re)set the width and height of your current
-//config:	  terminal.
+//config:	This program is used to (re)set the width and height of your current
+//config:	terminal.
 //config:
 //config:config FEATURE_RESIZE_PRINT
 //config:	bool "Print environment variables"
 //config:	default y
 //config:	depends on RESIZE
 //config:	help
-//config:	  Prints the newly set size (number of columns and rows) of
-//config:	  the terminal.
-//config:	  E.g.:
-//config:	  COLUMNS=80;LINES=44;export COLUMNS LINES;
+//config:	Prints the newly set size (number of columns and rows) of
+//config:	the terminal.
+//config:	E.g.:
+//config:	COLUMNS=80;LINES=44;export COLUMNS LINES;
 
-//applet:IF_RESIZE(APPLET(resize, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_RESIZE(APPLET_NOEXEC(resize, resize, BB_DIR_USR_BIN, BB_SUID_DROP, resize))
+/* bb_common_bufsiz1 usage here is safe wrt NOEXEC: not expecting it to be zeroed. */
 
 //kbuild:lib-$(CONFIG_RESIZE) += resize.o
 
@@ -63,6 +64,7 @@ int resize_main(int argc UNUSED_PARAM, c
 	 */
 
 	tcgetattr(STDERR_FILENO, old_termios_p); /* fiddle echo */
+//TODO: die if the above fails?
 	memcpy(&new, old_termios_p, sizeof(new));
 	new.c_cflag |= (CLOCAL | CREAD);
 	new.c_lflag &= ~(ICANON | ECHO | ECHOE | ISIG);
diff -urpN busybox-1.27.2/console-tools/setconsole.c busybox-1.28.0/console-tools/setconsole.c
--- busybox-1.27.2/console-tools/setconsole.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/console-tools/setconsole.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,34 +1,42 @@
 /* vi: set sw=4 ts=4: */
 /*
- *  setconsole.c - redirect system console output
+ * setconsole.c - redirect system console output
  *
- *  Copyright (C) 2004,2005  Enrik Berkhan <Enrik.Berkhan@inka.de>
- *  Copyright (C) 2008 Bernhard Reutner-Fischer
+ * Copyright (C) 2004,2005  Enrik Berkhan <Enrik.Berkhan@inka.de>
+ * Copyright (C) 2008 Bernhard Reutner-Fischer
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config SETCONSOLE
-//config:	bool "setconsole"
+//config:	bool "setconsole (3.7 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  This program redirects the system console to another device,
-//config:	  like the current tty while logged in via telnet.
+//config:	Redirect writes to /dev/console to another device,
+//config:	like the current tty while logged in via telnet.
+//config:	This does not redirect kernel log, only writes
+//config:	from user space.
 //config:
 //config:config FEATURE_SETCONSOLE_LONG_OPTIONS
 //config:	bool "Enable long options"
 //config:	default y
 //config:	depends on SETCONSOLE && LONG_OPTS
 
-//applet:IF_SETCONSOLE(APPLET(setconsole, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_SETCONSOLE(APPLET_NOEXEC(setconsole, setconsole, BB_DIR_SBIN, BB_SUID_DROP, setconsole))
 
 //kbuild:lib-$(CONFIG_SETCONSOLE) += setconsole.o
 
 //usage:#define setconsole_trivial_usage
-//usage:       "[-r" IF_FEATURE_SETCONSOLE_LONG_OPTIONS("|--reset") "] [DEVICE]"
+//usage:       "[-r] [DEVICE]"
 //usage:#define setconsole_full_usage "\n\n"
-//usage:       "Redirect system console output to DEVICE (default: /dev/tty)\n"
-//usage:     "\n	-r	Reset output to /dev/console"
+//usage:       "Make writes to /dev/console appear on DEVICE (default: /dev/tty)."
+//usage:   "\n""Does not redirect kernel log output or reads from /dev/console."
+//usage:   "\n"
+//usage:   "\n""	-r	Reset: writes to /dev/console go to kernel log tty(s)"
+
+/* It was a bbox-specific invention, but SUSE does have a similar utility.
+ * SUSE has no -r option, though.
+ */
 
 #include "libbb.h"
 
@@ -36,17 +44,10 @@ int setconsole_main(int argc, char **arg
 int setconsole_main(int argc UNUSED_PARAM, char **argv)
 {
 	const char *device = CURRENT_TTY;
-	bool reset;
+	int reset;
 
-#if ENABLE_FEATURE_SETCONSOLE_LONG_OPTIONS
-	static const char setconsole_longopts[] ALIGN1 =
-		"reset\0" No_argument "r"
-		;
-	applet_long_options = setconsole_longopts;
-#endif
 	/* at most one non-option argument */
-	opt_complementary = "?1";
-	reset = getopt32(argv, "r");
+	reset = getopt32(argv, "^" "r" "\0" "?1");
 
 	argv += 1 + reset;
 	if (*argv) {
@@ -56,6 +57,9 @@ int setconsole_main(int argc UNUSED_PARA
 			device = DEV_CONSOLE;
 	}
 
+//TODO: fails if TIOCCONS redir is already active to some tty.
+//I think SUSE version first does TIOCCONS on /dev/console fd (iow: resets)
+//then TIOCCONS to new tty?
 	xioctl(xopen(device, O_WRONLY), TIOCCONS, NULL);
 	return EXIT_SUCCESS;
 }
diff -urpN busybox-1.27.2/console-tools/setkeycodes.c busybox-1.28.0/console-tools/setkeycodes.c
--- busybox-1.27.2/console-tools/setkeycodes.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/console-tools/setkeycodes.c	2017-08-08 14:08:06.000000000 +0200
@@ -9,24 +9,23 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config SETKEYCODES
-//config:	bool "setkeycodes"
+//config:	bool "setkeycodes (1.7 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  This program loads entries into the kernel's scancode-to-keycode
-//config:	  map, allowing unusual keyboards to generate usable keycodes.
+//config:	This program loads entries into the kernel's scancode-to-keycode
+//config:	map, allowing unusual keyboards to generate usable keycodes.
 
-//applet:IF_SETKEYCODES(APPLET(setkeycodes, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_SETKEYCODES(APPLET_NOEXEC(setkeycodes, setkeycodes, BB_DIR_USR_BIN, BB_SUID_DROP, setkeycodes))
 
 //kbuild:lib-$(CONFIG_SETKEYCODES) += setkeycodes.o
 
 //usage:#define setkeycodes_trivial_usage
-//usage:       "SCANCODE KEYCODE..."
+//usage:       "{ SCANCODE KEYCODE }..."
 //usage:#define setkeycodes_full_usage "\n\n"
-//usage:       "Set entries into the kernel's scancode-to-keycode map,\n"
+//usage:       "Modify kernel's scancode-to-keycode map,\n"
 //usage:       "allowing unusual keyboards to generate usable keycodes.\n\n"
-//usage:       "SCANCODE may be either xx or e0xx (hexadecimal),\n"
-//usage:       "and KEYCODE is given in decimal."
+//usage:       "SCANCODE is either xx or e0xx (hexadecimal), KEYCODE is decimal."
 //usage:
 //usage:#define setkeycodes_example_usage
 //usage:       "$ setkeycodes e030 127\n"
@@ -45,7 +44,6 @@ int setkeycodes_main(int argc, char **ar
 int setkeycodes_main(int argc, char **argv)
 {
 	int fd;
-	struct kbkeycode a;
 
 	if (!(argc & 1) /* if even */ || argc < 2) {
 		bb_show_usage();
@@ -54,7 +52,10 @@ int setkeycodes_main(int argc, char **ar
 	fd = get_console_fd_or_die();
 
 	while (argv[1]) {
-		int sc = xstrtoul_range(argv[1], 16, 0, 0xe07f);
+		struct kbkeycode a;
+		int sc;
+
+		sc = xstrtoul_range(argv[1], 16, 0, 0xe07f);
 		if (sc >= 0xe000) {
 			sc -= 0xe000;
 			sc += 0x0080;
diff -urpN busybox-1.27.2/console-tools/setlogcons.c busybox-1.28.0/console-tools/setlogcons.c
--- busybox-1.27.2/console-tools/setlogcons.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/console-tools/setlogcons.c	2017-08-08 14:08:06.000000000 +0200
@@ -9,20 +9,32 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config SETLOGCONS
-//config:	bool "setlogcons"
+//config:	bool "setlogcons (1.8 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  This program redirects the output console of kernel messages.
+//config:	This program redirects the output console of kernel messages.
 
-//applet:IF_SETLOGCONS(APPLET(setlogcons, BB_DIR_USR_SBIN, BB_SUID_DROP))
+//applet:IF_SETLOGCONS(APPLET_NOEXEC(setlogcons, setlogcons, BB_DIR_USR_SBIN, BB_SUID_DROP, setlogcons))
 
 //kbuild:lib-$(CONFIG_SETLOGCONS) += setlogcons.o
 
 //usage:#define setlogcons_trivial_usage
 //usage:       "[N]"
 //usage:#define setlogcons_full_usage "\n\n"
-//usage:       "Redirect the kernel output to console N. Default:0 (current console)"
+//usage:       "Pin kernel output to VT console N. Default:0 (do not pin)"
+
+// Comment from kernel source:
+/* ...
+ * By default, the kernel messages are always printed on the current virtual
+ * console. However, the user may modify that default with the
+ * TIOCL_SETKMSGREDIRECT ioctl call.
+ *
+ * This function sets the kernel message console to be @new. It returns the old
+ * virtual console number. The virtual terminal number 0 (both as parameter and
+ * return value) means no redirection (i.e. always printed on the currently
+ * active console).
+ */
 
 #include "libbb.h"
 
@@ -33,8 +45,8 @@ int setlogcons_main(int argc UNUSED_PARA
 		char fn;
 		char subarg;
 	} arg = {
-		11, /* redirect kernel messages */
-		0   /* to specified console (current as default) */
+		11, /* redirect kernel messages (TIOCL_SETKMSGREDIRECT) */
+		0
 	};
 
 	if (argv[1])
diff -urpN busybox-1.27.2/console-tools/showkey.c busybox-1.28.0/console-tools/showkey.c
--- busybox-1.27.2/console-tools/showkey.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/console-tools/showkey.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,11 +7,11 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config SHOWKEY
-//config:	bool "showkey"
+//config:	bool "showkey (4.7 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Shows keys pressed.
+//config:	Shows keys pressed.
 
 //applet:IF_SHOWKEY(APPLET(showkey, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/coreutils/Config.src busybox-1.28.0/coreutils/Config.src
--- busybox-1.27.2/coreutils/Config.src	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/Config.src	2017-07-24 18:57:09.000000000 +0200
@@ -13,9 +13,9 @@ config FEATURE_VERBOSE
 	bool "Support verbose options (usually -v) for various applets"
 	default y
 	help
-	  Enable cp -v, rm -v and similar messages.
-	  Also enables long option (--verbose) if it exists.
-	  Without this option, -v is accepted but ignored.
+	Enable cp -v, rm -v and similar messages.
+	Also enables long option (--verbose) if it exists.
+	Without this option, -v is accepted but ignored.
 
 comment "Common options for cp and mv"
 	depends on CP || MV
@@ -25,7 +25,7 @@ config FEATURE_PRESERVE_HARDLINKS
 	default y
 	depends on CP || MV
 	help
-	  Allow cp and mv to preserve hard links.
+	Allow cp and mv to preserve hard links.
 
 comment "Common options for df, du, ls"
 	depends on DF || DU || LS
@@ -35,6 +35,6 @@ config FEATURE_HUMAN_READABLE
 	default y
 	depends on DF || DU || LS
 	help
-	  Allow df, du, and ls to have human readable output.
+	Allow df, du, and ls to have human readable output.
 
 endmenu
diff -urpN busybox-1.27.2/coreutils/basename.c busybox-1.28.0/coreutils/basename.c
--- busybox-1.27.2/coreutils/basename.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/basename.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 /* Mar 16, 2003      Manuel Novoa III   (mjn3@codepoet.org)
  *
  * Changes:
@@ -15,12 +14,12 @@
  * 3) Save some space by using strcmp().  Calling strncmp() here was silly.
  */
 //config:config BASENAME
-//config:	bool "basename"
+//config:	bool "basename (371 bytes)"
 //config:	default y
 //config:	help
-//config:	  basename is used to strip the directory and suffix from filenames,
-//config:	  leaving just the filename itself. Enable this option if you wish
-//config:	  to enable the 'basename' utility.
+//config:	basename is used to strip the directory and suffix from filenames,
+//config:	leaving just the filename itself. Enable this option if you wish
+//config:	to enable the 'basename' utility.
 
 //applet:IF_BASENAME(APPLET_NOFORK(basename, basename, BB_DIR_USR_BIN, BB_SUID_DROP, basename))
 
@@ -47,25 +46,24 @@
 /* This is a NOFORK applet. Be very careful! */
 
 int basename_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
-int basename_main(int argc, char **argv)
+int basename_main(int argc UNUSED_PARAM, char **argv)
 {
 	size_t m, n;
 	char *s;
 
 	if (argv[1] && strcmp(argv[1], "--") == 0) {
 		argv++;
-		argc--;
 	}
-
-	if ((unsigned)(argc-2) >= 2) {
+	if (!argv[1])
 		bb_show_usage();
-	}
 
 	/* It should strip slash: /abc/def/ -> def */
 	s = bb_get_last_path_component_strip(*++argv);
 
 	m = strlen(s);
 	if (*++argv) {
+		if (argv[1])
+			bb_show_usage();
 		n = strlen(*argv);
 		if ((m > n) && (strcmp(s+m-n, *argv) == 0)) {
 			m -= n;
diff -urpN busybox-1.27.2/coreutils/cat.c busybox-1.28.0/coreutils/cat.c
--- busybox-1.27.2/coreutils/cat.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/coreutils/cat.c	2018-01-01 20:40:41.000000000 +0100
@@ -7,18 +7,25 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config CAT
-//config:	bool "cat"
+//config:	bool "cat (5.6 kb)"
 //config:	default y
 //config:	help
-//config:	  cat is used to concatenate files and print them to the standard
-//config:	  output. Enable this option if you wish to enable the 'cat' utility.
+//config:	cat is used to concatenate files and print them to the standard
+//config:	output. Enable this option if you wish to enable the 'cat' utility.
+//config:
+//config:config FEATURE_CATN
+//config:	bool "Enable -n and -b options"
+//config:	default y
+//config:	depends on CAT
+//config:	help
+//config:	-n numbers all output lines while -b numbers nonempty output lines.
 //config:
 //config:config FEATURE_CATV
 //config:	bool "cat -v[etA]"
 //config:	default y
 //config:	depends on CAT
 //config:	help
-//config:	  Display nonprinting characters as escape sequences
+//config:	Display nonprinting characters as escape sequences
 
 //applet:IF_CAT(APPLET(cat, BB_DIR_BIN, BB_SUID_DROP))
 
@@ -27,12 +34,19 @@
 /* BB_AUDIT SUSv3 compliant */
 /* http://www.opengroup.org/onlinepubs/007904975/utilities/cat.html */
 
+//usage:#if ENABLE_FEATURE_CATN || ENABLE_FEATURE_CATV
+//usage:#define cat_trivial_usage
+//usage:       "[-" IF_FEATURE_CATN("nb") IF_FEATURE_CATV("vteA") "] [FILE]..."
+//usage:#else
 //usage:#define cat_trivial_usage
-//usage:       "[-nb"IF_FEATURE_CATV("vteA")"] [FILE]..."
+//usage:       "[FILE]..."
+//usage:#endif
 //usage:#define cat_full_usage "\n\n"
 //usage:       "Print FILEs to stdout\n"
+//usage:	IF_FEATURE_CATN(
 //usage:     "\n	-n	Number output lines"
 //usage:     "\n	-b	Number nonempty lines"
+//usage:	)
 //usage:	IF_FEATURE_CATV(
 //usage:     "\n	-v	Show nonprinting characters as ^x or M-x"
 //usage:     "\n	-t	...and tabs as ^I"
@@ -84,30 +98,35 @@
  * I agree with the argument. Unfortunately, this ship has sailed (1983...).
  * There are dozens of Linux distros and each of them has "cat" which supports -v.
  * It's unrealistic for us to "reeducate" them to use our, incompatible way
- * to achieve "cat -v" effect. The actuall effect would be "users pissed off
+ * to achieve "cat -v" effect. The actual effect would be "users pissed off
  * by gratuitous incompatibility".
  */
-#define CATV_OPT_e (1<<0)
-#define CATV_OPT_t (1<<1)
-#define CATV_OPT_v (1<<2)
+#define CAT_OPT_e (1<<0)
+#define CAT_OPT_t (1<<1)
+#define CAT_OPT_v (1<<2)
+/* -A occupies bit (1<<3) */
+#define CAT_OPT_n ((1<<4) * ENABLE_FEATURE_CATN)
+#define CAT_OPT_b ((1<<5) * ENABLE_FEATURE_CATN)
 static int catv(unsigned opts, char **argv)
 {
 	int retval = EXIT_SUCCESS;
 	int fd;
+#if ENABLE_FEATURE_CATN
+	unsigned lineno = 0;
+	unsigned eol_char = (opts & (CAT_OPT_n|CAT_OPT_b)) ? '\n' : 0x100;
+	unsigned skip_num_on = (opts & CAT_OPT_b) ? '\n' : 0x100;
+	bool eol_seen = 1;
+#endif
 
-	BUILD_BUG_ON(CATV_OPT_e != VISIBLE_ENDLINE);
-	BUILD_BUG_ON(CATV_OPT_t != VISIBLE_SHOW_TABS);
+	BUILD_BUG_ON(CAT_OPT_e != VISIBLE_ENDLINE);
+	BUILD_BUG_ON(CAT_OPT_t != VISIBLE_SHOW_TABS);
 #if 0 /* These consts match, we can just pass "opts" to visible() */
-	if (opts & CATV_OPT_e)
+	if (opts & CAT_OPT_e)
 		flags |= VISIBLE_ENDLINE;
-	if (opts & CATV_OPT_t)
+	if (opts & CAT_OPT_t)
 		flags |= VISIBLE_SHOW_TABS;
 #endif
 
-	/* Read from stdin if there's nothing else to do. */
-	if (!argv[0])
-		*--argv = (char*)"-";
-
 #define read_buf bb_common_bufsiz1
 	setup_common_bufsiz();
 	do {
@@ -127,6 +146,11 @@ static int catv(unsigned opts, char **ar
 			for (i = 0; i < res; i++) {
 				unsigned char c = read_buf[i];
 				char buf[sizeof("M-^c")];
+#if ENABLE_FEATURE_CATN
+				if (eol_seen && c != skip_num_on)
+					printf("%6u  ", ++lineno);
+				eol_seen = (c == eol_char);
+#endif
 				visible(c, buf, opts);
 				fputs(buf, stdout);
 			}
@@ -137,43 +161,55 @@ static int catv(unsigned opts, char **ar
 
 	fflush_stdout_and_exit(retval);
 }
+#undef CAT_OPT_n
+#undef CAT_OPT_b
 #endif
 
 int cat_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int cat_main(int argc UNUSED_PARAM, char **argv)
 {
-	struct number_state ns;
+#if ENABLE_FEATURE_CATV || ENABLE_FEATURE_CATN
 	unsigned opts;
 
-	IF_FEATURE_CATV(opt_complementary = "Aetv"; /* -A == -vet */)
-	/* -u is ignored ("unbuffered") */
-	opts = getopt32(argv, IF_FEATURE_CATV("etvA")"nbu");
+	opts =
+#endif
+	getopt32(argv, IF_FEATURE_CATV("^")
+		/* -u is ignored ("unbuffered") */
+		IF_FEATURE_CATV("etvA")IF_FEATURE_CATN("nb")"u"
+		IF_FEATURE_CATV("\0" "Aetv" /* -A == -vet */)
+	);
 	argv += optind;
 
+	/* Read from stdin if there's nothing else to do. */
+	if (!argv[0])
+		*--argv = (char*)"-";
+
 #if ENABLE_FEATURE_CATV
 	if (opts & 7)
 		return catv(opts, argv);
-//BUG: -v,-e,-t,-A ignore -nb
 	opts >>= 4;
 #endif
 
-#define CAT_OPT_n (1<<0)
-#define CAT_OPT_b (1<<1)
-#define CAT_OPT_u (1<<2)
-	if (!(opts & (CAT_OPT_n|CAT_OPT_b))) /* no -n or -b */
-		return bb_cat(argv);
+#if ENABLE_FEATURE_CATN
+# define CAT_OPT_n (1<<0)
+# define CAT_OPT_b (1<<1)
+	if (opts & (CAT_OPT_n|CAT_OPT_b)) { /* -n or -b */
+		struct number_state ns;
+
+		ns.width = 6;
+		ns.start = 1;
+		ns.inc = 1;
+		ns.sep = "\t";
+		ns.empty_str = "\n";
+		ns.all = !(opts & CAT_OPT_b); /* -n without -b */
+		ns.nonempty = (opts & CAT_OPT_b); /* -b (with or without -n) */
+		do {
+			print_numbered_lines(&ns, *argv);
+		} while (*++argv);
+		fflush_stdout_and_exit(EXIT_SUCCESS);
+	}
+	/*opts >>= 2;*/
+#endif
 
-	if (!*argv)
-		*--argv = (char*)"-";
-	ns.width = 6;
-	ns.start = 1;
-	ns.inc = 1;
-	ns.sep = "\t";
-	ns.empty_str = "\n";
-	ns.all = !(opts & CAT_OPT_b); /* -n without -b */
-	ns.nonempty = (opts & CAT_OPT_b); /* -b (with or without -n) */
-	do {
-		print_numbered_lines(&ns, *argv);
-	} while (*++argv);
-	fflush_stdout_and_exit(EXIT_SUCCESS);
+	return bb_cat(argv);
 }
diff -urpN busybox-1.27.2/coreutils/chgrp.c busybox-1.28.0/coreutils/chgrp.c
--- busybox-1.27.2/coreutils/chgrp.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/chgrp.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,10 +7,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config CHGRP
-//config:	bool "chgrp"
+//config:	bool "chgrp (7.2 kb)"
 //config:	default y
 //config:	help
-//config:	  chgrp is used to change the group ownership of files.
+//config:	chgrp is used to change the group ownership of files.
 
 //applet:IF_CHGRP(APPLET_NOEXEC(chgrp, chgrp, BB_DIR_BIN, BB_SUID_DROP, chgrp))
 
diff -urpN busybox-1.27.2/coreutils/chmod.c busybox-1.28.0/coreutils/chmod.c
--- busybox-1.27.2/coreutils/chmod.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/chmod.c	2017-08-17 13:50:45.000000000 +0200
@@ -10,10 +10,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config CHMOD
-//config:	bool "chmod"
+//config:	bool "chmod (5.1 kb)"
 //config:	default y
 //config:	help
-//config:	  chmod is used to change the access permission of files.
+//config:	chmod is used to change the access permission of files.
 
 //applet:IF_CHMOD(APPLET_NOEXEC(chmod, chmod, BB_DIR_BIN, BB_SUID_DROP, chmod))
 
@@ -123,8 +123,7 @@ int chmod_main(int argc UNUSED_PARAM, ch
 	}
 
 	/* Parse options */
-	opt_complementary = "-2";
-	getopt32(argv, ("-"OPT_STR) + 1); /* Reuse string */
+	getopt32(argv, "^" OPT_STR "\0" "-2");
 	argv += optind;
 
 	/* Restore option-like mode if needed */
diff -urpN busybox-1.27.2/coreutils/chown.c busybox-1.28.0/coreutils/chown.c
--- busybox-1.27.2/coreutils/chown.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/chown.c	2018-01-01 20:40:41.000000000 +0100
@@ -7,11 +7,11 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config CHOWN
-//config:	bool "chown"
+//config:	bool "chown (7.2 kb)"
 //config:	default y
 //config:	help
-//config:	  chown is used to change the user and/or group ownership
-//config:	  of files.
+//config:	chown is used to change the user and/or group ownership
+//config:	of files.
 //config:
 //config:config FEATURE_CHOWN_LONG_OPTIONS
 //config:	bool "Enable long options"
@@ -55,7 +55,7 @@
 /* This is a NOEXEC applet. Be very careful! */
 
 
-#define OPT_STR     ("Rh" IF_DESKTOP("vcfLHP"))
+#define OPT_STR     "Rh" IF_DESKTOP("vcfLHP")
 #define BIT_RECURSE 1
 #define OPT_RECURSE (opt & 1)
 #define OPT_NODEREF (opt & 2)
@@ -128,10 +128,10 @@ int chown_main(int argc UNUSED_PARAM, ch
 	struct param_t param;
 
 #if ENABLE_FEATURE_CHOWN_LONG_OPTIONS
-	applet_long_options = chown_longopts;
+	opt = getopt32long(argv, "^" OPT_STR "\0" "-2", chown_longopts);
+#else
+	opt = getopt32(argv, "^" OPT_STR "\0" "-2");
 #endif
-	opt_complementary = "-2";
-	opt = getopt32(argv, OPT_STR);
 	argv += optind;
 
 	/* This matches coreutils behavior (almost - see below) */
diff -urpN busybox-1.27.2/coreutils/chroot.c busybox-1.28.0/coreutils/chroot.c
--- busybox-1.27.2/coreutils/chroot.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/chroot.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,13 +7,13 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config CHROOT
-//config:	bool "chroot"
+//config:	bool "chroot (3.7 kb)"
 //config:	default y
 //config:	help
-//config:	  chroot is used to change the root directory and run a command.
-//config:	  The default command is `/bin/sh'.
+//config:	chroot is used to change the root directory and run a command.
+//config:	The default command is '/bin/sh'.
 
-//applet:IF_CHROOT(APPLET(chroot, BB_DIR_USR_SBIN, BB_SUID_DROP))
+//applet:IF_CHROOT(APPLET_NOEXEC(chroot, chroot, BB_DIR_USR_SBIN, BB_SUID_DROP, chroot))
 
 //kbuild:lib-$(CONFIG_CHROOT) += chroot.o
 
@@ -40,6 +40,7 @@ int chroot_main(int argc UNUSED_PARAM, c
 	++argv;
 	if (!*argv)
 		bb_show_usage();
+
 	xchroot(*argv);
 
 	++argv;
diff -urpN busybox-1.27.2/coreutils/cksum.c busybox-1.28.0/coreutils/cksum.c
--- busybox-1.27.2/coreutils/cksum.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/cksum.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,12 +7,13 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config CKSUM
-//config:	bool "cksum"
+//config:	bool "cksum (4.2 kb)"
 //config:	default y
 //config:	help
-//config:	  cksum is used to calculate the CRC32 checksum of a file.
+//config:	cksum is used to calculate the CRC32 checksum of a file.
 
 //applet:IF_CKSUM(APPLET_NOEXEC(cksum, cksum, BB_DIR_USR_BIN, BB_SUID_DROP, cksum))
+/* bb_common_bufsiz1 usage here is safe wrt NOEXEC: not expecting it to be zeroed. */
 
 //kbuild:lib-$(CONFIG_CKSUM) += cksum.o
 
diff -urpN busybox-1.27.2/coreutils/comm.c busybox-1.28.0/coreutils/comm.c
--- busybox-1.27.2/coreutils/comm.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/comm.c	2017-08-17 13:50:45.000000000 +0200
@@ -7,11 +7,11 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config COMM
-//config:	bool "comm"
+//config:	bool "comm (3.9 kb)"
 //config:	default y
 //config:	help
-//config:	  comm is used to compare two files line by line and return
-//config:	  a three-column output.
+//config:	comm is used to compare two files line by line and return
+//config:	a three-column output.
 
 //applet:IF_COMM(APPLET(comm, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -62,8 +62,7 @@ int comm_main(int argc UNUSED_PARAM, cha
 	int i;
 	int order;
 
-	opt_complementary = "=2";
-	getopt32(argv, "123");
+	getopt32(argv, "^" "123" "\0" "=2");
 	argv += optind;
 
 	for (i = 0; i < 2; ++i) {
diff -urpN busybox-1.27.2/coreutils/cp.c busybox-1.28.0/coreutils/cp.c
--- busybox-1.27.2/coreutils/cp.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/cp.c	2017-08-17 13:50:45.000000000 +0200
@@ -12,18 +12,18 @@
  * Size reduction.
  */
 //config:config CP
-//config:	bool "cp"
+//config:	bool "cp (9.7 kb)"
 //config:	default y
 //config:	help
-//config:	  cp is used to copy files and directories.
+//config:	cp is used to copy files and directories.
 //config:
 //config:config FEATURE_CP_LONG_OPTIONS
 //config:	bool "Enable long options"
 //config:	default y
 //config:	depends on CP && LONG_OPTS
 //config:	help
-//config:	  Enable long options.
-//config:	  Also add support for --parents option.
+//config:	Enable long options.
+//config:	Also add support for --parents option.
 
 //applet:IF_CP(APPLET_NOEXEC(cp, cp, BB_DIR_BIN, BB_SUID_DROP, cp))
 
@@ -73,15 +73,17 @@ int cp_main(int argc, char **argv)
 #endif
 	};
 
-	// Need at least two arguments
-	// Soft- and hardlinking doesn't mix
-	// -P and -d are the same (-P is POSIX, -d is GNU)
-	// -r and -R are the same
-	// -R (and therefore -r) turns on -d (coreutils does this)
-	// -a = -pdR
-	opt_complementary = "-2:l--s:s--l:Pd:rRd:Rd:apdR";
 #if ENABLE_FEATURE_CP_LONG_OPTIONS
-	applet_long_options =
+	flags = getopt32long(argv, "^"
+		FILEUTILS_CP_OPTSTR
+		"\0"
+		// Need at least two arguments
+		// Soft- and hardlinking doesn't mix
+		// -P and -d are the same (-P is POSIX, -d is GNU)
+		// -r and -R are the same
+		// -R (and therefore -r) turns on -d (coreutils does this)
+		// -a = -pdR
+		"-2:l--s:s--l:Pd:rRd:Rd:apdR",
 		"archive\0"        No_argument "a"
 		"force\0"          No_argument "f"
 		"interactive\0"    No_argument "i"
@@ -94,9 +96,10 @@ int cp_main(int argc, char **argv)
 		"update\0"         No_argument "u"
 		"remove-destination\0" No_argument "\xff"
 		"parents\0"        No_argument "\xfe"
-		;
-#endif
+	);
+#else
 	flags = getopt32(argv, FILEUTILS_CP_OPTSTR);
+#endif
 	/* Options of cp from GNU coreutils 6.10:
 	 * -a, --archive
 	 * -f, --force
diff -urpN busybox-1.27.2/coreutils/cut.c busybox-1.28.0/coreutils/cut.c
--- busybox-1.27.2/coreutils/cut.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/cut.c	2017-08-17 13:50:45.000000000 +0200
@@ -9,11 +9,11 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config CUT
-//config:	bool "cut"
+//config:	bool "cut (5.3 kb)"
 //config:	default y
 //config:	help
-//config:	  cut is used to print selected parts of lines from
-//config:	  each file to stdout.
+//config:	cut is used to print selected parts of lines from
+//config:	each file to stdout.
 
 //applet:IF_CUT(APPLET_NOEXEC(cut, cut, BB_DIR_USR_BIN, BB_SUID_DROP, cut))
 
@@ -42,7 +42,7 @@
 
 
 /* option vars */
-static const char optstring[] ALIGN1 = "b:c:f:d:sn";
+#define OPT_STR "b:c:f:d:sn"
 #define CUT_OPT_BYTE_FLGS     (1 << 0)
 #define CUT_OPT_CHAR_FLGS     (1 << 1)
 #define CUT_OPT_FIELDS_FLGS   (1 << 2)
@@ -201,8 +201,11 @@ int cut_main(int argc UNUSED_PARAM, char
 	char *sopt, *ltok;
 	unsigned opt;
 
-	opt_complementary = "b--bcf:c--bcf:f--bcf";
-	opt = getopt32(argv, optstring, &sopt, &sopt, &sopt, &ltok);
+	opt = getopt32(argv, "^"
+			OPT_STR
+			"\0" "b--bcf:c--bcf:f--bcf",
+			&sopt, &sopt, &sopt, &ltok
+	);
 //	argc -= optind;
 	argv += optind;
 	if (!(opt & (CUT_OPT_BYTE_FLGS | CUT_OPT_CHAR_FLGS | CUT_OPT_FIELDS_FLGS)))
diff -urpN busybox-1.27.2/coreutils/date.c busybox-1.28.0/coreutils/date.c
--- busybox-1.27.2/coreutils/date.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/date.c	2017-10-20 10:36:58.000000000 +0200
@@ -19,46 +19,47 @@
    much as possible, missed out a lot of bounds checking */
 
 //config:config DATE
-//config:	bool "date"
+//config:	bool "date (7.1 kb)"
 //config:	default y
 //config:	help
-//config:	  date is used to set the system date or display the
-//config:	  current time in the given format.
+//config:	date is used to set the system date or display the
+//config:	current time in the given format.
 //config:
 //config:config FEATURE_DATE_ISOFMT
 //config:	bool "Enable ISO date format output (-I)"
 //config:	default y
 //config:	depends on DATE
 //config:	help
-//config:	  Enable option (-I) to output an ISO-8601 compliant
-//config:	  date/time string.
+//config:	Enable option (-I) to output an ISO-8601 compliant
+//config:	date/time string.
 //config:
 //config:# defaults to "no": stat's nanosecond field is a bit non-portable
 //config:config FEATURE_DATE_NANO
 //config:	bool "Support %[num]N nanosecond format specifier"
-//config:	default n
-//config:	depends on DATE  # syscall(__NR_clock_gettime)
+//config:	default n  # syscall(__NR_clock_gettime)
+//config:	depends on DATE
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Support %[num]N format specifier. Adds ~250 bytes of code.
+//config:	Support %[num]N format specifier. Adds ~250 bytes of code.
 //config:
 //config:config FEATURE_DATE_COMPAT
 //config:	bool "Support weird 'date MMDDhhmm[[YY]YY][.ss]' format"
 //config:	default y
 //config:	depends on DATE
 //config:	help
-//config:	  System time can be set by 'date -s DATE' and simply 'date DATE',
-//config:	  but formats of DATE string are different. 'date DATE' accepts
-//config:	  a rather weird MMDDhhmm[[YY]YY][.ss] format with completely
-//config:	  unnatural placement of year between minutes and seconds.
-//config:	  date -s (and other commands like touch -d) use more sensible
-//config:	  formats (for one, ISO format YYYY-MM-DD hh:mm:ss.ssssss).
+//config:	System time can be set by 'date -s DATE' and simply 'date DATE',
+//config:	but formats of DATE string are different. 'date DATE' accepts
+//config:	a rather weird MMDDhhmm[[YY]YY][.ss] format with completely
+//config:	unnatural placement of year between minutes and seconds.
+//config:	date -s (and other commands like touch -d) use more sensible
+//config:	formats (for one, ISO format YYYY-MM-DD hh:mm:ss.ssssss).
 //config:
-//config:	  With this option off, 'date DATE' is 'date -s DATE' support
-//config:	  the same format. With it on, 'date DATE' additionally supports
-//config:	  MMDDhhmm[[YY]YY][.ss] format.
+//config:	With this option off, 'date DATE' is 'date -s DATE' support
+//config:	the same format. With it on, 'date DATE' additionally supports
+//config:	MMDDhhmm[[YY]YY][.ss] format.
 
-//applet:IF_DATE(APPLET(date, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_DATE(APPLET_NOEXEC(date, date, BB_DIR_BIN, BB_SUID_DROP, date))
+/* bb_common_bufsiz1 usage here is safe wrt NOEXEC: not expecting it to be zeroed. */
 
 //kbuild:lib-$(CONFIG_DATE) += date.o
 
@@ -66,7 +67,7 @@
  * date [OPTION]... [+FORMAT]
  * date [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]
  * -d, --date=STRING
- *      display time described by STRING, not `now'
+ *      display time described by STRING, not 'now'
  * -f, --file=DATEFILE
  *      like --date once for each line of DATEFILE
  * -r, --reference=FILE
@@ -152,12 +153,6 @@ enum {
 	OPT_HINT      = (1 << 6) * ENABLE_FEATURE_DATE_ISOFMT, /* D */
 };
 
-static void maybe_set_utc(int opt)
-{
-	if (opt & OPT_UTC)
-		putenv((char*)"TZ=UTC0");
-}
-
 #if ENABLE_LONG_OPTS
 static const char date_longopts[] ALIGN1 =
 		"rfc-822\0"   No_argument       "R"
@@ -170,6 +165,19 @@ static const char date_longopts[] ALIGN1
 		;
 #endif
 
+/* We are a NOEXEC applet.
+ * Obstacles to NOFORK:
+ * - we change env
+ * - xasprintf result not freed
+ * - after xasprintf we use other xfuncs
+ */
+
+static void maybe_set_utc(int opt)
+{
+	if (opt & OPT_UTC)
+		putenv((char*)"TZ=UTC0");
+}
+
 int date_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int date_main(int argc UNUSED_PARAM, char **argv)
 {
@@ -184,14 +192,18 @@ int date_main(int argc UNUSED_PARAM, cha
 	char *filename;
 	char *isofmt_arg = NULL;
 
-	opt_complementary = "d--s:s--d"
-		IF_FEATURE_DATE_ISOFMT(":R--I:I--R");
-	IF_LONG_OPTS(applet_long_options = date_longopts;)
-	opt = getopt32(argv, "Rs:ud:r:"
-			IF_FEATURE_DATE_ISOFMT("I::D:"),
+	opt = getopt32long(argv, "^"
+			"Rs:ud:r:"
+			IF_FEATURE_DATE_ISOFMT("I::D:")
+			"\0"
+			"d--s:s--d"
+			IF_FEATURE_DATE_ISOFMT(":R--I:I--R"),
+			date_longopts,
 			&date_str, &date_str, &filename
-			IF_FEATURE_DATE_ISOFMT(, &isofmt_arg, &fmt_str2dt));
+			IF_FEATURE_DATE_ISOFMT(, &isofmt_arg, &fmt_str2dt)
+	);
 	argv += optind;
+
 	maybe_set_utc(opt);
 
 	if (ENABLE_FEATURE_DATE_ISOFMT && (opt & OPT_TIMESPEC)) {
@@ -290,8 +302,6 @@ int date_main(int argc UNUSED_PARAM, cha
 			tm_time.tm_isdst = -1;
 		ts.tv_sec = validate_tm_time(date_str, &tm_time);
 
-		maybe_set_utc(opt);
-
 		/* if setting time, set it */
 		if ((opt & OPT_SET) && stime(&ts.tv_sec) < 0) {
 			bb_perror_msg("can't set date");
diff -urpN busybox-1.27.2/coreutils/dd.c busybox-1.28.0/coreutils/dd.c
--- busybox-1.27.2/coreutils/dd.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/coreutils/dd.c	2017-08-03 17:53:10.000000000 +0200
@@ -7,49 +7,49 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config DD
-//config:	bool "dd"
+//config:	bool "dd (7.1 kb)"
 //config:	default y
 //config:	help
-//config:	  dd copies a file (from standard input to standard output,
-//config:	  by default) using specific input and output blocksizes,
-//config:	  while optionally performing conversions on it.
+//config:	dd copies a file (from standard input to standard output,
+//config:	by default) using specific input and output blocksizes,
+//config:	while optionally performing conversions on it.
 //config:
 //config:config FEATURE_DD_SIGNAL_HANDLING
 //config:	bool "Enable signal handling for status reporting"
 //config:	default y
 //config:	depends on DD
 //config:	help
-//config:	  Sending a SIGUSR1 signal to a running `dd' process makes it
-//config:	  print to standard error the number of records read and written
-//config:	  so far, then to resume copying.
+//config:	Sending a SIGUSR1 signal to a running 'dd' process makes it
+//config:	print to standard error the number of records read and written
+//config:	so far, then to resume copying.
 //config:
-//config:	  $ dd if=/dev/zero of=/dev/null &
-//config:	  $ pid=$!; kill -USR1 $pid; sleep 1; kill $pid
-//config:	  10899206+0 records in
-//config:	  10899206+0 records out
+//config:	$ dd if=/dev/zero of=/dev/null &
+//config:	$ pid=$!; kill -USR1 $pid; sleep 1; kill $pid
+//config:	10899206+0 records in
+//config:	10899206+0 records out
 //config:
 //config:config FEATURE_DD_THIRD_STATUS_LINE
 //config:	bool "Enable the third status line upon signal"
 //config:	default y
 //config:	depends on DD && FEATURE_DD_SIGNAL_HANDLING
 //config:	help
-//config:	  Displays a coreutils-like third status line with transferred bytes,
-//config:	  elapsed time and speed.
+//config:	Displays a coreutils-like third status line with transferred bytes,
+//config:	elapsed time and speed.
 //config:
 //config:config FEATURE_DD_IBS_OBS
 //config:	bool "Enable ibs, obs and conv options"
 //config:	default y
 //config:	depends on DD
 //config:	help
-//config:	  Enable support for writing a certain number of bytes in and out,
-//config:	  at a time, and performing conversions on the data stream.
+//config:	Enable support for writing a certain number of bytes in and out,
+//config:	at a time, and performing conversions on the data stream.
 //config:
 //config:config FEATURE_DD_STATUS
 //config:	bool "Enable status display options"
 //config:	default y
 //config:	depends on DD
 //config:	help
-//config:	  Enable support for status=noxfer/none option.
+//config:	Enable support for status=noxfer/none option.
 
 //applet:IF_DD(APPLET_NOEXEC(dd, dd, BB_DIR_BIN, BB_SUID_DROP, dd))
 
diff -urpN busybox-1.27.2/coreutils/df.c busybox-1.28.0/coreutils/df.c
--- busybox-1.27.2/coreutils/df.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/df.c	2017-12-04 16:07:47.000000000 +0100
@@ -18,22 +18,22 @@
  * Implement -P and -B; better coreutils compat; cleanup
  */
 //config:config DF
-//config:	bool "df"
+//config:	bool "df (7.5 kb)"
 //config:	default y
 //config:	help
-//config:	  df reports the amount of disk space used and available
-//config:	  on filesystems.
+//config:	df reports the amount of disk space used and available
+//config:	on filesystems.
 //config:
 //config:config FEATURE_DF_FANCY
 //config:	bool "Enable -a, -i, -B"
 //config:	default y
 //config:	depends on DF
 //config:	help
-//config:	  -a Show all filesystems
-//config:	  -i Inodes
-//config:	  -B <SIZE> Blocksize
+//config:	-a Show all filesystems
+//config:	-i Inodes
+//config:	-B <SIZE> Blocksize
 
-//applet:IF_DF(APPLET(df, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_DF(APPLET_NOEXEC(df, df, BB_DIR_BIN, BB_SUID_DROP, df))
 
 //kbuild:lib-$(CONFIG_DF) += df.o
 
@@ -77,7 +77,7 @@
 //usage:       "/dev/sda3             17381728  17107080    274648      98% /\n"
 
 #include <mntent.h>
-#include <sys/vfs.h>
+#include <sys/statvfs.h>
 #include "libbb.h"
 #include "unicode.h"
 
@@ -98,7 +98,7 @@ int df_main(int argc UNUSED_PARAM, char
 	unsigned opt;
 	FILE *mount_table;
 	struct mntent *mount_entry;
-	struct statfs s;
+	struct statvfs s;
 
 	enum {
 		OPT_KILO  = (1 << 0),
@@ -115,15 +115,18 @@ int df_main(int argc UNUSED_PARAM, char
 
 	init_unicode();
 
+	opt = getopt32(argv, "^"
+			"kPT"
+			IF_FEATURE_DF_FANCY("aiB:")
+			IF_FEATURE_HUMAN_READABLE("hm")
+			"\0"
 #if ENABLE_FEATURE_HUMAN_READABLE && ENABLE_FEATURE_DF_FANCY
-	opt_complementary = "k-mB:m-Bk:B-km";
+			"k-mB:m-Bk:B-km"
 #elif ENABLE_FEATURE_HUMAN_READABLE
-	opt_complementary = "k-m:m-k";
+			"k-m:m-k"
 #endif
-	opt = getopt32(argv, "kPT"
-			IF_FEATURE_DF_FANCY("aiB:")
-			IF_FEATURE_HUMAN_READABLE("hm")
-			IF_FEATURE_DF_FANCY(, &chp));
+			IF_FEATURE_DF_FANCY(, &chp)
+	);
 	if (opt & OPT_MEGA)
 		df_disp_hr = 1024*1024;
 
@@ -208,7 +211,7 @@ int df_main(int argc UNUSED_PARAM, char
 		mount_point = mount_entry->mnt_dir;
 		fs_type = mount_entry->mnt_type;
 
-		if (statfs(mount_point, &s) != 0) {
+		if (statvfs(mount_point, &s) != 0) {
 			bb_simple_perror_msg(mount_point);
 			goto set_error;
 		}
diff -urpN busybox-1.27.2/coreutils/dirname.c busybox-1.28.0/coreutils/dirname.c
--- busybox-1.27.2/coreutils/dirname.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/dirname.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,11 +7,11 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config DIRNAME
-//config:	bool "dirname"
+//config:	bool "dirname (289 bytes)"
 //config:	default y
 //config:	help
-//config:	  dirname is used to strip a non-directory suffix from
-//config:	  a file name.
+//config:	dirname is used to strip a non-directory suffix from
+//config:	a file name.
 
 //applet:IF_DIRNAME(APPLET_NOFORK(dirname, dirname, BB_DIR_USR_BIN, BB_SUID_DROP, dirname))
 
diff -urpN busybox-1.27.2/coreutils/dos2unix.c busybox-1.28.0/coreutils/dos2unix.c
--- busybox-1.27.2/coreutils/dos2unix.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/dos2unix.c	2017-08-17 13:50:45.000000000 +0200
@@ -12,18 +12,18 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config DOS2UNIX
-//config:	bool "dos2unix"
+//config:	bool "dos2unix (5.1 kb)"
 //config:	default y
 //config:	help
-//config:	  dos2unix is used to convert a text file from DOS format to
-//config:	  UNIX format, and vice versa.
+//config:	dos2unix is used to convert a text file from DOS format to
+//config:	UNIX format, and vice versa.
 //config:
 //config:config UNIX2DOS
-//config:	bool "unix2dos"
+//config:	bool "unix2dos (5.1 kb)"
 //config:	default y
 //config:	help
-//config:	  unix2dos is used to convert a text file from UNIX format to
-//config:	  DOS format, and vice versa.
+//config:	unix2dos is used to convert a text file from UNIX format to
+//config:	DOS format, and vice versa.
 
 //applet:IF_DOS2UNIX(APPLET_NOEXEC(dos2unix, dos2unix, BB_DIR_USR_BIN, BB_SUID_DROP, dos2unix))
 //applet:IF_UNIX2DOS(APPLET_NOEXEC(unix2dos, dos2unix, BB_DIR_USR_BIN, BB_SUID_DROP, unix2dos))
@@ -120,8 +120,7 @@ int dos2unix_main(int argc UNUSED_PARAM,
 	}
 
 	/* -u convert to unix, -d convert to dos */
-	opt_complementary = "u--d:d--u"; /* mutually exclusive */
-	o = getopt32(argv, "du");
+	o = getopt32(argv, "^" "du" "\0" "u--d:d--u"); /* mutually exclusive */
 
 	/* Do the conversion requested by an argument else do the default
 	 * conversion depending on our name.  */
diff -urpN busybox-1.27.2/coreutils/du.c busybox-1.28.0/coreutils/du.c
--- busybox-1.27.2/coreutils/du.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/du.c	2017-08-17 13:50:45.000000000 +0200
@@ -22,15 +22,15 @@
 //config:	bool "du (default blocksize of 512 bytes)"
 //config:	default y
 //config:	help
-//config:	  du is used to report the amount of disk space used
-//config:	  for specified files.
+//config:	du is used to report the amount of disk space used
+//config:	for specified files.
 //config:
 //config:config FEATURE_DU_DEFAULT_BLOCKSIZE_1K
 //config:	bool "Use a default blocksize of 1024 bytes (1K)"
 //config:	default y
 //config:	depends on DU
 //config:	help
-//config:	  Use a blocksize of (1K) instead of the default 512b.
+//config:	Use a blocksize of (1K) instead of the default 512b.
 
 //applet:IF_DU(APPLET(du, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -242,8 +242,11 @@ int du_main(int argc UNUSED_PARAM, char
 	 * ignore -a.  This is consistent with -s being equivalent to -d 0.
 	 */
 #if ENABLE_FEATURE_HUMAN_READABLE
-	opt_complementary = "h-km:k-hm:m-hk:H-L:L-H:s-d:d-s";
-	opt = getopt32(argv, "aHkLsx" "d:+" "lc" "hm", &G.max_print_depth);
+	opt = getopt32(argv, "^"
+			"aHkLsxd:+lchm"
+			"\0" "h-km:k-hm:m-hk:H-L:L-H:s-d:d-s",
+			&G.max_print_depth
+	);
 	argv += optind;
 	if (opt & OPT_h_for_humans) {
 		G.disp_unit = 0;
@@ -255,8 +258,11 @@ int du_main(int argc UNUSED_PARAM, char
 		G.disp_unit = 1024;
 	}
 #else
-	opt_complementary = "H-L:L-H:s-d:d-s";
-	opt = getopt32(argv, "aHkLsx" "d:+" "lc", &G.max_print_depth);
+	opt = getopt32(argv, "^"
+			"aHkLsxd:+lc"
+			"\0" "H-L:L-H:s-d:d-s",
+			&G.max_print_depth
+	);
 	argv += optind;
 #if !ENABLE_FEATURE_DU_DEFAULT_BLOCKSIZE_1K
 	if (opt & OPT_k_kbytes) {
diff -urpN busybox-1.27.2/coreutils/echo.c busybox-1.28.0/coreutils/echo.c
--- busybox-1.27.2/coreutils/echo.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/echo.c	2017-08-03 17:53:10.000000000 +0200
@@ -22,7 +22,7 @@
 //config:	bool "echo (basic SuSv3 version taking no options)"
 //config:	default y
 //config:	help
-//config:	  echo is used to print a specified string to stdout.
+//config:	echo is used to print a specified string to stdout.
 //config:
 //config:# this entry also appears in shell/Config.in, next to the echo builtin
 //config:config FEATURE_FANCY_ECHO
@@ -218,7 +218,7 @@ int echo_main(int argc UNUSED_PARAM, cha
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
diff -urpN busybox-1.27.2/coreutils/env.c busybox-1.28.0/coreutils/env.c
--- busybox-1.27.2/coreutils/env.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/env.c	2017-12-31 10:05:04.000000000 +0100
@@ -24,17 +24,12 @@
  * - use xfunc_error_retval
  */
 //config:config ENV
-//config:	bool "env"
+//config:	bool "env (3.8 kb)"
 //config:	default y
 //config:	help
-//config:	  env is used to set an environment variable and run
-//config:	  a command; without options it displays the current
-//config:	  environment.
-//config:
-//config:config FEATURE_ENV_LONG_OPTIONS
-//config:	bool "Enable long options"
-//config:	default y
-//config:	depends on ENV && LONG_OPTS
+//config:	env is used to set an environment variable and run
+//config:	a command; without options it displays the current
+//config:	environment.
 
 //applet:IF_ENV(APPLET_NOEXEC(env, env, BB_DIR_USR_BIN, BB_SUID_DROP, env))
 
@@ -53,23 +48,17 @@
 
 #include "libbb.h"
 
-#if ENABLE_FEATURE_ENV_LONG_OPTIONS
-static const char env_longopts[] ALIGN1 =
-	"ignore-environment\0" No_argument       "i"
-	"unset\0"              Required_argument "u"
-	;
-#endif
-
 int env_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int env_main(int argc UNUSED_PARAM, char **argv)
 {
 	unsigned opts;
 	llist_t *unset_env = NULL;
 
-#if ENABLE_FEATURE_ENV_LONG_OPTIONS
-	applet_long_options = env_longopts;
-#endif
-	opts = getopt32(argv, "+iu:+", &unset_env);
+	opts = getopt32long(argv, "+iu:*",
+			"ignore-environment\0" No_argument       "i"
+			"unset\0"              Required_argument "u"
+			, &unset_env
+	);
 	argv += optind;
 	if (argv[0] && LONE_DASH(argv[0])) {
 		opts |= 1;
@@ -129,7 +118,7 @@ int env_main(int argc UNUSED_PARAM, char
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
diff -urpN busybox-1.27.2/coreutils/expand.c busybox-1.28.0/coreutils/expand.c
--- busybox-1.27.2/coreutils/expand.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/expand.c	2017-08-17 13:50:45.000000000 +0200
@@ -21,26 +21,16 @@
  *  Caveat: this versions of expand and unexpand don't accept tab lists.
  */
 //config:config EXPAND
-//config:	bool "expand"
+//config:	bool "expand (5.8 kb)"
 //config:	default y
 //config:	help
-//config:	  By default, convert all tabs to spaces.
-//config:
-//config:config FEATURE_EXPAND_LONG_OPTIONS
-//config:	bool "Enable long options"
-//config:	default y
-//config:	depends on EXPAND && LONG_OPTS
+//config:	By default, convert all tabs to spaces.
 //config:
 //config:config UNEXPAND
-//config:	bool "unexpand"
+//config:	bool "unexpand (6 kb)"
 //config:	default y
 //config:	help
-//config:	  By default, convert only leading sequences of blanks to tabs.
-//config:
-//config:config FEATURE_UNEXPAND_LONG_OPTIONS
-//config:	bool "Enable long options"
-//config:	default y
-//config:	depends on UNEXPAND && LONG_OPTS
+//config:	By default, convert only leading sequences of blanks to tabs.
 
 //applet:IF_EXPAND(APPLET(expand, BB_DIR_USR_BIN, BB_SUID_DROP))
 //                   APPLET_ODDNAME:name      main    location        suid_type     help
@@ -53,29 +43,16 @@
 //usage:       "[-i] [-t N] [FILE]..."
 //usage:#define expand_full_usage "\n\n"
 //usage:       "Convert tabs to spaces, writing to stdout\n"
-//usage:	IF_FEATURE_EXPAND_LONG_OPTIONS(
-//usage:     "\n	-i,--initial	Don't convert tabs after non blanks"
-//usage:     "\n	-t,--tabs N	Tabstops every N chars"
-//usage:	)
-//usage:	IF_NOT_FEATURE_EXPAND_LONG_OPTIONS(
 //usage:     "\n	-i	Don't convert tabs after non blanks"
 //usage:     "\n	-t	Tabstops every N chars"
-//usage:	)
 
 //usage:#define unexpand_trivial_usage
 //usage:       "[-fa][-t N] [FILE]..."
 //usage:#define unexpand_full_usage "\n\n"
 //usage:       "Convert spaces to tabs, writing to stdout\n"
-//usage:	IF_FEATURE_UNEXPAND_LONG_OPTIONS(
-//usage:     "\n	-a,--all	Convert all blanks"
-//usage:     "\n	-f,--first-only	Convert only leading blanks"
-//usage:     "\n	-t,--tabs N	Tabstops every N chars"
-//usage:	)
-//usage:	IF_NOT_FEATURE_UNEXPAND_LONG_OPTIONS(
 //usage:     "\n	-a	Convert all blanks"
 //usage:     "\n	-f	Convert only leading blanks"
 //usage:     "\n	-t N	Tabstops every N chars"
-//usage:	)
 
 #include "libbb.h"
 #include "unicode.h"
@@ -188,31 +165,24 @@ int expand_main(int argc UNUSED_PARAM, c
 	unsigned opt;
 	int exit_status = EXIT_SUCCESS;
 
-#if ENABLE_FEATURE_EXPAND_LONG_OPTIONS
-	static const char expand_longopts[] ALIGN1 =
-		/* name, has_arg, val */
-		"initial\0"          No_argument       "i"
-		"tabs\0"             Required_argument "t"
-	;
-#endif
-#if ENABLE_FEATURE_UNEXPAND_LONG_OPTIONS
-	static const char unexpand_longopts[] ALIGN1 =
-		/* name, has_arg, val */
-		"first-only\0"       No_argument       "i"
-		"tabs\0"             Required_argument "t"
-		"all\0"              No_argument       "a"
-	;
-#endif
 	init_unicode();
 
 	if (ENABLE_EXPAND && (!ENABLE_UNEXPAND || applet_name[0] == 'e')) {
-		IF_FEATURE_EXPAND_LONG_OPTIONS(applet_long_options = expand_longopts);
-		opt = getopt32(argv, "it:", &opt_t);
+		opt = getopt32long(argv, "it:",
+				"initial\0"          No_argument       "i"
+				"tabs\0"             Required_argument "t"
+				, &opt_t
+		);
 	} else {
-		IF_FEATURE_UNEXPAND_LONG_OPTIONS(applet_long_options = unexpand_longopts);
-		/* -t NUM sets also -a */
-		opt_complementary = "ta";
-		opt = getopt32(argv, "ft:a", &opt_t);
+		opt = getopt32long(argv, "^"
+				"ft:a"
+				"\0"
+				"ta" /* -t NUM sets -a */,
+				"first-only\0"       No_argument       "i"
+				"tabs\0"             Required_argument "t"
+				"all\0"              No_argument       "a"
+				, &opt_t
+		);
 		/* -f --first-only is the default */
 		if (!(opt & OPT_ALL)) opt |= OPT_INITIAL;
 	}
diff -urpN busybox-1.27.2/coreutils/expr.c busybox-1.28.0/coreutils/expr.c
--- busybox-1.27.2/coreutils/expr.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/expr.c	2017-08-08 14:08:06.000000000 +0200
@@ -23,22 +23,22 @@
  * provided they all associate ((x op x) op x).
  */
 //config:config EXPR
-//config:	bool "expr"
+//config:	bool "expr (6.1 kb)"
 //config:	default y
 //config:	help
-//config:	  expr is used to calculate numbers and print the result
-//config:	  to standard output.
+//config:	expr is used to calculate numbers and print the result
+//config:	to standard output.
 //config:
 //config:config EXPR_MATH_SUPPORT_64
 //config:	bool "Extend Posix numbers support to 64 bit"
 //config:	default y
 //config:	depends on EXPR
 //config:	help
-//config:	  Enable 64-bit math support in the expr applet. This will make
-//config:	  the applet slightly larger, but will allow computation with very
-//config:	  large numbers.
+//config:	Enable 64-bit math support in the expr applet. This will make
+//config:	the applet slightly larger, but will allow computation with very
+//config:	large numbers.
 
-//applet:IF_EXPR(APPLET(expr, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_EXPR(APPLET_NOEXEC(expr, expr, BB_DIR_USR_BIN, BB_SUID_DROP, expr))
 
 //kbuild:lib-$(CONFIG_EXPR) += expr.o
 
@@ -118,7 +118,10 @@ struct globals {
 	char **args;
 } FIX_ALIASING;
 #define G (*(struct globals*)bb_common_bufsiz1)
-#define INIT_G() do { setup_common_bufsiz(); } while (0)
+#define INIT_G() do { \
+	setup_common_bufsiz(); \
+	/* NB: noexec applet - globals not zeroed */ \
+} while (0)
 
 /* forward declarations */
 static VALUE *eval(void);
diff -urpN busybox-1.27.2/coreutils/factor.c busybox-1.28.0/coreutils/factor.c
--- busybox-1.27.2/coreutils/factor.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/factor.c	2017-07-24 18:57:09.000000000 +0200
@@ -4,10 +4,10 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config FACTOR
-//config:	bool "factor"
+//config:	bool "factor (2.6 kb)"
 //config:	default y
 //config:	help
-//config:	  factor factorizes integers
+//config:	factor factorizes integers
 
 //applet:IF_FACTOR(APPLET(factor, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/coreutils/false.c busybox-1.28.0/coreutils/false.c
--- busybox-1.27.2/coreutils/false.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/false.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,10 +7,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config FALSE
-//config:	bool "false"
+//config:	bool "false (tiny)"
 //config:	default y
 //config:	help
-//config:	  false returns an exit code of FALSE (1).
+//config:	false returns an exit code of FALSE (1).
 
 //applet:IF_FALSE(APPLET_NOFORK(false, false, BB_DIR_BIN, BB_SUID_DROP, false))
 
diff -urpN busybox-1.27.2/coreutils/fold.c busybox-1.28.0/coreutils/fold.c
--- busybox-1.27.2/coreutils/fold.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/fold.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,19 +1,20 @@
 /* vi: set sw=4 ts=4: */
-/* fold -- wrap each input line to fit in specified width.
-
-   Written by David MacKenzie, djm@gnu.ai.mit.edu.
-   Copyright (C) 91, 1995-2002 Free Software Foundation, Inc.
-
-   Modified for busybox based on coreutils v 5.0
-   Copyright (C) 2003 Glenn McGrath
-
-   Licensed under GPLv2 or later, see file LICENSE in this source tree.
-*/
+/*
+ * fold -- wrap each input line to fit in specified width.
+ *
+ * Written by David MacKenzie, djm@gnu.ai.mit.edu.
+ * Copyright (C) 91, 1995-2002 Free Software Foundation, Inc.
+ *
+ * Modified for busybox based on coreutils v 5.0
+ * Copyright (C) 2003 Glenn McGrath
+ *
+ * Licensed under GPLv2 or later, see file LICENSE in this source tree.
+ */
 //config:config FOLD
-//config:	bool "fold"
+//config:	bool "fold (4.6 kb)"
 //config:	default y
 //config:	help
-//config:	  Wrap text to fit a specific width.
+//config:	Wrap text to fit a specific width.
 
 //applet:IF_FOLD(APPLET_NOEXEC(fold, fold, BB_DIR_USR_BIN, BB_SUID_DROP, fold))
 
diff -urpN busybox-1.27.2/coreutils/fsync.c busybox-1.28.0/coreutils/fsync.c
--- busybox-1.27.2/coreutils/fsync.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/fsync.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,10 +7,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config FSYNC
-//config:	bool "fsync"
+//config:	bool "fsync (3.7 kb)"
 //config:	default y
 //config:	help
-//config:	  fsync is used to flush file-related cached blocks to disk.
+//config:	fsync is used to flush file-related cached blocks to disk.
 
 //applet:IF_FSYNC(APPLET_NOFORK(fsync, fsync, BB_DIR_BIN, BB_SUID_DROP, fsync))
 
diff -urpN busybox-1.27.2/coreutils/head.c busybox-1.28.0/coreutils/head.c
--- busybox-1.27.2/coreutils/head.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/head.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,11 +7,11 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config HEAD
-//config:	bool "head"
+//config:	bool "head (3.7 kb)"
 //config:	default y
 //config:	help
-//config:	  head is used to print the first specified number of lines
-//config:	  from files.
+//config:	head is used to print the first specified number of lines
+//config:	from files.
 //config:
 //config:config FEATURE_FANCY_HEAD
 //config:	bool "Enable -c, -q, and -v"
diff -urpN busybox-1.27.2/coreutils/hostid.c busybox-1.28.0/coreutils/hostid.c
--- busybox-1.27.2/coreutils/hostid.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/hostid.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,11 +7,11 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config HOSTID
-//config:	bool "hostid"
+//config:	bool "hostid (247 bytes)"
 //config:	default y
 //config:	help
-//config:	  hostid prints the numeric identifier (in hexadecimal) for
-//config:	  the current host.
+//config:	hostid prints the numeric identifier (in hexadecimal) for
+//config:	the current host.
 
 //applet:IF_HOSTID(APPLET_NOFORK(hostid, hostid, BB_DIR_USR_BIN, BB_SUID_DROP, hostid))
 
diff -urpN busybox-1.27.2/coreutils/id.c busybox-1.28.0/coreutils/id.c
--- busybox-1.27.2/coreutils/id.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/id.c	2017-08-17 13:50:45.000000000 +0200
@@ -13,16 +13,16 @@
  * Added -G option Tito Ragusa (C) 2008 for SUSv3.
  */
 //config:config ID
-//config:	bool "id"
+//config:	bool "id (6.7 kb)"
 //config:	default y
 //config:	help
-//config:	  id displays the current user and group ID names.
+//config:	id displays the current user and group ID names.
 //config:
 //config:config GROUPS
-//config:	bool "groups"
+//config:	bool "groups (6.5 kb)"
 //config:	default y
 //config:	help
-//config:	  Print the group names associated with current user id.
+//config:	Print the group names associated with current user id.
 
 //applet:IF_GROUPS(APPLET_NOEXEC(groups, id, BB_DIR_USR_BIN, BB_SUID_DROP, groups))
 //applet:IF_ID(    APPLET_NOEXEC(id,     id, BB_DIR_USR_BIN, BB_SUID_DROP, id    ))
@@ -170,9 +170,12 @@ int id_main(int argc UNUSED_PARAM, char
 	} else {
 		/* Don't allow -n -r -nr -ug -rug -nug -rnug -uZ -gZ -GZ*/
 		/* Don't allow more than one username */
-		opt_complementary = "?1:u--g:g--u:G--u:u--G:g--G:G--g:r?ugG:n?ugG"
-			IF_SELINUX(":u--Z:Z--u:g--Z:Z--g:G--Z:Z--G");
-		opt = getopt32(argv, "rnugG" IF_SELINUX("Z"));
+		opt = getopt32(argv, "^"
+			"rnugG" IF_SELINUX("Z")
+			"\0"
+			"?1:u--g:g--u:G--u:u--G:g--G:G--g:r?ugG:n?ugG"
+			IF_SELINUX(":u--Z:Z--u:g--Z:Z--g:G--Z:Z--G")
+		);
 	}
 
 	username = argv[optind];
diff -urpN busybox-1.27.2/coreutils/install.c busybox-1.28.0/coreutils/install.c
--- busybox-1.27.2/coreutils/install.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/install.c	2017-08-17 13:50:45.000000000 +0200
@@ -6,10 +6,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config INSTALL
-//config:	bool "install"
+//config:	bool "install (12 kb)"
 //config:	default y
 //config:	help
-//config:	  Copy files and set attributes.
+//config:	Copy files and set attributes.
 //config:
 //config:config FEATURE_INSTALL_LONG_OPTIONS
 //config:	bool "Enable long options"
@@ -55,12 +55,17 @@ static const char install_longopts[] ALI
 	"target-directory\0"	Required_argument "t"
 /* autofs build insists of using -b --suffix=.orig */
 /* TODO? (short option for --suffix is -S) */
-#if ENABLE_SELINUX
+# if ENABLE_SELINUX
 	"context\0"             Required_argument "Z"
 	"preserve_context\0"    No_argument       "\xff"
 	"preserve-context\0"    No_argument       "\xff"
-#endif
+# endif
 	;
+# define GETOPT32 getopt32long
+# define LONGOPTS install_longopts,
+#else
+# define GETOPT32 getopt32
+# define LONGOPTS
 #endif
 
 
@@ -135,15 +140,17 @@ int install_main(int argc, char **argv)
 #endif
 	};
 
-#if ENABLE_FEATURE_INSTALL_LONG_OPTIONS
-	applet_long_options = install_longopts;
-#endif
-	opt_complementary = "t--d:d--t:s--d:d--s" IF_FEATURE_INSTALL_LONG_OPTIONS(IF_SELINUX(":Z--\xff:\xff--Z"));
 	/* -c exists for backwards compatibility, it's needed */
 	/* -b is ignored ("make a backup of each existing destination file") */
-	opts = getopt32(argv, "cvb" "Ddpsg:m:o:t:" IF_SELINUX("Z:"),
-			&gid_str, &mode_str, &uid_str, &last
-			IF_SELINUX(, &scontext));
+	opts = GETOPT32(argv, "^"
+		"cvb" "Ddpsg:m:o:t:" IF_SELINUX("Z:")
+		"\0"
+		"t--d:d--t:s--d:d--s"
+		IF_FEATURE_INSTALL_LONG_OPTIONS(IF_SELINUX(":Z--\xff:\xff--Z")),
+		LONGOPTS
+		&gid_str, &mode_str, &uid_str, &last
+		IF_SELINUX(, &scontext)
+	);
 	argc -= optind;
 	argv += optind;
 
diff -urpN busybox-1.27.2/coreutils/libcoreutils/coreutils.h busybox-1.28.0/coreutils/libcoreutils/coreutils.h
--- busybox-1.27.2/coreutils/libcoreutils/coreutils.h	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/libcoreutils/coreutils.h	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #ifndef COREUTILS_H
 #define COREUTILS_H 1
 
diff -urpN busybox-1.27.2/coreutils/libcoreutils/cp_mv_stat.c busybox-1.28.0/coreutils/libcoreutils/cp_mv_stat.c
--- busybox-1.27.2/coreutils/libcoreutils/cp_mv_stat.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/libcoreutils/cp_mv_stat.c	2017-10-20 10:36:58.000000000 +0200
@@ -17,9 +17,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
- *
  */
-
 #include "libbb.h"
 #include "coreutils.h"
 
diff -urpN busybox-1.27.2/coreutils/libcoreutils/getopt_mk_fifo_nod.c busybox-1.28.0/coreutils/libcoreutils/getopt_mk_fifo_nod.c
--- busybox-1.27.2/coreutils/libcoreutils/getopt_mk_fifo_nod.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/libcoreutils/getopt_mk_fifo_nod.c	2017-10-20 10:36:58.000000000 +0200
@@ -17,9 +17,7 @@
  * You should have received a copy of the GNU General Public License
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
- *
  */
-
 #include "libbb.h"
 #include "coreutils.h"
 
diff -urpN busybox-1.27.2/coreutils/link.c busybox-1.28.0/coreutils/link.c
--- busybox-1.27.2/coreutils/link.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/link.c	2017-08-17 13:50:45.000000000 +0200
@@ -6,10 +6,10 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config LINK
-//config:	bool "link"
+//config:	bool "link (3.1 kb)"
 //config:	default y
 //config:	help
-//config:	  link creates hard links between files.
+//config:	link creates hard links between files.
 
 //applet:IF_LINK(APPLET_NOFORK(link, link, BB_DIR_BIN, BB_SUID_DROP, link))
 
@@ -27,14 +27,12 @@
 int link_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int link_main(int argc UNUSED_PARAM, char **argv)
 {
-	opt_complementary = "=2"; /* exactly 2 params */
-	getopt32(argv, "");
+	getopt32(argv, "^" "" "\0" "=2");
 	argv += optind;
 	if (link(argv[0], argv[1]) != 0) {
 		/* shared message */
-		bb_perror_msg_and_die("can't create %slink "
-					"%s to %s", "hard",
-					argv[1], argv[0]
+		bb_perror_msg_and_die("can't create %slink '%s' to '%s'",
+			"hard",	argv[1], argv[0]
 		);
 	}
 	return EXIT_SUCCESS;
diff -urpN busybox-1.27.2/coreutils/ln.c busybox-1.28.0/coreutils/ln.c
--- busybox-1.27.2/coreutils/ln.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/ln.c	2017-08-17 13:50:45.000000000 +0200
@@ -7,10 +7,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config LN
-//config:	bool "ln"
+//config:	bool "ln (4.5 kb)"
 //config:	default y
 //config:	help
-//config:	  ln is used to create hard or soft links between files.
+//config:	ln is used to create hard or soft links between files.
 
 //applet:IF_LN(APPLET_NOEXEC(ln, ln, BB_DIR_BIN, BB_SUID_DROP, ln))
 
@@ -62,8 +62,7 @@ int ln_main(int argc, char **argv)
 	struct stat statbuf;
 	int (*link_func)(const char *, const char *);
 
-	opt_complementary = "-1"; /* min one arg */
-	opts = getopt32(argv, "sfnbS:vT", &suffix);
+	opts = getopt32(argv, "^" "sfnbS:vT" "\0" "-1", &suffix);
 
 	last = argv[argc - 1];
 	argv += optind;
diff -urpN busybox-1.27.2/coreutils/logname.c busybox-1.28.0/coreutils/logname.c
--- busybox-1.27.2/coreutils/logname.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/logname.c	2017-07-24 18:57:09.000000000 +0200
@@ -16,10 +16,10 @@
  * a diagnostic message and an error return.
  */
 //config:config LOGNAME
-//config:	bool "logname"
+//config:	bool "logname (894 bytes)"
 //config:	default y
 //config:	help
-//config:	  logname is used to print the current user's login name.
+//config:	logname is used to print the current user's login name.
 
 //applet:IF_LOGNAME(APPLET_NOFORK(logname, logname, BB_DIR_USR_BIN, BB_SUID_DROP, logname))
 
diff -urpN busybox-1.27.2/coreutils/ls.c busybox-1.28.0/coreutils/ls.c
--- busybox-1.27.2/coreutils/ls.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/ls.c	2018-01-01 20:40:41.000000000 +0100
@@ -28,10 +28,10 @@
  * ls sorts listing now, and supports almost all options.
  */
 //config:config LS
-//config:	bool "ls"
+//config:	bool "ls (14 kb)"
 //config:	default y
 //config:	help
-//config:	  ls is used to list the contents of directories.
+//config:	ls is used to list the contents of directories.
 //config:
 //config:config FEATURE_LS_FILETYPES
 //config:	bool "Enable filetyping options (-p and -F)"
@@ -58,39 +58,39 @@
 //config:	default y
 //config:	depends on LS
 //config:	help
-//config:	  Allow ls to sort file names alphabetically.
+//config:	Allow ls to sort file names alphabetically.
 //config:
 //config:config FEATURE_LS_TIMESTAMPS
 //config:	bool "Show file timestamps"
 //config:	default y
 //config:	depends on LS
 //config:	help
-//config:	  Allow ls to display timestamps for files.
+//config:	Allow ls to display timestamps for files.
 //config:
 //config:config FEATURE_LS_USERNAME
 //config:	bool "Show username/groupnames"
 //config:	default y
 //config:	depends on LS
 //config:	help
-//config:	  Allow ls to display username/groupname for files.
+//config:	Allow ls to display username/groupname for files.
 //config:
 //config:config FEATURE_LS_COLOR
 //config:	bool "Allow use of color to identify file types"
 //config:	default y
 //config:	depends on LS && LONG_OPTS
 //config:	help
-//config:	  This enables the --color option to ls.
+//config:	This enables the --color option to ls.
 //config:
 //config:config FEATURE_LS_COLOR_IS_DEFAULT
 //config:	bool "Produce colored ls output by default"
 //config:	default y
 //config:	depends on FEATURE_LS_COLOR
 //config:	help
-//config:	  Saying yes here will turn coloring on by default,
-//config:	  even if no "--color" option is given to the ls command.
-//config:	  This is not recommended, since the colors are not
-//config:	  configurable, and the output may not be legible on
-//config:	  many output screens.
+//config:	Saying yes here will turn coloring on by default,
+//config:	even if no "--color" option is given to the ls command.
+//config:	This is not recommended, since the colors are not
+//config:	configurable, and the output may not be legible on
+//config:	many output screens.
 
 //applet:IF_LS(APPLET_NOEXEC(ls, ls, BB_DIR_BIN, BB_SUID_DROP, ls))
 
@@ -206,18 +206,18 @@ SPLIT_SUBDIR    = 2,
 /* -SXvhTw  GNU options, busybox optionally supports */
 /* -T WIDTH Ignored (we don't use tabs on output) */
 /* -Z       SELinux mandated option, busybox optionally supports */
-static const char ls_options[] ALIGN1 =
-	"Cadi1lgnsxAk"       /* 12 opts, total 12 */
-	IF_FEATURE_LS_FILETYPES("Fp")    /* 2, 14 */
-	IF_FEATURE_LS_RECURSIVE("R")     /* 1, 15 */
-	IF_SELINUX("Z")                  /* 1, 16 */
-	"Q"                              /* 1, 17 */
-	IF_FEATURE_LS_TIMESTAMPS("ctu")  /* 3, 20 */
-	IF_FEATURE_LS_SORTFILES("SXrv")  /* 4, 24 */
-	IF_FEATURE_LS_FOLLOWLINKS("LH")  /* 2, 26 */
-	IF_FEATURE_HUMAN_READABLE("h")   /* 1, 27 */
+#define ls_options \
+	"Cadi1lgnsxAk"       /* 12 opts, total 12 */ \
+	IF_FEATURE_LS_FILETYPES("Fp")    /* 2, 14 */ \
+	IF_FEATURE_LS_RECURSIVE("R")     /* 1, 15 */ \
+	IF_SELINUX("Z")                  /* 1, 16 */ \
+	"Q"                              /* 1, 17 */ \
+	IF_FEATURE_LS_TIMESTAMPS("ctu")  /* 3, 20 */ \
+	IF_FEATURE_LS_SORTFILES("SXrv")  /* 4, 24 */ \
+	IF_FEATURE_LS_FOLLOWLINKS("LH")  /* 2, 26 */ \
+	IF_FEATURE_HUMAN_READABLE("h")   /* 1, 27 */ \
 	IF_FEATURE_LS_WIDTH("T:w:")      /* 2, 29 */
-;
+
 enum {
 	OPT_C = (1 << 0),
 	OPT_a = (1 << 1),
@@ -347,6 +347,8 @@ struct globals {
 	IF_FEATURE_LS_TIMESTAMPS(time(&G.current_time_t);) \
 } while (0)
 
+#define ESC "\033"
+
 
 /*** Output code ***/
 
@@ -480,12 +482,11 @@ static NOINLINE unsigned display_single(
 	int opt;
 #if ENABLE_FEATURE_LS_FILETYPES || ENABLE_FEATURE_LS_COLOR
 	struct stat statbuf;
-	char append;
 #endif
-
 #if ENABLE_FEATURE_LS_FILETYPES
-	append = append_char(dn->dn_mode);
+	char append = append_char(dn->dn_mode);
 #endif
+
 	opt = option_mask32;
 
 	/* Do readlink early, so that if it fails, error message
@@ -586,12 +587,12 @@ static NOINLINE unsigned display_single(
 		if (!mode)
 			if (lstat(dn->fullname, &statbuf) == 0)
 				mode = statbuf.st_mode;
-		printf("\033[%u;%um", bold(mode), fgcolor(mode));
+		printf(ESC"[%u;%um", bold(mode), fgcolor(mode));
 	}
 #endif
 	column += print_name(dn->name);
 	if (G_show_color) {
-		printf("\033[0m");
+		printf(ESC"[m");
 	}
 
 	if (lpath) {
@@ -609,7 +610,7 @@ static NOINLINE unsigned display_single(
 # endif
 # if ENABLE_FEATURE_LS_COLOR
 			if (G_show_color) {
-				printf("\033[%u;%um", bold(mode), fgcolor(mode));
+				printf(ESC"[%u;%um", bold(mode), fgcolor(mode));
 			}
 # endif
 		}
@@ -617,7 +618,7 @@ static NOINLINE unsigned display_single(
 		column += print_name(lpath) + 4;
 		free(lpath);
 		if (G_show_color) {
-			printf("\033[0m");
+			printf(ESC"[m");
 		}
 	}
 #if ENABLE_FEATURE_LS_FILETYPES
@@ -1093,25 +1094,26 @@ int ls_main(int argc UNUSED_PARAM, char
 #endif
 
 	/* process options */
-	IF_LONG_OPTS(applet_long_options = ls_longopts;)
-	opt_complementary =
-		/* -n and -g imply -l */
-		"nl:gl"
-		/* --full-time implies -l */
-		IF_FEATURE_LS_TIMESTAMPS(IF_LONG_OPTS(":\xff""l"))
-		/* http://pubs.opengroup.org/onlinepubs/9699919799/utilities/ls.html:
-		 * in some pairs of opts, only last one takes effect:
-		 */
-		IF_FEATURE_LS_TIMESTAMPS(IF_FEATURE_LS_SORTFILES(":t-S:S-t")) /* time/size */
-		// ":m-l:l-m" - we don't have -m
-		IF_FEATURE_LS_FOLLOWLINKS(":H-L:L-H")
-		":C-xl:x-Cl:l-xC" /* bycols/bylines/long */
-		":C-1:1-C" /* bycols/oneline */
-		":x-1:1-x" /* bylines/oneline (not in SuS, but in GNU coreutils 8.4) */
-		IF_FEATURE_LS_TIMESTAMPS(":c-u:u-c") /* mtime/atime */
-		/* -w NUM: */
-		IF_FEATURE_LS_WIDTH(":w+");
-	opt = getopt32(argv, ls_options
+	opt = getopt32long(argv, "^"
+		ls_options
+			"\0"
+			/* -n and -g imply -l */
+			"nl:gl"
+			/* --full-time implies -l */
+			IF_FEATURE_LS_TIMESTAMPS(IF_LONG_OPTS(":\xff""l"))
+			/* http://pubs.opengroup.org/onlinepubs/9699919799/utilities/ls.html:
+			 * in some pairs of opts, only last one takes effect:
+			 */
+			IF_FEATURE_LS_TIMESTAMPS(IF_FEATURE_LS_SORTFILES(":t-S:S-t")) /* time/size */
+			// ":m-l:l-m" - we don't have -m
+			IF_FEATURE_LS_FOLLOWLINKS(":H-L:L-H")
+			":C-xl:x-Cl:l-xC" /* bycols/bylines/long */
+			":C-1:1-C" /* bycols/oneline */
+			":x-1:1-x" /* bylines/oneline (not in SuS, but in GNU coreutils 8.4) */
+			IF_FEATURE_LS_TIMESTAMPS(":c-u:u-c") /* mtime/atime */
+			/* -w NUM: */
+			IF_FEATURE_LS_WIDTH(":w+")
+		, ls_longopts
 		IF_FEATURE_LS_WIDTH(, /*-T*/ NULL, /*-w*/ &G_terminal_width)
 		IF_FEATURE_LS_COLOR(, &color_opt)
 	);
diff -urpN busybox-1.27.2/coreutils/md5_sha1_sum.c busybox-1.28.0/coreutils/md5_sha1_sum.c
--- busybox-1.27.2/coreutils/md5_sha1_sum.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/md5_sha1_sum.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,39 +1,39 @@
 /* vi: set sw=4 ts=4: */
 /*
- *  Copyright (C) 2003 Glenn L. McGrath
- *  Copyright (C) 2003-2004 Erik Andersen
+ * Copyright (C) 2003 Glenn L. McGrath
+ * Copyright (C) 2003-2004 Erik Andersen
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config MD5SUM
-//config:	bool "md5sum"
+//config:	bool "md5sum (6.8 kb)"
 //config:	default y
 //config:	help
-//config:	  md5sum is used to print or check MD5 checksums.
+//config:	md5sum is used to print or check MD5 checksums.
 //config:
 //config:config SHA1SUM
-//config:	bool "sha1sum"
+//config:	bool "sha1sum (6 kb)"
 //config:	default y
 //config:	help
-//config:	  Compute and check SHA1 message digest
+//config:	Compute and check SHA1 message digest
 //config:
 //config:config SHA256SUM
-//config:	bool "sha256sum"
+//config:	bool "sha256sum (7.1 kb)"
 //config:	default y
 //config:	help
-//config:	  Compute and check SHA256 message digest
+//config:	Compute and check SHA256 message digest
 //config:
 //config:config SHA512SUM
-//config:	bool "sha512sum"
+//config:	bool "sha512sum (7.6 kb)"
 //config:	default y
 //config:	help
-//config:	  Compute and check SHA512 message digest
+//config:	Compute and check SHA512 message digest
 //config:
 //config:config SHA3SUM
-//config:	bool "sha3sum"
+//config:	bool "sha3sum (6.3 kb)"
 //config:	default y
 //config:	help
-//config:	  Compute and check SHA3 message digest
+//config:	Compute and check SHA3 message digest
 //config:
 //config:comment "Common options for md5sum, sha1sum, sha256sum, sha512sum, sha3sum"
 //config:	depends on MD5SUM || SHA1SUM || SHA256SUM || SHA512SUM || SHA3SUM
@@ -43,9 +43,9 @@
 //config:	default y
 //config:	depends on MD5SUM || SHA1SUM || SHA256SUM || SHA512SUM || SHA3SUM
 //config:	help
-//config:	  Enabling the -c options allows files to be checked
-//config:	  against pre-calculated hash values.
-//config:	  -s and -w are useful options when verifying checksums.
+//config:	Enabling the -c options allows files to be checked
+//config:	against pre-calculated hash values.
+//config:	-s and -w are useful options when verifying checksums.
 
 //applet:IF_MD5SUM(APPLET_NOEXEC(md5sum, md5_sha1_sum, BB_DIR_USR_BIN, BB_SUID_DROP, md5sum))
 //applet:IF_SHA1SUM(APPLET_NOEXEC(sha1sum, md5_sha1_sum, BB_DIR_USR_BIN, BB_SUID_DROP, sha1sum))
@@ -258,15 +258,14 @@ int md5_sha1_sum_main(int argc UNUSED_PA
 #endif
 
 	if (ENABLE_FEATURE_MD5_SHA1_SUM_CHECK) {
-		/* -s and -w require -c */
-		opt_complementary = "s?c:w?c";
 		/* -b "binary", -t "text" are ignored (shaNNNsum compat) */
+		/* -s and -w require -c */
 #if ENABLE_SHA3SUM
 		if (applet_name[3] == HASH_SHA3)
-			flags = getopt32(argv, "scwbta:+", &sha3_width);
+			flags = getopt32(argv, "^" "scwbta:+" "\0" "s?c:w?c", &sha3_width);
 		else
 #endif
-			flags = getopt32(argv, "scwbt");
+			flags = getopt32(argv, "^" "scwbt" "\0" "s?c:w?c");
 	} else {
 #if ENABLE_SHA3SUM
 		if (applet_name[3] == HASH_SHA3)
diff -urpN busybox-1.27.2/coreutils/mkdir.c busybox-1.28.0/coreutils/mkdir.c
--- busybox-1.27.2/coreutils/mkdir.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/mkdir.c	2017-08-17 13:50:45.000000000 +0200
@@ -14,15 +14,10 @@
 /* Nov 28, 2006      Yoshinori Sato <ysato@users.sourceforge.jp>: Add SELinux Support.
  */
 //config:config MKDIR
-//config:	bool "mkdir"
+//config:	bool "mkdir (4.4 kb)"
 //config:	default y
 //config:	help
-//config:	  mkdir is used to create directories with the specified names.
-//config:
-//config:config FEATURE_MKDIR_LONG_OPTIONS
-//config:	bool "Enable long options"
-//config:	default y
-//config:	depends on MKDIR && LONG_OPTS
+//config:	mkdir is used to create directories with the specified names.
 
 //applet:IF_MKDIR(APPLET_NOFORK(mkdir, mkdir, BB_DIR_BIN, BB_SUID_DROP, mkdir))
 
@@ -53,19 +48,6 @@
 
 /* This is a NOFORK applet. Be very careful! */
 
-#if ENABLE_FEATURE_MKDIR_LONG_OPTIONS
-static const char mkdir_longopts[] ALIGN1 =
-	"mode\0"    Required_argument "m"
-	"parents\0" No_argument       "p"
-#if ENABLE_SELINUX
-	"context\0" Required_argument "Z"
-#endif
-#if ENABLE_FEATURE_VERBOSE
-	"verbose\0" No_argument       "v"
-#endif
-	;
-#endif
-
 int mkdir_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int mkdir_main(int argc UNUSED_PARAM, char **argv)
 {
@@ -78,10 +60,17 @@ int mkdir_main(int argc UNUSED_PARAM, ch
 	security_context_t scontext;
 #endif
 
-#if ENABLE_FEATURE_MKDIR_LONG_OPTIONS
-	applet_long_options = mkdir_longopts;
-#endif
-	opt = getopt32(argv, "m:pv" IF_SELINUX("Z:"), &smode IF_SELINUX(,&scontext));
+	opt = getopt32long(argv, "m:pv" IF_SELINUX("Z:"),
+			"mode\0"    Required_argument "m"
+			"parents\0" No_argument       "p"
+# if ENABLE_SELINUX
+			"context\0" Required_argument "Z"
+# endif
+# if ENABLE_FEATURE_VERBOSE
+			"verbose\0" No_argument       "v"
+# endif
+			, &smode IF_SELINUX(,&scontext)
+	);
 	if (opt & 1) {
 		mode_t mmode = bb_parse_mode(smode, 0777);
 		if (mmode == (mode_t)-1) {
diff -urpN busybox-1.27.2/coreutils/mkfifo.c busybox-1.28.0/coreutils/mkfifo.c
--- busybox-1.27.2/coreutils/mkfifo.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/mkfifo.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,11 +7,11 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config MKFIFO
-//config:	bool "mkfifo"
+//config:	bool "mkfifo (3.7 kb)"
 //config:	default y
 //config:	help
-//config:	  mkfifo is used to create FIFOs (named pipes).
-//config:	  The 'mknod' program can also create FIFOs.
+//config:	mkfifo is used to create FIFOs (named pipes).
+//config:	The 'mknod' program can also create FIFOs.
 
 //applet:IF_MKFIFO(APPLET_NOEXEC(mkfifo, mkfifo, BB_DIR_USR_BIN, BB_SUID_DROP, mkfifo))
 
diff -urpN busybox-1.27.2/coreutils/mknod.c busybox-1.28.0/coreutils/mknod.c
--- busybox-1.27.2/coreutils/mknod.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/mknod.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,11 +7,11 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config MKNOD
-//config:	bool "mknod"
+//config:	bool "mknod (4 kb)"
 //config:	default y
 //config:	help
-//config:	  mknod is used to create FIFOs or block/character special
-//config:	  files with the specified names.
+//config:	mknod is used to create FIFOs or block/character special
+//config:	files with the specified names.
 
 //applet:IF_MKNOD(APPLET_NOEXEC(mknod, mknod, BB_DIR_BIN, BB_SUID_DROP, mknod))
 
diff -urpN busybox-1.27.2/coreutils/mktemp.c busybox-1.28.0/coreutils/mktemp.c
--- busybox-1.27.2/coreutils/mktemp.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/mktemp.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,13 +2,11 @@
 /*
  * Mini mktemp implementation for busybox
  *
- *
  * Copyright (C) 2000 by Daniel Jacobowitz
  * Written by Daniel Jacobowitz <dan@debian.org>
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 /* Coreutils 6.12 man page says:
  *        mktemp [OPTION]... [TEMPLATE]
  * Create a temporary file or directory, safely, and print its name. If
@@ -31,12 +29,12 @@
  *        -p; else /tmp [deprecated]
  */
 //config:config MKTEMP
-//config:	bool "mktemp"
+//config:	bool "mktemp (4 kb)"
 //config:	default y
 //config:	help
-//config:	  mktemp is used to create unique temporary files
+//config:	mktemp is used to create unique temporary files
 
-//applet:IF_MKTEMP(APPLET(mktemp, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_MKTEMP(APPLET_NOEXEC(mktemp, mktemp, BB_DIR_BIN, BB_SUID_DROP, mktemp))
 
 //kbuild:lib-$(CONFIG_MKTEMP) += mktemp.o
 
@@ -80,8 +78,7 @@ int mktemp_main(int argc UNUSED_PARAM, c
 	if (!path || path[0] == '\0')
 		path = "/tmp";
 
-	opt_complementary = "?1"; /* 1 argument max */
-	opts = getopt32(argv, "dqtp:u", &path);
+	opts = getopt32(argv, "^" "dqtp:u" "\0" "?1"/*1 arg max*/, &path);
 
 	chp = argv[optind];
 	if (!chp) {
diff -urpN busybox-1.27.2/coreutils/mv.c busybox-1.28.0/coreutils/mv.c
--- busybox-1.27.2/coreutils/mv.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/mv.c	2017-08-17 13:50:45.000000000 +0200
@@ -12,15 +12,10 @@
  * Size reduction and improved error checking.
  */
 //config:config MV
-//config:	bool "mv"
+//config:	bool "mv (9.8 kb)"
 //config:	default y
 //config:	help
-//config:	  mv is used to move or rename files or directories.
-//config:
-//config:config FEATURE_MV_LONG_OPTIONS
-//config:	bool "Enable long options"
-//config:	default y
-//config:	depends on MV && LONG_OPTS
+//config:	mv is used to move or rename files or directories.
 
 //applet:IF_MV(APPLET(mv, BB_DIR_BIN, BB_SUID_DROP))
 
@@ -41,23 +36,6 @@
 #include "libbb.h"
 #include "libcoreutils/coreutils.h"
 
-#if ENABLE_FEATURE_MV_LONG_OPTIONS
-static const char mv_longopts[] ALIGN1 =
-	"interactive\0" No_argument "i"
-	"force\0"       No_argument "f"
-	"no-clobber\0"  No_argument "n"
-	IF_FEATURE_VERBOSE(
-	"verbose\0"     No_argument "v"
-	)
-	;
-#endif
-
-#define OPT_FORCE       (1 << 0)
-#define OPT_INTERACTIVE (1 << 1)
-#define OPT_NOCLOBBER   (1 << 2)
-#define OPT_VERBOSE     ((1 << 3) * ENABLE_FEATURE_VERBOSE)
-
-
 int mv_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int mv_main(int argc, char **argv)
 {
@@ -69,15 +47,25 @@ int mv_main(int argc, char **argv)
 	int status = 0;
 	int copy_flag = 0;
 
-#if ENABLE_FEATURE_MV_LONG_OPTIONS
-	applet_long_options = mv_longopts;
-#endif
+#define OPT_FORCE       (1 << 0)
+#define OPT_INTERACTIVE (1 << 1)
+#define OPT_NOCLOBBER   (1 << 2)
+#define OPT_VERBOSE     ((1 << 3) * ENABLE_FEATURE_VERBOSE)
 	/* Need at least two arguments.
 	 * If more than one of -f, -i, -n is specified , only the final one
 	 * takes effect (it unsets previous options).
 	 */
-	opt_complementary = "-2:f-in:i-fn:n-fi";
-	flags = getopt32(argv, "finv");
+	flags = getopt32long(argv, "^"
+			"finv"
+			"\0"
+			"-2:f-in:i-fn:n-fi",
+			"interactive\0" No_argument "i"
+			"force\0"       No_argument "f"
+			"no-clobber\0"  No_argument "n"
+			IF_FEATURE_VERBOSE(
+			"verbose\0"     No_argument "v"
+			)
+	);
 	argc -= optind;
 	argv += optind;
 	last = argv[argc - 1];
diff -urpN busybox-1.27.2/coreutils/nice.c busybox-1.28.0/coreutils/nice.c
--- busybox-1.27.2/coreutils/nice.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/nice.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,12 +7,12 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config NICE
-//config:	bool "nice"
+//config:	bool "nice (1.8 kb)"
 //config:	default y
 //config:	help
-//config:	  nice runs a program with modified scheduling priority.
+//config:	nice runs a program with modified scheduling priority.
 
-//applet:IF_NICE(APPLET(nice, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_NICE(APPLET_NOEXEC(nice, nice, BB_DIR_BIN, BB_SUID_DROP, nice))
 
 //kbuild:lib-$(CONFIG_NICE) += nice.o
 
diff -urpN busybox-1.27.2/coreutils/nl.c busybox-1.28.0/coreutils/nl.c
--- busybox-1.27.2/coreutils/nl.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/coreutils/nl.c	2017-08-17 13:50:45.000000000 +0200
@@ -5,10 +5,10 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config NL
-//config:	bool "nl"
+//config:	bool "nl (4.3 kb)"
 //config:	default y
 //config:	help
-//config:	  nl is used to number lines of files.
+//config:	nl is used to number lines of files.
 
 //applet:IF_NL(APPLET(nl, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -35,26 +35,6 @@
 
 #include "libbb.h"
 
-void FAST_FUNC print_numbered_lines(struct number_state *ns, const char *filename)
-{
-	FILE *fp = fopen_or_warn_stdin(filename);
-	unsigned N = ns->start;
-	char *line;
-
-	while ((line = xmalloc_fgetline(fp)) != NULL) {
-		if (ns->all
-		 || (ns->nonempty && line[0])
-		) {
-			printf("%*u%s%s\n", ns->width, N, ns->sep, line);
-			N += ns->inc;
-		} else if (ns->empty_str)
-			fputs(ns->empty_str, stdout);
-		free(line);
-	}
-
-	fclose(fp);
-}
-
 int nl_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int nl_main(int argc UNUSED_PARAM, char **argv)
 {
@@ -77,14 +57,13 @@ int nl_main(int argc UNUSED_PARAM, char
 		"starting-line-number\0"Required_argument "v"
 		"number-width\0"	Required_argument "w"
 	;
-
-	applet_long_options = nl_longopts;
 #endif
 	ns.width = 6;
 	ns.start = 1;
 	ns.inc = 1;
 	ns.sep = "\t";
-	getopt32(argv, "pw:+s:v:+i:+b:", &ns.width, &ns.sep, &ns.start, &ns.inc, &opt_b);
+	getopt32long(argv, "pw:+s:v:+i:+b:", nl_longopts,
+			&ns.width, &ns.sep, &ns.start, &ns.inc, &opt_b);
 	ns.all = (opt_b[0] == 'a');
 	ns.nonempty = (opt_b[0] == 't');
 	ns.empty_str = xasprintf("%*s\n", ns.width + (int)strlen(ns.sep), "");
diff -urpN busybox-1.27.2/coreutils/nohup.c busybox-1.28.0/coreutils/nohup.c
--- busybox-1.27.2/coreutils/nohup.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/nohup.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,5 +1,6 @@
 /* vi: set sw=4 ts=4: */
-/* nohup - invoke a utility immune to hangups.
+/*
+ * nohup - invoke a utility immune to hangups.
  *
  * Busybox version based on nohup specification at
  * http://www.opengroup.org/onlinepubs/007904975/utilities/nohup.html
@@ -10,12 +11,12 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config NOHUP
-//config:	bool "nohup"
+//config:	bool "nohup (2 kb)"
 //config:	default y
 //config:	help
-//config:	  run a command immune to hangups, with output to a non-tty.
+//config:	run a command immune to hangups, with output to a non-tty.
 
-//applet:IF_NOHUP(APPLET(nohup, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_NOHUP(APPLET_NOEXEC(nohup, nohup, BB_DIR_USR_BIN, BB_SUID_DROP, nohup))
 
 //kbuild:lib-$(CONFIG_NOHUP) += nohup.o
 
@@ -31,12 +32,12 @@
 
 /* Compat info: nohup (GNU coreutils 6.8) does this:
 # nohup true
-nohup: ignoring input and appending output to `nohup.out'
+nohup: ignoring input and appending output to 'nohup.out'
 # nohup true 1>/dev/null
 nohup: ignoring input and redirecting stderr to stdout
 # nohup true 2>zz
 # cat zz
-nohup: ignoring input and appending output to `nohup.out'
+nohup: ignoring input and appending output to 'nohup.out'
 # nohup true 2>zz 1>/dev/null
 # cat zz
 nohup: ignoring input
diff -urpN busybox-1.27.2/coreutils/nproc.c busybox-1.28.0/coreutils/nproc.c
--- busybox-1.27.2/coreutils/nproc.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/nproc.c	2017-08-17 13:50:45.000000000 +0200
@@ -4,12 +4,12 @@
  * Licensed under GPLv2, see LICENSE in this source tree
  */
 //config:config NPROC
-//config:	bool "nproc"
+//config:	bool "nproc (248 bytes)"
 //config:	default y
 //config:	help
-//config:	  Print number of CPUs
+//config:	Print number of CPUs
 
-//applet:IF_NPROC(APPLET(nproc, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_NPROC(APPLET_NOFORK(nproc, nproc, BB_DIR_USR_BIN, BB_SUID_DROP, nproc))
 
 //kbuild:lib-$(CONFIG_NPROC) += nproc.o
 
@@ -28,7 +28,6 @@ int nproc_main(int argc UNUSED_PARAM, ch
 	unsigned long mask[1024];
 	unsigned i, count = 0;
 
-	//applet_long_options = ...;
 	//getopt32(argv, "");
 
 	//if --all, count /sys/devices/system/cpu/cpuN dirs, else:
diff -urpN busybox-1.27.2/coreutils/od.c busybox-1.28.0/coreutils/od.c
--- busybox-1.27.2/coreutils/od.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/od.c	2017-08-03 17:53:10.000000000 +0200
@@ -11,10 +11,10 @@
  * Original copyright notice is retained at the end of this file.
  */
 //config:config OD
-//config:	bool "od"
+//config:	bool "od (11 kb)"
 //config:	default y
 //config:	help
-//config:	  od is used to dump binary files in octal and other formats.
+//config:	od is used to dump binary files in octal and other formats.
 
 //applet:IF_OD(APPLET(od, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -223,7 +223,7 @@ int od_main(int argc, char **argv)
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
diff -urpN busybox-1.27.2/coreutils/od_bloaty.c busybox-1.28.0/coreutils/od_bloaty.c
--- busybox-1.27.2/coreutils/od_bloaty.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/od_bloaty.c	2017-08-17 13:50:45.000000000 +0200
@@ -61,8 +61,8 @@ enum {
 	OPT_traditional = (1 << 18) * ENABLE_LONG_OPTS,
 };
 
-#define OD_GETOPT32() getopt32(argv, \
-	"A:N:abcdfhij:lot:*vxsS:w:+:", \
+#define OD_GETOPT32() getopt32long(argv, \
+	"A:N:abcdfhij:lot:*vxsS:w:+:", od_longopts, \
 	/* -w with optional param */ \
 	/* -S was -s and also had optional parameter */ \
 	/* but in coreutils 6.3 it was renamed and now has */ \
@@ -665,7 +665,7 @@ decode_one_format(const char *s_orig, co
 		fmt = FLOATING_POINT;
 		++s;
 		p = strchr(FDL, *s);
-		if (!p) {
+		if (!p || *p == '\0') {
 			size = sizeof(double);
 			if (isdigit(s[0])) {
 				size = bb_strtou(s, &end, 0);
@@ -686,6 +686,7 @@ decode_one_format(const char *s_orig, co
 			};
 
 			size = FDL_sizeof[p - FDL];
+			s++; /* skip F/D/L */
 		}
 
 		size_spec = fp_type_size[size];
@@ -1212,9 +1213,6 @@ int od_main(int argc UNUSED_PARAM, char
 	address_pad_len_char = '7';
 
 	/* Parse command line */
-#if ENABLE_LONG_OPTS
-	applet_long_options = od_longopts;
-#endif
 	opt = OD_GETOPT32();
 	argv += optind;
 	if (opt & OPT_A) {
diff -urpN busybox-1.27.2/coreutils/paste.c busybox-1.28.0/coreutils/paste.c
--- busybox-1.27.2/coreutils/paste.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/paste.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,11 +7,11 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config PASTE
-//config:	bool "paste"
+//config:	bool "paste (4.5 kb)"
 //config:	default y
 //config:	help
-//config:	  paste is used to paste lines of different files together
-//config:	  and write the result to stdout
+//config:	paste is used to paste lines of different files together
+//config:	and write the result to stdout
 
 //applet:IF_PASTE(APPLET_NOEXEC(paste, paste, BB_DIR_USR_BIN, BB_SUID_DROP, paste))
 
diff -urpN busybox-1.27.2/coreutils/printenv.c busybox-1.28.0/coreutils/printenv.c
--- busybox-1.27.2/coreutils/printenv.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/printenv.c	2017-07-24 18:57:09.000000000 +0200
@@ -8,10 +8,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config PRINTENV
-//config:	bool "printenv"
+//config:	bool "printenv (1 kb)"
 //config:	default y
 //config:	help
-//config:	  printenv is used to print all or part of environment.
+//config:	printenv is used to print all or part of environment.
 
 //applet:IF_PRINTENV(APPLET_NOFORK(printenv, printenv, BB_DIR_BIN, BB_SUID_DROP, printenv))
 
diff -urpN busybox-1.27.2/coreutils/printf.c busybox-1.28.0/coreutils/printf.c
--- busybox-1.27.2/coreutils/printf.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/coreutils/printf.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,54 +1,52 @@
 /* vi: set sw=4 ts=4: */
-/* printf - format and print data
-
-   Copyright 1999 Dave Cinege
-   Portions copyright (C) 1990-1996 Free Software Foundation, Inc.
-
-   Licensed under GPLv2 or later, see file LICENSE in this source tree.
-*/
-
+/*
+ * printf - format and print data
+ *
+ * Copyright 1999 Dave Cinege
+ * Portions copyright (C) 1990-1996 Free Software Foundation, Inc.
+ *
+ * Licensed under GPLv2 or later, see file LICENSE in this source tree.
+ */
 /* Usage: printf format [argument...]
-
-   A front end to the printf function that lets it be used from the shell.
-
-   Backslash escapes:
-
-   \" = double quote
-   \\ = backslash
-   \a = alert (bell)
-   \b = backspace
-   \c = produce no further output
-   \f = form feed
-   \n = new line
-   \r = carriage return
-   \t = horizontal tab
-   \v = vertical tab
-   \0ooo = octal number (ooo is 0 to 3 digits)
-   \xhhh = hexadecimal number (hhh is 1 to 3 digits)
-
-   Additional directive:
-
-   %b = print an argument string, interpreting backslash escapes
-
-   The 'format' argument is re-used as many times as necessary
-   to convert all of the given arguments.
-
-   David MacKenzie <djm@gnu.ai.mit.edu>
-*/
-
+ *
+ * A front end to the printf function that lets it be used from the shell.
+ *
+ * Backslash escapes:
+ *
+ * \" = double quote
+ * \\ = backslash
+ * \a = alert (bell)
+ * \b = backspace
+ * \c = produce no further output
+ * \f = form feed
+ * \n = new line
+ * \r = carriage return
+ * \t = horizontal tab
+ * \v = vertical tab
+ * \0ooo = octal number (ooo is 0 to 3 digits)
+ * \xhhh = hexadecimal number (hhh is 1 to 3 digits)
+ *
+ * Additional directive:
+ *
+ * %b = print an argument string, interpreting backslash escapes
+ *
+ * The 'format' argument is re-used as many times as necessary
+ * to convert all of the given arguments.
+ *
+ * David MacKenzie <djm@gnu.ai.mit.edu>
+ */
 /* 19990508 Busy Boxed! Dave Cinege */
 
 //config:config PRINTF
-//config:	bool "printf"
+//config:	bool "printf (3.3 kb)"
 //config:	default y
 //config:	help
-//config:	  printf is used to format and print specified strings.
-//config:	  It's similar to `echo' except it has more options.
+//config:	printf is used to format and print specified strings.
+//config:	It's similar to 'echo' except it has more options.
 
 //applet:IF_PRINTF(APPLET_NOFORK(printf, printf, BB_DIR_USR_BIN, BB_SUID_DROP, printf))
 
 //kbuild:lib-$(CONFIG_PRINTF) += printf.o
-
 //kbuild:lib-$(CONFIG_ASH_PRINTF)  += printf.o
 //kbuild:lib-$(CONFIG_HUSH_PRINTF) += printf.o
 
@@ -305,7 +303,7 @@ static char **print_formatted(char *f, c
 				}
 				break;
 			}
-			if (strchr("-+ #", *f)) {
+			if (*f && strchr("-+ #", *f)) {
 				++f;
 				++direc_length;
 			}
@@ -348,7 +346,7 @@ static char **print_formatted(char *f, c
 				static const char format_chars[] ALIGN1 = "diouxXfeEgGcs";
 				char *p = strchr(format_chars, *f);
 				/* needed - try "printf %" without it */
-				if (p == NULL) {
+				if (p == NULL || *f == '\0') {
 					bb_error_msg("%s: invalid format", direc_start);
 					/* causes main() to exit with error */
 					return saved_argv - 1;
diff -urpN busybox-1.27.2/coreutils/pwd.c busybox-1.28.0/coreutils/pwd.c
--- busybox-1.27.2/coreutils/pwd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/pwd.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,10 +7,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config PWD
-//config:	bool "pwd"
+//config:	bool "pwd (3.4 kb)"
 //config:	default y
 //config:	help
-//config:	  pwd is used to print the current directory.
+//config:	pwd is used to print the current directory.
 
 //applet:IF_PWD(APPLET_NOFORK(pwd, pwd, BB_DIR_BIN, BB_SUID_DROP, pwd))
 
diff -urpN busybox-1.27.2/coreutils/readlink.c busybox-1.28.0/coreutils/readlink.c
--- busybox-1.27.2/coreutils/readlink.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/readlink.c	2017-08-17 13:50:45.000000000 +0200
@@ -7,20 +7,20 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config READLINK
-//config:	bool "readlink"
+//config:	bool "readlink (3.6 kb)"
 //config:	default y
 //config:	help
-//config:	  This program reads a symbolic link and returns the name
-//config:	  of the file it points to
+//config:	This program reads a symbolic link and returns the name
+//config:	of the file it points to
 //config:
 //config:config FEATURE_READLINK_FOLLOW
 //config:	bool "Enable canonicalization by following all symlinks (-f)"
 //config:	default y
 //config:	depends on READLINK
 //config:	help
-//config:	  Enable the readlink option (-f).
+//config:	Enable the readlink option (-f).
 
-//applet:IF_READLINK(APPLET(readlink, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_READLINK(APPLET_NOFORK(readlink, readlink, BB_DIR_USR_BIN, BB_SUID_DROP, readlink))
 
 //kbuild:lib-$(CONFIG_READLINK) += readlink.o
 
@@ -71,8 +71,7 @@ int readlink_main(int argc UNUSED_PARAM,
 	IF_FEATURE_READLINK_FOLLOW(
 		unsigned opt;
 		/* We need exactly one non-option argument.  */
-		opt_complementary = "=1";
-		opt = getopt32(argv, "fnvsq");
+		opt = getopt32(argv, "^" "fnvsq" "\0" "=1");
 		fname = argv[optind];
 	)
 	IF_NOT_FEATURE_READLINK_FOLLOW(
@@ -85,6 +84,7 @@ int readlink_main(int argc UNUSED_PARAM,
 	if (!(opt & 4)) /* not -v */
 		logmode = LOGMODE_NONE;
 
+	/* NOFORK: only one alloc is allowed; must free */
 	if (opt & 1) { /* -f */
 		buf = xmalloc_realpath(fname);
 	} else {
@@ -94,9 +94,7 @@ int readlink_main(int argc UNUSED_PARAM,
 	if (!buf)
 		return EXIT_FAILURE;
 	printf((opt & 2) ? "%s" : "%s\n", buf);
-
-	if (ENABLE_FEATURE_CLEAN_UP)
-		free(buf);
+	free(buf);
 
 	fflush_stdout_and_exit(EXIT_SUCCESS);
 }
diff -urpN busybox-1.27.2/coreutils/realpath.c busybox-1.28.0/coreutils/realpath.c
--- busybox-1.27.2/coreutils/realpath.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/realpath.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,5 +1,6 @@
 /* vi: set sw=4 ts=4: */
-/* Mar 16, 2003      Manuel Novoa III   (mjn3@codepoet.org)
+/*
+ * Mar 16, 2003      Manuel Novoa III   (mjn3@codepoet.org)
  *
  * Now does proper error checking on output and returns a failure exit code
  * if one or more paths cannot be resolved.
@@ -7,13 +8,13 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config REALPATH
-//config:	bool "realpath"
+//config:	bool "realpath (1.1 kb)"
 //config:	default y
 //config:	help
-//config:	  Return the canonicalized absolute pathname.
-//config:	  This isn't provided by GNU shellutils, but where else does it belong.
+//config:	Return the canonicalized absolute pathname.
+//config:	This isn't provided by GNU shellutils, but where else does it belong.
 
-//applet:IF_REALPATH(APPLET(realpath, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_REALPATH(APPLET_NOFORK(realpath, realpath, BB_DIR_USR_BIN, BB_SUID_DROP, realpath))
 
 //kbuild:lib-$(CONFIG_REALPATH) += realpath.o
 
@@ -36,6 +37,7 @@ int realpath_main(int argc UNUSED_PARAM,
 	}
 
 	do {
+		/* NOFORK: only one alloc is allowed; must free */
 		char *resolved_path = xmalloc_realpath(*argv);
 		if (resolved_path != NULL) {
 			puts(resolved_path);
diff -urpN busybox-1.27.2/coreutils/rm.c busybox-1.28.0/coreutils/rm.c
--- busybox-1.27.2/coreutils/rm.c	2017-08-04 02:19:02.000000000 +0200
+++ busybox-1.28.0/coreutils/rm.c	2017-08-17 13:50:45.000000000 +0200
@@ -11,10 +11,10 @@
  * Size reduction.
  */
 //config:config RM
-//config:	bool "rm"
+//config:	bool "rm (4.9 kb)"
 //config:	default y
 //config:	help
-//config:	  rm is used to remove files or directories.
+//config:	rm is used to remove files or directories.
 
 //applet:IF_RM(APPLET_NOEXEC(rm, rm, BB_DIR_BIN, BB_SUID_DROP, rm))
 /* was NOFORK, but then "rm -i FILE" can't be ^C'ed if run by hush */
@@ -46,8 +46,7 @@ int rm_main(int argc UNUSED_PARAM, char
 	int flags = 0;
 	unsigned opt;
 
-	opt_complementary = "f-i:i-f";
-	opt = getopt32(argv, "fiRrv");
+	opt = getopt32(argv, "^" "fiRrv" "\0" "f-i:i-f");
 	argv += optind;
 	if (opt & 1)
 		flags |= FILEUTILS_FORCE;
diff -urpN busybox-1.27.2/coreutils/rmdir.c busybox-1.28.0/coreutils/rmdir.c
--- busybox-1.27.2/coreutils/rmdir.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/rmdir.c	2017-08-17 13:50:45.000000000 +0200
@@ -7,18 +7,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config RMDIR
-//config:	bool "rmdir"
+//config:	bool "rmdir (3.4 kb)"
 //config:	default y
 //config:	help
-//config:	  rmdir is used to remove empty directories.
-//config:
-//config:config FEATURE_RMDIR_LONG_OPTIONS
-//config:	bool "Enable long options"
-//config:	default y
-//config:	depends on RMDIR && LONG_OPTS
-//config:	help
-//config:	  Support long options for the rmdir applet, including
-//config:	  --ignore-fail-on-non-empty for compatibility with GNU rmdir.
+//config:	rmdir is used to remove empty directories.
 
 //applet:IF_RMDIR(APPLET_NOFORK(rmdir, rmdir, BB_DIR_BIN, BB_SUID_DROP, rmdir))
 
@@ -31,12 +23,9 @@
 //usage:       "[OPTIONS] DIRECTORY..."
 //usage:#define rmdir_full_usage "\n\n"
 //usage:       "Remove DIRECTORY if it is empty\n"
-//usage:	IF_FEATURE_RMDIR_LONG_OPTIONS(
-//usage:     "\n	-p|--parents	Include parents"
-//usage:     "\n	--ignore-fail-on-non-empty"
-//usage:	)
-//usage:	IF_NOT_FEATURE_RMDIR_LONG_OPTIONS(
 //usage:     "\n	-p	Include parents"
+//usage:	IF_LONG_OPTS(
+//usage:     "\n	--ignore-fail-on-non-empty"
 //usage:	)
 //usage:
 //usage:#define rmdir_example_usage
@@ -49,7 +38,7 @@
 
 #define PARENTS          (1 << 0)
 #define VERBOSE          ((1 << 1) * ENABLE_FEATURE_VERBOSE)
-#define IGNORE_NON_EMPTY (1 << 2)
+#define IGNORE_NON_EMPTY ((1 << 2) * ENABLE_LONG_OPTS)
 
 int rmdir_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int rmdir_main(int argc UNUSED_PARAM, char **argv)
@@ -58,8 +47,7 @@ int rmdir_main(int argc UNUSED_PARAM, ch
 	int flags;
 	char *path;
 
-#if ENABLE_FEATURE_RMDIR_LONG_OPTIONS
-	static const char rmdir_longopts[] ALIGN1 =
+	flags = getopt32long(argv, "pv",
 		"parents\0"                  No_argument "p"
 		/* Debian etch: many packages fail to be purged or installed
 		 * because they desperately want this option: */
@@ -67,10 +55,7 @@ int rmdir_main(int argc UNUSED_PARAM, ch
 		IF_FEATURE_VERBOSE(
 		"verbose\0"                  No_argument "v"
 		)
-		;
-	applet_long_options = rmdir_longopts;
-#endif
-	flags = getopt32(argv, "pv");
+	);
 	argv += optind;
 
 	if (!*argv) {
@@ -86,7 +71,7 @@ int rmdir_main(int argc UNUSED_PARAM, ch
 			}
 
 			if (rmdir(path) < 0) {
-#if ENABLE_FEATURE_RMDIR_LONG_OPTIONS
+#if ENABLE_LONG_OPTS
 				if ((flags & IGNORE_NON_EMPTY) && errno == ENOTEMPTY)
 					break;
 #endif
diff -urpN busybox-1.27.2/coreutils/seq.c busybox-1.28.0/coreutils/seq.c
--- busybox-1.27.2/coreutils/seq.c	2017-08-04 02:19:02.000000000 +0200
+++ busybox-1.28.0/coreutils/seq.c	2017-08-03 17:53:10.000000000 +0200
@@ -7,10 +7,10 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config SEQ
-//config:	bool "seq"
+//config:	bool "seq (3.6 kb)"
 //config:	default y
 //config:	help
-//config:	  print a sequence of numbers
+//config:	print a sequence of numbers
 
 //applet:IF_SEQ(APPLET_NOEXEC(seq, seq, BB_DIR_USR_BIN, BB_SUID_DROP, seq))
 /* was NOFORK, but then "seq 1 999999999" can't be ^C'ed if run by hush */
diff -urpN busybox-1.27.2/coreutils/shred.c busybox-1.28.0/coreutils/shred.c
--- busybox-1.27.2/coreutils/shred.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/shred.c	2017-07-24 18:57:09.000000000 +0200
@@ -5,10 +5,10 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config SHRED
-//config:	bool "shred"
+//config:	bool "shred (5 kb)"
 //config:	default y
 //config:	help
-//config:	  Overwrite a file to hide its contents, and optionally delete it
+//config:	Overwrite a file to hide its contents, and optionally delete it
 
 //applet:IF_SHRED(APPLET(shred, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/coreutils/shuf.c busybox-1.28.0/coreutils/shuf.c
--- busybox-1.27.2/coreutils/shuf.c	2017-08-04 02:17:42.000000000 +0200
+++ busybox-1.28.0/coreutils/shuf.c	2017-10-05 11:53:08.000000000 +0200
@@ -6,16 +6,16 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config SHUF
-//config:	bool "shuf"
+//config:	bool "shuf (5.4 kb)"
 //config:	default y
 //config:	help
-//config:	  Generate random permutations
+//config:	Generate random permutations
 
-//kbuild:lib-$(CONFIG_SHUF) += shuf.o
 //applet:IF_SHUF(APPLET_NOEXEC(shuf, shuf, BB_DIR_USR_BIN, BB_SUID_DROP, shuf))
 
+//kbuild:lib-$(CONFIG_SHUF) += shuf.o
+
 //usage:#define shuf_trivial_usage
 //usage:       "[-e|-i L-H] [-n NUM] [-o FILE] [-z] [FILE|ARG...]"
 //usage:#define shuf_full_usage "\n\n"
@@ -70,8 +70,11 @@ int shuf_main(int argc, char **argv)
 	unsigned numlines;
 	char eol;
 
-	opt_complementary = "e--i:i--e"; /* mutually exclusive */
-	opts = getopt32(argv, OPT_STR, &opt_i_str, &opt_n_str, &opt_o_str);
+	opts = getopt32(argv, "^"
+			OPT_STR
+			"\0" "e--i:i--e"/* mutually exclusive */,
+			&opt_i_str, &opt_n_str, &opt_o_str
+	);
 
 	argc -= optind;
 	argv += optind;
diff -urpN busybox-1.27.2/coreutils/sleep.c busybox-1.28.0/coreutils/sleep.c
--- busybox-1.27.2/coreutils/sleep.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/sleep.c	2017-07-24 18:57:09.000000000 +0200
@@ -13,32 +13,32 @@
  * time suffixes for seconds, minutes, hours, and days.
  */
 //config:config SLEEP
-//config:	bool "sleep"
+//config:	bool "sleep (1.7 kb)"
 //config:	default y
 //config:	help
-//config:	  sleep is used to pause for a specified number of seconds.
-//config:	  It comes in 3 versions:
-//config:	  - small: takes one integer parameter
-//config:	  - fancy: takes multiple integer arguments with suffixes:
-//config:	    sleep 1d 2h 3m 15s
-//config:	  - fancy with fractional numbers:
-//config:	    sleep 2.3s 4.5h sleeps for 16202.3 seconds
-//config:	  Last one is "the most compatible" with coreutils sleep,
-//config:	  but it adds around 1k of code.
+//config:	sleep is used to pause for a specified number of seconds.
+//config:	It comes in 3 versions:
+//config:	- small: takes one integer parameter
+//config:	- fancy: takes multiple integer arguments with suffixes:
+//config:		sleep 1d 2h 3m 15s
+//config:	- fancy with fractional numbers:
+//config:		sleep 2.3s 4.5h sleeps for 16202.3 seconds
+//config:	Last one is "the most compatible" with coreutils sleep,
+//config:	but it adds around 1k of code.
 //config:
 //config:config FEATURE_FANCY_SLEEP
 //config:	bool "Enable multiple arguments and s/m/h/d suffixes"
 //config:	default y
 //config:	depends on SLEEP
 //config:	help
-//config:	  Allow sleep to pause for specified minutes, hours, and days.
+//config:	Allow sleep to pause for specified minutes, hours, and days.
 //config:
 //config:config FEATURE_FLOAT_SLEEP
 //config:	bool "Enable fractional arguments"
 //config:	default y
 //config:	depends on FEATURE_FANCY_SLEEP
 //config:	help
-//config:	  Allow for fractional numeric parameters.
+//config:	Allow for fractional numeric parameters.
 
 /* Do not make this applet NOFORK. It breaks ^C-ing of pauses in shells */
 //applet:IF_SLEEP(APPLET(sleep, BB_DIR_BIN, BB_SUID_DROP))
diff -urpN busybox-1.27.2/coreutils/sort.c busybox-1.28.0/coreutils/sort.c
--- busybox-1.27.2/coreutils/sort.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/sort.c	2017-08-17 13:50:45.000000000 +0200
@@ -12,22 +12,22 @@
  * http://www.opengroup.org/onlinepubs/007904975/utilities/sort.html
  */
 //config:config SORT
-//config:	bool "sort"
+//config:	bool "sort (7.4 kb)"
 //config:	default y
 //config:	help
-//config:	  sort is used to sort lines of text in specified files.
+//config:	sort is used to sort lines of text in specified files.
 //config:
 //config:config FEATURE_SORT_BIG
 //config:	bool "Full SuSv3 compliant sort (support -ktcsbdfiozgM)"
 //config:	default y
 //config:	depends on SORT
 //config:	help
-//config:	  Without this, sort only supports -r, -u, and an integer version
-//config:	  of -n. Selecting this adds sort keys, floating point support, and
-//config:	  more. This adds a little over 3k to a nonstatic build on x86.
+//config:	Without this, sort only supports -r, -u, and an integer version
+//config:	of -n. Selecting this adds sort keys, floating point support, and
+//config:	more. This adds a little over 3k to a nonstatic build on x86.
 //config:
-//config:	  The SuSv3 sort standard is available at:
-//config:	  http://www.opengroup.org/onlinepubs/007904975/utilities/sort.html
+//config:	The SuSv3 sort standard is available at:
+//config:	http://www.opengroup.org/onlinepubs/007904975/utilities/sort.html
 
 //applet:IF_SORT(APPLET_NOEXEC(sort, sort, BB_DIR_USR_BIN, BB_SUID_DROP, sort))
 
@@ -94,7 +94,7 @@
 */
 
 /* These are sort types */
-static const char OPT_STR[] ALIGN1 = "ngMucszbrdfimS:T:o:k:*t:";
+#define OPT_STR "ngMucszbrdfimS:T:o:k:*t:"
 enum {
 	FLAG_n  = 1,            /* Numeric sort */
 	FLAG_g  = 2,            /* Sort using strtod() */
@@ -378,9 +378,11 @@ int sort_main(int argc UNUSED_PARAM, cha
 	xfunc_error_retval = 2;
 
 	/* Parse command line options */
-	/* -o and -t can be given at most once */
-	opt_complementary = "o--o:t--t"; /* -t, -o: at most one of each */
-	opts = getopt32(argv, OPT_STR, &str_ignored, &str_ignored, &str_o, &lst_k, &str_t);
+	opts = getopt32(argv, "^"
+			OPT_STR
+			"\0" "o--o:t--t"/*-t, -o: at most one of each*/,
+			&str_ignored, &str_ignored, &str_o, &lst_k, &str_t
+	);
 	/* global b strips leading and trailing spaces */
 	if (opts & FLAG_b)
 		option_mask32 |= FLAG_bb;
diff -urpN busybox-1.27.2/coreutils/split.c busybox-1.28.0/coreutils/split.c
--- busybox-1.27.2/coreutils/split.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/split.c	2017-08-17 13:50:45.000000000 +0200
@@ -6,19 +6,19 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config SPLIT
-//config:	bool "split"
+//config:	bool "split (5.4 kb)"
 //config:	default y
 //config:	help
-//config:	  Split a file into pieces.
+//config:	Split a file into pieces.
 //config:
 //config:config FEATURE_SPLIT_FANCY
 //config:	bool "Fancy extensions"
 //config:	default y
 //config:	depends on SPLIT
 //config:	help
-//config:	  Add support for features not required by SUSv3.
-//config:	  Supports additional suffixes 'b' for 512 bytes,
-//config:	  'g' for 1GiB for the -b option.
+//config:	Add support for features not required by SUSv3.
+//config:	Supports additional suffixes 'b' for 512 bytes,
+//config:	'g' for 1GiB for the -b option.
 
 //applet:IF_SPLIT(APPLET(split, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -100,8 +100,11 @@ int split_main(int argc UNUSED_PARAM, ch
 
 	setup_common_bufsiz();
 
-	opt_complementary = "?2"; /* max 2 args; -a N */
-	opt = getopt32(argv, "l:b:a:+", &count_p, &count_p, &suffix_len);
+	opt = getopt32(argv, "^"
+			"l:b:a:+" /* -a N */
+			"\0" "?2"/*max 2 args*/,
+			&count_p, &count_p, &suffix_len
+	);
 
 	if (opt & SPLIT_OPT_l)
 		cnt = XATOOFF(count_p);
diff -urpN busybox-1.27.2/coreutils/stat.c busybox-1.28.0/coreutils/stat.c
--- busybox-1.27.2/coreutils/stat.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/stat.c	2018-01-01 20:40:41.000000000 +0100
@@ -13,19 +13,19 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config STAT
-//config:	bool "stat"
+//config:	bool "stat (10 kb)"
 //config:	default y
 //config:	help
-//config:	  display file or filesystem status.
+//config:	display file or filesystem status.
 //config:
 //config:config FEATURE_STAT_FORMAT
 //config:	bool "Enable custom formats (-c)"
 //config:	default y
 //config:	depends on STAT
 //config:	help
-//config:	  Without this, stat will not support the '-c format' option where
-//config:	  users can pass a custom format string for output. This adds about
-//config:	  7k to a nonstatic build on amd64.
+//config:	Without this, stat will not support the '-c format' option where
+//config:	users can pass a custom format string for output. This adds about
+//config:	7k to a nonstatic build on amd64.
 //config:
 //config:config FEATURE_STAT_FILESYSTEM
 //config:	bool "Enable display of filesystem status (-f)"
@@ -33,10 +33,10 @@
 //config:	depends on STAT
 //config:	select PLATFORM_LINUX # statfs()
 //config:	help
-//config:	  Without this, stat will not support the '-f' option to display
-//config:	  information about filesystem status.
+//config:	Without this, stat will not support the '-f' option to display
+//config:	information about filesystem status.
 
-//applet:IF_STAT(APPLET(stat, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_STAT(APPLET_NOEXEC(stat, stat, BB_DIR_BIN, BB_SUID_DROP, stat))
 
 //kbuild:lib-$(CONFIG_STAT) += stat.o
 
@@ -759,14 +759,19 @@ int stat_main(int argc UNUSED_PARAM, cha
 	IF_FEATURE_STAT_FORMAT(char *format = NULL;)
 	int i;
 	int ok;
-	unsigned opts;
 	statfunc_ptr statfunc = do_stat;
+#if ENABLE_FEATURE_STAT_FILESYSTEM || ENABLE_SELINUX
+	unsigned opts;
 
-	opt_complementary = "-1"; /* min one arg */
-	opts = getopt32(argv, "tL"
+	opts =
+#endif
+	getopt32(argv, "^"
+		"tL"
 		IF_FEATURE_STAT_FILESYSTEM("f")
 		IF_SELINUX("Z")
-		IF_FEATURE_STAT_FORMAT("c:", &format)
+		IF_FEATURE_STAT_FORMAT("c:")
+		"\0" "-1" /* min one arg */
+		IF_FEATURE_STAT_FORMAT(,&format)
 	);
 #if ENABLE_FEATURE_STAT_FILESYSTEM
 	if (opts & OPT_FILESYS) /* -f */
diff -urpN busybox-1.27.2/coreutils/stty.c busybox-1.28.0/coreutils/stty.c
--- busybox-1.27.2/coreutils/stty.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/stty.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,31 +1,32 @@
 /* vi: set sw=4 ts=4: */
-/* stty -- change and print terminal line settings
-   Copyright (C) 1990-1999 Free Software Foundation, Inc.
-
-   Licensed under GPLv2 or later, see file LICENSE in this source tree.
-*/
+/*
+ * stty -- change and print terminal line settings
+ * Copyright (C) 1990-1999 Free Software Foundation, Inc.
+ *
+ * Licensed under GPLv2 or later, see file LICENSE in this source tree.
+ */
 /* Usage: stty [-ag] [-F device] [setting...]
-
-   Options:
-   -a Write all current settings to stdout in human-readable form.
-   -g Write all current settings to stdout in stty-readable form.
-   -F Open and use the specified device instead of stdin
-
-   If no args are given, write to stdout the baud rate and settings that
-   have been changed from their defaults.  Mode reading and changes
-   are done on the specified device, or stdin if none was specified.
-
-   David MacKenzie <djm@gnu.ai.mit.edu>
-
-   Special for busybox ported by Vladimir Oleynik <dzo@simtreas.ru> 2001
-*/
+ *
+ * Options:
+ * -a Write all current settings to stdout in human-readable form.
+ * -g Write all current settings to stdout in stty-readable form.
+ * -F Open and use the specified device instead of stdin
+ *
+ * If no args are given, write to stdout the baud rate and settings that
+ * have been changed from their defaults.  Mode reading and changes
+ * are done on the specified device, or stdin if none was specified.
+ *
+ * David MacKenzie <djm@gnu.ai.mit.edu>
+ *
+ * Special for busybox ported by Vladimir Oleynik <dzo@simtreas.ru> 2001
+ */
 //config:config STTY
-//config:	bool "stty"
+//config:	bool "stty (8.6 kb)"
 //config:	default y
 //config:	help
-//config:	  stty is used to change and print terminal line settings.
+//config:	stty is used to change and print terminal line settings.
 
-//applet:IF_STTY(APPLET(stty, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_STTY(APPLET_NOEXEC(stty, stty, BB_DIR_BIN, BB_SUID_DROP, stty))
 
 //kbuild:lib-$(CONFIG_STTY) += stty.o
 
@@ -148,6 +149,9 @@
 #ifndef CRDLY
 # define CRDLY 0
 #endif
+#ifndef CMSPAR
+# define CMSPAR 0
+#endif
 #ifndef CRTSCTS
 # define CRTSCTS 0
 #endif
@@ -352,6 +356,9 @@ static const char mode_name[] ALIGN1 =
 #endif
 	MI_ENTRY("parenb",   control,     REV,               PARENB,     0 )
 	MI_ENTRY("parodd",   control,     REV,               PARODD,     0 )
+#if CMSPAR
+	MI_ENTRY("cmspar",   control,     REV,               CMSPAR,     0 )
+#endif
 	MI_ENTRY("cs5",      control,     0,                 CS5,     CSIZE)
 	MI_ENTRY("cs6",      control,     0,                 CS6,     CSIZE)
 	MI_ENTRY("cs7",      control,     0,                 CS7,     CSIZE)
@@ -477,6 +484,10 @@ static const char mode_name[] ALIGN1 =
 	MI_ENTRY("echoke",   local,       SANE_SET   | REV,  ECHOKE,     0 )
 	MI_ENTRY("crtkill",  local,       OMIT       | REV,  ECHOKE,     0 )
 #endif
+	MI_ENTRY("flusho",   local,       SANE_UNSET | REV,  FLUSHO,     0 )
+#ifdef EXTPROC
+	MI_ENTRY("extproc",  local,       SANE_UNSET | REV,  EXTPROC,    0 )
+#endif
 	;
 
 #undef MI_ENTRY
@@ -509,6 +520,9 @@ static const struct mode_info mode_info[
 #endif
 	MI_ENTRY("parenb",   control,     REV,               PARENB,     0 )
 	MI_ENTRY("parodd",   control,     REV,               PARODD,     0 )
+#if CMSPAR
+	MI_ENTRY("cmspar",   control,     REV,               CMSPAR,     0 )
+#endif
 	MI_ENTRY("cs5",      control,     0,                 CS5,     CSIZE)
 	MI_ENTRY("cs6",      control,     0,                 CS6,     CSIZE)
 	MI_ENTRY("cs7",      control,     0,                 CS7,     CSIZE)
@@ -634,6 +648,10 @@ static const struct mode_info mode_info[
 	MI_ENTRY("echoke",   local,       SANE_SET   | REV,  ECHOKE,     0 )
 	MI_ENTRY("crtkill",  local,       OMIT       | REV,  ECHOKE,     0 )
 #endif
+	MI_ENTRY("flusho",   local,       SANE_UNSET | REV,  FLUSHO,     0 )
+#ifdef EXTPROC
+	MI_ENTRY("extproc",  local,       SANE_UNSET | REV,  EXTPROC,    0 )
+#endif
 };
 
 enum {
@@ -782,12 +800,13 @@ struct globals {
 	unsigned max_col;
 	/* Current position, to know when to wrap */
 	unsigned current_col;
-	char buf[10];
 } FIX_ALIASING;
 #define G (*(struct globals*)bb_common_bufsiz1)
 #define INIT_G() do { \
+	setup_common_bufsiz(); \
 	G.device_name = bb_msg_standard_input; \
 	G.max_col = 80; \
+	G.current_col = 0; /* we are noexec, must clear */ \
 } while (0)
 
 static void set_speed_or_die(enum speed_setting type, const char *arg,
@@ -835,10 +854,11 @@ static void wrapf(const char *message, .
 		G.current_col++;
 		if (buf[0] != '\n') {
 			if (G.current_col + buflen >= G.max_col) {
-				bb_putchar('\n');
 				G.current_col = 0;
-			} else
+				bb_putchar('\n');
+			} else {
 				bb_putchar(' ');
+			}
 		}
 	}
 	fputs(buf, stdout);
@@ -1018,6 +1038,8 @@ static void do_display(const struct term
 
 	for (i = 0; i != CIDX_min; ++i) {
 		char ch;
+		char buf10[10];
+
 		/* If swtch is the same as susp, don't print both */
 #if VSWTCH == VSUSP
 		if (i == CIDX_swtch)
@@ -1033,10 +1055,10 @@ static void do_display(const struct term
 #endif
 		ch = mode->c_cc[control_info[i].offset];
 		if (ch == _POSIX_VDISABLE)
-			strcpy(G.buf, "<undef>");
+			strcpy(buf10, "<undef>");
 		else
-			visible(ch, G.buf, 0);
-		wrapf("%s = %s;", nth_string(control_name, i), G.buf);
+			visible(ch, buf10, 0);
+		wrapf("%s = %s;", nth_string(control_name, i), buf10);
 	}
 #if VEOF == VMIN
 	if ((mode->c_lflag & ICANON) == 0)
diff -urpN busybox-1.27.2/coreutils/sum.c busybox-1.28.0/coreutils/sum.c
--- busybox-1.27.2/coreutils/sum.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/sum.c	2017-07-24 18:57:09.000000000 +0200
@@ -13,10 +13,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config SUM
-//config:	bool "sum"
+//config:	bool "sum (4.3 kb)"
 //config:	default y
 //config:	help
-//config:	  checksum and count the blocks in a file
+//config:	checksum and count the blocks in a file
 
 //applet:IF_SUM(APPLET(sum, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/coreutils/sync.c busybox-1.28.0/coreutils/sync.c
--- busybox-1.27.2/coreutils/sync.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/sync.c	2017-08-17 13:50:45.000000000 +0200
@@ -8,17 +8,17 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config SYNC
-//config:	bool "sync"
+//config:	bool "sync (769 bytes)"
 //config:	default y
 //config:	help
-//config:	  sync is used to flush filesystem buffers.
+//config:	sync is used to flush filesystem buffers.
 //config:config FEATURE_SYNC_FANCY
 //config:	bool "Enable -d and -f flags (requires syncfs(2) in libc)"
 //config:	default y
 //config:	depends on SYNC
 //config:	help
-//config:	  sync -d FILE... executes fdatasync() on each FILE.
-//config:	  sync -f FILE... executes syncfs() on each FILE.
+//config:	sync -d FILE... executes fdatasync() on each FILE.
+//config:	sync -f FILE... executes syncfs() on each FILE.
 
 //applet:IF_SYNC(APPLET_NOFORK(sync, sync, BB_DIR_BIN, BB_SUID_DROP, sync))
 
@@ -59,8 +59,7 @@ int sync_main(int argc UNUSED_PARAM, cha
 		OPT_SYNCFS   = (1 << 1),
 	};
 
-	opt_complementary = "d--f:f--d";
-	opts = getopt32(argv, "df");
+	opts = getopt32(argv, "^" "df" "\0" "d--f:f--d");
 	argv += optind;
 
 	/* Handle the no-argument case. */
diff -urpN busybox-1.27.2/coreutils/tac.c busybox-1.28.0/coreutils/tac.c
--- busybox-1.27.2/coreutils/tac.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/tac.c	2017-07-24 18:57:09.000000000 +0200
@@ -13,10 +13,10 @@
  * http://www.uclibc.org/lists/busybox/2003-July/008813.html
  */
 //config:config TAC
-//config:	bool "tac"
+//config:	bool "tac (4.1 kb)"
 //config:	default y
 //config:	help
-//config:	  tac is used to concatenate and print files in reverse.
+//config:	tac is used to concatenate and print files in reverse.
 
 //applet:IF_TAC(APPLET_NOEXEC(tac, tac, BB_DIR_USR_BIN, BB_SUID_DROP, tac))
 
diff -urpN busybox-1.27.2/coreutils/tail.c busybox-1.28.0/coreutils/tail.c
--- busybox-1.27.2/coreutils/tail.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/tail.c	2017-08-17 13:50:45.000000000 +0200
@@ -19,23 +19,23 @@
  * 7) lseek attempted when count==0 even if arg was +0 (from top)
  */
 //config:config TAIL
-//config:	bool "tail"
+//config:	bool "tail (7.1 kb)"
 //config:	default y
 //config:	help
-//config:	  tail is used to print the last specified number of lines
-//config:	  from files.
+//config:	tail is used to print the last specified number of lines
+//config:	from files.
 //config:
 //config:config FEATURE_FANCY_TAIL
 //config:	bool "Enable -q, -s, -v, and -F options"
 //config:	default y
 //config:	depends on TAIL
 //config:	help
-//config:	  These options are provided by GNU tail, but
-//config:	  are not specific in the SUSv3 standard:
-//config:	    -q      Never output headers giving file names
-//config:	    -s SEC  Wait SEC seconds between reads with -f
-//config:	    -v      Always output headers giving file names
-//config:	    -F      Same as -f, but keep retrying
+//config:	These options are provided by GNU tail, but
+//config:	are not specified in the SUSv3 standard:
+//config:		-q      Never output headers giving file names
+//config:		-s SEC  Wait SEC seconds between reads with -f
+//config:		-v      Always output headers giving file names
+//config:		-F      Same as -f, but keep retrying
 
 //applet:IF_TAIL(APPLET(tail, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -140,9 +140,11 @@ int tail_main(int argc, char **argv)
 #endif
 
 	/* -s NUM, -F imlies -f */
-	IF_FEATURE_FANCY_TAIL(opt_complementary = "Ff";)
-	opt = getopt32(argv, "fc:n:" IF_FEATURE_FANCY_TAIL("qs:+vF"),
-			&str_c, &str_n IF_FEATURE_FANCY_TAIL(,&sleep_period));
+	opt = getopt32(argv, IF_FEATURE_FANCY_TAIL("^")
+			"fc:n:"IF_FEATURE_FANCY_TAIL("qs:+vF")
+			IF_FEATURE_FANCY_TAIL("\0" "Ff"),
+			&str_c, &str_n IF_FEATURE_FANCY_TAIL(,&sleep_period)
+	);
 #define FOLLOW (opt & 0x1)
 #define COUNT_BYTES (opt & 0x2)
 	//if (opt & 0x1) // -f
diff -urpN busybox-1.27.2/coreutils/tee.c busybox-1.28.0/coreutils/tee.c
--- busybox-1.27.2/coreutils/tee.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/tee.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,18 +7,18 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config TEE
-//config:	bool "tee"
+//config:	bool "tee (4.3 kb)"
 //config:	default y
 //config:	help
-//config:	  tee is used to read from standard input and write
-//config:	  to standard output and files.
+//config:	tee is used to read from standard input and write
+//config:	to standard output and files.
 //config:
 //config:config FEATURE_TEE_USE_BLOCK_IO
 //config:	bool "Enable block I/O (larger/faster) instead of byte I/O"
 //config:	default y
 //config:	depends on TEE
 //config:	help
-//config:	  Enable this option for a faster tee, at expense of size.
+//config:	Enable this option for a faster tee, at expense of size.
 
 //applet:IF_TEE(APPLET(tee, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/coreutils/test.c busybox-1.28.0/coreutils/test.c
--- busybox-1.27.2/coreutils/test.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/coreutils/test.c	2017-08-03 17:53:10.000000000 +0200
@@ -20,31 +20,31 @@
  *     "This program is in the Public Domain."
  */
 //config:config TEST
-//config:	bool "test"
+//config:	bool "test (3.6 kb)"
 //config:	default y
 //config:	help
-//config:	  test is used to check file types and compare values,
-//config:	  returning an appropriate exit code. The bash shell
-//config:	  has test built in, ash can build it in optionally.
+//config:	test is used to check file types and compare values,
+//config:	returning an appropriate exit code. The bash shell
+//config:	has test built in, ash can build it in optionally.
 //config:
 //config:config TEST1
 //config:	bool "test as ["
 //config:	default y
 //config:	help
-//config:	  Provide test command in the "[ EXPR ]" form
+//config:	Provide test command in the "[ EXPR ]" form
 //config:
 //config:config TEST2
 //config:	bool "test as [["
 //config:	default y
 //config:	help
-//config:	  Provide test command in the "[[ EXPR ]]" form
+//config:	Provide test command in the "[[ EXPR ]]" form
 //config:
 //config:config FEATURE_TEST_64
 //config:	bool "Extend test to 64 bit"
 //config:	default y
 //config:	depends on TEST || TEST1 || TEST2 || ASH_TEST || HUSH_TEST
 //config:	help
-//config:	  Enable 64-bit support in test.
+//config:	Enable 64-bit support in test.
 
 //applet:IF_TEST(APPLET_NOFORK(test, test, BB_DIR_USR_BIN, BB_SUID_DROP, test))
 //applet:IF_TEST1(APPLET_NOFORK([,   test, BB_DIR_USR_BIN, BB_SUID_DROP, test))
@@ -563,26 +563,11 @@ static int binop(void)
 	/*return 1; - NOTREACHED */
 }
 
-
 static void initialize_group_array(void)
 {
-	int n;
-
-	/* getgroups may be expensive, try to use it only once */
-	ngroups = 32;
-	do {
-		/* FIXME: ash tries so hard to not die on OOM,
-		 * and we spoil it with just one xrealloc here */
-		/* We realloc, because test_main can be entered repeatedly by shell.
-		 * Testcase (ash): 'while true; do test -x some_file; done'
-		 * and watch top. (some_file must have owner != you) */
-		n = ngroups;
-		group_array = xrealloc(group_array, n * sizeof(gid_t));
-		ngroups = getgroups(n, group_array);
-	} while (ngroups > n);
+	group_array = bb_getgroups(&ngroups, NULL);
 }
 
-
 /* Return non-zero if GID is one that we have in our groups list. */
 //XXX: FIXME: duplicate of existing libbb function?
 // see toplevel TODO file:
@@ -610,14 +595,10 @@ static int is_a_group_member(gid_t gid)
 /* Do the same thing access(2) does, but use the effective uid and gid,
    and don't make the mistake of telling root that any file is
    executable. */
-static int test_eaccess(char *path, int mode)
+static int test_eaccess(struct stat *st, int mode)
 {
-	struct stat st;
 	unsigned int euid = geteuid();
 
-	if (stat(path, &st) < 0)
-		return -1;
-
 	if (euid == 0) {
 		/* Root can read or write any file. */
 		if (mode != X_OK)
@@ -625,16 +606,16 @@ static int test_eaccess(char *path, int
 
 		/* Root can execute any file that has any one of the execute
 		 * bits set. */
-		if (st.st_mode & (S_IXUSR | S_IXGRP | S_IXOTH))
+		if (st->st_mode & (S_IXUSR | S_IXGRP | S_IXOTH))
 			return 0;
 	}
 
-	if (st.st_uid == euid)  /* owner */
+	if (st->st_uid == euid)  /* owner */
 		mode <<= 6;
-	else if (is_a_group_member(st.st_gid))
+	else if (is_a_group_member(st->st_gid))
 		mode <<= 3;
 
-	if (st.st_mode & mode)
+	if (st->st_mode & mode)
 		return 0;
 
 	return -1;
@@ -667,7 +648,7 @@ static int filstat(char *nm, enum token
 			i = W_OK;
 		if (mode == FILEX)
 			i = X_OK;
-		return test_eaccess(nm, i) == 0;
+		return test_eaccess(&s, i) == 0;
 	}
 	if (is_file_type(mode)) {
 		if (mode == FILREG)
@@ -898,18 +879,48 @@ int test_main(int argc, char **argv)
 			res = (argv[0][0] == '\0');
 			goto ret_special;
 		}
-		if (argv[2] && !argv[3]) {
-			check_operator(argv[1]);
-			if (last_operator->op_type == BINOP) {
-				/* "test [!] arg1 <binary_op> arg2" */
-				args = argv;
-				res = (binop() == 0);
+		if (argv[2]) {
+			if (!argv[3]) {
+				/*
+				 * http://pubs.opengroup.org/onlinepubs/009695399/utilities/test.html
+				 * """ 3 arguments:
+				 * If $2 is a binary primary, perform the binary test of $1 and $3.
+				 * """
+				 */
+				check_operator(argv[1]);
+				if (last_operator->op_type == BINOP) {
+					/* "test [!] arg1 <binary_op> arg2" */
+					args = argv;
+					res = (binop() == 0);
  ret_special:
-				/* If there was leading "!" op... */
-				res ^= negate;
-				goto ret;
+					/* If there was leading "!" op... */
+					res ^= negate;
+					goto ret;
+				}
+				/* """If $1 is '(' and $3 is ')', perform the unary test of $2."""
+				 * Looks like this works without additional coding.
+				 */
+				goto check_negate;
+			}
+			/* argv[3] exists (at least 4 args), is it exactly 4 args? */
+			if (!argv[4]) {
+				/*
+				 * """ 4 arguments:
+				 * If $1 is '!', negate the three-argument test of $2, $3, and $4.
+				 * If $1 is '(' and $4 is ')', perform the two-argument test of $2 and $3.
+				 * """
+				 * Example why code below is necessary: test '(' ! -e ')'
+				 */
+				if (LONE_CHAR(argv[0], '(')
+				 && LONE_CHAR(argv[3], ')')
+				) {
+					/* "test [!] ( x y )" */
+					argv[3] = NULL;
+					argv++;
+				}
 			}
 		}
+ check_negate:
 		if (LONE_CHAR(argv[0], '!')) {
 			argv++;
 			negate ^= 1;
diff -urpN busybox-1.27.2/coreutils/timeout.c busybox-1.28.0/coreutils/timeout.c
--- busybox-1.27.2/coreutils/timeout.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/timeout.c	2017-07-24 18:57:09.000000000 +0200
@@ -28,11 +28,11 @@
  * rewrite  14-11-2008 vda
  */
 //config:config TIMEOUT
-//config:	bool "timeout"
+//config:	bool "timeout (5.5 kb)"
 //config:	default y
 //config:	help
-//config:	  Runs a program and watches it. If it does not terminate in
-//config:	  specified number of seconds, it is sent a signal.
+//config:	Runs a program and watches it. If it does not terminate in
+//config:	specified number of seconds, it is sent a signal.
 
 //applet:IF_TIMEOUT(APPLET(timeout, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/coreutils/touch.c busybox-1.28.0/coreutils/touch.c
--- busybox-1.27.2/coreutils/touch.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/touch.c	2017-08-17 13:50:45.000000000 +0200
@@ -13,26 +13,26 @@
  * Also, exiting on a failure was a bug.  All args should be processed.
  */
 //config:config TOUCH
-//config:	bool "touch"
+//config:	bool "touch (5.8 kb)"
 //config:	default y
 //config:	help
-//config:	  touch is used to create or change the access and/or
-//config:	  modification timestamp of specified files.
+//config:	touch is used to create or change the access and/or
+//config:	modification timestamp of specified files.
 //config:
 //config:config FEATURE_TOUCH_NODEREF
 //config:	bool "Add support for -h"
 //config:	default y
 //config:	depends on TOUCH
 //config:	help
-//config:	  Enable touch to have the -h option.
-//config:	  This requires libc support for lutimes() function.
+//config:	Enable touch to have the -h option.
+//config:	This requires libc support for lutimes() function.
 //config:
 //config:config FEATURE_TOUCH_SUSV3
 //config:	bool "Add support for SUSV3 features (-d -t -r)"
 //config:	default y
 //config:	depends on TOUCH
 //config:	help
-//config:	  Enable touch to use a reference file or a given date/time argument.
+//config:	Enable touch to use a reference file or a given date/time argument.
 
 //applet:IF_TOUCH(APPLET_NOFORK(touch, touch, BB_DIR_BIN, BB_SUID_DROP, touch))
 
@@ -103,6 +103,11 @@ int touch_main(int argc UNUSED_PARAM, ch
 		"date\0"              Required_argument "d"
 		IF_FEATURE_TOUCH_NODEREF("no-dereference\0" No_argument "h")
 	;
+#  define GETOPT32 getopt32long
+#  define LONGOPTS ,touch_longopts
+# else
+#  define GETOPT32 getopt32
+#  define LONGOPTS
 # endif
 	char *reference_file = NULL;
 	char *date_str = NULL;
@@ -112,17 +117,17 @@ int touch_main(int argc UNUSED_PARAM, ch
 # define reference_file NULL
 # define date_str       NULL
 # define timebuf        ((struct timeval*)NULL)
+# define GETOPT32 getopt32
+# define LONGOPTS
 #endif
 
-#if ENABLE_FEATURE_TOUCH_SUSV3 && ENABLE_LONG_OPTS
-	applet_long_options = touch_longopts;
-#endif
 	/* -d and -t both set time. In coreutils,
 	 * accepted data format differs a bit between -d and -t.
 	 * We accept the same formats for both */
-	opts = getopt32(argv, "c" IF_FEATURE_TOUCH_SUSV3("r:d:t:")
+	opts = GETOPT32(argv, "c" IF_FEATURE_TOUCH_SUSV3("r:d:t:")
 				IF_FEATURE_TOUCH_NODEREF("h")
 				/*ignored:*/ "fma"
+				LONGOPTS
 				IF_FEATURE_TOUCH_SUSV3(, &reference_file)
 				IF_FEATURE_TOUCH_SUSV3(, &date_str)
 				IF_FEATURE_TOUCH_SUSV3(, &date_str)
diff -urpN busybox-1.27.2/coreutils/tr.c busybox-1.28.0/coreutils/tr.c
--- busybox-1.27.2/coreutils/tr.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/tr.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,7 @@
 /*
  * Mini tr implementation for busybox
  *
- ** Copyright (c) 1987,1997, Prentice Hall   All rights reserved.
+ * Copyright (c) 1987,1997, Prentice Hall   All rights reserved.
  *
  * The name of Prentice Hall may not be used to endorse or promote
  * products derived from this software without specific prior
@@ -19,30 +19,30 @@
  * TODO: graph, print
  */
 //config:config TR
-//config:	bool "tr"
+//config:	bool "tr (5.5 kb)"
 //config:	default y
 //config:	help
-//config:	  tr is used to squeeze, and/or delete characters from standard
-//config:	  input, writing to standard output.
+//config:	tr is used to squeeze, and/or delete characters from standard
+//config:	input, writing to standard output.
 //config:
 //config:config FEATURE_TR_CLASSES
 //config:	bool "Enable character classes (such as [:upper:])"
 //config:	default y
 //config:	depends on TR
 //config:	help
-//config:	  Enable character classes, enabling commands such as:
-//config:	  tr [:upper:] [:lower:] to convert input into lowercase.
+//config:	Enable character classes, enabling commands such as:
+//config:	tr [:upper:] [:lower:] to convert input into lowercase.
 //config:
 //config:config FEATURE_TR_EQUIV
 //config:	bool "Enable equivalence classes"
 //config:	default y
 //config:	depends on TR
 //config:	help
-//config:	  Enable equivalence classes, which essentially add the enclosed
-//config:	  character to the current set. For instance, tr [=a=] xyz would
-//config:	  replace all instances of 'a' with 'xyz'. This option is mainly
-//config:	  useful for cases when no other way of expressing a character
-//config:	  is possible.
+//config:	Enable equivalence classes, which essentially add the enclosed
+//config:	character to the current set. For instance, tr [=a=] xyz would
+//config:	replace all instances of 'a' with 'xyz'. This option is mainly
+//config:	useful for cases when no other way of expressing a character
+//config:	is possible.
 
 //applet:IF_TR(APPLET(tr, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -298,8 +298,8 @@ int tr_main(int argc UNUSED_PARAM, char
 	 * In POSIX locale, these are the same.
 	 */
 
-	opt_complementary = "-1";
-	opts = getopt32(argv, "+Ccds"); /* '+': stop at first non-option */
+	/* '+': stop at first non-option */
+	opts = getopt32(argv, "^+" "Ccds" "\0" "-1");
 	argv += optind;
 
 	str1_length = expand(*argv++, &str1);
diff -urpN busybox-1.27.2/coreutils/true.c busybox-1.28.0/coreutils/true.c
--- busybox-1.27.2/coreutils/true.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/true.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,10 +7,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config TRUE
-//config:	bool "true"
+//config:	bool "true (tiny)"
 //config:	default y
 //config:	help
-//config:	  true returns an exit code of TRUE (0).
+//config:	true returns an exit code of TRUE (0).
 
 //applet:IF_TRUE(APPLET_NOFORK(true, true, BB_DIR_BIN, BB_SUID_DROP, true))
 
diff -urpN busybox-1.27.2/coreutils/truncate.c busybox-1.28.0/coreutils/truncate.c
--- busybox-1.27.2/coreutils/truncate.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/truncate.c	2017-08-17 13:50:45.000000000 +0200
@@ -6,11 +6,11 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config TRUNCATE
-//config:	bool "truncate"
+//config:	bool "truncate (4.7 kb)"
 //config:	default y
 //config:	help
-//config:	  truncate truncates files to a given size. If a file does
-//config:	  not exist, it is created unless told otherwise.
+//config:	truncate truncates files to a given size. If a file does
+//config:	not exist, it is created unless told otherwise.
 
 //applet:IF_TRUNCATE(APPLET_NOFORK(truncate, truncate, BB_DIR_USR_BIN, BB_SUID_DROP, truncate))
 
@@ -50,8 +50,7 @@ int truncate_main(int argc UNUSED_PARAM,
 		OPT_SIZE = (1 << 1),
 	};
 
-	opt_complementary = "s:-1";
-	opts = getopt32(argv, "cs:", &size_str);
+	opts = getopt32(argv, "^" "cs:" "\0" "s:-1", &size_str);
 
 	if (!(opts & OPT_NOCREATE))
 		flags |= O_CREAT;
diff -urpN busybox-1.27.2/coreutils/tty.c busybox-1.28.0/coreutils/tty.c
--- busybox-1.27.2/coreutils/tty.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/tty.c	2017-08-03 17:53:10.000000000 +0200
@@ -7,13 +7,13 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config TTY
-//config:	bool "tty"
+//config:	bool "tty (3.3 kb)"
 //config:	default y
 //config:	help
-//config:	  tty is used to print the name of the current terminal to
-//config:	  standard output.
+//config:	tty is used to print the name of the current terminal to
+//config:	standard output.
 
-//applet:IF_TTY(APPLET(tty, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_TTY(APPLET_NOFORK(tty, tty, BB_DIR_USR_BIN, BB_SUID_DROP, tty))
 
 //kbuild:lib-$(CONFIG_TTY) += tty.o
 
diff -urpN busybox-1.27.2/coreutils/uname.c busybox-1.28.0/coreutils/uname.c
--- busybox-1.27.2/coreutils/uname.c	2017-08-04 02:22:01.000000000 +0200
+++ busybox-1.28.0/coreutils/uname.c	2018-01-01 20:40:41.000000000 +0100
@@ -1,5 +1,6 @@
 /* vi: set sw=4 ts=4: */
-/* uname -- print system information
+/*
+ * uname -- print system information
  * Copyright (C) 1989-1999 Free Software Foundation, Inc.
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
@@ -43,22 +44,32 @@
  *  Fix handling of -a to not print "unknown", add -o and -i support.
  */
 //config:config UNAME
-//config:	bool "uname"
+//config:	bool "uname (3.7 kb)"
 //config:	default y
 //config:	help
-//config:	  uname is used to print system information.
+//config:	uname is used to print system information.
 //config:
 //config:config UNAME_OSNAME
 //config:	string "Operating system name"
 //config:	default "GNU/Linux"
 //config:	depends on UNAME
 //config:	help
-//config:	  Sets the operating system name reported by uname -o.  The
-//config:	  default is "GNU/Linux".
+//config:	Sets the operating system name reported by uname -o.  The
+//config:	default is "GNU/Linux".
+//config:
+//can't use "ARCH" for this applet, all hell breaks loose in build system :)
+//config:config BB_ARCH
+//config:	bool "arch (1.6 kb)"
+//config:	default y
+//config:	help
+//config:	Same as uname -m.
 
-//applet:IF_UNAME(APPLET(uname, BB_DIR_BIN, BB_SUID_DROP))
+//                  APPLET_NOFORK:name   main   location    suid_type     help
+//applet:IF_UNAME(APPLET_NOFORK(  uname, uname, BB_DIR_BIN, BB_SUID_DROP, uname))
+//applet:IF_BB_ARCH(APPLET_NOFORK(arch,  uname, BB_DIR_BIN, BB_SUID_DROP, arch))
 
-//kbuild:lib-$(CONFIG_UNAME) += uname.o
+//kbuild:lib-$(CONFIG_UNAME)   += uname.o
+//kbuild:lib-$(CONFIG_BB_ARCH) += uname.o
 
 /* BB_AUDIT SUSv3 compliant */
 /* http://www.opengroup.org/onlinepubs/007904975/utilities/uname.html */
@@ -81,6 +92,11 @@
 //usage:       "$ uname -a\n"
 //usage:       "Linux debian 2.4.23 #2 Tue Dec 23 17:09:10 MST 2003 i686 GNU/Linux\n"
 
+//usage:#define arch_trivial_usage
+//usage:       ""
+//usage:#define arch_full_usage "\n\n"
+//usage:       "Print system architecture"
+
 #include "libbb.h"
 /* After libbb.h, since it needs sys/types.h on some systems */
 #include <sys/utsname.h>
@@ -92,7 +108,8 @@ typedef struct {
 	char os[sizeof(CONFIG_UNAME_OSNAME)];
 } uname_info_t;
 
-static const char options[] ALIGN1 = "snrvmpioa";
+#if ENABLE_UNAME
+#define options "snrvmpioa"
 static const unsigned short utsname_offset[] = {
 	offsetof(uname_info_t, name.sysname), /* -s */
 	offsetof(uname_info_t, name.nodename), /* -n */
@@ -103,86 +120,94 @@ static const unsigned short utsname_offs
 	offsetof(uname_info_t, platform), /* -i */
 	offsetof(uname_info_t, os), /* -o */
 };
+#endif
 
 int uname_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
-int uname_main(int argc UNUSED_PARAM, char **argv)
+int uname_main(int argc UNUSED_PARAM, char **argv UNUSED_PARAM)
 {
-#if ENABLE_LONG_OPTS
-	static const char uname_longopts[] ALIGN1 =
-		/* name, has_arg, val */
-		"all\0"               No_argument       "a"
-		"kernel-name\0"       No_argument       "s"
-		"nodename\0"          No_argument       "n"
-		"kernel-release\0"    No_argument       "r"
-		"release\0"           No_argument       "r"
-		"kernel-version\0"    No_argument       "v"
-		"machine\0"           No_argument       "m"
-		"processor\0"         No_argument       "p"
-		"hardware-platform\0" No_argument       "i"
-		"operating-system\0"  No_argument       "o"
-	;
-#endif
 	uname_info_t uname_info;
-#if defined(__sparc__) && defined(__linux__)
-	char *fake_sparc = getenv("FAKE_SPARC");
+	IF_UNAME(const char *unknown_str = "unknown";)
+#if ENABLE_UNAME
+	unsigned toprint = (1 << 4); /* "arch" = "uname -m" */
+
+	if (!ENABLE_BB_ARCH || applet_name[0] == 'u') {
+# if ENABLE_LONG_OPTS
+		static const char uname_longopts[] ALIGN1 =
+			/* name, has_arg, val */
+			"all\0"               No_argument       "a"
+			"kernel-name\0"       No_argument       "s"
+			"nodename\0"          No_argument       "n"
+			"kernel-release\0"    No_argument       "r"
+			"release\0"           No_argument       "r"
+			"kernel-version\0"    No_argument       "v"
+			"machine\0"           No_argument       "m"
+			"processor\0"         No_argument       "p"
+			"hardware-platform\0" No_argument       "i"
+			"operating-system\0"  No_argument       "o"
+		;
+# endif
+		toprint = getopt32long(argv, options, uname_longopts);
+		if (argv[optind]) { /* coreutils-6.9 compat */
+			bb_show_usage();
+		}
+		if (toprint & (1 << 8)) { /* -a => all opts on */
+			toprint = (1 << 8) - 1;
+			unknown_str = ""; /* -a does not print unknown fields */
+		}
+		if (toprint == 0) { /* no opts => -s (sysname) */
+			toprint = 1;
+		}
+	} /* if "uname" */
 #endif
-	const char *unknown_str = "unknown";
-	const char *fmt;
-	const unsigned short *delta;
-	unsigned toprint;
-
-	IF_LONG_OPTS(applet_long_options = uname_longopts);
-	toprint = getopt32(argv, options);
-
-	if (argv[optind]) { /* coreutils-6.9 compat */
-		bb_show_usage();
-	}
-
-	if (toprint & (1 << 8)) { /* -a => all opts on */
-		toprint = (1 << 8) - 1;
-		unknown_str = ""; /* -a does not print unknown fields */
-	}
-
-	if (toprint == 0) { /* no opts => -s (sysname) */
-		toprint = 1;
-	}
 
 	uname(&uname_info.name); /* never fails */
 
 #if defined(__sparc__) && defined(__linux__)
-	if (fake_sparc && (fake_sparc[0] | 0x20) == 'y') {
-		strcpy(uname_info.name.machine, "sparc");
-	}
-#endif
-	strcpy(uname_info.processor, unknown_str);
-	strcpy(uname_info.platform, unknown_str);
-	strcpy(uname_info.os, CONFIG_UNAME_OSNAME);
-#if ENABLE_FEDORA_COMPAT
-	/* Fedora does something like this */
-	strcpy(uname_info.processor, uname_info.name.machine);
-	strcpy(uname_info.platform, uname_info.name.machine);
-	if (uname_info.platform[0] == 'i'
-	 && uname_info.platform[1]
-	 && uname_info.platform[2] == '8'
-	 && uname_info.platform[3] == '6'
-	) {
-		uname_info.platform[1] = '3';
+	{
+		char *fake_sparc = getenv("FAKE_SPARC");
+		if (fake_sparc && (fake_sparc[0] | 0x20) == 'y') {
+			strcpy(uname_info.name.machine, "sparc");
+		}
 	}
 #endif
-
-	delta = utsname_offset;
-	fmt = " %s" + 1;
-	do {
-		if (toprint & 1) {
-			const char *p = (char *)(&uname_info) + *delta;
-			if (p[0]) {
-				printf(fmt, p);
-				fmt = " %s";
-			}
+	if (ENABLE_BB_ARCH && (!ENABLE_UNAME || applet_name[0] == 'a')) {
+		puts(uname_info.name.machine);
+	} else {
+#if ENABLE_UNAME
+		/* "uname" */
+		const char *fmt;
+		const unsigned short *delta;
+
+		strcpy(uname_info.processor, unknown_str);
+		strcpy(uname_info.platform, unknown_str);
+		strcpy(uname_info.os, CONFIG_UNAME_OSNAME);
+# if ENABLE_FEDORA_COMPAT
+		/* Fedora does something like this */
+		strcpy(uname_info.processor, uname_info.name.machine);
+		strcpy(uname_info.platform, uname_info.name.machine);
+		if (uname_info.platform[0] == 'i'
+		 && uname_info.platform[1]
+		 && uname_info.platform[2] == '8'
+		 && uname_info.platform[3] == '6'
+		) {
+			uname_info.platform[1] = '3';
 		}
-		++delta;
-	} while (toprint >>= 1);
-	bb_putchar('\n');
+# endif
+		delta = utsname_offset;
+		fmt = " %s" + 1;
+		do {
+			if (toprint & 1) {
+				const char *p = (char *)(&uname_info) + *delta;
+				if (p[0]) {
+					printf(fmt, p);
+					fmt = " %s";
+				}
+			}
+			++delta;
+		} while (toprint >>= 1);
+		bb_putchar('\n');
+#endif
+	}
 
 	fflush_stdout_and_exit(EXIT_SUCCESS); /* coreutils-6.9 compat */
 }
diff -urpN busybox-1.27.2/coreutils/uniq.c busybox-1.28.0/coreutils/uniq.c
--- busybox-1.27.2/coreutils/uniq.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/uniq.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,10 +7,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config UNIQ
-//config:	bool "uniq"
+//config:	bool "uniq (4.8 kb)"
 //config:	default y
 //config:	help
-//config:	  uniq is used to remove duplicate lines from a sorted file.
+//config:	uniq is used to remove duplicate lines from a sorted file.
 
 //applet:IF_UNIQ(APPLET(uniq, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/coreutils/unlink.c busybox-1.28.0/coreutils/unlink.c
--- busybox-1.27.2/coreutils/unlink.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/unlink.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,17 +1,18 @@
 /* vi: set sw=4 ts=4: */
-/* unlink for busybox
+/*
+ * unlink for busybox
  *
  * Copyright (C) 2014 Isaac Dunham <ibid.ag@gmail.com>
  *
  * Licensed under GPLv2, see LICENSE in this source tree
  */
 //config:config UNLINK
-//config:	bool "unlink"
+//config:	bool "unlink (3.5 kb)"
 //config:	default y
 //config:	help
-//config:	  unlink deletes a file by calling unlink()
+//config:	unlink deletes a file by calling unlink()
 
-//applet:IF_UNLINK(APPLET(unlink, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_UNLINK(APPLET_NOFORK(unlink, unlink, BB_DIR_USR_BIN, BB_SUID_DROP, unlink))
 
 //kbuild:lib-$(CONFIG_UNLINK) += unlink.o
 
@@ -25,8 +26,7 @@
 int unlink_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int unlink_main(int argc UNUSED_PARAM, char **argv)
 {
-	opt_complementary = "=1"; /* must have exactly 1 param */
-	getopt32(argv, "");
+	getopt32(argv, "^" "" "\0" "=1");
 	argv += optind;
 	xunlink(argv[0]);
 	return 0;
diff -urpN busybox-1.27.2/coreutils/usleep.c busybox-1.28.0/coreutils/usleep.c
--- busybox-1.27.2/coreutils/usleep.c	2017-08-04 02:19:02.000000000 +0200
+++ busybox-1.28.0/coreutils/usleep.c	2017-08-03 17:53:10.000000000 +0200
@@ -7,10 +7,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config USLEEP
-//config:	bool "usleep"
+//config:	bool "usleep (1.1 kb)"
 //config:	default y
 //config:	help
-//config:	  usleep is used to pause for a specified number of microseconds.
+//config:	usleep is used to pause for a specified number of microseconds.
 
 //applet:IF_USLEEP(APPLET_NOFORK(usleep, usleep, BB_DIR_BIN, BB_SUID_DROP, usleep))
 
diff -urpN busybox-1.27.2/coreutils/uudecode.c busybox-1.28.0/coreutils/uudecode.c
--- busybox-1.27.2/coreutils/uudecode.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/coreutils/uudecode.c	2017-08-17 13:50:45.000000000 +0200
@@ -11,10 +11,10 @@
  * "end" line
  */
 //config:config UUDECODE
-//config:	bool "uudecode"
+//config:	bool "uudecode (5.9 kb)"
 //config:	default y
 //config:	help
-//config:	  uudecode is used to decode a uuencoded file.
+//config:	uudecode is used to decode a uuencoded file.
 
 //applet:IF_UUDECODE(APPLET(uudecode, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -120,8 +120,7 @@ int uudecode_main(int argc UNUSED_PARAM,
 	char *outname = NULL;
 	char *line;
 
-	opt_complementary = "?1"; /* 1 argument max */
-	getopt32(argv, "o:", &outname);
+	getopt32(argv, "^" "o:" "\0" "?1"/* 1 arg max*/, &outname);
 	argv += optind;
 
 	if (!argv[0])
@@ -176,10 +175,10 @@ int uudecode_main(int argc UNUSED_PARAM,
 //kbuild:lib-$(CONFIG_BASE64) += uudecode.o
 
 //config:config BASE64
-//config:	bool "base64"
+//config:	bool "base64 (5 kb)"
 //config:	default y
 //config:	help
-//config:	  Base64 encode and decode
+//config:	Base64 encode and decode
 
 //usage:#define base64_trivial_usage
 //usage:	"[-d] [FILE]"
@@ -196,8 +195,7 @@ int base64_main(int argc UNUSED_PARAM, c
 	FILE *src_stream;
 	unsigned opts;
 
-	opt_complementary = "?1"; /* 1 argument max */
-	opts = getopt32(argv, "d");
+	opts = getopt32(argv, "^" "d" "\0" "?1"/* 1 arg max*/);
 	argv += optind;
 
 	if (!argv[0])
diff -urpN busybox-1.27.2/coreutils/uuencode.c busybox-1.28.0/coreutils/uuencode.c
--- busybox-1.27.2/coreutils/uuencode.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/uuencode.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,17 +1,17 @@
 /* vi: set sw=4 ts=4: */
 /*
- *  Copyright (C) 2000 by Glenn McGrath
+ * Copyright (C) 2000 by Glenn McGrath
  *
- *  based on the function base64_encode from http.c in wget v1.6
- *  Copyright (C) 1995, 1996, 1997, 1998, 2000 Free Software Foundation, Inc.
+ * based on the function base64_encode from http.c in wget v1.6
+ * Copyright (C) 1995, 1996, 1997, 1998, 2000 Free Software Foundation, Inc.
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config UUENCODE
-//config:	bool "uuencode"
+//config:	bool "uuencode (4.6 kb)"
 //config:	default y
 //config:	help
-//config:	  uuencode is used to uuencode a file.
+//config:	uuencode is used to uuencode a file.
 
 //applet:IF_UUENCODE(APPLET(uuencode, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -49,8 +49,7 @@ int uuencode_main(int argc UNUSED_PARAM,
 
 	tbl = bb_uuenc_tbl_std;
 	mode = 0666 & ~umask(0666);
-	opt_complementary = "-1:?2"; /* must have 1 or 2 args */
-	if (getopt32(argv, "m")) {
+	if (getopt32(argv, "^" "m" "\0" "-1:?2"/*must have 1 or 2 args*/)) {
 		tbl = bb_uuenc_tbl_base64;
 	}
 	argv += optind;
diff -urpN busybox-1.27.2/coreutils/wc.c busybox-1.28.0/coreutils/wc.c
--- busybox-1.27.2/coreutils/wc.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/wc.c	2017-07-24 18:57:09.000000000 +0200
@@ -33,18 +33,18 @@
  * for which 'wc -c' should output '0'.
  */
 //config:config WC
-//config:	bool "wc"
+//config:	bool "wc (4.4 kb)"
 //config:	default y
 //config:	help
-//config:	  wc is used to print the number of bytes, words, and lines,
-//config:	  in specified files.
+//config:	wc is used to print the number of bytes, words, and lines,
+//config:	in specified files.
 //config:
 //config:config FEATURE_WC_LARGE
 //config:	bool "Support very large counts"
 //config:	default y
 //config:	depends on WC
 //config:	help
-//config:	  Use "unsigned long long" for counter variables.
+//config:	Use "unsigned long long" for counter variables.
 
 //applet:IF_WC(APPLET(wc, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/coreutils/who.c busybox-1.28.0/coreutils/who.c
--- busybox-1.27.2/coreutils/who.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/who.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,5 +1,5 @@
 /* vi: set sw=4 ts=4: */
-/*----------------------------------------------------------------------
+/*
  * Mini who is used to display user name, login time,
  * idle time and host name.
  *
@@ -13,35 +13,33 @@
  * Copyright (c) 2002 AYR Networks, Inc.
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
- *
- *----------------------------------------------------------------------
  */
 //config:config WHO
-//config:      bool "who"
-//config:      default y
-//config:      depends on FEATURE_UTMP
-//config:      help
-//config:        who is used to show who is logged on.
+//config:	bool "who (3.7 kb)"
+//config:	default y
+//config:	depends on FEATURE_UTMP
+//config:	help
+//config:	Print users currently logged on.
 //config:
 // procps-ng has this variation of "who":
 //config:config W
-//config:      bool "w"
-//config:      default y
-//config:      depends on FEATURE_UTMP
-//config:      help
-//config:        w is used to show who is logged on.
+//config:	bool "w (3.7 kb)"
+//config:	default y
+//config:	depends on FEATURE_UTMP
+//config:	help
+//config:	Print users currently logged on.
 //config:
 //config:config USERS
-//config:      bool "users"
-//config:      default y
-//config:      depends on FEATURE_UTMP
-//config:      help
-//config:        Print users currently logged on.
-
-//                APPLET_ODDNAME:name   main location        suid_type     help
-//applet:IF_USERS(APPLET_ODDNAME(users, who, BB_DIR_USR_BIN, BB_SUID_DROP, users))
-//applet:IF_W(    APPLET_ODDNAME(w,     who, BB_DIR_USR_BIN, BB_SUID_DROP, w))
-//applet:IF_WHO(  APPLET(        who,        BB_DIR_USR_BIN, BB_SUID_DROP))
+//config:	bool "users (3.2 kb)"
+//config:	default y
+//config:	depends on FEATURE_UTMP
+//config:	help
+//config:	Print users currently logged on.
+
+//                APPLET_NOEXEC:name   main location        suid_type     help
+//applet:IF_USERS(APPLET_NOEXEC(users, who, BB_DIR_USR_BIN, BB_SUID_DROP, users))
+//applet:IF_W(    APPLET_NOEXEC(w,     who, BB_DIR_USR_BIN, BB_SUID_DROP, w))
+//applet:IF_WHO(  APPLET_NOEXEC(who,   who, BB_DIR_USR_BIN, BB_SUID_DROP, who))
 
 //kbuild:lib-$(CONFIG_USERS) += who.o
 //kbuild:lib-$(CONFIG_W)     += who.o
@@ -117,8 +115,7 @@ int who_main(int argc UNUSED_PARAM, char
 	unsigned opt;
 	const char *fmt = "%s";
 
-	opt_complementary = "=0";
-	opt = getopt32(argv, do_who ? "aH" : "");
+	opt = getopt32(argv, do_who ? "^" "aH" "\0" "=0": "^" "" "\0" "=0");
 	if ((opt & 2) || do_w) /* -H or we are w */
 		puts("USER\t\tTTY\t\tIDLE\tTIME\t\t HOST");
 
diff -urpN busybox-1.27.2/coreutils/whoami.c busybox-1.28.0/coreutils/whoami.c
--- busybox-1.27.2/coreutils/whoami.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/coreutils/whoami.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,11 +7,11 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config WHOAMI
-//config:	bool "whoami"
+//config:	bool "whoami (2.9 kb)"
 //config:	default y
 //config:	help
-//config:	  whoami is used to print the username of the current
-//config:	  user id (same as id -un).
+//config:	whoami is used to print the username of the current
+//config:	user id (same as id -un).
 
 //applet:IF_WHOAMI(APPLET_NOFORK(whoami, whoami, BB_DIR_USR_BIN, BB_SUID_DROP, whoami))
 
diff -urpN busybox-1.27.2/coreutils/yes.c busybox-1.28.0/coreutils/yes.c
--- busybox-1.27.2/coreutils/yes.c	2017-08-04 02:19:02.000000000 +0200
+++ busybox-1.28.0/coreutils/yes.c	2017-08-03 17:53:10.000000000 +0200
@@ -11,11 +11,11 @@
  * Size reductions and removed redundant applet name prefix from error messages.
  */
 //config:config YES
-//config:	bool "yes"
+//config:	bool "yes (956 bytes)"
 //config:	default y
 //config:	help
-//config:	  yes is used to repeatedly output a specific string, or
-//config:	  the default string `y'.
+//config:	yes is used to repeatedly output a specific string, or
+//config:	the default string 'y'.
 
 //applet:IF_YES(APPLET_NOEXEC(yes, yes, BB_DIR_USR_BIN, BB_SUID_DROP, yes))
 /* was NOFORK, but then yes can't be ^C'ed if run by hush */
diff -urpN busybox-1.27.2/debianutils/pipe_progress.c busybox-1.28.0/debianutils/pipe_progress.c
--- busybox-1.27.2/debianutils/pipe_progress.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/debianutils/pipe_progress.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,10 +7,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config PIPE_PROGRESS
-//config:	bool "pipe_progress"
+//config:	bool "pipe_progress (225 bytes)"
 //config:	default y
 //config:	help
-//config:	  Display a dot to indicate pipe activity.
+//config:	Display a dot to indicate pipe activity.
 
 //applet:IF_PIPE_PROGRESS(APPLET(pipe_progress, BB_DIR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/debianutils/run_parts.c busybox-1.28.0/debianutils/run_parts.c
--- busybox-1.27.2/debianutils/run_parts.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/debianutils/run_parts.c	2017-08-17 13:50:45.000000000 +0200
@@ -23,19 +23,19 @@
  * broken compatibility because the BusyBox policy doesn't allow them.
  */
 //config:config RUN_PARTS
-//config:	bool "run-parts"
+//config:	bool "run-parts (5.6 kb)"
 //config:	default y
 //config:	help
-//config:	  run-parts is a utility designed to run all the scripts in a directory.
+//config:	run-parts is a utility designed to run all the scripts in a directory.
 //config:
-//config:	  It is useful to set up a directory like cron.daily, where you need to
-//config:	  execute all the scripts in that directory.
+//config:	It is useful to set up a directory like cron.daily, where you need to
+//config:	execute all the scripts in that directory.
 //config:
-//config:	  In this implementation of run-parts some features (such as report
-//config:	  mode) are not implemented.
+//config:	In this implementation of run-parts some features (such as report
+//config:	mode) are not implemented.
 //config:
-//config:	  Unless you know that run-parts is used in some of your scripts
-//config:	  you can safely say N here.
+//config:	Unless you know that run-parts is used in some of your scripts
+//config:	you can safely say N here.
 //config:
 //config:config FEATURE_RUN_PARTS_LONG_OPTIONS
 //config:	bool "Enable long options"
@@ -47,9 +47,9 @@
 //config:	default y
 //config:	depends on RUN_PARTS
 //config:	help
-//config:	  Support additional options:
-//config:	  -l --list print the names of the all matching files (not
-//config:	            limited to executables), but don't actually run them.
+//config:	Support additional options:
+//config:	-l --list print the names of the all matching files (not
+//config:	limited to executables), but don't actually run them.
 
 //applet:IF_RUN_PARTS(APPLET_ODDNAME(run-parts, run_parts, BB_DIR_BIN, BB_SUID_DROP, run_parts))
 
@@ -159,10 +159,15 @@ static const char runparts_longopts[] AL
 	"reverse\0" No_argument       "\xf0"
 	"test\0"    No_argument       "\xf1"
 	"exit-on-error\0" No_argument "\xf2"
-#if ENABLE_FEATURE_RUN_PARTS_FANCY
+# if ENABLE_FEATURE_RUN_PARTS_FANCY
 	"list\0"    No_argument       "\xf3"
-#endif
+# endif
 	;
+# define GETOPT32 getopt32long
+# define LONGOPTS ,runparts_longopts
+#else
+# define GETOPT32 getopt32
+# define LONGOPTS
 #endif
 
 int run_parts_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
@@ -175,12 +180,10 @@ int run_parts_main(int argc UNUSED_PARAM
 
 	INIT_G();
 
-#if ENABLE_FEATURE_RUN_PARTS_LONG_OPTIONS
-	applet_long_options = runparts_longopts;
-#endif
 	/* We require exactly one argument: the directory name */
-	opt_complementary = "=1";
-	getopt32(argv, "a:*u:", &arg_list, &umask_p);
+	GETOPT32(argv, "^" "a:*u:" "\0" "=1" LONGOPTS,
+			&arg_list, &umask_p
+	);
 
 	umask(xstrtou_range(umask_p, 8, 0, 07777));
 
diff -urpN busybox-1.27.2/debianutils/start_stop_daemon.c busybox-1.28.0/debianutils/start_stop_daemon.c
--- busybox-1.27.2/debianutils/start_stop_daemon.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/debianutils/start_stop_daemon.c	2017-08-17 13:50:45.000000000 +0200
@@ -57,12 +57,12 @@ Misc options:
         -v,--verbose            Verbose
 */
 //config:config START_STOP_DAEMON
-//config:	bool "start-stop-daemon"
+//config:	bool "start-stop-daemon (12 kb)"
 //config:	default y
 //config:	help
-//config:	  start-stop-daemon is used to control the creation and
-//config:	  termination of system-level processes, usually the ones
-//config:	  started during the startup of the system.
+//config:	start-stop-daemon is used to control the creation and
+//config:	termination of system-level processes, usually the ones
+//config:	started during the startup of the system.
 //config:
 //config:config FEATURE_START_STOP_DAEMON_LONG_OPTIONS
 //config:	bool "Enable long options"
@@ -74,11 +74,12 @@ Misc options:
 //config:	default y
 //config:	depends on START_STOP_DAEMON
 //config:	help
-//config:	  -o|--oknodo ignored since we exit with 0 anyway
-//config:	  -v|--verbose
-//config:	  -N|--nicelevel N
+//config:	-o|--oknodo ignored since we exit with 0 anyway
+//config:	-v|--verbose
+//config:	-N|--nicelevel N
 
 //applet:IF_START_STOP_DAEMON(APPLET_ODDNAME(start-stop-daemon, start_stop_daemon, BB_DIR_SBIN, BB_SUID_DROP, start_stop_daemon))
+/* not NOEXEC: uses bb_common_bufsiz1 */
 
 //kbuild:lib-$(CONFIG_START_STOP_DAEMON) += start_stop_daemon.o
 
@@ -86,44 +87,15 @@ Misc options:
 //usage:       "[OPTIONS] [-S|-K] ... [-- ARGS...]"
 //usage:#define start_stop_daemon_full_usage "\n\n"
 //usage:       "Search for matching processes, and then\n"
-//usage:       "-K: stop all matching processes.\n"
-//usage:       "-S: start a process unless a matching process is found.\n"
-//usage:	IF_FEATURE_START_STOP_DAEMON_LONG_OPTIONS(
-//usage:     "\nProcess matching:"
-//usage:     "\n	-u,--user USERNAME|UID	Match only this user's processes"
-//usage:     "\n	-n,--name NAME		Match processes with NAME"
-//usage:     "\n				in comm field in /proc/PID/stat"
-//usage:     "\n	-x,--exec EXECUTABLE	Match processes with this command"
-//usage:     "\n				in /proc/PID/{exe,cmdline}"
-//usage:     "\n	-p,--pidfile FILE	Match a process with PID from the file"
-//usage:     "\n	All specified conditions must match"
-//usage:     "\n-S only:"
-//usage:     "\n	-x,--exec EXECUTABLE	Program to run"
-//usage:     "\n	-a,--startas NAME	Zeroth argument"
-//usage:     "\n	-b,--background		Background"
-//usage:	IF_FEATURE_START_STOP_DAEMON_FANCY(
-//usage:     "\n	-N,--nicelevel N	Change nice level"
-//usage:	)
-//usage:     "\n	-c,--chuid USER[:[GRP]]	Change to user/group"
-//usage:     "\n	-m,--make-pidfile	Write PID to the pidfile specified by -p"
-//usage:     "\n-K only:"
-//usage:     "\n	-s,--signal SIG		Signal to send"
-//usage:     "\n	-t,--test		Match only, exit with 0 if a process is found"
-//usage:     "\nOther:"
-//usage:	IF_FEATURE_START_STOP_DAEMON_FANCY(
-//usage:     "\n	-o,--oknodo		Exit with status 0 if nothing is done"
-//usage:     "\n	-v,--verbose		Verbose"
-//usage:	)
-//usage:     "\n	-q,--quiet		Quiet"
-//usage:	)
-//usage:	IF_NOT_FEATURE_START_STOP_DAEMON_LONG_OPTIONS(
+//usage:       "-K: stop all matching processes\n"
+//usage:       "-S: start a process unless a matching process is found\n"
 //usage:     "\nProcess matching:"
 //usage:     "\n	-u USERNAME|UID	Match only this user's processes"
 //usage:     "\n	-n NAME		Match processes with NAME"
 //usage:     "\n			in comm field in /proc/PID/stat"
 //usage:     "\n	-x EXECUTABLE	Match processes with this command"
 //usage:     "\n			command in /proc/PID/cmdline"
-//usage:     "\n	-p FILE		Match a process with PID from the file"
+//usage:     "\n	-p FILE		Match a process with PID from FILE"
 //usage:     "\n	All specified conditions must match"
 //usage:     "\n-S only:"
 //usage:     "\n	-x EXECUTABLE	Program to run"
@@ -132,18 +104,17 @@ Misc options:
 //usage:	IF_FEATURE_START_STOP_DAEMON_FANCY(
 //usage:     "\n	-N N		Change nice level"
 //usage:	)
-//usage:     "\n	-c USER[:[GRP]]	Change to user/group"
-//usage:     "\n	-m		Write PID to the pidfile specified by -p"
+//usage:     "\n	-c USER[:[GRP]]	Change user/group"
+//usage:     "\n	-m		Write PID to pidfile specified by -p"
 //usage:     "\n-K only:"
 //usage:     "\n	-s SIG		Signal to send"
-//usage:     "\n	-t		Match only, exit with 0 if a process is found"
+//usage:     "\n	-t		Match only, exit with 0 if found"
 //usage:     "\nOther:"
 //usage:	IF_FEATURE_START_STOP_DAEMON_FANCY(
 //usage:     "\n	-o		Exit with status 0 if nothing is done"
 //usage:     "\n	-v		Verbose"
 //usage:	)
 //usage:     "\n	-q		Quiet"
-//usage:	)
 
 #include <sys/resource.h>
 
@@ -409,11 +380,11 @@ static const char start_stop_daemon_long
 	"quiet\0"        No_argument       "q"
 	"test\0"         No_argument       "t"
 	"make-pidfile\0" No_argument       "m"
-#if ENABLE_FEATURE_START_STOP_DAEMON_FANCY
+# if ENABLE_FEATURE_START_STOP_DAEMON_FANCY
 	"oknodo\0"       No_argument       "o"
 	"verbose\0"      No_argument       "v"
 	"nicelevel\0"    Required_argument "N"
-#endif
+# endif
 	"startas\0"      Required_argument "a"
 	"name\0"         Required_argument "n"
 	"signal\0"       Required_argument "s"
@@ -421,10 +392,15 @@ static const char start_stop_daemon_long
 	"chuid\0"        Required_argument "c"
 	"exec\0"         Required_argument "x"
 	"pidfile\0"      Required_argument "p"
-#if ENABLE_FEATURE_START_STOP_DAEMON_FANCY
+# if ENABLE_FEATURE_START_STOP_DAEMON_FANCY
 	"retry\0"        Required_argument "R"
-#endif
+# endif
 	;
+# define GETOPT32 getopt32long
+# define LONGOPTS start_stop_daemon_longopts,
+#else
+# define GETOPT32 getopt32
+# define LONGOPTS
 #endif
 
 int start_stop_daemon_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
@@ -445,19 +421,18 @@ int start_stop_daemon_main(int argc UNUS
 
 	INIT_G();
 
-#if ENABLE_FEATURE_START_STOP_DAEMON_LONG_OPTIONS
-	applet_long_options = start_stop_daemon_longopts;
-#endif
-
-	/* -K or -S is required; they are mutually exclusive */
-	/* -p is required if -m is given */
-	/* -xpun (at least one) is required if -K is given */
-	/* -xa (at least one) is required if -S is given */
-	/* -q turns off -v */
-	opt_complementary = "K:S:K--S:S--K:m?p:K?xpun:S?xa"
-		IF_FEATURE_START_STOP_DAEMON_FANCY("q-v");
-	opt = getopt32(argv, "KSbqtma:n:s:u:c:x:p:"
-		IF_FEATURE_START_STOP_DAEMON_FANCY("ovN:R:"),
+	opt = GETOPT32(argv, "^"
+		"KSbqtma:n:s:u:c:x:p:"
+		IF_FEATURE_START_STOP_DAEMON_FANCY("ovN:R:")
+			/* -K or -S is required; they are mutually exclusive */
+			/* -p is required if -m is given */
+			/* -xpun (at least one) is required if -K is given */
+			/* -xa (at least one) is required if -S is given */
+			/* -q turns off -v */
+			"\0"
+			"K:S:K--S:S--K:m?p:K?xpun:S?xa"
+			IF_FEATURE_START_STOP_DAEMON_FANCY("q-v"),
+		LONGOPTS
 		&startas, &cmdname, &signame, &userspec, &chuid, &execname, &pidfile
 		IF_FEATURE_START_STOP_DAEMON_FANCY(,&opt_N)
 		/* We accept and ignore -R <param> / --retry <param> */
@@ -516,6 +491,11 @@ int start_stop_daemon_main(int argc UNUS
 		/* DAEMON_DEVNULL_STDIO is superfluous -
 		 * it's always done by bb_daemonize() */
 #else
+		/* Daemons usually call bb_daemonize_or_rexec(), but SSD can do
+		 * without: SSD is not itself a daemon, it _execs_ a daemon.
+		 * The usual NOMMU problem of "child can't run indefinitely,
+		 * it must exec" does not bite us: we exec anyway.
+		 */
 		pid_t pid = xvfork();
 		if (pid != 0) {
 			/* parent */
@@ -525,12 +505,8 @@ int start_stop_daemon_main(int argc UNUS
 		}
 		/* Child */
 		setsid(); /* detach from controlling tty */
-		/* Redirect stdio to /dev/null, close extra FDs.
-		 * We do not actually daemonize because of DAEMON_ONLY_SANITIZE */
-		bb_daemonize_or_rexec(DAEMON_DEVNULL_STDIO
-			+ DAEMON_CLOSE_EXTRA_FDS
-			+ DAEMON_ONLY_SANITIZE,
-			NULL /* argv, unused */ );
+		/* Redirect stdio to /dev/null, close extra FDs */
+		bb_daemon_helper(DAEMON_DEVNULL_STDIO + DAEMON_CLOSE_EXTRA_FDS);
 #endif
 	}
 	if (opt & OPT_MAKEPID) {
diff -urpN busybox-1.27.2/debianutils/which.c busybox-1.28.0/debianutils/which.c
--- busybox-1.27.2/debianutils/which.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/debianutils/which.c	2017-08-17 13:50:45.000000000 +0200
@@ -6,13 +6,13 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config WHICH
-//config:	bool "which"
+//config:	bool "which (3.7 kb)"
 //config:	default y
 //config:	help
-//config:	  which is used to find programs in your PATH and
-//config:	  print out their pathnames.
+//config:	which is used to find programs in your PATH and
+//config:	print out their pathnames.
 
-//applet:IF_WHICH(APPLET(which, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_WHICH(APPLET_NOFORK(which, which, BB_DIR_USR_BIN, BB_SUID_DROP, which))
 
 //kbuild:lib-$(CONFIG_WHICH) += which.o
 
@@ -37,8 +37,7 @@ int which_main(int argc UNUSED_PARAM, ch
 	if (!env_path)
 		env_path = bb_default_root_path;
 
-	opt_complementary = "-1"; /* at least one argument */
-	getopt32(argv, "a");
+	getopt32(argv, "^" "a" "\0" "-1"/*at least one arg*/);
 	argv += optind;
 
 	do {
@@ -56,6 +55,8 @@ int which_main(int argc UNUSED_PARAM, ch
 			char *p;
 
 			path = tmp = xstrdup(env_path);
+//NOFORK FIXME: nested xmallocs (one is inside find_executable())
+//can leak memory on failure
 			while ((p = find_executable(*argv, &tmp)) != NULL) {
 				missing = 0;
 				puts(p);
diff -urpN busybox-1.27.2/docs/new-applet-HOWTO.txt busybox-1.28.0/docs/new-applet-HOWTO.txt
--- busybox-1.27.2/docs/new-applet-HOWTO.txt	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/docs/new-applet-HOWTO.txt	2017-08-08 14:08:06.000000000 +0200
@@ -147,17 +147,17 @@ Placement / Directory
 
 Find the appropriate directory for your new applet.
 
-Add the kbuild snippet to the .c file:
-
-//kbuild:lib-$(CONFIG_MU) += mu.o
-
 Add the config snippet to the .c file:
 
 //config:config MU
 //config:	bool "MU"
 //config:	default y
 //config:	help
-//config:	  Returns an indeterminate value.
+//config:	Returns an indeterminate value.
+
+Add the kbuild snippet to the .c file:
+
+//kbuild:lib-$(CONFIG_MU) += mu.o
 
 
 Usage String(s)
@@ -168,8 +168,9 @@ This should look like the following:
 
 //usage:#define mu_trivial_usage
 //usage:	"[-abcde] FILE..."
-//usage:#define mu_full_usage
-//usage:	"Returns an indeterminate value\n"
+//usage:#define mu_full_usage "\n\n"
+//usage:	"Returns an indeterminate value"
+//usage:     "\n"
 //usage:     "\n	-a	First function"
 //usage:     "\n	-b	Second function"
 //usage:	...
diff -urpN busybox-1.27.2/docs/nofork_noexec.txt busybox-1.28.0/docs/nofork_noexec.txt
--- busybox-1.27.2/docs/nofork_noexec.txt	2017-08-04 02:19:02.000000000 +0200
+++ busybox-1.28.0/docs/nofork_noexec.txt	2017-08-08 14:08:06.000000000 +0200
@@ -10,13 +10,8 @@ of reimplemented Unix commands, and we c
 for speeding up busybox shells, and more. NOEXEC and NOFORK applets
 are exactly those applets which are eligible for these tricks.
 
-Applet will be subject to NOFORK/NOEXEC tricks if it is marked as such
-in applets.h. FEATURE_PREFER_APPLETS is a config option which
-globally enables usage of NOFORK/NOEXEC tricks.
-If it is enabled, FEATURE_SH_STANDALONE can be enabled too,
-and then shells will use NOFORK/NOEXEC tricks for ordinary commands.
-NB: shell builtins use these tricks regardless of FEATURE_SH_STANDALONE
-or FEATURE_PREFER_APPLETS.
+Applet will be subject to NOFORK/NOEXEC tricks only if it is marked
+as such in applets.src.h or in their inline "//applet:" directives.
 
 In C, if you want to call a program and wait for it, use
 spawn_and_wait(argv), BB_EXECVP(prog,argv) or BB_EXECLP(prog,argv0,...).
@@ -24,6 +19,31 @@ They check whether program name is an ap
 do NOFORK/NOEXEC thing depending on configuration.
 
 
+	Relevant CONFIG options
+
+FEATURE_PREFER_APPLETS
+  Globally enables NOFORK/NOEXEC tricks for such programs as xargs
+  and find:
+  BB_EXECVP(cmd, argv) will try to exec /proc/self/exe
+  if command's name matches some applet name;
+  spawn_and_wait(argv) will do NOFORK/NOEXEC tricks
+
+//TODO: the above two things probably should have separate options?
+
+FEATURE_SH_STANDALONE
+  shells will try to exec /proc/self/exe if command's name matches
+  some applet name; shells will do NOEXEC trick on NOEXEC applets
+
+//TODO: split (same as for PREFER_APPLETS)
+
+FEATURE_SH_NOFORK
+  shells will do NOFORK trick on NOFORK applets
+
+NB: shell builtins use these tricks regardless of FEATURE_SH_STANDALONE,
+FEATURE_PREFER_APPLETS or FEATURE_SH_NOFORK. In effect, builtins
+are "always NOFORK".
+
+
 	NOEXEC
 
 NOEXEC applet should work correctly if another applet forks and then
@@ -64,15 +84,27 @@ This poses much more serious limitations
 * do not use shared global data, or save/restore shared global data
   (e.g. bb_common_bufsiz1) prior to returning.
   - getopt32() is ok to use. You do not need to save/restore option_mask32,
-    it is already done by core code.
+    xfunc_error_retval, and logmode - it is already done by core code.
 * if you allocate memory, you can use xmalloc() only on the very first
   allocation. All other allocations should use malloc[_or_warn]().
   After first allocation, you cannot use any xfuncs.
   Otherwise, failing xfunc will return to caller applet
   without freeing malloced data!
-* All allocated data, opened files, signal handlers, termios settings,
-  O_NONBLOCK flags etc should be freed/closed/restored prior to return.
-* ...
+* the same applies to other resources, such as open fds: no xfuncs after
+  acquiring them!
+* All allocated data, opened files, signal handlers, termios settings
+  etc should be freed/closed/restored prior to return.
+
+Currently, ash shell signal handling is implemented in a way that signals
+have non-SA_RESTARTed handlers. This means that system calls can
+return EINTR. An example of such problem is "yes" applet:
+it is implemented so that it has a writing loop, this loop is exited on
+any write error, and in the case of user pressing ^C the error was EINTR.
+The problem is, the error causes stdout FILE* object to get into error
+state, needing clearerr() - or else subsequent shell output will also
+not work. ("yes" has been downgraded to NOEXEC, since hush signal handling
+does not have this problem - which makes "yes" to not exit on ^C (bug).
+But stray EINTRs can be seen in any NOFORK under ash, until ash is fixed).
 
 NOFORK applets give the most of speed advantage, but are trickiest
 to implement. In order to minimize amount of bugs and maintenance,
@@ -82,6 +114,8 @@ frequently executed from shell/find/xarg
 script loops. Applets which mess with signal handlers, termios etc
 are probably not worth the effort.
 
+Applets which must be interruptible by ^C in shells can not be NOFORKs.
+
 Any NOFORK applet is also a NOEXEC applet.
 
 
@@ -94,11 +128,11 @@ API to call NOFORK applets is two functi
 
 First one is directly used by shells if FEATURE_SH_NOFORK=y.
 Second one is used by many applets, but main users are xargs and find.
-It itself calls run_nofork_applet(), if argv[0] turned out to be a name
+It itself calls run_nofork_applet(), if argv[0] is a name
 of a NOFORK applet.
 
 run_nofork_applet() saves/inits/restores option parsing, xfunc_error_retval,
-applet_name. Thus, for example, caller does not need to worry about
+logmode, applet_name. Thus, for example, caller does not need to worry about
 option_mask32 getting trashed.
 
 
@@ -107,22 +141,3 @@ option_mask32 getting trashed.
 It's the same trusty spawn_and_wait(argv). If FEATURE_PREFER_APPLETS=y,
 it does NOEXEC trick. It resets xfunc_error_retval = 1 and
 logmode = LOGMODE_STDIO in the child.
-
-
-	Relevant CONFIG options
-
-FEATURE_PREFER_APPLETS
-  BB_EXECVP(cmd, argv) will try to exec /proc/self/exe
-  if command's name matches some applet name;
-  spawn_and_wait(argv) will do NOFORK/NOEXEC tricks
-
-//TODO: the above two things probably should have separate options?
-
-FEATURE_SH_STANDALONE
-  shells will try to exec /proc/self/exe if command's name matches
-  some applet name; shells will do NOEXEC trick on NOEXEC applets
-
-//TODO: split (same as for PREFER_APPLETS)
-
-FEATURE_SH_NOFORK
-  shells will do NOFORK trick on NOFORK applets
diff -urpN busybox-1.27.2/e2fsprogs/chattr.c busybox-1.28.0/e2fsprogs/chattr.c
--- busybox-1.27.2/e2fsprogs/chattr.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/e2fsprogs/chattr.c	2017-08-08 14:08:06.000000000 +0200
@@ -10,19 +10,22 @@
  * Public License
  */
 //config:config CHATTR
-//config:	bool "chattr"
+//config:	bool "chattr (3.2 kb)"
 //config:	default y
 //config:	help
-//config:	  chattr changes the file attributes on a second extended file system.
+//config:	chattr changes the file attributes on a second extended file system.
 
-//applet:IF_CHATTR(APPLET(chattr, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_CHATTR(APPLET_NOEXEC(chattr, chattr, BB_DIR_BIN, BB_SUID_DROP, chattr))
 
 //kbuild:lib-$(CONFIG_CHATTR) += chattr.o e2fs_lib.o
 
 //usage:#define chattr_trivial_usage
-//usage:       "[-R] [-+=AacDdijsStTu] [-v VERSION] [FILE]..."
+//usage:       "[-R] [-v VERSION] [-+=AacDdijsStTu] FILE..."
 //usage:#define chattr_full_usage "\n\n"
 //usage:       "Change ext2 file attributes\n"
+//usage:     "\n	-R	Recurse"
+//usage:     "\n	-v VER	Set version/generation number"
+//-V, -f accepted but ignored
 //usage:     "\nModifiers:"
 //usage:     "\n	-,+,=	Remove/add/set attributes"
 //usage:     "\nAttributes:"
@@ -37,8 +40,6 @@
 //usage:     "\n	S	Write synchronously"
 //usage:     "\n	t	Disable tail-merging of partial blocks with other files"
 //usage:     "\n	u	Allow file to be undeleted"
-//usage:     "\n	-R	Recurse"
-//usage:     "\n	-v VER	Set version/generation number"
 
 #include "libbb.h"
 #include "e2fs_lib.h"
@@ -52,7 +53,7 @@ struct globals {
 	unsigned long version;
 	unsigned long af;
 	unsigned long rf;
-	smallint flags;
+	int flags;
 	smallint recursive;
 };
 
@@ -64,10 +65,11 @@ static unsigned long get_flag(char c)
 	bb_show_usage();
 }
 
-static int decode_arg(const char *arg, struct globals *gp)
+static char** decode_arg(char **argv, struct globals *gp)
 {
 	unsigned long *fl;
-	char opt = *arg++;
+	const char *arg = *argv;
+	char opt = *arg;
 
 	fl = &gp->af;
 	if (opt == '-') {
@@ -75,15 +77,43 @@ static int decode_arg(const char *arg, s
 		fl = &gp->rf;
 	} else if (opt == '+') {
 		gp->flags |= OPT_ADD;
-	} else if (opt == '=') {
+	} else { /* if (opt == '=') */
 		gp->flags |= OPT_SET;
-	} else
-		return 0;
+	}
 
-	while (*arg)
-		*fl |= get_flag(*arg++);
+	while (*++arg) {
+		if (opt == '-') {
+//e2fsprogs-1.43.1 accepts:
+// "-RRR", "-RRRv VER" and even "-ARRRva VER" and "-vvv V1 V2 V3"
+// but not "-vVER".
+// IOW: options are parsed as part of "remove attrs" strings,
+// if "v" is seen, next argv[] is VER, even if more opts/attrs follow in this argv[]!
+			if (*arg == 'R') {
+				gp->recursive = 1;
+				continue;
+			}
+			if (*arg == 'V') {
+				/*"verbose and print program version" (nop for now) */;
+				continue;
+			}
+			if (*arg == 'f') {
+				/*"suppress most error messages" (nop) */;
+				continue;
+			}
+			if (*arg == 'v') {
+				if (!*++argv)
+					bb_show_usage();
+				gp->version = xatoul(*argv);
+				gp->flags |= OPT_SET_VER;
+				continue;
+			}
+//TODO: "-p PROJECT_NUM" ?
+			/* not a known option, try as an attribute */
+		}
+		*fl |= get_flag(*arg);
+	}
 
-	return 1;
+	return argv;
 }
 
 static void change_attributes(const char *name, struct globals *gp);
@@ -133,7 +163,7 @@ static void change_attributes(const char
 			fsflags &= ~gp->rf;
 		/*if (gp->flags & OPT_ADD) - not needed, af is zero otherwise */
 			fsflags |= gp->af;
-		/* What is this? And why it's not done for SET case? */
+// What is this? And why it's not done for SET case?
 		if (!S_ISDIR(st.st_mode))
 			fsflags &= ~EXT2_DIRSYNC_FL;
 	}
@@ -149,36 +179,22 @@ int chattr_main(int argc, char **argv) M
 int chattr_main(int argc UNUSED_PARAM, char **argv)
 {
 	struct globals g;
-	char *arg;
 
 	memset(&g, 0, sizeof(g));
 
 	/* parse the args */
-	while ((arg = *++argv)) {
-		/* take care of -R and -v <version> */
-		if (arg[0] == '-'
-		 && (arg[1] == 'R' || arg[1] == 'v')
-		 && !arg[2]
-		) {
-			if (arg[1] == 'R') {
-				g.recursive = 1;
-				continue;
-			}
-			/* arg[1] == 'v' */
-			if (!*++argv)
-				bb_show_usage();
-			g.version = xatoul(*argv);
-			g.flags |= OPT_SET_VER;
-			continue;
-		}
-
-		if (!decode_arg(arg, &g))
+	for (;;) {
+		char *arg = *++argv;
+		if (!arg)
+			bb_show_usage();
+		if (arg[0] != '-' && arg[0] != '+' && arg[0] != '=')
 			break;
+
+		argv = decode_arg(argv, &g);
 	}
+	/* note: on loop exit, remaining argv[] is never empty */
 
 	/* run sanity checks on all the arguments given us */
-	if (!*argv)
-		bb_show_usage();
 	if ((g.flags & OPT_SET) && (g.flags & (OPT_ADD|OPT_REM)))
 		bb_error_msg_and_die("= is incompatible with - and +");
 	if (g.rf & g.af)
diff -urpN busybox-1.27.2/e2fsprogs/e2fs_lib.h busybox-1.28.0/e2fsprogs/e2fs_lib.h
--- busybox-1.27.2/e2fsprogs/e2fs_lib.h	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/e2fsprogs/e2fs_lib.h	2017-08-03 17:53:10.000000000 +0200
@@ -26,7 +26,7 @@ int fgetsetflags(const char *name, unsig
 #define fgetflags(name, flags) fgetsetflags(name, flags, 0)
 #define fsetflags(name, flags) fgetsetflags(name, NULL, flags)
 
-/* Must be 1 for compatibility with `int long_format'. */
+/* Must be 1 for compatibility with 'int long_format'. */
 #define PFOPT_LONG  1
 /* Print file attributes on an ext2 file system */
 void print_e2flags(FILE *f, unsigned long flags, unsigned options);
diff -urpN busybox-1.27.2/e2fsprogs/fsck.c busybox-1.28.0/e2fsprogs/fsck.c
--- busybox-1.27.2/e2fsprogs/fsck.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/e2fsprogs/fsck.c	2017-07-24 18:57:09.000000000 +0200
@@ -34,12 +34,12 @@
  * It doesn't guess filesystem types from on-disk format.
  */
 //config:config FSCK
-//config:	bool "fsck"
+//config:	bool "fsck (6.7 kb)"
 //config:	default y
 //config:	help
-//config:	  fsck is used to check and optionally repair one or more filesystems.
-//config:	  In actuality, fsck is simply a front-end for the various file system
-//config:	  checkers (fsck.fstype) available under Linux.
+//config:	fsck is used to check and optionally repair one or more filesystems.
+//config:	In actuality, fsck is simply a front-end for the various file system
+//config:	checkers (fsck.fstype) available under Linux.
 
 //applet:IF_FSCK(APPLET(fsck, BB_DIR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/e2fsprogs/lsattr.c busybox-1.28.0/e2fsprogs/lsattr.c
--- busybox-1.27.2/e2fsprogs/lsattr.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/e2fsprogs/lsattr.c	2017-08-08 14:08:06.000000000 +0200
@@ -10,13 +10,14 @@
  * Public License
  */
 //config:config LSATTR
-//config:	bool "lsattr"
+//config:	bool "lsattr (5 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  lsattr lists the file attributes on a second extended file system.
+//config:	lsattr lists the file attributes on a second extended file system.
 
-//applet:IF_LSATTR(APPLET(lsattr, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_LSATTR(APPLET_NOEXEC(lsattr, lsattr, BB_DIR_BIN, BB_SUID_DROP, lsattr))
+/* ls is NOEXEC, so we should be too! ;) */
 
 //kbuild:lib-$(CONFIG_LSATTR) += lsattr.o e2fs_lib.o
 
diff -urpN busybox-1.27.2/e2fsprogs/tune2fs.c busybox-1.28.0/e2fsprogs/tune2fs.c
--- busybox-1.27.2/e2fsprogs/tune2fs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/e2fsprogs/tune2fs.c	2017-08-17 13:50:45.000000000 +0200
@@ -7,13 +7,13 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config TUNE2FS
-//config:	bool "tune2fs"
+//config:	bool "tune2fs (4.4 kb)"
 //config:	default n  # off: it is too limited compared to upstream version
 //config:	help
-//config:	  tune2fs allows the system administrator to adjust various tunable
-//config:	  filesystem parameters on Linux ext2/ext3 filesystems.
+//config:	tune2fs allows the system administrator to adjust various tunable
+//config:	filesystem parameters on Linux ext2/ext3 filesystems.
 
-//applet:IF_TUNE2FS(APPLET(tune2fs, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_TUNE2FS(APPLET_NOEXEC(tune2fs, tune2fs, BB_DIR_SBIN, BB_SUID_DROP, tune2fs))
 
 //TODO alias to "tune2fs -L LABEL": //applet:IF_E2LABEL(APPLET_ODDNAME(e2label, tune2fs, BB_DIR_SBIN, BB_SUID_DROP, e2label))
 
@@ -71,8 +71,7 @@ int tune2fs_main(int argc UNUSED_PARAM,
 	struct ext2_super_block *sb;
 	int fd;
 
-	opt_complementary = "=1";
-	opts = getopt32(argv, "L:c:i:C:", &label, &str_c, &str_i, &str_C);
+	opts = getopt32(argv, "^" "L:c:i:C:" "\0" "=1", &label, &str_c, &str_i, &str_C);
 	if (!opts)
 		bb_show_usage();
 	argv += optind; // argv[0] -- device
diff -urpN busybox-1.27.2/editors/Config.src busybox-1.28.0/editors/Config.src
--- busybox-1.27.2/editors/Config.src	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/editors/Config.src	2017-07-24 18:57:09.000000000 +0200
@@ -12,7 +12,7 @@ config FEATURE_ALLOW_EXEC
 	default y
 	depends on VI || AWK
 	help
-	  Enables vi and awk features which allow user to execute
-	  shell commands (using system() C call).
+	Enables vi and awk features which allow user to execute
+	shell commands (using system() C call).
 
 endmenu
diff -urpN busybox-1.27.2/editors/awk.c busybox-1.28.0/editors/awk.c
--- busybox-1.27.2/editors/awk.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/editors/awk.c	2017-10-05 11:53:08.000000000 +0200
@@ -6,32 +6,30 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config AWK
-//config:	bool "awk"
+//config:	bool "awk (22 kb)"
 //config:	default y
 //config:	help
-//config:	  Awk is used as a pattern scanning and processing language. This is
-//config:	  the BusyBox implementation of that programming language.
+//config:	Awk is used as a pattern scanning and processing language.
 //config:
 //config:config FEATURE_AWK_LIBM
 //config:	bool "Enable math functions (requires libm)"
 //config:	default y
 //config:	depends on AWK
 //config:	help
-//config:	  Enable math functions of the Awk programming language.
-//config:	  NOTE: This will require libm to be present for linking.
+//config:	Enable math functions of the Awk programming language.
+//config:	NOTE: This requires libm to be present for linking.
 //config:
 //config:config FEATURE_AWK_GNU_EXTENSIONS
 //config:	bool "Enable a few GNU extensions"
 //config:	default y
 //config:	depends on AWK
 //config:	help
-//config:	  Enable a few features from gawk:
-//config:	  * command line option -e AWK_PROGRAM
-//config:	  * simultaneous use of -f and -e on the command line.
-//config:	    This enables the use of awk library files.
-//config:	    Ex: awk -f mylib.awk -e '{print myfunction($1);}' ...
+//config:	Enable a few features from gawk:
+//config:	* command line option -e AWK_PROGRAM
+//config:	* simultaneous use of -f and -e on the command line.
+//config:	This enables the use of awk library files.
+//config:	Example: awk -f mylib.awk -e '{print myfunction($1);}' ...
 
 //applet:IF_AWK(APPLET_NOEXEC(awk, awk, BB_DIR_USR_BIN, BB_SUID_DROP, awk))
 
@@ -71,7 +69,11 @@
 #endif
 
 
-#define OPTSTR_AWK \
+/* "+": stop on first non-option:
+ * $ awk 'BEGIN { for(i=1; i<ARGC; ++i) { print i ": " ARGV[i] }}' -argz
+ * 1: -argz
+ */
+#define OPTSTR_AWK "+" \
 	"F:v:*f:*" \
 	IF_FEATURE_AWK_GNU_EXTENSIONS("e:*") \
 	"W:"
@@ -231,7 +233,7 @@ typedef struct tsplitter_s {
  */
 #define	TC_LENGTH	(1 << 20)
 #define	TC_GETLINE	(1 << 21)
-#define	TC_FUNCDECL	(1 << 22)		/* `function' `func' */
+#define	TC_FUNCDECL	(1 << 22)		/* 'function' 'func' */
 #define	TC_BEGIN	(1 << 23)
 #define	TC_END		(1 << 24)
 #define	TC_EOF		(1 << 25)
diff -urpN busybox-1.27.2/editors/cmp.c busybox-1.28.0/editors/cmp.c
--- busybox-1.27.2/editors/cmp.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/editors/cmp.c	2017-10-05 11:53:08.000000000 +0200
@@ -6,21 +6,17 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
-/* BB_AUDIT SUSv3 (virtually) compliant -- uses nicer GNU format for -l. */
-/* http://www.opengroup.org/onlinepubs/007904975/utilities/cmp.html */
-
 //config:config CMP
-//config:	bool "cmp"
+//config:	bool "cmp (5.4 kb)"
 //config:	default y
 //config:	help
-//config:	  cmp is used to compare two files and returns the result
-//config:	  to standard output.
-
-//kbuild:lib-$(CONFIG_CMP) += cmp.o
+//config:	cmp is used to compare two files and returns the result
+//config:	to standard output.
 
 //applet:IF_CMP(APPLET(cmp, BB_DIR_USR_BIN, BB_SUID_DROP))
 
+//kbuild:lib-$(CONFIG_CMP) += cmp.o
+
 //usage:#define cmp_trivial_usage
 //usage:       "[-l] [-s] FILE1 [FILE2" IF_DESKTOP(" [SKIP1 [SKIP2]]") "]"
 //usage:#define cmp_full_usage "\n\n"
@@ -29,6 +25,9 @@
 //usage:     "\n		for all differing bytes"
 //usage:     "\n	-s	Quiet"
 
+/* BB_AUDIT SUSv3 (virtually) compliant -- uses nicer GNU format for -l. */
+/* http://www.opengroup.org/onlinepubs/007904975/utilities/cmp.html */
+
 #include "libbb.h"
 
 static const char fmt_eof[] ALIGN1 = "cmp: EOF on %s\n";
@@ -36,7 +35,7 @@ static const char fmt_differ[] ALIGN1 =
 // This fmt_l_opt uses gnu-isms.  SUSv3 would be "%.0s%.0s%"OFF_FMT"u %o %o\n"
 static const char fmt_l_opt[] ALIGN1 = "%.0s%.0s%"OFF_FMT"u %3o %3o\n";
 
-static const char opt_chars[] ALIGN1 = "sl";
+#define OPT_STR "sl"
 #define CMP_OPT_s (1<<0)
 #define CMP_OPT_l (1<<1)
 
@@ -52,11 +51,13 @@ int cmp_main(int argc UNUSED_PARAM, char
 	unsigned opt;
 	int retval = 0;
 
-	opt_complementary = "-1"
+	opt = getopt32(argv, "^"
+			OPT_STR
+			"\0" "-1"
 			IF_DESKTOP(":?4")
 			IF_NOT_DESKTOP(":?2")
-			":l--s:s--l";
-	opt = getopt32(argv, opt_chars);
+			":l--s:s--l"
+	);
 	argv += optind;
 
 	filename1 = *argv;
diff -urpN busybox-1.27.2/editors/diff.c busybox-1.28.0/editors/diff.c
--- busybox-1.27.2/editors/diff.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/editors/diff.c	2017-10-05 11:53:08.000000000 +0200
@@ -12,7 +12,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 /*
  * The following code uses an algorithm due to Harold Stone,
  * which finds a pair of longest identical subsequences in
@@ -75,14 +74,13 @@
  * 3*(number of k-candidates installed), typically about
  * 6n words for files of length n.
  */
-
 //config:config DIFF
-//config:	bool "diff"
+//config:	bool "diff (13 kb)"
 //config:	default y
 //config:	help
-//config:	  diff compares two files or directories and outputs the
-//config:	  differences between them in a form that can be given to
-//config:	  the patch command.
+//config:	diff compares two files or directories and outputs the
+//config:	differences between them in a form that can be given to
+//config:	the patch command.
 //config:
 //config:config FEATURE_DIFF_LONG_OPTIONS
 //config:	bool "Enable long options"
@@ -94,13 +92,13 @@
 //config:	default y
 //config:	depends on DIFF
 //config:	help
-//config:	  This option enables support for directory and subdirectory
-//config:	  comparison.
-
-//kbuild:lib-$(CONFIG_DIFF) += diff.o
+//config:	This option enables support for directory and subdirectory
+//config:	comparison.
 
 //applet:IF_DIFF(APPLET(diff, BB_DIR_USR_BIN, BB_SUID_DROP))
 
+//kbuild:lib-$(CONFIG_DIFF) += diff.o
+
 //usage:#define diff_trivial_usage
 //usage:       "[-abBdiNqrTstw] [-L LABEL] [-S FILE] [-U LINES] FILE1 FILE2"
 //usage:#define diff_full_usage "\n\n"
@@ -967,6 +965,11 @@ static const char diff_longopts[] ALIGN1
 	"starting-file\0"            Required_argument "S"
 	"minimal\0"                  No_argument       "d"
 	;
+# define GETOPT32 getopt32long
+# define LONGOPTS ,diff_longopts
+#else
+# define GETOPT32 getopt32
+# define LONGOPTS
 #endif
 
 int diff_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
@@ -979,11 +982,8 @@ int diff_main(int argc UNUSED_PARAM, cha
 	INIT_G();
 
 	/* exactly 2 params; collect multiple -L <label>; -U N */
-	opt_complementary = "=2";
-#if ENABLE_FEATURE_DIFF_LONG_OPTIONS
-	applet_long_options = diff_longopts;
-#endif
-	getopt32(argv, "abdiL:*NqrsS:tTU:+wupBE",
+	GETOPT32(argv, "^" "abdiL:*NqrsS:tTU:+wupBE" "\0" "=2"
+			LONGOPTS,
 			&L_arg, &s_start, &opt_U_context);
 	argv += optind;
 	while (L_arg)
diff -urpN busybox-1.27.2/editors/ed.c busybox-1.28.0/editors/ed.c
--- busybox-1.27.2/editors/ed.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/editors/ed.c	2017-08-03 17:53:10.000000000 +0200
@@ -6,20 +6,19 @@
  *
  * The "ed" built-in command (much simplified)
  */
-
 //config:config ED
-//config:	bool "ed"
+//config:	bool "ed (25 kb)"
 //config:	default y
 //config:	help
-//config:	  The original 1970's Unix text editor, from the days of teletypes.
-//config:	  Small, simple, evil. Part of SUSv3. If you're not already using
-//config:	  this, you don't need it.
+//config:	The original 1970's Unix text editor, from the days of teletypes.
+//config:	Small, simple, evil. Part of SUSv3. If you're not already using
+//config:	this, you don't need it.
 
 //kbuild:lib-$(CONFIG_ED) += ed.o
 
 //applet:IF_ED(APPLET(ed, BB_DIR_BIN, BB_SUID_DROP))
 
-//usage:#define ed_trivial_usage ""
+//usage:#define ed_trivial_usage "[FILE]"
 //usage:#define ed_full_usage ""
 
 #include "libbb.h"
@@ -32,7 +31,6 @@ typedef struct LINE {
 	char data[1];
 } LINE;
 
-
 #define searchString bb_common_bufsiz1
 
 enum {
@@ -71,22 +69,6 @@ struct globals {
 	SET_PTR_TO_GLOBALS(xzalloc(sizeof(G))); \
 } while (0)
 
-
-static void doCommands(void);
-static void subCommand(const char *cmd, int num1, int num2);
-static int getNum(const char **retcp, smallint *retHaveNum, int *retNum);
-static int setCurNum(int num);
-static void addLines(int num);
-static int insertLine(int num, const char *data, int len);
-static void deleteLines(int num1, int num2);
-static int printLines(int num1, int num2, int expandFlag);
-static int writeLines(const char *file, int num1, int num2);
-static int readLines(const char *file, int num);
-static int searchLines(const char *str, int num1, int num2);
-static LINE *findLine(int num);
-static int findString(const LINE *lp, const char * str, int len, int offset);
-
-
 static int bad_nums(int num1, int num2, const char *for_what)
 {
 	if ((num1 < 1) || (num2 > lastNum) || (num1 > num2)) {
@@ -96,632 +78,352 @@ static int bad_nums(int num1, int num2,
 	return 0;
 }
 
-
-static char *skip_blank(const char *cp)
+/*
+ * Return a pointer to the specified line number.
+ */
+static LINE *findLine(int num)
 {
-	while (isblank(*cp))
-		cp++;
-	return (char *)cp;
-}
+	LINE *lp;
+	int lnum;
 
+	if ((num < 1) || (num > lastNum)) {
+		bb_error_msg("line number %d does not exist", num);
+		return NULL;
+	}
 
-int ed_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
-int ed_main(int argc UNUSED_PARAM, char **argv)
-{
-	INIT_G();
+	if (curNum <= 0) {
+		curNum = 1;
+		curLine = lines.next;
+	}
 
-	bufSize = INITBUF_SIZE;
-	bufBase = xmalloc(bufSize);
-	bufPtr = bufBase;
-	lines.next = &lines;
-	lines.prev = &lines;
+	if (num == curNum)
+		return curLine;
 
-	if (argv[1]) {
-		fileName = xstrdup(argv[1]);
-		if (!readLines(fileName, 1)) {
-			return EXIT_SUCCESS;
-		}
-		if (lastNum)
-			setCurNum(1);
-		dirty = FALSE;
+	lp = curLine;
+	lnum = curNum;
+	if (num < (curNum / 2)) {
+		lp = lines.next;
+		lnum = 1;
+	} else if (num > ((curNum + lastNum) / 2)) {
+		lp = lines.prev;
+		lnum = lastNum;
 	}
 
-	doCommands();
-	return EXIT_SUCCESS;
+	while (lnum < num) {
+		lp = lp->next;
+		lnum++;
+	}
+
+	while (lnum > num) {
+		lp = lp->prev;
+		lnum--;
+	}
+	return lp;
 }
 
 /*
- * Read commands until we are told to stop.
+ * Search a line for the specified string starting at the specified
+ * offset in the line.  Returns the offset of the found string, or -1.
  */
-static void doCommands(void)
+static int findString(const LINE *lp, const char *str, int len, int offset)
 {
-	const char *cp;
-	char *endbuf, buf[USERSIZE];
-	int len, num1, num2;
-	smallint have1, have2;
+	int left;
+	const char *cp, *ncp;
 
-	while (TRUE) {
-		/* Returns:
-		 * -1 on read errors or EOF, or on bare Ctrl-D.
-		 * 0  on ctrl-C,
-		 * >0 length of input string, including terminating '\n'
-		 */
-		len = read_line_input(NULL, ": ", buf, sizeof(buf), /*timeout*/ -1);
-		if (len <= 0)
-			return;
-		endbuf = &buf[len - 1];
-		while ((endbuf > buf) && isblank(endbuf[-1]))
-			endbuf--;
-		*endbuf = '\0';
+	cp = &lp->data[offset];
+	left = lp->len - offset - len;
 
-		cp = skip_blank(buf);
-		have1 = FALSE;
-		have2 = FALSE;
+	while (left >= 0) {
+		ncp = memchr(cp, str[0], left + 1);
+		if (ncp == NULL)
+			return -1;
+		left -= (ncp - cp);
+		cp = ncp;
+		if (memcmp(cp, str, len) == 0)
+			return (cp - lp->data);
+		cp++;
+		left--;
+	}
 
-		if ((curNum == 0) && (lastNum > 0)) {
-			curNum = 1;
-			curLine = lines.next;
-		}
+	return -1;
+}
 
-		if (!getNum(&cp, &have1, &num1))
-			continue;
+/*
+ * Search for a line which contains the specified string.
+ * If the string is "", then the previously searched for string
+ * is used.  The currently searched for string is saved for future use.
+ * Returns the line number which matches, or 0 if there was no match
+ * with an error printed.
+ */
+static NOINLINE int searchLines(const char *str, int num1, int num2)
+{
+	const LINE *lp;
+	int len;
 
-		cp = skip_blank(cp);
+	if (bad_nums(num1, num2, "search"))
+		return 0;
 
-		if (*cp == ',') {
-			cp++;
-			if (!getNum(&cp, &have2, &num2))
-				continue;
-			if (!have1)
-				num1 = 1;
-			if (!have2)
-				num2 = lastNum;
-			have1 = TRUE;
-			have2 = TRUE;
+	if (*str == '\0') {
+		if (searchString[0] == '\0') {
+			bb_error_msg("no previous search string");
+			return 0;
 		}
-		if (!have1)
-			num1 = curNum;
-		if (!have2)
-			num2 = num1;
+		str = searchString;
+	}
 
-		switch (*cp++) {
-		case 'a':
-			addLines(num1 + 1);
-			break;
+	if (str != searchString)
+		strcpy(searchString, str);
 
-		case 'c':
-			deleteLines(num1, num2);
-			addLines(num1);
-			break;
+	len = strlen(str);
 
-		case 'd':
-			deleteLines(num1, num2);
-			break;
+	lp = findLine(num1);
+	if (lp == NULL)
+		return 0;
 
-		case 'f':
-			if (*cp && !isblank(*cp)) {
-				bb_error_msg("bad file command");
-				break;
-			}
-			cp = skip_blank(cp);
-			if (*cp == '\0') {
-				if (fileName)
-					printf("\"%s\"\n", fileName);
-				else
-					puts("No file name");
-				break;
-			}
-			free(fileName);
-			fileName = xstrdup(cp);
-			break;
+	while (num1 <= num2) {
+		if (findString(lp, str, len, 0) >= 0)
+			return num1;
+		num1++;
+		lp = lp->next;
+	}
 
-		case 'i':
-			addLines(num1);
-			break;
+	bb_error_msg("can't find string \"%s\"", str);
+	return 0;
+}
 
-		case 'k':
-			cp = skip_blank(cp);
-			if ((*cp < 'a') || (*cp > 'z') || cp[1]) {
-				bb_error_msg("bad mark name");
-				break;
-			}
-			marks[*cp - 'a'] = num2;
-			break;
+/*
+ * Parse a line number argument if it is present.  This is a sum
+ * or difference of numbers, ".", "$", "'c", or a search string.
+ * Returns pointer which stopped the scan if successful
+ * (whether or not there was a number).
+ * Returns NULL if there was a parsing error, with a message output.
+ * Whether there was a number is returned indirectly, as is the number.
+ */
+static const char* getNum(const char *cp, smallint *retHaveNum, int *retNum)
+{
+	char *endStr, str[USERSIZE];
+	int value, num;
+	smallint haveNum, minus;
 
-		case 'l':
-			printLines(num1, num2, TRUE);
-			break;
+	value = 0;
+	haveNum = FALSE;
+	minus = 0;
 
-		case 'p':
-			printLines(num1, num2, FALSE);
-			break;
+	while (TRUE) {
+		cp = skip_whitespace(cp);
 
-		case 'q':
-			cp = skip_blank(cp);
-			if (have1 || *cp) {
-				bb_error_msg("bad quit command");
+		switch (*cp) {
+			case '.':
+				haveNum = TRUE;
+				num = curNum;
+				cp++;
 				break;
-			}
-			if (!dirty)
-				return;
-			len = read_line_input(NULL, "Really quit? ", buf, 16, /*timeout*/ -1);
-			/* read error/EOF - no way to continue */
-			if (len < 0)
-				return;
-			cp = skip_blank(buf);
-			if ((*cp | 0x20) == 'y') /* Y or y */
-				return;
-			break;
 
-		case 'r':
-			if (*cp && !isblank(*cp)) {
-				bb_error_msg("bad read command");
-				break;
-			}
-			cp = skip_blank(cp);
-			if (*cp == '\0') {
-				bb_error_msg("no file name");
-				break;
-			}
-			if (!have1)
-				num1 = lastNum;
-			if (readLines(cp, num1 + 1))
+			case '$':
+				haveNum = TRUE;
+				num = lastNum;
+				cp++;
 				break;
-			if (fileName == NULL)
-				fileName = xstrdup(cp);
-			break;
-
-		case 's':
-			subCommand(cp, num1, num2);
-			break;
 
-		case 'w':
-			if (*cp && !isblank(*cp)) {
-				bb_error_msg("bad write command");
-				break;
-			}
-			cp = skip_blank(cp);
-			if (!have1) {
-				num1 = 1;
-				num2 = lastNum;
-			}
-			if (*cp == '\0')
-				cp = fileName;
-			if (cp == NULL) {
-				bb_error_msg("no file name specified");
+			case '\'':
+				cp++;
+				if ((unsigned)(*cp - 'a') >= 26) {
+					bb_error_msg("bad mark name");
+					return NULL;
+				}
+				haveNum = TRUE;
+				num = marks[(unsigned)(*cp - 'a')];
+				cp++;
 				break;
-			}
-			writeLines(cp, num1, num2);
-			break;
 
-		case 'z':
-			switch (*cp) {
-			case '-':
-				printLines(curNum - 21, curNum, FALSE);
-				break;
-			case '.':
-				printLines(curNum - 11, curNum + 10, FALSE);
+			case '/':
+				strcpy(str, ++cp);
+				endStr = strchr(str, '/');
+				if (endStr) {
+					*endStr++ = '\0';
+					cp += (endStr - str);
+				} else
+					cp = "";
+				num = searchLines(str, curNum, lastNum);
+				if (num == 0)
+					return NULL;
+				haveNum = TRUE;
 				break;
+
 			default:
-				printLines(curNum, curNum + 21, FALSE);
+				if (!isdigit(*cp)) {
+					*retHaveNum = haveNum;
+					*retNum = value;
+					return cp;
+				}
+				num = 0;
+				while (isdigit(*cp))
+					num = num * 10 + *cp++ - '0';
+				haveNum = TRUE;
 				break;
-			}
-			break;
+		}
 
-		case '.':
-			if (have1) {
-				bb_error_msg("no arguments allowed");
-				break;
-			}
-			printLines(curNum, curNum, FALSE);
-			break;
+		value += (minus ? -num : num);
 
-		case '-':
-			if (setCurNum(curNum - 1))
-				printLines(curNum, curNum, FALSE);
-			break;
+		cp = skip_whitespace(cp);
 
-		case '=':
-			printf("%d\n", num1);
-			break;
-		case '\0':
-			if (have1) {
-				printLines(num2, num2, FALSE);
+		switch (*cp) {
+			case '-':
+				minus = 1;
+				cp++;
 				break;
-			}
-			if (setCurNum(curNum + 1))
-				printLines(curNum, curNum, FALSE);
-			break;
 
-		default:
-			bb_error_msg("unimplemented command");
-			break;
+			case '+':
+				minus = 0;
+				cp++;
+				break;
+
+			default:
+				*retHaveNum = haveNum;
+				*retNum = value;
+				return cp;
 		}
 	}
 }
 
-
 /*
- * Do the substitute command.
- * The current line is set to the last substitution done.
+ * Set the current line number.
+ * Returns TRUE if successful.
  */
-static void subCommand(const char *cmd, int num1, int num2)
+static int setCurNum(int num)
 {
-	char *cp, *oldStr, *newStr, buf[USERSIZE];
-	int delim, oldLen, newLen, deltaLen, offset;
-	LINE *lp, *nlp;
-	int globalFlag, printFlag, didSub, needPrint;
-
-	if (bad_nums(num1, num2, "substitute"))
-		return;
+	LINE *lp;
 
-	globalFlag = FALSE;
-	printFlag = FALSE;
-	didSub = FALSE;
-	needPrint = FALSE;
+	lp = findLine(num);
+	if (lp == NULL)
+		return FALSE;
+	curNum = num;
+	curLine = lp;
+	return TRUE;
+}
 
-	/*
-	 * Copy the command so we can modify it.
-	 */
-	strcpy(buf, cmd);
-	cp = buf;
+/*
+ * Insert a new line with the specified text.
+ * The line is inserted so as to become the specified line,
+ * thus pushing any existing and further lines down one.
+ * The inserted line is also set to become the current line.
+ * Returns TRUE if successful.
+ */
+static int insertLine(int num, const char *data, int len)
+{
+	LINE *newLp, *lp;
 
-	if (isblank(*cp) || (*cp == '\0')) {
-		bb_error_msg("bad delimiter for substitute");
-		return;
+	if ((num < 1) || (num > lastNum + 1)) {
+		bb_error_msg("inserting at bad line number");
+		return FALSE;
 	}
 
-	delim = *cp++;
-	oldStr = cp;
+	newLp = xmalloc(sizeof(LINE) + len - 1);
 
-	cp = strchr(cp, delim);
-	if (cp == NULL) {
-		bb_error_msg("missing 2nd delimiter for substitute");
-		return;
+	memcpy(newLp->data, data, len);
+	newLp->len = len;
+
+	if (num > lastNum)
+		lp = &lines;
+	else {
+		lp = findLine(num);
+		if (lp == NULL) {
+			free((char *) newLp);
+			return FALSE;
+		}
 	}
 
-	*cp++ = '\0';
+	newLp->next = lp;
+	newLp->prev = lp->prev;
+	lp->prev->next = newLp;
+	lp->prev = newLp;
 
-	newStr = cp;
-	cp = strchr(cp, delim);
+	lastNum++;
+	dirty = TRUE;
+	return setCurNum(num);
+}
 
-	if (cp)
-		*cp++ = '\0';
-	else
-		cp = (char*)"";
+/*
+ * Add lines which are typed in by the user.
+ * The lines are inserted just before the specified line number.
+ * The lines are terminated by a line containing a single dot (ugly!),
+ * or by an end of file.
+ */
+static void addLines(int num)
+{
+	int len;
+	char buf[USERSIZE + 1];
 
-	while (*cp) switch (*cp++) {
-		case 'g':
-			globalFlag = TRUE;
-			break;
-		case 'p':
-			printFlag = TRUE;
-			break;
-		default:
-			bb_error_msg("unknown option for substitute");
+	while (1) {
+		/* Returns:
+		 * -1 on read errors or EOF, or on bare Ctrl-D.
+		 * 0  on ctrl-C,
+		 * >0 length of input string, including terminating '\n'
+		 */
+		len = read_line_input(NULL, "", buf, sizeof(buf));
+		if (len <= 0) {
+			/* Previously, ctrl-C was exiting to shell.
+			 * Now we exit to ed prompt. Is in important? */
+			return;
+		}
+		if (buf[0] == '.' && buf[1] == '\n' && buf[2] == '\0')
+			return;
+		if (!insertLine(num++, buf, len))
 			return;
 	}
+}
 
-	if (*oldStr == '\0') {
-		if (searchString[0] == '\0') {
-			bb_error_msg("no previous search string");
-			return;
-		}
-		oldStr = searchString;
+/*
+ * Read lines from a file at the specified line number.
+ * Returns TRUE if the file was successfully read.
+ */
+static int readLines(const char *file, int num)
+{
+	int fd, cc;
+	int len, lineCount, charCount;
+	char *cp;
+
+	if ((num < 1) || (num > lastNum + 1)) {
+		bb_error_msg("bad line for read");
+		return FALSE;
 	}
 
-	if (oldStr != searchString)
-		strcpy(searchString, oldStr);
+	fd = open(file, 0);
+	if (fd < 0) {
+		bb_simple_perror_msg(file);
+		return FALSE;
+	}
 
-	lp = findLine(num1);
-	if (lp == NULL)
-		return;
+	bufPtr = bufBase;
+	bufUsed = 0;
+	lineCount = 0;
+	charCount = 0;
+	cc = 0;
 
-	oldLen = strlen(oldStr);
-	newLen = strlen(newStr);
-	deltaLen = newLen - oldLen;
-	offset = 0;
-	nlp = NULL;
+	printf("\"%s\", ", file);
+	fflush_all();
 
-	while (num1 <= num2) {
-		offset = findString(lp, oldStr, oldLen, offset);
+	do {
+		cp = memchr(bufPtr, '\n', bufUsed);
 
-		if (offset < 0) {
-			if (needPrint) {
-				printLines(num1, num1, FALSE);
-				needPrint = FALSE;
+		if (cp) {
+			len = (cp - bufPtr) + 1;
+			if (!insertLine(num, bufPtr, len)) {
+				close(fd);
+				return FALSE;
 			}
-			offset = 0;
-			lp = lp->next;
-			num1++;
+			bufPtr += len;
+			bufUsed -= len;
+			charCount += len;
+			lineCount++;
+			num++;
 			continue;
 		}
 
-		needPrint = printFlag;
-		didSub = TRUE;
-		dirty = TRUE;
-
-		/*
-		 * If the replacement string is the same size or shorter
-		 * than the old string, then the substitution is easy.
-		 */
-		if (deltaLen <= 0) {
-			memcpy(&lp->data[offset], newStr, newLen);
-			if (deltaLen) {
-				memcpy(&lp->data[offset + newLen],
-					&lp->data[offset + oldLen],
-					lp->len - offset - oldLen);
-
-				lp->len += deltaLen;
-			}
-			offset += newLen;
-			if (globalFlag)
-				continue;
-			if (needPrint) {
-				printLines(num1, num1, FALSE);
-				needPrint = FALSE;
-			}
-			lp = lp->next;
-			num1++;
-			continue;
-		}
-
-		/*
-		 * The new string is larger, so allocate a new line
-		 * structure and use that.  Link it in place of
-		 * the old line structure.
-		 */
-		nlp = xmalloc(sizeof(LINE) + lp->len + deltaLen);
-
-		nlp->len = lp->len + deltaLen;
-
-		memcpy(nlp->data, lp->data, offset);
-		memcpy(&nlp->data[offset], newStr, newLen);
-		memcpy(&nlp->data[offset + newLen],
-			&lp->data[offset + oldLen],
-			lp->len - offset - oldLen);
-
-		nlp->next = lp->next;
-		nlp->prev = lp->prev;
-		nlp->prev->next = nlp;
-		nlp->next->prev = nlp;
-
-		if (curLine == lp)
-			curLine = nlp;
-
-		free(lp);
-		lp = nlp;
-
-		offset += newLen;
-
-		if (globalFlag)
-			continue;
-
-		if (needPrint) {
-			printLines(num1, num1, FALSE);
-			needPrint = FALSE;
-		}
-
-		lp = lp->next;
-		num1++;
-	}
-
-	if (!didSub)
-		bb_error_msg("no substitutions found for \"%s\"", oldStr);
-}
-
-
-/*
- * Search a line for the specified string starting at the specified
- * offset in the line.  Returns the offset of the found string, or -1.
- */
-static int findString(const LINE *lp, const char *str, int len, int offset)
-{
-	int left;
-	const char *cp, *ncp;
-
-	cp = &lp->data[offset];
-	left = lp->len - offset;
-
-	while (left >= len) {
-		ncp = memchr(cp, *str, left);
-		if (ncp == NULL)
-			return -1;
-		left -= (ncp - cp);
-		if (left < len)
-			return -1;
-		cp = ncp;
-		if (memcmp(cp, str, len) == 0)
-			return (cp - lp->data);
-		cp++;
-		left--;
-	}
-
-	return -1;
-}
-
-
-/*
- * Add lines which are typed in by the user.
- * The lines are inserted just before the specified line number.
- * The lines are terminated by a line containing a single dot (ugly!),
- * or by an end of file.
- */
-static void addLines(int num)
-{
-	int len;
-	char buf[USERSIZE + 1];
-
-	while (1) {
-		/* Returns:
-		 * -1 on read errors or EOF, or on bare Ctrl-D.
-		 * 0  on ctrl-C,
-		 * >0 length of input string, including terminating '\n'
-		 */
-		len = read_line_input(NULL, "", buf, sizeof(buf), /*timeout*/ -1);
-		if (len <= 0) {
-			/* Previously, ctrl-C was exiting to shell.
-			 * Now we exit to ed prompt. Is in important? */
-			return;
-		}
-		if ((buf[0] == '.') && (buf[1] == '\n') && (buf[2] == '\0'))
-			return;
-		if (!insertLine(num++, buf, len))
-			return;
-	}
-}
-
-
-/*
- * Parse a line number argument if it is present.  This is a sum
- * or difference of numbers, '.', '$', 'x, or a search string.
- * Returns TRUE if successful (whether or not there was a number).
- * Returns FALSE if there was a parsing error, with a message output.
- * Whether there was a number is returned indirectly, as is the number.
- * The character pointer which stopped the scan is also returned.
- */
-static int getNum(const char **retcp, smallint *retHaveNum, int *retNum)
-{
-	const char *cp;
-	char *endStr, str[USERSIZE];
-	int value, num;
-	smallint haveNum, minus;
-
-	cp = *retcp;
-	value = 0;
-	haveNum = FALSE;
-	minus = 0;
-
-	while (TRUE) {
-		cp = skip_blank(cp);
-
-		switch (*cp) {
-			case '.':
-				haveNum = TRUE;
-				num = curNum;
-				cp++;
-				break;
-
-			case '$':
-				haveNum = TRUE;
-				num = lastNum;
-				cp++;
-				break;
-
-			case '\'':
-				cp++;
-				if ((*cp < 'a') || (*cp > 'z')) {
-					bb_error_msg("bad mark name");
-					return FALSE;
-				}
-				haveNum = TRUE;
-				num = marks[*cp++ - 'a'];
-				break;
-
-			case '/':
-				strcpy(str, ++cp);
-				endStr = strchr(str, '/');
-				if (endStr) {
-					*endStr++ = '\0';
-					cp += (endStr - str);
-				} else
-					cp = "";
-				num = searchLines(str, curNum, lastNum);
-				if (num == 0)
-					return FALSE;
-				haveNum = TRUE;
-				break;
-
-			default:
-				if (!isdigit(*cp)) {
-					*retcp = cp;
-					*retHaveNum = haveNum;
-					*retNum = value;
-					return TRUE;
-				}
-				num = 0;
-				while (isdigit(*cp))
-					num = num * 10 + *cp++ - '0';
-				haveNum = TRUE;
-				break;
-		}
-
-		value += (minus ? -num : num);
-
-		cp = skip_blank(cp);
-
-		switch (*cp) {
-			case '-':
-				minus = 1;
-				cp++;
-				break;
-
-			case '+':
-				minus = 0;
-				cp++;
-				break;
-
-			default:
-				*retcp = cp;
-				*retHaveNum = haveNum;
-				*retNum = value;
-				return TRUE;
-		}
-	}
-}
-
-
-/*
- * Read lines from a file at the specified line number.
- * Returns TRUE if the file was successfully read.
- */
-static int readLines(const char *file, int num)
-{
-	int fd, cc;
-	int len, lineCount, charCount;
-	char *cp;
-
-	if ((num < 1) || (num > lastNum + 1)) {
-		bb_error_msg("bad line for read");
-		return FALSE;
-	}
-
-	fd = open(file, 0);
-	if (fd < 0) {
-		bb_simple_perror_msg(file);
-		return FALSE;
-	}
-
-	bufPtr = bufBase;
-	bufUsed = 0;
-	lineCount = 0;
-	charCount = 0;
-	cc = 0;
-
-	printf("\"%s\", ", file);
-	fflush_all();
-
-	do {
-		cp = memchr(bufPtr, '\n', bufUsed);
-
-		if (cp) {
-			len = (cp - bufPtr) + 1;
-			if (!insertLine(num, bufPtr, len)) {
-				close(fd);
-				return FALSE;
-			}
-			bufPtr += len;
-			bufUsed -= len;
-			charCount += len;
-			lineCount++;
-			num++;
-			continue;
-		}
-
-		if (bufPtr != bufBase) {
-			memcpy(bufBase, bufPtr, bufUsed);
-			bufPtr = bufBase + bufUsed;
-		}
+		if (bufPtr != bufBase) {
+			memcpy(bufBase, bufPtr, bufUsed);
+			bufPtr = bufBase + bufUsed;
+		}
 
 		if (bufUsed >= bufSize) {
 			len = (bufSize * 3) / 2;
@@ -759,7 +461,6 @@ static int readLines(const char *file, i
 	return TRUE;
 }
 
-
 /*
  * Write the specified lines out to the specified file.
  * Returns TRUE if successful, or FALSE on an error with a message output.
@@ -810,7 +511,6 @@ static int writeLines(const char *file,
 	return TRUE;
 }
 
-
 /*
  * Print lines in a specified range.
  * The last line printed becomes the current line.
@@ -862,51 +562,8 @@ static int printLines(int num1, int num2
 	return TRUE;
 }
 
-
 /*
- * Insert a new line with the specified text.
- * The line is inserted so as to become the specified line,
- * thus pushing any existing and further lines down one.
- * The inserted line is also set to become the current line.
- * Returns TRUE if successful.
- */
-static int insertLine(int num, const char *data, int len)
-{
-	LINE *newLp, *lp;
-
-	if ((num < 1) || (num > lastNum + 1)) {
-		bb_error_msg("inserting at bad line number");
-		return FALSE;
-	}
-
-	newLp = xmalloc(sizeof(LINE) + len - 1);
-
-	memcpy(newLp->data, data, len);
-	newLp->len = len;
-
-	if (num > lastNum)
-		lp = &lines;
-	else {
-		lp = findLine(num);
-		if (lp == NULL) {
-			free((char *) newLp);
-			return FALSE;
-		}
-	}
-
-	newLp->next = lp;
-	newLp->prev = lp->prev;
-	lp->prev->next = newLp;
-	lp->prev = newLp;
-
-	lastNum++;
-	dirty = TRUE;
-	return setCurNum(num);
-}
-
-
-/*
- * Delete lines from the given range.
+ * Delete lines from the given range.
  */
 static void deleteLines(int num1, int num2)
 {
@@ -946,107 +603,414 @@ static void deleteLines(int num1, int nu
 	dirty = TRUE;
 }
 
-
 /*
- * Search for a line which contains the specified string.
- * If the string is "", then the previously searched for string
- * is used.  The currently searched for string is saved for future use.
- * Returns the line number which matches, or 0 if there was no match
- * with an error printed.
+ * Do the substitute command.
+ * The current line is set to the last substitution done.
  */
-static NOINLINE int searchLines(const char *str, int num1, int num2)
+static void subCommand(const char *cmd, int num1, int num2)
 {
-	const LINE *lp;
-	int len;
+	char *cp, *oldStr, *newStr, buf[USERSIZE];
+	int delim, oldLen, newLen, deltaLen, offset;
+	LINE *lp, *nlp;
+	int globalFlag, printFlag, didSub, needPrint;
 
-	if (bad_nums(num1, num2, "search"))
-		return 0;
+	if (bad_nums(num1, num2, "substitute"))
+		return;
 
-	if (*str == '\0') {
+	globalFlag = FALSE;
+	printFlag = FALSE;
+	didSub = FALSE;
+	needPrint = FALSE;
+
+	/*
+	 * Copy the command so we can modify it.
+	 */
+	strcpy(buf, cmd);
+	cp = buf;
+
+	if (isblank(*cp) || (*cp == '\0')) {
+		bb_error_msg("bad delimiter for substitute");
+		return;
+	}
+
+	delim = *cp++;
+	oldStr = cp;
+
+	cp = strchr(cp, delim);
+	if (cp == NULL) {
+		bb_error_msg("missing 2nd delimiter for substitute");
+		return;
+	}
+
+	*cp++ = '\0';
+
+	newStr = cp;
+	cp = strchr(cp, delim);
+
+	if (cp)
+		*cp++ = '\0';
+	else
+		cp = (char*)"";
+
+	while (*cp) switch (*cp++) {
+		case 'g':
+			globalFlag = TRUE;
+			break;
+		case 'p':
+			printFlag = TRUE;
+			break;
+		default:
+			bb_error_msg("unknown option for substitute");
+			return;
+	}
+
+	if (*oldStr == '\0') {
 		if (searchString[0] == '\0') {
 			bb_error_msg("no previous search string");
-			return 0;
+			return;
 		}
-		str = searchString;
+		oldStr = searchString;
 	}
 
-	if (str != searchString)
-		strcpy(searchString, str);
-
-	len = strlen(str);
+	if (oldStr != searchString)
+		strcpy(searchString, oldStr);
 
 	lp = findLine(num1);
 	if (lp == NULL)
-		return 0;
+		return;
+
+	oldLen = strlen(oldStr);
+	newLen = strlen(newStr);
+	deltaLen = newLen - oldLen;
+	offset = 0;
+	nlp = NULL;
 
 	while (num1 <= num2) {
-		if (findString(lp, str, len, 0) >= 0)
-			return num1;
-		num1++;
+		offset = findString(lp, oldStr, oldLen, offset);
+
+		if (offset < 0) {
+			if (needPrint) {
+				printLines(num1, num1, FALSE);
+				needPrint = FALSE;
+			}
+			offset = 0;
+			lp = lp->next;
+			num1++;
+			continue;
+		}
+
+		needPrint = printFlag;
+		didSub = TRUE;
+		dirty = TRUE;
+
+		/*
+		 * If the replacement string is the same size or shorter
+		 * than the old string, then the substitution is easy.
+		 */
+		if (deltaLen <= 0) {
+			memcpy(&lp->data[offset], newStr, newLen);
+			if (deltaLen) {
+				memcpy(&lp->data[offset + newLen],
+					&lp->data[offset + oldLen],
+					lp->len - offset - oldLen);
+
+				lp->len += deltaLen;
+			}
+			offset += newLen;
+			if (globalFlag)
+				continue;
+			if (needPrint) {
+				printLines(num1, num1, FALSE);
+				needPrint = FALSE;
+			}
+			lp = lp->next;
+			num1++;
+			continue;
+		}
+
+		/*
+		 * The new string is larger, so allocate a new line
+		 * structure and use that.  Link it in place of
+		 * the old line structure.
+		 */
+		nlp = xmalloc(sizeof(LINE) + lp->len + deltaLen);
+
+		nlp->len = lp->len + deltaLen;
+
+		memcpy(nlp->data, lp->data, offset);
+		memcpy(&nlp->data[offset], newStr, newLen);
+		memcpy(&nlp->data[offset + newLen],
+			&lp->data[offset + oldLen],
+			lp->len - offset - oldLen);
+
+		nlp->next = lp->next;
+		nlp->prev = lp->prev;
+		nlp->prev->next = nlp;
+		nlp->next->prev = nlp;
+
+		if (curLine == lp)
+			curLine = nlp;
+
+		free(lp);
+		lp = nlp;
+
+		offset += newLen;
+
+		if (globalFlag)
+			continue;
+
+		if (needPrint) {
+			printLines(num1, num1, FALSE);
+			needPrint = FALSE;
+		}
+
 		lp = lp->next;
+		num1++;
 	}
 
-	bb_error_msg("can't find string \"%s\"", str);
-	return 0;
+	if (!didSub)
+		bb_error_msg("no substitutions found for \"%s\"", oldStr);
 }
 
-
 /*
- * Return a pointer to the specified line number.
+ * Read commands until we are told to stop.
  */
-static LINE *findLine(int num)
+static void doCommands(void)
 {
-	LINE *lp;
-	int lnum;
+	while (TRUE) {
+		char buf[USERSIZE];
+		const char *cp;
+		int len;
+		int n, num1, num2;
+		smallint h, have1, have2;
 
-	if ((num < 1) || (num > lastNum)) {
-		bb_error_msg("line number %d does not exist", num);
-		return NULL;
-	}
+		/* Returns:
+		 * -1 on read errors or EOF, or on bare Ctrl-D.
+		 * 0  on ctrl-C,
+		 * >0 length of input string, including terminating '\n'
+		 */
+		len = read_line_input(NULL, ": ", buf, sizeof(buf));
+		if (len <= 0)
+			return;
+		while (len && isspace(buf[--len]))
+			buf[len] = '\0';
 
-	if (curNum <= 0) {
-		curNum = 1;
-		curLine = lines.next;
-	}
+		if ((curNum == 0) && (lastNum > 0)) {
+			curNum = 1;
+			curLine = lines.next;
+		}
 
-	if (num == curNum)
-		return curLine;
+		have1 = FALSE;
+		have2 = FALSE;
+		/* Don't pass &haveN, &numN to getNum() since this forces
+		 * compiler to keep them on stack, not in registers,
+		 * which is usually quite suboptimal.
+		 * Using intermediate variables shrinks code by ~150 bytes.
+		 */
+		cp = getNum(skip_whitespace(buf), &h, &n);
+		if (!cp)
+			continue;
+		have1 = h;
+		num1 = n;
+		cp = skip_whitespace(cp);
+		if (*cp == ',') {
+			cp = getNum(cp + 1, &h, &n);
+			if (!cp)
+				continue;
+			num2 = n;
+			if (!have1)
+				num1 = 1;
+			if (!h)
+				num2 = lastNum;
+			have1 = TRUE;
+			have2 = TRUE;
+		}
+		if (!have1)
+			num1 = curNum;
+		if (!have2)
+			num2 = num1;
 
-	lp = curLine;
-	lnum = curNum;
-	if (num < (curNum / 2)) {
-		lp = lines.next;
-		lnum = 1;
-	} else if (num > ((curNum + lastNum) / 2)) {
-		lp = lines.prev;
-		lnum = lastNum;
-	}
+		switch (*cp++) {
+		case 'a':
+			addLines(num1 + 1);
+			break;
 
-	while (lnum < num) {
-		lp = lp->next;
-		lnum++;
-	}
+		case 'c':
+			deleteLines(num1, num2);
+			addLines(num1);
+			break;
 
-	while (lnum > num) {
-		lp = lp->prev;
-		lnum--;
+		case 'd':
+			deleteLines(num1, num2);
+			break;
+
+		case 'f':
+			if (*cp != '\0' && *cp != ' ') {
+				bb_error_msg("bad file command");
+				break;
+			}
+			cp = skip_whitespace(cp);
+			if (*cp == '\0') {
+				if (fileName)
+					printf("\"%s\"\n", fileName);
+				else
+					puts("No file name");
+				break;
+			}
+			free(fileName);
+			fileName = xstrdup(cp);
+			break;
+
+		case 'i':
+			if (!have1 && lastNum == 0)
+				num1 = 1;
+			addLines(num1);
+			break;
+
+		case 'k':
+			cp = skip_whitespace(cp);
+			if ((unsigned)(*cp - 'a') >= 26 || cp[1]) {
+				bb_error_msg("bad mark name");
+				break;
+			}
+			marks[(unsigned)(*cp - 'a')] = num2;
+			break;
+
+		case 'l':
+			printLines(num1, num2, TRUE);
+			break;
+
+		case 'p':
+			printLines(num1, num2, FALSE);
+			break;
+
+		case 'q':
+			cp = skip_whitespace(cp);
+			if (have1 || *cp) {
+				bb_error_msg("bad quit command");
+				break;
+			}
+			if (!dirty)
+				return;
+			len = read_line_input(NULL, "Really quit? ", buf, 16);
+			/* read error/EOF - no way to continue */
+			if (len < 0)
+				return;
+			cp = skip_whitespace(buf);
+			if ((*cp | 0x20) == 'y') /* Y or y */
+				return;
+			break;
+
+		case 'r':
+			if (*cp != '\0' && *cp != ' ') {
+				bb_error_msg("bad read command");
+				break;
+			}
+			cp = skip_whitespace(cp);
+			if (*cp == '\0') {
+				bb_error_msg("no file name");
+				break;
+			}
+			if (!have1)
+				num1 = lastNum;
+			if (readLines(cp, num1 + 1))
+				break;
+			if (fileName == NULL)
+				fileName = xstrdup(cp);
+			break;
+
+		case 's':
+			subCommand(cp, num1, num2);
+			break;
+
+		case 'w':
+			if (*cp != '\0' && *cp != ' ') {
+				bb_error_msg("bad write command");
+				break;
+			}
+			cp = skip_whitespace(cp);
+			if (*cp == '\0') {
+				cp = fileName;
+				if (!cp) {
+					bb_error_msg("no file name specified");
+					break;
+				}
+			}
+			if (!have1) {
+				num1 = 1;
+				num2 = lastNum;
+				dirty = FALSE;
+			}
+			writeLines(cp, num1, num2);
+			break;
+
+		case 'z':
+			switch (*cp) {
+			case '-':
+				printLines(curNum - 21, curNum, FALSE);
+				break;
+			case '.':
+				printLines(curNum - 11, curNum + 10, FALSE);
+				break;
+			default:
+				printLines(curNum, curNum + 21, FALSE);
+				break;
+			}
+			break;
+
+		case '.':
+			if (have1) {
+				bb_error_msg("no arguments allowed");
+				break;
+			}
+			printLines(curNum, curNum, FALSE);
+			break;
+
+		case '-':
+			if (setCurNum(curNum - 1))
+				printLines(curNum, curNum, FALSE);
+			break;
+
+		case '=':
+			printf("%d\n", num1);
+			break;
+		case '\0':
+			if (have1) {
+				printLines(num2, num2, FALSE);
+				break;
+			}
+			if (setCurNum(curNum + 1))
+				printLines(curNum, curNum, FALSE);
+			break;
+
+		default:
+			bb_error_msg("unimplemented command");
+			break;
+		}
 	}
-	return lp;
 }
 
-
-/*
- * Set the current line number.
- * Returns TRUE if successful.
- */
-static int setCurNum(int num)
+int ed_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
+int ed_main(int argc UNUSED_PARAM, char **argv)
 {
-	LINE *lp;
+	INIT_G();
 
-	lp = findLine(num);
-	if (lp == NULL)
-		return FALSE;
-	curNum = num;
-	curLine = lp;
-	return TRUE;
+	bufSize = INITBUF_SIZE;
+	bufBase = xmalloc(bufSize);
+	bufPtr = bufBase;
+	lines.next = &lines;
+	lines.prev = &lines;
+
+	if (argv[1]) {
+		fileName = xstrdup(argv[1]);
+		if (!readLines(fileName, 1)) {
+			return EXIT_SUCCESS;
+		}
+		if (lastNum)
+			setCurNum(1);
+		dirty = FALSE;
+	}
+
+	doCommands();
+	return EXIT_SUCCESS;
 }
diff -urpN busybox-1.27.2/editors/patch.c busybox-1.28.0/editors/patch.c
--- busybox-1.27.2/editors/patch.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/editors/patch.c	2017-10-05 11:53:08.000000000 +0200
@@ -21,12 +21,11 @@
  * -F fuzz (number, default 2)
  * [file] which file to patch
  */
-
 //config:config PATCH
-//config:	bool "patch"
+//config:	bool "patch (9.1 kb)"
 //config:	default y
 //config:	help
-//config:	  Apply a unified diff formatted patch.
+//config:	Apply a unified diff formatted patch.
 
 //applet:IF_PATCH(APPLET(patch, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/editors/patch_bbox.c busybox-1.28.0/editors/patch_bbox.c
--- busybox-1.27.2/editors/patch_bbox.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/editors/patch_bbox.c	2017-08-17 13:50:45.000000000 +0200
@@ -111,10 +111,9 @@ int patch_main(int argc UNUSED_PARAM, ch
 			"no-backup-if-mismatch\0" No_argument       "\xff" /*ignored*/
 # endif
 			;
-		applet_long_options = patch_longopts;
 #endif
 		/* -f,-E,-g are ignored */
-		opt = getopt32(argv, "p:i:RN""fEg:", &p, &i, NULL);
+		opt = getopt32long(argv, "p:i:RN""fEg:", patch_longopts, &p, &i, NULL);
 		if (opt & OPT_R)
 			plus = '-';
 		patch_level = xatoi(p); /* can be negative! */
diff -urpN busybox-1.27.2/editors/patch_toybox.c busybox-1.28.0/editors/patch_toybox.c
--- busybox-1.27.2/editors/patch_toybox.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/editors/patch_toybox.c	2017-07-24 18:57:09.000000000 +0200
@@ -26,7 +26,7 @@
 USE_PATCH(NEWTOY(patch, USE_TOYBOX_DEBUG("x")"up#i:R", TOYFLAG_USR|TOYFLAG_BIN))
 
 config PATCH
-	bool "patch"
+	bool "patch (9.1 kb)"
 	default y
 	help
 	  usage: patch [-i file] [-p depth] [-Ru]
diff -urpN busybox-1.27.2/editors/sed.c busybox-1.28.0/editors/sed.c
--- busybox-1.27.2/editors/sed.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/editors/sed.c	2017-10-05 11:53:08.000000000 +0200
@@ -12,7 +12,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 /* Code overview.
  *
  * Files are laid out to avoid unnecessary function declarations.  So for
@@ -29,7 +28,6 @@
  *
  * sed_main() is where external code calls into this, with a command line.
  */
-
 /* Supported features and commands in this version of sed:
  *
  * - comments ('#')
@@ -55,21 +53,20 @@
  * http://pubs.opengroup.org/onlinepubs/9699919799/utilities/sed.html
  * http://sed.sourceforge.net/sedfaq3.html
  */
-
 //config:config SED
-//config:	bool "sed"
+//config:	bool "sed (12 kb)"
 //config:	default y
 //config:	help
-//config:	  sed is used to perform text transformations on a file
-//config:	  or input from a pipeline.
-
-//kbuild:lib-$(CONFIG_SED) += sed.o
+//config:	sed is used to perform text transformations on a file
+//config:	or input from a pipeline.
 
 //applet:IF_SED(APPLET(sed, BB_DIR_BIN, BB_SUID_DROP))
 
+//kbuild:lib-$(CONFIG_SED) += sed.o
+
 //usage:#define sed_trivial_usage
-//usage:       "[-inrE] [-f FILE]... [-e CMD]... [FILE]...\n"
-//usage:       "or: sed [-inrE] CMD [FILE]..."
+//usage:       "[-i[SFX]] [-nrE] [-f FILE]... [-e CMD]... [FILE]...\n"
+//usage:       "or: sed [-i[SFX]] [-nrE] CMD [FILE]..."
 //usage:#define sed_full_usage "\n\n"
 //usage:       "	-e CMD	Add CMD to sed commands to be executed"
 //usage:     "\n	-f FILE	Add FILE contents to sed commands to be executed"
@@ -350,10 +347,16 @@ static int get_address(const char *my_st
 		if (*my_str == '\\')
 			delimiter = *++pos;
 		next = index_of_next_unescaped_regexp_delim(delimiter, ++pos);
-		temp = copy_parsing_escapes(pos, next);
-		*regex = xzalloc(sizeof(regex_t));
-		xregcomp(*regex, temp, G.regex_type);
-		free(temp);
+		if (next != 0) {
+			temp = copy_parsing_escapes(pos, next);
+			G.previous_regex_ptr = *regex = xzalloc(sizeof(regex_t));
+			xregcomp(*regex, temp, G.regex_type);
+			free(temp);
+		} else {
+			*regex = G.previous_regex_ptr;
+			if (!G.previous_regex_ptr)
+				bb_error_msg_and_die("no previous regexp");
+		}
 		/* Move position to next character after last delimiter */
 		pos += (next+1);
 	}
@@ -1507,21 +1510,21 @@ int sed_main(int argc UNUSED_PARAM, char
 	/* do normal option parsing */
 	opt_e = opt_f = NULL;
 	opt_i = NULL;
-	opt_complementary = "nn"; /* count -n */
-
-	IF_LONG_OPTS(applet_long_options = sed_longopts);
-
 	/* -i must be first, to match OPT_in_place definition */
 	/* -E is a synonym of -r:
 	 * GNU sed 4.2.1 mentions it in neither --help
 	 * nor manpage, but does recognize it.
 	 */
-	opt = getopt32(argv, "i::rEne:*f:*", &opt_i, &opt_e, &opt_f,
-			    &G.be_quiet); /* counter for -n */
+	opt = getopt32long(argv, "^"
+			"i::rEne:*f:*"
+			"\0" "nn"/*count -n*/,
+			sed_longopts,
+			&opt_i, &opt_e, &opt_f,
+			&G.be_quiet); /* counter for -n */
 	//argc -= optind;
 	argv += optind;
 	if (opt & OPT_in_place) { // -i
-		atexit(cleanup_outname);
+		die_func = cleanup_outname;
 	}
 	if (opt & (2|4))
 		G.regex_type |= REG_EXTENDED; // -r or -E
diff -urpN busybox-1.27.2/editors/vi.c busybox-1.28.0/editors/vi.c
--- busybox-1.27.2/editors/vi.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/editors/vi.c	2017-10-05 11:53:08.000000000 +0200
@@ -5,7 +5,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 /*
  * Things To Do:
  *	EXINIT
@@ -19,15 +18,14 @@
  *	":r !cmd"  and  "!cmd"  to filter text through an external command
  *	An "ex" line oriented mode- maybe using "cmdedit"
  */
-
 //config:config VI
-//config:	bool "vi"
+//config:	bool "vi (22 kb)"
 //config:	default y
 //config:	help
-//config:	  'vi' is a text editor. More specifically, it is the One True
-//config:	  text editor <grin>. It does, however, have a rather steep
-//config:	  learning curve. If you are not already comfortable with 'vi'
-//config:	  you may wish to use something else.
+//config:	'vi' is a text editor. More specifically, it is the One True
+//config:	text editor <grin>. It does, however, have a rather steep
+//config:	learning curve. If you are not already comfortable with 'vi'
+//config:	you may wish to use something else.
 //config:
 //config:config FEATURE_VI_MAX_LEN
 //config:	int "Maximum screen width"
@@ -35,77 +33,77 @@
 //config:	default 4096
 //config:	depends on VI
 //config:	help
-//config:	  Contrary to what you may think, this is not eating much.
-//config:	  Make it smaller than 4k only if you are very limited on memory.
+//config:	Contrary to what you may think, this is not eating much.
+//config:	Make it smaller than 4k only if you are very limited on memory.
 //config:
 //config:config FEATURE_VI_8BIT
 //config:	bool "Allow to display 8-bit chars (otherwise shows dots)"
 //config:	default n
 //config:	depends on VI
 //config:	help
-//config:	  If your terminal can display characters with high bit set,
-//config:	  you may want to enable this. Note: vi is not Unicode-capable.
-//config:	  If your terminal combines several 8-bit bytes into one character
-//config:	  (as in Unicode mode), this will not work properly.
+//config:	If your terminal can display characters with high bit set,
+//config:	you may want to enable this. Note: vi is not Unicode-capable.
+//config:	If your terminal combines several 8-bit bytes into one character
+//config:	(as in Unicode mode), this will not work properly.
 //config:
 //config:config FEATURE_VI_COLON
 //config:	bool "Enable \":\" colon commands (no \"ex\" mode)"
 //config:	default y
 //config:	depends on VI
 //config:	help
-//config:	  Enable a limited set of colon commands. This does not
-//config:	  provide an "ex" mode.
+//config:	Enable a limited set of colon commands. This does not
+//config:	provide an "ex" mode.
 //config:
 //config:config FEATURE_VI_YANKMARK
 //config:	bool "Enable yank/put commands and mark cmds"
 //config:	default y
 //config:	depends on VI
 //config:	help
-//config:	  This will enable you to use yank and put, as well as mark.
+//config:	This enables you to use yank and put, as well as mark.
 //config:
 //config:config FEATURE_VI_SEARCH
 //config:	bool "Enable search and replace cmds"
 //config:	default y
 //config:	depends on VI
 //config:	help
-//config:	  Select this if you wish to be able to do search and replace.
+//config:	Select this if you wish to be able to do search and replace.
 //config:
 //config:config FEATURE_VI_REGEX_SEARCH
 //config:	bool "Enable regex in search and replace"
 //config:	default n   # Uses GNU regex, which may be unavailable. FIXME
 //config:	depends on FEATURE_VI_SEARCH
 //config:	help
-//config:	  Use extended regex search.
+//config:	Use extended regex search.
 //config:
 //config:config FEATURE_VI_USE_SIGNALS
 //config:	bool "Catch signals"
 //config:	default y
 //config:	depends on VI
 //config:	help
-//config:	  Selecting this option will make vi signal aware. This will support
-//config:	  SIGWINCH to deal with Window Changes, catch ^Z and ^C and alarms.
+//config:	Selecting this option will make vi signal aware. This will support
+//config:	SIGWINCH to deal with Window Changes, catch ^Z and ^C and alarms.
 //config:
 //config:config FEATURE_VI_DOT_CMD
 //config:	bool "Remember previous cmd and \".\" cmd"
 //config:	default y
 //config:	depends on VI
 //config:	help
-//config:	  Make vi remember the last command and be able to repeat it.
+//config:	Make vi remember the last command and be able to repeat it.
 //config:
 //config:config FEATURE_VI_READONLY
 //config:	bool "Enable -R option and \"view\" mode"
 //config:	default y
 //config:	depends on VI
 //config:	help
-//config:	  Enable the read-only command line option, which allows the user to
-//config:	  open a file in read-only mode.
+//config:	Enable the read-only command line option, which allows the user to
+//config:	open a file in read-only mode.
 //config:
 //config:config FEATURE_VI_SETOPTS
 //config:	bool "Enable settable options, ai ic showmatch"
 //config:	default y
 //config:	depends on VI
 //config:	help
-//config:	  Enable the editor to set some (ai, ic, showmatch) options.
+//config:	Enable the editor to set some (ai, ic, showmatch) options.
 //config:
 //config:config FEATURE_VI_SET
 //config:	bool "Support :set"
@@ -117,37 +115,37 @@
 //config:	default y
 //config:	depends on VI
 //config:	help
-//config:	  Behave nicely with terminals that get resized.
+//config:	Behave nicely with terminals that get resized.
 //config:
 //config:config FEATURE_VI_ASK_TERMINAL
 //config:	bool "Use 'tell me cursor position' ESC sequence to measure window"
 //config:	default y
 //config:	depends on VI
 //config:	help
-//config:	  If terminal size can't be retrieved and $LINES/$COLUMNS are not set,
-//config:	  this option makes vi perform a last-ditch effort to find it:
-//config:	  position cursor to 999,999 and ask terminal to report real
-//config:	  cursor position using "ESC [ 6 n" escape sequence, then read stdin.
-//config:	  This is not clean but helps a lot on serial lines and such.
+//config:	If terminal size can't be retrieved and $LINES/$COLUMNS are not set,
+//config:	this option makes vi perform a last-ditch effort to find it:
+//config:	position cursor to 999,999 and ask terminal to report real
+//config:	cursor position using "ESC [ 6 n" escape sequence, then read stdin.
+//config:	This is not clean but helps a lot on serial lines and such.
 //config:
 //config:config FEATURE_VI_UNDO
 //config:	bool "Support undo command \"u\""
 //config:	default y
 //config:	depends on VI
 //config:	help
-//config:	  Support the 'u' command to undo insertion, deletion, and replacement
-//config:	  of text.
+//config:	Support the 'u' command to undo insertion, deletion, and replacement
+//config:	of text.
 //config:
 //config:config FEATURE_VI_UNDO_QUEUE
 //config:	bool "Enable undo operation queuing"
 //config:	default y
 //config:	depends on FEATURE_VI_UNDO
 //config:	help
-//config:	  The vi undo functions can use an intermediate queue to greatly lower
-//config:	  malloc() calls and overhead. When the maximum size of this queue is
-//config:	  reached, the contents of the queue are committed to the undo stack.
-//config:	  This increases the size of the undo code and allows some undo
-//config:	  operations (especially un-typing/backspacing) to be far more useful.
+//config:	The vi undo functions can use an intermediate queue to greatly lower
+//config:	malloc() calls and overhead. When the maximum size of this queue is
+//config:	reached, the contents of the queue are committed to the undo stack.
+//config:	This increases the size of the undo code and allows some undo
+//config:	operations (especially un-typing/backspacing) to be far more useful.
 //config:
 //config:config FEATURE_VI_UNDO_QUEUE_MAX
 //config:	int "Maximum undo character queue size"
@@ -155,13 +153,13 @@
 //config:	range 32 65536
 //config:	depends on FEATURE_VI_UNDO_QUEUE
 //config:	help
-//config:	  This option sets the number of bytes used at runtime for the queue.
-//config:	  Smaller values will create more undo objects and reduce the amount
-//config:	  of typed or backspaced characters that are grouped into one undo
-//config:	  operation; larger values increase the potential size of each undo
-//config:	  and will generally malloc() larger objects and less frequently.
-//config:	  Unless you want more (or less) frequent "undo points" while typing,
-//config:	  you should probably leave this unchanged.
+//config:	This option sets the number of bytes used at runtime for the queue.
+//config:	Smaller values will create more undo objects and reduce the amount
+//config:	of typed or backspaced characters that are grouped into one undo
+//config:	operation; larger values increase the potential size of each undo
+//config:	and will generally malloc() larger objects and less frequently.
+//config:	Unless you want more (or less) frequent "undo points" while typing,
+//config:	you should probably leave this unchanged.
 
 //applet:IF_VI(APPLET(vi, BB_DIR_BIN, BB_SUID_DROP))
 
@@ -224,24 +222,25 @@ enum {
  * See "Xterm Control Sequences"
  * http://invisible-island.net/xterm/ctlseqs/ctlseqs.html
  */
+#define ESC "\033"
 /* Inverse/Normal text */
-#define ESC_BOLD_TEXT "\033[7m"
-#define ESC_NORM_TEXT "\033[0m"
+#define ESC_BOLD_TEXT ESC"[7m"
+#define ESC_NORM_TEXT ESC"[m"
 /* Bell */
 #define ESC_BELL "\007"
 /* Clear-to-end-of-line */
-#define ESC_CLEAR2EOL "\033[K"
+#define ESC_CLEAR2EOL ESC"[K"
 /* Clear-to-end-of-screen.
  * (We use default param here.
  * Full sequence is "ESC [ <num> J",
  * <num> is 0/1/2 = "erase below/above/all".)
  */
-#define ESC_CLEAR2EOS "\033[J"
+#define ESC_CLEAR2EOS ESC"[J"
 /* Cursor to given coordinate (1,1: top left) */
-#define ESC_SET_CURSOR_POS "\033[%u;%uH"
+#define ESC_SET_CURSOR_POS ESC"[%u;%uH"
 //UNUSED
 ///* Cursor up and down */
-//#define ESC_CURSOR_UP "\033[A"
+//#define ESC_CURSOR_UP   ESC"[A"
 //#define ESC_CURSOR_DOWN "\n"
 
 #if ENABLE_FEATURE_VI_DOT_CMD || ENABLE_FEATURE_VI_YANKMARK
@@ -696,14 +695,14 @@ int vi_main(int argc, char **argv)
 	save_argc = argc;
 	optind = 0;
 	// "Save cursor, use alternate screen buffer, clear screen"
-	write1("\033[?1049h");
+	write1(ESC"[?1049h");
 	while (1) {
 		edit_file(argv[optind]); /* param might be NULL */
 		if (++optind >= argc)
 			break;
 	}
 	// "Use normal screen buffer, restore cursor"
-	write1("\033[?1049l");
+	write1(ESC"[?1049l");
 	//-----------------------------------------------------------
 
 	return 0;
@@ -772,7 +771,7 @@ static void edit_file(char *fn)
 #if ENABLE_FEATURE_VI_ASK_TERMINAL
 	if (G.get_rowcol_error /* TODO? && no input on stdin */) {
 		uint64_t k;
-		write1("\033[999;999H" "\033[6n");
+		write1(ESC"[999;999H" ESC"[6n");
 		fflush_all();
 		k = read_key(STDIN_FILENO, readbuffer, /*timeout_ms:*/ 100);
 		if ((int32_t)k == KEYCODE_CURSOR_POS) {
@@ -1039,7 +1038,7 @@ static void colon(char *buf)
 		}
 		if (cnt < 0) {
 			if (cnt == -1)
-				status_line_bold("Write error: %s", strerror(errno));
+				status_line_bold("Write error: "STRERROR_FMT STRERROR_ERRNO);
 		} else {
 			modified_count = 0;
 			last_modified_count = -1;
@@ -3132,7 +3131,7 @@ static void status_line_bold(const char
 
 static void status_line_bold_errno(const char *fn)
 {
-	status_line_bold("'%s' %s", fn, strerror(errno));
+	status_line_bold("'%s' "STRERROR_FMT, fn STRERROR_ERRNO);
 }
 
 // format status buffer
@@ -4067,7 +4066,7 @@ static void do_cmd(int c)
 			cnt = file_write(current_filename, text, end - 1);
 			if (cnt < 0) {
 				if (cnt == -1)
-					status_line_bold("Write error: %s", strerror(errno));
+					status_line_bold("Write error: "STRERROR_FMT STRERROR_ERRNO);
 			} else if (cnt == (end - 1 - text + 1)) {
 				editing = 0;
 			}
@@ -4454,7 +4453,7 @@ static void crash_dummy()
 				sleeptime = 0;  // how fast to type
 			}
 		}
-		strcat(readbuffer, "\033");
+		strcat(readbuffer, ESC);
 	}
 	readbuffer[0] = strlen(readbuffer + 1);
  cd1:
diff -urpN busybox-1.27.2/examples/var_service/README busybox-1.28.0/examples/var_service/README
--- busybox-1.27.2/examples/var_service/README	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/examples/var_service/README	2017-07-29 23:01:53.000000000 +0200
@@ -98,7 +98,7 @@ restart) each other.
 
     var_service/dhcp_if
 
-controls a udhcpc instance which provides dhpc-assigned IP
+controls a udhcpc instance which provides DHCP-assigned IP
 address on interface named "if". Copy/rename this directory as needed to run
 udhcpc on other interfaces (var_service/dhcp_if/run script uses _foo suffix
 of the parent directory as interface name).
@@ -164,9 +164,9 @@ This is achieved very simply by having
 	sv o .
 at the very beginning of fw/run script, not at the end.
 
-Therefore, any "sv u /var/run/service/fw" command by any other
-script "undoes" o(ne-shot) command if fw still runs, thus
-runsv will rerun it; or start it in a normal way if fw is not running.
+Therefore, any "sv u fw" command by any other script "undoes" o(ne-shot)
+command if fw still runs, thus runsv will rerun it; or start it
+in a normal way if fw is not running.
 
 This mechanism is the reason why fw is a service, not just a script.
 
@@ -198,7 +198,8 @@ PID TIME COMMAND
 568 0:00     svlogd -tt /var/log/service/dhcp_eth0
 850 0:00     udhcpc -vv --foreground --interface=eth0
                 --pidfile=/var/service/dhcp_eth0/udhcpc.pid
-                --script=/var/service/dhcp_eth0/dhcp_handler -x hostname bbox
+                --script=/var/service/dhcp_eth0/dhcp_handler
+                -x hostname bbox
 563 0:00   runsv ntpd
 573 0:01     svlogd -tt /var/log/service/ntpd
 845 0:00     busybox ntpd -dddnNl -S ./ntp.script -p 10.x.x.x -p 10.x.x.x
@@ -233,4 +234,5 @@ PID TIME COMMAND
 622 0:00     busybox httpd -p80 -vvv -f -h /home/httpd_root
 577 0:00   runsv supplicant_wlan0
 627 0:00     svlogd -tt /var/log/service/supplicant_wlan0
-638 0:03     wpa_supplicant -i wlan0 -c /var/service/supplicant_wlan0/wpa_supplicant.conf -d
+638 0:03     wpa_supplicant -i wlan0
+                -c /var/service/supplicant_wlan0/wpa_supplicant.conf -d
diff -urpN busybox-1.27.2/examples/var_service/README_distro_proposal.txt busybox-1.28.0/examples/var_service/README_distro_proposal.txt
--- busybox-1.27.2/examples/var_service/README_distro_proposal.txt	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/examples/var_service/README_distro_proposal.txt	2017-07-29 23:01:53.000000000 +0200
@@ -90,9 +90,9 @@ There are several reimplementations of d
   (busybox has it included)
 - s6: by Laurent Bercot, http://skarnet.org/software/s6/
 
-
 It is not required that a specific clone should be used. Let evolution work.
 
+
 	Terminology
 
 daemon: any long running background program. Common examples are sshd, getty,
diff -urpN busybox-1.27.2/findutils/find.c busybox-1.28.0/findutils/find.c
--- busybox-1.27.2/findutils/find.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/findutils/find.c	2017-10-05 11:53:08.000000000 +0200
@@ -9,13 +9,12 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 /* findutils-4.1.20:
  *
  * # find file.txt -exec 'echo {}' '{}  {}' ';'
  * find: echo file.txt: No such file or directory
  * # find file.txt -exec 'echo' '{}  {}' '; '
- * find: missing argument to `-exec'
+ * find: missing argument to '-exec'
  * # find file.txt -exec 'echo {}' '{}  {}' ';' junk
  * find: paths must precede expression
  * # find file.txt -exec 'echo {}' '{}  {}' ';' junk ';'
@@ -44,7 +43,6 @@
  * # find t z t z '(' -name '*t*' -o -name '*z*' ')' -o -print
  * (no output)
  */
-
 /* Testing script
  * ./busybox find "$@" | tee /tmp/bb_find
  * echo ==================
@@ -52,38 +50,37 @@
  * echo ==================
  * diff -u /tmp/std_find /tmp/bb_find && echo Identical
  */
-
 //config:config FIND
-//config:	bool "find"
+//config:	bool "find (14 kb)"
 //config:	default y
 //config:	help
-//config:	  find is used to search your system to find specified files.
+//config:	find is used to search your system to find specified files.
 //config:
 //config:config FEATURE_FIND_PRINT0
 //config:	bool "Enable -print0: NUL-terminated output"
 //config:	default y
 //config:	depends on FIND
 //config:	help
-//config:	  Causes output names to be separated by a NUL character
-//config:	  rather than a newline. This allows names that contain
-//config:	  newlines and other whitespace to be more easily
-//config:	  interpreted by other programs.
+//config:	Causes output names to be separated by a NUL character
+//config:	rather than a newline. This allows names that contain
+//config:	newlines and other whitespace to be more easily
+//config:	interpreted by other programs.
 //config:
 //config:config FEATURE_FIND_MTIME
 //config:	bool "Enable -mtime: modified time matching"
 //config:	default y
 //config:	depends on FIND
 //config:	help
-//config:	  Allow searching based on the modification time of
-//config:	  files, in days.
+//config:	Allow searching based on the modification time of
+//config:	files, in days.
 //config:
 //config:config FEATURE_FIND_MMIN
 //config:	bool "Enable -mmin: modified time matching by minutes"
 //config:	default y
 //config:	depends on FIND
 //config:	help
-//config:	  Allow searching based on the modification time of
-//config:	  files, in minutes.
+//config:	Allow searching based on the modification time of
+//config:	files, in minutes.
 //config:
 //config:config FEATURE_FIND_PERM
 //config:	bool "Enable -perm: permissions matching"
@@ -95,8 +92,8 @@
 //config:	default y
 //config:	depends on FIND
 //config:	help
-//config:	  Enable searching based on file type (file,
-//config:	  directory, socket, device, etc.).
+//config:	Enable searching based on file type (file,
+//config:	directory, socket, device, etc.).
 //config:
 //config:config FEATURE_FIND_XDEV
 //config:	bool "Enable -xdev: 'stay in filesystem'"
@@ -113,8 +110,8 @@
 //config:	default y
 //config:	depends on FIND
 //config:	help
-//config:	  Support the 'find -newer' option for finding any files which have
-//config:	  modification time that is more recent than the specified FILE.
+//config:	Support the 'find -newer' option for finding any files which have
+//config:	modification time that is more recent than the specified FILE.
 //config:
 //config:config FEATURE_FIND_INUM
 //config:	bool "Enable -inum: inode number matching"
@@ -126,18 +123,18 @@
 //config:	default y
 //config:	depends on FIND
 //config:	help
-//config:	  Support the 'find -exec' option for executing commands based upon
-//config:	  the files matched.
+//config:	Support the 'find -exec' option for executing commands based upon
+//config:	the files matched.
 //config:
 //config:config FEATURE_FIND_EXEC_PLUS
 //config:	bool "Enable -exec ... {} +"
 //config:	default y
 //config:	depends on FEATURE_FIND_EXEC
 //config:	help
-//config:	  Support the 'find -exec ... {} +' option for executing commands
-//config:	  for all matched files at once.
-//config:	  Without this option, -exec + is a synonym for -exec ;
-//config:	  (IOW: it works correctly, but without expected speedup)
+//config:	Support the 'find -exec ... {} +' option for executing commands
+//config:	for all matched files at once.
+//config:	Without this option, -exec + is a synonym for -exec ;
+//config:	(IOW: it works correctly, but without expected speedup)
 //config:
 //config:config FEATURE_FIND_USER
 //config:	bool "Enable -user: username/uid matching"
@@ -154,23 +151,23 @@
 //config:	default y
 //config:	depends on FIND
 //config:	help
-//config:	  Support the '!' operator to invert the test results.
-//config:	  If 'Enable full-blown desktop' is enabled, then will also support
-//config:	  the non-POSIX notation '-not'.
+//config:	Support the '!' operator to invert the test results.
+//config:	If 'Enable full-blown desktop' is enabled, then will also support
+//config:	the non-POSIX notation '-not'.
 //config:
 //config:config FEATURE_FIND_DEPTH
 //config:	bool "Enable -depth"
 //config:	default y
 //config:	depends on FIND
 //config:	help
-//config:	  Process each directory's contents before the directory itself.
+//config:	Process each directory's contents before the directory itself.
 //config:
 //config:config FEATURE_FIND_PAREN
 //config:	bool "Enable parens in options"
 //config:	default y
 //config:	depends on FIND
 //config:	help
-//config:	  Enable usage of parens '(' to specify logical order of arguments.
+//config:	Enable usage of parens '(' to specify logical order of arguments.
 //config:
 //config:config FEATURE_FIND_SIZE
 //config:	bool "Enable -size: file size matching"
@@ -182,45 +179,45 @@
 //config:	default y
 //config:	depends on FIND
 //config:	help
-//config:	  If the file is a directory, don't descend into it. Useful for
-//config:	  exclusion .svn and CVS directories.
+//config:	If the file is a directory, don't descend into it. Useful for
+//config:	exclusion .svn and CVS directories.
 //config:
 //config:config FEATURE_FIND_DELETE
 //config:	bool "Enable -delete: delete files/dirs"
 //config:	default y
 //config:	depends on FIND && FEATURE_FIND_DEPTH
 //config:	help
-//config:	  Support the 'find -delete' option for deleting files and directories.
-//config:	  WARNING: This option can do much harm if used wrong. Busybox will not
-//config:	  try to protect the user from doing stupid things. Use with care.
+//config:	Support the 'find -delete' option for deleting files and directories.
+//config:	WARNING: This option can do much harm if used wrong. Busybox will not
+//config:	try to protect the user from doing stupid things. Use with care.
 //config:
 //config:config FEATURE_FIND_PATH
 //config:	bool "Enable -path: match pathname with shell pattern"
 //config:	default y
 //config:	depends on FIND
 //config:	help
-//config:	  The -path option matches whole pathname instead of just filename.
+//config:	The -path option matches whole pathname instead of just filename.
 //config:
 //config:config FEATURE_FIND_REGEX
 //config:	bool "Enable -regex: match pathname with regex"
 //config:	default y
 //config:	depends on FIND
 //config:	help
-//config:	  The -regex option matches whole pathname against regular expression.
+//config:	The -regex option matches whole pathname against regular expression.
 //config:
 //config:config FEATURE_FIND_CONTEXT
 //config:	bool "Enable -context: security context matching"
 //config:	default n
 //config:	depends on FIND && SELINUX
 //config:	help
-//config:	  Support the 'find -context' option for matching security context.
+//config:	Support the 'find -context' option for matching security context.
 //config:
 //config:config FEATURE_FIND_LINKS
 //config:	bool "Enable -links: link count matching"
 //config:	default y
 //config:	depends on FIND
 //config:	help
-//config:	  Support the 'find -links' option for matching number of links.
+//config:	Support the 'find -links' option for matching number of links.
 
 //applet:IF_FIND(APPLET_NOEXEC(find, find, BB_DIR_USR_BIN, BB_SUID_DROP, find))
 
diff -urpN busybox-1.27.2/findutils/grep.c busybox-1.28.0/findutils/grep.c
--- busybox-1.27.2/findutils/grep.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/findutils/grep.c	2017-12-04 16:07:47.000000000 +0100
@@ -17,33 +17,32 @@
  *
  * (C) 2006 Jac Goudsmit added -o option
  */
-
 //config:config GREP
-//config:	bool "grep"
+//config:	bool "grep (8.5 kb)"
 //config:	default y
 //config:	help
-//config:	  grep is used to search files for a specified pattern.
+//config:	grep is used to search files for a specified pattern.
 //config:
 //config:config EGREP
-//config:	bool "egrep"
+//config:	bool "egrep (7.6 kb)"
 //config:	default y
 //config:	help
-//config:	  Alias to "grep -E"
+//config:	Alias to "grep -E".
 //config:
 //config:config FGREP
-//config:	bool "fgrep"
+//config:	bool "fgrep (7.6 kb)"
 //config:	default y
 //config:	help
-//config:	  Alias to "grep -F"
+//config:	Alias to "grep -F".
 //config:
 //config:config FEATURE_GREP_CONTEXT
 //config:	bool "Enable before and after context flags (-A, -B and -C)"
 //config:	default y
 //config:	depends on GREP || EGREP || FGREP
 //config:	help
-//config:	  Print the specified number of leading (-B) and/or trailing (-A)
-//config:	  context surrounding our matching lines.
-//config:	  Print the specified number of context lines (-C).
+//config:	Print the specified number of leading (-B) and/or trailing (-A)
+//config:	context surrounding our matching lines.
+//config:	Print the specified number of context lines (-C).
 
 //applet:IF_GREP(APPLET(grep, BB_DIR_BIN, BB_SUID_DROP))
 //                APPLET_ODDNAME:name   main  location    suid_type     help
@@ -107,6 +106,7 @@
 //usage:#define fgrep_trivial_usage NOUSAGE_STR
 //usage:#define fgrep_full_usage ""
 
+/* -e,-f are lists; -m,-A,-B,-C have numeric param */
 #define OPTSTR_GREP \
 	"lnqvscFiHhe:*f:*Lorm:+wx" \
 	IF_FEATURE_GREP_CONTEXT("A:+B:+C:+") \
@@ -639,11 +639,28 @@ static void load_regexes_from_file(llist
 }
 
 static int FAST_FUNC file_action_grep(const char *filename,
-			struct stat *statbuf UNUSED_PARAM,
+			struct stat *statbuf,
 			void* matched,
 			int depth UNUSED_PARAM)
 {
-	FILE *file = fopen_for_read(filename);
+	FILE *file;
+
+	/* If we are given a link to a directory, we should bail out now, rather
+	 * than trying to open the "file" and hoping getline gives us nothing,
+	 * since that is not portable across operating systems (FreeBSD for
+	 * example will return the raw directory contents). */
+	if (S_ISLNK(statbuf->st_mode)) {
+		struct stat sb;
+		if (stat(filename, &sb) != 0) {
+			if (!SUPPRESS_ERR_MSGS)
+				bb_simple_perror_msg(filename);
+			return 0;
+		}
+		if (S_ISDIR(sb.st_mode))
+			return 1;
+	}
+
+	file = fopen_for_read(filename);
 	if (file == NULL) {
 		if (!SUPPRESS_ERR_MSGS)
 			bb_simple_perror_msg(filename);
@@ -686,11 +703,9 @@ int grep_main(int argc UNUSED_PARAM, cha
 
 	/* do normal option parsing */
 #if ENABLE_FEATURE_GREP_CONTEXT
-	/* -H unsets -h; -C unsets -A,-B; -e,-f are lists;
-	 * -m,-A,-B,-C have numeric param */
-	opt_complementary = "H-h:C-AB";
+	/* -H unsets -h; -C unsets -A,-B */
 	opts = getopt32(argv,
-		OPTSTR_GREP,
+		"^" OPTSTR_GREP "\0" "H-h:C-AB",
 		&pattern_head, &fopt, &max_matches,
 		&lines_after, &lines_before, &Copt);
 
@@ -716,9 +731,7 @@ int grep_main(int argc UNUSED_PARAM, cha
 	}
 #else
 	/* with auto sanity checks */
-	/* -H unsets -h; -c,-q or -l unset -n; -e,-f are lists; -m N */
-	opt_complementary = "H-h:c-n:q-n:l-n:";
-	getopt32(argv, OPTSTR_GREP,
+	getopt32(argv, "^" OPTSTR_GREP "\0" "H-h:c-n:q-n:l-n:", // why trailing ":"?
 		&pattern_head, &fopt, &max_matches);
 #endif
 	invert_search = ((option_mask32 & OPT_v) != 0); /* 0 | 1 */
diff -urpN busybox-1.27.2/findutils/xargs.c busybox-1.28.0/findutils/xargs.c
--- busybox-1.27.2/findutils/xargs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/findutils/xargs.c	2017-09-07 14:42:40.000000000 +0200
@@ -14,52 +14,61 @@
  * xargs is described in the Single Unix Specification v3 at
  * http://www.opengroup.org/onlinepubs/007904975/utilities/xargs.html
  */
-
 //config:config XARGS
-//config:	bool "xargs"
+//config:	bool "xargs (6.7 kb)"
 //config:	default y
 //config:	help
-//config:	  xargs is used to execute a specified command for
-//config:	  every item from standard input.
+//config:	xargs is used to execute a specified command for
+//config:	every item from standard input.
 //config:
 //config:config FEATURE_XARGS_SUPPORT_CONFIRMATION
 //config:	bool "Enable -p: prompt and confirmation"
 //config:	default y
 //config:	depends on XARGS
 //config:	help
-//config:	  Support -p: prompt the user whether to run each command
-//config:	  line and read a line from the terminal.
+//config:	Support -p: prompt the user whether to run each command
+//config:	line and read a line from the terminal.
 //config:
 //config:config FEATURE_XARGS_SUPPORT_QUOTES
 //config:	bool "Enable single and double quotes and backslash"
 //config:	default y
 //config:	depends on XARGS
 //config:	help
-//config:	  Support quoting in the input.
+//config:	Support quoting in the input.
 //config:
 //config:config FEATURE_XARGS_SUPPORT_TERMOPT
 //config:	bool "Enable -x: exit if -s or -n is exceeded"
 //config:	default y
 //config:	depends on XARGS
 //config:	help
-//config:	  Support -x: exit if the command size (see the -s or -n option)
-//config:	  is exceeded.
+//config:	Support -x: exit if the command size (see the -s or -n option)
+//config:	is exceeded.
 //config:
 //config:config FEATURE_XARGS_SUPPORT_ZERO_TERM
 //config:	bool "Enable -0: NUL-terminated input"
 //config:	default y
 //config:	depends on XARGS
 //config:	help
-//config:	  Support -0: input items are terminated by a NUL character
-//config:	  instead of whitespace, and the quotes and backslash
-//config:	  are not special.
+//config:	Support -0: input items are terminated by a NUL character
+//config:	instead of whitespace, and the quotes and backslash
+//config:	are not special.
 //config:
 //config:config FEATURE_XARGS_SUPPORT_REPL_STR
 //config:	bool "Enable -I STR: string to replace"
 //config:	default y
 //config:	depends on XARGS
 //config:	help
-//config:	  Support -I STR and -i[STR] options.
+//config:	Support -I STR and -i[STR] options.
+//config:
+//config:config FEATURE_XARGS_SUPPORT_PARALLEL
+//config:	bool "Enable -P N: processes to run in parallel"
+//config:	default y
+//config:	depends on XARGS
+//config:
+//config:config FEATURE_XARGS_SUPPORT_ARGS_FILE
+//config:	bool "Enable -a FILE: use FILE instead of stdin"
+//config:	default y
+//config:	depends on XARGS
 
 //applet:IF_XARGS(APPLET_NOEXEC(xargs, xargs, BB_DIR_USR_BIN, BB_SUID_DROP, xargs))
 
@@ -100,37 +109,121 @@ struct globals {
 #endif
 	const char *eof_str;
 	int idx;
+#if ENABLE_FEATURE_XARGS_SUPPORT_PARALLEL
+	int running_procs;
+	int max_procs;
+#endif
+	smalluint xargs_exitcode;
 } FIX_ALIASING;
 #define G (*(struct globals*)bb_common_bufsiz1)
 #define INIT_G() do { \
 	setup_common_bufsiz(); \
 	G.eof_str = NULL; /* need to clear by hand because we are NOEXEC applet */ \
+	G.idx = 0; \
+	IF_FEATURE_XARGS_SUPPORT_PARALLEL(G.running_procs = 0;) \
+	IF_FEATURE_XARGS_SUPPORT_PARALLEL(G.max_procs = 1;) \
+	G.xargs_exitcode = 0; \
 	IF_FEATURE_XARGS_SUPPORT_REPL_STR(G.repl_str = "{}";) \
 	IF_FEATURE_XARGS_SUPPORT_REPL_STR(G.eol_ch = '\n';) \
 } while (0)
 
 
+/*
+ * Returns 0 if xargs should continue (but may set G.xargs_exitcode to 123).
+ * Else sets G.xargs_exitcode to error code and returns nonzero.
+ *
+ * If G.max_procs == 0, performs final waitpid() loop for all children.
+ */
 static int xargs_exec(void)
 {
 	int status;
 
+#if !ENABLE_FEATURE_XARGS_SUPPORT_PARALLEL
 	status = spawn_and_wait(G.args);
+#else
+	if (G.max_procs == 1) {
+		status = spawn_and_wait(G.args);
+	} else {
+		pid_t pid;
+		int wstat;
+ again:
+		if (G.running_procs >= G.max_procs)
+			pid = safe_waitpid(-1, &wstat, 0);
+		else
+			pid = wait_any_nohang(&wstat);
+		if (pid > 0) {
+			/* We may have children we don't know about:
+			 * sh -c 'sleep 1 & exec xargs ...'
+			 * Do not make G.running_procs go negative.
+			 */
+			if (G.running_procs != 0)
+				G.running_procs--;
+			status = WIFSIGNALED(wstat)
+				? 0x180 + WTERMSIG(wstat)
+				: WEXITSTATUS(wstat);
+			if (status > 0 && status < 255) {
+				/* See below why 123 does not abort */
+				G.xargs_exitcode = 123;
+				status = 0;
+			}
+			if (status == 0)
+				goto again; /* maybe we have more children? */
+			/* else: "bad" status, will bail out */
+		} else if (G.max_procs != 0) {
+			/* Not in final waitpid() loop,
+			 * and G.running_procs < G.max_procs: start more procs
+			 */
+			status = spawn(G.args);
+			/* here "status" actually holds pid, or -1 */
+			if (status > 0) {
+				G.running_procs++;
+				status = 0;
+			}
+			/* else: status == -1 (failed to fork or exec) */
+		} else {
+			/* final waitpid() loop: must be ECHILD "no more children" */
+			status = 0;
+		}
+	}
+#endif
+	/* Manpage:
+	 * """xargs exits with the following status:
+	 * 0 if it succeeds
+	 * 123 if any invocation of the command exited with status 1-125
+	 * 124 if the command exited with status 255
+	 *     ("""If any invocation of the command exits with a status of 255,
+	 *     xargs will stop immediately without reading any further input.
+	 *     An error message is issued on stderr when this happens.""")
+	 * 125 if the command is killed by a signal
+	 * 126 if the command cannot be run
+	 * 127 if the command is not found
+	 * 1 if some other error occurred."""
+	 */
 	if (status < 0) {
 		bb_simple_perror_msg(G.args[0]);
-		return errno == ENOENT ? 127 : 126;
-	}
-	if (status == 255) {
-		bb_error_msg("%s: exited with status 255; aborting", G.args[0]);
-		return 124;
+		status = (errno == ENOENT) ? 127 : 126;
 	}
-	if (status >= 0x180) {
+	else if (status >= 0x180) {
 		bb_error_msg("'%s' terminated by signal %d",
 			G.args[0], status - 0x180);
-		return 125;
+		status = 125;
+	}
+	else if (status != 0) {
+		if (status == 255) {
+			bb_error_msg("%s: exited with status 255; aborting", G.args[0]);
+			return 124;
+		}
+		/* "123 if any invocation of the command exited with status 1-125"
+		 * This implies that nonzero exit code is remembered,
+		 * but does not cause xargs to stop: we return 0.
+		 */
+		G.xargs_exitcode = 123;
+		status = 0;
 	}
-	if (status)
-		return 123;
-	return 0;
+
+	if (status != 0)
+		G.xargs_exitcode = status;
+	return status;
 }
 
 /* In POSIX/C locale isspace is only these chars: "\t\n\v\f\r" and space.
@@ -141,7 +234,7 @@ static int xargs_exec(void)
 static void store_param(char *s)
 {
 	/* Grow by 256 elements at once */
-	if (!(G.idx & 0xff)) { /* G.idx == N*256 */
+	if (!(G.idx & 0xff)) { /* G.idx == N*256? */
 		/* Enlarge, make G.args[(N+1)*256 - 1] last valid idx */
 		G.args = xrealloc(G.args, sizeof(G.args[0]) * (G.idx + 0x100));
 	}
@@ -429,6 +522,9 @@ static int xargs_ask_confirmation(void)
 //usage:	IF_FEATURE_XARGS_SUPPORT_ZERO_TERM(
 //usage:     "\n	-0	Input is separated by NUL characters"
 //usage:	)
+//usage:	IF_FEATURE_XARGS_SUPPORT_ARGS_FILE(
+//usage:     "\n	-a FILE	Read from FILE instead of stdin"
+//usage:	)
 //usage:     "\n	-t	Print the command on stderr before execution"
 //usage:     "\n	-e[STR]	STR stops input processing"
 //usage:     "\n	-n N	Pass no more than N args to PROG"
@@ -436,6 +532,9 @@ static int xargs_ask_confirmation(void)
 //usage:	IF_FEATURE_XARGS_SUPPORT_REPL_STR(
 //usage:     "\n	-I STR	Replace STR within PROG ARGS with input line"
 //usage:	)
+//usage:	IF_FEATURE_XARGS_SUPPORT_PARALLEL(
+//usage:     "\n	-P N	Run up to N PROGs in parallel"
+//usage:	)
 //usage:	IF_FEATURE_XARGS_SUPPORT_TERMOPT(
 //usage:     "\n	-x	Exit if size is exceeded"
 //usage:	)
@@ -473,13 +572,15 @@ enum {
 	IF_FEATURE_XARGS_SUPPORT_CONFIRMATION("p") \
 	IF_FEATURE_XARGS_SUPPORT_TERMOPT(     "x") \
 	IF_FEATURE_XARGS_SUPPORT_ZERO_TERM(   "0") \
-	IF_FEATURE_XARGS_SUPPORT_REPL_STR(    "I:i::")
+	IF_FEATURE_XARGS_SUPPORT_REPL_STR(    "I:i::") \
+	IF_FEATURE_XARGS_SUPPORT_PARALLEL(    "P:+") \
+	IF_FEATURE_XARGS_SUPPORT_ARGS_FILE(   "a:")
 
 int xargs_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
-int xargs_main(int argc, char **argv)
+int xargs_main(int argc UNUSED_PARAM, char **argv)
 {
+	int initial_idx;
 	int i;
-	int child_error = 0;
 	char *max_args;
 	char *max_chars;
 	char *buf;
@@ -492,20 +593,28 @@ int xargs_main(int argc, char **argv)
 #else
 #define read_args process_stdin
 #endif
+	IF_FEATURE_XARGS_SUPPORT_ARGS_FILE(char *opt_a = NULL;)
 
 	INIT_G();
 
-#if ENABLE_DESKTOP && ENABLE_LONG_OPTS
-	/* For example, Fedora's build system uses --no-run-if-empty */
-	applet_long_options =
-		"no-run-if-empty\0" No_argument "r"
-		;
-#endif
-	opt = getopt32(argv, OPTION_STR,
+	opt = getopt32long(argv, OPTION_STR,
+		"no-run-if-empty\0" No_argument "r",
 		&max_args, &max_chars, &G.eof_str, &G.eof_str
 		IF_FEATURE_XARGS_SUPPORT_REPL_STR(, &G.repl_str, &G.repl_str)
+		IF_FEATURE_XARGS_SUPPORT_PARALLEL(, &G.max_procs)
+		IF_FEATURE_XARGS_SUPPORT_ARGS_FILE(, &opt_a)
 	);
 
+#if ENABLE_FEATURE_XARGS_SUPPORT_PARALLEL
+	if (G.max_procs <= 0) /* -P0 means "run lots of them" */
+		G.max_procs = 100; /* let's not go crazy high */
+#endif
+
+#if ENABLE_FEATURE_XARGS_SUPPORT_ARGS_FILE
+	if (opt_a)
+		xmove_fd(xopen(opt_a, O_RDONLY), 0);
+#endif
+
 	/* -E ""? You may wonder why not just omit -E?
 	 * This is used for portability:
 	 * old xargs was using "_" as default for -E / -e */
@@ -518,11 +627,11 @@ int xargs_main(int argc, char **argv)
 	}
 
 	argv += optind;
-	argc -= optind;
+	//argc -= optind;
 	if (!argv[0]) {
 		/* default behavior is to echo all the filenames */
 		*--argv = (char*)"echo";
-		argc++;
+		//argc++;
 	}
 
 	/*
@@ -577,7 +686,6 @@ int xargs_main(int argc, char **argv)
 		 */
 		G.args = NULL;
 		G.argv = argv;
-		argc = 0;
 		read_args = process_stdin_with_replace;
 		/* Make -I imply -r. GNU findutils seems to do the same: */
 		/* (otherwise "echo -n | xargs -I% echo %" would SEGV) */
@@ -585,30 +693,27 @@ int xargs_main(int argc, char **argv)
 	} else
 #endif
 	{
-		/* Allocate pointers for execvp.
+		/* Store the command to be executed, part 1.
 		 * We can statically allocate (argc + n_max_arg + 1) elements
 		 * and do not bother with resizing args[], but on 64-bit machines
 		 * this results in args[] vector which is ~8 times bigger
 		 * than n_max_chars! That is, with n_max_chars == 20k,
 		 * args[] will take 160k (!), which will most likely be
 		 * almost entirely unused.
-		 *
-		 * See store_param() for matching 256-step growth logic
 		 */
-		G.args = xmalloc(sizeof(G.args[0]) * ((argc + 0xff) & ~0xff));
-		/* Store the command to be executed, part 1 */
 		for (i = 0; argv[i]; i++)
-			G.args[i] = argv[i];
+			store_param(argv[i]);
 	}
 
+	initial_idx = G.idx;
 	while (1) {
 		char *rem;
 
-		G.idx = argc;
+		G.idx = initial_idx;
 		rem = read_args(n_max_chars, n_max_arg, buf);
 		store_param(NULL);
 
-		if (!G.args[argc]) {
+		if (!G.args[initial_idx]) { /* not even one ARG was added? */
 			if (*rem != '\0')
 				bb_error_msg_and_die("argument line too long");
 			if (opt & OPT_NO_EMPTY)
@@ -628,11 +733,8 @@ int xargs_main(int argc, char **argv)
 		}
 
 		if (!(opt & OPT_INTERACTIVE) || xargs_ask_confirmation()) {
-			child_error = xargs_exec();
-		}
-
-		if (child_error > 0 && child_error != 123) {
-			break;
+			if (xargs_exec() != 0)
+				break; /* G.xargs_exitcode is set by xargs_exec() */
 		}
 
 		overlapping_strcpy(buf, rem);
@@ -643,7 +745,12 @@ int xargs_main(int argc, char **argv)
 		free(buf);
 	}
 
-	return child_error;
+#if ENABLE_FEATURE_XARGS_SUPPORT_PARALLEL
+	G.max_procs = 0;
+	xargs_exec(); /* final waitpid() loop */
+#endif
+
+	return G.xargs_exitcode;
 }
 
 
diff -urpN busybox-1.27.2/include/bb_archive.h busybox-1.28.0/include/bb_archive.h
--- busybox-1.27.2/include/bb_archive.h	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/include/bb_archive.h	2017-08-17 13:50:45.000000000 +0200
@@ -188,6 +188,7 @@ char get_header_ar(archive_handle_t *arc
 char get_header_cpio(archive_handle_t *archive_handle) FAST_FUNC;
 char get_header_tar(archive_handle_t *archive_handle) FAST_FUNC;
 char get_header_tar_gz(archive_handle_t *archive_handle) FAST_FUNC;
+char get_header_tar_xz(archive_handle_t *archive_handle) FAST_FUNC;
 char get_header_tar_bz2(archive_handle_t *archive_handle) FAST_FUNC;
 char get_header_tar_lzma(archive_handle_t *archive_handle) FAST_FUNC;
 char get_header_tar_xz(archive_handle_t *archive_handle) FAST_FUNC;
@@ -196,6 +197,7 @@ void seek_by_jump(int fd, off_t amount)
 void seek_by_read(int fd, off_t amount) FAST_FUNC;
 
 const char *strip_unsafe_prefix(const char *str) FAST_FUNC;
+int unsafe_symlink_target(const char *target) FAST_FUNC;
 
 void data_align(archive_handle_t *archive_handle, unsigned boundary) FAST_FUNC;
 const llist_t *find_list_entry(const llist_t *list, const char *filename) FAST_FUNC;
diff -urpN busybox-1.27.2/include/libbb.h busybox-1.28.0/include/libbb.h
--- busybox-1.27.2/include/libbb.h	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/include/libbb.h	2017-10-05 11:53:08.000000000 +0200
@@ -162,14 +162,22 @@
 #ifndef HAVE_XTABS
 # define XTABS TAB3
 #endif
+/*
+ * Use '%m' to append error string on platforms that support it,
+ * '%s' and strerror() on those that don't.
+ */
+#ifdef HAVE_PRINTF_PERCENTM
+# define STRERROR_FMT    "%m"
+# define STRERROR_ERRNO  /*nothing*/
+#else
+# define STRERROR_FMT    "%s"
+# define STRERROR_ERRNO  ,strerror(errno)
+#endif
 
 
 /* Some libc's forget to declare these, do it ourself */
 
 extern char **environ;
-#if defined(__GLIBC__) && __GLIBC__ < 2
-int vdprintf(int d, const char *format, va_list ap);
-#endif
 /* klogctl is in libc's klog.h, but we cheat and not #include that */
 int klogctl(int type, char *b, int len);
 #ifndef PATH_MAX
@@ -350,7 +358,7 @@ unsigned long long monotonic_ms(void) FA
 unsigned monotonic_sec(void) FAST_FUNC;
 
 extern void chomp(char *s) FAST_FUNC;
-extern void trim(char *s) FAST_FUNC;
+extern char *trim(char *s) FAST_FUNC;
 extern char *skip_whitespace(const char *) FAST_FUNC;
 extern char *skip_non_whitespace(const char *) FAST_FUNC;
 extern char *skip_dev_pfx(const char *tty_name) FAST_FUNC;
@@ -866,7 +874,7 @@ unsigned bb_clk_tck(void) FAST_FUNC;
 
 #if SEAMLESS_COMPRESSION
 /* Autodetects gzip/bzip2 formats. fd may be in the middle of the file! */
-extern int setup_unzip_on_fd(int fd, int fail_if_not_compressed) FAST_FUNC;
+int setup_unzip_on_fd(int fd, int fail_if_not_compressed) FAST_FUNC;
 /* Autodetects .gz etc */
 extern int open_zipped(const char *fname, int fail_if_not_compressed) FAST_FUNC;
 extern void *xmalloc_open_zipped_read_close(const char *fname, size_t *maxsz_p) FAST_FUNC RETURNS_MALLOC;
@@ -875,6 +883,8 @@ extern void *xmalloc_open_zipped_read_cl
 # define open_zipped(fname, fail_if_not_compressed)  open((fname), O_RDONLY);
 # define xmalloc_open_zipped_read_close(fname, maxsz_p) xmalloc_open_read_close((fname), (maxsz_p))
 #endif
+/* lzma has no signature, need a little helper. NB: exist only for ENABLE_FEATURE_SEAMLESS_LZMA=y */
+void setup_lzma_on_fd(int fd) FAST_FUNC;
 
 extern ssize_t safe_write(int fd, const void *buf, size_t count) FAST_FUNC;
 // NB: will return short write on error, not -1,
@@ -1033,6 +1043,15 @@ void die_if_bad_username(const char* nam
 #else
 #define die_if_bad_username(name) ((void)(name))
 #endif
+/*
+ * Returns (-1) terminated malloced result of getgroups().
+ * Reallocs group_array (useful for repeated calls).
+ * ngroups is an initial size of array. It is rounded up to 32 for realloc.
+ * ngroups is updated on return.
+ * ngroups can be NULL: bb_getgroups(NULL, NULL) is valid usage.
+ * Dies on errors (on Linux, only xrealloc can cause this, not internal getgroups call).
+ */
+gid_t *bb_getgroups(int *ngroups, gid_t *group_array) FAST_FUNC;
 
 #if ENABLE_FEATURE_UTMP
 void FAST_FUNC write_new_utmp(pid_t pid, int new_type, const char *tty_name, const char *username, const char *hostname);
@@ -1106,9 +1125,15 @@ int wait_for_exitstatus(pid_t pid) FAST_
 int spawn_and_wait(char **argv) FAST_FUNC;
 /* Does NOT check that applet is NOFORK, just blindly runs it */
 int run_nofork_applet(int applet_no, char **argv) FAST_FUNC;
+void run_noexec_applet_and_exit(int a, const char *name, char **argv) NORETURN FAST_FUNC;
 #ifndef BUILD_INDIVIDUAL
-extern int find_applet_by_name(const char *name) FAST_FUNC;
-extern void run_applet_no_and_exit(int a, const char *name, char **argv) NORETURN FAST_FUNC;
+int find_applet_by_name(const char *name) FAST_FUNC;
+void run_applet_no_and_exit(int a, const char *name, char **argv) NORETURN FAST_FUNC;
+#endif
+#if defined(__linux__)
+void set_task_comm(const char *comm) FAST_FUNC;
+#else
+# define set_task_comm(name) ((void)0)
 #endif
 
 /* Helpers for daemonization.
@@ -1163,21 +1188,26 @@ enum {
 #endif
 void bb_daemonize_or_rexec(int flags, char **argv) FAST_FUNC;
 void bb_sanitize_stdio(void) FAST_FUNC;
+#define bb_daemon_helper(arg) bb_daemonize_or_rexec((arg) | DAEMON_ONLY_SANITIZE, NULL)
 /* Clear dangerous stuff, set PATH. Return 1 if was run by different user. */
 int sanitize_env_if_suid(void) FAST_FUNC;
 
 
+/* For top, ps. Some argv[i] are replaced by malloced "-opt" strings */
+void make_all_argv_opts(char **argv) FAST_FUNC;
 char* single_argv(char **argv) FAST_FUNC;
-extern const char *const bb_argv_dash[]; /* "-", NULL */
-extern const char *opt_complementary;
-#if ENABLE_LONG_OPTS || ENABLE_FEATURE_GETOPT_LONG
-#define No_argument "\0"
-#define Required_argument "\001"
-#define Optional_argument "\002"
-extern const char *applet_long_options;
-#endif
+extern const char *const bb_argv_dash[]; /* { "-", NULL } */
 extern uint32_t option_mask32;
-extern uint32_t getopt32(char **argv, const char *applet_opts, ...) FAST_FUNC;
+uint32_t getopt32(char **argv, const char *applet_opts, ...) FAST_FUNC;
+# define No_argument "\0"
+# define Required_argument "\001"
+# define Optional_argument "\002"
+#if ENABLE_LONG_OPTS
+uint32_t getopt32long(char **argv, const char *optstring, const char *longopts, ...) FAST_FUNC;
+#else
+#define getopt32long(argv,optstring,longopts,...) \
+	getopt32(argv,optstring,##__VA_ARGS__)
+#endif
 /* BSD-derived getopt() functions require that optind be set to 1 in
  * order to reset getopt() state.  This used to be generally accepted
  * way of resetting getopt().  However, glibc's getopt()
@@ -1193,7 +1223,7 @@ extern uint32_t getopt32(char **argv, co
  * By ~2008, OpenBSD 3.4 was changed to survive glibc-like optind = 0
  * (to interpret it as if optreset was set).
  */
-#ifdef __GLIBC__
+#if 1 /*def __GLIBC__*/
 #define GETOPT_RESET() (optind = 0)
 #else /* BSD style */
 #define GETOPT_RESET() (optind = 1)
@@ -1394,6 +1424,11 @@ enum {
 	// keep a copy of current line
 	PARSE_KEEP_COPY = 0x00200000 * ENABLE_FEATURE_CROND_D,
 	PARSE_EOL_COMMENTS = 0x00400000, // comments are recognized even if they aren't the first char
+	PARSE_ALT_COMMENTS = 0x00800000, // delim[0] and delim[1] are two different allowed comment chars
+	// (so far, delim[0] will only work as comment char for full-line comment)
+	// (IOW: it works as if PARSE_EOL_COMMENTS is not set. sysctl applet is okay with this)
+	PARSE_WS_COMMENTS  = 0x01000000, // comments are recognized even if there is whitespace before
+	// ("line start><space><tab><space>#comment" is also comment, not only "line start>#comment")
 	// NORMAL is:
 	// * remove leading and trailing delimiters and collapse
 	//   multiple delimiters into one
@@ -1449,6 +1484,21 @@ extern void run_shell(const char *shell,
  */
 const char *get_shell_name(void) FAST_FUNC;
 
+unsigned cap_name_to_number(const char *cap) FAST_FUNC;
+void printf_cap(const char *pfx, unsigned cap_no) FAST_FUNC;
+void drop_capability(int cap_ordinal) FAST_FUNC;
+/* Structures inside "struct caps" are Linux-specific and libcap-specific: */
+#define DEFINE_STRUCT_CAPS \
+struct caps { \
+	struct __user_cap_header_struct header; \
+	unsigned u32s; \
+	struct __user_cap_data_struct data[2]; \
+}
+void getcaps(void *caps) FAST_FUNC;
+
+unsigned cap_name_to_number(const char *name) FAST_FUNC;
+void printf_cap(const char *pfx, unsigned cap_no) FAST_FUNC;
+
 #if ENABLE_SELINUX
 extern void renew_current_security_context(void) FAST_FUNC;
 extern void set_current_security_context(security_context_t sid) FAST_FUNC;
@@ -1476,6 +1526,9 @@ extern void selinux_or_die(void) FAST_FU
  *   HOME=pw->pw_dir
  *   SHELL=shell
  * else does nothing
+ *
+ * NB: CHANGEENV and CLEARENV use setenv() - this leaks memory!
+ * If setup_environment() is used is vforked child, this leaks memory _in parent too_!
  */
 #define SETUP_ENV_CHANGEENV (1 << 0)
 #define SETUP_ENV_CLEARENV  (1 << 1)
@@ -1540,6 +1593,7 @@ int tcsetattr_stdin_TCSANOW(const struct
 #define TERMIOS_CLEAR_ISIG (1 << 0)
 #define TERMIOS_RAW_CRNL   (1 << 1)
 #define TERMIOS_RAW_INPUT  (1 << 2)
+int get_termios_and_make_raw(int fd, struct termios *newterm, struct termios *oldterm, int flags) FAST_FUNC;
 int set_termios_to_raw(int fd, struct termios *oldterm, int flags) FAST_FUNC;
 
 /* NB: "unsigned request" is crucial! "int request" will break some arches! */
@@ -1630,9 +1684,9 @@ enum {
  * buffer[0] is used as a counter of buffered chars and must be 0
  * on first call.
  * timeout:
- * -2: do not poll for input;
- * -1: poll(-1) (i.e. block);
- * >=0: poll for TIMEOUT milliseconds, return -1/EAGAIN on timeout
+ * -2: do not poll(-1) for input - read() it, return on EAGAIN at once
+ * -1: poll(-1) (i.e. block even on NONBLOCKed fd)
+ * >=0: poll() for TIMEOUT milliseconds, return -1/EAGAIN on timeout
  */
 int64_t read_key(int fd, char *buffer, int timeout) FAST_FUNC;
 void read_key_ungets(char *buffer, const char *str, unsigned len) FAST_FUNC;
@@ -1648,6 +1702,7 @@ unsigned size_from_HISTFILESIZE(const ch
 # endif
 typedef struct line_input_t {
 	int flags;
+	int timeout;
 	const char *path_lookup;
 # if MAX_HISTORY
 	int cnt_history;
@@ -1683,7 +1738,7 @@ line_input_t *new_line_input_t(int flags
  * 0  on ctrl-C (the line entered is still returned in 'command'),
  * >0 length of input string, including terminating '\n'
  */
-int read_line_input(line_input_t *st, const char *prompt, char *command, int maxsize, int timeout) FAST_FUNC;
+int read_line_input(line_input_t *st, const char *prompt, char *command, int maxsize) FAST_FUNC;
 void show_history(const line_input_t *st) FAST_FUNC;
 # if ENABLE_FEATURE_EDITING_SAVE_ON_EXIT
 void save_history(line_input_t *st);
@@ -1691,7 +1746,7 @@ void save_history(line_input_t *st);
 #else
 #define MAX_HISTORY 0
 int read_line_input(const char* prompt, char* command, int maxsize) FAST_FUNC;
-#define read_line_input(state, prompt, command, maxsize, timeout) \
+#define read_line_input(state, prompt, command, maxsize) \
 	read_line_input(prompt, command, maxsize)
 #endif
 
diff -urpN busybox-1.27.2/include/platform.h busybox-1.28.0/include/platform.h
--- busybox-1.27.2/include/platform.h	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/include/platform.h	2017-08-17 13:50:45.000000000 +0200
@@ -45,6 +45,13 @@
 
 #define UNUSED_PARAM __attribute__ ((__unused__))
 #define NORETURN __attribute__ ((__noreturn__))
+
+#if __GNUC_PREREQ(4,5)
+# define bb_unreachable(altcode) __builtin_unreachable()
+#else
+# define bb_unreachable(altcode) altcode
+#endif
+
 /* "The malloc attribute is used to tell the compiler that a function
  * may be treated as if any non-NULL pointer it returns cannot alias
  * any other pointer valid when the function returns. This will often
@@ -247,6 +254,17 @@ typedef uint64_t bb__aliased_uint64_t FI
 } while (0)
 #endif
 
+/* Unaligned, fixed-endian accessors */
+#define get_unaligned_le32(buf) ({ uint32_t v; move_from_unaligned32(v, buf); SWAP_LE32(v); })
+#define get_unaligned_be32(buf) ({ uint32_t v; move_from_unaligned32(v, buf); SWAP_BE32(v); })
+#define put_unaligned_le32(val, buf) move_to_unaligned32(buf, SWAP_LE32(val))
+#define put_unaligned_be32(val, buf) move_to_unaligned32(buf, SWAP_BE32(val))
+
+/* unxz needs an aligned fixed-endian accessor.
+ * (however, the compiler does not realize it's aligned, the cast is still necessary)
+ */
+#define get_le32(u32p) ({ uint32_t v = *(bb__aliased_uint32_t*)(u32p); SWAP_LE32(v); })
+
 
 /* ---- Size-saving "small" ints (arch-dependent) ----------- */
 
@@ -393,6 +411,7 @@ typedef unsigned smalluint;
 #define HAVE_MNTENT_H 1
 #define HAVE_NET_ETHERNET_H 1
 #define HAVE_SYS_STATFS_H 1
+#define HAVE_PRINTF_PERCENTM 1
 
 #if defined(__UCLIBC__)
 # if UCLIBC_VERSION < KERNEL_VERSION(0, 9, 32)
@@ -448,6 +467,7 @@ typedef unsigned smalluint;
 # undef HAVE_DPRINTF
 # undef HAVE_UNLOCKED_STDIO
 # undef HAVE_UNLOCKED_LINE_OPS
+# undef HAVE_PRINTF_PERCENTM
 #endif
 
 #if defined(__dietlibc__)
@@ -470,6 +490,7 @@ typedef unsigned smalluint;
 # undef HAVE_STRVERSCMP
 # undef HAVE_XTABS
 # undef HAVE_UNLOCKED_LINE_OPS
+# undef HAVE_PRINTF_PERCENTM
 # include <osreldate.h>
 # if __FreeBSD_version < 1000029
 #  undef HAVE_STRCHRNUL /* FreeBSD added strchrnul() between 1000028 and 1000029 */
@@ -504,6 +525,7 @@ typedef unsigned smalluint;
 # undef HAVE_STRVERSCMP
 # undef HAVE_UNLOCKED_LINE_OPS
 # undef HAVE_NET_ETHERNET_H
+# undef HAVE_PRINTF_PERCENTM
 #endif
 
 /*
diff -urpN busybox-1.27.2/init/bootchartd.c busybox-1.28.0/init/bootchartd.c
--- busybox-1.27.2/init/bootchartd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/init/bootchartd.c	2017-10-05 11:53:08.000000000 +0200
@@ -2,49 +2,48 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
-//applet:IF_BOOTCHARTD(APPLET(bootchartd, BB_DIR_SBIN, BB_SUID_DROP))
-
-//kbuild:lib-$(CONFIG_BOOTCHARTD) += bootchartd.o
-
 //config:config BOOTCHARTD
-//config:	bool "bootchartd"
+//config:	bool "bootchartd (10 kb)"
 //config:	default y
 //config:	help
-//config:	  bootchartd is commonly used to profile the boot process
-//config:	  for the purpose of speeding it up. In this case, it is started
-//config:	  by the kernel as the init process. This is configured by adding
-//config:	  the init=/sbin/bootchartd option to the kernel command line.
+//config:	bootchartd is commonly used to profile the boot process
+//config:	for the purpose of speeding it up. In this case, it is started
+//config:	by the kernel as the init process. This is configured by adding
+//config:	the init=/sbin/bootchartd option to the kernel command line.
 //config:
-//config:	  It can also be used to monitor the resource usage of a specific
-//config:	  application or the running system in general. In this case,
-//config:	  bootchartd is started interactively by running bootchartd start
-//config:	  and stopped using bootchartd stop.
+//config:	It can also be used to monitor the resource usage of a specific
+//config:	application or the running system in general. In this case,
+//config:	bootchartd is started interactively by running bootchartd start
+//config:	and stopped using bootchartd stop.
 //config:
 //config:config FEATURE_BOOTCHARTD_BLOATED_HEADER
 //config:	bool "Compatible, bloated header"
 //config:	default y
 //config:	depends on BOOTCHARTD
 //config:	help
-//config:	  Create extended header file compatible with "big" bootchartd.
-//config:	  "Big" bootchartd is a shell script and it dumps some
-//config:	  "convenient" info int the header, such as:
-//config:	    title = Boot chart for `hostname` (`date`)
-//config:	    system.uname = `uname -srvm`
-//config:	    system.release = `cat /etc/DISTRO-release`
-//config:	    system.cpu = `grep '^model name' /proc/cpuinfo | head -1` ($cpucount)
-//config:	    system.kernel.options = `cat /proc/cmdline`
-//config:	  This data is not mandatory for bootchart graph generation,
-//config:	  and is considered bloat. Nevertheless, this option
-//config:	  makes bootchartd applet to dump a subset of it.
+//config:	Create extended header file compatible with "big" bootchartd.
+//config:	"Big" bootchartd is a shell script and it dumps some
+//config:	"convenient" info int the header, such as:
+//config:		title = Boot chart for `hostname` (`date`)
+//config:		system.uname = `uname -srvm`
+//config:		system.release = `cat /etc/DISTRO-release`
+//config:		system.cpu = `grep '^model name' /proc/cpuinfo | head -1` ($cpucount)
+//config:		system.kernel.options = `cat /proc/cmdline`
+//config:	This data is not mandatory for bootchart graph generation,
+//config:	and is considered bloat. Nevertheless, this option
+//config:	makes bootchartd applet to dump a subset of it.
 //config:
 //config:config FEATURE_BOOTCHARTD_CONFIG_FILE
 //config:	bool "Support bootchartd.conf"
 //config:	default y
 //config:	depends on BOOTCHARTD
 //config:	help
-//config:	  Enable reading and parsing of $PWD/bootchartd.conf
-//config:	  and /etc/bootchartd.conf files.
+//config:	Enable reading and parsing of $PWD/bootchartd.conf
+//config:	and /etc/bootchartd.conf files.
+
+//applet:IF_BOOTCHARTD(APPLET(bootchartd, BB_DIR_SBIN, BB_SUID_DROP))
+
+//kbuild:lib-$(CONFIG_BOOTCHARTD) += bootchartd.o
 
 #include "libbb.h"
 #include "common_bufsiz.h"
@@ -171,7 +170,9 @@ static int dump_procs(FILE *fp, int look
 			p++;
 			strchrnul(p, ')')[0] = '\0';
 			/* Is it gdm, kdm or a getty? */
-			if (((p[0] == 'g' || p[0] == 'k' || p[0] == 'x') && p[1] == 'd' && p[2] == 'm')
+			if (((p[0] == 'g' || p[0] == 'k' || p[0] == 'x')
+			     && p[1] == 'd' && p[2] == 'm' && p[3] == '\0'
+			    )
 			 || strstr(p, "getty")
 			) {
 				found_login_process = 1;
@@ -190,7 +191,7 @@ static char *make_tempdir(void)
 	if (!tempdir) {
 #ifdef __linux__
 		/* /tmp is not writable (happens when we are used as init).
-		 * Try to mount a tmpfs, them cd and lazily unmount it.
+		 * Try to mount a tmpfs, then cd and lazily unmount it.
 		 * Since we unmount it at once, we can mount it anywhere.
 		 * Try a few locations which are likely ti exist.
 		 */
diff -urpN busybox-1.27.2/init/halt.c busybox-1.28.0/init/halt.c
--- busybox-1.27.2/init/halt.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/init/halt.c	2017-10-05 11:53:08.000000000 +0200
@@ -6,44 +6,43 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 //config:config HALT
-//config:	bool "halt"
+//config:	bool "halt (3.7 kb)"
 //config:	default y
 //config:	help
-//config:	  Stop all processes and halt the system.
+//config:	Stop all processes and halt the system.
 //config:
 //config:config POWEROFF
-//config:	bool "poweroff"
+//config:	bool "poweroff (3.7 kb)"
 //config:	default y
 //config:	help
-//config:	  Stop all processes and power off the system.
+//config:	Stop all processes and power off the system.
 //config:
 //config:config REBOOT
-//config:	bool "reboot"
+//config:	bool "reboot (3.7 kb)"
 //config:	default y
 //config:	help
-//config:	  Stop all processes and reboot the system.
+//config:	Stop all processes and reboot the system.
 //config:
 //config:config FEATURE_CALL_TELINIT
 //config:	bool "Call telinit on shutdown and reboot"
 //config:	default y
 //config:	depends on (HALT || POWEROFF || REBOOT) && !INIT
 //config:	help
-//config:	  Call an external program (normally telinit) to facilitate
-//config:	  a switch to a proper runlevel.
+//config:	Call an external program (normally telinit) to facilitate
+//config:	a switch to a proper runlevel.
 //config:
-//config:	  This option is only available if you selected halt and friends,
-//config:	  but did not select init.
+//config:	This option is only available if you selected halt and friends,
+//config:	but did not select init.
 //config:
 //config:config TELINIT_PATH
 //config:	string "Path to telinit executable"
 //config:	default "/sbin/telinit"
 //config:	depends on FEATURE_CALL_TELINIT
 //config:	help
-//config:	  When busybox halt and friends have to call external telinit
-//config:	  to facilitate proper shutdown, this path is to be used when
-//config:	  locating telinit executable.
+//config:	When busybox halt and friends have to call external telinit
+//config:	to facilitate proper shutdown, this path is to be used when
+//config:	locating telinit executable.
 
 //applet:IF_HALT(APPLET(halt, BB_DIR_SBIN, BB_SUID_DROP))
 //                   APPLET_ODDNAME:name      main  location     suid_type     help
diff -urpN busybox-1.27.2/init/init.c busybox-1.28.0/init/init.c
--- busybox-1.27.2/init/init.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/init/init.c	2017-12-04 16:07:47.000000000 +0100
@@ -8,40 +8,39 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config INIT
-//config:	bool "init"
+//config:	bool "init (9.3 kb)"
 //config:	default y
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	  init is the first program run when the system boots.
+//config:	init is the first program run when the system boots.
 //config:
 //config:config LINUXRC
 //config:	bool "linuxrc: support running init from initrd (not initramfs)"
 //config:	default y
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	  Legacy support for running init under the old-style initrd. Allows
-//config:	  the name linuxrc to act as init, and it doesn't assume init is PID 1.
+//config:	Legacy support for running init under the old-style initrd. Allows
+//config:	the name linuxrc to act as init, and it doesn't assume init is PID 1.
 //config:
-//config:	  This does not apply to initramfs, which runs /init as PID 1 and
-//config:	  requires no special support.
+//config:	This does not apply to initramfs, which runs /init as PID 1 and
+//config:	requires no special support.
 //config:
 //config:config FEATURE_USE_INITTAB
 //config:	bool "Support reading an inittab file"
 //config:	default y
 //config:	depends on INIT || LINUXRC
 //config:	help
-//config:	  Allow init to read an inittab file when the system boot.
+//config:	Allow init to read an inittab file when the system boot.
 //config:
 //config:config FEATURE_KILL_REMOVED
 //config:	bool "Support killing processes that have been removed from inittab"
 //config:	default n
 //config:	depends on FEATURE_USE_INITTAB
 //config:	help
-//config:	  When respawn entries are removed from inittab and a SIGHUP is
-//config:	  sent to init, this option will make init kill the processes
-//config:	  that have been removed.
+//config:	When respawn entries are removed from inittab and a SIGHUP is
+//config:	sent to init, this option will make init kill the processes
+//config:	that have been removed.
 //config:
 //config:config FEATURE_KILL_DELAY
 //config:	int "How long to wait between TERM and KILL (0 - send TERM only)" if FEATURE_KILL_REMOVED
@@ -49,34 +48,34 @@
 //config:	default 0
 //config:	depends on FEATURE_KILL_REMOVED
 //config:	help
-//config:	  With nonzero setting, init sends TERM, forks, child waits N
-//config:	  seconds, sends KILL and exits. Setting it too high is unwise
-//config:	  (child will hang around for too long and could actually kill
-//config:	  the wrong process!)
+//config:	With nonzero setting, init sends TERM, forks, child waits N
+//config:	seconds, sends KILL and exits. Setting it too high is unwise
+//config:	(child will hang around for too long and could actually kill
+//config:	the wrong process!)
 //config:
 //config:config FEATURE_INIT_SCTTY
 //config:	bool "Run commands with leading dash with controlling tty"
 //config:	default y
 //config:	depends on INIT || LINUXRC
 //config:	help
-//config:	  If this option is enabled, init will try to give a controlling
-//config:	  tty to any command which has leading hyphen (often it's "-/bin/sh").
-//config:	  More precisely, init will do "ioctl(STDIN_FILENO, TIOCSCTTY, 0)".
-//config:	  If device attached to STDIN_FILENO can be a ctty but is not yet
-//config:	  a ctty for other session, it will become this process' ctty.
-//config:	  This is not the traditional init behavour, but is often what you want
-//config:	  in an embedded system where the console is only accessed during
-//config:	  development or for maintenance.
-//config:	  NB: using cttyhack applet may work better.
+//config:	If this option is enabled, init will try to give a controlling
+//config:	tty to any command which has leading hyphen (often it's "-/bin/sh").
+//config:	More precisely, init will do "ioctl(STDIN_FILENO, TIOCSCTTY, 0)".
+//config:	If device attached to STDIN_FILENO can be a ctty but is not yet
+//config:	a ctty for other session, it will become this process' ctty.
+//config:	This is not the traditional init behavour, but is often what you want
+//config:	in an embedded system where the console is only accessed during
+//config:	development or for maintenance.
+//config:	NB: using cttyhack applet may work better.
 //config:
 //config:config FEATURE_INIT_SYSLOG
 //config:	bool "Enable init to write to syslog"
 //config:	default y
 //config:	depends on INIT || LINUXRC
 //config:	help
-//config:	  If selected, some init messages are sent to syslog.
-//config:	  Otherwise, they are sent to VT #5 if linux virtual tty is detected
-//config:	  (if not, no separate logging is done).
+//config:	If selected, some init messages are sent to syslog.
+//config:	Otherwise, they are sent to VT #5 if linux virtual tty is detected
+//config:	(if not, no separate logging is done).
 //config:
 //config:config FEATURE_INIT_QUIET
 //config:	bool "Be quiet on boot (no 'init started:' message)"
@@ -88,37 +87,37 @@
 //config:	default n	# not Y because this is a debug option
 //config:	depends on INIT || LINUXRC
 //config:	help
-//config:	  If this option is enabled and the file /.init_enable_core
-//config:	  exists, then init will call setrlimit() to allow unlimited
-//config:	  core file sizes. If this option is disabled, processes
-//config:	  will not generate any core files.
+//config:	If this option is enabled and the file /.init_enable_core
+//config:	exists, then init will call setrlimit() to allow unlimited
+//config:	core file sizes. If this option is disabled, processes
+//config:	will not generate any core files.
 //config:
 //config:config INIT_TERMINAL_TYPE
 //config:	string "Initial terminal type"
 //config:	default "linux"
 //config:	depends on INIT || LINUXRC
 //config:	help
-//config:	  This is the initial value set by init for the TERM environment
-//config:	  variable. This variable is used by programs which make use of
-//config:	  extended terminal capabilities.
+//config:	This is the initial value set by init for the TERM environment
+//config:	variable. This variable is used by programs which make use of
+//config:	extended terminal capabilities.
 //config:
-//config:	  Note that on Linux, init attempts to detect serial terminal and
-//config:	  sets TERM to "vt102" if one is found.
+//config:	Note that on Linux, init attempts to detect serial terminal and
+//config:	sets TERM to "vt102" if one is found.
 //config:
 //config:config FEATURE_INIT_MODIFY_CMDLINE
 //config:	bool "Clear init's command line"
 //config:	default y
 //config:	depends on INIT || LINUXRC
 //config:	help
-//config:	  When launched as PID 1 and after parsing its arguments, init
-//config:	  wipes all the arguments but argv[0] and rewrites argv[0] to
-//config:	  contain only "init", so that its command line appears solely as
-//config:	  "init" in tools such as ps.
-//config:	  If this option is set to Y, init will keep its original behavior,
-//config:	  otherwise, all the arguments including argv[0] will be preserved,
-//config:	  be they parsed or ignored by init.
-//config:	  The original command-line used to launch init can then be
-//config:	  retrieved in /proc/1/cmdline on Linux, for example.
+//config:	When launched as PID 1 and after parsing its arguments, init
+//config:	wipes all the arguments but argv[0] and rewrites argv[0] to
+//config:	contain only "init", so that its command line appears solely as
+//config:	"init" in tools such as ps.
+//config:	If this option is set to Y, init will keep its original behavior,
+//config:	otherwise, all the arguments including argv[0] will be preserved,
+//config:	be they parsed or ignored by init.
+//config:	The original command-line used to launch init can then be
+//config:	retrieved in /proc/1/cmdline on Linux, for example.
 
 //applet:IF_INIT(APPLET(init, BB_DIR_SBIN, BB_SUID_DROP))
 //applet:IF_LINUXRC(APPLET_ODDNAME(linuxrc, init, BB_DIR_ROOT, BB_SUID_DROP, linuxrc))
@@ -392,8 +391,10 @@ static int open_stdio_to_tty(const char*
 		/* fd can be only < 0 or 0: */
 		fd = device_open(tty_name, O_RDWR);
 		if (fd) {
-			message(L_LOG | L_CONSOLE, "can't open %s: %s",
-				tty_name, strerror(errno));
+			message(L_LOG | L_CONSOLE, "can't open %s: "STRERROR_FMT,
+				tty_name
+				STRERROR_ERRNO
+			);
 			return 0; /* failure */
 		}
 		dup2(STDIN_FILENO, STDOUT_FILENO);
@@ -470,7 +471,7 @@ static void init_exec(const char *comman
 	}
 	/* Here command never contains the dash, cmd[0] might */
 	BB_EXECVP(command, cmd);
-	message(L_LOG | L_CONSOLE, "can't run '%s': %s", command, strerror(errno));
+	message(L_LOG | L_CONSOLE, "can't run '%s': "STRERROR_FMT, command STRERROR_ERRNO);
 	/* returns if execvp fails */
 }
 
@@ -1063,6 +1064,12 @@ int init_main(int argc UNUSED_PARAM, cha
 #endif
 
 	if (!DEBUG_INIT) {
+		/* Some users send poweroff signals to init VERY early.
+		 * To handle this, mask signals early,
+		 * and unmask them only after signal handlers are installed.
+		 */
+		sigprocmask_allsigs(SIG_BLOCK);
+
 		/* Expect to be invoked as init with PID=1 or be invoked as linuxrc */
 		if (getpid() != 1
 		 && (!ENABLE_LINUXRC || applet_name[0] != 'l') /* not linuxrc? */
@@ -1105,29 +1112,6 @@ int init_main(int argc UNUSED_PARAM, cha
 	message(L_CONSOLE | L_LOG, "init started: %s", bb_banner);
 #endif
 
-#if 0
-/* It's 2013, does anyone really still depend on this? */
-/* If you do, consider adding swapon to sysinit actions then! */
-/* struct sysinfo is linux-specific */
-# ifdef __linux__
-	/* Make sure there is enough memory to do something useful. */
-	/*if (ENABLE_SWAPONOFF) - WRONG: we may have non-bbox swapon*/ {
-		struct sysinfo info;
-
-		if (sysinfo(&info) == 0
-		 && (info.mem_unit ? info.mem_unit : 1) * (long long)info.totalram < 1024*1024
-		) {
-			message(L_CONSOLE, "Low memory, forcing swapon");
-			/* swapon -a requires /proc typically */
-			new_init_action(SYSINIT, "mount -t proc proc /proc", "");
-			/* Try to turn on swap */
-			new_init_action(SYSINIT, "swapon -a", "");
-			run_actions(SYSINIT);   /* wait and removing */
-		}
-	}
-# endif
-#endif
-
 	/* Check if we are supposed to be in single user mode */
 	if (argv[1]
 	 && (strcmp(argv[1], "single") == 0 || strcmp(argv[1], "-s") == 0 || LONE_CHAR(argv[1], '1'))
@@ -1203,6 +1187,8 @@ int init_main(int argc UNUSED_PARAM, cha
 			+ (1 << SIGHUP)  /* reread /etc/inittab */
 #endif
 			, record_signo);
+
+		sigprocmask_allsigs(SIG_UNBLOCK);
 	}
 
 	/* Now run everything that needs to be run */
diff -urpN busybox-1.27.2/klibc-utils/Config.src busybox-1.28.0/klibc-utils/Config.src
--- busybox-1.27.2/klibc-utils/Config.src	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/klibc-utils/Config.src	2017-08-18 19:22:37.000000000 +0200
@@ -0,0 +1,10 @@
+#
+# For a description of the syntax of this configuration file,
+# see scripts/kbuild/config-language.txt.
+#
+
+menu "klibc-utils"
+
+INSERT
+
+endmenu
diff -urpN busybox-1.27.2/klibc-utils/Kbuild.src busybox-1.28.0/klibc-utils/Kbuild.src
--- busybox-1.27.2/klibc-utils/Kbuild.src	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/klibc-utils/Kbuild.src	2017-08-18 19:22:37.000000000 +0200
@@ -0,0 +1,9 @@
+# Makefile for busybox
+#
+# Copyright (C) 1999-2005 by Erik Andersen <andersen@codepoet.org>
+#
+# Licensed under GPLv2, see file LICENSE in this source tree.
+
+lib-y:=
+
+INSERT
diff -urpN busybox-1.27.2/klibc-utils/ipconfig.c.txt busybox-1.28.0/klibc-utils/ipconfig.c.txt
--- busybox-1.27.2/klibc-utils/ipconfig.c.txt	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/klibc-utils/ipconfig.c.txt	2017-09-07 14:42:40.000000000 +0200
@@ -0,0 +1,316 @@
+/*
+ * Copyright (c) 2017 Denys Vlasenko <vda.linux@googlemail.com>
+ *
+ * Licensed under GPLv2, see file LICENSE in this source tree.
+ */
+//config:config IPCONFIG
+//config:	bool "ipconfig"
+//config:	default y
+//config:	help
+//config:	(Auto)configure network.
+
+//applet:IF_IPCONFIG(APPLET(ipconfig, BB_DIR_BIN, BB_SUID_DROP))
+
+//kbuild:lib-$(CONFIG_IPCONFIG) += ipconfig.o
+
+#include <net/if.h>
+#include "libbb.h"
+
+struct globals {
+	int fixed;
+	const char *hostname;
+};
+#define G (*ptr_to_globals)
+#define INIT_G() do { \
+	SET_PTR_TO_GLOBALS(xzalloc(sizeof(G))); \
+} while (0)
+
+struct dev {
+	const char *name;
+	uint8_t  fixed;
+	uint32_t ip_addr;
+	uint32_t ip_netmask;
+	uint32_t ip_server;
+	uint32_t ip_router;
+};
+
+static int
+parse_method(const char *method)
+{
+	int fixed;
+
+	fixed = (method[0] != '\0');
+	if (fixed) {
+		/* if it's not "" */
+		fixed = index_in_strings(
+			/* 0 */ "on""\0"
+			/* 1 */ "any""\0"
+			/* 2 */ "both""\0"
+			/* 3 */ "dhcp""\0"
+			/* 4 */ "bootp""\0"
+			/* 5 */ "rarp""\0"
+			/* 6 */ "none""\0"
+			/* 7 */ "static""\0"
+			/* 8 */ "off""\0"
+			, method
+		);
+		if (fixed > 0)
+			fixed /= 6;
+	}
+	return fixed;
+}
+
+static uint32_t
+parse_addr(const char *ip)
+{
+	struct in_addr in;
+	if (inet_aton(ip, &in) == 0)
+		bb_error_msg_and_die("bad IP address '%s'", ip);
+	return in.s_addr;
+}
+
+static struct dev*
+find_device(llist_t *iface_list, const char *name)
+{
+	while (iface_list) {
+		struct dev *dev = (void*) iface_list->data;
+		if (strcmp(dev->name, name) == 0)
+			return dev;
+		iface_list = iface_list->link;
+	}
+	return NULL;
+}
+
+static void
+set_from_template(struct dev *dev, struct dev *template)
+{
+	if (template->ip_addr != 0)
+		dev->ip_addr = template->ip_addr;
+	if (template->ip_netmask != 0)
+		dev->ip_netmask = template->ip_netmask;
+	if (template->ip_server != 0)
+		dev->ip_server = template->ip_server;
+	if (template->ip_router != 0)
+		dev->ip_router = template->ip_router;
+	dev->fixed = template->fixed;
+}
+
+// "ip=PROTO" - also implies -o
+// "nfsaddrs=PROTO" - also implies -o
+// "<devname>"
+// "[ip=/nfsaddrs=]IP:SERVER_IP:ROUTER:NETMASK:HOSTNAME:IFACE:METHOD"
+// all optional. trailing empty :: can be skipped, only one : needs to be there
+// (to distinguish from other formats).
+// ":::::eth0" - dhcp on eth0
+// ":" - dhcp on all ifaces
+// "::1.2.3.4" - dhcp on all ifaces, gateway is 1.2.3.4 (fairly nonsensical)
+static void
+add_all_devices(llist_t **iface_list, struct dev *template);
+static struct dev*
+add_device(llist_t **iface_list, char *ip)
+{
+	struct dev *dev;
+
+	dev = xzalloc(sizeof(*dev));
+	dev->fixed = G.fixed;
+
+	if (strncmp("ip=", ip, 3) == 0
+	 || strncmp("nfsaddrs=", ip, 9) == 0
+	) {
+		int fixed;
+
+		ip = strchr(ip, '=') + 1;
+		fixed = parse_method(ip);
+		if (fixed >= 0) {
+			add_all_devices(iface_list, dev);
+			free(dev);
+			return NULL;
+		}
+	}
+
+	if (!strchr(ip, ':')) {
+		dev->name = ip;
+	} else {
+		unsigned opt = 0;
+		while (ip && *ip) {
+			char *next = strchr(ip, ':');
+			if (next)
+				*next++ = '\0';
+			if (opt > 6)
+				bb_error_msg_and_die("too many options for %s", dev->name);
+			if (ip[0]) switch (opt) {
+			case 0:
+				dev->ip_addr = parse_addr(ip);
+				break;
+			case 1:
+				dev->ip_server = parse_addr(ip);
+				break;
+			case 2:
+				dev->ip_router = parse_addr(ip);
+				break;
+			case 3:
+				dev->ip_netmask = parse_addr(ip);
+				break;
+			case 4:
+				if (G.hostname && strcmp(G.hostname, ip) != 0)
+					bb_error_msg_and_die("hostname must be the same");
+				G.hostname = ip;
+				break;
+			case 5:
+				dev->name = ip;
+				break;
+			case 6:
+				dev->fixed = parse_method(ip);
+				break;
+			}
+			ip = next;
+			opt++;
+		}
+	}
+
+	if (dev->name == NULL
+	 || strcmp(dev->name, "all") == 0
+	) {
+		add_all_devices(iface_list, dev);
+		free(dev);
+		return NULL;
+	}
+	llist_add_to_end(iface_list, dev);
+	return dev;
+}
+
+static void
+add_all_devices(llist_t **iface_list, struct dev *template)
+{
+	DIR *d;
+	struct dirent *de;
+#define sys_class_net "/sys/class/net"
+
+	/* All forms of "config all ifaces" imply -o */
+	option_mask32 |= 1;
+
+	d = opendir(sys_class_net);
+	if (!d)
+		return;
+
+	while ((de = readdir(d)) != NULL) {
+		struct dev *dev;
+		char *filename;
+		char p[sizeof(long)*3];
+		unsigned long flags;
+		int r;
+
+		/* Exclude devices beginning with dots as well as . and .. */
+		if (de->d_name[0] == '.')
+			continue;
+		filename = xasprintf("%s/%s/flags", sys_class_net, de->d_name);
+		r = open_read_close(filename, p, sizeof(p) - 1);
+		free(filename);
+		if (r < 0)
+			continue;
+		p[r] = '\0';
+		/* file's format is "0xNNNN\n" */
+		flags = bb_strtoul(p, NULL, 0);
+		/*
+		 * Heuristic for if this is a reasonable boot interface.
+		 * This is the same logic the in-kernel ipconfig uses.
+		 */
+		if (flags & IFF_LOOPBACK)
+			continue;
+		if (!(flags & (IFF_BROADCAST | IFF_POINTOPOINT)))
+			continue;
+		if (find_device(*iface_list, de->d_name))
+			continue;
+		dev = add_device(iface_list, xstrdup(de->d_name));
+		if (dev)
+			set_from_template(dev, template);
+	}
+	closedir(d);
+#undef sys_class_net
+}
+
+//usage:#define ipconfig_trivial_usage
+//usage:       "[-c METHOD] [-t TIMEOUT] [-on] [-i VENDOR_ID] [-p PORT] [-d] IFACE..."
+//usage:#define ipconfig_full_usage "\n\n"
+//usage:       "(Auto)configure network"
+//usage:   "\n"
+//usage:   "\n""	-c METHOD	off/none/static or on/dhcp (default)"
+//usage:   "\n""	-t SECONDS	Give up after SECONDS"
+//usage:   "\n""	-o		Stop after one interface is configured"
+//usage:   "\n""	-n		Dry run"
+//usage:   "\n""	-i VENDOR_ID	DHCP vendor id (default '')"
+//usage:   "\n""	-p PORT		DHCP port to use"
+//usage:   "\n""	[-d] IFACE...	Interface(s)"
+//usage:   "\n"
+//usage:   "\n""	IFACE can be:"
+//usage:   "\n""	all - configure all interfaces"
+//usage:   "\n""	IFACE - configure this interface"
+//usage:   "\n""	IP:SERVER_IP:ROUTER:NETMASK:HOSTNAME:IFACE:METHOD (all optional)"
+// TIMEOUT defaults to infinite
+// -d actually is an option with an argument
+// (not a clue why klibc-utils has two ways to specify interfaces)
+int ipconfig_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
+int ipconfig_main(int argc UNUSED_PARAM, char **argv)
+{
+	const char *method = "";
+	const char *vendor_id = "";
+	llist_t *devname_list = NULL;
+	llist_t *iface_list;
+	int timeout = -1;
+	unsigned port;
+	unsigned opt;
+
+	INIT_G();
+
+	opt = getopt32(argv,
+		"onc:t:i:p:+d:*",
+		&method, &timeout, &vendor_id, &port, &devname_list
+	);
+	argv += optind;
+
+	G.fixed = parse_method(method);
+	if (G.fixed < 0)
+		bb_show_usage();
+
+	iface_list = NULL;
+	while (devname_list)
+		add_device(&iface_list, (char*) llist_pop(&devname_list));
+	while (*argv)
+		add_device(&iface_list, *argv++);
+
+	while (iface_list) {
+		struct dev *dev = (void*) iface_list->data;
+		printf("name:'%s'\n", dev->name);
+		printf("fixed:%u\n" , dev->fixed);
+		printf("ip:%s/"     , inet_ntoa(*(struct in_addr*)&dev->ip_addr));
+		printf("%s\n"       , inet_ntoa(*(struct in_addr*)&dev->ip_netmask));
+		printf("server:%s\n", inet_ntoa(*(struct in_addr*)&dev->ip_server));
+		printf("router:%s\n", inet_ntoa(*(struct in_addr*)&dev->ip_router));
+		iface_list = iface_list->link;
+	}
+	bb_error_msg("hostname:'%s'", G.hostname);
+	bb_error_msg("fixed:%u", G.fixed);
+
+	return EXIT_SUCCESS;
+}
+//After device is configured, write out a "/run/net-IFACE.conf" file:
+//                                                              // udchcp env values:
+//write_option("DEVICE",        dev->name);                     interface=eth0
+//write_option("PROTO",         method);
+//write_option("IPV4ADDR",      dev->ip_addr);                  ip=10.43.17.38
+//write_option("IPV4BROADCAST", dev->ip_broadcast);             subnet=255.255.255.0 mask=24
+//write_option("IPV4NETMASK",   dev->ip_netmask);               subnet=255.255.255.0 mask=24
+//write_option("IPV4GATEWAY",   dev->ip_gateway);               router=10.43.17.254
+//write_option("IPV4DNS0",      dev->ip_nameserver[0]);         dns=10.38.5.26 10.11.5.19
+//write_option("IPV4DNS1",      dev->ip_nameserver[1]);         dns=10.38.5.26 10.11.5.19
+//write_option("HOSTNAME",      dev->hostname);                   hostname="STR"
+//write_option("DNSDOMAIN",     dev->dnsdomainname);            domain=domain.com
+//write_option("NISDOMAIN",     dev->nisdomainname);              nisdomain="STR"
+//write_option("ROOTSERVER",    my_inet_ntoa(dev->ip_server));  serverid=10.44.6.2
+//write_option("ROOTPATH",      dev->bootpath);                   rootpath="STR"
+//write_option("filename",      dev->filename);                 boot_file=/pxelinux.0
+//write_option("UPTIME",        dev->uptime);                     sysinfo()->uptime
+//write_option("DHCPLEASETIME", dev->dhcpleasetime);            lease=44148
+//write_option("DOMAINSEARCH",  dev->domainsearch);             search="ABC DEF"
+//
+//(write_option writes out single-quote escaped string, VAR='VAL')
diff -urpN busybox-1.27.2/klibc-utils/minips.c busybox-1.28.0/klibc-utils/minips.c
--- busybox-1.27.2/klibc-utils/minips.c	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/klibc-utils/minips.c	2017-08-18 19:23:41.000000000 +0200
@@ -0,0 +1,12 @@
+/*
+ * Copyright (c) 2017 Denys Vlasenko <vda.linux@googlemail.com>
+ *
+ * Licensed under GPLv2, see file LICENSE in this source tree.
+ */
+//config:config MINIPS
+//config:	bool "minips (11 kb)"
+//config:	default n  # for god's sake, just use "ps" name in your scripts
+//config:	help
+//config:	Alias to "ps".
+
+/* applet and kbuild hooks are in ps.c */
diff -urpN busybox-1.27.2/klibc-utils/nuke.c busybox-1.28.0/klibc-utils/nuke.c
--- busybox-1.27.2/klibc-utils/nuke.c	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/klibc-utils/nuke.c	2017-09-07 14:42:40.000000000 +0200
@@ -0,0 +1,46 @@
+/*
+ * Copyright (c) 2017 Denys Vlasenko <vda.linux@googlemail.com>
+ *
+ * Licensed under GPLv2, see file LICENSE in this source tree.
+ */
+//config:config NUKE
+//config:	bool "nuke"
+//config:	default y
+//config:	help
+//config:	Alias to "rm -rf".
+
+//applet:IF_NUKE(APPLET_NOEXEC(nuke, nuke, BB_DIR_BIN, BB_SUID_DROP, nuke))
+
+//kbuild:lib-$(CONFIG_NUKE) += nuke.o
+
+//usage:#define nuke_trivial_usage
+//usage:       "DIR..."
+//usage:#define nuke_full_usage "\n\n"
+//usage:       "Remove DIRs"
+
+#include "libbb.h"
+
+/* This is a NOEXEC applet. Be very careful! */
+
+int nuke_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
+int nuke_main(int argc UNUSED_PARAM, char **argv)
+{
+// klibc-utils do not check opts, will try to delete "-dir" args
+	//opt = getopt32(argv, "");
+	//argv += optind;
+
+	while (*++argv) {
+#if 0
+// klibc-utils do not check this, will happily operate on ".."
+		const char *base = bb_get_last_path_component_strip(*argv);
+		if (DOT_OR_DOTDOT(base)) {
+			bb_error_msg("can't remove '.' or '..'");
+			continue;
+		}
+#endif
+		remove_file(*argv, FILEUTILS_FORCE | FILEUTILS_RECUR);
+	}
+
+// klibc-utils do not indicate errors
+	return EXIT_SUCCESS;
+}
diff -urpN busybox-1.27.2/klibc-utils/resume.c busybox-1.28.0/klibc-utils/resume.c
--- busybox-1.27.2/klibc-utils/resume.c	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/klibc-utils/resume.c	2017-09-07 14:42:40.000000000 +0200
@@ -0,0 +1,115 @@
+/*
+ * Copyright (c) 2017 Denys Vlasenko <vda.linux@googlemail.com>
+ *
+ * Licensed under GPLv2, see file LICENSE in this source tree.
+ */
+//config:config RESUME
+//config:	bool "resume"
+//config:	default y
+//config:	help
+//config:	Resume from saved "suspend-to-disk" image
+
+//applet:IF_RESUME(APPLET_NOEXEC(resume, resume, BB_DIR_BIN, BB_SUID_DROP, resume))
+
+//kbuild:lib-$(CONFIG_RESUME) += resume.o
+
+#include "libbb.h"
+
+/* This is a NOEXEC applet. Be very careful! */
+
+/* name_to_dev_t() in klibc-utils supports extended device name formats,
+ * apart from the usual case where /dev/NAME already exists.
+ *
+ * - device number in hexadecimal represents itself (in dev_t layout).
+ * - device number in major:minor decimal represents itself.
+ * - if block device (or partition) with this name is found in sysfs.
+ * - if /dev/ prefix is not given, it is assumed.
+ *
+ * klibc-utils also recognizes these, but they don't work
+ * for "resume" tool purposes (thus we don't support them (yet?)):
+ * - /dev/nfs
+ * - /dev/ram (alias to /dev/ram0)
+ * - /dev/mtd
+ */
+static dev_t name_to_dev_t(const char *devname)
+{
+	char devfile[sizeof(int)*3 * 2 + 4];
+	char *sysname;
+	unsigned major_num, minor_num;
+	struct stat st;
+	int r;
+
+	if (strncmp(devname, "/dev/", 5) != 0) {
+		char *cptr;
+
+		cptr = strchr(devname, ':');
+		if (cptr) {
+			/* Colon-separated decimal device number? */
+			*cptr = '\0';
+			major_num = bb_strtou(devname, NULL, 10);
+			if (!errno)
+				minor_num = bb_strtou(cptr + 1, NULL, 10);
+			*cptr = ':';
+			if (!errno)
+				return makedev(major_num, minor_num);
+		} else {
+			/* Hexadecimal device number? */
+			dev_t res = (dev_t) bb_strtoul(devname, NULL, 16);
+			if (!errno)
+				return res;
+		}
+
+		devname = xasprintf("/dev/%s", devname);
+	}
+	/* Now devname is always "/dev/FOO" */
+
+	if (stat(devname, &st) == 0 && S_ISBLK(st.st_mode))
+		return st.st_rdev;
+
+	/* Full blockdevs as well as partitions may be visible
+	 * in /sys/class/block/ even if /dev is not populated.
+	 */
+	sysname = xasprintf("/sys/class/block/%s/dev", devname + 5);
+	r = open_read_close(sysname, devfile, sizeof(devfile) - 1);
+	//free(sysname);
+	if (r > 0) {
+		devfile[r] = '\0';
+		if (sscanf(devfile, "%u:%u", &major_num, &minor_num) == 2) {
+			return makedev(major_num, minor_num);
+		}
+	}
+
+	return (dev_t) 0;
+}
+
+//usage:#define resume_trivial_usage
+//usage:       "BLOCKDEV [OFFSET]"
+//usage:#define resume_full_usage "\n"
+//usage:   "\n""Restore system state from 'suspend-to-disk' data in BLOCKDEV"
+
+int resume_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
+int resume_main(int argc UNUSED_PARAM, char **argv)
+{
+	unsigned long long ofs;
+	dev_t resume_device;
+	char *s;
+	int fd;
+
+	argv++;
+	if (!argv[0])
+		bb_show_usage();
+
+	resume_device = name_to_dev_t(argv[0]);
+	if (major(resume_device) == 0) {
+		bb_error_msg_and_die("invalid resume device: %s", argv[0]);
+	}
+	ofs = (argv[1] ? xstrtoull(argv[1], 0) : 0);
+
+	fd = xopen("/sys/power/resume", O_WRONLY);
+	s = xasprintf("%u:%u:%llu", major(resume_device), minor(resume_device), ofs);
+
+	xwrite_str(fd, s);
+	/* if write() returns, resume did not succeed */
+
+	return EXIT_FAILURE; /* klibc-utils exits -1 aka 255 */
+}
diff -urpN busybox-1.27.2/klibc-utils/run-init.c busybox-1.28.0/klibc-utils/run-init.c
--- busybox-1.27.2/klibc-utils/run-init.c	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/klibc-utils/run-init.c	2017-08-21 19:34:57.000000000 +0200
@@ -0,0 +1,27 @@
+/*
+ * run-init implementation for busybox
+ *
+ * Copyright (c) 2017 Denys Vlasenko <vda.linux@gmail.com>
+ *
+ * Licensed under GPLv2, see file LICENSE in this source tree.
+ */
+//config:config RUN_INIT
+//config:	bool "run-init"
+//config:	default y
+//config:	select PLATFORM_LINUX
+//config:	help
+//config:	The run-init utility is used from initramfs to select a new
+//config:	root device. Under initramfs, you have to use this instead of
+//config:	pivot_root.
+//config:
+//config:	Booting with initramfs extracts a gzipped cpio archive into rootfs
+//config:	(which is a variant of ramfs/tmpfs). Because rootfs can't be moved
+//config:	or unmounted, pivot_root will not work from initramfs. Instead,
+//config:	run-init deletes everything out of rootfs (including itself),
+//config:	does a mount --move that overmounts rootfs with the new root, and
+//config:	then execs the specified init program.
+//config:
+//config:	util-linux has a similar tool, switch-root.
+//config:	run-init differs by also having a "-d CAPS_TO_DROP" option.
+
+/* applet and kbuild hooks are in switch_root.c */
diff -urpN busybox-1.27.2/libbb/Config.src busybox-1.28.0/libbb/Config.src
--- busybox-1.27.2/libbb/Config.src	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/libbb/Config.src	2017-07-29 23:01:53.000000000 +0200
@@ -3,7 +3,7 @@
 # see scripts/kbuild/config-language.txt.
 #
 
-menu "Busybox Library Tuning"
+comment "Library Tuning"
 
 INSERT
 
@@ -11,14 +11,13 @@ choice
 	prompt "Buffer allocation policy"
 	default FEATURE_BUFFERS_USE_MALLOC
 	help
-	  There are 3 ways BusyBox can handle buffer allocations:
-	  - Use malloc. This costs code size for the call to xmalloc.
-	  - Put them on stack. For some very small machines with limited stack
-	    space, this can be deadly. For most folks, this works just fine.
-	  - Put them in BSS. This works beautifully for computers with a real
-	    MMU (and OS support), but wastes runtime RAM for uCLinux. This
-	    behavior was the only one available for BusyBox versions 0.48 and
-	    earlier.
+	There are 3 ways busybox can handle buffer allocations:
+	- Use malloc. This costs code size for the call to xmalloc.
+	- Put them on stack. For some very small machines with limited stack
+	space, this can be deadly. For most folks, this works just fine.
+	- Put them in BSS. This works beautifully for computers with a real
+	MMU (and OS support), but wastes runtime RAM for uCLinux. This
+	behavior was the only one available for versions 0.48 and earlier.
 
 config FEATURE_BUFFERS_USE_MALLOC
 	bool "Allocate with Malloc"
@@ -36,52 +35,52 @@ config PASSWORD_MINLEN
 	default 6
 	range 5 32
 	help
-	  Minimum allowable password length.
+	Minimum allowable password length.
 
 config MD5_SMALL
 	int "MD5: Trade bytes for speed (0:fast, 3:slow)"
 	default 1  # all "fast or small" options default to small
 	range 0 3
 	help
-	  Trade binary size versus speed for the md5sum algorithm.
-	  Approximate values running uClibc and hashing
-	  linux-2.4.4.tar.bz2 were:
-	                    user times (sec)  text size (386)
-	  0 (fastest)         1.1                6144
-	  1                   1.4                5392
-	  2                   3.0                5088
-	  3 (smallest)        5.1                4912
+	Trade binary size versus speed for the md5sum algorithm.
+	Approximate values running uClibc and hashing
+	linux-2.4.4.tar.bz2 were:
+	value               user times (sec)  text size (386)
+	0 (fastest)         1.1                6144
+	1                   1.4                5392
+	2                   3.0                5088
+	3 (smallest)        5.1                4912
 
 config SHA3_SMALL
 	int "SHA3: Trade bytes for speed (0:fast, 1:slow)"
 	default 1  # all "fast or small" options default to small
 	range 0 1
 	help
-	  Trade binary size versus speed for the sha3sum algorithm.
-	  SHA3_SMALL=0 compared to SHA3_SMALL=1 (approximate):
-	  64-bit x86: +270 bytes of code, 45% faster
-	  32-bit x86: +450 bytes of code, 75% faster
+	Trade binary size versus speed for the sha3sum algorithm.
+	SHA3_SMALL=0 compared to SHA3_SMALL=1 (approximate):
+	64-bit x86: +270 bytes of code, 45% faster
+	32-bit x86: +450 bytes of code, 75% faster
 
 config FEATURE_FAST_TOP
 	bool "Faster /proc scanning code (+100 bytes)"
 	default n  # all "fast or small" options default to small
 	help
-	  This option makes top (and ps) ~20% faster (or 20% less CPU hungry),
-	  but code size is slightly bigger.
+	This option makes top and ps ~20% faster (or 20% less CPU hungry),
+	but code size is slightly bigger.
 
 config FEATURE_ETC_NETWORKS
 	bool "Support /etc/networks"
 	default n
 	help
-	  Enable support for network names in /etc/networks. This is
-	  a rarely used feature which allows you to use names
-	  instead of IP/mask pairs in route command.
+	Enable support for network names in /etc/networks. This is
+	a rarely used feature which allows you to use names
+	instead of IP/mask pairs in route command.
 
 config FEATURE_EDITING
 	bool "Command line editing"
 	default y
 	help
-	  Enable line editing (mainly for shell command line).
+	Enable line editing (mainly for shell command line).
 
 config FEATURE_EDITING_MAX_LEN
 	int "Maximum length of input"
@@ -89,17 +88,17 @@ config FEATURE_EDITING_MAX_LEN
 	default 1024
 	depends on FEATURE_EDITING
 	help
-	  Line editing code uses on-stack buffers for storage.
-	  You may want to decrease this parameter if your target machine
-	  benefits from smaller stack usage.
+	Line editing code uses on-stack buffers for storage.
+	You may want to decrease this parameter if your target machine
+	benefits from smaller stack usage.
 
 config FEATURE_EDITING_VI
 	bool "vi-style line editing commands"
 	default n
 	depends on FEATURE_EDITING
 	help
-	  Enable vi-style line editing. In shells, this mode can be
-	  turned on and off with "set -o vi" and "set +o vi".
+	Enable vi-style line editing. In shells, this mode can be
+	turned on and off with "set -o vi" and "set +o vi".
 
 config FEATURE_EDITING_HISTORY
 	int "History size"
@@ -108,29 +107,29 @@ config FEATURE_EDITING_HISTORY
 	default 255
 	depends on FEATURE_EDITING
 	help
-	  Specify command history size (0 - disable).
+	Specify command history size (0 - disable).
 
 config FEATURE_EDITING_SAVEHISTORY
 	bool "History saving"
 	default y
 	depends on FEATURE_EDITING
 	help
-	  Enable history saving in shells.
+	Enable history saving in shells.
 
 config FEATURE_EDITING_SAVE_ON_EXIT
 	bool "Save history on shell exit, not after every command"
 	default n
 	depends on FEATURE_EDITING_SAVEHISTORY
 	help
-	  Save history on shell exit, not after every command.
+	Save history on shell exit, not after every command.
 
 config FEATURE_REVERSE_SEARCH
 	bool "Reverse history search"
 	default y
 	depends on FEATURE_EDITING
 	help
-	  Enable readline-like Ctrl-R combination for reverse history search.
-	  Increases code by about 0.5k.
+	Enable readline-like Ctrl-R combination for reverse history search.
+	Increases code by about 0.5k.
 
 config FEATURE_TAB_COMPLETION
 	bool "Tab completion"
@@ -147,236 +146,237 @@ config FEATURE_EDITING_FANCY_PROMPT
 	default y
 	depends on FEATURE_EDITING
 	help
-	  Setting this option allows for prompts to use things like \w and
-	  \$ and escape codes.
+	Setting this option allows for prompts to use things like \w and
+	\$ and escape codes.
 
 config FEATURE_EDITING_ASK_TERMINAL
 	bool "Query cursor position from terminal"
 	default n
 	depends on FEATURE_EDITING
 	help
-	  Allow usage of "ESC [ 6 n" sequence. Terminal answers back with
-	  current cursor position. This information is used to make line
-	  editing more robust in some cases.
-	  If you are not sure whether your terminals respond to this code
-	  correctly, or want to save on code size (about 400 bytes),
-	  then do not turn this option on.
+	Allow usage of "ESC [ 6 n" sequence. Terminal answers back with
+	current cursor position. This information is used to make line
+	editing more robust in some cases.
+	If you are not sure whether your terminals respond to this code
+	correctly, or want to save on code size (about 400 bytes),
+	then do not turn this option on.
 
 config LOCALE_SUPPORT
 	bool "Enable locale support (system needs locale for this to work)"
 	default n
 	help
-	  Enable this if your system has locale support and you would like
-	  busybox to support locale settings.
+	Enable this if your system has locale support and you would like
+	busybox to support locale settings.
 
 config UNICODE_SUPPORT
 	bool "Support Unicode"
 	default y
 	help
-	  This makes various applets aware that one byte is not
-	  one character on screen.
+	This makes various applets aware that one byte is not
+	one character on screen.
 
-	  Busybox aims to eventually work correctly with Unicode displays.
-	  Any older encodings are not guaranteed to work.
-	  Probably by the time when busybox will be fully Unicode-clean,
-	  other encodings will be mainly of historic interest.
+	Busybox aims to eventually work correctly with Unicode displays.
+	Any older encodings are not guaranteed to work.
+	Probably by the time when busybox will be fully Unicode-clean,
+	other encodings will be mainly of historic interest.
 
 config UNICODE_USING_LOCALE
 	bool "Use libc routines for Unicode (else uses internal ones)"
 	default n
 	depends on UNICODE_SUPPORT && LOCALE_SUPPORT
 	help
-	  With this option on, Unicode support is implemented using libc
-	  routines. Otherwise, internal implementation is used.
-	  Internal implementation is smaller.
+	With this option on, Unicode support is implemented using libc
+	routines. Otherwise, internal implementation is used.
+	Internal implementation is smaller.
 
 config FEATURE_CHECK_UNICODE_IN_ENV
 	bool "Check $LC_ALL, $LC_CTYPE and $LANG environment variables"
 	default n
 	depends on UNICODE_SUPPORT && !UNICODE_USING_LOCALE
 	help
-	  With this option on, Unicode support is activated
-	  only if locale-related variables have the value of the form
-	  "xxxx.utf8"
+	With this option on, Unicode support is activated
+	only if locale-related variables have the value of the form
+	"xxxx.utf8"
 
-	  Otherwise, Unicode support will be always enabled and active.
+	Otherwise, Unicode support will be always enabled and active.
 
 config SUBST_WCHAR
 	int "Character code to substitute unprintable characters with"
 	depends on UNICODE_SUPPORT
 	default 63
 	help
-	  Typical values are 63 for '?' (works with any output device),
-	  30 for ASCII substitute control code,
-	  65533 (0xfffd) for Unicode replacement character.
+	Typical values are 63 for '?' (works with any output device),
+	30 for ASCII substitute control code,
+	65533 (0xfffd) for Unicode replacement character.
 
 config LAST_SUPPORTED_WCHAR
 	int "Range of supported Unicode characters"
 	depends on UNICODE_SUPPORT
 	default 767
 	help
-	  Any character with Unicode value bigger than this is assumed
-	  to be non-printable on output device. Many applets replace
-	  such characters with substitution character.
-
-	  The idea is that many valid printable Unicode chars
-	  nevertheless are not displayed correctly. Think about
-	  combining charachers, double-wide hieroglyphs, obscure
-	  characters in dozens of ancient scripts...
-	  Many terminals, terminal emulators, xterms etc will fail
-	  to handle them correctly. Choose the smallest value
-	  which suits your needs.
-
-	  Typical values are:
-	  126 - ASCII only
-	  767 (0x2ff) - there are no combining chars in [0..767] range
+	Any character with Unicode value bigger than this is assumed
+	to be non-printable on output device. Many applets replace
+	such characters with substitution character.
+
+	The idea is that many valid printable Unicode chars
+	nevertheless are not displayed correctly. Think about
+	combining charachers, double-wide hieroglyphs, obscure
+	characters in dozens of ancient scripts...
+	Many terminals, terminal emulators, xterms etc will fail
+	to handle them correctly. Choose the smallest value
+	which suits your needs.
+
+	Typical values are:
+	126 - ASCII only
+	767 (0x2ff) - there are no combining chars in [0..767] range
 			(the range includes Latin 1, Latin Ext. A and B),
 			code is ~700 bytes smaller for this case.
-	  4351 (0x10ff) - there are no double-wide chars in [0..4351] range,
+	4351 (0x10ff) - there are no double-wide chars in [0..4351] range,
 			code is ~300 bytes smaller for this case.
-	  12799 (0x31ff) - nearly all non-ideographic characters are
+	12799 (0x31ff) - nearly all non-ideographic characters are
 			available in [0..12799] range, including
 			East Asian scripts like katakana, hiragana, hangul,
 			bopomofo...
-	  0 - off, any valid printable Unicode character will be printed.
+	0 - off, any valid printable Unicode character will be printed.
 
 config UNICODE_COMBINING_WCHARS
 	bool "Allow zero-width Unicode characters on output"
 	default n
 	depends on UNICODE_SUPPORT
 	help
-	  With this option off, any Unicode char with width of 0
-	  is substituted on output.
+	With this option off, any Unicode char with width of 0
+	is substituted on output.
 
 config UNICODE_WIDE_WCHARS
 	bool "Allow wide Unicode characters on output"
 	default n
 	depends on UNICODE_SUPPORT
 	help
-	  With this option off, any Unicode char with width > 1
-	  is substituted on output.
+	With this option off, any Unicode char with width > 1
+	is substituted on output.
 
 config UNICODE_BIDI_SUPPORT
 	bool "Bidirectional character-aware line input"
 	default n
 	depends on UNICODE_SUPPORT && !UNICODE_USING_LOCALE
 	help
-	  With this option on, right-to-left Unicode characters
-	  are treated differently on input (e.g. cursor movement).
+	With this option on, right-to-left Unicode characters
+	are treated differently on input (e.g. cursor movement).
 
 config UNICODE_NEUTRAL_TABLE
 	bool "In bidi input, support non-ASCII neutral chars too"
 	default n
 	depends on UNICODE_BIDI_SUPPORT
 	help
-	  In most cases it's enough to treat only ASCII non-letters
-	  (i.e. punctuation, numbers and space) as characters
-	  with neutral directionality.
-	  With this option on, more extensive (and bigger) table
-	  of neutral chars will be used.
+	In most cases it's enough to treat only ASCII non-letters
+	(i.e. punctuation, numbers and space) as characters
+	with neutral directionality.
+	With this option on, more extensive (and bigger) table
+	of neutral chars will be used.
 
 config UNICODE_PRESERVE_BROKEN
 	bool "Make it possible to enter sequences of chars which are not Unicode"
 	default n
 	depends on UNICODE_SUPPORT
 	help
-	  With this option on, on line-editing input (such as used by shells)
-	  invalid UTF-8 bytes are not substituted with the selected
-	  substitution character.
-	  For example, this means that entering 'l', 's', ' ', 0xff, [Enter]
-	  at shell prompt will list file named 0xff (single char name
-	  with char value 255), not file named '?'.
+	With this option on, on line-editing input (such as used by shells)
+	invalid UTF-8 bytes are not substituted with the selected
+	substitution character.
+	For example, this means that entering 'l', 's', ' ', 0xff, [Enter]
+	at shell prompt will list file named 0xff (single char name
+	with char value 255), not file named '?'.
 
 config FEATURE_NON_POSIX_CP
 	bool "Non-POSIX, but safer, copying to special nodes"
 	default y
 	help
-	  With this option, "cp file symlink" will delete symlink
-	  and create a regular file. This does not conform to POSIX,
-	  but prevents a symlink attack.
-	  Similarly, "cp file device" will not send file's data
-	  to the device. (To do that, use "cat file >device")
+	With this option, "cp file symlink" will delete symlink
+	and create a regular file. This does not conform to POSIX,
+	but prevents a symlink attack.
+	Similarly, "cp file device" will not send file's data
+	to the device. (To do that, use "cat file >device")
 
 config FEATURE_VERBOSE_CP_MESSAGE
 	bool "Give more precise messages when copy fails (cp, mv etc)"
 	default n
 	help
-	  Error messages with this feature enabled:
-	    $ cp file /does_not_exist/file
-	    cp: cannot create '/does_not_exist/file': Path does not exist
-	    $ cp file /vmlinuz/file
-	    cp: cannot stat '/vmlinuz/file': Path has non-directory component
-	  If this feature is not enabled, they will be, respectively:
-	    cp: cannot create '/does_not_exist/file': No such file or directory
-	    cp: cannot stat '/vmlinuz/file': Not a directory
-	  This will cost you ~60 bytes.
+	Error messages with this feature enabled:
+
+	$ cp file /does_not_exist/file
+	cp: cannot create '/does_not_exist/file': Path does not exist
+	$ cp file /vmlinuz/file
+	cp: cannot stat '/vmlinuz/file': Path has non-directory component
+
+	If this feature is not enabled, they will be, respectively:
+
+	cp: cannot create '/does_not_exist/file': No such file or directory
+	cp: cannot stat '/vmlinuz/file': Not a directory
+
+	This will cost you ~60 bytes.
 
 config FEATURE_USE_SENDFILE
 	bool "Use sendfile system call"
 	default y
 	select PLATFORM_LINUX
 	help
-	  When enabled, busybox will use the kernel sendfile() function
-	  instead of read/write loops to copy data between file descriptors
-	  (for example, cp command does this a lot).
-	  If sendfile() doesn't work, copying code falls back to read/write
-	  loop. sendfile() was originally implemented for faster I/O
-	  from files to sockets, but since Linux 2.6.33 it was extended
-	  to work for many more file types.
+	When enabled, busybox will use the kernel sendfile() function
+	instead of read/write loops to copy data between file descriptors
+	(for example, cp command does this a lot).
+	If sendfile() doesn't work, copying code falls back to read/write
+	loop. sendfile() was originally implemented for faster I/O
+	from files to sockets, but since Linux 2.6.33 it was extended
+	to work for many more file types.
 
 config FEATURE_COPYBUF_KB
 	int "Copy buffer size, in kilobytes"
 	range 1 1024
 	default 4
 	help
-	  Size of buffer used by cp, mv, install, wget etc.
-	  Buffers which are 4 kb or less will be allocated on stack.
-	  Bigger buffers will be allocated with mmap, with fallback to 4 kb
-	  stack buffer if mmap fails.
+	Size of buffer used by cp, mv, install, wget etc.
+	Buffers which are 4 kb or less will be allocated on stack.
+	Bigger buffers will be allocated with mmap, with fallback to 4 kb
+	stack buffer if mmap fails.
 
 config FEATURE_SKIP_ROOTFS
 	bool "Skip rootfs in mount table"
 	default y
 	help
-	  Ignore rootfs entry in mount table.
+	Ignore rootfs entry in mount table.
 
-	  In Linux, kernel has a special filesystem, rootfs, which is initially
-	  mounted on /. It contains initramfs data, if kernel is configured
-	  to have one. Usually, another file system is mounted over / early
-	  in boot process, and therefore most tools which manipulate
-	  mount table, such as df, will skip rootfs entry.
-
-	  However, some systems do not mount anything on /.
-	  If you need to configure busybox for one of these systems,
-	  you may find it useful to turn this option off to make df show
-	  initramfs statistics.
+	In Linux, kernel has a special filesystem, rootfs, which is initially
+	mounted on /. It contains initramfs data, if kernel is configured
+	to have one. Usually, another file system is mounted over / early
+	in boot process, and therefore most tools which manipulate
+	mount table, such as df, will skip rootfs entry.
+
+	However, some systems do not mount anything on /.
+	If you need to configure busybox for one of these systems,
+	you may find it useful to turn this option off to make df show
+	initramfs statistics.
 
-	  Otherwise, choose Y.
+	Otherwise, choose Y.
 
 config MONOTONIC_SYSCALL
 	bool "Use clock_gettime(CLOCK_MONOTONIC) syscall"
 	default y
 	select PLATFORM_LINUX
 	help
-	  Use clock_gettime(CLOCK_MONOTONIC) syscall for measuring
-	  time intervals (time, ping, traceroute etc need this).
-	  Probably requires Linux 2.6+. If not selected, gettimeofday
-	  will be used instead (which gives wrong results if date/time
-	  is reset).
+	Use clock_gettime(CLOCK_MONOTONIC) syscall for measuring
+	time intervals (time, ping, traceroute etc need this).
+	Probably requires Linux 2.6+. If not selected, gettimeofday
+	will be used instead (which gives wrong results if date/time
+	is reset).
 
 config IOCTL_HEX2STR_ERROR
 	bool "Use ioctl names rather than hex values in error messages"
 	default y
 	help
-	  Use ioctl names rather than hex values in error messages
-	  (e.g. VT_DISALLOCATE rather than 0x5608). If disabled this
-	  saves about 1400 bytes.
+	Use ioctl names rather than hex values in error messages
+	(e.g. VT_DISALLOCATE rather than 0x5608). If disabled this
+	saves about 1400 bytes.
 
 config FEATURE_HWIB
 	bool "Support infiniband HW"
 	default y
 	help
-	  Support for printing infiniband addresses in
-	  network applets.
-
-endmenu
+	Support for printing infiniband addresses in network applets.
diff -urpN busybox-1.27.2/libbb/Kbuild.src busybox-1.28.0/libbb/Kbuild.src
--- busybox-1.27.2/libbb/Kbuild.src	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/Kbuild.src	2018-01-01 20:40:41.000000000 +0100
@@ -40,7 +40,6 @@ lib-y += full_write.o
 lib-y += get_console.o
 lib-y += get_last_path_component.o
 lib-y += get_line_from_file.o
-lib-y += getopt32.o
 lib-y += getpty.o
 lib-y += get_volsize.o
 lib-y += herror_msg.o
@@ -97,7 +96,6 @@ lib-y += time.o
 lib-y += trim.o
 lib-y += u_signal_names.o
 lib-y += uuencode.o
-lib-y += vdprintf.o
 lib-y += verror_msg.o
 lib-y += vfork_daemon_rexec.o
 lib-y += warn_ignoring_args.o
@@ -126,6 +124,7 @@ lib-$(CONFIG_UNICODE_SUPPORT) += unicode
 lib-$(CONFIG_FEATURE_CHECK_NAMES) += die_if_bad_username.o
 
 lib-$(CONFIG_NC) += udp_io.o
+lib-$(CONFIG_NETCAT) += udp_io.o
 lib-$(CONFIG_DNSD) += udp_io.o
 lib-$(CONFIG_NTPD) += udp_io.o
 lib-$(CONFIG_TFTP) += udp_io.o
diff -urpN busybox-1.27.2/libbb/appletlib.c busybox-1.28.0/libbb/appletlib.c
--- busybox-1.27.2/libbb/appletlib.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/libbb/appletlib.c	2017-10-20 10:36:58.000000000 +0200
@@ -11,7 +11,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 /* We are trying to not use printf, this benefits the case when selected
  * applets are really simple. Example:
  *
@@ -34,7 +33,6 @@
 # include <malloc.h> /* for mallopt */
 #endif
 
-
 /* Declare <applet>_main() */
 #define PROTOTYPES
 #include "applets.h"
@@ -681,8 +679,21 @@ static void check_suid(int applet_no)
 		if (geteuid())
 			bb_error_msg_and_die("must be suid to work properly");
 	} else if (APPLET_SUID(applet_no) == BB_SUID_DROP) {
-		xsetgid(rgid);  /* drop all privileges */
-		xsetuid(ruid);
+		/*
+		 * Drop all privileges.
+		 *
+		 * Don't check for errors: in normal use, they are impossible,
+		 * and in special cases, exiting is harmful. Example:
+		 * 'unshare --user' when user's shell is also from busybox.
+		 *
+		 * 'unshare --user' creates a new user namespace without any
+		 * uid mappings. Thus, busybox binary is setuid nobody:nogroup
+		 * within the namespace, as that is the only user. However,
+		 * since no uids are mapped, calls to setgid/setuid
+		 * fail (even though they would do nothing).
+		 */
+		setgid(rgid);
+		setuid(ruid);
 	}
 #  if ENABLE_FEATURE_SUID_CONFIG
  ret: ;
@@ -747,11 +758,26 @@ static void install_links(const char *bu
 }
 # endif
 
-# if ENABLE_BUSYBOX
 static void run_applet_and_exit(const char *name, char **argv) NORETURN;
 
-/* If we were called as "busybox..." */
-static int busybox_main(char **argv)
+# if ENABLE_BUSYBOX
+#  if ENABLE_FEATURE_SH_STANDALONE && ENABLE_FEATURE_TAB_COMPLETION
+    /*
+     * Insert "busybox" into applet table as well.
+     * This makes standalone shell tab-complete this name too.
+     * (Otherwise having "busybox" in applet table is not necessary,
+     * there is other code which routes "busyboxANY_SUFFIX" name
+     * to busybox_main()).
+     */
+//usage:#define busybox_trivial_usage NOUSAGE_STR
+//usage:#define busybox_full_usage ""
+//applet:IF_BUSYBOX(IF_FEATURE_SH_STANDALONE(IF_FEATURE_TAB_COMPLETION(APPLET(busybox, BB_DIR_BIN, BB_SUID_MAYBE))))
+int busybox_main(int argc, char *argv[]) MAIN_EXTERNALLY_VISIBLE;
+#  else
+#   define busybox_main(argc,argv) busybox_main(argv)
+static
+#  endif
+int busybox_main(int argc UNUSED_PARAM, char **argv)
 {
 	if (!argv[1]) {
 		/* Called without arguments */
@@ -881,8 +907,6 @@ void FAST_FUNC run_applet_no_and_exit(in
 {
 	int argc = string_array_len(argv);
 
-	/* Reinit some shared global data */
-	xfunc_error_retval = EXIT_FAILURE;
 	/*
 	 * We do not use argv[0]: do not want to repeat massaging of
 	 * "-/sbin/halt" -> "halt", for example.
@@ -924,7 +948,7 @@ static NORETURN void run_applet_and_exit
 {
 #  if ENABLE_BUSYBOX
 	if (is_prefixed_with(name, "busybox"))
-		exit(busybox_main(argv));
+		exit(busybox_main(/*unused:*/ 0, argv));
 #  endif
 #  if NUM_APPLETS > 0
 	/* find_applet_by_name() search is more expensive, so goes second */
@@ -1028,6 +1052,16 @@ int main(int argc UNUSED_PARAM, char **a
 	if (applet_name[0] == '-')
 		applet_name++;
 	applet_name = bb_basename(applet_name);
+
+	/* If we are a result of execv("/proc/self/exe"), fix ugly comm of "exe" */
+	if (ENABLE_FEATURE_SH_STANDALONE
+	 || ENABLE_FEATURE_PREFER_APPLETS
+	 || !BB_MMU
+	) {
+		if (NUM_APPLETS > 1)
+			set_task_comm(applet_name);
+	}
+
 	parse_config_file(); /* ...maybe, if FEATURE_SUID_CONFIG */
 	run_applet_and_exit(applet_name, argv);
 
diff -urpN busybox-1.27.2/libbb/ask_confirmation.c busybox-1.28.0/libbb/ask_confirmation.c
--- busybox-1.27.2/libbb/ask_confirmation.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/ask_confirmation.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,12 +6,11 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
+#include "libbb.h"
 
 /* Read a line from stdin.  If the first non-whitespace char is 'y' or 'Y',
  * return 1.  Otherwise return 0.
  */
-#include "libbb.h"
-
 int FAST_FUNC bb_ask_confirmation(void)
 {
 	char first = 0;
diff -urpN busybox-1.27.2/libbb/bb_askpass.c busybox-1.28.0/libbb/bb_askpass.c
--- busybox-1.27.2/libbb/bb_askpass.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/bb_askpass.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* do nothing signal handler */
diff -urpN busybox-1.27.2/libbb/bb_do_delay.c busybox-1.28.0/libbb/bb_do_delay.c
--- busybox-1.27.2/libbb/bb_do_delay.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/bb_do_delay.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 void FAST_FUNC bb_do_delay(int seconds)
diff -urpN busybox-1.27.2/libbb/bb_getgroups.c busybox-1.28.0/libbb/bb_getgroups.c
--- busybox-1.27.2/libbb/bb_getgroups.c	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/libbb/bb_getgroups.c	2017-07-06 17:14:57.000000000 +0200
@@ -0,0 +1,47 @@
+/*
+ * Utility routines.
+ *
+ * Copyright (C) 2017 Denys Vlasenko
+ *
+ * Licensed under GPLv2, see file LICENSE in this source tree.
+ */
+
+//kbuild:lib-y += bb_getgroups.o
+
+#include "libbb.h"
+
+gid_t* FAST_FUNC bb_getgroups(int *ngroups, gid_t *group_array)
+{
+	int n = ngroups ? *ngroups : 0;
+
+	/* getgroups may be a bit expensive, try to use it only once */
+	if (n < 32)
+		n = 32;
+
+	for (;;) {
+// FIXME: ash tries so hard to not die on OOM (when we are called from test),
+// and we spoil it with just one xrealloc here
+		group_array = xrealloc(group_array, (n+1) * sizeof(group_array[0]));
+		n = getgroups(n, group_array);
+		/*
+		 * If buffer is too small, kernel does not return new_n > n.
+		 * It returns -1 and EINVAL:
+		 */
+		if (n >= 0) {
+			/* Terminator for bb_getgroups(NULL, NULL) usage */
+			group_array[n] = (gid_t) -1;
+			break;
+		}
+		if (errno == EINVAL) { /* too small? */
+			/* This is the way to ask kernel how big the array is */
+			n = getgroups(0, group_array);
+			continue;
+		}
+		/* Some other error (should never happen on Linux) */
+		bb_perror_msg_and_die("getgroups");
+	}
+
+	if (ngroups)
+		*ngroups = n;
+	return group_array;
+}
diff -urpN busybox-1.27.2/libbb/bb_pwd.c busybox-1.28.0/libbb/bb_pwd.c
--- busybox-1.27.2/libbb/bb_pwd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/bb_pwd.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,7 +7,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* TODO: maybe change API to return malloced data?
@@ -31,9 +30,9 @@ struct group* FAST_FUNC xgetgrnam(const
 	return gr;
 }
 
-
 struct passwd* FAST_FUNC xgetpwuid(uid_t uid)
 {
+	/* Note: used in nofork applets (whoami), be careful not to leak anything */
 	struct passwd *pw = getpwuid(uid);
 	if (!pw)
 		bb_error_msg_and_die("unknown uid %u", (unsigned)uid);
@@ -50,6 +49,7 @@ struct group* FAST_FUNC xgetgrgid(gid_t
 
 char* FAST_FUNC xuid2uname(uid_t uid)
 {
+	/* Note: used in nofork applets (whoami), be careful not to leak anything */
 	struct passwd *pw = xgetpwuid(uid);
 	return pw->pw_name;
 }
diff -urpN busybox-1.27.2/libbb/bb_qsort.c busybox-1.28.0/libbb/bb_qsort.c
--- busybox-1.27.2/libbb/bb_qsort.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/bb_qsort.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 int /* not FAST_FUNC! */ bb_pstrcmp(const void *a, const void *b)
diff -urpN busybox-1.27.2/libbb/bb_strtod.c busybox-1.28.0/libbb/bb_strtod.c
--- busybox-1.27.2/libbb/bb_strtod.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/bb_strtod.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include <math.h>  /* just for HUGE_VAL */
 
diff -urpN busybox-1.27.2/libbb/bb_strtonum.c busybox-1.28.0/libbb/bb_strtonum.c
--- busybox-1.27.2/libbb/bb_strtonum.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/bb_strtonum.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* On exit: errno = 0 only if there was non-empty, '\0' terminated value
diff -urpN busybox-1.27.2/libbb/bbunit.c busybox-1.28.0/libbb/bbunit.c
--- busybox-1.27.2/libbb/bbunit.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/bbunit.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,9 +6,9 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
+//applet:IF_UNIT_TEST(APPLET(unit, BB_DIR_USR_BIN, BB_SUID_DROP))
 
 //kbuild:lib-$(CONFIG_UNIT_TEST) += bbunit.o
-//applet:IF_UNIT_TEST(APPLET(unit, BB_DIR_USR_BIN, BB_SUID_DROP))
 
 //usage:#define unit_trivial_usage
 //usage:       ""
diff -urpN busybox-1.27.2/libbb/capability.c busybox-1.28.0/libbb/capability.c
--- busybox-1.27.2/libbb/capability.c	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/libbb/capability.c	2017-08-21 19:34:57.000000000 +0200
@@ -0,0 +1,126 @@
+/*
+ * Copyright (C) 2017 by  <assafgordon@gmail.com>
+ *
+ * Licensed under GPLv2 or later, see file LICENSE in this source tree.
+ */
+//kbuild:lib-$(CONFIG_PLATFORM_LINUX) += capability.o
+
+#include <linux/capability.h>
+// #include <sys/capability.h>
+// This header is in libcap, but the functions are in libc.
+// Comment in the header says this above capset/capget:
+/* system calls - look to libc for function to system call mapping */
+extern int capset(cap_user_header_t header, cap_user_data_t data);
+extern int capget(cap_user_header_t header, const cap_user_data_t data);
+// so for bbox, let's just repeat the declarations.
+// This way, libcap needs not be installed in build environment.
+#include "libbb.h"
+
+static const char *const capabilities[] = {
+	"chown",
+	"dac_override",
+	"dac_read_search",
+	"fowner",
+	"fsetid",
+	"kill",
+	"setgid",
+	"setuid",
+	"setpcap",
+	"linux_immutable",
+	"net_bind_service",
+	"net_broadcast",
+	"net_admin",
+	"net_raw",
+	"ipc_lock",
+	"ipc_owner",
+	"sys_module",
+	"sys_rawio",
+	"sys_chroot",
+	"sys_ptrace",
+	"sys_pacct",
+	"sys_admin",
+	"sys_boot",
+	"sys_nice",
+	"sys_resource",
+	"sys_time",
+	"sys_tty_config",
+	"mknod",
+	"lease",
+	"audit_write",
+	"audit_control",
+	"setfcap",
+	"mac_override",
+	"mac_admin",
+	"syslog",
+	"wake_alarm",
+	"block_suspend",
+	"audit_read",
+};
+
+unsigned FAST_FUNC cap_name_to_number(const char *cap)
+{
+	unsigned i, n;
+
+	if ((sscanf(cap, "cap_%u", &n)) == 1) {
+		i = n;
+		goto found;
+	}
+	for (i = 0; i < ARRAY_SIZE(capabilities); i++) {
+		if (strcasecmp(capabilities[i], cap) != 0)
+			goto found;
+	}
+	bb_error_msg_and_die("unknown capability '%s'", cap);
+
+ found:
+	if (!cap_valid(i))
+		bb_error_msg_and_die("unknown capability '%s'", cap);
+	return i;
+}
+
+void FAST_FUNC printf_cap(const char *pfx, unsigned cap_no)
+{
+	if (cap_no < ARRAY_SIZE(capabilities)) {
+		printf("%s%s", pfx, capabilities[cap_no]);
+		return;
+	}
+	printf("%scap_%u", pfx, cap_no);
+}
+
+DEFINE_STRUCT_CAPS;
+
+void FAST_FUNC getcaps(void *arg)
+{
+	static const uint8_t versions[] = {
+		_LINUX_CAPABILITY_U32S_3, /* = 2 (fits into byte) */
+		_LINUX_CAPABILITY_U32S_2, /* = 2 */
+		_LINUX_CAPABILITY_U32S_1, /* = 1 */
+	};
+	int i;
+	struct caps *caps = arg;
+
+	caps->header.pid = 0;
+	for (i = 0; i < ARRAY_SIZE(versions); i++) {
+		caps->header.version = versions[i];
+		if (capget(&caps->header, NULL) == 0)
+			goto got_it;
+	}
+	bb_simple_perror_msg_and_die("capget");
+ got_it:
+
+	switch (caps->header.version) {
+		case _LINUX_CAPABILITY_VERSION_1:
+			caps->u32s = _LINUX_CAPABILITY_U32S_1;
+			break;
+		case _LINUX_CAPABILITY_VERSION_2:
+			caps->u32s = _LINUX_CAPABILITY_U32S_2;
+			break;
+		case _LINUX_CAPABILITY_VERSION_3:
+			caps->u32s = _LINUX_CAPABILITY_U32S_3;
+			break;
+		default:
+			bb_error_msg_and_die("unsupported capability version");
+	}
+
+	if (capget(&caps->header, caps->data) != 0)
+		bb_simple_perror_msg_and_die("capget");
+}
diff -urpN busybox-1.27.2/libbb/change_identity.c busybox-1.28.0/libbb/change_identity.c
--- busybox-1.27.2/libbb/change_identity.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/change_identity.c	2017-10-20 10:36:58.000000000 +0200
@@ -15,7 +15,7 @@
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY JULIE HAUGH AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY JULIE HAUGH AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL JULIE HAUGH OR CONTRIBUTORS BE LIABLE
@@ -27,7 +27,6 @@
  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  * SUCH DAMAGE.
  */
-
 #include "libbb.h"
 
 /* Become the user and group(s) specified by PW.  */
diff -urpN busybox-1.27.2/libbb/chomp.c busybox-1.28.0/libbb/chomp.c
--- busybox-1.27.2/libbb/chomp.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/chomp.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,7 +7,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 void FAST_FUNC chomp(char *s)
diff -urpN busybox-1.27.2/libbb/common_bufsiz.c busybox-1.28.0/libbb/common_bufsiz.c
--- busybox-1.27.2/libbb/common_bufsiz.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/libbb/common_bufsiz.c	2017-07-24 18:57:09.000000000 +0200
@@ -10,34 +10,35 @@
 //config:	bool "Use the end of BSS page"
 //config:	default n
 //config:	help
-//config:	  Attempt to reclaim a small unused part of BSS.
+//config:	Attempt to reclaim a small unused part of BSS.
 //config:
-//config:	  Executables have the following parts:
-//config:	  = read-only executable code and constants, also known as "text"
-//config:	  = read-write data
-//config:	  = non-initialized (zeroed on demand) data, also known as "bss"
-//config:
-//config:	  At link time, "text" is padded to a full page. At runtime, all "text"
-//config:	  pages are mapped RO and executable.
-//config:	  "Data" starts on the next page boundary, but is not padded
-//config:	  to a full page at the end. "Bss" starts wherever "data" ends.
-//config:	  At runtime, "data" pages are mapped RW and they are file-backed
-//config:	  (this includes a small portion of "bss" which may live in the last
-//config:	  partial page of "data").
-//config:	  Pages which are fully in "bss" are mapped to anonymous memory.
-//config:
-//config:	  "Bss" end is usually not page-aligned. There is an unused space
-//config:	  in the last page. Linker marks its start with the "_end" symbol.
-//config:
-//config:	  This option will attempt to use that space for bb_common_bufsiz1[]
-//config:	  array. If it fits after _end, it will be used, and COMMON_BUFSIZE
-//config:	  will be enlarged from its guaranteed minimum size of 1 kbyte.
-//config:	  This may require recompilation a second time, since value of _end
-//config:	  is known only after final link.
-//config:
-//config:	  If you are getting a build error like this:
-//config:	        appletlib.c:(.text.main+0xd): undefined reference to '_end'
-//config:	  disable this option.
+//config:	Executables have the following parts:
+//config:	= read-only executable code and constants, also known as "text"
+//config:	= read-write data
+//config:	= non-initialized (zeroed on demand) data, also known as "bss"
+//config:
+//config:	At link time, "text" is padded to a full page. At runtime, all "text"
+//config:	pages are mapped RO and executable.
+//config:
+//config:	"Data" starts on the next page boundary, but is not padded
+//config:	to a full page at the end. "Bss" starts wherever "data" ends.
+//config:	At runtime, "data" pages are mapped RW and they are file-backed
+//config:	(this includes a small portion of "bss" which may live in the last
+//config:	partial page of "data").
+//config:	Pages which are fully in "bss" are mapped to anonymous memory.
+//config:
+//config:	"Bss" end is usually not page-aligned. There is an unused space
+//config:	in the last page. Linker marks its start with the "_end" symbol.
+//config:
+//config:	This option will attempt to use that space for bb_common_bufsiz1[]
+//config:	array. If it fits after _end, it will be used, and COMMON_BUFSIZE
+//config:	will be enlarged from its guaranteed minimum size of 1 kbyte.
+//config:	This may require recompilation a second time, since value of _end
+//config:	is known only after final link.
+//config:
+//config:	If you are getting a build error like this:
+//config:		appletlib.c:(.text.main+0xd): undefined reference to '_end'
+//config:	disable this option.
 
 //kbuild:lib-y += common_bufsiz.o
 
diff -urpN busybox-1.27.2/libbb/compare_string_array.c busybox-1.28.0/libbb/compare_string_array.c
--- busybox-1.27.2/libbb/compare_string_array.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/compare_string_array.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /*
diff -urpN busybox-1.27.2/libbb/concat_path_file.c busybox-1.28.0/libbb/concat_path_file.c
--- busybox-1.27.2/libbb/concat_path_file.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/concat_path_file.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,6 +7,7 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
+#include "libbb.h"
 
 /* Concatenate path and filename to new allocated buffer.
  * Add '/' only as needed (no duplicate // are produced).
@@ -14,8 +15,6 @@
  * filename should not be NULL.
  */
 
-#include "libbb.h"
-
 char* FAST_FUNC concat_path_file(const char *path, const char *filename)
 {
 	char *lc;
diff -urpN busybox-1.27.2/libbb/concat_subpath_file.c busybox-1.28.0/libbb/concat_subpath_file.c
--- busybox-1.27.2/libbb/concat_subpath_file.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/concat_subpath_file.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,6 +6,7 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
+#include "libbb.h"
 
 /*
    This function make special for recursive actions with usage
@@ -13,8 +14,6 @@
    and skipping "." and ".." directory entries
 */
 
-#include "libbb.h"
-
 char* FAST_FUNC concat_subpath_file(const char *path, const char *f)
 {
 	if (f && DOT_OR_DOTDOT(f))
diff -urpN busybox-1.27.2/libbb/copy_file.c busybox-1.28.0/libbb/copy_file.c
--- busybox-1.27.2/libbb/copy_file.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/copy_file.c	2017-08-17 13:50:45.000000000 +0200
@@ -371,7 +371,10 @@ int FAST_FUNC copy_file(const char *sour
 			int r = symlink(lpath, dest);
 			free(lpath);
 			if (r < 0) {
-				bb_perror_msg("can't create symlink '%s'", dest);
+				/* shared message */
+				bb_perror_msg("can't create %slink '%s' to '%s'",
+					"sym", dest, lpath
+				);
 				return -1;
 			}
 			if (flags & FILEUTILS_PRESERVE_STATUS)
diff -urpN busybox-1.27.2/libbb/copyfd.c busybox-1.28.0/libbb/copyfd.c
--- busybox-1.27.2/libbb/copyfd.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/libbb/copyfd.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #if ENABLE_FEATURE_USE_SENDFILE
 # include <sys/sendfile.h>
diff -urpN busybox-1.27.2/libbb/correct_password.c busybox-1.28.0/libbb/correct_password.c
--- busybox-1.27.2/libbb/correct_password.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/correct_password.c	2017-10-20 10:36:58.000000000 +0200
@@ -15,7 +15,7 @@
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY JULIE HAUGH AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY JULIE HAUGH AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL JULIE HAUGH OR CONTRIBUTORS BE LIABLE
@@ -27,7 +27,6 @@
  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  * SUCH DAMAGE.
  */
-
 #include "libbb.h"
 
 #define SHADOW_BUFSIZE 256
diff -urpN busybox-1.27.2/libbb/crc32.c busybox-1.28.0/libbb/crc32.c
--- busybox-1.27.2/libbb/crc32.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/crc32.c	2017-10-20 10:36:58.000000000 +0200
@@ -15,7 +15,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 uint32_t *global_crc32_table;
diff -urpN busybox-1.27.2/libbb/default_error_retval.c busybox-1.28.0/libbb/default_error_retval.c
--- busybox-1.27.2/libbb/default_error_retval.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/default_error_retval.c	2017-10-20 10:36:58.000000000 +0200
@@ -4,7 +4,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 /* Seems silly to copyright a global variable.  ;-)  Oh well.
  *
  * At least one applet (cmp) returns a value different from the typical
@@ -12,7 +11,6 @@
  * by the applet.  I suppose we could use a wrapper function to set it, but
  * that too seems silly.
  */
-
 #include "libbb.h"
 
 uint8_t xfunc_error_retval = EXIT_FAILURE;
diff -urpN busybox-1.27.2/libbb/device_open.c busybox-1.28.0/libbb/device_open.c
--- busybox-1.27.2/libbb/device_open.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/device_open.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* try to open up the specified device */
diff -urpN busybox-1.27.2/libbb/die_if_bad_username.c busybox-1.28.0/libbb/die_if_bad_username.c
--- busybox-1.27.2/libbb/die_if_bad_username.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/die_if_bad_username.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* To avoid problems, the username should consist only of
diff -urpN busybox-1.27.2/libbb/dump.c busybox-1.28.0/libbb/dump.c
--- busybox-1.27.2/libbb/dump.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/libbb/dump.c	2017-10-20 10:36:58.000000000 +0200
@@ -10,7 +10,6 @@
  *
  * Original copyright notice is retained at the end of this file.
  */
-
 #include "libbb.h"
 #include "dump.h"
 
@@ -58,7 +57,7 @@ static NOINLINE int bb_dump_size(FS *fs)
 	const char *p;
 	int prec;
 
-	/* figure out the data block bb_dump_size needed for each format unit */
+	/* figure out the data block size needed for each format unit */
 	for (cur_size = 0, fu = fs->nextfu; fu; fu = fu->nextfu) {
 		if (fu->bcnt) {
 			cur_size += fu->bcnt * fu->reps;
@@ -311,20 +310,18 @@ static NOINLINE void rewrite(priv_dumper
 	}
 }
 
-static void do_skip(priv_dumper_t *dumper, const char *fname, int statok)
+static void do_skip(priv_dumper_t *dumper, const char *fname)
 {
 	struct stat sbuf;
 
-	if (statok) {
-		xfstat(STDIN_FILENO, &sbuf, fname);
-		if (!(S_ISCHR(sbuf.st_mode) || S_ISBLK(sbuf.st_mode) || S_ISFIFO(sbuf.st_mode))
-		 && dumper->pub.dump_skip >= sbuf.st_size
-		) {
-			/* If bb_dump_size valid and pub.dump_skip >= size */
-			dumper->pub.dump_skip -= sbuf.st_size;
-			dumper->address += sbuf.st_size;
-			return;
-		}
+	xfstat(STDIN_FILENO, &sbuf, fname);
+	if (S_ISREG(sbuf.st_mode)
+	 && dumper->pub.dump_skip >= sbuf.st_size
+	) {
+		/* If st_size is valid and pub.dump_skip >= st_size */
+		dumper->pub.dump_skip -= sbuf.st_size;
+		dumper->address += sbuf.st_size;
+		return;
 	}
 	if (fseeko(stdin, dumper->pub.dump_skip, SEEK_SET)) {
 		bb_simple_perror_msg_and_die(fname);
@@ -336,29 +333,26 @@ static void do_skip(priv_dumper_t *dumpe
 
 static NOINLINE int next(priv_dumper_t *dumper)
 {
-	int statok;
-
 	for (;;) {
-		if (*dumper->argv) {
-			dumper->next__done = statok = 1;
-			if (!(freopen(*dumper->argv, "r", stdin))) {
-				bb_simple_perror_msg(*dumper->argv);
-				dumper->exitval = 1;
-				++dumper->argv;
-				continue;
+		const char *fname = *dumper->argv;
+
+		if (fname) {
+			dumper->argv++;
+			if (NOT_LONE_DASH(fname)) {
+				if (!freopen(fname, "r", stdin)) {
+					bb_simple_perror_msg(fname);
+					dumper->exitval = 1;
+					continue;
+				}
 			}
 		} else {
 			if (dumper->next__done)
 				return 0; /* no next file */
-			dumper->next__done = 1;
-//why stat of stdin is specially prohibited?
-			statok = 0;
 		}
+		dumper->next__done = 1;
 		if (dumper->pub.dump_skip)
-			do_skip(dumper, statok ? *dumper->argv : "stdin", statok);
-		if (*dumper->argv)
-			++dumper->argv;
-		if (!dumper->pub.dump_skip)
+			do_skip(dumper, fname ? fname : "stdin");
+		if (dumper->pub.dump_skip == 0)
 			return 1;
 	}
 	/* NOTREACHED */
@@ -670,7 +664,7 @@ int FAST_FUNC bb_dump_dump(dumper_t *pub
 	FS *tfs;
 	int blocksize;
 
-	/* figure out the data block bb_dump_size */
+	/* figure out the data block size */
 	blocksize = 0;
 	tfs = dumper->pub.fshead;
 	while (tfs) {
@@ -833,7 +827,7 @@ void FAST_FUNC bb_dump_add(dumper_t* pub
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
diff -urpN busybox-1.27.2/libbb/executable.c busybox-1.28.0/libbb/executable.c
--- busybox-1.27.2/libbb/executable.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/executable.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* check if path points to an executable file;
diff -urpN busybox-1.27.2/libbb/fclose_nonstdin.c busybox-1.28.0/libbb/fclose_nonstdin.c
--- busybox-1.27.2/libbb/fclose_nonstdin.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/fclose_nonstdin.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,14 +6,12 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
+#include "libbb.h"
 
 /* A number of standard utilities can accept multiple command line args
  * of '-' for stdin, according to SUSv3.  So we encapsulate the check
  * here to save a little space.
  */
-
-#include "libbb.h"
-
 int FAST_FUNC fclose_if_not_stdin(FILE *f)
 {
 	/* Some more paranoid applets want ferror() check too */
diff -urpN busybox-1.27.2/libbb/fflush_stdout_and_exit.c busybox-1.28.0/libbb/fflush_stdout_and_exit.c
--- busybox-1.27.2/libbb/fflush_stdout_and_exit.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/fflush_stdout_and_exit.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,13 +6,11 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
+#include "libbb.h"
 
 /* Attempt to fflush(stdout), and exit with an error code if stdout is
  * in an error state.
  */
-
-#include "libbb.h"
-
 void FAST_FUNC fflush_stdout_and_exit(int retval)
 {
 	xfunc_error_retval = retval;
diff -urpN busybox-1.27.2/libbb/fgets_str.c busybox-1.28.0/libbb/fgets_str.c
--- busybox-1.27.2/libbb/fgets_str.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/fgets_str.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,7 +7,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 static char *xmalloc_fgets_internal(FILE *file, const char *terminating_string, int chop_off, size_t *maxsz_p)
diff -urpN busybox-1.27.2/libbb/find_mount_point.c busybox-1.28.0/libbb/find_mount_point.c
--- busybox-1.27.2/libbb/find_mount_point.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/find_mount_point.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include <mntent.h>
 
diff -urpN busybox-1.27.2/libbb/find_pid_by_name.c busybox-1.28.0/libbb/find_pid_by_name.c
--- busybox-1.27.2/libbb/find_pid_by_name.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/find_pid_by_name.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /*
diff -urpN busybox-1.27.2/libbb/find_root_device.c busybox-1.28.0/libbb/find_root_device.c
--- busybox-1.27.2/libbb/find_root_device.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/find_root_device.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* Find block device /dev/XXX which contains specified file
diff -urpN busybox-1.27.2/libbb/full_write.c busybox-1.28.0/libbb/full_write.c
--- busybox-1.27.2/libbb/full_write.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/full_write.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /*
diff -urpN busybox-1.27.2/libbb/get_console.c busybox-1.28.0/libbb/get_console.c
--- busybox-1.27.2/libbb/get_console.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/get_console.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,7 +7,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* From <linux/kd.h> */
@@ -64,7 +63,6 @@ int FAST_FUNC get_console_fd_or_die(void
 	}
 
 	bb_error_msg_and_die("can't open console");
-	/*return fd; - total failure */
 }
 
 /* From <linux/vt.h> */
diff -urpN busybox-1.27.2/libbb/get_line_from_file.c busybox-1.28.0/libbb/get_line_from_file.c
--- busybox-1.27.2/libbb/get_line_from_file.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/get_line_from_file.c	2017-10-20 10:36:58.000000000 +0200
@@ -8,7 +8,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 char* FAST_FUNC bb_get_chunk_from_file(FILE *file, int *end)
diff -urpN busybox-1.27.2/libbb/getopt32.c busybox-1.28.0/libbb/getopt32.c
--- busybox-1.27.2/libbb/getopt32.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/libbb/getopt32.c	2017-09-07 14:42:40.000000000 +0200
@@ -6,12 +6,13 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
-#if ENABLE_LONG_OPTS || ENABLE_FEATURE_GETOPT_LONG
+#if ENABLE_LONG_OPTS
 # include <getopt.h>
 #endif
 #include "libbb.h"
 
+//kbuild:lib-y += getopt32.o
+
 /*      Documentation
 
 uint32_t
@@ -95,20 +96,23 @@ getopt32(char **argv, const char *applet
         env -i ls -d /
         Here we want env to process just the '-i', not the '-d'.
 
- "!"    Report bad option, missing required options,
+ "!"    Report bad options, missing required options,
         inconsistent options with all-ones return value (instead of abort).
 
-const char *applet_long_options
+ "^"    options string is "^optchars""\0""opt_complementary".
+
+uint32_t
+getopt32long(char **argv, const char *applet_opts, const char *logopts...)
 
-        This struct allows you to define long options:
+        This allows you to define long options:
 
         static const char applet_longopts[] ALIGN1 =
                 //"name\0"  has_arg     val
                 "verbose\0" No_argument "v"
                 ;
-        applet_long_options = applet_longopts;
+        opt = getopt32long(argv, applet_opts, applet_longopts, ...);
 
-        The last member of struct option (val) typically is set to
+        The last element (val) typically is set to
         matching short option from applet_opts. If there is no matching
         char in applet_opts, then:
         - return bit has next position after short options
@@ -119,7 +123,7 @@ const char *applet_long_options
         config process and not a required feature.  The current standard
         is to name the config option CONFIG_FEATURE_<applet>_LONG_OPTIONS.
 
-const char *opt_complementary
+opt_complementary - option modifiers.
 
  ":"    The colon (":") is used to separate groups of two or more chars
         and/or groups of chars and special characters (stating some
@@ -130,8 +134,7 @@ const char *opt_complementary
         Their flags will be turned on if the main option is found even
         if they are not specified on the command line.  For example:
 
-        opt_complementary = "abc";
-        flags = getopt32(argv, "abcd")
+        flags = getopt32(argv, "^abcd""\0""abc")
 
         If getopt() finds "-a" on the command line, then
         getopt32's return value will be as if "-a -b -c" were
@@ -144,8 +147,7 @@ const char *opt_complementary
         if w is given more than once, it is "unlimited"
 
         int w_counter = 0; // must be initialized!
-        opt_complementary = "ww";
-        getopt32(argv, "w", &w_counter);
+        getopt32(argv, "^w""\0""ww", &w_counter);
         if (w_counter)
                 width = (w_counter == 1) ? 132 : INT_MAX;
         else
@@ -160,8 +162,9 @@ const char *opt_complementary
 
         llist_t *my_b = NULL;
         int verbose_level = 0;
-        opt_complementary = "vv:b-c:c-b";
-        f = getopt32(argv, "vb:*c", &my_b, &verbose_level);
+        f = getopt32(argv, "^vb:*c"
+			"\0""vv:b-c:c-b"
+			, &my_b, &verbose_level);
         if (f & 2)       // -c after -b unsets -b flag
                 while (my_b) dosomething_with(llist_pop(&my_b));
         if (my_b)        // but llist is stored if -b is specified
@@ -170,31 +173,6 @@ const char *opt_complementary
 
 Special characters:
 
- "-"    A group consisting of just a dash forces all arguments
-        to be treated as options, even if they have no leading dashes.
-        Next char in this case can't be a digit (0-9), use ':' or end of line.
-        Example:
-
-        opt_complementary = "-:w-x:x-w"; // "-w-x:x-w" would also work,
-        getopt32(argv, "wx");            // but is less readable
-
-        This makes it possible to use options without a dash (./program w x)
-        as well as with a dash (./program -x).
-
-        NB: getopt32() will leak a small amount of memory if you use
-        this option! Do not use it if there is a possibility of recursive
-        getopt32() calls.
-
- "--"   A double dash at the beginning of opt_complementary means the
-        argv[1] string should always be treated as options, even if it isn't
-        prefixed with a "-".  This is useful for special syntax in applets
-        such as "ar" and "tar":
-        tar xvf foo.tar
-
-        NB: getopt32() will leak a small amount of memory if you use
-        this option! Do not use it if there is a possibility of recursive
-        getopt32() calls.
-
  "-N"   A dash as the first char in a opt_complementary group followed
         by a single digit (0-9) means that at least N non-option
         arguments must be present on the command line
@@ -222,7 +200,7 @@ Special characters:
         getopt32 finds -s, then -d is unset or if it finds -d
         then -s is unset.  (Note:  busybox implements the GNU
         "--max-depth" option as "-d".)  To obtain this behavior, you
-        set opt_complementary = "s-d:d-s".  Only one flag value is
+        set opt_complementary to "s-d:d-s".  Only one flag value is
         added to getopt32's return value depending on the
         position of the options on the command line.  If one of the
         two options requires an argument pointer (":" in applet_opts
@@ -230,8 +208,7 @@ Special characters:
 
         char *smax_print_depth;
 
-        opt_complementary = "s-d:d-s:x-x";
-        opt = getopt32(argv, "sd:x", &smax_print_depth);
+        opt = getopt32(argv, "^sd:x""\0""s-d:d-s:x-x", &smax_print_depth);
 
         if (opt & 2)
                 max_print_depth = atoi(smax_print_depth);
@@ -247,7 +224,7 @@ Special characters:
         The cut applet must have only one type of list specified, so
         -b, -c and -f are mutually exclusive and should raise an error
         if specified together.  In this case you must set
-        opt_complementary = "b--cf:c--bf:f--bc".  If two of the
+        opt_complementary to "b--cf:c--bf:f--bc".  If two of the
         mutually exclusive options are found, getopt32 will call
         bb_show_usage() and die.
 
@@ -259,8 +236,7 @@ Special characters:
         with xatoi_positive() - allowed range is 0..INT_MAX.
 
         int param;  // "unsigned param;" will also work
-        opt_complementary = "p+";
-        getopt32(argv, "p:", &param);
+        getopt32(argv, "^p:""\0""p+", &param);
 
  "o::"  A double colon after a char in opt_complementary means that the
         option can occur multiple times. Each occurrence will be saved as
@@ -275,8 +251,7 @@ Special characters:
         (this pointer must be initializated to NULL if the list is empty
         as required by llist_add_to_end(llist_t **old_head, char *new_item).)
 
-        opt_complementary = "e::";
-        getopt32(argv, "e:", &patterns);
+        getopt32(argv, "^e:""\0""e::", &patterns);
 
         $ grep -e user -e root /etc/passwd
         root:x:0:0:root:/root:/bin/bash
@@ -294,8 +269,7 @@ Special characters:
         For example from "id" applet:
 
         // Don't allow -n -r -rn -ug -rug -nug -rnug
-        opt_complementary = "r?ug:n?ug:u--g:g--u";
-        flags = getopt32(argv, "rnug");
+        flags = getopt32(argv, "^rnug""\0""r?ug:n?ug:u--g:g--u");
 
         This example allowed only:
         $ id; id -u; id -g; id -ru; id -nu; id -rg; id -ng; id -rnu; id -rng
@@ -306,8 +280,7 @@ Special characters:
         For example from "start-stop-daemon" applet:
 
         // Don't allow -KS -SK, but -S or -K is required
-        opt_complementary = "K:S:K--S:S--K";
-        flags = getopt32(argv, "KS...);
+        flags = getopt32(argv, "^KS...""\0""K:S:K--S:S--K");
 
 
         Don't forget to use ':'. For example, "?322-22-23X-x-a"
@@ -322,8 +295,6 @@ Special characters:
 
 const char *const bb_argv_dash[] = { "-", NULL };
 
-const char *opt_complementary;
-
 enum {
 	PARAM_STRING,
 	PARAM_LIST,
@@ -341,57 +312,62 @@ typedef struct {
 	int *counter;
 } t_complementary;
 
-/* You can set applet_long_options for parse called long options */
-#if ENABLE_LONG_OPTS || ENABLE_FEATURE_GETOPT_LONG
+uint32_t option_mask32;
+
+#if ENABLE_LONG_OPTS
 static const struct option bb_null_long_options[1] = {
 	{ 0, 0, 0, 0 }
 };
-const char *applet_long_options;
+#else
+#define vgetopt32(argv,applet_opts,applet_long_options,p) \
+	vgetopt32(argv,applet_opts,p)
 #endif
 
-uint32_t option_mask32;
+/* Please keep getopt32 free from xmalloc */
 
-uint32_t FAST_FUNC
-getopt32(char **argv, const char *applet_opts, ...)
+static uint32_t
+vgetopt32(char **argv, const char *applet_opts, const char *applet_long_options, va_list p)
 {
 	int argc;
 	unsigned flags = 0;
 	unsigned requires = 0;
+	unsigned len;
 	t_complementary complementary[33]; /* last stays zero-filled */
-	char first_char;
+	char dont_die_flag;
 	int c;
 	const unsigned char *s;
+	const char *opt_complementary;
 	t_complementary *on_off;
-	va_list p;
-#if ENABLE_LONG_OPTS || ENABLE_FEATURE_GETOPT_LONG
+#if ENABLE_LONG_OPTS
 	const struct option *l_o;
 	struct option *long_options = (struct option *) &bb_null_long_options;
 #endif
 	unsigned trigger;
-	char **pargv;
 	int min_arg = 0;
 	int max_arg = -1;
-
-#define SHOW_USAGE_IF_ERROR     1
-#define ALL_ARGV_IS_OPTS        2
-#define FIRST_ARGV_IS_OPT       4
-
 	int spec_flgs = 0;
 
-	/* skip 0: some applets cheat: they do not actually HAVE argv[0] */
-	argc = 1 + string_array_len(argv + 1);
-
-	va_start(p, applet_opts);
+#define SHOW_USAGE_IF_ERROR     1
 
 	on_off = complementary;
 	memset(on_off, 0, sizeof(complementary));
 
-	applet_opts = strcpy(alloca(strlen(applet_opts) + 1), applet_opts);
+	len = strlen(applet_opts);
 
 	/* skip bbox extension */
-	first_char = applet_opts[0];
-	if (first_char == '!')
+	opt_complementary = NULL;
+	if (applet_opts[0] == '^') {
 		applet_opts++;
+		/* point it past terminating NUL */
+		opt_complementary = applet_opts + len;
+	}
+
+	/* skip another bbox extension */
+	dont_die_flag = applet_opts[0];
+	if (dont_die_flag == '!')
+		applet_opts++;
+
+	applet_opts = strcpy(alloca(len + 1), applet_opts);
 
 	/* skip GNU extension */
 	s = (const unsigned char *)applet_opts;
@@ -419,7 +395,7 @@ getopt32(char **argv, const char *applet
 		c++;
 	}
 
-#if ENABLE_LONG_OPTS || ENABLE_FEATURE_GETOPT_LONG
+#if ENABLE_LONG_OPTS
 	if (applet_long_options) {
 		const char *optstr;
 		unsigned i, count;
@@ -458,14 +434,11 @@ getopt32(char **argv, const char *applet
 			c++;
  next_long: ;
 		}
-		/* Make it unnecessary to clear applet_long_options
-		 * by hand after each call to getopt32
-		 */
-		applet_long_options = NULL;
 	}
-#endif /* ENABLE_LONG_OPTS || ENABLE_FEATURE_GETOPT_LONG */
+#endif /* ENABLE_LONG_OPTS */
 
-	for (s = (const unsigned char *)opt_complementary; s && *s; s++) {
+	s = (const unsigned char *)opt_complementary;
+	if (s) for (; *s; s++) {
 		t_complementary *pair;
 		unsigned *pair_switch;
 
@@ -482,13 +455,7 @@ getopt32(char **argv, const char *applet
 			continue;
 		}
 		if (*s == '-') {
-			if (c < '0' || c > '9') {
-				if (c == '-') {
-					spec_flgs |= FIRST_ARGV_IS_OPT;
-					s++;
-				} else
-					spec_flgs |= ALL_ARGV_IS_OPTS;
-			} else {
+			if (c >= '0' && c <= '9') {
 				min_arg = c - '0';
 				s++;
 			}
@@ -548,39 +515,22 @@ getopt32(char **argv, const char *applet
 		}
 		s--;
 	}
-	opt_complementary = NULL;
-	va_end(p);
-
-	if (spec_flgs & (FIRST_ARGV_IS_OPT | ALL_ARGV_IS_OPTS)) {
-		pargv = argv + 1;
-		while (*pargv) {
-			if (pargv[0][0] != '-' && pargv[0][0] != '\0') {
-				/* Can't use alloca: opts with params will
-				 * return pointers to stack!
-				 * NB: we leak these allocations... */
-				char *pp = xmalloc(strlen(*pargv) + 2);
-				*pp = '-';
-				strcpy(pp + 1, *pargv);
-				*pargv = pp;
-			}
-			if (!(spec_flgs & ALL_ARGV_IS_OPTS))
-				break;
-			pargv++;
-		}
-	}
 
 	/* In case getopt32 was already called:
-	 * reset the libc getopt() function, which keeps internal state.
+	 * reset libc getopt() internal state.
 	 * run_nofork_applet() does this, but we might end up here
 	 * also via gunzip_main() -> gzip_main(). Play safe.
 	 */
 	GETOPT_RESET();
 
+	/* skip 0: some applets cheat: they do not actually HAVE argv[0] */
+	argc = 1 + string_array_len(argv + 1);
+
 	/* Note: just "getopt() <= 0" will not work well for
 	 * "fake" short options, like this one:
 	 * wget $'-\203' "Test: test" http://kernel.org/
 	 * (supposed to act as --header, but doesn't) */
-#if ENABLE_LONG_OPTS || ENABLE_FEATURE_GETOPT_LONG
+#if ENABLE_LONG_OPTS
 	while ((c = getopt_long(argc, argv, applet_opts,
 			long_options, NULL)) != -1) {
 #else
@@ -637,7 +587,33 @@ getopt32(char **argv, const char *applet
 	return flags;
 
  error:
-	if (first_char != '!')
+	if (dont_die_flag != '!')
 		bb_show_usage();
 	return (int32_t)-1;
 }
+
+uint32_t FAST_FUNC
+getopt32(char **argv, const char *applet_opts, ...)
+{
+	uint32_t opt;
+	va_list p;
+
+	va_start(p, applet_opts);
+	opt = vgetopt32(argv, applet_opts, NULL, p);
+	va_end(p);
+	return opt;
+}
+
+#if ENABLE_LONG_OPTS
+uint32_t FAST_FUNC
+getopt32long(char **argv, const char *applet_opts, const char *longopts, ...)
+{
+	uint32_t opt;
+	va_list p;
+
+	va_start(p, longopts);
+	opt = vgetopt32(argv, applet_opts, longopts, p);
+	va_end(p);
+	return opt;
+}
+#endif
diff -urpN busybox-1.27.2/libbb/getopt_allopts.c busybox-1.28.0/libbb/getopt_allopts.c
--- busybox-1.27.2/libbb/getopt_allopts.c	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/libbb/getopt_allopts.c	2017-08-08 14:08:06.000000000 +0200
@@ -0,0 +1,27 @@
+/* vi: set sw=4 ts=4: */
+/*
+ * Copyright (C) 2017 Denys Vlasenko
+ *
+ * Licensed under GPLv2 or later, see file LICENSE in this source tree.
+ */
+#include "libbb.h"
+
+//kbuild:lib-y += getopt_allopts.o
+
+void FAST_FUNC make_all_argv_opts(char **argv)
+{
+	/* Note: we skip argv[0] */
+	while (*++argv) {
+		char *p;
+
+		if (argv[0][0] == '-')
+			continue;
+		/* Neither top nor ps care if "" arg turns into "-" */
+		/*if (argv[0][0] == '\0')
+			continue;*/
+		p = xmalloc(strlen(*argv) + 2);
+		*p = '-';
+		strcpy(p + 1, *argv);
+		*argv = p;
+	}
+}
diff -urpN busybox-1.27.2/libbb/getpty.c busybox-1.28.0/libbb/getpty.c
--- busybox-1.27.2/libbb/getpty.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/getpty.c	2017-10-20 10:36:58.000000000 +0200
@@ -5,7 +5,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 #define DEBUG 0
diff -urpN busybox-1.27.2/libbb/hash_md5_sha.c busybox-1.28.0/libbb/hash_md5_sha.c
--- busybox-1.27.2/libbb/hash_md5_sha.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/hash_md5_sha.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 #define NEED_SHA512 (ENABLE_SHA512SUM || ENABLE_USE_BB_CRYPT_SHA)
diff -urpN busybox-1.27.2/libbb/human_readable.c busybox-1.28.0/libbb/human_readable.c
--- busybox-1.27.2/libbb/human_readable.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/human_readable.c	2017-10-20 10:36:58.000000000 +0200
@@ -22,7 +22,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 const char* FAST_FUNC make_human_readable_str(unsigned long long val,
diff -urpN busybox-1.27.2/libbb/in_ether.c busybox-1.28.0/libbb/in_ether.c
--- busybox-1.27.2/libbb/in_ether.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/in_ether.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Utility routines.
  */
-
 //kbuild:lib-$(CONFIG_ARP) += in_ether.o
 //kbuild:lib-$(CONFIG_IFCONFIG) += in_ether.o
 //kbuild:lib-$(CONFIG_IFENSLAVE) += in_ether.o
diff -urpN busybox-1.27.2/libbb/inet_common.c busybox-1.28.0/libbb/inet_common.c
--- busybox-1.27.2/libbb/inet_common.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/libbb/inet_common.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,7 +7,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "inet_common.h"
 
diff -urpN busybox-1.27.2/libbb/inode_hash.c busybox-1.28.0/libbb/inode_hash.c
--- busybox-1.27.2/libbb/inode_hash.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/inode_hash.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,7 +7,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 typedef struct ino_dev_hash_bucket_struct {
diff -urpN busybox-1.27.2/libbb/isdirectory.c busybox-1.28.0/libbb/isdirectory.c
--- busybox-1.27.2/libbb/isdirectory.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/isdirectory.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,8 +7,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
-#include <sys/stat.h>
 #include "libbb.h"
 
 /*
diff -urpN busybox-1.27.2/libbb/kernel_version.c busybox-1.28.0/libbb/kernel_version.c
--- busybox-1.27.2/libbb/kernel_version.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/kernel_version.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,12 +6,10 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 /* After libbb.h, since it needs sys/types.h on some systems */
 #include <sys/utsname.h>  /* for uname(2) */
 
-
 /* Returns current kernel version encoded as major*65536 + minor*256 + patch,
  * so, for example,  to check if the kernel is greater than 2.2.11:
  *
diff -urpN busybox-1.27.2/libbb/last_char_is.c busybox-1.28.0/libbb/last_char_is.c
--- busybox-1.27.2/libbb/last_char_is.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/last_char_is.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* Find out if the last character of a string matches the one given.
diff -urpN busybox-1.27.2/libbb/lineedit.c busybox-1.28.0/libbb/lineedit.c
--- busybox-1.27.2/libbb/lineedit.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/lineedit.c	2018-01-01 20:40:41.000000000 +0100
@@ -37,11 +37,6 @@
  *
  * Unicode in PS1 is not fully supported: prompt length calulation is wrong,
  * resulting in line wrap problems with long (multi-line) input.
- *
- * Multi-line PS1 (e.g. PS1="\n[\w]\n$ ") has problems with history
- * browsing: up/down arrows result in scrolling.
- * It stems from simplistic "cmdedit_y = cmdedit_prmt_len / cmdedit_termw"
- * calculation of how many lines the prompt takes.
  */
 #include "busybox.h"
 #include "NUM_APPLETS.h"
@@ -95,7 +90,8 @@ static bool BB_ispunct(CHAR_T c) { retur
 # define CHAR_T char
 # define BB_isspace(c) isspace(c)
 # if ENABLE_FEATURE_EDITING_VI
-static bool BB_isalnum_or_underscore(CHAR_T c) {
+static bool BB_isalnum_or_underscore(CHAR_T c)
+{
 	return ((unsigned)c < 256 && isalnum(c)) || c == '_';
 }
 # endif
@@ -133,7 +129,7 @@ struct lineedit_statics {
 
 	unsigned cmdedit_x;        /* real x (col) terminal position */
 	unsigned cmdedit_y;        /* pseudoreal y (row) terminal position */
-	unsigned cmdedit_prmt_len; /* length of prompt (without colors etc) */
+	unsigned cmdedit_prmt_len; /* on-screen length of last/sole prompt line */
 
 	unsigned cursor;
 	int command_len; /* must be signed */
@@ -143,6 +139,7 @@ struct lineedit_statics {
 	CHAR_T *command_ps;
 
 	const char *cmdedit_prompt;
+	const char *prompt_last_line;  /* last/sole prompt line */
 
 #if ENABLE_USERNAME_OR_HOMEDIR
 	char *user_buf;
@@ -185,6 +182,7 @@ extern struct lineedit_statics *const li
 #define command_len      (S.command_len     )
 #define command_ps       (S.command_ps      )
 #define cmdedit_prompt   (S.cmdedit_prompt  )
+#define prompt_last_line (S.prompt_last_line)
 #define user_buf         (S.user_buf        )
 #define home_pwd_buf     (S.home_pwd_buf    )
 #define matches          (S.matches         )
@@ -437,14 +435,20 @@ static void beep(void)
 	bb_putchar('\007');
 }
 
-static void put_prompt(void)
+/* Full or last/sole prompt line, reset edit cursor, calculate terminal cursor.
+ * cmdedit_y is always calculated for the last/sole prompt line.
+ */
+static void put_prompt_custom(bool is_full)
 {
-	fputs(cmdedit_prompt, stdout);
+	fputs((is_full ? cmdedit_prompt : prompt_last_line), stdout);
 	cursor = 0;
 	cmdedit_y = cmdedit_prmt_len / cmdedit_termw; /* new quasireal y */
 	cmdedit_x = cmdedit_prmt_len % cmdedit_termw;
 }
 
+#define put_prompt_last_line() put_prompt_custom(0)
+#define put_prompt()           put_prompt_custom(1)
+
 /* Move back one character */
 /* (optimized for slow terminals) */
 static void input_backward(unsigned num)
@@ -509,7 +513,7 @@ static void input_backward(unsigned num)
 		printf("\r" ESC"[%uA", cmdedit_y);
 		cmdedit_y = 0;
 		sv_cursor = cursor;
-		put_prompt(); /* sets cursor to 0 */
+		put_prompt_last_line(); /* sets cursor to 0 */
 		while (cursor < sv_cursor)
 			put_cur_glyph_and_inc_cursor();
 	} else {
@@ -530,18 +534,27 @@ static void input_backward(unsigned num)
 	}
 }
 
-/* draw prompt, editor line, and clear tail */
-static void redraw(int y, int back_cursor)
+/* See redraw and draw_full below */
+static void draw_custom(int y, int back_cursor, bool is_full)
 {
 	if (y > 0) /* up y lines */
 		printf(ESC"[%uA", y);
 	bb_putchar('\r');
-	put_prompt();
+	put_prompt_custom(is_full);
 	put_till_end_and_adv_cursor();
 	printf(SEQ_CLEAR_TILL_END_OF_SCREEN);
 	input_backward(back_cursor);
 }
 
+/* Move y lines up, draw last/sole prompt line, editor line[s], and clear tail.
+ * goal: redraw the prompt+input+cursor in-place, overwriting the previous */
+#define redraw(y, back_cursor) draw_custom((y), (back_cursor), 0)
+
+/* Like above, but without moving up, and while using all the prompt lines.
+ * goal: draw a full prompt+input+cursor unrelated to a previous position.
+ * note: cmdedit_y always ends up relating to the last/sole prompt line */
+#define draw_full(back_cursor) draw_custom(0, (back_cursor), 1)
+
 /* Delete the char in front of the cursor, optionally saving it
  * for later putback */
 #if !ENABLE_FEATURE_EDITING_VI
@@ -633,6 +646,18 @@ static void free_tab_completion_data(voi
 
 static void add_match(char *matched)
 {
+	unsigned char *p = (unsigned char*)matched;
+	while (*p) {
+		/* ESC attack fix: drop any string with control chars */
+		if (*p < ' '
+		 || (!ENABLE_UNICODE_SUPPORT && *p >= 0x7f)
+		 || (ENABLE_UNICODE_SUPPORT && *p == 0x7f)
+		) {
+			free(matched);
+			return;
+		}
+		p++;
+	}
 	matches = xrealloc_vector(matches, 4, num_matches);
 	matches[num_matches] = matched;
 	num_matches++;
@@ -776,7 +801,7 @@ static NOINLINE unsigned complete_cmd_di
 	}
 	pf_len = strlen(pfind);
 
-#if ENABLE_FEATURE_SH_STANDALONE && NUM_APPLETS != 1
+# if ENABLE_FEATURE_SH_STANDALONE && NUM_APPLETS != 1
 	if (type == FIND_EXE_ONLY && !dirbuf) {
 		const char *p = applet_names;
 
@@ -787,7 +812,7 @@ static NOINLINE unsigned complete_cmd_di
 				continue;
 		}
 	}
-#endif
+# endif
 
 	for (i = 0; i < npaths; i++) {
 		DIR *dir;
@@ -1106,7 +1131,7 @@ static NOINLINE void input_tab(smallint
 			int sav_cursor = cursor;
 			goto_new_line();
 			showfiles();
-			redraw(0, command_len - sav_cursor);
+			draw_full(command_len - sav_cursor);
 		}
 		return;
 	}
@@ -1267,6 +1292,7 @@ line_input_t* FAST_FUNC new_line_input_t
 {
 	line_input_t *n = xzalloc(sizeof(*n));
 	n->flags = flags;
+	n->timeout = -1;
 #if MAX_HISTORY > 0
 	n->max_history = MAX_HISTORY;
 #endif
@@ -1781,14 +1807,37 @@ static void ask_terminal(void)
 #define ask_terminal() ((void)0)
 #endif
 
+/* Note about multi-line PS1 (e.g. "\n\w \u@\h\n> ") and prompt redrawing:
+ *
+ * If the prompt has any newlines, after we print it once we use only its last
+ * line to redraw in-place, which makes it simpler to calculate how many lines
+ * we should move the cursor up to align the redraw (cmdedit_y). The earlier
+ * prompt lines just stay on screen and we redraw below them.
+ *
+ * Use cases for all prompt lines beyond the initial draw:
+ * - After clear-screen (^L) or after displaying tab-completion choices, we
+ *   print the full prompt, as it isn't redrawn in-place.
+ * - During terminal resize we could try to redraw all lines, but we don't,
+ *   because it requires delicate alignment, it's good enough with only the
+ *   last line, and doing it wrong is arguably worse than not doing it at all.
+ *
+ * Terminology wise, if it doesn't mention "full", then it means the last/sole
+ * prompt line. We use the prompt (last/sole line) while redrawing in-place,
+ * and the full where we need a fresh one unrelated to an earlier position.
+ *
+ * If PS1 is not multiline, the last/sole line and the full are the same string.
+ */
+
 /* Called just once at read_line_input() init time */
 #if !ENABLE_FEATURE_EDITING_FANCY_PROMPT
 static void parse_and_put_prompt(const char *prmt_ptr)
 {
 	const char *p;
-	cmdedit_prompt = prmt_ptr;
+	cmdedit_prompt = prompt_last_line = prmt_ptr;
 	p = strrchr(prmt_ptr, '\n');
-	cmdedit_prmt_len = unicode_strwidth(p ? p+1 : prmt_ptr);
+	if (p)
+		prompt_last_line = p + 1;
+	cmdedit_prmt_len = unicode_strwidth(prompt_last_line);
 	put_prompt();
 }
 #else
@@ -1972,7 +2021,11 @@ static void parse_and_put_prompt(const c
 	if (cwd_buf != (char *)bb_msg_unknown)
 		free(cwd_buf);
 # endif
-	cmdedit_prompt = prmt_mem_ptr;
+	/* see comment (above this function) about multiline prompt redrawing */
+	cmdedit_prompt = prompt_last_line = prmt_mem_ptr;
+	prmt_ptr = strrchr(cmdedit_prompt, '\n');
+	if (prmt_ptr)
+		prompt_last_line = prmt_ptr + 1;
 	put_prompt();
 }
 #endif
@@ -2130,7 +2183,7 @@ enum {
  * Backspace deletes last matched char.
  * Control keys exit search and return to normal editing (at current history line).
  */
-static int32_t reverse_i_search(void)
+static int32_t reverse_i_search(int timeout)
 {
 	char match_buf[128]; /* for user input */
 	char read_key_buffer[KEYCODE_BUFFER_SIZE];
@@ -2144,7 +2197,7 @@ static int32_t reverse_i_search(void)
 	match_buf[0] = '\0';
 
 	/* Save and replace the prompt */
-	saved_prompt = cmdedit_prompt;
+	saved_prompt = prompt_last_line;
 	saved_prmt_len = cmdedit_prmt_len;
 	goto set_prompt;
 
@@ -2152,8 +2205,8 @@ static int32_t reverse_i_search(void)
 		int h;
 		unsigned match_buf_len = strlen(match_buf);
 
-//FIXME: correct timeout?
-		ic = lineedit_read_key(read_key_buffer, -1);
+//FIXME: correct timeout? (i.e. count it down?)
+		ic = lineedit_read_key(read_key_buffer, timeout);
 
 		switch (ic) {
 		case CTRL('R'): /* searching for the next match */
@@ -2217,10 +2270,10 @@ static int32_t reverse_i_search(void)
 					cursor = match - matched_history_line;
 //FIXME: cursor position for Unicode case
 
-					free((char*)cmdedit_prompt);
+					free((char*)prompt_last_line);
  set_prompt:
-					cmdedit_prompt = xasprintf("(reverse-i-search)'%s': ", match_buf);
-					cmdedit_prmt_len = unicode_strwidth(cmdedit_prompt);
+					prompt_last_line = xasprintf("(reverse-i-search)'%s': ", match_buf);
+					cmdedit_prmt_len = unicode_strwidth(prompt_last_line);
 					goto do_redraw;
 				}
 			}
@@ -2240,8 +2293,8 @@ static int32_t reverse_i_search(void)
 	if (matched_history_line)
 		command_len = load_string(matched_history_line);
 
-	free((char*)cmdedit_prompt);
-	cmdedit_prompt = saved_prompt;
+	free((char*)prompt_last_line);
+	prompt_last_line = saved_prompt;
 	cmdedit_prmt_len = saved_prmt_len;
 	redraw(cmdedit_y, command_len - cursor);
 
@@ -2256,9 +2309,10 @@ static int32_t reverse_i_search(void)
  * (in both cases the cursor remains on the input line, '\n' is not printed)
  * >0 length of input string, including terminating '\n'
  */
-int FAST_FUNC read_line_input(line_input_t *st, const char *prompt, char *command, int maxsize, int timeout)
+int FAST_FUNC read_line_input(line_input_t *st, const char *prompt, char *command, int maxsize)
 {
-	int len;
+	int len, n;
+	int timeout;
 #if ENABLE_FEATURE_TAB_COMPLETION
 	smallint lastWasTab = 0;
 #endif
@@ -2272,9 +2326,10 @@ int FAST_FUNC read_line_input(line_input
 
 	INIT_S();
 
-	if (tcgetattr(STDIN_FILENO, &initial_settings) < 0
-	 || (initial_settings.c_lflag & (ECHO|ICANON)) == ICANON
-	) {
+	n = get_termios_and_make_raw(STDIN_FILENO, &new_settings, &initial_settings, 0
+		| TERMIOS_CLEAR_ISIG /* turn off INTR (ctrl-C), QUIT, SUSP */
+	);
+	if (n != 0 || (initial_settings.c_lflag & (ECHO|ICANON)) == ICANON) {
 		/* Happens when e.g. stty -echo was run before.
 		 * But if ICANON is not set, we don't come here.
 		 * (example: interactive python ^Z-backgrounded,
@@ -2297,8 +2352,15 @@ int FAST_FUNC read_line_input(line_input
 		maxsize = MAX_LINELEN;
 	S.maxsize = maxsize;
 
-	/* With zero flags, no other fields are ever used */
-	state = st ? st : (line_input_t*) &const_int_0;
+	timeout = -1;
+	/* Make state->flags == 0 if st is NULL.
+	 * With zeroed flags, no other fields are ever referenced.
+	 */
+	state = (line_input_t*) &const_int_0;
+	if (st) {
+		state = st;
+		timeout = st->timeout;
+	}
 #if MAX_HISTORY > 0
 # if ENABLE_FEATURE_EDITING_SAVEHISTORY
 	if (state->hist_file)
@@ -2320,18 +2382,6 @@ int FAST_FUNC read_line_input(line_input
 #endif
 #define command command_must_not_be_used
 
-	new_settings = initial_settings;
-	/* ~ICANON: unbuffered input (most c_cc[] are disabled, VMIN/VTIME are enabled) */
-	/* ~ECHO, ~ECHONL: turn off echoing, including newline echoing */
-	/* ~ISIG: turn off INTR (ctrl-C), QUIT, SUSP */
-	new_settings.c_lflag &= ~(ICANON | ECHO | ECHONL | ISIG);
-	/* reads will block only if < 1 char is available */
-	new_settings.c_cc[VMIN] = 1;
-	/* no timeout (reads block forever) */
-	new_settings.c_cc[VTIME] = 0;
-	/* Should be not needed if ISIG is off: */
-	/* Turn off CTRL-C */
-	/* new_settings.c_cc[VINTR] = _POSIX_VDISABLE; */
 	tcsetattr_stdin_TCSANOW(&new_settings);
 
 #if ENABLE_USERNAME_OR_HOMEDIR
@@ -2352,6 +2402,8 @@ int FAST_FUNC read_line_input(line_input
 	bb_error_msg("cur_history:%d cnt_history:%d", state->cur_history, state->cnt_history);
 #endif
 
+	/* Get width (before printing prompt) */
+	cmdedit_termw = get_terminal_width(STDIN_FILENO);
 	/* Print out the command prompt, optionally ask where cursor is */
 	parse_and_put_prompt(prompt);
 	ask_terminal();
@@ -2361,8 +2413,6 @@ int FAST_FUNC read_line_input(line_input
 	S.SIGWINCH_handler.sa_flags = SA_RESTART;
 	sigaction(SIGWINCH, &S.SIGWINCH_handler, &S.SIGWINCH_handler);
 
-	cmdedit_termw = get_terminal_width(STDIN_FILENO);
-
 	read_key_buffer[0] = 0;
 	while (1) {
 		/*
@@ -2453,8 +2503,9 @@ int FAST_FUNC read_line_input(line_input
 		case CTRL('L'):
 		vi_case(CTRL('L')|VI_CMDMODE_BIT:)
 			/* Control-l -- clear screen */
-			printf(ESC"[H"); /* cursor to top,left */
-			redraw(0, command_len - cursor);
+			/* cursor to top,left; clear to the end of screen */
+			printf(ESC"[H" ESC"[J");
+			draw_full(command_len - cursor);
 			break;
 #if MAX_HISTORY > 0
 		case CTRL('N'):
@@ -2510,7 +2561,7 @@ int FAST_FUNC read_line_input(line_input
 		}
 #if ENABLE_FEATURE_REVERSE_SEARCH
 		case CTRL('R'):
-			ic = ic_raw = reverse_i_search();
+			ic = ic_raw = reverse_i_search(timeout);
 			goto again;
 #endif
 
@@ -2859,7 +2910,7 @@ int main(int argc, char **argv)
 #if ENABLE_FEATURE_EDITING_FANCY_PROMPT
 		"\\[\\033[32;1m\\]\\u@\\[\\x1b[33;1m\\]\\h:"
 		"\\[\\033[34;1m\\]\\w\\[\\033[35;1m\\] "
-		"\\!\\[\\e[36;1m\\]\\$ \\[\\E[0m\\]";
+		"\\!\\[\\e[36;1m\\]\\$ \\[\\E[m\\]";
 #else
 		"% ";
 #endif
diff -urpN busybox-1.27.2/libbb/llist.c busybox-1.28.0/libbb/llist.c
--- busybox-1.27.2/libbb/llist.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/llist.c	2017-10-20 10:36:58.000000000 +0200
@@ -9,7 +9,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* Add data to the start of the linked list.  */
diff -urpN busybox-1.27.2/libbb/login.c busybox-1.28.0/libbb/login.c
--- busybox-1.27.2/libbb/login.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/login.c	2017-10-20 10:36:58.000000000 +0200
@@ -8,7 +8,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 /* After libbb.h, since it needs sys/types.h on some systems */
 #include <sys/utsname.h>
diff -urpN busybox-1.27.2/libbb/make_directory.c busybox-1.28.0/libbb/make_directory.c
--- busybox-1.27.2/libbb/make_directory.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/make_directory.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 /* Mar 5, 2003    Manuel Novoa III
  *
  * This is the main work function for the 'mkdir' applet.  As such, it
@@ -21,7 +20,6 @@
  * To set specific permissions on 'path', pass the appropriate 'mode'
  * val.  Otherwise, pass -1 to get default permissions.
  */
-
 #include "libbb.h"
 
 /* This function is used from NOFORK applets. It must not allocate anything */
diff -urpN busybox-1.27.2/libbb/match_fstype.c busybox-1.28.0/libbb/match_fstype.c
--- busybox-1.27.2/libbb/match_fstype.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/match_fstype.c	2017-10-20 10:36:58.000000000 +0200
@@ -9,7 +9,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 int FAST_FUNC fstype_matches(const char *fstype, const char *comma_list)
diff -urpN busybox-1.27.2/libbb/messages.c busybox-1.28.0/libbb/messages.c
--- busybox-1.27.2/libbb/messages.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/libbb/messages.c	2017-10-20 10:36:58.000000000 +0200
@@ -4,7 +4,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* allow default system PATH to be extended via CFLAGS */
@@ -14,12 +13,10 @@
 
 /* allow version to be extended, via CFLAGS */
 #ifndef BB_EXTRA_VERSION
-#define BB_EXTRA_VERSION BB_BT
+#define BB_EXTRA_VERSION " ("AUTOCONF_TIMESTAMP")"
 #endif
 
-#define BANNER "BusyBox v" BB_VER " (" BB_EXTRA_VERSION ")"
-
-const char bb_banner[] ALIGN1 = BANNER;
+const char bb_banner[] ALIGN1 = "BusyBox v" BB_VER BB_EXTRA_VERSION;
 
 
 const char bb_msg_memory_exhausted[] ALIGN1 = "out of memory";
diff -urpN busybox-1.27.2/libbb/mode_string.c busybox-1.28.0/libbb/mode_string.c
--- busybox-1.27.2/libbb/mode_string.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/mode_string.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,15 +6,7 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
-/* Aug 13, 2003
- * Fix a bug reported by junkio@cox.net involving the mode_chars index.
- */
-
-
 #include <assert.h>
-#include <sys/stat.h>
-
 #include "libbb.h"
 
 #if ( S_ISUID != 04000 ) || ( S_ISGID != 02000 ) || ( S_ISVTX != 01000 ) \
diff -urpN busybox-1.27.2/libbb/mtab.c busybox-1.28.0/libbb/mtab.c
--- busybox-1.27.2/libbb/mtab.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/mtab.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include <mntent.h>
 #include "libbb.h"
 
diff -urpN busybox-1.27.2/libbb/nuke_str.c busybox-1.28.0/libbb/nuke_str.c
--- busybox-1.27.2/libbb/nuke_str.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/nuke_str.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 //kbuild:lib-y += nuke_str.o
 
 #include "libbb.h"
diff -urpN busybox-1.27.2/libbb/parse_config.c busybox-1.28.0/libbb/parse_config.c
--- busybox-1.27.2/libbb/parse_config.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/parse_config.c	2017-08-17 13:50:45.000000000 +0200
@@ -13,7 +13,7 @@
 ////config:	bool "Uniform config file parser debugging applet: parse"
 ////config:	default n
 ////config:	help
-////config:	  Typical usage of parse API:
+////config:	Typical usage of parse API:
 ////config:		char *t[3];
 ////config:		parser_t *p = config_open(filename);
 ////config:		while (config_read(p, t, 3, 0, delimiters, flags)) { // 1..3 tokens
@@ -42,8 +42,9 @@ int parse_main(int argc UNUSED_PARAM, ch
 	int mintokens = 0, ntokens = 128;
 	unsigned noout;
 
-	opt_complementary = "-1";
-	noout = 1 & getopt32(argv, "xn:+m:+d:f:+", &ntokens, &mintokens, &delims, &flags);
+	noout = 1 & getopt32(argv, "^" "xn:+m:+d:f:+" "\0" "-1",
+				&ntokens, &mintokens, &delims, &flags
+	);
 	//argc -= optind;
 	argv += optind;
 
@@ -161,13 +162,18 @@ mintokens > 0 make config_read() print e
 #undef config_read
 int FAST_FUNC config_read(parser_t *parser, char **tokens, unsigned flags, const char *delims)
 {
-	char *line;
+	char *line, *p;
 	int ntokens, mintokens;
 	int t;
+	char alt_comment_ch;
 
 	if (!parser)
 		return 0;
 
+	alt_comment_ch = '\0';
+	if (flags & PARSE_ALT_COMMENTS)
+		alt_comment_ch = *delims++;
+
 	ntokens = (uint8_t)flags;
 	mintokens = (uint8_t)(flags >> 8);
 
@@ -184,7 +190,10 @@ int FAST_FUNC config_read(parser_t *pars
 	if (flags & PARSE_TRIM)
 		line += strspn(line, delims + 1);
 
-	if (line[0] == '\0' || line[0] == delims[0])
+	p = line;
+	if (flags & PARSE_WS_COMMENTS)
+		p = skip_whitespace(p);
+	if (p[0] == '\0' || p[0] == delims[0] || p[0] == alt_comment_ch)
 		goto again;
 
 	if (flags & PARSE_KEEP_COPY) {
@@ -201,10 +210,10 @@ int FAST_FUNC config_read(parser_t *pars
 		/* Combine remaining arguments? */
 		if ((t != (ntokens-1)) || !(flags & PARSE_GREEDY)) {
 			/* Vanilla token, find next delimiter */
-			line += strcspn(line, delims[0] ? delims : delims + 1);
+			line += strcspn(line, (delims[0] && (flags & PARSE_EOL_COMMENTS)) ? delims : delims + 1);
 		} else {
 			/* Combining, find comment char if any */
-			line = strchrnul(line, PARSE_EOL_COMMENTS ? delims[0] : '\0');
+			line = strchrnul(line, (flags & PARSE_EOL_COMMENTS) ? delims[0] : '\0');
 
 			/* Trim any extra delimiters from the end */
 			if (flags & PARSE_TRIM) {
@@ -214,10 +223,10 @@ int FAST_FUNC config_read(parser_t *pars
 		}
 
 		/* Token not terminated? */
-		if (*line == delims[0])
-			*line = '\0';
+		if ((flags & PARSE_EOL_COMMENTS) && *line == delims[0])
+			*line = '\0'; /* ends with comment char: this line is done */
 		else if (*line != '\0')
-			*line++ = '\0';
+			*line++ = '\0'; /* token is done, continue parsing line */
 
 #if 0 /* unused so far */
 		if (flags & PARSE_ESCAPE) {
diff -urpN busybox-1.27.2/libbb/parse_mode.c busybox-1.28.0/libbb/parse_mode.c
--- busybox-1.27.2/libbb/parse_mode.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/parse_mode.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,11 +6,10 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
+#include "libbb.h"
 
 /* http://www.opengroup.org/onlinepubs/007904975/utilities/chmod.html */
 
-#include "libbb.h"
-
 /* This function is used from NOFORK applets. It must not allocate anything */
 
 #define FILEMODEBITS (S_ISUID | S_ISGID | S_ISVTX | S_IRWXU | S_IRWXG | S_IRWXO)
diff -urpN busybox-1.27.2/libbb/percent_decode.c busybox-1.28.0/libbb/percent_decode.c
--- busybox-1.27.2/libbb/percent_decode.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/percent_decode.c	2017-10-20 10:36:58.000000000 +0200
@@ -2,7 +2,6 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //kbuild:lib-y += percent_decode.o
 
 #include "libbb.h"
diff -urpN busybox-1.27.2/libbb/print_flags.c busybox-1.28.0/libbb/print_flags.c
--- busybox-1.27.2/libbb/print_flags.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/print_flags.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,5 +1,6 @@
 /* vi: set sw=4 ts=4: */
-/* Print string that matches bit masked flags
+/*
+ * Print string that matches bit masked flags
  *
  * Copyright (C) 2008 Natanael Copa <natanael.copa@gmail.com>
  *
diff -urpN busybox-1.27.2/libbb/print_numbered_lines.c busybox-1.28.0/libbb/print_numbered_lines.c
--- busybox-1.27.2/libbb/print_numbered_lines.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/libbb/print_numbered_lines.c	2017-07-18 19:13:20.000000000 +0200
@@ -24,6 +24,7 @@ void FAST_FUNC print_numbered_lines(stru
 			fputs(ns->empty_str, stdout);
 		free(line);
 	}
+	ns->start = N;
 
 	fclose(fp);
 }
diff -urpN busybox-1.27.2/libbb/printable.c busybox-1.28.0/libbb/printable.c
--- busybox-1.27.2/libbb/printable.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/printable.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 void FAST_FUNC fputc_printable(int ch, FILE *file)
diff -urpN busybox-1.27.2/libbb/process_escape_sequence.c busybox-1.28.0/libbb/process_escape_sequence.c
--- busybox-1.27.2/libbb/process_escape_sequence.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/process_escape_sequence.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,7 +7,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 #define WANT_HEX_ESCAPES 1
diff -urpN busybox-1.27.2/libbb/procps.c busybox-1.28.0/libbb/procps.c
--- busybox-1.27.2/libbb/procps.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/procps.c	2017-10-20 10:36:58.000000000 +0200
@@ -8,7 +8,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 
diff -urpN busybox-1.27.2/libbb/progress.c busybox-1.28.0/libbb/progress.c
--- busybox-1.27.2/libbb/progress.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/progress.c	2017-08-03 17:53:10.000000000 +0200
@@ -25,7 +25,7 @@
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
diff -urpN busybox-1.27.2/libbb/ptr_to_globals.c busybox-1.28.0/libbb/ptr_to_globals.c
--- busybox-1.27.2/libbb/ptr_to_globals.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/ptr_to_globals.c	2017-10-20 10:36:58.000000000 +0200
@@ -4,7 +4,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include <errno.h>
 
 struct globals;
diff -urpN busybox-1.27.2/libbb/pw_encrypt.c busybox-1.28.0/libbb/pw_encrypt.c
--- busybox-1.27.2/libbb/pw_encrypt.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/pw_encrypt.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* static const uint8_t ascii64[] ALIGN1 =
diff -urpN busybox-1.27.2/libbb/pw_encrypt_des.c busybox-1.28.0/libbb/pw_encrypt_des.c
--- busybox-1.27.2/libbb/pw_encrypt_des.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/pw_encrypt_des.c	2017-08-03 17:53:10.000000000 +0200
@@ -24,7 +24,7 @@
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
diff -urpN busybox-1.27.2/libbb/recursive_action.c busybox-1.28.0/libbb/recursive_action.c
--- busybox-1.27.2/libbb/recursive_action.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/recursive_action.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 #undef DEBUG_RECURS_ACTION
diff -urpN busybox-1.27.2/libbb/remove_file.c busybox-1.28.0/libbb/remove_file.c
--- busybox-1.27.2/libbb/remove_file.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/remove_file.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* Used from NOFORK applets. Must not allocate anything */
diff -urpN busybox-1.27.2/libbb/replace.c busybox-1.28.0/libbb/replace.c
--- busybox-1.27.2/libbb/replace.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/replace.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //kbuild:lib-y += replace.o
 
 #include "libbb.h"
diff -urpN busybox-1.27.2/libbb/run_shell.c busybox-1.28.0/libbb/run_shell.c
--- busybox-1.27.2/libbb/run_shell.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/run_shell.c	2017-10-20 10:36:58.000000000 +0200
@@ -15,7 +15,7 @@
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY JULIE HAUGH AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY JULIE HAUGH AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL JULIE HAUGH OR CONTRIBUTORS BE LIABLE
@@ -27,7 +27,6 @@
  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  * SUCH DAMAGE.
  */
-
 #include "libbb.h"
 #if ENABLE_SELINUX
 #include <selinux/selinux.h>  /* for setexeccon  */
diff -urpN busybox-1.27.2/libbb/safe_gethostname.c busybox-1.28.0/libbb/safe_gethostname.c
--- busybox-1.27.2/libbb/safe_gethostname.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/safe_gethostname.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 /*
  * SUSv2 guarantees that "Host names are limited to 255 bytes"
  * POSIX.1-2001 guarantees that "Host names (not including the terminating
@@ -23,7 +22,6 @@
  * Host software MUST handle host names of up to 63 characters and
  * SHOULD handle host names of up to 255 characters.
  */
-
 #include "libbb.h"
 #include <sys/utsname.h>
 
diff -urpN busybox-1.27.2/libbb/safe_poll.c busybox-1.28.0/libbb/safe_poll.c
--- busybox-1.27.2/libbb/safe_poll.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/safe_poll.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* Wrapper which restarts poll on EINTR or ENOMEM.
diff -urpN busybox-1.27.2/libbb/safe_strncpy.c busybox-1.28.0/libbb/safe_strncpy.c
--- busybox-1.27.2/libbb/safe_strncpy.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/safe_strncpy.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* Like strncpy but make sure the resulting string is always 0 terminated. */
diff -urpN busybox-1.27.2/libbb/safe_write.c busybox-1.28.0/libbb/safe_write.c
--- busybox-1.27.2/libbb/safe_write.c	2017-08-04 02:17:50.000000000 +0200
+++ busybox-1.28.0/libbb/safe_write.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 ssize_t FAST_FUNC safe_write(int fd, const void *buf, size_t count)
diff -urpN busybox-1.27.2/libbb/setup_environment.c busybox-1.28.0/libbb/setup_environment.c
--- busybox-1.27.2/libbb/setup_environment.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/setup_environment.c	2017-10-20 10:36:58.000000000 +0200
@@ -15,7 +15,7 @@
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY JULIE HAUGH AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY JULIE HAUGH AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL JULIE HAUGH OR CONTRIBUTORS BE LIABLE
@@ -27,7 +27,6 @@
  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  * SUCH DAMAGE.
  */
-
 #include "libbb.h"
 
 void FAST_FUNC setup_environment(const char *shell, int flags, const struct passwd *pw)
diff -urpN busybox-1.27.2/libbb/signals.c busybox-1.28.0/libbb/signals.c
--- busybox-1.27.2/libbb/signals.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/signals.c	2017-10-20 10:36:58.000000000 +0200
@@ -8,7 +8,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* All known arches use small ints for signals */
diff -urpN busybox-1.27.2/libbb/skip_whitespace.c busybox-1.28.0/libbb/skip_whitespace.c
--- busybox-1.27.2/libbb/skip_whitespace.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/skip_whitespace.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 char* FAST_FUNC skip_whitespace(const char *s)
diff -urpN busybox-1.27.2/libbb/speed_table.c busybox-1.28.0/libbb/speed_table.c
--- busybox-1.27.2/libbb/speed_table.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/speed_table.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 struct speed_map {
diff -urpN busybox-1.27.2/libbb/strrstr.c busybox-1.28.0/libbb/strrstr.c
--- busybox-1.27.2/libbb/strrstr.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/strrstr.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /*
diff -urpN busybox-1.27.2/libbb/trim.c busybox-1.28.0/libbb/trim.c
--- busybox-1.27.2/libbb/trim.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/trim.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,12 +7,12 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
-void FAST_FUNC trim(char *s)
+char* FAST_FUNC trim(char *s)
 {
 	size_t len = strlen(s);
+	size_t old = len;
 
 	/* trim trailing whitespace */
 	while (len && isspace(s[len-1]))
@@ -26,5 +26,12 @@ void FAST_FUNC trim(char *s)
 			memmove(s, nws, len);
 		}
 	}
-	s[len] = '\0';
+
+	s += len;
+	/* If it was a "const char*" which does not need trimming,
+	 * avoid superfluous store */
+	if (old != len)
+		*s = '\0';
+
+	return s;
 }
diff -urpN busybox-1.27.2/libbb/u_signal_names.c busybox-1.28.0/libbb/u_signal_names.c
--- busybox-1.27.2/libbb/u_signal_names.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/u_signal_names.c	2017-10-05 11:53:08.000000000 +0200
@@ -6,13 +6,12 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config FEATURE_RTMINMAX
 //config:	bool "Support RTMIN[+n] and RTMAX[-n] signal names"
 //config:	default y
 //config:	help
-//config:	  Support RTMIN[+n] and RTMAX[-n] signal names
-//config:	  in kill, killall etc. This costs ~250 bytes.
+//config:	Support RTMIN[+n] and RTMAX[-n] signal names
+//config:	in kill, killall etc. This costs ~250 bytes.
 
 #include "libbb.h"
 
@@ -143,7 +142,7 @@ int FAST_FUNC get_signum(const char *nam
 	unsigned i;
 
 	i = bb_strtou(name, NULL, 10);
-	if (!errno)
+	if (!errno && i < NSIG) /* for shells, we allow 0 too */
 		return i;
 	if (strncasecmp(name, "SIG", 3) == 0)
 		name += 3;
diff -urpN busybox-1.27.2/libbb/ubi.c busybox-1.28.0/libbb/ubi.c
--- busybox-1.27.2/libbb/ubi.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/ubi.c	2017-08-08 14:08:06.000000000 +0200
@@ -35,6 +35,7 @@ int FAST_FUNC ubi_get_volid_by_name(unsi
 		if (open_read_close(fname, buf, sizeof(buf)) <= 0)
 			continue;
 
+		buf[UBI_MAX_VOLUME_NAME] = '\0';
 		strchrnul(buf, '\n')[0] = '\0';
 		if (strcmp(vol_name, buf) == 0)
 			return i;
diff -urpN busybox-1.27.2/libbb/udp_io.c busybox-1.28.0/libbb/udp_io.c
--- busybox-1.27.2/libbb/udp_io.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/udp_io.c	2017-12-04 16:07:47.000000000 +0100
@@ -8,6 +8,10 @@
  */
 #include "libbb.h"
 
+#if defined(IPV6_PKTINFO) && !defined(IPV6_RECVPKTINFO)
+# define IPV6_RECVPKTINFO IPV6_PKTINFO
+#endif
+
 /*
  * This asks kernel to let us know dst addr/port of incoming packets
  * We don't check for errors here. Not supported == won't be used
@@ -18,8 +22,8 @@ socket_want_pktinfo(int fd UNUSED_PARAM)
 #ifdef IP_PKTINFO
 	setsockopt_1(fd, IPPROTO_IP, IP_PKTINFO);
 #endif
-#if ENABLE_FEATURE_IPV6 && defined(IPV6_PKTINFO)
-	setsockopt_1(fd, IPPROTO_IPV6, IPV6_PKTINFO);
+#if ENABLE_FEATURE_IPV6 && defined(IPV6_RECVPKTINFO)
+	setsockopt_1(fd, IPPROTO_IPV6, IPV6_RECVPKTINFO);
 #endif
 }
 
diff -urpN busybox-1.27.2/libbb/uuencode.c busybox-1.28.0/libbb/uuencode.c
--- busybox-1.27.2/libbb/uuencode.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/uuencode.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* Conversion table.  for base 64 */
diff -urpN busybox-1.27.2/libbb/vdprintf.c busybox-1.28.0/libbb/vdprintf.c
--- busybox-1.27.2/libbb/vdprintf.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/vdprintf.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,21 +0,0 @@
-/* vi: set sw=4 ts=4: */
-/*
- * Utility routines.
- *
- * Copyright (C) 1999-2004 by Erik Andersen <andersen@codepoet.org>
- *
- * Licensed under GPLv2 or later, see file LICENSE in this source tree.
- */
-
-#include "libbb.h"
-
-#if defined(__GLIBC__) && __GLIBC__ < 2
-int FAST_FUNC vdprintf(int d, const char *format, va_list ap)
-{
-	char buf[8 * 1024];
-	int len;
-
-	len = vsnprintf(buf, sizeof(buf), format, ap);
-	return write(d, buf, len);
-}
-#endif
diff -urpN busybox-1.27.2/libbb/vfork_daemon_rexec.c busybox-1.28.0/libbb/vfork_daemon_rexec.c
--- busybox-1.27.2/libbb/vfork_daemon_rexec.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/libbb/vfork_daemon_rexec.c	2017-08-17 13:50:45.000000000 +0200
@@ -14,76 +14,46 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
+#include <sys/prctl.h>
+#ifndef PR_SET_NAME
+#define PR_SET_NAME 15
+#endif
+#ifndef PR_GET_NAME
+#define PR_GET_NAME 16
+#endif
 
 #include "busybox.h" /* uses applet tables */
 #include "NUM_APPLETS.h"
 
-/* This does a fork/exec in one call, using vfork().  Returns PID of new child,
- * -1 for failure.  Runs argv[0], searching path if that has no / in it. */
-pid_t FAST_FUNC spawn(char **argv)
-{
-	/* Compiler should not optimize stores here */
-	volatile int failed;
-	pid_t pid;
-
-	fflush_all();
+#define NOFORK_SUPPORT ((NUM_APPLETS > 1) && (ENABLE_FEATURE_PREFER_APPLETS || ENABLE_FEATURE_SH_NOFORK))
+#define NOEXEC_SUPPORT ((NUM_APPLETS > 1) && (ENABLE_FEATURE_PREFER_APPLETS || ENABLE_FEATURE_SH_STANDALONE))
 
-	/* Be nice to nommu machines. */
-	failed = 0;
-	pid = vfork();
-	if (pid < 0) /* error */
-		return pid;
-	if (!pid) { /* child */
-		/* This macro is ok - it doesn't do NOEXEC/NOFORK tricks */
-		BB_EXECVP(argv[0], argv);
-
-		/* We are (maybe) sharing a stack with blocked parent,
-		 * let parent know we failed and then exit to unblock parent
-		 * (but don't run atexit() stuff, which would screw up parent.)
-		 */
-		failed = errno;
-		/* mount, for example, does not want the message */
-		/*bb_perror_msg("can't execute '%s'", argv[0]);*/
-		_exit(111);
-	}
-	/* parent */
-	/* Unfortunately, this is not reliable: according to standards
-	 * vfork() can be equivalent to fork() and we won't see value
-	 * of 'failed'.
-	 * Interested party can wait on pid and learn exit code.
-	 * If 111 - then it (most probably) failed to exec */
-	if (failed) {
-		safe_waitpid(pid, NULL, 0); /* prevent zombie */
-		errno = failed;
-		return -1;
-	}
-	return pid;
-}
-
-/* Die with an error message if we can't spawn a child process. */
-pid_t FAST_FUNC xspawn(char **argv)
+#if defined(__linux__) && (NUM_APPLETS > 1)
+void FAST_FUNC set_task_comm(const char *comm)
 {
-	pid_t pid = spawn(argv);
-	if (pid < 0)
-		bb_simple_perror_msg_and_die(*argv);
-	return pid;
+	/* okay if too long (truncates) */
+	prctl(PR_SET_NAME, (long)comm, 0, 0, 0);
 }
+#endif
 
-#if ENABLE_FEATURE_PREFER_APPLETS \
- || ENABLE_FEATURE_SH_NOFORK
+/*
+ * NOFORK/NOEXEC support
+ */
+#if NOFORK_SUPPORT
 static jmp_buf die_jmp;
 static void jump(void)
 {
 	/* Special case. We arrive here if NOFORK applet
 	 * calls xfunc, which then decides to die.
-	 * We don't die, but jump instead back to caller.
+	 * We don't die, but instead jump back to caller.
 	 * NOFORK applets still cannot carelessly call xfuncs:
 	 * p = xmalloc(10);
 	 * q = xmalloc(10); // BUG! if this dies, we leak p!
 	 */
 	/* | 0x100 allows to pass zero exitcode (longjmp can't pass 0).
 	 * This works because exitcodes are bytes,
-	 * run_nofork_applet() ensures that by "& 0xff" */
+	 * run_nofork_applet() ensures that by "& 0xff"
+	 */
 	longjmp(die_jmp, xfunc_error_retval | 0x100);
 }
 
@@ -92,6 +62,7 @@ struct nofork_save_area {
 	void (*die_func)(void);
 	const char *applet_name;
 	uint32_t option_mask32;
+	smallint logmode;
 	uint8_t xfunc_error_retval;
 };
 static void save_nofork_data(struct nofork_save_area *save)
@@ -100,6 +71,7 @@ static void save_nofork_data(struct nofo
 	save->die_func = die_func;
 	save->applet_name = applet_name;
 	save->option_mask32 = option_mask32;
+	save->logmode = logmode;
 	save->xfunc_error_retval = xfunc_error_retval;
 }
 static void restore_nofork_data(struct nofork_save_area *save)
@@ -108,6 +80,7 @@ static void restore_nofork_data(struct n
 	die_func = save->die_func;
 	applet_name = save->applet_name;
 	option_mask32 = save->option_mask32;
+	logmode = save->logmode;
 	xfunc_error_retval = save->xfunc_error_retval;
 }
 
@@ -118,16 +91,15 @@ int FAST_FUNC run_nofork_applet(int appl
 
 	save_nofork_data(&old);
 
+	logmode = LOGMODE_STDIO;
 	xfunc_error_retval = EXIT_FAILURE;
-
-	/* In case getopt() or getopt32() was already called:
+	/* In case getopt() was already called:
 	 * reset the libc getopt() function, which keeps internal state.
+	 * (getopt32() does it itself, but getopt() doesn't (and can't))
 	 */
 	GETOPT_RESET();
 
-	argc = 1;
-	while (argv[argc])
-		argc++;
+	argc = string_array_len(argv);
 
 	/* If xfunc "dies" in NOFORK applet, die_func longjmp's here instead */
 	die_func = jump;
@@ -140,19 +112,95 @@ int FAST_FUNC run_nofork_applet(int appl
 		applet_name = tmp_argv[0];
 		/* Finally we can call NOFORK applet's main() */
 		rc = applet_main[applet_no](argc, tmp_argv);
+		/* Important for shells: `which CMD` was failing */
+		fflush_all();
 	} else {
 		/* xfunc died in NOFORK applet */
 	}
 
 	/* Restoring some globals */
 	restore_nofork_data(&old);
-
 	/* Other globals can be simply reset to defaults */
 	GETOPT_RESET();
 
 	return rc & 0xff; /* don't confuse people with "exitcodes" >255 */
 }
-#endif /* FEATURE_PREFER_APPLETS || FEATURE_SH_NOFORK */
+#endif
+
+#if NOEXEC_SUPPORT
+void FAST_FUNC run_noexec_applet_and_exit(int a, const char *name, char **argv)
+{
+	/* reset some state and run without execing */
+	/* msg_eol = "\n"; - no caller needs this reinited yet */
+	logmode = LOGMODE_STDIO;
+	xfunc_error_retval = EXIT_FAILURE;
+	die_func = NULL;
+	GETOPT_RESET();
+
+//TODO: think pidof, pgrep, pkill!
+//set_task_comm() makes our pidof find NOEXECs (e.g. "yes >/dev/null"),
+//but one from procps-ng-3.3.10 needs more!
+//Rewrite /proc/PID/cmdline? (need to save argv0 and length at init for this to work!)
+	set_task_comm(name);
+	/* applet_name is set by this function: */
+	run_applet_no_and_exit(a, name, argv);
+}
+#endif
+
+/*
+ * Higher-level code, hiding optional NOFORK/NOEXEC trickery.
+ */
+
+/* This does a fork/exec in one call, using vfork().  Returns PID of new child,
+ * -1 for failure.  Runs argv[0], searching path if that has no / in it. */
+pid_t FAST_FUNC spawn(char **argv)
+{
+	/* Compiler should not optimize stores here */
+	volatile int failed;
+	pid_t pid;
+
+	fflush_all();
+
+	/* Be nice to nommu machines. */
+	failed = 0;
+	pid = vfork();
+	if (pid < 0) /* error */
+		return pid;
+	if (!pid) { /* child */
+		/* This macro is ok - it doesn't do NOEXEC/NOFORK tricks */
+		BB_EXECVP(argv[0], argv);
+
+		/* We are (maybe) sharing a stack with blocked parent,
+		 * let parent know we failed and then exit to unblock parent
+		 * (but don't run atexit() stuff, which would screw up parent.)
+		 */
+		failed = errno;
+		/* mount, for example, does not want the message */
+		/*bb_perror_msg("can't execute '%s'", argv[0]);*/
+		_exit(111);
+	}
+	/* parent */
+	/* Unfortunately, this is not reliable: according to standards
+	 * vfork() can be equivalent to fork() and we won't see value
+	 * of 'failed'.
+	 * Interested party can wait on pid and learn exit code.
+	 * If 111 - then it (most probably) failed to exec */
+	if (failed) {
+		safe_waitpid(pid, NULL, 0); /* prevent zombie */
+		errno = failed;
+		return -1;
+	}
+	return pid;
+}
+
+/* Die with an error message if we can't spawn a child process. */
+pid_t FAST_FUNC xspawn(char **argv)
+{
+	pid_t pid = spawn(argv);
+	if (pid < 0)
+		bb_simple_perror_msg_and_die(*argv);
+	return pid;
+}
 
 int FAST_FUNC spawn_and_wait(char **argv)
 {
@@ -171,20 +219,11 @@ int FAST_FUNC spawn_and_wait(char **argv
 				return wait4pid(rc);
 
 			/* child */
-			/* reset some state and run without execing */
-
-			/* msg_eol = "\n"; - no caller needs this reinited yet */
-			logmode = LOGMODE_STDIO;
-			/* die_func = NULL; - needed if the caller is a shell,
-			 * init, or a NOFORK applet. But none of those call us
-			 * as of yet (and that should probably always stay true).
-			 */
-			/* xfunc_error_retval and applet_name are init by: */
-			run_applet_no_and_exit(a, argv[0], argv);
+			run_noexec_applet_and_exit(a, argv[0], argv);
 		}
 # endif
 	}
-#endif /* FEATURE_PREFER_APPLETS */
+#endif
 	rc = spawn(argv);
 	return wait4pid(rc);
 }
@@ -205,6 +244,9 @@ pid_t FAST_FUNC fork_or_rexec(char **arg
 	/* Maybe we are already re-execed and come here again? */
 	if (re_execed)
 		return 0;
+
+	/* fflush_all(); ? - so far all callers had no buffered output to flush */
+
 	pid = xvfork();
 	if (pid) /* parent */
 		return pid;
@@ -241,8 +283,11 @@ void FAST_FUNC bb_daemonize_or_rexec(int
 		fd = dup(fd); /* have 0,1,2 open at least to /dev/null */
 
 	if (!(flags & DAEMON_ONLY_SANITIZE)) {
+
+		/* fflush_all(); - add it in fork_or_rexec() if necessary */
+
 		if (fork_or_rexec(argv))
-			exit(EXIT_SUCCESS); /* parent */
+			_exit(EXIT_SUCCESS); /* parent */
 		/* if daemonizing, detach from stdio & ctty */
 		setsid();
 		dup2(fd, 0);
@@ -254,7 +299,7 @@ void FAST_FUNC bb_daemonize_or_rexec(int
 			 * Prevent this: stop being a session leader.
 			 */
 			if (fork_or_rexec(argv))
-				exit(EXIT_SUCCESS); /* parent */
+				_exit(EXIT_SUCCESS); /* parent */
 		}
 	}
 	while (fd > 2) {
diff -urpN busybox-1.27.2/libbb/wfopen.c busybox-1.28.0/libbb/wfopen.c
--- busybox-1.27.2/libbb/wfopen.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/wfopen.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 FILE* FAST_FUNC fopen_or_warn(const char *path, const char *mode)
diff -urpN busybox-1.27.2/libbb/wfopen_input.c busybox-1.28.0/libbb/wfopen_input.c
--- busybox-1.27.2/libbb/wfopen_input.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/wfopen_input.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,14 +6,13 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
+#include "libbb.h"
 
 /* A number of applets need to open a file for reading, where the filename
  * is a command line arg.  Since often that arg is '-' (meaning stdin),
  * we avoid testing everywhere by consolidating things in this routine.
  */
 
-#include "libbb.h"
-
 FILE* FAST_FUNC fopen_or_warn_stdin(const char *filename)
 {
 	FILE *fp = stdin;
diff -urpN busybox-1.27.2/libbb/write.c busybox-1.28.0/libbb/write.c
--- busybox-1.27.2/libbb/write.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/write.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* Open file and write string str to it, close file.
diff -urpN busybox-1.27.2/libbb/xatonum.c busybox-1.28.0/libbb/xatonum.c
--- busybox-1.27.2/libbb/xatonum.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/xatonum.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 #define type long long
diff -urpN busybox-1.27.2/libbb/xconnect.c busybox-1.28.0/libbb/xconnect.c
--- busybox-1.27.2/libbb/xconnect.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/xconnect.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include <sys/types.h>
 #include <sys/socket.h> /* netinet/in.h needs it */
 #include <netinet/in.h>
diff -urpN busybox-1.27.2/libbb/xfunc_die.c busybox-1.28.0/libbb/xfunc_die.c
--- busybox-1.27.2/libbb/xfunc_die.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/xfunc_die.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,12 +6,11 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
+#include "libbb.h"
 
 /* Keeping it separate allows to NOT pull in stdio for VERY small applets.
  * Try building busybox with only "true" enabled... */
 
-#include "libbb.h"
-
 void (*die_func)(void);
 
 void FAST_FUNC xfunc_die(void)
diff -urpN busybox-1.27.2/libbb/xfuncs.c busybox-1.28.0/libbb/xfuncs.c
--- busybox-1.27.2/libbb/xfuncs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/xfuncs.c	2017-12-04 16:07:47.000000000 +0100
@@ -8,7 +8,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 /* We need to have separate xfuncs.c and xfuncs_printf.c because
  * with current linkers, even with section garbage collection,
  * if *.o module references any of XXXprintf functions, you pull in
@@ -21,7 +20,6 @@
  *
  * TODO: move xmalloc() and xatonum() here.
  */
-
 #include "libbb.h"
 
 /* Turn on nonblocking I/O on a fd */
@@ -311,40 +309,74 @@ int FAST_FUNC tcsetattr_stdin_TCSANOW(co
 	return tcsetattr(STDIN_FILENO, TCSANOW, tp);
 }
 
-int FAST_FUNC set_termios_to_raw(int fd, struct termios *oldterm, int flags)
+int FAST_FUNC get_termios_and_make_raw(int fd, struct termios *newterm, struct termios *oldterm, int flags)
 {
-//TODO: lineedit, microcom and less might be adapted to use this too:
-// grep for "tcsetattr"
+//TODO: slattach, shell read might be adapted to use this too: grep for "tcsetattr", "[VTIME] = 0"
+	int r;
 
-	struct termios newterm;
-
-	tcgetattr(fd, oldterm);
-	newterm = *oldterm;
+	memset(oldterm, 0, sizeof(*oldterm)); /* paranoia */
+	r = tcgetattr(fd, oldterm);
+	*newterm = *oldterm;
 
 	/* Turn off buffered input (ICANON)
 	 * Turn off echoing (ECHO)
 	 * and separate echoing of newline (ECHONL, normally off anyway)
 	 */
-	newterm.c_lflag &= ~(ICANON | ECHO | ECHONL);
+	newterm->c_lflag &= ~(ICANON | ECHO | ECHONL);
 	if (flags & TERMIOS_CLEAR_ISIG) {
 		/* dont recognize INT/QUIT/SUSP chars */
-		newterm.c_lflag &= ~ISIG;
+		newterm->c_lflag &= ~ISIG;
 	}
 	/* reads will block only if < 1 char is available */
-	newterm.c_cc[VMIN] = 1;
+	newterm->c_cc[VMIN] = 1;
 	/* no timeout (reads block forever) */
-	newterm.c_cc[VTIME] = 0;
+	newterm->c_cc[VTIME] = 0;
 	if (flags & TERMIOS_RAW_CRNL) {
+/* IXON, IXOFF, and IXANY:
+ * IXOFF=1: sw flow control is enabled on input queue:
+ * tty transmits a STOP char when input queue is close to full
+ * and transmits a START char when input queue is nearly empty.
+ * IXON=1: sw flow control is enabled on output queue:
+ * tty will stop sending if STOP char is received,
+ * and resume sending if START is received, or if any char
+ * is received and IXANY=1.
+ */
+		/* IXON=0: XON/XOFF chars are treated as normal chars (why we do this?) */
 		/* dont convert CR to NL on input */
-		newterm.c_iflag &= ~(IXON | ICRNL);
-		/* dont convert NL to CR on output */
-		newterm.c_oflag &= ~(ONLCR);
+		newterm->c_iflag &= ~(IXON | ICRNL);
+		/* dont convert NL to CR+NL on output */
+		newterm->c_oflag &= ~(ONLCR);
+		/* Maybe clear more c_oflag bits? Usually, only OPOST and ONLCR are set.
+		 * OPOST  Enable output processing (reqd for OLCUC and *NL* bits to work)
+		 * OLCUC  Map lowercase characters to uppercase on output.
+		 * OCRNL  Map CR to NL on output.
+		 * ONOCR  Don't output CR at column 0.
+		 * ONLRET Don't output CR.
+		 */
 	}
 	if (flags & TERMIOS_RAW_INPUT) {
+#ifndef IMAXBEL
+# define IMAXBEL 0
+#endif
+#ifndef IUCLC
+# define IUCLC 0
+#endif
+#ifndef IXANY
+# define IXANY 0
+#endif
+		/* IXOFF=0: disable sending XON/XOFF if input buf is full */
+		/* IXON=0: input XON/XOFF chars are not special */
 		/* dont convert anything on input */
-		newterm.c_iflag &= ~(BRKINT|INLCR|ICRNL|IXON|IXOFF|IUCLC|IXANY|IMAXBEL);
+		newterm->c_iflag &= ~(IXOFF|IXON|IXANY|BRKINT|INLCR|ICRNL|IUCLC|IMAXBEL);
 	}
+	return r;
+}
+
+int FAST_FUNC set_termios_to_raw(int fd, struct termios *oldterm, int flags)
+{
+	struct termios newterm;
 
+	get_termios_and_make_raw(fd, &newterm, oldterm, flags);
 	return tcsetattr(fd, TCSANOW, &newterm);
 }
 
diff -urpN busybox-1.27.2/libbb/xfuncs_printf.c busybox-1.28.0/libbb/xfuncs_printf.c
--- busybox-1.27.2/libbb/xfuncs_printf.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/xfuncs_printf.c	2017-10-20 10:36:58.000000000 +0200
@@ -8,7 +8,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 /* We need to have separate xfuncs.c and xfuncs_printf.c because
  * with current linkers, even with section garbage collection,
  * if *.o module references any of XXXprintf functions, you pull in
@@ -19,7 +18,6 @@
  * which do not pull in printf, directly or indirectly.
  * xfunc_printf.c contains those which do.
  */
-
 #include "libbb.h"
 
 
@@ -344,20 +342,28 @@ void FAST_FUNC xsetenv(const char *key,
  */
 void FAST_FUNC bb_unsetenv(const char *var)
 {
-	char *tp = strchr(var, '=');
+	char onstack[128 - 16]; /* smaller stack setup code on x86 */
+	char *tp;
 
-	if (!tp) {
-		unsetenv(var);
-		return;
+	tp = strchr(var, '=');
+	if (tp) {
+		/* In case var was putenv'ed, we can't replace '='
+		 * with NUL and unsetenv(var) - it won't work,
+		 * env is modified by the replacement, unsetenv
+		 * sees "VAR" instead of "VAR=VAL" and does not remove it!
+		 * Horror :(
+		 */
+		unsigned sz = tp - var;
+		if (sz < sizeof(onstack)) {
+			((char*)mempcpy(onstack, var, sz))[0] = '\0';
+			tp = NULL;
+			var = onstack;
+		} else {
+			/* unlikely: very long var name */
+			var = tp = xstrndup(var, sz);
+		}
 	}
-
-	/* In case var was putenv'ed, we can't replace '='
-	 * with NUL and unsetenv(var) - it won't work,
-	 * env is modified by the replacement, unsetenv
-	 * sees "VAR" instead of "VAR=VAL" and does not remove it!
-	 * horror :( */
-	tp = xstrndup(var, tp - var);
-	unsetenv(tp);
+	unsetenv(var);
 	free(tp);
 }
 
diff -urpN busybox-1.27.2/libbb/xgetcwd.c busybox-1.28.0/libbb/xgetcwd.c
--- busybox-1.27.2/libbb/xgetcwd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/xgetcwd.c	2017-10-20 10:36:58.000000000 +0200
@@ -8,7 +8,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* Return the current directory, newly allocated, arbitrarily long.
diff -urpN busybox-1.27.2/libbb/xreadlink.c busybox-1.28.0/libbb/xreadlink.c
--- busybox-1.27.2/libbb/xreadlink.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/xreadlink.c	2017-10-20 10:36:58.000000000 +0200
@@ -5,7 +5,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* Some systems (eg Hurd) do not have MAXSYMLINKS definition,
diff -urpN busybox-1.27.2/libbb/xrealloc_vector.c busybox-1.28.0/libbb/xrealloc_vector.c
--- busybox-1.27.2/libbb/xrealloc_vector.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/xrealloc_vector.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 
 /* Resize (grow) malloced vector.
diff -urpN busybox-1.27.2/libbb/xregcomp.c busybox-1.28.0/libbb/xregcomp.c
--- busybox-1.27.2/libbb/xregcomp.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libbb/xregcomp.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,7 +7,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "xregex.h"
 
diff -urpN busybox-1.27.2/libpwdgrp/pwd_grp.c busybox-1.28.0/libpwdgrp/pwd_grp.c
--- busybox-1.27.2/libpwdgrp/pwd_grp.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libpwdgrp/pwd_grp.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,5 +1,6 @@
 /* vi: set sw=4 ts=4: */
-/* Copyright (C) 2014 Tito Ragusa <farmatito@tiscali.it>
+/*
+ * Copyright (C) 2014 Tito Ragusa <farmatito@tiscali.it>
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
@@ -28,7 +29,6 @@
  *    implemented, if you need a particular missing function it should be
  *    easy to write it by using the internal common code.
  */
-
 #include "libbb.h"
 
 struct const_passdb {
diff -urpN busybox-1.27.2/libpwdgrp/uidgid_get.c busybox-1.28.0/libpwdgrp/uidgid_get.c
--- busybox-1.27.2/libpwdgrp/uidgid_get.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/libpwdgrp/uidgid_get.c	2017-08-03 17:53:10.000000000 +0200
@@ -13,7 +13,7 @@ modification, are permitted provided tha
    3. The name of the author may not be used to endorse or promote products
       derived from this software without specific prior written permission.
 
-THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
+THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
 WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
diff -urpN busybox-1.27.2/loginutils/Config.src busybox-1.28.0/loginutils/Config.src
--- busybox-1.27.2/loginutils/Config.src	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/loginutils/Config.src	2017-07-24 18:57:09.000000000 +0200
@@ -9,87 +9,87 @@ config FEATURE_SHADOWPASSWDS
 	bool "Support shadow passwords"
 	default y
 	help
-	  Build support for shadow password in /etc/shadow. This file is only
-	  readable by root and thus the encrypted passwords are no longer
-	  publicly readable.
+	Build support for shadow password in /etc/shadow. This file is only
+	readable by root and thus the encrypted passwords are no longer
+	publicly readable.
 
 config USE_BB_PWD_GRP
 	bool "Use internal password and group functions rather than system functions"
 	default y
 	help
-	  If you leave this disabled, busybox will use the system's password
-	  and group functions. And if you are using the GNU C library
-	  (glibc), you will then need to install the /etc/nsswitch.conf
-	  configuration file and the required /lib/libnss_* libraries in
-	  order for the password and group functions to work. This generally
-	  makes your embedded system quite a bit larger.
-
-	  Enabling this option will cause busybox to directly access the
-	  system's /etc/password, /etc/group files (and your system will be
-	  smaller, and I will get fewer emails asking about how glibc NSS
-	  works). When this option is enabled, you will not be able to use
-	  PAM to access remote LDAP password servers and whatnot. And if you
-	  want hostname resolution to work with glibc, you still need the
-	  /lib/libnss_* libraries.
-
-	  If you need to use glibc's nsswitch.conf mechanism
-	  (e.g. if user/group database is NOT stored in /etc/passwd etc),
-	  you must NOT use this option.
+	If you leave this disabled, busybox will use the system's password
+	and group functions. And if you are using the GNU C library
+	(glibc), you will then need to install the /etc/nsswitch.conf
+	configuration file and the required /lib/libnss_* libraries in
+	order for the password and group functions to work. This generally
+	makes your embedded system quite a bit larger.
+
+	Enabling this option will cause busybox to directly access the
+	system's /etc/password, /etc/group files (and your system will be
+	smaller, and I will get fewer emails asking about how glibc NSS
+	works). When this option is enabled, you will not be able to use
+	PAM to access remote LDAP password servers and whatnot. And if you
+	want hostname resolution to work with glibc, you still need the
+	/lib/libnss_* libraries.
+
+	If you need to use glibc's nsswitch.conf mechanism
+	(e.g. if user/group database is NOT stored in /etc/passwd etc),
+	you must NOT use this option.
 
-	  If you enable this option, it will add about 1.5k.
+	If you enable this option, it will add about 1.5k.
 
 config USE_BB_SHADOW
 	bool "Use internal shadow password functions"
 	default y
 	depends on USE_BB_PWD_GRP && FEATURE_SHADOWPASSWDS
 	help
-	  If you leave this disabled, busybox will use the system's shadow
-	  password handling functions. And if you are using the GNU C library
-	  (glibc), you will then need to install the /etc/nsswitch.conf
-	  configuration file and the required /lib/libnss_* libraries in
-	  order for the shadow password functions to work. This generally
-	  makes your embedded system quite a bit larger.
-
-	  Enabling this option will cause busybox to directly access the
-	  system's /etc/shadow file when handling shadow passwords. This
-	  makes your system smaller (and I will get fewer emails asking about
-	  how glibc NSS works). When this option is enabled, you will not be
-	  able to use PAM to access shadow passwords from remote LDAP
-	  password servers and whatnot.
+	If you leave this disabled, busybox will use the system's shadow
+	password handling functions. And if you are using the GNU C library
+	(glibc), you will then need to install the /etc/nsswitch.conf
+	configuration file and the required /lib/libnss_* libraries in
+	order for the shadow password functions to work. This generally
+	makes your embedded system quite a bit larger.
+
+	Enabling this option will cause busybox to directly access the
+	system's /etc/shadow file when handling shadow passwords. This
+	makes your system smaller (and I will get fewer emails asking about
+	how glibc NSS works). When this option is enabled, you will not be
+	able to use PAM to access shadow passwords from remote LDAP
+	password servers and whatnot.
 
 config USE_BB_CRYPT
 	bool "Use internal crypt functions"
 	default y
 	help
-	  Busybox has internal DES and MD5 crypt functions.
-	  They produce results which are identical to corresponding
-	  standard C library functions.
-
-	  If you leave this disabled, busybox will use the system's
-	  crypt functions. Most C libraries use large (~70k)
-	  static buffers there, and also combine them with more general
-	  DES encryption/decryption.
-
-	  For busybox, having large static buffers is undesirable,
-	  especially on NOMMU machines. Busybox also doesn't need
-	  DES encryption/decryption and can do with smaller code.
-
-	  If you enable this option, it will add about 4.8k of code
-	  if you are building dynamically linked executable.
-	  In static build, it makes code _smaller_ by about 1.2k,
-	  and likely many kilobytes less of bss.
+	Busybox has internal DES and MD5 crypt functions.
+	They produce results which are identical to corresponding
+	standard C library functions.
+
+	If you leave this disabled, busybox will use the system's
+	crypt functions. Most C libraries use large (~70k)
+	static buffers there, and also combine them with more general
+	DES encryption/decryption.
+
+	For busybox, having large static buffers is undesirable,
+	especially on NOMMU machines. Busybox also doesn't need
+	DES encryption/decryption and can do with smaller code.
+
+	If you enable this option, it will add about 4.8k of code
+	if you are building dynamically linked executable.
+	In static build, it makes code _smaller_ by about 1.2k,
+	and likely many kilobytes less of bss.
 
 config USE_BB_CRYPT_SHA
 	bool "Enable SHA256/512 crypt functions"
 	default y
 	depends on USE_BB_CRYPT
 	help
-	  Enable this if you have passwords starting with "$5$" or "$6$"
-	  in your /etc/passwd or /etc/shadow files. These passwords
-	  are hashed using SHA256 and SHA512 algorithms. Support for them
-	  was added to glibc in 2008.
-	  With this option off, login will fail password check for any
-	  user which has password encrypted with these algorithms.
+	Enable this if you have passwords starting with "$5$" or "$6$"
+	in your /etc/passwd or /etc/shadow files. These passwords
+	are hashed using SHA256 and SHA512 algorithms. Support for them
+	was added to glibc in 2008.
+	With this option off, login will fail password check for any
+	user which has password encrypted with these algorithms.
 
 INSERT
 
diff -urpN busybox-1.27.2/loginutils/add-remove-shell.c busybox-1.28.0/loginutils/add-remove-shell.c
--- busybox-1.27.2/loginutils/add-remove-shell.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/loginutils/add-remove-shell.c	2017-08-08 14:08:06.000000000 +0200
@@ -8,20 +8,20 @@
  * for details.
  */
 //config:config ADD_SHELL
-//config:       bool "add-shell"
-//config:       default y if DESKTOP
-//config:       help
-//config:         Add shells to /etc/shells.
+//config:	bool "add-shell (2.8 kb)"
+//config:	default y if DESKTOP
+//config:	help
+//config:	Add shells to /etc/shells.
 //config:
 //config:config REMOVE_SHELL
-//config:       bool "remove-shell"
-//config:       default y if DESKTOP
-//config:       help
-//config:         Remove shells from /etc/shells.
-
-//                       APPLET_ODDNAME:name          main              location         suid_type     help
-//applet:IF_ADD_SHELL(   APPLET_ODDNAME(add-shell   , add_remove_shell, BB_DIR_USR_SBIN, BB_SUID_DROP, add_shell   ))
-//applet:IF_REMOVE_SHELL(APPLET_ODDNAME(remove-shell, add_remove_shell, BB_DIR_USR_SBIN, BB_SUID_DROP, remove_shell))
+//config:	bool "remove-shell (2.7 kb)"
+//config:	default y if DESKTOP
+//config:	help
+//config:	Remove shells from /etc/shells.
+
+//                       APPLET_NOEXEC:name          main              location         suid_type     help
+//applet:IF_ADD_SHELL(   APPLET_NOEXEC(add-shell   , add_remove_shell, BB_DIR_USR_SBIN, BB_SUID_DROP, add_shell   ))
+//applet:IF_REMOVE_SHELL(APPLET_NOEXEC(remove-shell, add_remove_shell, BB_DIR_USR_SBIN, BB_SUID_DROP, remove_shell))
 
 //kbuild:lib-$(CONFIG_ADD_SHELL)    += add-remove-shell.o
 //kbuild:lib-$(CONFIG_REMOVE_SHELL) += add-remove-shell.o
@@ -64,6 +64,7 @@ int add_remove_shell_main(int argc UNUSE
 	if (orig_fp)
 		xfstat(fileno(orig_fp), &sb, orig_fn);
 
+
 	new_fn = xasprintf("%s.tmp", orig_fn);
 	/*
 	 * O_TRUNC or O_EXCL? At the first glance, O_EXCL looks better,
@@ -84,7 +85,7 @@ int add_remove_shell_main(int argc UNUSE
 		while ((line = xmalloc_fgetline(orig_fp)) != NULL) {
 			char **cpp = argv;
 			while (*cpp) {
-				if (strcmp(*cpp, line) == 0) {
+				if (*cpp != dont_add && strcmp(*cpp, line) == 0) {
 					/* Old file has this shell name */
 					if (REMOVE_SHELL) {
 						/* we are remove-shell */
diff -urpN busybox-1.27.2/loginutils/addgroup.c busybox-1.28.0/loginutils/addgroup.c
--- busybox-1.27.2/loginutils/addgroup.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/loginutils/addgroup.c	2018-01-01 20:40:41.000000000 +0100
@@ -7,29 +7,24 @@
  * Copyright (C) 2007 by Tito Ragusa <farmatito@tiscali.it>
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
- *
  */
 //config:config ADDGROUP
-//config:	bool "addgroup"
+//config:	bool "addgroup (8.2 kb)"
 //config:	default y
+//config:	select LONG_OPTS
 //config:	help
-//config:	  Utility for creating a new group account.
-//config:
-//config:config FEATURE_ADDGROUP_LONG_OPTIONS
-//config:	bool "Enable long options"
-//config:	default y
-//config:	depends on ADDGROUP && LONG_OPTS
+//config:	Utility for creating a new group account.
 //config:
 //config:config FEATURE_ADDUSER_TO_GROUP
 //config:	bool "Support adding users to groups"
 //config:	default y
 //config:	depends on ADDGROUP
 //config:	help
-//config:	  If called with two non-option arguments,
-//config:	  addgroup will add an existing user to an
-//config:	  existing group.
+//config:	If called with two non-option arguments,
+//config:	addgroup will add an existing user to an
+//config:	existing group.
 
-//applet:IF_ADDGROUP(APPLET(addgroup, BB_DIR_USR_SBIN, BB_SUID_DROP))
+//applet:IF_ADDGROUP(APPLET_NOEXEC(addgroup, addgroup, BB_DIR_USR_SBIN, BB_SUID_DROP, addgroup))
 
 //kbuild:lib-$(CONFIG_ADDGROUP) += addgroup.o
 
@@ -131,12 +126,11 @@ static void new_group(char *group, gid_t
 #endif
 }
 
-#if ENABLE_FEATURE_ADDGROUP_LONG_OPTIONS
+//FIXME: upstream addgroup has no short options! NOT COMPATIBLE!
 static const char addgroup_longopts[] ALIGN1 =
 		"gid\0"                 Required_argument "g"
 		"system\0"              No_argument       "S"
 		;
-#endif
 
 /*
  * addgroup will take a login_name as its first parameter.
@@ -148,23 +142,26 @@ static const char addgroup_longopts[] AL
 int addgroup_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int addgroup_main(int argc UNUSED_PARAM, char **argv)
 {
+#if ENABLE_FEATURE_ADDUSER_TO_GROUP
 	unsigned opts;
+#endif
 	const char *gid = "0";
 
 	/* need to be root */
 	if (geteuid()) {
 		bb_error_msg_and_die(bb_msg_perm_denied_are_you_root);
 	}
-#if ENABLE_FEATURE_ADDGROUP_LONG_OPTIONS
-	applet_long_options = addgroup_longopts;
-#endif
 	/* Syntax:
 	 *  addgroup group
-	 *  addgroup -g num group
+	 *  addgroup --gid num group
 	 *  addgroup user group
 	 * Check for min, max and missing args */
-	opt_complementary = "-1:?2";
-	opts = getopt32(argv, "g:S", &gid);
+#if ENABLE_FEATURE_ADDUSER_TO_GROUP
+	opts =
+#endif
+	getopt32long(argv, "^" "g:S" "\0" "-1:?2", addgroup_longopts,
+				&gid
+	);
 	/* move past the commandline options */
 	argv += optind;
 	//argc -= optind;
diff -urpN busybox-1.27.2/loginutils/adduser.c busybox-1.28.0/loginutils/adduser.c
--- busybox-1.27.2/loginutils/adduser.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/loginutils/adduser.c	2017-08-17 13:50:45.000000000 +0200
@@ -8,34 +8,30 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config ADDUSER
-//config:	bool "adduser"
+//config:	bool "adduser (15 kb)"
 //config:	default y
+//config:	select LONG_OPTS
 //config:	help
-//config:	  Utility for creating a new user account.
-//config:
-//config:config FEATURE_ADDUSER_LONG_OPTIONS
-//config:	bool "Enable long options"
-//config:	default y
-//config:	depends on ADDUSER && LONG_OPTS
+//config:	Utility for creating a new user account.
 //config:
 //config:config FEATURE_CHECK_NAMES
 //config:	bool "Enable sanity check on user/group names in adduser and addgroup"
 //config:	default n
 //config:	depends on ADDUSER || ADDGROUP
 //config:	help
-//config:	  Enable sanity check on user and group names in adduser and addgroup.
-//config:	  To avoid problems, the user or group name should consist only of
-//config:	  letters, digits, underscores, periods, at signs and dashes,
-//config:	  and not start with a dash (as defined by IEEE Std 1003.1-2001).
-//config:	  For compatibility with Samba machine accounts "$" is also supported
-//config:	  at the end of the user or group name.
+//config:	Enable sanity check on user and group names in adduser and addgroup.
+//config:	To avoid problems, the user or group name should consist only of
+//config:	letters, digits, underscores, periods, at signs and dashes,
+//config:	and not start with a dash (as defined by IEEE Std 1003.1-2001).
+//config:	For compatibility with Samba machine accounts "$" is also supported
+//config:	at the end of the user or group name.
 //config:
 //config:config LAST_ID
 //config:	int "Last valid uid or gid for adduser and addgroup"
 //config:	depends on ADDUSER || ADDGROUP
 //config:	default 60000
 //config:	help
-//config:	  Last valid uid or gid for adduser and addgroup
+//config:	Last valid uid or gid for adduser and addgroup
 //config:
 //config:config FIRST_SYSTEM_ID
 //config:	int "First valid system uid or gid for adduser and addgroup"
@@ -43,7 +39,7 @@
 //config:	range 0 LAST_ID
 //config:	default 100
 //config:	help
-//config:	  First valid system uid or gid for adduser and addgroup
+//config:	First valid system uid or gid for adduser and addgroup
 //config:
 //config:config LAST_SYSTEM_ID
 //config:	int "Last valid system uid or gid for adduser and addgroup"
@@ -51,9 +47,9 @@
 //config:	range FIRST_SYSTEM_ID LAST_ID
 //config:	default 999
 //config:	help
-//config:	  Last valid system uid or gid for adduser and addgroup
+//config:	Last valid system uid or gid for adduser and addgroup
 
-//applet:IF_ADDUSER(APPLET(adduser, BB_DIR_USR_SBIN, BB_SUID_DROP))
+//applet:IF_ADDUSER(APPLET_NOEXEC(adduser, adduser, BB_DIR_USR_SBIN, BB_SUID_DROP, adduser))
 
 //kbuild:lib-$(CONFIG_ADDUSER) += adduser.o
 
@@ -148,15 +144,7 @@ static int addgroup_wrapper(struct passw
 		/* Add user to his own group with the first free gid
 		 * found in passwd_study.
 		 */
-#if ENABLE_FEATURE_ADDGROUP_LONG_OPTIONS || !ENABLE_ADDGROUP
-		/* We try to use --gid, not -g, because "standard" addgroup
-		 * has no short option -g, it has only long --gid.
-		 */
 		argv[1] = (char*)"--gid";
-#else
-		/* Breaks if system in fact does NOT use busybox addgroup */
-		argv[1] = (char*)"-g";
-#endif
 		argv[2] = utoa(p->pw_gid);
 		argv[3] = (char*)"--";
 		argv[4] = p->pw_name;
@@ -174,7 +162,7 @@ static void passwd_wrapper(const char *l
 	bb_error_msg_and_die("can't execute passwd, you must set password manually");
 }
 
-#if ENABLE_FEATURE_ADDUSER_LONG_OPTIONS
+//FIXME: upstream adduser has no short options! NOT COMPATIBLE!
 static const char adduser_longopts[] ALIGN1 =
 		"home\0"                Required_argument "h"
 		"gecos\0"               Required_argument "g"
@@ -187,7 +175,6 @@ static const char adduser_longopts[] ALI
 		"uid\0"                 Required_argument "u"
 		"skel\0"                Required_argument "k"
 		;
-#endif
 
 /*
  * adduser will take a login_name as its first parameter.
@@ -204,10 +191,6 @@ int adduser_main(int argc UNUSED_PARAM,
 	char *uid;
 	const char *skel = "/etc/skel";
 
-#if ENABLE_FEATURE_ADDUSER_LONG_OPTIONS
-	applet_long_options = adduser_longopts;
-#endif
-
 	/* got root? */
 	if (geteuid()) {
 		bb_error_msg_and_die(bb_msg_perm_denied_are_you_root);
@@ -218,10 +201,15 @@ int adduser_main(int argc UNUSED_PARAM,
 	pw.pw_shell = (char *)get_shell_name();
 	pw.pw_dir = NULL;
 
-	/* at least one and at most two non-option args */
-	/* disable interactive passwd for system accounts */
-	opt_complementary = "-1:?2:SD";
-	opts = getopt32(argv, "h:g:s:G:DSHu:k:", &pw.pw_dir, &pw.pw_gecos, &pw.pw_shell, &usegroup, &uid, &skel);
+	opts = getopt32long(argv, "^"
+			"h:g:s:G:DSHu:k:"
+			/* at least one and at most two non-option args */
+			/* disable interactive passwd for system accounts */
+			"\0" "-1:?2:SD",
+			adduser_longopts,
+			&pw.pw_dir, &pw.pw_gecos, &pw.pw_shell,
+			&usegroup, &uid, &skel
+	);
 	if (opts & OPT_UID)
 		pw.pw_uid = xatou_range(uid, 0, CONFIG_LAST_ID);
 
diff -urpN busybox-1.27.2/loginutils/chpasswd.c busybox-1.28.0/loginutils/chpasswd.c
--- busybox-1.27.2/loginutils/chpasswd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/loginutils/chpasswd.c	2017-08-17 13:50:45.000000000 +0200
@@ -6,18 +6,18 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config CHPASSWD
-//config:	bool "chpasswd"
+//config:	bool "chpasswd (18 kb)"
 //config:	default y
 //config:	help
-//config:	  Reads a file of user name and password pairs from standard input
-//config:	  and uses this information to update a group of existing users.
+//config:	Reads a file of user name and password pairs from standard input
+//config:	and uses this information to update a group of existing users.
 //config:
 //config:config FEATURE_DEFAULT_PASSWD_ALGO
 //config:	string "Default encryption method (passwd -a, cryptpw -m, chpasswd -c ALG)"
 //config:	default "des"
 //config:	depends on PASSWD || CRYPTPW || CHPASSWD
 //config:	help
-//config:	  Possible choices are "d[es]", "m[d5]", "s[ha256]" or "sha512".
+//config:	Possible choices are "d[es]", "m[d5]", "s[ha256]" or "sha512".
 
 //applet:IF_CHPASSWD(APPLET(chpasswd, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -61,9 +61,10 @@ int chpasswd_main(int argc UNUSED_PARAM,
 	if (getuid() != 0)
 		bb_error_msg_and_die(bb_msg_perm_denied_are_you_root);
 
-	opt_complementary = "m--ec:e--mc:c--em";
-	IF_LONG_OPTS(applet_long_options = chpasswd_longopts;)
-	opt = getopt32(argv, "emc:", &algo);
+	opt = getopt32long(argv, "^" "emc:" "\0" "m--ec:e--mc:c--em",
+			chpasswd_longopts,
+			&algo
+	);
 
 	while ((name = xmalloc_fgetline(stdin)) != NULL) {
 		char *free_me;
diff -urpN busybox-1.27.2/loginutils/cryptpw.c busybox-1.28.0/loginutils/cryptpw.c
--- busybox-1.27.2/loginutils/cryptpw.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/loginutils/cryptpw.c	2017-08-17 13:50:45.000000000 +0200
@@ -10,23 +10,23 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config CRYPTPW
-//config:	bool "cryptpw"
+//config:	bool "cryptpw (14 kb)"
 //config:	default y
 //config:	help
-//config:	  Encrypts the given password with the crypt(3) libc function
-//config:	  using the given salt.
+//config:	Encrypts the given password with the crypt(3) libc function
+//config:	using the given salt.
 //config:
 //config:config MKPASSWD
-//config:	bool "mkpasswd"
+//config:	bool "mkpasswd (15 kb)"
 //config:	default y
 //config:	help
-//config:	  Encrypts the given password with the crypt(3) libc function
-//config:	  using the given salt. Debian has this utility under mkpasswd
-//config:	  name. Busybox provides mkpasswd as an alias for cryptpw.
-
-//applet:IF_CRYPTPW(APPLET(cryptpw, BB_DIR_USR_BIN, BB_SUID_DROP))
-//                   APPLET_ODDNAME:name      main     location        suid_type     help
-//applet:IF_MKPASSWD(APPLET_ODDNAME(mkpasswd, cryptpw, BB_DIR_USR_BIN, BB_SUID_DROP, cryptpw))
+//config:	Encrypts the given password with the crypt(3) libc function
+//config:	using the given salt. Debian has this utility under mkpasswd
+//config:	name. Busybox provides mkpasswd as an alias for cryptpw.
+
+//applet:IF_CRYPTPW( APPLET_NOEXEC(cryptpw,  cryptpw, BB_DIR_USR_BIN, BB_SUID_DROP, cryptpw))
+//                   APPLET_NOEXEC:name      main     location        suid_type     help
+//applet:IF_MKPASSWD(APPLET_NOEXEC(mkpasswd, cryptpw, BB_DIR_USR_BIN, BB_SUID_DROP, cryptpw))
 
 //kbuild:lib-$(CONFIG_CRYPTPW) += cryptpw.o
 //kbuild:lib-$(CONFIG_MKPASSWD) += cryptpw.o
@@ -106,14 +106,15 @@ int cryptpw_main(int argc UNUSED_PARAM,
 		"salt\0"        Required_argument "S"
 		"method\0"      Required_argument "m"
 	;
-	applet_long_options = mkpasswd_longopts;
 #endif
 	fd = STDIN_FILENO;
 	opt_m = CONFIG_FEATURE_DEFAULT_PASSWD_ALGO;
 	opt_S = NULL;
 	/* at most two non-option arguments; -P NUM */
-	opt_complementary = "?2";
-	getopt32(argv, "sP:+S:m:a:", &fd, &opt_S, &opt_m, &opt_m);
+	getopt32long(argv, "^" "sP:+S:m:a:" "\0" "?2",
+			mkpasswd_longopts,
+			&fd, &opt_S, &opt_m, &opt_m
+	);
 	argv += optind;
 
 	/* have no idea how to handle -s... */
diff -urpN busybox-1.27.2/loginutils/deluser.c busybox-1.28.0/loginutils/deluser.c
--- busybox-1.27.2/loginutils/deluser.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/loginutils/deluser.c	2017-08-17 13:50:45.000000000 +0200
@@ -9,27 +9,28 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config DELUSER
-//config:	bool "deluser"
+//config:	bool "deluser (8.4 kb)"
 //config:	default y
 //config:	help
-//config:	  Utility for deleting a user account.
+//config:	Utility for deleting a user account.
 //config:
 //config:config DELGROUP
-//config:	bool "delgroup"
+//config:	bool "delgroup (5.6 kb)"
 //config:	default y
 //config:	help
-//config:	  Utility for deleting a group account.
+//config:	Utility for deleting a group account.
 //config:
 //config:config FEATURE_DEL_USER_FROM_GROUP
 //config:	bool "Support removing users from groups"
 //config:	default y
 //config:	depends on DELGROUP
 //config:	help
-//config:	  If called with two non-option arguments, deluser
-//config:	  or delgroup will remove an user from a specified group.
+//config:	If called with two non-option arguments, deluser
+//config:	or delgroup will remove an user from a specified group.
 
-//applet:IF_DELUSER(APPLET(deluser, BB_DIR_USR_SBIN, BB_SUID_DROP))
-//applet:IF_DELGROUP(APPLET_ODDNAME(delgroup, deluser, BB_DIR_USR_SBIN, BB_SUID_DROP, delgroup))
+//                   APPLET_NOEXEC:name      main     location         suid_type     help
+//applet:IF_DELUSER( APPLET_NOEXEC(deluser,  deluser, BB_DIR_USR_SBIN, BB_SUID_DROP, deluser))
+//applet:IF_DELGROUP(APPLET_NOEXEC(delgroup, deluser, BB_DIR_USR_SBIN, BB_SUID_DROP, delgroup))
 
 //kbuild:lib-$(CONFIG_DELUSER) += deluser.o
 //kbuild:lib-$(CONFIG_DELGROUP) += deluser.o
@@ -67,9 +68,8 @@ int deluser_main(int argc, char **argv)
 #else
 	int opt_delhome = 0;
 	if (do_deluser) {
-		applet_long_options =
-			"remove-home\0" No_argument "\xff";
-		opt_delhome = getopt32(argv, "");
+		opt_delhome = getopt32long(argv, "",
+				"remove-home\0" No_argument "\xff");
 		argv += opt_delhome;
 		argc -= opt_delhome;
 	}
diff -urpN busybox-1.27.2/loginutils/getty.c busybox-1.28.0/loginutils/getty.c
--- busybox-1.27.2/loginutils/getty.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/loginutils/getty.c	2017-08-17 13:50:45.000000000 +0200
@@ -22,23 +22,23 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config GETTY
-//config:	bool "getty"
+//config:	bool "getty (10 kb)"
 //config:	default y
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	  getty lets you log in on a tty. It is normally invoked by init.
+//config:	getty lets you log in on a tty. It is normally invoked by init.
 //config:
-//config:	  Note that you can save a few bytes by disabling it and
-//config:	  using login applet directly.
-//config:	  If you need to reset tty attributes before calling login,
-//config:	  this script approximates getty:
+//config:	Note that you can save a few bytes by disabling it and
+//config:	using login applet directly.
+//config:	If you need to reset tty attributes before calling login,
+//config:	this script approximates getty:
 //config:
-//config:	  exec </dev/$1 >/dev/$1 2>&1 || exit 1
-//config:	  reset
-//config:	  stty sane; stty ispeed 38400; stty ospeed 38400
-//config:	  printf "%s login: " "`hostname`"
-//config:	  read -r login
-//config:	  exec /bin/login "$login"
+//config:	exec </dev/$1 >/dev/$1 2>&1 || exit 1
+//config:	reset
+//config:	stty sane; stty ispeed 38400; stty ospeed 38400
+//config:	printf "%s login: " "`hostname`"
+//config:	read -r login
+//config:	exec /bin/login "$login"
 
 //applet:IF_GETTY(APPLET(getty, BB_DIR_SBIN, BB_SUID_DROP))
 
@@ -131,7 +131,7 @@ struct globals {
 //usage:     "\n"
 //usage:     "\nBAUD_RATE of 0 leaves it unchanged"
 
-static const char opt_string[] ALIGN1 = "I:LH:f:hil:mt:+wn";
+#define OPT_STR "I:LH:f:hil:mt:+wn"
 #define F_INITSTRING    (1 << 0)   /* -I */
 #define F_LOCAL         (1 << 1)   /* -L */
 #define F_FAKEHOST      (1 << 2)   /* -H */
@@ -179,8 +179,7 @@ static void parse_args(char **argv)
 	char *ts;
 	int flags;
 
-	opt_complementary = "-2"; /* at least 2 args; -t N */
-	flags = getopt32(argv, opt_string,
+	flags = getopt32(argv, "^" OPT_STR "\0" "-2"/* at least 2 args*/,
 		&G.initstring, &G.fakehost, &G.issue,
 		&G.login, &G.timeout
 	);
diff -urpN busybox-1.27.2/loginutils/login.c busybox-1.28.0/loginutils/login.c
--- busybox-1.27.2/loginutils/login.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/loginutils/login.c	2017-08-08 14:08:06.000000000 +0200
@@ -3,50 +3,50 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config LOGIN
-//config:	bool "login"
+//config:	bool "login (24 kb)"
 //config:	default y
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	  login is used when signing onto a system.
+//config:	login is used when signing onto a system.
 //config:
-//config:	  Note that Busybox binary must be setuid root for this applet to
-//config:	  work properly.
+//config:	Note that busybox binary must be setuid root for this applet to
+//config:	work properly.
 //config:
 //config:config LOGIN_SESSION_AS_CHILD
 //config:	bool "Run logged in session in a child process"
 //config:	default y if PAM
 //config:	depends on LOGIN
 //config:	help
-//config:	  Run the logged in session in a child process.  This allows
-//config:	  login to clean up things such as utmp entries or PAM sessions
-//config:	  when the login session is complete.  If you use PAM, you
-//config:	  almost always would want this to be set to Y, else PAM session
-//config:	  will not be cleaned up.
+//config:	Run the logged in session in a child process.  This allows
+//config:	login to clean up things such as utmp entries or PAM sessions
+//config:	when the login session is complete.  If you use PAM, you
+//config:	almost always would want this to be set to Y, else PAM session
+//config:	will not be cleaned up.
 //config:
 //config:config LOGIN_SCRIPTS
 //config:	bool "Support login scripts"
 //config:	depends on LOGIN
 //config:	default y
 //config:	help
-//config:	  Enable this if you want login to execute $LOGIN_PRE_SUID_SCRIPT
-//config:	  just prior to switching from root to logged-in user.
+//config:	Enable this if you want login to execute $LOGIN_PRE_SUID_SCRIPT
+//config:	just prior to switching from root to logged-in user.
 //config:
 //config:config FEATURE_NOLOGIN
 //config:	bool "Support /etc/nologin"
 //config:	default y
 //config:	depends on LOGIN
 //config:	help
-//config:	  The file /etc/nologin is used by (some versions of) login(1).
-//config:	  If it exists, non-root logins are prohibited.
+//config:	The file /etc/nologin is used by (some versions of) login(1).
+//config:	If it exists, non-root logins are prohibited.
 //config:
 //config:config FEATURE_SECURETTY
 //config:	bool "Support /etc/securetty"
 //config:	default y
 //config:	depends on LOGIN
 //config:	help
-//config:	  The file /etc/securetty is used by (some versions of) login(1).
-//config:	  The file contains the device names of tty lines (one per line,
-//config:	  without leading /dev/) on which root is allowed to login.
+//config:	The file /etc/securetty is used by (some versions of) login(1).
+//config:	The file contains the device names of tty lines (one per line,
+//config:	without leading /dev/) on which root is allowed to login.
 
 //applet:/* Needs to be run by root or be suid root - needs to change uid and gid: */
 //applet:IF_LOGIN(APPLET(login, BB_DIR_BIN, BB_SUID_REQUIRE))
@@ -350,8 +350,8 @@ int login_main(int argc UNUSED_PARAM, ch
 	/* Mandatory paranoia for suid applet:
 	 * ensure that fd# 0,1,2 are opened (at least to /dev/null)
 	 * and any extra open fd's are closed.
-	 * (The name of the function is misleading. Not daemonizing here.) */
-	bb_daemonize_or_rexec(DAEMON_ONLY_SANITIZE | DAEMON_CLOSE_EXTRA_FDS, NULL);
+	 */
+	bb_daemon_helper(DAEMON_CLOSE_EXTRA_FDS);
 
 	username[0] = '\0';
 	opt = getopt32(argv, "f:h:p", &opt_user, &opt_host);
diff -urpN busybox-1.27.2/loginutils/passwd.c busybox-1.28.0/loginutils/passwd.c
--- busybox-1.27.2/loginutils/passwd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/loginutils/passwd.c	2017-07-29 23:01:53.000000000 +0200
@@ -3,24 +3,24 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config PASSWD
-//config:	bool "passwd"
+//config:	bool "passwd (21 kb)"
 //config:	default y
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	  passwd changes passwords for user and group accounts. A normal user
-//config:	  may only change the password for his/her own account, the super user
-//config:	  may change the password for any account. The administrator of a group
-//config:	  may change the password for the group.
+//config:	passwd changes passwords for user and group accounts. A normal user
+//config:	may only change the password for his/her own account, the super user
+//config:	may change the password for any account. The administrator of a group
+//config:	may change the password for the group.
 //config:
-//config:	  Note that Busybox binary must be setuid root for this applet to
-//config:	  work properly.
+//config:	Note that busybox binary must be setuid root for this applet to
+//config:	work properly.
 //config:
 //config:config FEATURE_PASSWD_WEAK_CHECK
 //config:	bool "Check new passwords for weakness"
 //config:	default y
 //config:	depends on PASSWD
 //config:	help
-//config:	  With this option passwd will refuse new passwords which are "weak".
+//config:	With this option passwd will refuse new passwords which are "weak".
 
 //applet:/* Needs to be run by root or be suid root - needs to change /etc/{passwd,shadow}: */
 //applet:IF_PASSWD(APPLET(passwd, BB_DIR_USR_BIN, BB_SUID_REQUIRE))
diff -urpN busybox-1.27.2/loginutils/su.c busybox-1.28.0/loginutils/su.c
--- busybox-1.27.2/loginutils/su.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/loginutils/su.c	2017-07-24 18:57:09.000000000 +0200
@@ -5,14 +5,14 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config SU
-//config:	bool "su"
+//config:	bool "su (19 kb)"
 //config:	default y
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	  su is used to become another user during a login session.
-//config:	  Invoked without a username, su defaults to becoming the super user.
-//config:	  Note that busybox binary must be setuid root for this applet to
-//config:	  work properly.
+//config:	su is used to become another user during a login session.
+//config:	Invoked without a username, su defaults to becoming the super user.
+//config:	Note that busybox binary must be setuid root for this applet to
+//config:	work properly.
 //config:
 //config:config FEATURE_SU_SYSLOG
 //config:	bool "Log to syslog all attempts to use su"
diff -urpN busybox-1.27.2/loginutils/sulogin.c busybox-1.28.0/loginutils/sulogin.c
--- busybox-1.27.2/loginutils/sulogin.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/loginutils/sulogin.c	2017-08-08 14:08:06.000000000 +0200
@@ -5,14 +5,14 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config SULOGIN
-//config:	bool "sulogin"
+//config:	bool "sulogin (17 kb)"
 //config:	default y
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	  sulogin is invoked when the system goes into single user
-//config:	  mode (this is done through an entry in inittab).
+//config:	sulogin is invoked when the system goes into single user
+//config:	mode (this is done through an entry in inittab).
 
-//applet:IF_SULOGIN(APPLET(sulogin, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_SULOGIN(APPLET_NOEXEC(sulogin, sulogin, BB_DIR_SBIN, BB_SUID_DROP, sulogin))
 
 //kbuild:lib-$(CONFIG_SULOGIN) += sulogin.o
 
@@ -34,7 +34,7 @@ int sulogin_main(int argc UNUSED_PARAM,
 
 	/* Note: sulogin is not a suid app. It is meant to be run by init
 	 * for single user / emergency mode. init starts it as root.
-	 * Normal users (potentially malisious ones) can only run it under
+	 * Normal users (potentially malicious ones) can only run it under
 	 * their UID, therefore no paranoia here is warranted:
 	 * $LD_LIBRARY_PATH in env, TTY = /dev/sda
 	 * are no more dangerous here than in e.g. cp applet.
diff -urpN busybox-1.27.2/loginutils/vlock.c busybox-1.28.0/loginutils/vlock.c
--- busybox-1.27.2/loginutils/vlock.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/loginutils/vlock.c	2017-08-17 13:50:45.000000000 +0200
@@ -16,13 +16,13 @@
  * It now works with md5, sha1, etc passwords.
  */
 //config:config VLOCK
-//config:	bool "vlock"
+//config:	bool "vlock (17 kb)"
 //config:	default y
 //config:	help
-//config:	  Build the "vlock" applet which allows you to lock (virtual) terminals.
+//config:	Build the "vlock" applet which allows you to lock (virtual) terminals.
 //config:
-//config:	  Note that Busybox binary must be setuid root for this applet to
-//config:	  work properly.
+//config:	Note that busybox binary must be setuid root for this applet to
+//config:	work properly.
 
 //applet:/* Needs to be run by root or be suid root - needs to change uid and gid: */
 //applet:IF_VLOCK(APPLET(vlock, BB_DIR_USR_BIN, BB_SUID_REQUIRE))
@@ -66,8 +66,7 @@ int vlock_main(int argc UNUSED_PARAM, ch
 	struct passwd *pw;
 
 	pw = xgetpwuid(getuid());
-	opt_complementary = "=0"; /* no params! */
-	getopt32(argv, "a");
+	getopt32(argv, "^" "a" "\0" "=0"/* no args!*/);
 
 	/* Ignore some signals so that we don't get killed by them */
 	bb_signals(0
diff -urpN busybox-1.27.2/mailutils/Config.src busybox-1.28.0/mailutils/Config.src
--- busybox-1.27.2/mailutils/Config.src	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/mailutils/Config.src	2017-07-24 18:57:09.000000000 +0200
@@ -7,6 +7,6 @@ config FEATURE_MIME_CHARSET
 	default "us-ascii"
 	depends on MAKEMIME || REFORMIME || SENDMAIL
 	help
-	  Default charset of the message.
+	Default charset of the message.
 
 endmenu
diff -urpN busybox-1.27.2/mailutils/mail.c busybox-1.28.0/mailutils/mail.c
--- busybox-1.27.2/mailutils/mail.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/mailutils/mail.c	2017-08-17 13:50:45.000000000 +0200
@@ -6,23 +6,15 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
+#include <sys/prctl.h>
 #include "libbb.h"
 #include "mail.h"
 
-static void kill_helper(void)
-{
-	if (G.helper_pid > 0) {
-		kill(G.helper_pid, SIGTERM);
-		G.helper_pid = 0;
-	}
-}
-
 // generic signal handler
 static void signal_handler(int signo)
 {
 #define err signo
 	if (SIGALRM == signo) {
-		kill_helper();
 		bb_error_msg_and_die("timed out");
 	}
 
@@ -66,16 +58,15 @@ void FAST_FUNC launch_helper(const char
 	// child stdout [1] -> parent stdin [0]
 
 	if (!G.helper_pid) {
-		// child: try to execute connection helper
+		// child
+		// if parent dies, get SIGTERM
+		prctl(PR_SET_PDEATHSIG, SIGTERM, 0, 0, 0);
+		// try to execute connection helper
 		// NB: SIGCHLD & SIGALRM revert to SIG_DFL on exec
 		BB_EXECVP_or_die((char**)argv);
 	}
 
-	// parent
-	// check whether child is alive
-	//redundant:signal_handler(SIGCHLD);
-	// child seems OK -> parent goes on
-	atexit(kill_helper);
+	// parent goes on
 }
 
 char* FAST_FUNC send_mail_command(const char *fmt, const char *param)
diff -urpN busybox-1.27.2/mailutils/makemime.c busybox-1.28.0/mailutils/makemime.c
--- busybox-1.27.2/mailutils/makemime.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/mailutils/makemime.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,10 +7,10 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config MAKEMIME
-//config:	bool "makemime"
+//config:	bool "makemime (5.9 kb)"
 //config:	default y
 //config:	help
-//config:	  Create MIME-formatted messages.
+//config:	Create MIME-formatted messages.
 
 //applet:IF_MAKEMIME(APPLET(makemime, BB_DIR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/mailutils/popmaildir.c busybox-1.28.0/mailutils/popmaildir.c
--- busybox-1.27.2/mailutils/popmaildir.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/mailutils/popmaildir.c	2017-08-17 13:50:45.000000000 +0200
@@ -10,21 +10,21 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config POPMAILDIR
-//config:	bool "popmaildir"
+//config:	bool "popmaildir (10 kb)"
 //config:	default y
 //config:	help
-//config:	  Simple yet powerful POP3 mail popper. Delivers content
-//config:	  of remote mailboxes to local Maildir.
+//config:	Simple yet powerful POP3 mail popper. Delivers content
+//config:	of remote mailboxes to local Maildir.
 //config:
 //config:config FEATURE_POPMAILDIR_DELIVERY
 //config:	bool "Allow message filters and custom delivery program"
 //config:	default y
 //config:	depends on POPMAILDIR
 //config:	help
-//config:	  Allow to use a custom program to filter the content
-//config:	  of the message before actual delivery (-F "prog [args...]").
-//config:	  Allow to use a custom program for message actual delivery
-//config:	  (-M "prog [args...]").
+//config:	Allow to use a custom program to filter the content
+//config:	of the message before actual delivery (-F "prog [args...]").
+//config:	Allow to use a custom program for message actual delivery
+//config:	(-M "prog [args...]").
 
 //applet:IF_POPMAILDIR(APPLET(popmaildir, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -125,9 +125,9 @@ int popmaildir_main(int argc UNUSED_PARA
 	INIT_G();
 
 	// parse options
-	opt_complementary = "-1:dd";
-	opts = getopt32(argv,
-		"bdmVcasTkt:+" "R:+Z:L:+H:+" IF_FEATURE_POPMAILDIR_DELIVERY("M:F:"),
+	opts = getopt32(argv, "^"
+		"bdmVcasTkt:+" "R:+Z:L:+H:+" IF_FEATURE_POPMAILDIR_DELIVERY("M:F:")
+		"\0" "-1:dd",
 		&timeout, NULL, NULL, NULL, &opt_nlines
 		IF_FEATURE_POPMAILDIR_DELIVERY(, &delivery, &delivery) // we treat -M and -F the same
 	);
diff -urpN busybox-1.27.2/mailutils/reformime.c busybox-1.28.0/mailutils/reformime.c
--- busybox-1.27.2/mailutils/reformime.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/mailutils/reformime.c	2017-08-17 13:50:45.000000000 +0200
@@ -7,18 +7,18 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config REFORMIME
-//config:	bool "reformime"
+//config:	bool "reformime (7.5 kb)"
 //config:	default y
 //config:	help
-//config:	  Parse MIME-formatted messages.
+//config:	Parse MIME-formatted messages.
 //config:
 //config:config FEATURE_REFORMIME_COMPAT
 //config:	bool "Accept and ignore options other than -x and -X"
 //config:	default y
 //config:	depends on REFORMIME
 //config:	help
-//config:	  Accept (for compatibility only) and ignore options
-//config:	  other than -x and -X.
+//config:	Accept (for compatibility only) and ignore options
+//config:	other than -x and -X.
 
 //applet:IF_REFORMIME(APPLET(reformime, BB_DIR_BIN, BB_SUID_DROP))
 
@@ -280,9 +280,9 @@ int reformime_main(int argc UNUSED_PARAM
 
 	// parse options
 	// N.B. only -x and -X are supported so far
-	opt_complementary = "x--X:X--x";
-	opts = getopt32(argv,
-		"x:X" IF_FEATURE_REFORMIME_COMPAT("deis:r:c:m:*h:o:O:"),
+	opts = getopt32(argv, "^"
+		"x:X" IF_FEATURE_REFORMIME_COMPAT("deis:r:c:m:*h:o:O:")
+		"\0" "x--X:X--x",
 		&opt_prefix
 		IF_FEATURE_REFORMIME_COMPAT(, NULL, NULL, &G.opt_charset, NULL, NULL, NULL, NULL)
 	);
diff -urpN busybox-1.27.2/mailutils/sendmail.c busybox-1.28.0/mailutils/sendmail.c
--- busybox-1.27.2/mailutils/sendmail.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/mailutils/sendmail.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,10 +7,10 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config SENDMAIL
-//config:	bool "sendmail"
+//config:	bool "sendmail (14 kb)"
 //config:	default y
 //config:	help
-//config:	  Barebones sendmail.
+//config:	Barebones sendmail.
 
 //applet:IF_SENDMAIL(APPLET(sendmail, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -150,7 +150,13 @@ static char *sane_address(char *str)
 	trim(str);
 	s = str;
 	while (*s) {
-		if (!isalnum(*s) && !strchr("+_-.@", *s)) {
+		/* Standard allows these chars in username without quoting:
+		 * /!#$%&'*+-=?^_`{|}~
+		 * and allows dot (.) with some restrictions.
+		 * I chose to only allow a saner subset.
+		 * I propose to expand it only on user's request.
+		 */
+		if (!isalnum(*s) && !strchr("=+_-.@", *s)) {
 			bb_error_msg("bad address '%s'", str);
 			/* returning "": */
 			str[0] = '\0';
@@ -166,9 +172,8 @@ static char *angle_address(char *str)
 {
 	char *s, *e;
 
-	trim(str);
-	e = last_char_is(str, '>');
-	if (e) {
+	e = trim(str);
+	if (e != str && e[-1] == '>') {
 		s = strrchr(str, '<');
 		if (s) {
 			*e = '\0';
@@ -190,8 +195,9 @@ static void rcptto(const char *s)
 // send to a list of comma separated addresses
 static void rcptto_list(const char *list)
 {
-	char *str = xstrdup(list);
-	char *s = str;
+	char *free_me = xstrdup(list);
+	char *str = free_me;
+	char *s = free_me;
 	char prev = 0;
 	int in_quote = 0;
 
@@ -209,7 +215,7 @@ static void rcptto_list(const char *list
 	}
 	if (prev != ',')
 		rcptto(angle_address(str));
-	free(str);
+	free(free_me);
 }
 
 int sendmail_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
@@ -257,13 +263,17 @@ int sendmail_main(int argc UNUSED_PARAM,
 	G.fp0 = xfdopen_for_read(3);
 
 	// parse options
-	// -v is a counter, -H and -S are mutually exclusive, -a is a list
-	opt_complementary = "vv:H--S:S--H";
 	// N.B. since -H and -S are mutually exclusive they do not interfere in opt_connect
 	// -a is for ssmtp (http://downloads.openwrt.org/people/nico/man/man8/ssmtp.8.html) compatibility,
 	// it is still under development.
-	opts = getopt32(argv, "tf:o:iw:+H:S:a:*:v", &opt_from, NULL,
-			&timeout, &opt_connect, &opt_connect, &list, &verbose);
+	opts = getopt32(argv, "^"
+			"tf:o:iw:+H:S:a:*:v"
+			"\0"
+			// -v is a counter, -H and -S are mutually exclusive, -a is a list
+			"vv:H--S:S--H",
+			&opt_from, NULL,
+			&timeout, &opt_connect, &opt_connect, &list, &verbose
+	);
 	//argc -= optind;
 	argv += optind;
 
diff -urpN busybox-1.27.2/make_single_applets.sh busybox-1.28.0/make_single_applets.sh
--- busybox-1.27.2/make_single_applets.sh	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/make_single_applets.sh	2018-01-01 20:40:41.000000000 +0100
@@ -12,8 +12,9 @@ makeopts="-j9"
 test -f include/applets.h || { echo "No include/applets.h file"; exit 1; }
 apps="`
 grep ^IF_ include/applets.h \
-| grep -v ^IF_FEATURE_ \
+| grep -v '^IF_FEATURE_' \
 | sed 's/IF_\([A-Z0-9._-]*\)(.*/\1/' \
+| grep -v '^BUSYBOX$' \
 | sort | uniq
 `"
 
diff -urpN busybox-1.27.2/miscutils/adjtimex.c busybox-1.28.0/miscutils/adjtimex.c
--- busybox-1.27.2/miscutils/adjtimex.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/adjtimex.c	2017-08-17 13:50:45.000000000 +0200
@@ -1,6 +1,6 @@
 /* vi: set sw=4 ts=4: */
 /*
- * adjtimex.c - read, and possibly modify, the Linux kernel `timex' variables.
+ * adjtimex.c - read, and possibly modify, the Linux kernel 'timex' variables.
  *
  * Originally written: October 1997
  * Last hack: March 2001
@@ -11,14 +11,14 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config ADJTIMEX
-//config:	bool "adjtimex"
+//config:	bool "adjtimex (4.5 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Adjtimex reads and optionally sets adjustment parameters for
-//config:	  the Linux clock adjustment algorithm.
+//config:	Adjtimex reads and optionally sets adjustment parameters for
+//config:	the Linux clock adjustment algorithm.
 
-//applet:IF_ADJTIMEX(APPLET(adjtimex, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_ADJTIMEX(APPLET_NOFORK(adjtimex, adjtimex, BB_DIR_SBIN, BB_SUID_DROP, adjtimex))
 
 //kbuild:lib-$(CONFIG_ADJTIMEX) += adjtimex.o
 
@@ -90,13 +90,15 @@ int adjtimex_main(int argc UNUSED_PARAM,
 	unsigned opt;
 	char *opt_o, *opt_f, *opt_p, *opt_t;
 	struct timex txc;
-	int i, ret;
+	int ret;
 	const char *descript;
 
-	opt_complementary = "=0"; /* no valid non-option parameters */
-	opt = getopt32(argv, "qo:f:p:t:",
-			&opt_o, &opt_f, &opt_p, &opt_t);
-	txc.modes = 0;
+	memset(&txc, 0, sizeof(txc));
+
+	opt = getopt32(argv, "^" "qo:f:p:t:"
+			"\0" "=0"/*no valid non-option args*/,
+			&opt_o, &opt_f, &opt_p, &opt_t
+	);
 	//if (opt & 0x1) // -q
 	if (opt & 0x2) { // -o
 		txc.offset = xatol(opt_o);
@@ -115,15 +117,19 @@ int adjtimex_main(int argc UNUSED_PARAM,
 		txc.modes |= ADJ_TICK;
 	}
 
-	ret = adjtimex(&txc);
+	/* It's NOFORK applet because the code is very simple:
+	 * just some printf. No opens, no allocs.
+	 * If you need to make it more complex, feel free to downgrade to NOEXEC
+	 */
 
-	if (ret < 0) {
+	ret = adjtimex(&txc);
+	if (ret < 0)
 		bb_perror_nomsg_and_die();
-	}
 
 	if (!(opt & OPT_quiet)) {
 		const char *sep;
 		const char *name;
+		int i;
 
 		printf(
 			"    mode:         %d\n"
@@ -132,8 +138,9 @@ int adjtimex_main(int argc UNUSED_PARAM,
 			"    maxerror:     %ld\n"
 			"    esterror:     %ld\n"
 			"    status:       %d (",
-		txc.modes, txc.offset, txc.freq, txc.maxerror,
-		txc.esterror, txc.status);
+			txc.modes, txc.offset, txc.freq, txc.maxerror,
+			txc.esterror, txc.status
+		);
 
 		/* representative output of next code fragment:
 		 * "PLL | PPSTIME"
@@ -159,9 +166,11 @@ int adjtimex_main(int argc UNUSED_PARAM,
 			"    time.tv_sec:  %ld\n"
 			"    time.tv_usec: %ld\n"
 			"    return value: %d (%s)\n",
-		txc.constant,
-		txc.precision, txc.tolerance, txc.tick,
-		(long)txc.time.tv_sec, (long)txc.time.tv_usec, ret, descript);
+			txc.constant,
+			txc.precision, txc.tolerance, txc.tick,
+			(long)txc.time.tv_sec, (long)txc.time.tv_usec,
+			ret, descript
+		);
 	}
 
 	return 0;
diff -urpN busybox-1.27.2/miscutils/bbconfig.c busybox-1.28.0/miscutils/bbconfig.c
--- busybox-1.27.2/miscutils/bbconfig.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/bbconfig.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,26 +1,27 @@
 /* vi: set sw=4 ts=4: */
-/* This file was released into the public domain by Paul Fox.
+/*
+ * This file was released into the public domain by Paul Fox.
  */
 //config:config BBCONFIG
-//config:	bool "bbconfig"
+//config:	bool "bbconfig (9.7 kb)"
 //config:	default n
 //config:	help
-//config:	  The bbconfig applet will print the config file with which
-//config:	  busybox was built.
+//config:	The bbconfig applet will print the config file with which
+//config:	busybox was built.
 //config:
 //config:config FEATURE_COMPRESS_BBCONFIG
 //config:	bool "Compress bbconfig data"
 //config:	default y
 //config:	depends on BBCONFIG
 //config:	help
-//config:	  Store bbconfig data in compressed form, uncompress them on-the-fly
-//config:	  before output.
+//config:	Store bbconfig data in compressed form, uncompress them on-the-fly
+//config:	before output.
 //config:
-//config:	  If you have a really tiny busybox with few applets enabled (and
-//config:	  bunzip2 isn't one of them), the overhead of the decompressor might
-//config:	  be noticeable. Also, if you run executables directly from ROM
-//config:	  and have very little memory, this might not be a win. Otherwise,
-//config:	  you probably want this.
+//config:	If you have a really tiny busybox with few applets enabled (and
+//config:	bunzip2 isn't one of them), the overhead of the decompressor might
+//config:	be noticeable. Also, if you run executables directly from ROM
+//config:	and have very little memory, this might not be a win. Otherwise,
+//config:	you probably want this.
 
 //applet:IF_BBCONFIG(APPLET(bbconfig, BB_DIR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/miscutils/beep.c busybox-1.28.0/miscutils/beep.c
--- busybox-1.27.2/miscutils/beep.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/miscutils/beep.c	2017-10-05 11:53:08.000000000 +0200
@@ -5,14 +5,13 @@
  * Copyright (C) 2009 Bernhard Reutner-Fischer
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
- *
  */
 //config:config BEEP
-//config:	bool "beep"
+//config:	bool "beep (3 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  The beep applets beeps in a given freq/Hz.
+//config:	The beep applets beeps in a given freq/Hz.
 //config:
 //config:config FEATURE_BEEP_FREQ
 //config:	int "default frequency"
@@ -20,7 +19,7 @@
 //config:	default 4000
 //config:	depends on BEEP
 //config:	help
-//config:	  Frequency for default beep.
+//config:	Frequency for default beep.
 //config:
 //config:config FEATURE_BEEP_LENGTH_MS
 //config:	int "default length"
@@ -28,7 +27,7 @@
 //config:	default 30
 //config:	depends on BEEP
 //config:	help
-//config:	  Length in ms for default beep.
+//config:	Length in ms for default beep.
 
 //applet:IF_BEEP(APPLET(beep, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/miscutils/chat.c busybox-1.28.0/miscutils/chat.c
--- busybox-1.27.2/miscutils/chat.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/chat.c	2017-09-07 14:42:40.000000000 +0200
@@ -8,71 +8,71 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config CHAT
-//config:	bool "chat"
+//config:	bool "chat (6.6 kb)"
 //config:	default y
 //config:	help
-//config:	  Simple chat utility.
+//config:	Simple chat utility.
 //config:
 //config:config FEATURE_CHAT_NOFAIL
 //config:	bool "Enable NOFAIL expect strings"
 //config:	depends on CHAT
 //config:	default y
 //config:	help
-//config:	  When enabled expect strings which are started with a dash trigger
-//config:	  no-fail mode. That is when expectation is not met within timeout
-//config:	  the script is not terminated but sends next SEND string and waits
-//config:	  for next EXPECT string. This allows to compose far more flexible
-//config:	  scripts.
+//config:	When enabled expect strings which are started with a dash trigger
+//config:	no-fail mode. That is when expectation is not met within timeout
+//config:	the script is not terminated but sends next SEND string and waits
+//config:	for next EXPECT string. This allows to compose far more flexible
+//config:	scripts.
 //config:
 //config:config FEATURE_CHAT_TTY_HIFI
 //config:	bool "Force STDIN to be a TTY"
 //config:	depends on CHAT
 //config:	default n
 //config:	help
-//config:	  Original chat always treats STDIN as a TTY device and sets for it
-//config:	  so-called raw mode. This option turns on such behaviour.
+//config:	Original chat always treats STDIN as a TTY device and sets for it
+//config:	so-called raw mode. This option turns on such behaviour.
 //config:
 //config:config FEATURE_CHAT_IMPLICIT_CR
 //config:	bool "Enable implicit Carriage Return"
 //config:	depends on CHAT
 //config:	default y
 //config:	help
-//config:	  When enabled make chat to terminate all SEND strings with a "\r"
-//config:	  unless "\c" is met anywhere in the string.
+//config:	When enabled make chat to terminate all SEND strings with a "\r"
+//config:	unless "\c" is met anywhere in the string.
 //config:
 //config:config FEATURE_CHAT_SWALLOW_OPTS
 //config:	bool "Swallow options"
 //config:	depends on CHAT
 //config:	default y
 //config:	help
-//config:	  Busybox chat require no options. To make it not fail when used
-//config:	  in place of original chat (which has a bunch of options) turn
-//config:	  this on.
+//config:	Busybox chat require no options. To make it not fail when used
+//config:	in place of original chat (which has a bunch of options) turn
+//config:	this on.
 //config:
 //config:config FEATURE_CHAT_SEND_ESCAPES
 //config:	bool "Support weird SEND escapes"
 //config:	depends on CHAT
 //config:	default y
 //config:	help
-//config:	  Original chat uses some escape sequences in SEND arguments which
-//config:	  are not sent to device but rather performs special actions.
-//config:	  E.g. "\K" means to send a break sequence to device.
-//config:	  "\d" delays execution for a second, "\p" -- for a 1/100 of second.
-//config:	  Before turning this option on think twice: do you really need them?
+//config:	Original chat uses some escape sequences in SEND arguments which
+//config:	are not sent to device but rather performs special actions.
+//config:	E.g. "\K" means to send a break sequence to device.
+//config:	"\d" delays execution for a second, "\p" -- for a 1/100 of second.
+//config:	Before turning this option on think twice: do you really need them?
 //config:
 //config:config FEATURE_CHAT_VAR_ABORT_LEN
 //config:	bool "Support variable-length ABORT conditions"
 //config:	depends on CHAT
 //config:	default y
 //config:	help
-//config:	  Original chat uses fixed 50-bytes length ABORT conditions. Say N here.
+//config:	Original chat uses fixed 50-bytes length ABORT conditions. Say N here.
 //config:
 //config:config FEATURE_CHAT_CLR_ABORT
 //config:	bool "Support revoking of ABORT conditions"
 //config:	depends on CHAT
 //config:	default y
 //config:	help
-//config:	  Support CLR_ABORT directive.
+//config:	Support CLR_ABORT directive.
 
 //applet:IF_CHAT(APPLET(chat, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -82,8 +82,8 @@
 //usage:       "EXPECT [SEND [EXPECT [SEND...]]]"
 //usage:#define chat_full_usage "\n\n"
 //usage:       "Useful for interacting with a modem connected to stdin/stdout.\n"
-//usage:       "A script consists of one or more \"expect-send\" pairs of strings,\n"
-//usage:       "each pair is a pair of arguments. Example:\n"
+//usage:       "A script consists of \"expect-send\" argument pairs.\n"
+//usage:       "Example:\n"
 //usage:       "chat '' ATZ OK ATD123456 CONNECT '' ogin: pppuser word: ppppass '~'"
 
 #include "libbb.h"
@@ -238,10 +238,18 @@ int chat_main(int argc UNUSED_PARAM, cha
 			, *argv
 		);
 		if (key >= 0) {
+			bool onoff;
 			// cache directive value
 			char *arg = *++argv;
+
+			if (!arg) {
+#if ENABLE_FEATURE_CHAT_TTY_HIFI
+				tcsetattr(STDIN_FILENO, TCSAFLUSH, &tio0);
+#endif
+				bb_show_usage();
+			}
 			// OFF -> 0, anything else -> 1
-			bool onoff = (0 != strcmp("OFF", arg));
+			onoff = (0 != strcmp("OFF", arg));
 			// process directive
 			if (DIR_HANGUP == key) {
 				// turn SIGHUP on/off
diff -urpN busybox-1.27.2/miscutils/conspy.c busybox-1.28.0/miscutils/conspy.c
--- busybox-1.27.2/miscutils/conspy.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/conspy.c	2017-08-17 13:50:45.000000000 +0200
@@ -10,14 +10,14 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config CONSPY
-//config:	bool "conspy"
+//config:	bool "conspy (10 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  A text-mode VNC like program for Linux virtual terminals.
-//config:	  example:  conspy NUM      shared access to console num
-//config:	  or        conspy -nd NUM  screenshot of console num
-//config:	  or        conspy -cs NUM  poor man's GNU screen like
+//config:	A text-mode VNC like program for Linux virtual terminals.
+//config:	example:  conspy NUM      shared access to console num
+//config:	or        conspy -nd NUM  screenshot of console num
+//config:	or        conspy -cs NUM  poor man's GNU screen like
 
 //applet:IF_CONSPY(APPLET(conspy, BB_DIR_BIN, BB_SUID_DROP))
 
@@ -367,7 +367,7 @@ int conspy_main(int argc UNUSED_PARAM, c
 	unsigned ttynum;
 	int poll_timeout_ms;
 #if ENABLE_LONG_OPTS
-	static const char getopt_longopts[] ALIGN1 =
+	static const char conspy_longopts[] ALIGN1 =
 		"viewonly\0"     No_argument "v"
 		"createdevice\0" No_argument "c"
 		"neverquit\0"    No_argument "Q"
@@ -377,8 +377,6 @@ int conspy_main(int argc UNUSED_PARAM, c
 		"follow\0"       No_argument "f"
 		"framebuffer\0"  No_argument "F"
 		;
-
-	applet_long_options = getopt_longopts;
 #endif
 #define keybuf bb_common_bufsiz1
 	setup_common_bufsiz();
@@ -387,7 +385,7 @@ int conspy_main(int argc UNUSED_PARAM, c
 	strcpy(G.vcsa_name, DEV_VCSA);
 
 	// numeric params
-	opts = getopt32(argv, "vcQsndfFx:+y:+", &G.x, &G.y);
+	opts = getopt32long(argv, "vcQsndfFx:+y:+", conspy_longopts, &G.x, &G.y);
 	argv += optind;
 	ttynum = 0;
 	if (argv[0]) {
diff -urpN busybox-1.27.2/miscutils/crond.c busybox-1.28.0/miscutils/crond.c
--- busybox-1.27.2/miscutils/crond.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/miscutils/crond.c	2017-08-17 13:50:45.000000000 +0200
@@ -9,38 +9,54 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config CROND
-//config:	bool "crond"
+//config:	bool "crond (13 kb)"
 //config:	default y
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	  Crond is a background daemon that parses individual crontab
-//config:	  files and executes commands on behalf of the users in question.
-//config:	  This is a port of dcron from slackware. It uses files of the
-//config:	  format /var/spool/cron/crontabs/<username> files, for example:
-//config:	      $ cat /var/spool/cron/crontabs/root
-//config:	      # Run daily cron jobs at 4:40 every day:
-//config:	      40 4 * * * /etc/cron/daily > /dev/null 2>&1
+//config:	Crond is a background daemon that parses individual crontab
+//config:	files and executes commands on behalf of the users in question.
+//config:	This is a port of dcron from slackware. It uses files of the
+//config:	format /var/spool/cron/crontabs/<username> files, for example:
+//config:		$ cat /var/spool/cron/crontabs/root
+//config:		# Run daily cron jobs at 4:40 every day:
+//config:		40 4 * * * /etc/cron/daily > /dev/null 2>&1
 //config:
 //config:config FEATURE_CROND_D
-//config:	bool "Support option -d to redirect output to stderr"
+//config:	bool "Support -d (redirect output to stderr)"
 //config:	depends on CROND
 //config:	default y
 //config:	help
-//config:	  -d N sets loglevel (0:most verbose) and directs all output to stderr.
+//config:	-d N sets loglevel (0:most verbose) and directs all output to stderr.
 //config:
 //config:config FEATURE_CROND_CALL_SENDMAIL
 //config:	bool "Report command output via email (using sendmail)"
 //config:	default y
 //config:	depends on CROND
 //config:	help
-//config:	  Command output will be sent to corresponding user via email.
+//config:	Command output will be sent to corresponding user via email.
+//config:
+//config:config FEATURE_CROND_SPECIAL_TIMES
+//config:	bool "Support special times (@reboot, @daily, etc) in crontabs"
+//config:	default y
+//config:	depends on CROND
+//config:	help
+//config:	string        meaning
+//config:	------        -------
+//config:	@reboot       Run once, at startup
+//config:	@yearly       Run once a year:  "0 0 1 1 *"
+//config:	@annually     Same as @yearly:  "0 0 1 1 *"
+//config:	@monthly      Run once a month: "0 0 1 * *"
+//config:	@weekly       Run once a week:  "0 0 * * 0"
+//config:	@daily        Run once a day:   "0 0 * * *"
+//config:	@midnight     Same as @daily:   "0 0 * * *"
+//config:	@hourly       Run once an hour: "0 * * * *"
 //config:
 //config:config FEATURE_CROND_DIR
 //config:	string "crond spool directory"
 //config:	default "/var/spool/cron"
 //config:	depends on CROND || CRONTAB
 //config:	help
-//config:	  Location of crond spool.
+//config:	Location of crond spool.
 
 //applet:IF_CROND(APPLET(crond, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -63,9 +79,9 @@
 #include "common_bufsiz.h"
 #include <syslog.h>
 
-/* glibc frees previous setenv'ed value when we do next setenv()
- * of the same variable. uclibc does not do this! */
-#if (defined(__GLIBC__) && !defined(__UCLIBC__)) /* || OTHER_SAFE_LIBC... */
+#if 0
+/* If libc tracks and reuses setenv()-allocated memory, ok to set this to 0 */
+/* Neither glibc nor uclibc do that! */
 # define SETENV_LEAKS 0
 #else
 # define SETENV_LEAKS 1
@@ -74,6 +90,7 @@
 
 #define CRON_DIR        CONFIG_FEATURE_CROND_DIR
 #define CRONTABS        CONFIG_FEATURE_CROND_DIR "/crontabs"
+#define CRON_REBOOT     CONFIG_PID_FILE_PATH "/crond.reboot"
 #ifndef SENDMAIL
 # define SENDMAIL       "sendmail"
 #endif
@@ -101,6 +118,8 @@ typedef struct CronLine {
 	struct CronLine *cl_next;
 	char *cl_cmd;                   /* shell command */
 	pid_t cl_pid;                   /* >0:running, <0:needs to be started in this minute, 0:dormant */
+#define START_ME_REBOOT -2
+#define START_ME_NORMAL -1
 #if ENABLE_FEATURE_CROND_CALL_SENDMAIL
 	int cl_empty_mail_size;         /* size of mail header only, 0 if no mailfile */
 	char *cl_mailto;                /* whom to mail results, may be NULL */
@@ -134,6 +153,7 @@ struct globals {
 	const char *log_filename;
 	const char *crontab_dir_name; /* = CRONTABS; */
 	CronFile *cron_files;
+	char *default_shell;
 #if SETENV_LEAKS
 	char *env_var_user;
 	char *env_var_home;
@@ -465,21 +485,85 @@ static void load_crontab(const char *fil
 //line of the crontab's owner. HOME and SHELL may be overridden by settings
 //in the crontab; LOGNAME may not.
 
+#if ENABLE_FEATURE_CROND_SPECIAL_TIMES
+			if (tokens[0][0] == '@') {
+				/*
+				 * "@daily /a/script/to/run PARAM1 PARAM2..."
+				 */
+				typedef struct SpecialEntry {
+					const char *name;
+					const char tokens[8];
+				} SpecialEntry;
+				static const SpecialEntry SpecAry[] = {
+					/*              hour  day   month weekday */
+					{ "yearly",     "0\0" "1\0" "1\0" "*" },
+					{ "annually",   "0\0" "1\0" "1\0" "*" },
+					{ "monthly",    "0\0" "1\0" "*\0" "*" },
+					{ "weekly",     "0\0" "*\0" "*\0" "0" },
+					{ "daily",      "0\0" "*\0" "*\0" "*" },
+					{ "midnight",   "0\0" "*\0" "*\0" "*" },
+					{ "hourly",     "*\0" "*\0" "*\0" "*" },
+					{ "reboot",     ""                    },
+				};
+				const SpecialEntry *e = SpecAry;
+
+				if (n < 2)
+					continue;
+				for (;;) {
+					if (strcmp(e->name, tokens[0] + 1) == 0) {
+						/*
+						 * tokens[1] is only the first word of command,
+						 * can'r use it.
+						 * find the entire command in unmodified string:
+						 */
+						tokens[5] = skip_whitespace(
+							skip_non_whitespace(
+							skip_whitespace(parser->data)));
+						if (e->tokens[0]) {
+							char *et = (char*)e->tokens;
+							/* minute is "0" for all specials */
+							tokens[0] = (char*)"0";
+							tokens[1] = et;
+							tokens[2] = et + 2;
+							tokens[3] = et + 4;
+							tokens[4] = et + 6;
+						}
+						goto got_it;
+					}
+					if (!e->tokens[0])
+						break;
+					e++;
+				}
+				continue; /* bad line (unrecognized '@foo') */
+			}
+#endif
 			/* check if a minimum of tokens is specified */
 			if (n < 6)
 				continue;
+ IF_FEATURE_CROND_SPECIAL_TIMES(
+  got_it:
+ )
 			*pline = line = xzalloc(sizeof(*line));
-			/* parse date ranges */
-			ParseField(file->cf_username, line->cl_Mins, 60, 0, NULL, tokens[0]);
-			ParseField(file->cf_username, line->cl_Hrs, 24, 0, NULL, tokens[1]);
-			ParseField(file->cf_username, line->cl_Days, 32, 0, NULL, tokens[2]);
-			ParseField(file->cf_username, line->cl_Mons, 12, -1, MonAry, tokens[3]);
-			ParseField(file->cf_username, line->cl_Dow, 7, 0, DowAry, tokens[4]);
-			/*
-			 * fix days and dow - if one is not "*" and the other
-			 * is "*", the other is set to 0, and vise-versa
-			 */
-			FixDayDow(line);
+#if ENABLE_FEATURE_CROND_SPECIAL_TIMES
+			if (tokens[0][0] == '@') { /* "@reboot" line */
+				file->cf_wants_starting = 1;
+				line->cl_pid = START_ME_REBOOT; /* wants to start */
+				/* line->cl_Mins/Hrs/etc stay zero: never match any time */
+			} else
+#endif
+			{
+				/* parse date ranges */
+				ParseField(file->cf_username, line->cl_Mins, 60, 0, NULL, tokens[0]);
+				ParseField(file->cf_username, line->cl_Hrs, 24, 0, NULL, tokens[1]);
+				ParseField(file->cf_username, line->cl_Days, 32, 0, NULL, tokens[2]);
+				ParseField(file->cf_username, line->cl_Mons, 12, -1, MonAry, tokens[3]);
+				ParseField(file->cf_username, line->cl_Dow, 7, 0, DowAry, tokens[4]);
+				/*
+				 * fix days and dow - if one is not "*" and the other
+				 * is "*", the other is set to 0, and vise-versa
+				 */
+				FixDayDow(line);
+			}
 #if ENABLE_FEATURE_CROND_CALL_SENDMAIL
 			/* copy mailto (can be NULL) */
 			line->cl_mailto = xstrdup(mailTo);
@@ -617,7 +701,7 @@ fork_job(const char *user, int mailFd, C
 		goto err;
 	}
 
-	shell = line->cl_shell ? line->cl_shell : DEFAULT_SHELL;
+	shell = line->cl_shell ? line->cl_shell : G.default_shell;
 	prog = run_sendmail ? SENDMAIL : shell;
 
 	set_env_vars(pas, shell);
@@ -664,7 +748,7 @@ fork_job(const char *user, int mailFd, C
 	return pid;
 }
 
-static void start_one_job(const char *user, CronLine *line)
+static pid_t start_one_job(const char *user, CronLine *line)
 {
 	char mailFile[128];
 	int mailFd = -1;
@@ -698,6 +782,8 @@ static void start_one_job(const char *us
 			free(mailFile2);
 		}
 	}
+
+	return line->cl_pid;
 }
 
 /*
@@ -748,7 +834,7 @@ static void process_finished_job(const c
 
 #else /* !ENABLE_FEATURE_CROND_CALL_SENDMAIL */
 
-static void start_one_job(const char *user, CronLine *line)
+static pid_t start_one_job(const char *user, CronLine *line)
 {
 	const char *shell;
 	struct passwd *pas;
@@ -761,7 +847,7 @@ static void start_one_job(const char *us
 	}
 
 	/* Prepare things before vfork */
-	shell = line->cl_shell ? line->cl_shell : DEFAULT_SHELL;
+	shell = line->cl_shell ? line->cl_shell : G.default_shell;
 	set_env_vars(pas, shell);
 
 	/* Fork as the user in question and run program */
@@ -782,6 +868,7 @@ static void start_one_job(const char *us
 		pid = 0;
 	}
 	line->cl_pid = pid;
+	return pid;
 }
 
 #define process_finished_job(user, line)  ((line)->cl_pid = 0)
@@ -825,7 +912,7 @@ static void flag_starting_jobs(time_t t1
 						log8("user %s: process already running: %s",
 							file->cf_username, line->cl_cmd);
 					} else if (line->cl_pid == 0) {
-						line->cl_pid = -1;
+						line->cl_pid = START_ME_NORMAL;
 						file->cf_wants_starting = 1;
 					}
 				}
@@ -834,7 +921,20 @@ static void flag_starting_jobs(time_t t1
 	}
 }
 
-static void start_jobs(void)
+#if ENABLE_FEATURE_CROND_SPECIAL_TIMES
+static int touch_reboot_file(void)
+{
+	int fd = open(CRON_REBOOT, O_WRONLY | O_CREAT | O_EXCL | O_TRUNC, 0000);
+	if (fd >= 0) {
+		close(fd);
+		return 1;
+	}
+	/* File (presumably) exists - this is not the first run after reboot */
+	return 0;
+}
+#endif
+
+static void start_jobs(int wants_start)
 {
 	CronFile *file;
 	CronLine *line;
@@ -846,11 +946,10 @@ static void start_jobs(void)
 		file->cf_wants_starting = 0;
 		for (line = file->cf_lines; line; line = line->cl_next) {
 			pid_t pid;
-			if (line->cl_pid >= 0)
+			if (line->cl_pid != wants_start)
 				continue;
 
-			start_one_job(file->cf_username, line);
-			pid = line->cl_pid;
+			pid = start_one_job(file->cf_username, line);
 			log8("USER %s pid %3d cmd %s",
 				file->cf_username, (int)pid, line->cl_cmd);
 			if (pid < 0) {
@@ -922,13 +1021,17 @@ int crond_main(int argc UNUSED_PARAM, ch
 
 	INIT_G();
 
-	/* "-b after -f is ignored", and so on for every pair a-b */
-	opt_complementary = "f-b:b-f:S-L:L-S" IF_FEATURE_CROND_D(":d-l")
+	opts = getopt32(argv, "^"
+			"l:L:fbSc:" IF_FEATURE_CROND_D("d:")
+			"\0"
+			/* "-b after -f is ignored", and so on for every pair a-b */
+			"f-b:b-f:S-L:L-S" IF_FEATURE_CROND_D(":d-l")
 			/* -l and -d have numeric param */
-			":l+" IF_FEATURE_CROND_D(":d+");
-	opts = getopt32(argv, "l:L:fbSc:" IF_FEATURE_CROND_D("d:"),
+			":l+" IF_FEATURE_CROND_D(":d+")
+			,
 			&G.log_level, &G.log_filename, &G.crontab_dir_name
-			IF_FEATURE_CROND_D(,&G.log_level));
+			IF_FEATURE_CROND_D(,&G.log_level)
+	);
 	/* both -d N and -l N set the same variable: G.log_level */
 
 	if (!(opts & OPT_f)) {
@@ -947,9 +1050,17 @@ int crond_main(int argc UNUSED_PARAM, ch
 
 	reopen_logfile_to_stderr();
 	xchdir(G.crontab_dir_name);
+	/* $SHELL, or current UID's shell, or DEFAULT_SHELL */
+	/* Useful on Android where DEFAULT_SHELL /bin/sh may not exist */
+	G.default_shell = xstrdup(get_shell_name());
+
 	log8("crond (busybox "BB_VER") started, log level %d", G.log_level);
 	rescan_crontab_dir();
 	write_pidfile(CONFIG_PID_FILE_PATH "/crond.pid");
+#if ENABLE_FEATURE_CROND_SPECIAL_TIMES
+	if (touch_reboot_file())
+		start_jobs(START_ME_REBOOT); /* start @reboot entries, if any */
+#endif
 
 	/* Main loop */
 	t2 = time(NULL);
@@ -1002,7 +1113,7 @@ int crond_main(int argc UNUSED_PARAM, ch
 		} else if (dt > 0) {
 			/* Usual case: time advances forward, as expected */
 			flag_starting_jobs(t1, t2);
-			start_jobs();
+			start_jobs(START_ME_NORMAL);
 			sleep_time = 60;
 			if (check_completions() > 0) {
 				/* some jobs are still running */
diff -urpN busybox-1.27.2/miscutils/crontab.c busybox-1.28.0/miscutils/crontab.c
--- busybox-1.27.2/miscutils/crontab.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/crontab.c	2017-08-17 13:50:45.000000000 +0200
@@ -10,13 +10,13 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config CRONTAB
-//config:	bool "crontab"
+//config:	bool "crontab (9.7 kb)"
 //config:	default y
 //config:	help
-//config:	  Crontab manipulates the crontab for a particular user. Only
-//config:	  the superuser may specify a different user and/or crontab directory.
-//config:	  Note that Busybox binary must be setuid root for this applet to
-//config:	  work properly.
+//config:	Crontab manipulates the crontab for a particular user. Only
+//config:	the superuser may specify a different user and/or crontab directory.
+//config:	Note that busybox binary must be setuid root for this applet to
+//config:	work properly.
 
 /* Needs to be run by root or be suid root - needs to change /var/spool/cron* files: */
 //applet:IF_CRONTAB(APPLET(crontab, BB_DIR_USR_BIN, BB_SUID_REQUIRE))
@@ -99,8 +99,9 @@ int crontab_main(int argc UNUSED_PARAM,
 		OPT_ler = OPT_l + OPT_e + OPT_r,
 	};
 
-	opt_complementary = "?1:dr"; /* max one argument; -d implies -r */
-	opt_ler = getopt32(argv, "u:c:lerd", &user_name, &crontab_dir);
+	opt_ler = getopt32(argv, "^" "u:c:lerd" "\0" "?1:dr"/*max one arg; -d implies -r*/,
+				&user_name, &crontab_dir
+	);
 	argv += optind;
 
 	if (sanitize_env_if_suid()) { /* Clears dangerous stuff, sets PATH */
diff -urpN busybox-1.27.2/miscutils/dc.c busybox-1.28.0/miscutils/dc.c
--- busybox-1.27.2/miscutils/dc.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/dc.c	2017-07-24 18:57:09.000000000 +0200
@@ -3,19 +3,19 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config DC
-//config:	bool "dc"
+//config:	bool "dc (4.2 kb)"
 //config:	default y
 //config:	help
-//config:	  Dc is a reverse-polish desk calculator which supports unlimited
-//config:	  precision arithmetic.
+//config:	Dc is a reverse-polish desk calculator which supports unlimited
+//config:	precision arithmetic.
 //config:
 //config:config FEATURE_DC_LIBM
 //config:	bool "Enable power and exp functions (requires libm)"
 //config:	default y
 //config:	depends on DC
 //config:	help
-//config:	  Enable power and exp functions.
-//config:	  NOTE: This will require libm to be present for linking.
+//config:	Enable power and exp functions.
+//config:	NOTE: This will require libm to be present for linking.
 
 //applet:IF_DC(APPLET(dc, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/miscutils/devfsd.c busybox-1.28.0/miscutils/devfsd.c
--- busybox-1.27.2/miscutils/devfsd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/devfsd.c	2017-07-24 18:57:09.000000000 +0200
@@ -59,56 +59,55 @@
 //config:	select PLATFORM_LINUX
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	  This is deprecated and should NOT be used anymore.
-//config:	  Use linux >= 2.6 (optionally with hotplug) and mdev instead!
-//config:	  See docs/mdev.txt for detailed instructions on how to use mdev
-//config:	  instead.
-//config:
-//config:	  Provides compatibility with old device names on a devfs systems.
-//config:	  You should set it to true if you have devfs enabled.
-//config:	  The following keywords in devsfd.conf are supported:
-//config:	  "CLEAR_CONFIG", "INCLUDE", "OPTIONAL_INCLUDE", "RESTORE",
-//config:	  "PERMISSIONS", "EXECUTE", "COPY", "IGNORE",
-//config:	  "MKOLDCOMPAT", "MKNEWCOMPAT","RMOLDCOMPAT", "RMNEWCOMPAT".
+//config:	This is deprecated and should NOT be used anymore.
+//config:	Use linux >= 2.6 (optionally with hotplug) and mdev instead!
+//config:	See docs/mdev.txt for detailed instructions on how to use mdev
+//config:	instead.
+//config:
+//config:	Provides compatibility with old device names on a devfs systems.
+//config:	You should set it to true if you have devfs enabled.
+//config:	The following keywords in devsfd.conf are supported:
+//config:	"CLEAR_CONFIG", "INCLUDE", "OPTIONAL_INCLUDE", "RESTORE",
+//config:	"PERMISSIONS", "EXECUTE", "COPY", "IGNORE",
+//config:	"MKOLDCOMPAT", "MKNEWCOMPAT","RMOLDCOMPAT", "RMNEWCOMPAT".
 //config:
-//config:	  But only if they are written UPPERCASE!!!!!!!!
+//config:	But only if they are written UPPERCASE!!!!!!!!
 //config:
 //config:config DEVFSD_MODLOAD
 //config:	bool "Adds support for MODLOAD keyword in devsfd.conf"
 //config:	default y
 //config:	depends on DEVFSD
 //config:	help
-//config:	  This actually doesn't work with busybox modutils but needs
-//config:	  the external modutils.
+//config:	This actually doesn't work with busybox modutils but needs
+//config:	the external modutils.
 //config:
 //config:config DEVFSD_FG_NP
 //config:	bool "Enable the -fg and -np options"
 //config:	default y
 //config:	depends on DEVFSD
 //config:	help
-//config:	  -fg  Run the daemon in the foreground.
-//config:	  -np  Exit after parsing the configuration file.
-//config:	       Do not poll for events.
+//config:	-fg  Run the daemon in the foreground.
+//config:	-np  Exit after parsing config. Do not poll for events.
 //config:
 //config:config DEVFSD_VERBOSE
 //config:	bool "Increases logging (and size)"
 //config:	default y
 //config:	depends on DEVFSD
 //config:	help
-//config:	  Increases logging to stderr or syslog.
+//config:	Increases logging to stderr or syslog.
 //config:
 //config:config FEATURE_DEVFS
 //config:	bool "Use devfs names for all devices (obsolete)"
 //config:	default n
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  This is obsolete and should NOT be used anymore.
-//config:	  Use linux >= 2.6 (optionally with hotplug) and mdev instead!
+//config:	This is obsolete and should NOT be used anymore.
+//config:	Use linux >= 2.6 (optionally with hotplug) and mdev instead!
 //config:
-//config:	  For legacy systems -- if there is no way around devfsd -- this
-//config:	  tells busybox to look for names like /dev/loop/0 instead of
-//config:	  /dev/loop0. If your /dev directory has normal names instead of
-//config:	  devfs names, you don't want this.
+//config:	For legacy systems -- if there is no way around devfsd -- this
+//config:	tells busybox to look for names like /dev/loop/0 instead of
+//config:	/dev/loop0. If your /dev directory has normal names instead of
+//config:	devfs names, you don't want this.
 
 //applet:IF_DEVFSD(APPLET(devfsd, BB_DIR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/miscutils/devmem.c busybox-1.28.0/miscutils/devmem.c
--- busybox-1.27.2/miscutils/devmem.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/devmem.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,14 +1,14 @@
 /*
+ * Copyright (C) 2000, Jan-Derk Bakker (J.D.Bakker@its.tudelft.nl)
+ * Copyright (C) 2008, BusyBox Team. -solar 4/26/08
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
- *  Copyright (C) 2000, Jan-Derk Bakker (J.D.Bakker@its.tudelft.nl)
- *  Copyright (C) 2008, BusyBox Team. -solar 4/26/08
  */
 //config:config DEVMEM
-//config:	bool "devmem"
+//config:	bool "devmem (2.5 kb)"
 //config:	default y
 //config:	help
-//config:	  devmem is a small program that reads and writes from physical
-//config:	  memory using /dev/mem.
+//config:	devmem is a small program that reads and writes from physical
+//config:	memory using /dev/mem.
 
 //applet:IF_DEVMEM(APPLET(devmem, BB_DIR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/miscutils/fbsplash.c busybox-1.28.0/miscutils/fbsplash.c
--- busybox-1.27.2/miscutils/fbsplash.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/fbsplash.c	2017-10-05 11:53:08.000000000 +0200
@@ -21,24 +21,24 @@
  *   "exit" (or just close fifo) - well you guessed it.
  */
 //config:config FBSPLASH
-//config:	bool "fbsplash"
+//config:	bool "fbsplash (27 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Shows splash image and progress bar on framebuffer device.
-//config:	  Can be used during boot phase of an embedded device. ~2kb.
-//config:	  Usage:
-//config:	  - use kernel option 'vga=xxx' or otherwise enable fb device.
-//config:	  - put somewhere fbsplash.cfg file and an image in .ppm format.
-//config:	  - $ setsid fbsplash [params] &
+//config:	Shows splash image and progress bar on framebuffer device.
+//config:	Can be used during boot phase of an embedded device.
+//config:	Usage:
+//config:	- use kernel option 'vga=xxx' or otherwise enable fb device.
+//config:	- put somewhere fbsplash.cfg file and an image in .ppm format.
+//config:	- $ setsid fbsplash [params] &
 //config:	    -c: hide cursor
 //config:	    -d /dev/fbN: framebuffer device (if not /dev/fb0)
 //config:	    -s path_to_image_file (can be "-" for stdin)
 //config:	    -i path_to_cfg_file (can be "-" for stdin)
 //config:	    -f path_to_fifo (can be "-" for stdin)
-//config:	  - if you want to run it only in presence of kernel parameter:
+//config:	- if you want to run it only in presence of kernel parameter:
 //config:	    grep -q "fbsplash=on" </proc/cmdline && setsid fbsplash [params] &
-//config:	  - commands for fifo:
+//config:	- commands for fifo:
 //config:	    "NN" (ASCII decimal number) - percentage to show on progress bar
 //config:	    "exit" - well you guessed it
 
@@ -65,6 +65,8 @@
 /* If you want logging messages on /tmp/fbsplash.log... */
 #define DEBUG 0
 
+#define ESC "\033"
+
 struct globals {
 #if DEBUG
 	bool bdebug_messages;	// enable/disable logging
@@ -514,7 +516,7 @@ int fbsplash_main(int argc UNUSED_PARAM,
 
 	if (fifo_filename && bCursorOff) {
 		// hide cursor (BEFORE any fb ops)
-		full_write(STDOUT_FILENO, "\033[?25l", 6);
+		full_write(STDOUT_FILENO, ESC"[?25l", 6);
 	}
 
 	fb_drawimage();
@@ -559,7 +561,7 @@ int fbsplash_main(int argc UNUSED_PARAM,
 	}
 
 	if (bCursorOff) // restore cursor
-		full_write(STDOUT_FILENO, "\033[?25h", 6);
+		full_write(STDOUT_FILENO, ESC"[?25h", 6);
 
 	return EXIT_SUCCESS;
 }
diff -urpN busybox-1.27.2/miscutils/flash_eraseall.c busybox-1.28.0/miscutils/flash_eraseall.c
--- busybox-1.27.2/miscutils/flash_eraseall.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/flash_eraseall.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,5 +1,6 @@
 /* vi: set sw=4 ts=4: */
-/* eraseall.c -- erase the whole of a MTD device
+/*
+ * eraseall.c -- erase the whole of a MTD device
  *
  * Ported to busybox from mtd-utils.
  *
@@ -10,13 +11,14 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config FLASH_ERASEALL
-//config:	bool "flash_eraseall"
+//config:	bool "flash_eraseall (5.5 kb)"
 //config:	default n  # doesn't build on Ubuntu 8.04
 //config:	help
-//config:	  The flash_eraseall binary from mtd-utils as of git head c4c6a59eb.
-//config:	  This utility is used to erase the whole MTD device.
+//config:	The flash_eraseall binary from mtd-utils as of git head c4c6a59eb.
+//config:	This utility is used to erase the whole MTD device.
 
 //applet:IF_FLASH_ERASEALL(APPLET(flash_eraseall, BB_DIR_USR_SBIN, BB_SUID_DROP))
+/* not NOEXEC: if flash operation stalls, use less memory in "hung" process */
 
 //kbuild:lib-$(CONFIG_FLASH_ERASEALL) += flash_eraseall.o
 
@@ -81,8 +83,7 @@ int flash_eraseall_main(int argc UNUSED_
 	unsigned int flags;
 	char *mtd_name;
 
-	opt_complementary = "=1";
-	flags = getopt32(argv, "jNq");
+	flags = getopt32(argv, "^" "jNq" "\0" "=1");
 
 	mtd_name = argv[optind];
 	fd = xopen(mtd_name, O_RDWR);
diff -urpN busybox-1.27.2/miscutils/flash_lock_unlock.c busybox-1.28.0/miscutils/flash_lock_unlock.c
--- busybox-1.27.2/miscutils/flash_lock_unlock.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/flash_lock_unlock.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,25 +1,27 @@
 /* vi: set sw=4 ts=4: */
-/* Ported to busybox from mtd-utils.
+/*
+ * Ported to busybox from mtd-utils.
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config FLASH_LOCK
-//config:	bool "flash_lock"
+//config:	bool "flash_lock (2.1 kb)"
 //config:	default n  # doesn't build on Ubuntu 8.04
 //config:	help
-//config:	  The flash_lock binary from mtd-utils as of git head 5ec0c10d0. This
-//config:	  utility locks part or all of the flash device.
+//config:	The flash_lock binary from mtd-utils as of git head 5ec0c10d0. This
+//config:	utility locks part or all of the flash device.
 //config:
 //config:config FLASH_UNLOCK
-//config:	bool "flash_unlock"
+//config:	bool "flash_unlock (1.3 kb)"
 //config:	default n  # doesn't build on Ubuntu 8.04
 //config:	help
-//config:	  The flash_unlock binary from mtd-utils as of git head 5ec0c10d0. This
-//config:	  utility unlocks part or all of the flash device.
+//config:	The flash_unlock binary from mtd-utils as of git head 5ec0c10d0. This
+//config:	utility unlocks part or all of the flash device.
 
 //                       APPLET_ODDNAME:name          main               location         suid_type     help
 //applet:IF_FLASH_LOCK(  APPLET_ODDNAME(flash_lock,   flash_lock_unlock, BB_DIR_USR_SBIN, BB_SUID_DROP, flash_lock))
 //applet:IF_FLASH_UNLOCK(APPLET_ODDNAME(flash_unlock, flash_lock_unlock, BB_DIR_USR_SBIN, BB_SUID_DROP, flash_unlock))
+/* not NOEXEC: if flash operation stalls, use less memory in "hung" process */
 
 //kbuild:lib-$(CONFIG_FLASH_LOCK) += flash_lock_unlock.o
 //kbuild:lib-$(CONFIG_FLASH_UNLOCK) += flash_lock_unlock.o
diff -urpN busybox-1.27.2/miscutils/flashcp.c busybox-1.28.0/miscutils/flashcp.c
--- busybox-1.27.2/miscutils/flashcp.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/flashcp.c	2017-08-17 13:50:45.000000000 +0200
@@ -7,13 +7,14 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config FLASHCP
-//config:	bool "flashcp"
+//config:	bool "flashcp (5.4 kb)"
 //config:	default n  # doesn't build on Ubuntu 8.04
 //config:	help
-//config:	  The flashcp binary, inspired by mtd-utils as of git head 5eceb74f7.
-//config:	  This utility is used to copy images into a MTD device.
+//config:	The flashcp binary, inspired by mtd-utils as of git head 5eceb74f7.
+//config:	This utility is used to copy images into a MTD device.
 
 //applet:IF_FLASHCP(APPLET(flashcp, BB_DIR_USR_SBIN, BB_SUID_DROP))
+/* not NOEXEC: if flash operation stalls, use less memory in "hung" process */
 
 //kbuild:lib-$(CONFIG_FLASHCP) += flashcp.o
 
@@ -68,8 +69,7 @@ int flashcp_main(int argc UNUSED_PARAM,
 	RESERVE_CONFIG_UBUFFER(buf, BUFSIZE);
 	RESERVE_CONFIG_UBUFFER(buf2, BUFSIZE);
 
-	opt_complementary = "=2"; /* exactly 2 non-option args: file, dev */
-	/*opts =*/ getopt32(argv, "v");
+	/*opts =*/ getopt32(argv, "^" "v" "\0" "=2"/*exactly 2 non-option args: file,dev*/);
 	argv += optind;
 //	filename = *argv++;
 //	devicename = *argv;
diff -urpN busybox-1.27.2/miscutils/hdparm.c busybox-1.28.0/miscutils/hdparm.c
--- busybox-1.27.2/miscutils/hdparm.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/hdparm.c	2017-07-24 18:57:09.000000000 +0200
@@ -12,63 +12,62 @@
  *          - by Mark Lord (C) 1994-2002 -- freely distributable
  */
 //config:config HDPARM
-//config:	bool "hdparm"
+//config:	bool "hdparm (23 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Get/Set hard drive parameters. Primarily intended for ATA
-//config:	  drives. Adds about 13k (or around 30k if you enable the
-//config:	  FEATURE_HDPARM_GET_IDENTITY option)....
+//config:	Get/Set hard drive parameters. Primarily intended for ATA
+//config:	drives.
 //config:
 //config:config FEATURE_HDPARM_GET_IDENTITY
 //config:	bool "Support obtaining detailed information directly from drives"
 //config:	default y
 //config:	depends on HDPARM
 //config:	help
-//config:	  Enable the -I and -i options to obtain detailed information
-//config:	  directly from drives about their capabilities and supported ATA
-//config:	  feature set. If no device name is specified, hdparm will read
-//config:	  identify data from stdin. Enabling this option will add about 16k...
+//config:	Enable the -I and -i options to obtain detailed information
+//config:	directly from drives about their capabilities and supported ATA
+//config:	feature set. If no device name is specified, hdparm will read
+//config:	identify data from stdin. Enabling this option will add about 16k...
 //config:
 //config:config FEATURE_HDPARM_HDIO_SCAN_HWIF
 //config:	bool "Register an IDE interface (DANGEROUS)"
 //config:	default y
 //config:	depends on HDPARM
 //config:	help
-//config:	  Enable the 'hdparm -R' option to register an IDE interface.
-//config:	  This is dangerous stuff, so you should probably say N.
+//config:	Enable the 'hdparm -R' option to register an IDE interface.
+//config:	This is dangerous stuff, so you should probably say N.
 //config:
 //config:config FEATURE_HDPARM_HDIO_UNREGISTER_HWIF
 //config:	bool "Un-register an IDE interface (DANGEROUS)"
 //config:	default y
 //config:	depends on HDPARM
 //config:	help
-//config:	  Enable the 'hdparm -U' option to un-register an IDE interface.
-//config:	  This is dangerous stuff, so you should probably say N.
+//config:	Enable the 'hdparm -U' option to un-register an IDE interface.
+//config:	This is dangerous stuff, so you should probably say N.
 //config:
 //config:config FEATURE_HDPARM_HDIO_DRIVE_RESET
 //config:	bool "Perform device reset (DANGEROUS)"
 //config:	default y
 //config:	depends on HDPARM
 //config:	help
-//config:	  Enable the 'hdparm -w' option to perform a device reset.
-//config:	  This is dangerous stuff, so you should probably say N.
+//config:	Enable the 'hdparm -w' option to perform a device reset.
+//config:	This is dangerous stuff, so you should probably say N.
 //config:
 //config:config FEATURE_HDPARM_HDIO_TRISTATE_HWIF
 //config:	bool "Tristate device for hotswap (DANGEROUS)"
 //config:	default y
 //config:	depends on HDPARM
 //config:	help
-//config:	  Enable the 'hdparm -x' option to tristate device for hotswap,
-//config:	  and the '-b' option to get/set bus state. This is dangerous
-//config:	  stuff, so you should probably say N.
+//config:	Enable the 'hdparm -x' option to tristate device for hotswap,
+//config:	and the '-b' option to get/set bus state. This is dangerous
+//config:	stuff, so you should probably say N.
 //config:
 //config:config FEATURE_HDPARM_HDIO_GETSET_DMA
 //config:	bool "Get/set using_dma flag"
 //config:	default y
 //config:	depends on HDPARM
 //config:	help
-//config:	  Enable the 'hdparm -d' option to get/set using_dma flag.
+//config:	Enable the 'hdparm -d' option to get/set using_dma flag.
 
 //applet:IF_HDPARM(APPLET(hdparm, BB_DIR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/miscutils/hexedit.c busybox-1.28.0/miscutils/hexedit.c
--- busybox-1.27.2/miscutils/hexedit.c	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/miscutils/hexedit.c	2017-10-05 11:53:08.000000000 +0200
@@ -0,0 +1,465 @@
+/*
+ * Copyright (C) 2017 Denys Vlasenko <vda.linux@googlemail.com>
+ *
+ * Licensed under GPLv2, see file LICENSE in this source tree.
+ */
+//config:config HEXEDIT
+//config:	bool "hexedit"
+//config:	default y
+//config:	help
+//config:	Edit file in hexadecimal.
+
+//applet:IF_HEXEDIT(APPLET(hexedit, BB_DIR_USR_BIN, BB_SUID_DROP))
+
+//kbuild:lib-$(CONFIG_HEXEDIT) += hexedit.o
+
+#include "libbb.h"
+
+#define ESC		"\033"
+#define HOME		ESC"[H"
+#define CLEAR		ESC"[J"
+#define CLEAR_TILL_EOL	ESC"[K"
+#define SET_ALT_SCR	ESC"[?1049h"
+#define POP_ALT_SCR	ESC"[?1049l"
+
+#undef CTRL
+#define CTRL(c)  ((c) & (uint8_t)~0x60)
+
+struct globals {
+	smallint half;
+	smallint in_read_key;
+	int fd;
+	unsigned height;
+	unsigned row;
+	unsigned pagesize;
+	uint8_t *baseaddr;
+	uint8_t *current_byte;
+	uint8_t *eof_byte;
+	off_t size;
+	off_t offset;
+	/* needs to be zero-inited, thus keeping it in G: */
+	char read_key_buffer[KEYCODE_BUFFER_SIZE];
+	struct termios orig_termios;
+};
+#define G (*ptr_to_globals)
+#define INIT_G() do { \
+	SET_PTR_TO_GLOBALS(xzalloc(sizeof(G))); \
+} while (0)
+
+//TODO: move to libbb
+#if defined(__x86_64__) || defined(i386)
+# define G_pagesize 4096
+# define INIT_PAGESIZE() ((void)0)
+#else
+# define G_pagesize (G.pagesize)
+# define INIT_PAGESIZE() ((void)(G.pagesize = getpagesize()))
+#endif
+
+/* hopefully there aren't arches with PAGE_SIZE > 64k */
+#define G_mapsize  (64*1024)
+
+/* "12ef5670 (xx )*16 _1_3_5_7_9abcdef\n"NUL */
+#define LINEBUF_SIZE (8 + 1 + 3*16 + 16 + 1 + 1 /*paranoia:*/ + 13)
+
+static void restore_term(void)
+{
+	tcsetattr_stdin_TCSANOW(&G.orig_termios);
+	printf(POP_ALT_SCR);
+	fflush_all();
+}
+
+static void sig_catcher(int sig)
+{
+	if (!G.in_read_key) {
+		/* now it's not safe to do I/O, just inform the main loop */
+		bb_got_signal = sig;
+		return;
+	}
+	restore_term();
+	kill_myself_with_sig(sig);
+}
+
+static int format_line(char *hex, uint8_t *data, off_t offset)
+{
+	int ofs_pos;
+	char *text;
+	uint8_t *end, *end1;
+
+#if 1
+	/* Can be more than 4Gb, thus >8 chars, thus use a variable - don't assume 8! */
+	ofs_pos = sprintf(hex, "%08"OFF_FMT"x ", offset);
+#else
+	if (offset <= 0xffff)
+		ofs_pos = sprintf(hex, "%04"OFF_FMT"x ", offset);
+	else
+		ofs_pos = sprintf(hex, "%08"OFF_FMT"x ", offset);
+#endif
+	hex += ofs_pos;
+
+	text = hex + 16 * 3;
+	end1 = data + 15;
+	if ((G.size - offset) > 0) {
+		end = end1;
+		if ((G.size - offset) <= 15)
+			end = data + (G.size - offset) - 1;
+		while (data <= end) {
+			uint8_t c = *data++;
+			*hex++ = bb_hexdigits_upcase[c >> 4];
+			*hex++ = bb_hexdigits_upcase[c & 0xf];
+			*hex++ = ' ';
+			if (c < ' ' || c > 0x7e)
+				c = '.';
+			*text++ = c;
+		}
+	}
+	while (data <= end1) {
+		*hex++ = ' ';
+		*hex++ = ' ';
+		*hex++ = ' ';
+		*text++ = ' ';
+		data++;
+	}
+	*text = '\0';
+
+	return ofs_pos;
+}
+
+static void redraw(unsigned cursor)
+{
+	uint8_t *data;
+	off_t offset;
+	unsigned i, pos;
+
+	printf(HOME CLEAR);
+
+	/* if cursor is past end of screen, how many lines to move down? */
+	i = (cursor / 16) - G.height + 1;
+	if ((int)i < 0)
+		i = 0;
+
+	data = G.baseaddr + i * 16;
+	offset = G.offset + i * 16;
+	cursor -= i * 16;
+	pos = i = 0;
+	while (i < G.height) {
+		char buf[LINEBUF_SIZE];
+		pos = format_line(buf, data, offset);
+		printf(
+			"\r\n%s" + (!i) * 2, /* print \r\n only on 2nd line and later */
+			buf
+		);
+		data += 16;
+		offset += 16;
+		i++;
+	}
+
+	printf(ESC"[%u;%uH", 1 + cursor / 16, 1 + pos + (cursor & 0xf) * 3);
+}
+
+static void redraw_cur_line(void)
+{
+	char buf[LINEBUF_SIZE];
+	uint8_t *data;
+	off_t offset;
+	int column;
+
+	column = (0xf & (uintptr_t)G.current_byte);
+	data = G.current_byte - column;
+	offset = G.offset + (data - G.baseaddr);
+
+	column = column*3 + G.half;
+	column += format_line(buf, data, offset);
+	printf("%s"
+		"\r"
+		"%.*s",
+		buf + column,
+		column, buf
+	);
+}
+
+/* if remappers return 0, no change was done */
+static int remap(unsigned cur_pos)
+{
+	if (G.baseaddr)
+		munmap(G.baseaddr, G_mapsize);
+
+	G.baseaddr = mmap(NULL,
+		G_mapsize,
+		PROT_READ | PROT_WRITE,
+		MAP_SHARED,
+		G.fd,
+		G.offset
+	);
+	if (G.baseaddr == MAP_FAILED) {
+		restore_term();
+		bb_perror_msg_and_die("mmap");
+	}
+
+	G.current_byte = G.baseaddr + cur_pos;
+
+	G.eof_byte = G.baseaddr + G_mapsize;
+	if ((G.size - G.offset) < G_mapsize) {
+		/* mapping covers tail of the file */
+		/* we do have a mapped byte which is past eof */
+		G.eof_byte = G.baseaddr + (G.size - G.offset);
+	}
+	return 1;
+}
+static int move_mapping_further(void)
+{
+	unsigned pos;
+	unsigned pagesize;
+
+	if ((G.size - G.offset) < G_mapsize)
+		return 0; /* can't move mapping even further, it's at the end already */
+
+	pagesize = G_pagesize; /* constant on most arches */
+	pos = G.current_byte - G.baseaddr;
+	if (pos >= pagesize) {
+		/* move offset up until current position is in 1st page */
+		do {
+			G.offset += pagesize;
+			if (G.offset == 0) { /* whoops */
+				G.offset -= pagesize;
+				break;
+			}
+			pos -= pagesize;
+		} while (pos >= pagesize);
+		return remap(pos);
+	}
+	return 0;
+}
+static int move_mapping_lower(void)
+{
+	unsigned pos;
+	unsigned pagesize;
+
+	if (G.offset == 0)
+		return 0; /* we are at 0 already */
+
+	pagesize = G_pagesize; /* constant on most arches */
+	pos = G.current_byte - G.baseaddr;
+
+	/* move offset down until current position is in last page */
+	pos += pagesize;
+	while (pos < G_mapsize) {
+		pos += pagesize;
+		G.offset -= pagesize;
+		if (G.offset == 0)
+			break;
+	}
+	pos -= pagesize;
+
+	return remap(pos);
+}
+
+//usage:#define hexedit_trivial_usage
+//usage:	"FILE"
+//usage:#define hexedit_full_usage "\n\n"
+//usage:	"Edit FILE in hexadecimal"
+int hexedit_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
+int hexedit_main(int argc UNUSED_PARAM, char **argv)
+{
+	INIT_G();
+	INIT_PAGESIZE();
+
+	get_terminal_width_height(-1, NULL, &G.height);
+	if (1) {
+		/* reduce number of write() syscalls while PgUp/Down: fully buffered output */
+		unsigned sz = (G.height | 0xf) * LINEBUF_SIZE;
+		setvbuf(stdout, xmalloc(sz), _IOFBF, sz);
+	}
+
+	getopt32(argv, "^" "" "\0" "=1"/*one arg*/);
+	argv += optind;
+
+	G.fd = xopen(*argv, O_RDWR);
+	G.size = xlseek(G.fd, 0, SEEK_END);
+
+	/* TERMIOS_RAW_CRNL suppresses \n -> \r\n translation, helps with down-arrow */
+	printf(SET_ALT_SCR);
+	set_termios_to_raw(STDIN_FILENO, &G.orig_termios, TERMIOS_RAW_CRNL);
+	bb_signals(BB_FATAL_SIGS, sig_catcher);
+
+	remap(0);
+	redraw(0);
+
+//TODO: //Home/End: start/end of line; '<'/'>': start/end of file
+	//Backspace: undo
+	//Ctrl-L: redraw
+	//Ctrl-Z: suspend
+	//'/', Ctrl-S: search
+//TODO: detect window resize
+
+	for (;;) {
+		unsigned cnt;
+		int32_t key = key; /* for compiler */
+		uint8_t byte;
+
+		fflush_all();
+		G.in_read_key = 1;
+		if (!bb_got_signal)
+			key = read_key(STDIN_FILENO, G.read_key_buffer, -1);
+		G.in_read_key = 0;
+		if (bb_got_signal)
+			key = CTRL('X');
+
+		cnt = 1;
+		if ((unsigned)(key - 'A') <= 'Z' - 'A')
+			key |= 0x20; /* convert A-Z to a-z */
+		switch (key) {
+		case 'a': case 'b': case 'c': case 'd': case 'e': case 'f':
+			/* convert to '0'+10...15 */
+			key = key - ('a' - '0' - 10);
+			/* fall through */
+		case '0': case '1': case '2': case '3': case '4':
+		case '5': case '6': case '7': case '8': case '9':
+			if (G.current_byte == G.eof_byte) {
+				if (!move_mapping_further()) {
+					/* already at EOF; extend the file */
+					if (++G.size <= 0 /* overflow? */
+					 || ftruncate(G.fd, G.size) != 0 /* error extending? (e.g. block dev) */
+					) {
+						G.size--;
+						break;
+					}
+					G.eof_byte++;
+				}
+			}
+			key -= '0';
+			byte = *G.current_byte & 0xf0;
+			if (!G.half) {
+				byte = *G.current_byte & 0x0f;
+				key <<= 4;
+			}
+			*G.current_byte = byte + key;
+			/* can't just print one updated hex char: need to update right-hand ASCII too */
+			redraw_cur_line();
+			/* fall through */
+		case KEYCODE_RIGHT:
+			if (G.current_byte == G.eof_byte)
+				break; /* eof - don't allow going past it */
+			byte = *G.current_byte;
+			if (!G.half) {
+				G.half = 1;
+				putchar(bb_hexdigits_upcase[byte >> 4]);
+			} else {
+				G.half = 0;
+				G.current_byte++;
+				if ((0xf & (uintptr_t)G.current_byte) == 0) {
+					/* rightmost pos, wrap to next line */
+					if (G.current_byte == G.eof_byte)
+						move_mapping_further();
+					printf(ESC"[46D"); /* cursor left 3*15 + 1 chars */
+					goto down;
+				}
+				putchar(bb_hexdigits_upcase[byte & 0xf]);
+				putchar(' ');
+			}
+			break;
+		case KEYCODE_PAGEDOWN:
+			cnt = G.height;
+		case KEYCODE_DOWN:
+ k_down:
+			G.current_byte += 16;
+			if (G.current_byte >= G.eof_byte) {
+				move_mapping_further();
+				if (G.current_byte > G.eof_byte) {
+					/* _after_ eof - don't allow this */
+					G.current_byte -= 16;
+					break;
+				}
+			}
+ down:
+			putchar('\n'); /* down one line, possibly scroll screen */
+			G.row++;
+			if (G.row >= G.height) {
+				G.row--;
+				redraw_cur_line();
+			}
+			if (--cnt)
+				goto k_down;
+			break;
+
+		case KEYCODE_LEFT:
+			if (G.half) {
+				G.half = 0;
+				printf(ESC"[D");
+				break;
+			}
+			if ((0xf & (uintptr_t)G.current_byte) == 0) {
+				/* leftmost pos, wrap to prev line */
+				if (G.current_byte == G.baseaddr) {
+					if (!move_mapping_lower())
+						break; /* first line, don't do anything */
+				}
+				G.half = 1;
+				G.current_byte--;
+				printf(ESC"[46C"); /* cursor right 3*15 + 1 chars */
+				goto up;
+			}
+			G.half = 1;
+			G.current_byte--;
+			printf(ESC"[2D");
+			break;
+		case KEYCODE_PAGEUP:
+			cnt = G.height;
+		case KEYCODE_UP:
+ k_up:
+			if ((G.current_byte - G.baseaddr) < 16) {
+				if (!move_mapping_lower())
+					break; /* already at 0, stop */
+			}
+			G.current_byte -= 16;
+ up:
+			if (G.row != 0) {
+				G.row--;
+				printf(ESC"[A"); /* up (won't scroll) */
+			} else {
+				//printf(ESC"[T"); /* scroll up */ - not implemented on Linux VT!
+				printf(ESC"M"); /* scroll up */
+				redraw_cur_line();
+			}
+			if (--cnt)
+				goto k_up;
+			break;
+
+		case '\n':
+		case '\r':
+			/* [Enter]: goto specified position */
+			{
+				char buf[sizeof(G.offset)*3 + 4];
+				printf(ESC"[999;1H" CLEAR_TILL_EOL); /* go to last line */
+				if (read_line_input(NULL, "Go to (dec,0Xhex,0oct): ", buf, sizeof(buf)) > 0) {
+					off_t t;
+					unsigned cursor;
+
+					t = bb_strtoull(buf, NULL, 0);
+					if (t >= G.size)
+						t = G.size - 1;
+					cursor = t & (G_pagesize - 1);
+					t -= cursor;
+					if (t < 0)
+						cursor = t = 0;
+					if (t != 0 && cursor < 0x1ff) {
+						/* very close to end of page, possibly to EOF */
+						/* move one page lower */
+						t -= G_pagesize;
+						cursor += G_pagesize;
+					}
+					G.offset = t;
+					remap(cursor);
+					redraw(cursor);
+					break;
+				}
+				/* ^C/EOF/error: fall through to exiting */
+			}
+		case CTRL('X'):
+			restore_term();
+			return EXIT_SUCCESS;
+		} /* switch */
+	} /* for (;;) */
+
+	/* not reached */
+	return EXIT_SUCCESS;
+}
diff -urpN busybox-1.27.2/miscutils/i2c_tools.c busybox-1.28.0/miscutils/i2c_tools.c
--- busybox-1.27.2/miscutils/i2c_tools.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/i2c_tools.c	2017-10-05 11:53:08.000000000 +0200
@@ -8,40 +8,40 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config I2CGET
-//config:	bool "i2cget"
+//config:	bool "i2cget (5.6 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Read from I2C/SMBus chip registers.
+//config:	Read from I2C/SMBus chip registers.
 //config:
 //config:config I2CSET
-//config:	bool "i2cset"
+//config:	bool "i2cset (6.9 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Set I2C registers.
+//config:	Set I2C registers.
 //config:
 //config:config I2CDUMP
-//config:	bool "i2cdump"
+//config:	bool "i2cdump (7.2 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Examine I2C registers.
+//config:	Examine I2C registers.
 //config:
 //config:config I2CDETECT
-//config:	bool "i2cdetect"
+//config:	bool "i2cdetect (7.2 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Detect I2C chips.
+//config:	Detect I2C chips.
 //config:
 
 //applet:IF_I2CGET(APPLET(i2cget, BB_DIR_USR_SBIN, BB_SUID_DROP))
 //applet:IF_I2CSET(APPLET(i2cset, BB_DIR_USR_SBIN, BB_SUID_DROP))
 //applet:IF_I2CDUMP(APPLET(i2cdump, BB_DIR_USR_SBIN, BB_SUID_DROP))
 //applet:IF_I2CDETECT(APPLET(i2cdetect, BB_DIR_USR_SBIN, BB_SUID_DROP))
+/* not NOEXEC: if hw operation stalls, use less memory in "hung" process */
 
 //kbuild:lib-$(CONFIG_I2CGET) += i2c_tools.o
 //kbuild:lib-$(CONFIG_I2CSET) += i2c_tools.o
@@ -60,10 +60,8 @@
  */
 
 #include "libbb.h"
-#include "common_bufsiz.h"
 
 #include <linux/i2c.h>
-#include <linux/i2c-dev.h>
 
 #define I2CDUMP_NUM_REGS		256
 
@@ -71,6 +69,25 @@
 #define I2CDETECT_MODE_QUICK		1
 #define I2CDETECT_MODE_READ		2
 
+/* linux/i2c-dev.h from i2c-tools overwrites the one from linux uapi
+ * and defines symbols already defined by linux/i2c.h.
+ * Also, it defines a bunch of static inlines which we would rather NOT
+ * inline. What a mess.
+ * We need only these definitions from linux/i2c-dev.h:
+ */
+#define I2C_SLAVE			0x0703
+#define I2C_SLAVE_FORCE			0x0706
+#define I2C_FUNCS			0x0705
+#define I2C_PEC				0x0708
+#define I2C_SMBUS			0x0720
+struct i2c_smbus_ioctl_data {
+	__u8 read_write;
+	__u8 command;
+	__u32 size;
+	union i2c_smbus_data *data;
+};
+/* end linux/i2c-dev.h */
+
 /*
  * This is needed for ioctl_or_perror_and_die() since it only accepts pointers.
  */
@@ -437,31 +454,30 @@ static void confirm_action(int bus_addr,
 
 #if ENABLE_I2CGET
 //usage:#define i2cget_trivial_usage
-//usage:       "[-f] [-y] BUS CHIP-ADDRESS [DATA-ADDRESS [MODE]]"
+//usage:       "[-fy] BUS CHIP-ADDRESS [DATA-ADDRESS [MODE]]"
 //usage:#define i2cget_full_usage "\n\n"
-//usage:       "Read from I2C/SMBus chip registers\n"
-//usage:     "\n	I2CBUS	i2c bus number"
-//usage:     "\n	ADDRESS	0x03 - 0x77"
+//usage:       "Read from I2C/SMBus chip registers"
+//usage:     "\n"
+//usage:     "\n	I2CBUS	I2C bus number"
+//usage:     "\n	ADDRESS	0x03-0x77"
 //usage:     "\nMODE is:"
-//usage:     "\n	b	read byte data (default)"
-//usage:     "\n	w	read word data"
-//usage:     "\n	c	write byte/read byte"
+//usage:     "\n	b	Read byte data (default)"
+//usage:     "\n	w	Read word data"
+//usage:     "\n	c	Write byte/read byte"
 //usage:     "\n	Append p for SMBus PEC"
 //usage:     "\n"
-//usage:     "\n	-f	force access"
-//usage:     "\n	-y	disable interactive mode"
+//usage:     "\n	-f	Force access"
+//usage:     "\n	-y	Disable interactive mode"
 int i2cget_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int i2cget_main(int argc UNUSED_PARAM, char **argv)
 {
 	const unsigned opt_f = (1 << 0), opt_y = (1 << 1);
-	const char *const optstr = "fy";
 
 	int bus_num, bus_addr, data_addr = -1, status;
 	int mode = I2C_SMBUS_BYTE, pec = 0, fd;
 	unsigned opts;
 
-        opt_complementary = "-2:?4"; /* from 2 to 4 args */
-	opts = getopt32(argv, optstr);
+	opts = getopt32(argv, "^" "fy" "\0" "-2:?4"/*from 2 to 4 args*/);
 	argv += optind;
 
 	bus_num = i2c_bus_lookup(argv[0]);
@@ -521,40 +537,44 @@ int i2cget_main(int argc UNUSED_PARAM, c
 
 #if ENABLE_I2CSET
 //usage:#define i2cset_trivial_usage
-//usage:       "[-f] [-y] [-m MASK] BUS CHIP-ADDR DATA-ADDR [VALUE] ... [MODE]"
+//usage:       "[-fy] [-m MASK] BUS CHIP-ADDRESS DATA-ADDRESS [VALUE] ... [MODE]"
 //usage:#define i2cset_full_usage "\n\n"
-//usage:       "Set I2C registers\n"
-//usage:     "\n	I2CBUS	i2c bus number"
-//usage:     "\n	ADDRESS	0x03 - 0x77"
+//usage:       "Set I2C registers"
+//usage:     "\n"
+//usage:     "\n	I2CBUS	I2C bus number"
+//usage:     "\n	ADDRESS	0x03-0x77"
 //usage:     "\nMODE is:"
-//usage:     "\n	c	byte, no value"
-//usage:     "\n	b	byte data (default)"
-//usage:     "\n	w	word data"
+//usage:     "\n	c	Byte, no value"
+//usage:     "\n	b	Byte data (default)"
+//usage:     "\n	w	Word data"
 //usage:     "\n	i	I2C block data"
 //usage:     "\n	s	SMBus block data"
 //usage:     "\n	Append p for SMBus PEC"
 //usage:     "\n"
-//usage:     "\n	-f	force access"
-//usage:     "\n	-y	disable interactive mode"
-//usage:     "\n	-r	read back and compare the result"
-//usage:     "\n	-m MASK	mask specifying which bits to write"
+//usage:     "\n	-f	Force access"
+//usage:     "\n	-y	Disable interactive mode"
+//usage:     "\n	-r	Read back and compare the result"
+//usage:     "\n	-m MASK	Mask specifying which bits to write"
 int i2cset_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int i2cset_main(int argc, char **argv)
 {
 	const unsigned opt_f = (1 << 0), opt_y = (1 << 1),
 			      opt_m = (1 << 2), opt_r = (1 << 3);
-	const char *const optstr = "fym:r";
 
 	int bus_num, bus_addr, data_addr, mode = I2C_SMBUS_BYTE, pec = 0;
-	int val, blen = 0, mask = 0, fd, status;
+	int val, blen, mask, fd, status;
 	unsigned char block[I2C_SMBUS_BLOCK_MAX];
 	char *opt_m_arg = NULL;
 	unsigned opts;
 
-        opt_complementary = "-3"; /* from 3 to ? args */
-	opts = getopt32(argv, optstr, &opt_m_arg);
+	opts = getopt32(argv, "^"
+		"fym:r"
+		"\0" "-3", /* minimum 3 args */
+		&opt_m_arg
+	);
 	argv += optind;
 	argc -= optind;
+	argc--; /* now argv[argc] is last arg */
 
 	bus_num = i2c_bus_lookup(argv[0]);
 	bus_addr = i2c_parse_bus_addr(argv[1]);
@@ -564,20 +584,26 @@ int i2cset_main(int argc, char **argv)
 		if (!argv[4] && argv[3][0] != 'c') {
 			mode = I2C_SMBUS_BYTE_DATA; /* Implicit b */
 		} else {
-			switch (argv[argc-1][0]) {
-			case 'c': /* Already set */			break;
-			case 'b': mode = I2C_SMBUS_BYTE_DATA;		break;
-			case 'w': mode = I2C_SMBUS_WORD_DATA;		break;
-			case 's': mode = I2C_SMBUS_BLOCK_DATA;		break;
-			case 'i': mode = I2C_SMBUS_I2C_BLOCK_DATA;	break;
+			switch (argv[argc][0]) {
+			case 'c': /* Already set */
+				break;
+			case 'b': mode = I2C_SMBUS_BYTE_DATA;
+				break;
+			case 'w': mode = I2C_SMBUS_WORD_DATA;
+				break;
+			case 's': mode = I2C_SMBUS_BLOCK_DATA;
+				break;
+			case 'i': mode = I2C_SMBUS_I2C_BLOCK_DATA;
+				break;
 			default:
 				bb_error_msg("invalid mode");
 				bb_show_usage();
 			}
 
-			pec = argv[argc-1][1] == 'p';
-			if (mode == I2C_SMBUS_BLOCK_DATA ||
-					mode == I2C_SMBUS_I2C_BLOCK_DATA) {
+			pec = (argv[argc][1] == 'p');
+			if (mode == I2C_SMBUS_BLOCK_DATA
+			 || mode == I2C_SMBUS_I2C_BLOCK_DATA
+			) {
 				if (pec && mode == I2C_SMBUS_I2C_BLOCK_DATA)
 					bb_error_msg_and_die(
 						"PEC not supported for I2C "
@@ -591,6 +617,8 @@ int i2cset_main(int argc, char **argv)
 	}
 
 	/* Prepare the value(s) to be written according to current mode. */
+	mask = 0;
+	blen = 0;
 	switch (mode) {
 	case I2C_SMBUS_BYTE_DATA:
 		val = xstrtou_range(argv[3], 0, 0, 0xff);
@@ -600,8 +628,9 @@ int i2cset_main(int argc, char **argv)
 		break;
 	case I2C_SMBUS_BLOCK_DATA:
 	case I2C_SMBUS_I2C_BLOCK_DATA:
-		for (blen = 3; blen < (argc - 1); blen++)
-			block[blen] = xstrtou_range(argv[blen], 0, 0, 0xff);
+		for (blen = 3; blen < argc; blen++)
+			block[blen - 3] = xstrtou_range(argv[blen], 0, 0, 0xff);
+		blen -= 3;
 		val = -1;
 		break;
 	default:
@@ -882,29 +911,29 @@ static void dump_word_data(int bus_fd, u
 }
 
 //usage:#define i2cdump_trivial_usage
-//usage:       "[-f] [-r FIRST-LAST] [-y] BUS ADDR [MODE]"
+//usage:       "[-fy] [-r FIRST-LAST] BUS ADDR [MODE]"
 //usage:#define i2cdump_full_usage "\n\n"
-//usage:       "Examine I2C registers\n"
-//usage:     "\n	I2CBUS	i2c bus number"
-//usage:     "\n	ADDRESS	0x03 - 0x77"
+//usage:       "Examine I2C registers"
+//usage:     "\n"
+//usage:     "\n	I2CBUS	I2C bus number"
+//usage:     "\n	ADDRESS	0x03-0x77"
 //usage:     "\nMODE is:"
-//usage:     "\n	b	byte (default)"
-//usage:     "\n	w	word"
-//usage:     "\n	W	word on even register addresses"
+//usage:     "\n	b	Byte (default)"
+//usage:     "\n	w	Word"
+//usage:     "\n	W	Word on even register addresses"
 //usage:     "\n	i	I2C block"
 //usage:     "\n	s	SMBus block"
-//usage:     "\n	c	consecutive byte"
+//usage:     "\n	c	Consecutive byte"
 //usage:     "\n	Append p for SMBus PEC"
 //usage:     "\n"
-//usage:     "\n	-f	force access"
-//usage:     "\n	-y	disable interactive mode"
-//usage:     "\n	-r	limit the number of registers being accessed"
+//usage:     "\n	-f	Force access"
+//usage:     "\n	-y	Disable interactive mode"
+//usage:     "\n	-r	Limit the number of registers being accessed"
 int i2cdump_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int i2cdump_main(int argc UNUSED_PARAM, char **argv)
 {
 	const unsigned opt_f = (1 << 0), opt_y = (1 << 1),
 			      opt_r = (1 << 2);
-	const char *const optstr = "fyr:";
 
 	int bus_num, bus_addr, mode = I2C_SMBUS_BYTE_DATA, even = 0, pec = 0;
 	unsigned first = 0x00, last = 0xff, opts;
@@ -912,8 +941,11 @@ int i2cdump_main(int argc UNUSED_PARAM,
 	char *opt_r_str, *dash;
 	int fd, res;
 
-        opt_complementary = "-2:?3"; /* from 2 to 3 args */
-	opts = getopt32(argv, optstr, &opt_r_str);
+	opts = getopt32(argv, "^"
+		"fyr:"
+		"\0" "-2:?3" /* from 2 to 3 args */,
+		&opt_r_str
+	);
 	argv += optind;
 
 	bus_num = i2c_bus_lookup(argv[0]);
@@ -1189,33 +1221,34 @@ static void will_skip(const char *cmd)
 }
 
 //usage:#define i2cdetect_trivial_usage
-//usage:       "[-F I2CBUS] [-l] [-y] [-a] [-q|-r] I2CBUS [FIRST LAST]"
+//usage:       "-l | -F I2CBUS | [-ya] [-q|-r] I2CBUS [FIRST LAST]"
 //usage:#define i2cdetect_full_usage "\n\n"
-//usage:       "Detect I2C chips.\n"
-//usage:     "\n	I2CBUS	i2c bus number"
-//usage:     "\n	FIRST and LAST limit the probing range"
+//usage:       "Detect I2C chips"
 //usage:     "\n"
-//usage:     "\n	-l	output list of installed busses"
-//usage:     "\n	-y	disable interactive mode"
-//usage:     "\n	-a	force scanning of non-regular addresses"
-//usage:     "\n	-q	use smbus quick write commands for probing (default)"
-//usage:     "\n	-r	use smbus read byte commands for probing"
-//usage:     "\n	-F	display list of functionalities"
+//usage:     "\n	-l	List installed buses"
+//usage:     "\n	-F BUS#	List functionalities on this bus"
+//usage:     "\n	-y	Disable interactive mode"
+//usage:     "\n	-a	Force scanning of non-regular addresses"
+//usage:     "\n	-q	Use smbus quick write commands for probing (default)"
+//usage:     "\n	-r	Use smbus read byte commands for probing"
+//usage:     "\n	FIRST and LAST limit probing range"
 int i2cdetect_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int i2cdetect_main(int argc UNUSED_PARAM, char **argv)
 {
 	const unsigned opt_y = (1 << 0), opt_a = (1 << 1),
 			      opt_q = (1 << 2), opt_r = (1 << 3),
 			      opt_F = (1 << 4), opt_l = (1 << 5);
-	const char *const optstr = "yaqrFl";
 
 	int fd, bus_num, i, j, mode = I2CDETECT_MODE_AUTO, status, cmd;
 	unsigned first = 0x03, last = 0x77, opts;
 	unsigned long funcs;
 
-	opt_complementary = "q--r:r--q:" /* mutually exclusive */
-			"?3"; /* up to 3 args */
-	opts = getopt32(argv, optstr);
+	opts = getopt32(argv, "^"
+			"yaqrFl"
+			"\0"
+			"q--r:r--q:"/*mutually exclusive*/
+			"?3"/*up to 3 args*/
+	);
 	argv += optind;
 
 	if (opts & opt_l)
diff -urpN busybox-1.27.2/miscutils/inotifyd.c busybox-1.28.0/miscutils/inotifyd.c
--- busybox-1.27.2/miscutils/inotifyd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/inotifyd.c	2017-07-24 18:57:09.000000000 +0200
@@ -27,11 +27,11 @@
  * See below for mask names explanation.
  */
 //config:config INOTIFYD
-//config:	bool "inotifyd"
+//config:	bool "inotifyd (3.5 kb)"
 //config:	default n  # doesn't build on Knoppix 5
 //config:	help
-//config:	  Simple inotify daemon. Reports filesystem changes. Requires
-//config:	  kernel >= 2.6.13
+//config:	Simple inotify daemon. Reports filesystem changes. Requires
+//config:	kernel >= 2.6.13
 
 //applet:IF_INOTIFYD(APPLET(inotifyd, BB_DIR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/miscutils/less.c busybox-1.28.0/miscutils/less.c
--- busybox-1.27.2/miscutils/less.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/less.c	2017-10-05 11:53:08.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 /*
  * TODO:
  * - Add more regular expression support - search modifiers, certain matches, etc.
@@ -20,13 +19,12 @@
  * - the inp file pointer is used so that keyboard input works after
  *   redirected input has been read from stdin
  */
-
 //config:config LESS
-//config:	bool "less"
+//config:	bool "less (15 kb)"
 //config:	default y
 //config:	help
-//config:	  'less' is a pager, meaning that it displays text files. It possesses
-//config:	  a wide array of features, and is an improvement over 'more'.
+//config:	'less' is a pager, meaning that it displays text files. It possesses
+//config:	a wide array of features, and is an improvement over 'more'.
 //config:
 //config:config FEATURE_LESS_MAXLINES
 //config:	int "Max number of input lines less will try to eat"
@@ -38,64 +36,64 @@
 //config:	default y
 //config:	depends on LESS
 //config:	help
-//config:	  This option adds the capability to search for matching left and right
-//config:	  brackets, facilitating programming.
+//config:	This option adds the capability to search for matching left and right
+//config:	brackets, facilitating programming.
 //config:
 //config:config FEATURE_LESS_FLAGS
 //config:	bool "Enable -m/-M"
 //config:	default y
 //config:	depends on LESS
 //config:	help
-//config:	  The -M/-m flag enables a more sophisticated status line.
+//config:	The -M/-m flag enables a more sophisticated status line.
 //config:
 //config:config FEATURE_LESS_TRUNCATE
 //config:	bool "Enable -S"
 //config:	default y
 //config:	depends on LESS
 //config:	help
-//config:	  The -S flag causes long lines to be truncated rather than
-//config:	  wrapped.
+//config:	The -S flag causes long lines to be truncated rather than
+//config:	wrapped.
 //config:
 //config:config FEATURE_LESS_MARKS
 //config:	bool "Enable marks"
 //config:	default y
 //config:	depends on LESS
 //config:	help
-//config:	  Marks enable positions in a file to be stored for easy reference.
+//config:	Marks enable positions in a file to be stored for easy reference.
 //config:
 //config:config FEATURE_LESS_REGEXP
 //config:	bool "Enable regular expressions"
 //config:	default y
 //config:	depends on LESS
 //config:	help
-//config:	  Enable regular expressions, allowing complex file searches.
+//config:	Enable regular expressions, allowing complex file searches.
 //config:
 //config:config FEATURE_LESS_WINCH
 //config:	bool "Enable automatic resizing on window size changes"
 //config:	default y
 //config:	depends on LESS
 //config:	help
-//config:	  Makes less track window size changes.
+//config:	Makes less track window size changes.
 //config:
 //config:config FEATURE_LESS_ASK_TERMINAL
 //config:	bool "Use 'tell me cursor position' ESC sequence to measure window"
 //config:	default y
 //config:	depends on FEATURE_LESS_WINCH
 //config:	help
-//config:	  Makes less track window size changes.
-//config:	  If terminal size can't be retrieved and $LINES/$COLUMNS are not set,
-//config:	  this option makes less perform a last-ditch effort to find it:
-//config:	  position cursor to 999,999 and ask terminal to report real
-//config:	  cursor position using "ESC [ 6 n" escape sequence, then read stdin.
-//config:	  This is not clean but helps a lot on serial lines and such.
+//config:	Makes less track window size changes.
+//config:	If terminal size can't be retrieved and $LINES/$COLUMNS are not set,
+//config:	this option makes less perform a last-ditch effort to find it:
+//config:	position cursor to 999,999 and ask terminal to report real
+//config:	cursor position using "ESC [ 6 n" escape sequence, then read stdin.
+//config:	This is not clean but helps a lot on serial lines and such.
 //config:
 //config:config FEATURE_LESS_DASHCMD
 //config:	bool "Enable flag changes ('-' command)"
 //config:	default y
 //config:	depends on LESS
 //config:	help
-//config:	  This enables the ability to change command-line flags within
-//config:	  less itself ('-' keyboard command).
+//config:	This enables the ability to change command-line flags within
+//config:	less itself ('-' keyboard command).
 //config:
 //config:config FEATURE_LESS_LINENUMS
 //config:	bool "Enable -N (dynamic switching of line numbers)"
@@ -137,9 +135,9 @@
 #define ESC "\033"
 /* The escape codes for highlighted and normal text */
 #define HIGHLIGHT   ESC"[7m"
-#define NORMAL      ESC"[0m"
+#define NORMAL      ESC"[m"
 /* The escape code to home and clear to the end of screen */
-#define CLEAR       ESC"[H\033[J"
+#define CLEAR       ESC"[H"ESC"[J"
 /* The escape code to clear to the end of line */
 #define CLEAR_2_EOL ESC"[K"
 
@@ -281,9 +279,9 @@ static void set_tty_cooked(void)
 
 /* Move the cursor to a position (x,y), where (0,0) is the
    top-left corner of the console */
-static void move_cursor(int line, int row)
+static void move_cursor(int line, int col)
 {
-	printf(ESC"[%u;%uH", line, row);
+	printf(ESC"[%u;%uH", line, col);
 }
 
 static void clear_line(void)
@@ -1042,7 +1040,7 @@ static void reinitialize(void)
 	open_file_and_read_lines();
 #if ENABLE_FEATURE_LESS_ASK_TERMINAL
 	if (G.winsize_err)
-		printf("\033[999;999H" "\033[6n");
+		printf(ESC"[999;999H" ESC"[6n");
 #endif
 	buffer_fill_and_print();
 }
@@ -1103,7 +1101,7 @@ static int64_t getch_nowait(void)
 			goto again;
 		}
 		/* EOF/error (ssh session got killed etc) */
-		less_exit(0);
+		less_exit(EXIT_SUCCESS);
 	}
 	set_tty_cooked();
 	return key64;
@@ -1824,15 +1822,9 @@ int less_main(int argc, char **argv)
 	G.kbd_fd_orig_flags = ndelay_on(tty_fd);
 	kbd_fd = tty_fd; /* save in a global */
 
-	tcgetattr(kbd_fd, &term_orig);
-	term_less = term_orig;
-	term_less.c_lflag &= ~(ICANON | ECHO);
-	term_less.c_iflag &= ~(IXON | ICRNL);
-	/*term_less.c_oflag &= ~ONLCR;*/
-	term_less.c_cc[VMIN] = 1;
-	term_less.c_cc[VTIME] = 0;
+	get_termios_and_make_raw(tty_fd, &term_less, &term_orig, TERMIOS_RAW_CRNL);
 
-	IF_FEATURE_LESS_ASK_TERMINAL(G.winsize_err =) get_terminal_width_height(kbd_fd, &width, &max_displayed_line);
+	IF_FEATURE_LESS_ASK_TERMINAL(G.winsize_err =) get_terminal_width_height(tty_fd, &width, &max_displayed_line);
 	/* 20: two tabstops + 4 */
 	if (width < 20 || max_displayed_line < 3)
 		return bb_cat(argv);
diff -urpN busybox-1.27.2/miscutils/lsscsi.c busybox-1.28.0/miscutils/lsscsi.c
--- busybox-1.27.2/miscutils/lsscsi.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/lsscsi.c	2017-12-04 16:07:47.000000000 +0100
@@ -7,16 +7,16 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config LSSCSI
-//config:	bool "lsscsi"
+//config:	bool "lsscsi (2.4 kb)"
 //config:	default y
 //config:	#select PLATFORM_LINUX
 //config:	help
-//config:	  lsscsi is a utility for displaying information about SCSI buses in the
-//config:	  system and devices connected to them.
+//config:	lsscsi is a utility for displaying information about SCSI buses in the
+//config:	system and devices connected to them.
 //config:
-//config:	  This version uses sysfs (/sys/bus/scsi/devices) only.
+//config:	This version uses sysfs (/sys/bus/scsi/devices) only.
 
-//applet:IF_LSSCSI(APPLET(lsscsi, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_LSSCSI(APPLET_NOEXEC(lsscsi, lsscsi, BB_DIR_USR_BIN, BB_SUID_DROP, lsscsi))
 
 //kbuild:lib-$(CONFIG_LSSCSI) += lsscsi.o
 
@@ -25,6 +25,8 @@
 
 #include "libbb.h"
 
+static const char scsi_dir[] ALIGN1 = "/sys/bus/scsi/devices";
+
 static char *get_line(const char *filename, char *buf, unsigned *bufsize_p)
 {
 	unsigned bufsize = *bufsize_p;
@@ -37,9 +39,8 @@ static char *get_line(const char *filena
 	if (sz < 0)
 		sz = 0;
 	buf[sz] = '\0';
-	trim(buf);
 
-	sz = strlen(buf) + 1;
+	sz = (trim(buf) - buf) + 1;
 	bufsize -= sz;
 	buf += sz;
 	buf[0] = '\0';
@@ -54,7 +55,7 @@ int lsscsi_main(int argc UNUSED_PARAM, c
 	struct dirent *de;
 	DIR *dir;
 
-	xchdir("/sys/bus/scsi/devices");
+	xchdir(scsi_dir);
 
 	dir = xopendir(".");
 	while ((de = readdir(dir)) != NULL) {
@@ -113,7 +114,10 @@ int lsscsi_main(int argc UNUSED_PARAM, c
 		);
 		/* TODO: also output device column, e.g. "/dev/sdX" */
 
-		xchdir("..");
+		/* chdir("..") may not work as expected,
+		 * since we might have followed a symlink.
+		 */
+		xchdir(scsi_dir);
 	}
 
 	if (ENABLE_FEATURE_CLEAN_UP)
diff -urpN busybox-1.27.2/miscutils/makedevs.c busybox-1.28.0/miscutils/makedevs.c
--- busybox-1.27.2/miscutils/makedevs.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/miscutils/makedevs.c	2017-08-17 13:50:45.000000000 +0200
@@ -7,23 +7,23 @@
  * known bugs: can't deal with alpha ranges
  */
 //config:config MAKEDEVS
-//config:	bool "makedevs"
+//config:	bool "makedevs (9.3 kb)"
 //config:	default y
 //config:	help
-//config:	  'makedevs' is a utility used to create a batch of devices with
-//config:	  one command.
+//config:	'makedevs' is a utility used to create a batch of devices with
+//config:	one command.
 //config:
-//config:	  There are two choices for command line behaviour, the interface
-//config:	  as used by LEAF/Linux Router Project, or a device table file.
+//config:	There are two choices for command line behaviour, the interface
+//config:	as used by LEAF/Linux Router Project, or a device table file.
 //config:
-//config:	  'leaf' is traditionally what busybox follows, it allows multiple
-//config:	  devices of a particluar type to be created per command.
-//config:	  e.g. /dev/hda[0-9]
-//config:	  Device properties are passed as command line arguments.
+//config:	'leaf' is traditionally what busybox follows, it allows multiple
+//config:	devices of a particluar type to be created per command.
+//config:	e.g. /dev/hda[0-9]
+//config:	Device properties are passed as command line arguments.
 //config:
-//config:	  'table' reads device properties from a file or stdin, allowing
-//config:	  a batch of unrelated devices to be made with one command.
-//config:	  User/group names are allowed as an alternative to uid/gid.
+//config:	'table' reads device properties from a file or stdin, allowing
+//config:	a batch of unrelated devices to be made with one command.
+//config:	User/group names are allowed as an alternative to uid/gid.
 //config:
 //config:choice
 //config:	prompt "Choose makedevs behaviour"
@@ -38,7 +38,7 @@
 //config:
 //config:endchoice
 
-//applet:IF_MAKEDEVS(APPLET(makedevs, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_MAKEDEVS(APPLET_NOEXEC(makedevs, makedevs, BB_DIR_SBIN, BB_SUID_DROP, makedevs))
 
 //kbuild:lib-$(CONFIG_MAKEDEVS) += makedevs.o
 
@@ -183,8 +183,7 @@ int makedevs_main(int argc UNUSED_PARAM,
 	char *line = (char *)"-";
 	int ret = EXIT_SUCCESS;
 
-	opt_complementary = "=1"; /* exactly one param */
-	getopt32(argv, "d:", &line);
+	getopt32(argv, "^" "d:" "\0" "=1", &line);
 	argv += optind;
 
 	xchdir(*argv); /* ensure root dir exists */
@@ -208,17 +207,17 @@ int makedevs_main(int argc UNUSED_PARAM,
 		unsigned count = 0;
 		unsigned increment = 0;
 		unsigned start = 0;
-		char name[41];
 		char user[41];
 		char group[41];
-		char *full_name = name;
+		char *full_name;
+		int name_len;
 		uid_t uid;
 		gid_t gid;
 
 		linenum = parser->lineno;
 
-		if ((2 > sscanf(line, "%40s %c %o %40s %40s %u %u %u %u %u",
-					name, &type, &mode, user, group,
+		if ((1 > sscanf(line, "%*s%n %c %o %40s %40s %u %u %u %u %u",
+					&name_len, &type, &mode, user, group,
 					&major, &minor, &start, &increment, &count))
 		 || ((unsigned)(major | minor | start | count | increment) > 255)
 		) {
@@ -229,9 +228,11 @@ int makedevs_main(int argc UNUSED_PARAM,
 
 		gid = (*group) ? get_ug_id(group, xgroup2gid) : getgid();
 		uid = (*user) ? get_ug_id(user, xuname2uid) : getuid();
+		line[name_len] = '\0';
+		full_name = line;
 		/* We are already in the right root dir,
 		 * so make absolute paths relative */
-		if ('/' == *full_name)
+		if ('/' == full_name[0])
 			full_name++;
 
 		if (type == 'd') {
@@ -260,9 +261,7 @@ int makedevs_main(int argc UNUSED_PARAM,
 			if (chmod(full_name, mode) < 0)
 				goto chmod_fail;
 		} else {
-			dev_t rdev;
 			unsigned i;
-			char *full_name_inc;
 
 			if (type == 'p') {
 				mode |= S_IFIFO;
@@ -276,26 +275,29 @@ int makedevs_main(int argc UNUSED_PARAM,
 				continue;
 			}
 
-			full_name_inc = xmalloc(strlen(full_name) + sizeof(int)*3 + 2);
-			if (count)
+			if (count != 0)
 				count--;
-			for (i = start; i <= start + count; i++) {
-				sprintf(full_name_inc, count ? "%s%u" : "%s", full_name, i);
-				rdev = makedev(major, minor + (i - start) * increment);
-				if (mknod(full_name_inc, mode, rdev) != 0
+			for (i = 0; i <= count; i++) {
+				dev_t rdev;
+				char *nameN = full_name;
+				if (count != 0)
+					nameN = xasprintf("%s%u", full_name, start + i);
+				rdev = makedev(major, minor + i * increment);
+				if (mknod(nameN, mode, rdev) != 0
 				 && errno != EEXIST
 				) {
-					bb_perror_msg("line %d: can't create node %s", linenum, full_name_inc);
+					bb_perror_msg("line %d: can't create node %s", linenum, nameN);
 					ret = EXIT_FAILURE;
-				} else if (chown(full_name_inc, uid, gid) < 0) {
-					bb_perror_msg("line %d: can't chown %s", linenum, full_name_inc);
+				} else if (chown(nameN, uid, gid) < 0) {
+					bb_perror_msg("line %d: can't chown %s", linenum, nameN);
 					ret = EXIT_FAILURE;
-				} else if (chmod(full_name_inc, mode) < 0) {
-					bb_perror_msg("line %d: can't chmod %s", linenum, full_name_inc);
+				} else if (chmod(nameN, mode) < 0) {
+					bb_perror_msg("line %d: can't chmod %s", linenum, nameN);
 					ret = EXIT_FAILURE;
 				}
+				if (count != 0)
+					free(nameN);
 			}
-			free(full_name_inc);
 		}
 	}
 	if (ENABLE_FEATURE_CLEAN_UP)
diff -urpN busybox-1.27.2/miscutils/man.c busybox-1.28.0/miscutils/man.c
--- busybox-1.27.2/miscutils/man.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/man.c	2017-08-17 13:50:45.000000000 +0200
@@ -3,10 +3,10 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config MAN
-//config:	bool "man"
+//config:	bool "man (27 kb)"
 //config:	default y
 //config:	help
-//config:	  Format and display manual pages.
+//config:	Format and display manual pages.
 
 //applet:IF_MAN(APPLET(man, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -253,8 +253,7 @@ int man_main(int argc UNUSED_PARAM, char
 
 	INIT_G();
 
-	opt_complementary = "-1"; /* at least one argument */
-	opt = getopt32(argv, "+aw");
+	opt = getopt32(argv, "^+" "aw" "\0" "-1"/*at least one arg*/);
 	argv += optind;
 
 	sec_list = xstrdup("0p:1:1p:2:3:3p:4:5:6:7:8:9");
diff -urpN busybox-1.27.2/miscutils/microcom.c busybox-1.28.0/miscutils/microcom.c
--- busybox-1.27.2/miscutils/microcom.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/microcom.c	2017-10-05 11:53:08.000000000 +0200
@@ -8,10 +8,10 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config MICROCOM
-//config:	bool "microcom"
+//config:	bool "microcom (5.6 kb)"
 //config:	default y
 //config:	help
-//config:	  The poor man's minicom utility for chatting with serial port devices.
+//config:	The poor man's minicom utility for chatting with serial port devices.
 
 //applet:IF_MICROCOM(APPLET(microcom, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -33,15 +33,11 @@
 // set raw tty mode
 static void xget1(int fd, struct termios *t, struct termios *oldt)
 {
-//TODO: use set_termios_to_raw()
-	tcgetattr(fd, oldt);
-	*t = *oldt;
-	cfmakeraw(t);
-//	t->c_lflag &= ~(ISIG|ICANON|ECHO|IEXTEN);
-//	t->c_iflag &= ~(BRKINT|IXON|ICRNL);
-//	t->c_oflag &= ~(ONLCR);
-//	t->c_cc[VMIN]  = 1;
-//	t->c_cc[VTIME] = 0;
+	get_termios_and_make_raw(fd, t, oldt, 0
+		| TERMIOS_CLEAR_ISIG /* ^C is ASCII char 3, not "interrupt me!" */
+		| TERMIOS_RAW_INPUT /* pass all chars verbatim, no special handling or translating CR->NL */
+		| TERMIOS_RAW_CRNL  /* dont convert NL<->CR on output too */
+	);
 }
 
 static int xset1(int fd, struct termios *tio, const char *device)
@@ -74,7 +70,9 @@ int microcom_main(int argc UNUSED_PARAM,
 	unsigned opts;
 
 	// fetch options
-	opts = getopt32(argv, "Xs:+d:+t:+", &speed, &delay, &timeout);
+	opts = getopt32(argv, "^" "Xs:+d:+t:+" "\0" "=1",
+				&speed, &delay, &timeout
+	);
 //	argc -= optind;
 	argv += optind;
 
diff -urpN busybox-1.27.2/miscutils/mt.c busybox-1.28.0/miscutils/mt.c
--- busybox-1.27.2/miscutils/mt.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/mt.c	2017-07-24 18:57:09.000000000 +0200
@@ -3,12 +3,12 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config MT
-//config:	bool "mt"
+//config:	bool "mt (2.6 kb)"
 //config:	default y
 //config:	help
-//config:	  mt is used to control tape devices. You can use the mt utility
-//config:	  to advance or rewind a tape past a specified number of archive
-//config:	  files on the tape.
+//config:	mt is used to control tape devices. You can use the mt utility
+//config:	to advance or rewind a tape past a specified number of archive
+//config:	files on the tape.
 
 //applet:IF_MT(APPLET(mt, BB_DIR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/miscutils/nandwrite.c busybox-1.28.0/miscutils/nandwrite.c
--- busybox-1.27.2/miscutils/nandwrite.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/nandwrite.c	2017-10-05 11:53:08.000000000 +0200
@@ -7,20 +7,19 @@
  *
  * TODO: add support for large (>4GB) MTD devices
  */
-
 //config:config NANDWRITE
-//config:	bool "nandwrite"
+//config:	bool "nandwrite (5.9 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Write to the specified MTD device, with bad blocks awareness
+//config:	Write to the specified MTD device, with bad blocks awareness
 //config:
 //config:config NANDDUMP
-//config:	bool "nanddump"
+//config:	bool "nanddump (6.3 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Dump the content of raw NAND chip
+//config:	Dump the content of raw NAND chip
 
 //applet:IF_NANDWRITE(APPLET(nandwrite, BB_DIR_USR_SBIN, BB_SUID_DROP))
 //applet:IF_NANDDUMP(APPLET_ODDNAME(nanddump, nandwrite, BB_DIR_USR_SBIN, BB_SUID_DROP, nanddump))
@@ -123,15 +122,12 @@ int nandwrite_main(int argc UNUSED_PARAM
 	const char *opt_s = "0", *opt_f = "-", *opt_l, *opt_bb;
 
 	if (IS_NANDDUMP) {
-		opt_complementary = "=1";
-#if ENABLE_LONG_OPTS
-		applet_long_options =
-			"bb\0" Required_argument "\xff"; /* no short equivalent */
-#endif
-		opts = getopt32(argv, "ons:f:l:", &opt_s, &opt_f, &opt_l, &opt_bb);
+		opts = getopt32long(argv, "^" "ons:f:l:" "\0" "=1",
+				"bb\0" Required_argument "\xff", /* no short equivalent */
+				&opt_s, &opt_f, &opt_l, &opt_bb
+		);
 	} else { /* nandwrite */
-		opt_complementary = "-1:?2";
-		opts = getopt32(argv, "pns:", &opt_s);
+		opts = getopt32(argv, "^" "pns:" "\0" "-1:?2", &opt_s);
 	}
 	argv += optind;
 
diff -urpN busybox-1.27.2/miscutils/partprobe.c busybox-1.28.0/miscutils/partprobe.c
--- busybox-1.27.2/miscutils/partprobe.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/partprobe.c	2017-08-08 14:08:06.000000000 +0200
@@ -5,13 +5,13 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config PARTPROBE
-//config:	bool "partprobe"
+//config:	bool "partprobe (3.6 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Ask kernel to rescan partition table.
+//config:	Ask kernel to rescan partition table.
 
-//applet:IF_PARTPROBE(APPLET(partprobe, BB_DIR_USR_SBIN, BB_SUID_DROP))
+//applet:IF_PARTPROBE(APPLET_NOEXEC(partprobe, partprobe, BB_DIR_USR_SBIN, BB_SUID_DROP, partprobe))
 
 //kbuild:lib-$(CONFIG_PARTPROBE) += partprobe.o
 
diff -urpN busybox-1.27.2/miscutils/raidautorun.c busybox-1.28.0/miscutils/raidautorun.c
--- busybox-1.27.2/miscutils/raidautorun.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/raidautorun.c	2017-10-05 11:53:08.000000000 +0200
@@ -5,17 +5,16 @@
  * Copyright (C) 2006 Bernhard Reutner-Fischer
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
- *
  */
 //config:config RAIDAUTORUN
-//config:	bool "raidautorun"
+//config:	bool "raidautorun (1.4 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  raidautorun tells the kernel md driver to
-//config:	  search and start RAID arrays.
+//config:	raidautorun tells the kernel md driver to
+//config:	search and start RAID arrays.
 
-//applet:IF_RAIDAUTORUN(APPLET(raidautorun, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_RAIDAUTORUN(APPLET_NOEXEC(raidautorun, raidautorun, BB_DIR_SBIN, BB_SUID_DROP, raidautorun))
 
 //kbuild:lib-$(CONFIG_RAIDAUTORUN) += raidautorun.o
 
diff -urpN busybox-1.27.2/miscutils/readahead.c busybox-1.28.0/miscutils/readahead.c
--- busybox-1.27.2/miscutils/readahead.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/readahead.c	2017-07-24 18:57:09.000000000 +0200
@@ -10,22 +10,22 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config READAHEAD
-//config:	bool "readahead"
+//config:	bool "readahead (2 kb)"
 //config:	default y
 //config:	depends on LFS
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Preload the files listed on the command line into RAM cache so that
-//config:	  subsequent reads on these files will not block on disk I/O.
+//config:	Preload the files listed on the command line into RAM cache so that
+//config:	subsequent reads on these files will not block on disk I/O.
 //config:
-//config:	  This applet just calls the readahead(2) system call on each file.
-//config:	  It is mainly useful in system startup scripts to preload files
-//config:	  or executables before they are used. When used at the right time
-//config:	  (in particular when a CPU bound process is running) it can
-//config:	  significantly speed up system startup.
+//config:	This applet just calls the readahead(2) system call on each file.
+//config:	It is mainly useful in system startup scripts to preload files
+//config:	or executables before they are used. When used at the right time
+//config:	(in particular when a CPU bound process is running) it can
+//config:	significantly speed up system startup.
 //config:
-//config:	  As readahead(2) blocks until each file has been read, it is best to
-//config:	  run this applet as a background job.
+//config:	As readahead(2) blocks until each file has been read, it is best to
+//config:	run this applet as a background job.
 
 //applet:IF_READAHEAD(APPLET(readahead, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/miscutils/rfkill.c busybox-1.28.0/miscutils/rfkill.c
--- busybox-1.27.2/miscutils/rfkill.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/rfkill.c	2017-10-05 11:53:08.000000000 +0200
@@ -1,23 +1,22 @@
 /* vi: set sw=4 ts=4: */
 /*
-* rfkill implementation for busybox
-*
-* Copyright (C) 2010  Malek Degachi <malek-degachi@laposte.net>
-*
-* Licensed under GPLv2 or later, see file LICENSE in this source tree.
-*/
-
+ * rfkill implementation for busybox
+ *
+ * Copyright (C) 2010  Malek Degachi <malek-degachi@laposte.net>
+ *
+ * Licensed under GPLv2 or later, see file LICENSE in this source tree.
+ */
 //config:config RFKILL
-//config:	bool "rfkill"
+//config:	bool "rfkill (5.3 kb)"
 //config:	default n # doesn't build on Ubuntu 9.04
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Enable/disable wireless devices.
+//config:	Enable/disable wireless devices.
 //config:
-//config:	  rfkill list : list all wireless devices
-//config:	  rfkill list bluetooth : list all bluetooth devices
-//config:	  rfkill list 1 : list device corresponding to the given index
-//config:	  rfkill block|unblock wlan : block/unblock all wlan(wifi) devices
+//config:	rfkill list : list all wireless devices
+//config:	rfkill list bluetooth : list all bluetooth devices
+//config:	rfkill list 1 : list device corresponding to the given index
+//config:	rfkill block|unblock wlan : block/unblock all wlan(wifi) devices
 //config:
 
 //applet:IF_RFKILL(APPLET(rfkill, BB_DIR_USR_SBIN, BB_SUID_DROP))
diff -urpN busybox-1.27.2/miscutils/runlevel.c busybox-1.28.0/miscutils/runlevel.c
--- busybox-1.27.2/miscutils/runlevel.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/runlevel.c	2017-08-08 14:08:06.000000000 +0200
@@ -12,16 +12,16 @@
  * initially busyboxified by Bernhard Reutner-Fischer
  */
 //config:config RUNLEVEL
-//config:	bool "runlevel"
+//config:	bool "runlevel (518 bytes)"
 //config:	default y
 //config:	depends on FEATURE_UTMP
 //config:	help
-//config:	  find the current and previous system runlevel.
+//config:	find the current and previous system runlevel.
 //config:
-//config:	  This applet uses utmp but does not rely on busybox supporing
-//config:	  utmp on purpose. It is used by e.g. emdebian via /etc/init.d/rc.
+//config:	This applet uses utmp but does not rely on busybox supporing
+//config:	utmp on purpose. It is used by e.g. emdebian via /etc/init.d/rc.
 
-//applet:IF_RUNLEVEL(APPLET(runlevel, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_RUNLEVEL(APPLET_NOEXEC(runlevel, runlevel, BB_DIR_SBIN, BB_SUID_DROP, runlevel))
 
 //kbuild:lib-$(CONFIG_RUNLEVEL) += runlevel.o
 
diff -urpN busybox-1.27.2/miscutils/rx.c busybox-1.28.0/miscutils/rx.c
--- busybox-1.27.2/miscutils/rx.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/rx.c	2017-07-24 18:57:09.000000000 +0200
@@ -15,11 +15,11 @@
  * This was originally written for blob and then adapted for busybox.
  */
 //config:config RX
-//config:	bool "rx"
+//config:	bool "rx (2.9 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Receive files using the Xmodem protocol.
+//config:	Receive files using the Xmodem protocol.
 
 //applet:IF_RX(APPLET(rx, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/miscutils/setfattr.c busybox-1.28.0/miscutils/setfattr.c
--- busybox-1.27.2/miscutils/setfattr.c	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/miscutils/setfattr.c	2017-10-05 11:53:08.000000000 +0200
@@ -0,0 +1,68 @@
+/*
+ * setfattr - set extended attributes of filesystem objects.
+ *
+ * Copyright (C) 2017 by Denys Vlasenko <vda.linux@googlemail.com>
+ *
+ * Licensed under GPLv2, see file LICENSE in this source tree.
+ */
+//config:config SETFATTR
+//config:	bool "setfattr"
+//config:	default y
+//config:	help
+//config:	Set/delete extended attributes on files
+
+//applet:IF_SETFATTR(APPLET_NOEXEC(setfattr, setfattr, BB_DIR_USR_BIN, BB_SUID_DROP, setfattr))
+
+//kbuild:lib-$(CONFIG_SETFATTR) += setfattr.o
+
+#include <sys/xattr.h>
+#include "libbb.h"
+
+//usage:#define setfattr_trivial_usage
+//usage:       "[-h] -n|-x ATTR [-v VALUE] FILE..."
+//usage:#define setfattr_full_usage "\n\n"
+//usage:       "Set extended attributes"
+//usage:     "\n"
+//usage:     "\n	-h		Do not follow symlinks"
+//usage:     "\n	-x ATTR		Remove attribute ATTR"
+//usage:     "\n	-n ATTR		Set attribute ATTR to VALUE"
+//usage:     "\n	-v VALUE	(default: empty)"
+int setfattr_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
+int setfattr_main(int argc UNUSED_PARAM, char **argv)
+{
+	const char *name;
+	const char *value = "";
+	int status;
+	int opt;
+	enum {
+		OPT_h = (1 << 0),
+		OPT_x = (1 << 1),
+	};
+
+	opt = getopt32(argv, "^"
+		"hx:n:v:"
+		/* Min one arg, either -x or -n is a must, -x does not allow -v */
+		"\0" "-1:x:n:n--x:x--nv:v--x"
+		, &name, &name, &value
+	);
+	argv += optind;
+
+	status = EXIT_SUCCESS;
+	do {
+		int r;
+		if (opt & OPT_x)
+			r = ((opt & OPT_h) ? lremovexattr : removexattr)(*argv, name);
+		else {
+			r = ((opt & OPT_h) ? lsetxattr : setxattr)(
+					*argv, name,
+					value, strlen(value), /*flags:*/ 0
+			);
+		}
+		if (r) {
+			bb_simple_perror_msg(*argv);
+			status = EXIT_FAILURE;
+		}
+	} while (*++argv);
+
+	return status;
+}
diff -urpN busybox-1.27.2/miscutils/setserial.c busybox-1.28.0/miscutils/setserial.c
--- busybox-1.27.2/miscutils/setserial.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/setserial.c	2017-10-05 11:53:08.000000000 +0200
@@ -7,15 +7,14 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config SETSERIAL
-//config:	bool "setserial"
+//config:	bool "setserial (6.6 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Retrieve or set Linux serial port.
+//config:	Retrieve or set Linux serial port.
 
-//applet:IF_SETSERIAL(APPLET(setserial, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_SETSERIAL(APPLET_NOEXEC(setserial, setserial, BB_DIR_BIN, BB_SUID_DROP, setserial))
 
 //kbuild:lib-$(CONFIG_SETSERIAL) += setserial.o
 
@@ -210,35 +209,35 @@ struct serial_struct {
 #endif
 
 //usage:#define setserial_trivial_usage
-//usage:	"[-gabGvzV] DEVICE [PARAMETER [ARG]]..."
+//usage:	"[-abGvz] { DEVICE [PARAMETER [ARG]]... | -g DEVICE... }"
 //usage:#define setserial_full_usage "\n\n"
-//usage:	"Request or set Linux serial port information\n"
-//usage:	"\n"
-//usage:	"	-g	Interpret parameters as list of devices for reporting\n"
-//usage:	"	-a	Print all available information\n"
-//usage:	"	-b	Print summary information\n"
-//usage:	"	-G	Print in form which can be fed back\n"
-//usage:	"		to setserial as command line parameters\n"
-//usage:	"	-z	Zero out serial flags before setting\n"
-//usage:	"	-v	Verbose\n"
-//usage:	"\n"
-//usage:	"Parameters: (* = takes an argument, ^ = can be turned off by preceding ^)\n"
-//usage:	"	*port, *irq, *divisor, *uart, *baud_base, *close_delay, *closing_wait,\n"
-//usage:	"	^fourport, ^auto_irq, ^skip_test, ^sak, ^session_lockout, ^pgrp_lockout,\n"
-//usage:	"	^callout_nohup, ^split_termios, ^hup_notify, ^low_latency, autoconfig,\n"
-//usage:	"	spd_normal, spd_hi, spd_vhi, spd_shi, spd_warp, spd_cust\n"
-//usage:	"\n"
-//usage:	"UART types:\n"
-//usage:	"	unknown, 8250, 16450, 16550, 16550A, Cirrus, 16650, 16650V2, 16750,\n"
-//usage:	"	16950, 16954, 16654, 16850, RSA, NS16550A, XSCALE, RM9000, OCTEON, AR7,\n"
-//usage:	"	U6_16550A"
+//usage:	"Print or set serial port parameters"
+//usage:   "\n"
+//usage:   "\n""	-a	Print all"
+//usage:   "\n""	-b	Print summary"
+//usage:   "\n""	-G	Print as setserial PARAMETERs"
+//usage:   "\n""	-v	Verbose"
+//usage:   "\n""	-z	Zero out serial flags before setting"
+//usage:   "\n""	-g	All args are device names"
+//usage:   "\n"
+//usage:   "\n""PARAMETERs: (* = takes ARG, ^ = can be turned off by preceding ^)"
+//usage:   "\n""	*port, *irq, *divisor, *uart, *baud_base, *close_delay, *closing_wait,"
+//usage:   "\n""	^fourport, ^auto_irq, ^skip_test, ^sak, ^session_lockout, ^pgrp_lockout,"
+//usage:   "\n""	^callout_nohup, ^split_termios, ^hup_notify, ^low_latency, autoconfig,"
+//usage:   "\n""	spd_normal, spd_hi, spd_vhi, spd_shi, spd_warp, spd_cust"
+//usage:   "\n""ARG for uart:"
+//usage:   "\n""	unknown, 8250, 16450, 16550, 16550A, Cirrus, 16650, 16650V2, 16750,"
+//usage:   "\n""	16950, 16954, 16654, 16850, RSA, NS16550A, XSCALE, RM9000, OCTEON, AR7,"
+//usage:   "\n""	U6_16550A"
 
+// option string is "bGavzgq". "q" is accepted but ignored.
 #define OPT_PRINT_SUMMARY       (1 << 0)
 #define OPT_PRINT_FEDBACK       (1 << 1)
 #define OPT_PRINT_ALL           (1 << 2)
 #define OPT_VERBOSE             (1 << 3)
 #define OPT_ZERO                (1 << 4)
-#define OPT_GET                 (1 << 5)
+#define OPT_LIST_OF_DEVS        (1 << 5)
+/*#define OPT_QUIET             (1 << 6)*/
 
 #define OPT_MODE_MASK \
 	(OPT_PRINT_ALL | OPT_PRINT_SUMMARY | OPT_PRINT_FEDBACK)
@@ -362,7 +361,7 @@ static bool cmd_is_flag(int cmd)
 	return (cmd >= CMD_FLAG_FIRST && cmd <= CMD_FLAG_LAST);
 }
 
-static bool cmd_need_arg(int cmd)
+static bool cmd_needs_arg(int cmd)
 {
 	return (cmd >= CMD_PORT && cmd <= CMD_WAIT);
 }
@@ -652,11 +651,9 @@ static int find_cmd(const char *cmd)
 static void serial_set(char **arg, int opts)
 {
 	struct serial_struct serinfo;
-	int cmd;
-	const char *word;
 	int fd;
 
-	fd = serial_open(*arg++, /*quiet:*/ false);
+	fd = serial_open(*arg, /*quiet:*/ false);
 	if (fd < 0)
 		exit(201);
 
@@ -665,17 +662,20 @@ static void serial_set(char **arg, int o
 	if (opts & OPT_ZERO)
 		serinfo.flags = 0;
 
-	while (*arg) {
+	while (*++arg) {
+		const char *word;
 		int invert;
+		int cmd;
 
-		word = *arg++;
-		invert = (*word == '^');
+		word = *arg;
+		invert = (word[0] == '^');
 		word += invert;
 
 		cmd = find_cmd(word);
 
-		if (*arg == NULL && cmd_need_arg(cmd))
-			bb_error_msg_and_die(bb_msg_requires_arg, word);
+		if (cmd_needs_arg(cmd))
+			if (*++arg == NULL)
+				bb_error_msg_and_die(bb_msg_requires_arg, word);
 
 		if (invert && !cmd_is_flag(cmd))
 			bb_error_msg_and_die("can't invert %s", word);
@@ -705,25 +705,25 @@ static void serial_set(char **arg, int o
 				serinfo.flags |= setbits[cmd];
 			break;
 		case CMD_PORT:
-			serinfo.port = get_numeric(*arg++);
+			serinfo.port = get_numeric(*arg);
 			break;
 		case CMD_IRQ:
-			serinfo.irq = get_numeric(*arg++);
+			serinfo.irq = get_numeric(*arg);
 			break;
 		case CMD_DIVISOR:
-			serinfo.custom_divisor = get_numeric(*arg++);
+			serinfo.custom_divisor = get_numeric(*arg);
 			break;
 		case CMD_UART:
-			serinfo.type = get_uart(*arg++);
+			serinfo.type = get_uart(*arg);
 			break;
 		case CMD_BASE:
-			serinfo.baud_base = get_numeric(*arg++);
+			serinfo.baud_base = get_numeric(*arg);
 			break;
 		case CMD_DELAY:
-			serinfo.close_delay = get_numeric(*arg++);
+			serinfo.close_delay = get_numeric(*arg);
 			break;
 		case CMD_WAIT:
-			serinfo.closing_wait = get_wait(*arg++);
+			serinfo.closing_wait = get_wait(*arg);
 			break;
 		case CMD_AUTOCONFIG:
 			serial_ctl(fd, CTL_SET | CTL_CONFIG | CTL_GET, &serinfo);
@@ -741,22 +741,22 @@ int setserial_main(int argc UNUSED_PARAM
 {
 	int opts;
 
-	opt_complementary = "-1:b-aG:G-ab:a-bG";
-	opts = getopt32(argv, "bGavzg");
+	opts = getopt32(argv, "^" "bGavzgq" "\0" "-1:b-aG:G-ab:a-bG");
 	argv += optind;
 
-	if (!argv[1]) /* one arg only? */
-		opts |= OPT_GET;
+	if (!argv[1]) /* one arg only? (nothing to change?) */
+		opts |= OPT_LIST_OF_DEVS; /* force display */
 
-	if (!(opts & OPT_GET)) {
+	if (!(opts & OPT_LIST_OF_DEVS)) {
 		serial_set(argv, opts);
 		argv[1] = NULL;
 	}
 
-	if (opts & (OPT_VERBOSE | OPT_GET)) {
+	/* -v effect: "after setting params, do not be silent, show them" */
+	if (opts & (OPT_VERBOSE | OPT_LIST_OF_DEVS)) {
 		do {
-			serial_get(*argv++, opts & OPT_MODE_MASK);
-		} while (*argv);
+			serial_get(*argv, opts & OPT_MODE_MASK);
+		} while (*++argv);
 	}
 
 	return EXIT_SUCCESS;
diff -urpN busybox-1.27.2/miscutils/strings.c busybox-1.28.0/miscutils/strings.c
--- busybox-1.27.2/miscutils/strings.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/strings.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,11 +7,11 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config STRINGS
-//config:	bool "strings"
+//config:	bool "strings (4.3 kb)"
 //config:	default y
 //config:	help
-//config:	  strings prints the printable character sequences for each file
-//config:	  specified.
+//config:	strings prints the printable character sequences for each file
+//config:	specified.
 
 //applet:IF_STRINGS(APPLET(strings, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/miscutils/time.c busybox-1.28.0/miscutils/time.c
--- busybox-1.27.2/miscutils/time.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/time.c	2017-12-04 16:07:47.000000000 +0100
@@ -1,20 +1,21 @@
 /* vi: set sw=4 ts=4: */
-/* 'time' utility to display resource usage of processes.
-   Copyright (C) 1990, 91, 92, 93, 96 Free Software Foundation, Inc.
-
-   Licensed under GPLv2, see file LICENSE in this source tree.
-*/
+/*
+ * 'time' utility to display resource usage of processes.
+ * Copyright (C) 1990, 91, 92, 93, 96 Free Software Foundation, Inc.
+ *
+ * Licensed under GPLv2, see file LICENSE in this source tree.
+ */
 /* Originally written by David Keppel <pardo@cs.washington.edu>.
-   Heavily modified by David MacKenzie <djm@gnu.ai.mit.edu>.
-   Heavily modified for busybox by Erik Andersen <andersen@codepoet.org>
-*/
+ * Heavily modified by David MacKenzie <djm@gnu.ai.mit.edu>.
+ * Heavily modified for busybox by Erik Andersen <andersen@codepoet.org>
+ */
 //config:config TIME
-//config:	bool "time"
+//config:	bool "time (7 kb)"
 //config:	default y
 //config:	help
-//config:	  The time command runs the specified program with the given arguments.
-//config:	  When the command finishes, time writes a message to standard output
-//config:	  giving timing statistics about this program run.
+//config:	The time command runs the specified program with the given arguments.
+//config:	When the command finishes, time writes a message to standard output
+//config:	giving timing statistics about this program run.
 
 //applet:IF_TIME(APPLET(time, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -127,13 +128,13 @@ static unsigned long ptok(const unsigned
 
 /* summarize: Report on the system use of a command.
 
-   Print the FMT argument except that `%' sequences
-   have special meaning, and `\n' and `\t' are translated into
-   newline and tab, respectively, and `\\' is translated into `\'.
+   Print the FMT argument except that '%' sequences
+   have special meaning, and '\n' and '\t' are translated into
+   newline and tab, respectively, and '\\' is translated into '\'.
 
-   The character following a `%' can be:
+   The character following a '%' can be:
    (* means the tcsh time builtin also recognizes it)
-   % == a literal `%'
+   % == a literal '%'
    C == command name and arguments
 *  D == average unshared data size in K (ru_idrss+ru_isrss)
 *  E == elapsed real (wall clock) time in [hour:]min:sec
@@ -430,9 +431,10 @@ int time_main(int argc UNUSED_PARAM, cha
 		OPT_f = (1 << 4),
 	};
 
-	opt_complementary = "-1"; /* at least one arg */
 	/* "+": stop on first non-option */
-	opt = getopt32(argv, "+vpao:f:", &output_filename, &output_format);
+	opt = getopt32(argv, "^+" "vpao:f:" "\0" "-1"/*at least one arg*/,
+				&output_filename, &output_format
+	);
 	argv += optind;
 	if (opt & OPT_v)
 		output_format = long_format;
@@ -440,11 +442,16 @@ int time_main(int argc UNUSED_PARAM, cha
 		output_format = posix_format;
 	output_fd = STDERR_FILENO;
 	if (opt & OPT_o) {
+#ifndef O_CLOEXEC
+# define O_CLOEXEC 0
+#endif
 		output_fd = xopen(output_filename,
 			(opt & OPT_a) /* append? */
 			? (O_CREAT | O_WRONLY | O_CLOEXEC | O_APPEND)
 			: (O_CREAT | O_WRONLY | O_CLOEXEC | O_TRUNC)
 		);
+		if (!O_CLOEXEC)
+			close_on_exec_on(output_fd);
 	}
 
 	run_command(argv, &res);
diff -urpN busybox-1.27.2/miscutils/ttysize.c busybox-1.28.0/miscutils/ttysize.c
--- busybox-1.27.2/miscutils/ttysize.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/miscutils/ttysize.c	2017-08-03 19:04:49.000000000 +0200
@@ -10,22 +10,22 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config TTYSIZE
-//config:	bool "ttysize"
+//config:	bool "ttysize (372 bytes)"
 //config:	default y
 //config:	help
-//config:	  A replacement for "stty size". Unlike stty, can report only width,
-//config:	  only height, or both, in any order. It also does not complain on
-//config:	  error, but returns default 80x24.
-//config:	  Usage in shell scripts: width=`ttysize w`.
+//config:	A replacement for "stty size". Unlike stty, can report only width,
+//config:	only height, or both, in any order. It also does not complain on
+//config:	error, but returns default 80x24.
+//config:	Usage in shell scripts: width=`ttysize w`.
 
-//applet:IF_TTYSIZE(APPLET(ttysize, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_TTYSIZE(APPLET_NOFORK(ttysize, ttysize, BB_DIR_USR_BIN, BB_SUID_DROP, ttysize))
 
 //kbuild:lib-$(CONFIG_TTYSIZE) += ttysize.o
 
 //usage:#define ttysize_trivial_usage
 //usage:       "[w] [h]"
 //usage:#define ttysize_full_usage "\n\n"
-//usage:       "Print dimension(s) of stdin's terminal, on error return 80x25"
+//usage:       "Print dimensions of stdin tty, or 80x24"
 
 #include "libbb.h"
 
@@ -37,7 +37,10 @@ int ttysize_main(int argc UNUSED_PARAM,
 
 	w = 80;
 	h = 24;
-	if (!ioctl(0, TIOCGWINSZ, &wsz)) {
+	if (ioctl(0, TIOCGWINSZ, &wsz) == 0
+	 || ioctl(1, TIOCGWINSZ, &wsz) == 0
+	 || ioctl(2, TIOCGWINSZ, &wsz) == 0
+	) {
 		w = wsz.ws_col;
 		h = wsz.ws_row;
 	}
diff -urpN busybox-1.27.2/miscutils/ubi_tools.c busybox-1.28.0/miscutils/ubi_tools.c
--- busybox-1.27.2/miscutils/ubi_tools.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/ubi_tools.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,49 +1,49 @@
-/* Ported to busybox from mtd-utils.
+/*
+ * Ported to busybox from mtd-utils.
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 //config:config UBIATTACH
-//config:	bool "ubiattach"
+//config:	bool "ubiattach (4.7 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Attach MTD device to an UBI device.
+//config:	Attach MTD device to an UBI device.
 //config:
 //config:config UBIDETACH
-//config:	bool "ubidetach"
+//config:	bool "ubidetach (4.6 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Detach MTD device from an UBI device.
+//config:	Detach MTD device from an UBI device.
 //config:
 //config:config UBIMKVOL
-//config:	bool "ubimkvol"
+//config:	bool "ubimkvol (5.8 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Create a UBI volume.
+//config:	Create a UBI volume.
 //config:
 //config:config UBIRMVOL
-//config:	bool "ubirmvol"
+//config:	bool "ubirmvol (5.2 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Delete a UBI volume.
+//config:	Delete a UBI volume.
 //config:
 //config:config UBIRSVOL
-//config:	bool "ubirsvol"
+//config:	bool "ubirsvol (4.6 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Resize a UBI volume.
+//config:	Resize a UBI volume.
 //config:
 //config:config UBIUPDATEVOL
-//config:	bool "ubiupdatevol"
+//config:	bool "ubiupdatevol (5.6 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Update a UBI volume.
+//config:	Update a UBI volume.
 
 //                       APPLET_ODDNAME:name       main       location         suid_type     help
 //applet:IF_UBIATTACH(   APPLET_ODDNAME(ubiattach, ubi_tools, BB_DIR_USR_SBIN, BB_SUID_DROP, ubiattach))
@@ -52,6 +52,7 @@
 //applet:IF_UBIRMVOL(    APPLET_ODDNAME(ubirmvol,  ubi_tools, BB_DIR_USR_SBIN, BB_SUID_DROP, ubirmvol))
 //applet:IF_UBIRSVOL(    APPLET_ODDNAME(ubirsvol,  ubi_tools, BB_DIR_USR_SBIN, BB_SUID_DROP, ubirsvol))
 //applet:IF_UBIUPDATEVOL(APPLET_ODDNAME(ubiupdatevol, ubi_tools, BB_DIR_USR_SBIN, BB_SUID_DROP, ubiupdatevol))
+/* not NOEXEC: if flash operation stalls, use less memory in "hung" process */
 
 //kbuild:lib-$(CONFIG_UBIATTACH) += ubi_tools.o
 //kbuild:lib-$(CONFIG_UBIDETACH) += ubi_tools.o
@@ -67,23 +68,32 @@
 #endif
 #include <mtd/ubi-user.h>
 
-#define do_attach (ENABLE_UBIATTACH && applet_name[3] == 'a')
-#define do_detach (ENABLE_UBIDETACH && applet_name[3] == 'd')
-#define do_mkvol  (ENABLE_UBIMKVOL  && applet_name[3] == 'm')
-#define do_rmvol  (ENABLE_UBIRMVOL  && applet_name[4] == 'm')
-#define do_rsvol  (ENABLE_UBIRSVOL  && applet_name[4] == 's')
-#define do_update (ENABLE_UBIUPDATEVOL && applet_name[3] == 'u')
+#define UBI_APPLET_CNT (0 \
+	+ ENABLE_UBIATTACH \
+	+ ENABLE_UBIDETACH \
+	+ ENABLE_UBIMKVOL \
+	+ ENABLE_UBIRMVOL \
+	+ ENABLE_UBIRSVOL \
+	+ ENABLE_UBIUPDATEVOL \
+	)
+
+#define do_attach (ENABLE_UBIATTACH    && (UBI_APPLET_CNT == 1 || applet_name[4] == 't'))
+#define do_detach (ENABLE_UBIDETACH    && (UBI_APPLET_CNT == 1 || applet_name[4] == 'e'))
+#define do_mkvol  (ENABLE_UBIMKVOL     && (UBI_APPLET_CNT == 1 || applet_name[4] == 'k'))
+#define do_rmvol  (ENABLE_UBIRMVOL     && (UBI_APPLET_CNT == 1 || applet_name[4] == 'm'))
+#define do_rsvol  (ENABLE_UBIRSVOL     && (UBI_APPLET_CNT == 1 || applet_name[4] == 's'))
+#define do_update (ENABLE_UBIUPDATEVOL && (UBI_APPLET_CNT == 1 || applet_name[4] == 'p'))
 
-static unsigned get_num_from_file(const char *path, unsigned max, const char *errmsg)
+static unsigned get_num_from_file(const char *path, unsigned max)
 {
 	char buf[sizeof(long long)*3];
 	unsigned long long num;
 
 	if (open_read_close(path, buf, sizeof(buf)) < 0)
-		bb_perror_msg_and_die(errmsg, path);
+		bb_perror_msg_and_die("can't open '%s'", path);
 	/* It can be \n terminated, xatoull won't work well */
 	if (sscanf(buf, "%llu", &num) != 1 || num > max)
-		bb_error_msg_and_die(errmsg, path);
+		bb_error_msg_and_die("number in '%s' is malformed or too large", path);
 	return num;
 }
 
@@ -135,20 +145,17 @@ int ubi_tools_main(int argc UNUSED_PARAM
 #define OPTION_a  (1 << 5)
 #define OPTION_t  (1 << 6)
 	if (do_mkvol) {
-		opt_complementary = "-1";
-		opts = getopt32(argv, "md:+n:+N:s:a:+t:O:+",
+		opts = getopt32(argv, "^" "md:+n:+N:s:a:+t:O:+" "\0" "-1",
 				&dev_num, &vol_id,
 				&vol_name, &size_bytes_str, &alignment, &type,
 				&vid_hdr_offset
 			);
 	} else
 	if (do_update) {
-		opt_complementary = "-1";
-		opts = getopt32(argv, "s:at", &size_bytes_str);
+		opts = getopt32(argv, "^" "s:at" "\0" "-1", &size_bytes_str);
 		opts *= OPTION_s;
 	} else {
-		opt_complementary = "-1";
-		opts = getopt32(argv, "m:+d:+n:+N:s:a:+t:",
+		opts = getopt32(argv, "^" "m:+d:+n:+N:s:a:+t:" "\0" "-1",
 				&mtd_num, &dev_num, &vol_id,
 				&vol_name, &size_bytes_str, &alignment, &type
 		);
@@ -217,10 +224,10 @@ int ubi_tools_main(int argc UNUSED_PARAM
 			p = path_sys_class_ubi_ubi + sprintf(path_sys_class_ubi_ubi, "%u/", num);
 
 			strcpy(p, "avail_eraseblocks");
-			leb_avail = get_num_from_file(path, UINT_MAX, "Can't get available eraseblocks from '%s'");
+			leb_avail = get_num_from_file(path, UINT_MAX);
 
 			strcpy(p, "eraseblock_size");
-			leb_size = get_num_from_file(path, MAX_SANE_ERASEBLOCK, "Can't get eraseblock size from '%s'");
+			leb_size = get_num_from_file(path, MAX_SANE_ERASEBLOCK);
 
 			size_bytes = leb_avail * (unsigned long long)leb_size;
 			//if (size_bytes <= 0)
@@ -232,16 +239,19 @@ int ubi_tools_main(int argc UNUSED_PARAM
 		if (!(opts & OPTION_N))
 			bb_error_msg_and_die("name not specified");
 
+		/* the structure is memset(0) above */
 		mkvol_req.vol_id = vol_id;
 		mkvol_req.vol_type = UBI_DYNAMIC_VOLUME;
 		if ((opts & OPTION_t) && type[0] == 's')
 			mkvol_req.vol_type = UBI_STATIC_VOLUME;
 		mkvol_req.alignment = alignment;
 		mkvol_req.bytes = size_bytes; /* signed int64_t */
-		strncpy(mkvol_req.name, vol_name, UBI_MAX_VOLUME_NAME);
-		mkvol_req.name_len = strlen(vol_name);
+		/* strnlen avoids overflow of 16-bit field (paranoia) */
+		mkvol_req.name_len = strnlen(vol_name, UBI_MAX_VOLUME_NAME+1);
 		if (mkvol_req.name_len > UBI_MAX_VOLUME_NAME)
 			bb_error_msg_and_die("volume name too long: '%s'", vol_name);
+		/* this is safe: .name[] is UBI_MAX_VOLUME_NAME+1 bytes */
+		strcpy(mkvol_req.name, vol_name);
 
 		xioctl(fd, UBI_IOCMKVOL, &mkvol_req);
 	} else
@@ -289,7 +299,7 @@ int ubi_tools_main(int argc UNUSED_PARAM
 	} else
 
 //usage:#define ubiupdatevol_trivial_usage
-//usage:       "[-t | [-s SIZE] IMG_FILE] UBI_DEVICE"
+//usage:       "-t UBI_DEVICE | [-s SIZE] UBI_DEVICE IMG_FILE"
 //usage:#define ubiupdatevol_full_usage "\n\n"
 //usage:       "Update UBI volume\n"
 //usage:     "\n	-t	Truncate to zero size"
@@ -304,24 +314,25 @@ int ubi_tools_main(int argc UNUSED_PARAM
 			xioctl(fd, UBI_IOCVOLUP, &bytes64);
 		}
 		else {
-			struct stat st;
 			unsigned ubinum, volnum;
 			unsigned leb_size;
-			ssize_t len;
-			char *input_data;
+			char *buf;
 
 			/* Assume that device is in normal format. */
 			/* Removes need for scanning sysfs tree as full libubi does. */
 			if (sscanf(ubi_ctrl, "/dev/ubi%u_%u", &ubinum, &volnum) != 2)
-				bb_error_msg_and_die("wrong format of UBI device name");
+				bb_error_msg_and_die("UBI device name '%s' is not /dev/ubiN_M", ubi_ctrl);
 
 			sprintf(path_sys_class_ubi_ubi, "%u_%u/usable_eb_size", ubinum, volnum);
-			leb_size = get_num_from_file(path, MAX_SANE_ERASEBLOCK, "Can't get usable eraseblock size from '%s'");
+			leb_size = get_num_from_file(path, MAX_SANE_ERASEBLOCK);
 
-			if (!(opts & OPTION_s)) {
-				if (!*argv)
-					bb_show_usage();
+			if (!*argv)
+				bb_show_usage();
+			if (NOT_LONE_DASH(*argv)) /* mtd-utils supports "-" as stdin */
 				xmove_fd(xopen(*argv, O_RDONLY), STDIN_FILENO);
+
+			if (!(opts & OPTION_s)) {
+				struct stat st;
 				xfstat(STDIN_FILENO, &st, *argv);
 				size_bytes = st.st_size;
 			}
@@ -330,12 +341,24 @@ int ubi_tools_main(int argc UNUSED_PARAM
 			/* this ioctl expects signed int64_t* parameter */
 			xioctl(fd, UBI_IOCVOLUP, &bytes64);
 
-			input_data = xmalloc(leb_size);
-			while ((len = full_read(STDIN_FILENO, input_data, leb_size)) > 0) {
-				xwrite(fd, input_data, len);
+			/* can't use bb_copyfd_exact_size(): copy in blocks of exactly leb_size */
+			buf = xmalloc(leb_size);
+			while (size_bytes != 0) {
+				int len = full_read(STDIN_FILENO, buf, leb_size);
+				if (len <= 0) {
+					if (len < 0)
+						bb_perror_msg_and_die("read error from '%s'", *argv);
+					break;
+				}
+				if ((unsigned)len > size_bytes) {
+					/* for this case: "ubiupdatevol -s 1024000 $UBIDEV /dev/urandom" */
+					len = size_bytes;
+				}
+				xwrite(fd, buf, len);
+				size_bytes -= len;
 			}
-			if (len < 0)
-				bb_perror_msg_and_die("UBI volume update failed");
+			if (ENABLE_FEATURE_CLEAN_UP)
+				free(buf);
 		}
 	}
 
diff -urpN busybox-1.27.2/miscutils/ubirename.c busybox-1.28.0/miscutils/ubirename.c
--- busybox-1.27.2/miscutils/ubirename.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/ubirename.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,13 +7,14 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config UBIRENAME
-//config:	bool "ubirename"
+//config:	bool "ubirename (2.2 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Utility to rename UBI volumes
+//config:	Utility to rename UBI volumes
 
 //applet:IF_UBIRENAME(APPLET(ubirename, BB_DIR_USR_SBIN, BB_SUID_DROP))
+/* not NOEXEC: if flash operation stalls, use less memory in "hung" process */
 
 //kbuild:lib-$(CONFIG_UBIRENAME) += ubirename.o
 
@@ -80,9 +81,12 @@ int ubirename_main(int argc, char **argv
 	argv += 2;
 	while (argv[0]) {
 		rnvol->ents[n].vol_id = ubi_get_volid_by_name(ubi_devnum, argv[0]);
-		rnvol->ents[n].name_len = strlen(argv[1]);
+
+		/* strnlen avoids overflow of 16-bit field (paranoia) */
+		rnvol->ents[n].name_len = strnlen(argv[1], sizeof(rnvol->ents[n].name));
 		if (rnvol->ents[n].name_len >= sizeof(rnvol->ents[n].name))
 			bb_error_msg_and_die("new name '%s' is too long", argv[1]);
+
 		strcpy(rnvol->ents[n].name, argv[1]);
 		n++;
 		argv += 2;
diff -urpN busybox-1.27.2/miscutils/volname.c busybox-1.28.0/miscutils/volname.c
--- busybox-1.27.2/miscutils/volname.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/miscutils/volname.c	2017-07-24 18:57:09.000000000 +0200
@@ -28,10 +28,10 @@
  * Matthew Stoltenberg <d3matt@gmail.com>
  */
 //config:config VOLNAME
-//config:	bool "volname"
+//config:	bool "volname (1.7 kb)"
 //config:	default y
 //config:	help
-//config:	  Prints a CD-ROM volume name.
+//config:	Prints a CD-ROM volume name.
 
 //applet:IF_VOLNAME(APPLET(volname, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/miscutils/watchdog.c busybox-1.28.0/miscutils/watchdog.c
--- busybox-1.27.2/miscutils/watchdog.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/miscutils/watchdog.c	2017-08-17 13:50:45.000000000 +0200
@@ -9,16 +9,16 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config WATCHDOG
-//config:	bool "watchdog"
+//config:	bool "watchdog (5.1 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  The watchdog utility is used with hardware or software watchdog
-//config:	  device drivers. It opens the specified watchdog device special file
-//config:	  and periodically writes a magic character to the device. If the
-//config:	  watchdog applet ever fails to write the magic character within a
-//config:	  certain amount of time, the watchdog device assumes the system has
-//config:	  hung, and will cause the hardware to reboot.
+//config:	The watchdog utility is used with hardware or software watchdog
+//config:	device drivers. It opens the specified watchdog device special file
+//config:	and periodically writes a magic character to the device. If the
+//config:	watchdog applet ever fails to write the magic character within a
+//config:	certain amount of time, the watchdog device assumes the system has
+//config:	hung, and will cause the hardware to reboot.
 
 //applet:IF_WATCHDOG(APPLET(watchdog, BB_DIR_SBIN, BB_SUID_DROP))
 
@@ -35,27 +35,60 @@
 //usage:     "\nUse 500ms to specify period in milliseconds"
 
 #include "libbb.h"
-#include "linux/types.h" /* for __u32 */
-#include "linux/watchdog.h"
+#include <linux/types.h> /* for __u32 */
+#include <linux/watchdog.h>
+
+#ifndef WDIOC_SETOPTIONS
+# define WDIOC_SETOPTIONS 0x5704
+#endif
+#ifndef WDIOC_SETTIMEOUT
+# define WDIOC_SETTIMEOUT 0x5706
+#endif
+#ifndef WDIOC_GETTIMEOUT
+# define WDIOC_GETTIMEOUT 0x5707
+#endif
+#ifndef WDIOS_ENABLECARD
+# define WDIOS_ENABLECARD 2
+#endif
 
 #define OPT_FOREGROUND  (1 << 0)
 #define OPT_STIMER      (1 << 1)
 #define OPT_HTIMER      (1 << 2)
 
-static void watchdog_shutdown(int sig UNUSED_PARAM)
+static void shutdown_watchdog(void)
 {
 	static const char V = 'V';
+	write(3, &V, 1);  /* Magic, see watchdog-api.txt in kernel */
+	close(3);
+}
 
+static void shutdown_on_signal(int sig UNUSED_PARAM)
+{
 	remove_pidfile(CONFIG_PID_FILE_PATH "/watchdog.pid");
-	write(3, &V, 1);  /* Magic, see watchdog-api.txt in kernel */
-	if (ENABLE_FEATURE_CLEAN_UP)
-		close(3);
+	shutdown_watchdog();
 	_exit(EXIT_SUCCESS);
 }
 
+static void watchdog_open(const char* device)
+{
+	/* Use known fd # - avoid needing global 'int fd' */
+	xmove_fd(xopen(device, O_WRONLY), 3);
+
+	/* If the watchdog driver can do something other than cause a reboot
+	 * on a timeout, then it's possible this program may be starting from
+	 * a state when the watchdog hadn't been previously stopped with
+	 * the magic write followed by a close.  In this case the driver may
+	 * not start properly, so always do the proper stop first just in case.
+	 */
+	shutdown_watchdog();
+
+	xmove_fd(xopen(device, O_WRONLY), 3);
+}
+
 int watchdog_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
-int watchdog_main(int argc, char **argv)
+int watchdog_main(int argc UNUSED_PARAM, char **argv)
 {
+	static const int enable = WDIOS_ENABLECARD;
 	static const struct suffix_mult suffixes[] = {
 		{ "ms", 1 },
 		{ "", 1000 },
@@ -68,8 +101,9 @@ int watchdog_main(int argc, char **argv)
 	char *st_arg;
 	char *ht_arg;
 
-	opt_complementary = "=1"; /* must have exactly 1 argument */
-	opts = getopt32(argv, "Ft:T:", &st_arg, &ht_arg);
+	opts = getopt32(argv, "^" "Ft:T:" "\0" "=1"/*must have exactly 1 arg*/,
+				&st_arg, &ht_arg
+	);
 
 	/* We need to daemonize *before* opening the watchdog as many drivers
 	 * will only allow one process at a time to do so.  Since daemonizing
@@ -80,31 +114,22 @@ int watchdog_main(int argc, char **argv)
 	if (!(opts & OPT_FOREGROUND))
 		bb_daemonize_or_rexec(DAEMON_CHDIR_ROOT, argv);
 
+	/* maybe bb_logenv_override(); here for LOGGING=syslog to work? */
+
 	if (opts & OPT_HTIMER)
 		htimer_duration = xatou_sfx(ht_arg, suffixes);
 	stimer_duration = htimer_duration / 2;
 	if (opts & OPT_STIMER)
 		stimer_duration = xatou_sfx(st_arg, suffixes);
 
-	bb_signals(BB_FATAL_SIGS, watchdog_shutdown);
+	bb_signals(BB_FATAL_SIGS, shutdown_on_signal);
 
-	/* Use known fd # - avoid needing global 'int fd' */
-	xmove_fd(xopen(argv[argc - 1], O_WRONLY), 3);
+	watchdog_open(argv[optind]);
 
 	/* WDIOC_SETTIMEOUT takes seconds, not milliseconds */
 	htimer_duration = htimer_duration / 1000;
-#ifndef WDIOC_SETTIMEOUT
-# error WDIOC_SETTIMEOUT is not defined, cannot compile watchdog applet
-#else
-# if defined WDIOC_SETOPTIONS && defined WDIOS_ENABLECARD
-	{
-		static const int enable = WDIOS_ENABLECARD;
-		ioctl_or_warn(3, WDIOC_SETOPTIONS, (void*) &enable);
-	}
-# endif
+	ioctl_or_warn(3, WDIOC_SETOPTIONS, (void*) &enable);
 	ioctl_or_warn(3, WDIOC_SETTIMEOUT, &htimer_duration);
-#endif
-
 #if 0
 	ioctl_or_warn(3, WDIOC_GETTIMEOUT, &htimer_duration);
 	printf("watchdog: SW timer is %dms, HW timer is %ds\n",
diff -urpN busybox-1.27.2/modutils/Config.src busybox-1.28.0/modutils/Config.src
--- busybox-1.27.2/modutils/Config.src	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/modutils/Config.src	2017-07-24 18:57:09.000000000 +0200
@@ -9,29 +9,29 @@ config MODPROBE_SMALL
 	bool "Simplified modutils"
 	default y
 	help
-	  Build smaller (~1.5 kbytes), simplified module tools.
+	Build smaller (~1.5 kbytes), simplified module tools.
 
-	  This option by itself does not enable any applets -
-	  you need to select applets individually below.
+	This option by itself does not enable any applets -
+	you need to select applets individually below.
 
-	  With this option modprobe does not require modules.dep file
-	  and does not use /etc/modules.conf file.
-	  It scans module files in /lib/modules/`uname -r` and
-	  determines dependencies and module alias names on the fly.
-	  This may make module loading slower, most notably
-	  when one needs to load module by alias (this requires
-	  scanning through module _bodies_).
-
-	  At the first attempt to load a module by alias modprobe
-	  will try to generate modules.dep.bb file in order to speed up
-	  future loads by alias. Failure to do so (read-only /lib/modules,
-	  etc) is not reported, and future modprobes will be slow too.
+	With this option modprobe does not require modules.dep file
+	and does not use /etc/modules.conf file.
+	It scans module files in /lib/modules/`uname -r` and
+	determines dependencies and module alias names on the fly.
+	This may make module loading slower, most notably
+	when one needs to load module by alias (this requires
+	scanning through module _bodies_).
+
+	At the first attempt to load a module by alias modprobe
+	will try to generate modules.dep.bb file in order to speed up
+	future loads by alias. Failure to do so (read-only /lib/modules,
+	etc) is not reported, and future modprobes will be slow too.
 
-	  NB: modules.dep.bb file format is not compatible
-	  with modules.dep file as created/used by standard module tools.
+	NB: modules.dep.bb file format is not compatible
+	with modules.dep file as created/used by standard module tools.
 
-	  Additional module parameters can be stored in
-	  /etc/modules/$module_name files.
+	Additional module parameters can be stored in
+	/etc/modules/$module_name files.
 
 INSERT
 
@@ -42,145 +42,145 @@ config FEATURE_CMDLINE_MODULE_OPTIONS
 	default y
 	depends on INSMOD || MODPROBE
 	help
-	  Allow insmod and modprobe take module options from the applets'
-	  command line.
+	Allow insmod and modprobe take module options from the applets'
+	command line.
 
 config FEATURE_MODPROBE_SMALL_CHECK_ALREADY_LOADED
 	bool "Skip loading of already loaded modules"
 	default y
 	depends on MODPROBE_SMALL && (DEPMOD || INSMOD || MODPROBE)
 	help
-	  Check if the module is already loaded.
+	Check if the module is already loaded.
 
 config FEATURE_2_4_MODULES
 	bool "Support version 2.2/2.4 Linux kernels"
 	default n
 	depends on (INSMOD || LSMOD || MODPROBE || RMMOD) && !MODPROBE_SMALL
 	help
-	  Support module loading for 2.2.x and 2.4.x Linux kernels.
-	  This increases size considerably. Say N unless you plan
-	  to run ancient kernels.
+	Support module loading for 2.2.x and 2.4.x Linux kernels.
+	This increases size considerably. Say N unless you plan
+	to run ancient kernels.
 
 config FEATURE_INSMOD_VERSION_CHECKING
 	bool "Enable module version checking"
 	default n
 	depends on FEATURE_2_4_MODULES && (INSMOD || MODPROBE)
 	help
-	  Support checking of versions for modules. This is used to
-	  ensure that the kernel and module are made for each other.
+	Support checking of versions for modules. This is used to
+	ensure that the kernel and module are made for each other.
 
 config FEATURE_INSMOD_KSYMOOPS_SYMBOLS
 	bool "Add module symbols to kernel symbol table"
 	default n
 	depends on FEATURE_2_4_MODULES && (INSMOD || MODPROBE)
 	help
-	  By adding module symbols to the kernel symbol table, Oops messages
-	  occurring within kernel modules can be properly debugged. By enabling
-	  this feature, module symbols will always be added to the kernel symbol
-	  table for proper debugging support. If you are not interested in
-	  Oops messages from kernel modules, say N.
+	By adding module symbols to the kernel symbol table, Oops messages
+	occurring within kernel modules can be properly debugged. By enabling
+	this feature, module symbols will always be added to the kernel symbol
+	table for proper debugging support. If you are not interested in
+	Oops messages from kernel modules, say N.
 
 config FEATURE_INSMOD_LOADINKMEM
 	bool "In kernel memory optimization (uClinux only)"
 	default n
 	depends on FEATURE_2_4_MODULES && (INSMOD || MODPROBE)
 	help
-	  This is a special uClinux only memory optimization that lets insmod
-	  load the specified kernel module directly into kernel space, reducing
-	  memory usage by preventing the need for two copies of the module
-	  being loaded into memory.
+	This is a special uClinux only memory optimization that lets insmod
+	load the specified kernel module directly into kernel space, reducing
+	memory usage by preventing the need for two copies of the module
+	being loaded into memory.
 
 config FEATURE_INSMOD_LOAD_MAP
 	bool "Enable insmod load map (-m) option"
 	default n
 	depends on FEATURE_2_4_MODULES && INSMOD
 	help
-	  Enabling this, one would be able to get a load map
-	  output on stdout. This makes kernel module debugging
-	  easier.
-	  If you don't plan to debug kernel modules, you
-	  don't need this option.
+	Enabling this, one would be able to get a load map
+	output on stdout. This makes kernel module debugging
+	easier.
+	If you don't plan to debug kernel modules, you
+	don't need this option.
 
 config FEATURE_INSMOD_LOAD_MAP_FULL
 	bool "Symbols in load map"
 	default y
 	depends on FEATURE_INSMOD_LOAD_MAP
 	help
-	  Without this option, -m will only output section
-	  load map. With this option, -m will also output
-	  symbols load map.
+	Without this option, -m will only output section
+	load map. With this option, -m will also output
+	symbols load map.
 
 config FEATURE_CHECK_TAINTED_MODULE
 	bool "Support tainted module checking with new kernels"
 	default y
 	depends on (LSMOD || FEATURE_2_4_MODULES) && !MODPROBE_SMALL
 	help
-	  Support checking for tainted modules. These are usually binary
-	  only modules that will make the linux-kernel list ignore your
-	  support request.
-	  This option is required to support GPLONLY modules.
+	Support checking for tainted modules. These are usually binary
+	only modules that will make the linux-kernel list ignore your
+	support request.
+	This option is required to support GPLONLY modules.
 
 config FEATURE_INSMOD_TRY_MMAP
 	bool "Try to load module from a mmap'ed area"
 	default n
 	depends on (INSMOD || MODPROBE) && !MODPROBE_SMALL
 	help
-	  This option causes module loading code to try to mmap
-	  module first. If it does not work (for example,
-	  it does not work for compressed modules), module will be read
-	  (and unpacked if needed) into a memory block allocated by malloc.
-
-	  The only case when mmap works but malloc does not is when
-	  you are trying to load a big module on a very memory-constrained
-	  machine. Malloc will momentarily need 2x as much memory as mmap.
+	This option causes module loading code to try to mmap
+	module first. If it does not work (for example,
+	it does not work for compressed modules), module will be read
+	(and unpacked if needed) into a memory block allocated by malloc.
+
+	The only case when mmap works but malloc does not is when
+	you are trying to load a big module on a very memory-constrained
+	machine. Malloc will momentarily need 2x as much memory as mmap.
 
-	  Choosing N saves about 250 bytes of code (on 32-bit x86).
+	Choosing N saves about 250 bytes of code (on 32-bit x86).
 
 config FEATURE_MODUTILS_ALIAS
 	bool "Support module.aliases file"
 	default y
 	depends on (DEPMOD || MODPROBE) && !MODPROBE_SMALL
 	help
-	  Generate and parse modules.alias containing aliases for bus
-	  identifiers:
-	    alias pcmcia:m*c*f03fn*pfn*pa*pb*pc*pd* parport_cs
-
-	  and aliases for logical modules names e.g.:
-	    alias padlock_aes aes
-	    alias aes_i586 aes
-	    alias aes_generic aes
+	Generate and parse modules.alias containing aliases for bus
+	identifiers:
+		alias pcmcia:m*c*f03fn*pfn*pa*pb*pc*pd* parport_cs
+
+	and aliases for logical modules names e.g.:
+		alias padlock_aes aes
+		alias aes_i586 aes
+		alias aes_generic aes
 
-	  Say Y if unsure.
+	Say Y if unsure.
 
 config FEATURE_MODUTILS_SYMBOLS
 	bool "Support module.symbols file"
 	default y
 	depends on (DEPMOD || MODPROBE) && !MODPROBE_SMALL
 	help
-	  Generate and parse modules.symbols containing aliases for
-	  symbol_request() kernel calls, such as:
-	    alias symbol:usb_sg_init usbcore
+	Generate and parse modules.symbols containing aliases for
+	symbol_request() kernel calls, such as:
+		alias symbol:usb_sg_init usbcore
 
-	  Say Y if unsure.
+	Say Y if unsure.
 
 config DEFAULT_MODULES_DIR
 	string "Default directory containing modules"
 	default "/lib/modules"
 	depends on DEPMOD || MODPROBE || MODINFO
 	help
-	  Directory that contains kernel modules.
-	  Defaults to "/lib/modules"
+	Directory that contains kernel modules.
+	Defaults to "/lib/modules"
 
 config DEFAULT_DEPMOD_FILE
 	string "Default name of modules.dep"
 	default "modules.dep"
 	depends on DEPMOD || MODPROBE || MODINFO
 	help
-	  Filename that contains kernel modules dependencies.
-	  Defaults to "modules.dep".
-	  If you configured the "simplified modutils" (MODPROBE_SMALL), a
-	  ".bb" suffix will be added after this name. Do not specify ".bb"
-	  here unless you intend your depmod or modprobe to work on
-	  "modules.dep.bb.bb" or such.
+	Filename that contains kernel modules dependencies.
+	Defaults to "modules.dep".
+	If you configured the "simplified modutils" (MODPROBE_SMALL), a
+	".bb" suffix will be added after this name. Do not specify ".bb"
+	here unless you intend your depmod or modprobe to work on
+	"modules.dep.bb.bb" or such.
 
 endmenu
diff -urpN busybox-1.27.2/modutils/depmod.c busybox-1.28.0/modutils/depmod.c
--- busybox-1.27.2/modutils/depmod.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/modutils/depmod.c	2017-07-24 18:57:09.000000000 +0200
@@ -8,13 +8,13 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config DEPMOD
-//config:	bool "depmod"
+//config:	bool "depmod (26 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  depmod generates modules.dep (and potentially modules.alias
-//config:	  and modules.symbols) that contain dependency information
-//config:	  for modprobe.
+//config:	depmod generates modules.dep (and potentially modules.alias
+//config:	and modules.symbols) that contain dependency information
+//config:	for modprobe.
 
 //applet:IF_DEPMOD(IF_NOT_MODPROBE_SMALL(APPLET(depmod, BB_DIR_SBIN, BB_SUID_DROP)))
 
diff -urpN busybox-1.27.2/modutils/insmod.c busybox-1.28.0/modutils/insmod.c
--- busybox-1.27.2/modutils/insmod.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/modutils/insmod.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,13 +7,13 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config INSMOD
-//config:	bool "insmod"
+//config:	bool "insmod (22 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  insmod is used to load specified modules in the running kernel.
+//config:	insmod is used to load specified modules in the running kernel.
 
-//applet:IF_INSMOD(IF_NOT_MODPROBE_SMALL(APPLET(insmod, BB_DIR_SBIN, BB_SUID_DROP)))
+//applet:IF_INSMOD(IF_NOT_MODPROBE_SMALL(APPLET_NOEXEC(insmod, insmod, BB_DIR_SBIN, BB_SUID_DROP, insmod)))
 
 //kbuild:ifneq ($(CONFIG_MODPROBE_SMALL),y)
 //kbuild:lib-$(CONFIG_INSMOD) += insmod.o modutils.o
diff -urpN busybox-1.27.2/modutils/lsmod.c busybox-1.28.0/modutils/lsmod.c
--- busybox-1.27.2/modutils/lsmod.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/modutils/lsmod.c	2017-08-08 14:08:06.000000000 +0200
@@ -8,22 +8,22 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config LSMOD
-//config:	bool "lsmod"
+//config:	bool "lsmod (4.3 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  lsmod is used to display a list of loaded modules.
+//config:	lsmod is used to display a list of loaded modules.
 //config:
 //config:config FEATURE_LSMOD_PRETTY_2_6_OUTPUT
 //config:	bool "Pretty output"
 //config:	default y
 //config:	depends on LSMOD && !MODPROBE_SMALL
 //config:	help
-//config:	  This option makes output format of lsmod adjusted to
-//config:	  the format of module-init-tools for Linux kernel 2.6.
-//config:	  Increases size somewhat.
+//config:	This option makes output format of lsmod adjusted to
+//config:	the format of module-init-tools for Linux kernel 2.6.
+//config:	Increases size somewhat.
 
-//applet:IF_LSMOD(IF_NOT_MODPROBE_SMALL(APPLET(lsmod, BB_DIR_SBIN, BB_SUID_DROP)))
+//applet:IF_LSMOD(IF_NOT_MODPROBE_SMALL(APPLET_NOEXEC(lsmod, lsmod, BB_DIR_SBIN, BB_SUID_DROP, lsmod)))
 
 //kbuild:ifneq ($(CONFIG_MODPROBE_SMALL),y)
 //kbuild:lib-$(CONFIG_LSMOD) += lsmod.o modutils.o
diff -urpN busybox-1.27.2/modutils/modinfo.c busybox-1.28.0/modutils/modinfo.c
--- busybox-1.27.2/modutils/modinfo.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/modutils/modinfo.c	2017-08-17 13:50:45.000000000 +0200
@@ -6,13 +6,13 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config MODINFO
-//config:	bool "modinfo"
+//config:	bool "modinfo (25 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Show information about a Linux Kernel module
+//config:	Show information about a Linux Kernel module
 
-//applet:IF_MODINFO(APPLET(modinfo, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_MODINFO(APPLET_NOEXEC(modinfo, modinfo, BB_DIR_SBIN, BB_SUID_DROP, modinfo))
 
 //kbuild:lib-$(CONFIG_MODINFO) += modinfo.o modutils.o
 
@@ -148,8 +148,7 @@ int modinfo_main(int argc UNUSED_PARAM,
 	unsigned i;
 
 	field = NULL;
-	opt_complementary = "-1"; /* minimum one param */
-	opts = getopt32(argv, "0F:nadlp", &field);
+	opts = getopt32(argv, "^" "0F:nadlp" "\0" "-1"/*minimum one arg*/, &field);
 	/* If no field selected, show all */
 	if (!(opts & (OPT_TAGS|OPT_F)))
 		option_mask32 |= OPT_TAGS;
diff -urpN busybox-1.27.2/modutils/modprobe-small.c busybox-1.28.0/modutils/modprobe-small.c
--- busybox-1.27.2/modutils/modprobe-small.c	2017-08-17 12:58:15.000000000 +0200
+++ busybox-1.28.0/modutils/modprobe-small.c	2017-08-17 13:50:45.000000000 +0200
@@ -11,12 +11,15 @@
 /* modprobe-small configs are defined in Config.src to ensure better
  * "make config" order */
 
-//applet:IF_LSMOD(   IF_MODPROBE_SMALL(APPLET(lsmod,    BB_DIR_SBIN, BB_SUID_DROP)))
-//applet:IF_MODPROBE(IF_MODPROBE_SMALL(APPLET(modprobe, BB_DIR_SBIN, BB_SUID_DROP)))
-//                                   APPLET_ODDNAME:name    main      location     suid_type     help
-//applet:IF_DEPMOD(IF_MODPROBE_SMALL(APPLET_ODDNAME(depmod, modprobe, BB_DIR_SBIN, BB_SUID_DROP, depmod)))
-//applet:IF_INSMOD(IF_MODPROBE_SMALL(APPLET_ODDNAME(insmod, modprobe, BB_DIR_SBIN, BB_SUID_DROP, insmod)))
-//applet:IF_RMMOD( IF_MODPROBE_SMALL(APPLET_ODDNAME(rmmod,  modprobe, BB_DIR_SBIN, BB_SUID_DROP, rmmod)))
+//applet:IF_LSMOD(   IF_MODPROBE_SMALL(APPLET_NOEXEC( lsmod,    lsmod,    BB_DIR_SBIN, BB_SUID_DROP, lsmod   )))
+//applet:IF_MODPROBE(IF_MODPROBE_SMALL(APPLET_NOEXEC( modprobe, modprobe, BB_DIR_SBIN, BB_SUID_DROP, modprobe)))
+//                                     APPLET_ODDNAME:name      main      location     suid_type     help
+//applet:IF_DEPMOD(  IF_MODPROBE_SMALL(APPLET_ODDNAME(depmod,   modprobe, BB_DIR_SBIN, BB_SUID_DROP, depmod  )))
+//applet:IF_INSMOD(  IF_MODPROBE_SMALL(APPLET_NOEXEC( insmod,   modprobe, BB_DIR_SBIN, BB_SUID_DROP, insmod  )))
+//applet:IF_RMMOD(   IF_MODPROBE_SMALL(APPLET_NOEXEC( rmmod,    modprobe, BB_DIR_SBIN, BB_SUID_DROP, rmmod   )))
+/* noexec speeds up boot with many modules loaded (need SH_STANDALONE=y) */
+/* I measured about ~5 times faster insmod */
+/* depmod is not noexec, it runs longer and benefits from memory trimming via exec */
 
 //kbuild:lib-$(CONFIG_MODPROBE_SMALL) += modprobe-small.o
 
@@ -985,10 +988,9 @@ int modprobe_main(int argc UNUSED_PARAM,
 
 #if ENABLE_MODPROBE || ENABLE_INSMOD || ENABLE_RMMOD
 	/* modprobe, insmod, rmmod require at least one argument */
-	opt_complementary = "-1";
 	/* only -q (quiet) and -r (rmmod),
 	 * the rest are accepted and ignored (compat) */
-	getopt32(argv, "qrfsvwb");
+	getopt32(argv, "^" "qrfsvwb" "\0" "-1");
 	argv += optind;
 
 	if (is_modprobe) {
diff -urpN busybox-1.27.2/modutils/modprobe.c busybox-1.28.0/modutils/modprobe.c
--- busybox-1.27.2/modutils/modprobe.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/modutils/modprobe.c	2017-08-17 13:50:45.000000000 +0200
@@ -8,25 +8,25 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config MODPROBE
-//config:	bool "modprobe"
+//config:	bool "modprobe (29 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Handle the loading of modules, and their dependencies on a high
-//config:	  level.
+//config:	Handle the loading of modules, and their dependencies on a high
+//config:	level.
 //config:
 //config:config FEATURE_MODPROBE_BLACKLIST
 //config:	bool "Blacklist support"
 //config:	default y
 //config:	depends on MODPROBE && !MODPROBE_SMALL
 //config:	help
-//config:	  Say 'y' here to enable support for the 'blacklist' command in
-//config:	  modprobe.conf. This prevents the alias resolver to resolve
-//config:	  blacklisted modules. This is useful if you want to prevent your
-//config:	  hardware autodetection scripts to load modules like evdev, frame
-//config:	  buffer drivers etc.
+//config:	Say 'y' here to enable support for the 'blacklist' command in
+//config:	modprobe.conf. This prevents the alias resolver to resolve
+//config:	blacklisted modules. This is useful if you want to prevent your
+//config:	hardware autodetection scripts to load modules like evdev, frame
+//config:	buffer drivers etc.
 
-//applet:IF_MODPROBE(IF_NOT_MODPROBE_SMALL(APPLET(modprobe, BB_DIR_SBIN, BB_SUID_DROP)))
+//applet:IF_MODPROBE(IF_NOT_MODPROBE_SMALL(APPLET_NOEXEC(modprobe, modprobe, BB_DIR_SBIN, BB_SUID_DROP, modprobe)))
 
 //kbuild:ifneq ($(CONFIG_MODPROBE_SMALL),y)
 //kbuild:lib-$(CONFIG_MODPROBE) += modprobe.o modutils.o
@@ -133,7 +133,7 @@
  */
 #define MODPROBE_OPTS  "alrDb"
 /* -a and -D _are_ in fact compatible */
-#define MODPROBE_COMPLEMENTARY ("q-v:v-q:l--arD:r--alD:a--lr:D--rl")
+#define MODPROBE_COMPLEMENTARY "q-v:v-q:l--arD:r--alD:a--lr:D--rl"
 //#define MODPROBE_OPTS  "acd:lnrt:C:b"
 //#define MODPROBE_COMPLEMENTARY "q-v:v-q:l--acr:a--lr:r--al"
 enum {
@@ -566,9 +566,10 @@ int modprobe_main(int argc UNUSED_PARAM,
 
 	INIT_G();
 
-	IF_LONG_OPTS(applet_long_options = modprobe_longopts;)
-	opt_complementary = MODPROBE_COMPLEMENTARY;
-	opt = getopt32(argv, INSMOD_OPTS MODPROBE_OPTS INSMOD_ARGS);
+	opt = getopt32long(argv, "^" INSMOD_OPTS MODPROBE_OPTS "\0" MODPROBE_COMPLEMENTARY,
+			modprobe_longopts
+			INSMOD_ARGS
+	);
 	argv += optind;
 
 	/* Goto modules location */
diff -urpN busybox-1.27.2/modutils/modutils-24.c busybox-1.28.0/modutils/modutils-24.c
--- busybox-1.27.2/modutils/modutils-24.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/modutils/modutils-24.c	2017-08-03 17:53:10.000000000 +0200
@@ -2269,8 +2269,8 @@ static int add_symbols_from(struct obj_f
 
 #ifdef SYMBOL_PREFIX
 		/* Prepend SYMBOL_PREFIX to the symbol's name (the
-		   kernel exports `C names', but module object files
-		   reference `linker names').  */
+		   kernel exports 'C names', but module object files
+		   reference 'linker names').  */
 		size_t extra = sizeof SYMBOL_PREFIX;
 		size_t name_size = strlen(name) + extra;
 		if (name_size > name_alloced_size) {
diff -urpN busybox-1.27.2/modutils/rmmod.c busybox-1.28.0/modutils/rmmod.c
--- busybox-1.27.2/modutils/rmmod.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/modutils/rmmod.c	2017-08-08 14:08:06.000000000 +0200
@@ -8,13 +8,13 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config RMMOD
-//config:	bool "rmmod"
+//config:	bool "rmmod (3.6 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  rmmod is used to unload specified modules from the kernel.
+//config:	rmmod is used to unload specified modules from the kernel.
 
-//applet:IF_RMMOD(IF_NOT_MODPROBE_SMALL(APPLET(rmmod, BB_DIR_SBIN, BB_SUID_DROP)))
+//applet:IF_RMMOD(IF_NOT_MODPROBE_SMALL(APPLET_NOEXEC(rmmod, rmmod, BB_DIR_SBIN, BB_SUID_DROP, rmmod)))
 
 //kbuild:ifneq ($(CONFIG_MODPROBE_SMALL),y)
 //kbuild:lib-$(CONFIG_RMMOD) += rmmod.o modutils.o
diff -urpN busybox-1.27.2/networking/Config.src busybox-1.28.0/networking/Config.src
--- busybox-1.27.2/networking/Config.src	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/Config.src	2017-07-24 18:57:09.000000000 +0200
@@ -9,42 +9,42 @@ config FEATURE_IPV6
 	bool "Enable IPv6 support"
 	default y
 	help
-	  Enable IPv6 support in busybox.
-	  This adds IPv6 support in the networking applets.
+	Enable IPv6 support in busybox.
+	This adds IPv6 support in the networking applets.
 
 config FEATURE_UNIX_LOCAL
 	bool "Enable Unix domain socket support (usually not needed)"
 	default n
 	help
-	  Enable Unix domain socket support in all busybox networking
-	  applets.  Address of the form local:/path/to/unix/socket
-	  will be recognized.
+	Enable Unix domain socket support in all busybox networking
+	applets.  Address of the form local:/path/to/unix/socket
+	will be recognized.
 
-	  This extension is almost never used in real world usage.
-	  You most likely want to say N.
+	This extension is almost never used in real world usage.
+	You most likely want to say N.
 
 config FEATURE_PREFER_IPV4_ADDRESS
 	bool "Prefer IPv4 addresses from DNS queries"
 	default y
 	depends on FEATURE_IPV6
 	help
-	  Use IPv4 address of network host if it has one.
+	Use IPv4 address of network host if it has one.
 
-	  If this option is off, the first returned address will be used.
-	  This may cause problems when your DNS server is IPv6-capable and
-	  is returning IPv6 host addresses too. If IPv6 address
-	  precedes IPv4 one in DNS reply, busybox network applets
-	  (e.g. wget) will use IPv6 address. On an IPv6-incapable host
-	  or network applets will fail to connect to the host
-	  using IPv6 address.
+	If this option is off, the first returned address will be used.
+	This may cause problems when your DNS server is IPv6-capable and
+	is returning IPv6 host addresses too. If IPv6 address
+	precedes IPv4 one in DNS reply, busybox network applets
+	(e.g. wget) will use IPv6 address. On an IPv6-incapable host
+	or network applets will fail to connect to the host
+	using IPv6 address.
 
 config VERBOSE_RESOLUTION_ERRORS
 	bool "Verbose resolution errors"
 	default n
 	help
-	  Enable if you are not satisfied with simplistic
-	  "can't resolve 'hostname.com'" and want to know more.
-	  This may increase size of your executable a bit.
+	Enable if you are not satisfied with simplistic
+	"can't resolve 'hostname.com'" and want to know more.
+	This may increase size of your executable a bit.
 
 INSERT
 
@@ -55,8 +55,8 @@ config IFUPDOWN_UDHCPC_CMD_OPTIONS
 	default "-R -n"
 	depends on IFUP || IFDOWN
 	help
-	  Command line options to pass to udhcpc from ifup.
-	  Intended to alter options not available in /etc/network/interfaces.
-	  (IE: --syslog --background etc...)
+	Command line options to pass to udhcpc from ifup.
+	Intended to alter options not available in /etc/network/interfaces.
+	(IE: --syslog --background etc...)
 
 endmenu
diff -urpN busybox-1.27.2/networking/arp.c busybox-1.28.0/networking/arp.c
--- busybox-1.27.2/networking/arp.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/arp.c	2017-07-24 18:57:09.000000000 +0200
@@ -13,11 +13,11 @@
  * modified for getopt32 by Arne Bernin <arne [at] alamut.de>
  */
 //config:config ARP
-//config:	bool "arp"
+//config:	bool "arp (11 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Manipulate the system ARP cache.
+//config:	Manipulate the system ARP cache.
 
 //applet:IF_ARP(APPLET(arp, BB_DIR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/networking/arping.c busybox-1.28.0/networking/arping.c
--- busybox-1.27.2/networking/arping.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/arping.c	2017-08-17 13:50:45.000000000 +0200
@@ -6,11 +6,11 @@
  * Busybox port: Nick Fedchik <nick@fedchik.org.ua>
  */
 //config:config ARPING
-//config:	bool "arping"
+//config:	bool "arping (9.3 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Ping hosts by ARP packets.
+//config:	Ping hosts by ARP packets.
 //config:
 
 //applet:IF_ARPING(APPLET(arping, BB_DIR_USR_SBIN, BB_SUID_DROP))
@@ -295,8 +295,8 @@ int arping_main(int argc UNUSED_PARAM, c
 
 	sock_fd = xsocket(AF_PACKET, SOCK_DGRAM, 0);
 
-	// Drop suid root privileges
-	// Need to remove SUID_NEVER from applets.h for this to work
+	// If you ever change BB_SUID_DROP to BB_SUID_REQUIRE,
+	// drop suid root privileges here:
 	//xsetuid(getuid());
 
 	{
@@ -306,9 +306,9 @@ int arping_main(int argc UNUSED_PARAM, c
 		/* Dad also sets quit_on_reply.
 		 * Advert also sets unsolicited.
 		 */
-		opt_complementary = "=1:Df:AU";
-		opt = getopt32(argv, "DUAqfbc:+w:I:s:",
-				&count, &str_timeout, &device, &source);
+		opt = getopt32(argv, "^" "DUAqfbc:+w:I:s:" "\0" "=1:Df:AU",
+				&count, &str_timeout, &device, &source
+		);
 		if (opt & 0x80) /* -w: timeout */
 			timeout_us = xatou_range(str_timeout, 0, INT_MAX/2000000) * 1000000 + 500000;
 		//if (opt & 0x200) /* -s: source */
diff -urpN busybox-1.27.2/networking/brctl.c busybox-1.28.0/networking/brctl.c
--- busybox-1.27.2/networking/brctl.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/brctl.c	2017-08-08 14:08:06.000000000 +0200
@@ -13,33 +13,33 @@
  * At the time of this writing this was considered a feature.
  */
 //config:config BRCTL
-//config:	bool "brctl"
+//config:	bool "brctl (4.7 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Manage ethernet bridges.
-//config:	  Supports addbr/delbr and addif/delif.
+//config:	Manage ethernet bridges.
+//config:	Supports addbr/delbr and addif/delif.
 //config:
 //config:config FEATURE_BRCTL_FANCY
 //config:	bool "Fancy options"
 //config:	default y
 //config:	depends on BRCTL
 //config:	help
-//config:	  Add support for extended option like:
-//config:	    setageing, setfd, sethello, setmaxage,
-//config:	    setpathcost, setportprio, setbridgeprio,
-//config:	    stp
-//config:	  This adds about 600 bytes.
+//config:	Add support for extended option like:
+//config:		setageing, setfd, sethello, setmaxage,
+//config:		setpathcost, setportprio, setbridgeprio,
+//config:		stp
+//config:	This adds about 600 bytes.
 //config:
 //config:config FEATURE_BRCTL_SHOW
 //config:	bool "Support show"
 //config:	default y
 //config:	depends on BRCTL && FEATURE_BRCTL_FANCY
 //config:	help
-//config:	  Add support for option which prints the current config:
-//config:	    show
+//config:	Add support for option which prints the current config:
+//config:		show
 
-//applet:IF_BRCTL(APPLET(brctl, BB_DIR_USR_SBIN, BB_SUID_DROP))
+//applet:IF_BRCTL(APPLET_NOEXEC(brctl, brctl, BB_DIR_USR_SBIN, BB_SUID_DROP, brctl))
 
 //kbuild:lib-$(CONFIG_BRCTL) += brctl.o
 
diff -urpN busybox-1.27.2/networking/dnsd.c busybox-1.28.0/networking/dnsd.c
--- busybox-1.27.2/networking/dnsd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/dnsd.c	2017-07-24 18:57:09.000000000 +0200
@@ -17,10 +17,10 @@
  * the first porting of oao' scdns to busybox also.
  */
 //config:config DNSD
-//config:	bool "dnsd"
+//config:	bool "dnsd (9.8 kb)"
 //config:	default y
 //config:	help
-//config:	  Small and static DNS server daemon.
+//config:	Small and static DNS server daemon.
 
 //applet:IF_DNSD(APPLET(dnsd, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/networking/ether-wake.c busybox-1.28.0/networking/ether-wake.c
--- busybox-1.27.2/networking/ether-wake.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/ether-wake.c	2017-08-17 13:50:45.000000000 +0200
@@ -64,11 +64,11 @@
  *   filter.  That configuration consumes more power.
  */
 //config:config ETHER_WAKE
-//config:	bool "ether-wake"
+//config:	bool "ether-wake (6.6 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Send a magic packet to wake up sleeping machines.
+//config:	Send a magic packet to wake up sleeping machines.
 
 //applet:IF_ETHER_WAKE(APPLET_ODDNAME(ether-wake, ether_wake, BB_DIR_USR_SBIN, BB_SUID_DROP, ether_wake))
 
@@ -212,8 +212,7 @@ int ether_wake_main(int argc UNUSED_PARA
 	struct whereto_t whereto;  /* who to wake up */
 
 	/* handle misc user options */
-	opt_complementary = "=1";
-	flags = getopt32(argv, "bi:p:", &ifname, &pass);
+	flags = getopt32(argv, "^" "bi:p:" "\0" "=1", &ifname, &pass);
 	if (flags & 4) /* -p */
 		wol_passwd_sz = get_wol_pw(pass, wol_passwd);
 	flags &= 1; /* we further interested only in -b [bcast] flag */
diff -urpN busybox-1.27.2/networking/ftpd.c busybox-1.28.0/networking/ftpd.c
--- busybox-1.27.2/networking/ftpd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/ftpd.c	2017-08-17 13:50:45.000000000 +0200
@@ -12,35 +12,42 @@
  * You have to run this daemon via inetd.
  */
 //config:config FTPD
-//config:	bool "ftpd"
+//config:	bool "ftpd (30 kb)"
 //config:	default y
 //config:	help
-//config:	  Simple FTP daemon. You have to run it via inetd.
+//config:	Simple FTP daemon. You have to run it via inetd.
 //config:
 //config:config FEATURE_FTPD_WRITE
-//config:	bool "Enable upload commands"
+//config:	bool "Enable -w (upload commands)"
 //config:	default y
 //config:	depends on FTPD
 //config:	help
-//config:	  Enable all kinds of FTP upload commands (-w option)
+//config:	Enable -w option. "ftpd -w" will accept upload commands
+//config:	such as STOR, STOU, APPE, DELE, MKD, RMD, rename commands.
 //config:
 //config:config FEATURE_FTPD_ACCEPT_BROKEN_LIST
 //config:	bool "Enable workaround for RFC-violating clients"
 //config:	default y
 //config:	depends on FTPD
 //config:	help
-//config:	  Some ftp clients (among them KDE's Konqueror) issue illegal
-//config:	  "LIST -l" requests. This option works around such problems.
-//config:	  It might prevent you from listing files starting with "-" and
-//config:	  it increases the code size by ~40 bytes.
-//config:	  Most other ftp servers seem to behave similar to this.
+//config:	Some ftp clients (among them KDE's Konqueror) issue illegal
+//config:	"LIST -l" requests. This option works around such problems.
+//config:	It might prevent you from listing files starting with "-" and
+//config:	it increases the code size by ~40 bytes.
+//config:	Most other ftp servers seem to behave similar to this.
 //config:
 //config:config FEATURE_FTPD_AUTHENTICATION
 //config:	bool "Enable authentication"
 //config:	default y
 //config:	depends on FTPD
 //config:	help
-//config:	  Enable basic system login as seen in telnet etc.
+//config:	Require login, and change to logged in user's UID:GID before
+//config:	accessing any files. Option "-a USER" allows "anonymous"
+//config:	logins (treats them as if USER logged in).
+//config:
+//config:	If this option is not selected, ftpd runs with the rights
+//config:	of the user it was started under, and does not require login.
+//config:	Take care to not launch it under root.
 
 //applet:IF_FTPD(APPLET(ftpd, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -1167,17 +1174,20 @@ int ftpd_main(int argc UNUSED_PARAM, cha
 	abs_timeout = 1 * 60 * 60;
 	verbose_S = 0;
 	G.timeout = 2 * 60;
-	opt_complementary = "vv:SS";
 #if BB_MMU
-	opts = getopt32(argv,    "vS"
-		IF_FEATURE_FTPD_WRITE("w") "t:+T:+" IF_FEATURE_FTPD_AUTHENTICATION("a:"),
+	opts = getopt32(argv, "^"    "vS"
+		IF_FEATURE_FTPD_WRITE("w") "t:+T:+" IF_FEATURE_FTPD_AUTHENTICATION("a:")
+		"\0" "vv:SS",
 		&G.timeout, &abs_timeout, IF_FEATURE_FTPD_AUTHENTICATION(&anon_opt,)
-		&G.verbose, &verbose_S);
+		&G.verbose, &verbose_S
+	);
 #else
-	opts = getopt32(argv, "l1AvS"
-		IF_FEATURE_FTPD_WRITE("w") "t:+T:+" IF_FEATURE_FTPD_AUTHENTICATION("a:"),
+	opts = getopt32(argv, "^" "l1AvS"
+		IF_FEATURE_FTPD_WRITE("w") "t:+T:+" IF_FEATURE_FTPD_AUTHENTICATION("a:")
+		"\0" "vv:SS",
 		&G.timeout, &abs_timeout, IF_FEATURE_FTPD_AUTHENTICATION(&anon_opt,)
-		&G.verbose, &verbose_S);
+		&G.verbose, &verbose_S
+	);
 	if (opts & (OPT_l|OPT_1)) {
 		/* Our secret backdoor to ls */
 		if (fchdir(3) != 0)
diff -urpN busybox-1.27.2/networking/ftpgetput.c busybox-1.28.0/networking/ftpgetput.c
--- busybox-1.27.2/networking/ftpgetput.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/ftpgetput.c	2017-08-17 13:50:45.000000000 +0200
@@ -13,16 +13,16 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config FTPGET
-//config:	bool "ftpget"
+//config:	bool "ftpget (8 kb)"
 //config:	default y
 //config:	help
-//config:	  Retrieve a remote file via FTP.
+//config:	Retrieve a remote file via FTP.
 //config:
 //config:config FTPPUT
-//config:	bool "ftpput"
+//config:	bool "ftpput (7.7 kb)"
 //config:	default y
 //config:	help
-//config:	  Store a remote file via FTP.
+//config:	Store a remote file via FTP.
 //config:
 //config:config FEATURE_FTPGETPUT_LONG_OPTIONS
 //config:	bool "Enable long options in ftpget/ftpput"
@@ -39,37 +39,20 @@
 //usage:       "[OPTIONS] HOST [LOCAL_FILE] REMOTE_FILE"
 //usage:#define ftpget_full_usage "\n\n"
 //usage:       "Download a file via FTP\n"
-//usage:	IF_FEATURE_FTPGETPUT_LONG_OPTIONS(
-//usage:     "\n	-c,--continue		Continue previous transfer"
-//usage:     "\n	-v,--verbose		Verbose"
-//usage:     "\n	-u,--username USER	Username"
-//usage:     "\n	-p,--password PASS	Password"
-//usage:     "\n	-P,--port NUM		Port"
-//usage:	)
-//usage:	IF_NOT_FEATURE_FTPGETPUT_LONG_OPTIONS(
 //usage:     "\n	-c	Continue previous transfer"
 //usage:     "\n	-v	Verbose"
 //usage:     "\n	-u USER	Username"
 //usage:     "\n	-p PASS	Password"
 //usage:     "\n	-P NUM	Port"
-//usage:	)
 //usage:
 //usage:#define ftpput_trivial_usage
 //usage:       "[OPTIONS] HOST [REMOTE_FILE] LOCAL_FILE"
 //usage:#define ftpput_full_usage "\n\n"
 //usage:       "Upload a file to a FTP server\n"
-//usage:	IF_FEATURE_FTPGETPUT_LONG_OPTIONS(
-//usage:     "\n	-v,--verbose		Verbose"
-//usage:     "\n	-u,--username USER	Username"
-//usage:     "\n	-p,--password PASS	Password"
-//usage:     "\n	-P,--port NUM		Port"
-//usage:	)
-//usage:	IF_NOT_FEATURE_FTPGETPUT_LONG_OPTIONS(
 //usage:     "\n	-v	Verbose"
 //usage:     "\n	-u USER	Username"
 //usage:     "\n	-p PASS	Password"
 //usage:     "\n	-P NUM	Port number"
-//usage:	)
 
 #include "libbb.h"
 #include "common_bufsiz.h"
@@ -361,12 +344,15 @@ int ftpgetput_main(int argc UNUSED_PARAM
 	/*
 	 * Decipher the command line
 	 */
+	/* must have 2 to 3 params; -v and -c count */
+#define OPTSTRING "^cvu:p:P:" "\0" "-2:?3:vv:cc"
 #if ENABLE_FEATURE_FTPGETPUT_LONG_OPTIONS
-	applet_long_options = ftpgetput_longopts;
+	getopt32long(argv, OPTSTRING, ftpgetput_longopts,
+#else
+	getopt32(argv, OPTSTRING,
 #endif
-	opt_complementary = "-2:vv:cc"; /* must have 2 to 3 params; -v and -c count */
-	getopt32(argv, "cvu:p:P:", &user, &password, &port,
-					&verbose_flag, &do_continue);
+			&user, &password, &port, &verbose_flag, &do_continue
+	);
 	argv += optind;
 
 	/* We want to do exactly _one_ DNS lookup, since some
diff -urpN busybox-1.27.2/networking/hostname.c busybox-1.28.0/networking/hostname.c
--- busybox-1.27.2/networking/hostname.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/hostname.c	2017-10-05 11:53:08.000000000 +0200
@@ -9,22 +9,21 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config HOSTNAME
-//config:	bool "hostname"
+//config:	bool "hostname (5.6 kb)"
 //config:	default y
 //config:	help
-//config:	  Show or set the system's host name.
+//config:	Show or set the system's host name.
 //config:
 //config:config DNSDOMAINNAME
-//config:	bool "dnsdomainname"
+//config:	bool "dnsdomainname (3.6 kb)"
 //config:	default y
 //config:	help
-//config:	  Alias to "hostname -d".
+//config:	Alias to "hostname -d".
 
-//                        APPLET_ODDNAME:name           main      location    suid_type     help
-//applet:IF_DNSDOMAINNAME(APPLET_ODDNAME(dnsdomainname, hostname, BB_DIR_BIN, BB_SUID_DROP, dnsdomainname))
-//applet:IF_HOSTNAME(APPLET(hostname, BB_DIR_BIN, BB_SUID_DROP))
+//                        APPLET_NOEXEC:name           main      location    suid_type     help
+//applet:IF_DNSDOMAINNAME(APPLET_NOEXEC(dnsdomainname, hostname, BB_DIR_BIN, BB_SUID_DROP, dnsdomainname))
+//applet:IF_HOSTNAME(     APPLET_NOEXEC(hostname,      hostname, BB_DIR_BIN, BB_SUID_DROP, hostname     ))
 
 //kbuild: lib-$(CONFIG_HOSTNAME) += hostname.o
 //kbuild: lib-$(CONFIG_DNSDOMAINNAME) += hostname.o
@@ -114,7 +113,7 @@ static void do_sethostname(char *s, int
  *  { bbox: not supported }
  * -F, --file filename
  *  Read the host name from the specified file. Comments (lines
- *  starting with a `#') are ignored.
+ *  starting with a '#') are ignored.
  */
 int hostname_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int hostname_main(int argc UNUSED_PARAM, char **argv)
@@ -132,8 +131,9 @@ int hostname_main(int argc UNUSED_PARAM,
 	char *buf;
 	char *hostname_str;
 
-#if ENABLE_LONG_OPTS
-	applet_long_options =
+	/* dnsdomainname from net-tools 1.60, hostname 1.100 (2001-04-14),
+	 * supports hostname's options too (not just -v as manpage says) */
+	opts = getopt32(argv, "dfisF:v", &hostname_str,
 		"domain\0"     No_argument "d"
 		"fqdn\0"       No_argument "f"
 	//Enable if seen in active use in some distro:
@@ -142,12 +142,7 @@ int hostname_main(int argc UNUSED_PARAM,
 	//	"short\0"      No_argument "s"
 	//	"verbose\0"    No_argument "v"
 		"file\0"       No_argument "F"
-		;
-
-#endif
-	/* dnsdomainname from net-tools 1.60, hostname 1.100 (2001-04-14),
-	 * supports hostname's options too (not just -v as manpage says) */
-	opts = getopt32(argv, "dfisF:v", &hostname_str);
+	);
 	argv += optind;
 	buf = safe_gethostname();
 	if (ENABLE_DNSDOMAINNAME) {
diff -urpN busybox-1.27.2/networking/httpd.c busybox-1.28.0/networking/httpd.c
--- busybox-1.27.2/networking/httpd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/httpd.c	2017-10-05 11:53:08.000000000 +0200
@@ -99,123 +99,123 @@
  */
  /* TODO: use TCP_CORK, parse_config() */
 //config:config HTTPD
-//config:	bool "httpd"
+//config:	bool "httpd (32 kb)"
 //config:	default y
 //config:	help
-//config:	  HTTP server.
+//config:	HTTP server.
 //config:
 //config:config FEATURE_HTTPD_RANGES
 //config:	bool "Support 'Ranges:' header"
 //config:	default y
 //config:	depends on HTTPD
 //config:	help
-//config:	  Makes httpd emit "Accept-Ranges: bytes" header and understand
-//config:	  "Range: bytes=NNN-[MMM]" header. Allows for resuming interrupted
-//config:	  downloads, seeking in multimedia players etc.
+//config:	Makes httpd emit "Accept-Ranges: bytes" header and understand
+//config:	"Range: bytes=NNN-[MMM]" header. Allows for resuming interrupted
+//config:	downloads, seeking in multimedia players etc.
 //config:
 //config:config FEATURE_HTTPD_SETUID
 //config:	bool "Enable -u <user> option"
 //config:	default y
 //config:	depends on HTTPD
 //config:	help
-//config:	  This option allows the server to run as a specific user
-//config:	  rather than defaulting to the user that starts the server.
-//config:	  Use of this option requires special privileges to change to a
-//config:	  different user.
+//config:	This option allows the server to run as a specific user
+//config:	rather than defaulting to the user that starts the server.
+//config:	Use of this option requires special privileges to change to a
+//config:	different user.
 //config:
 //config:config FEATURE_HTTPD_BASIC_AUTH
-//config:	bool "Enable Basic http Authentication"
+//config:	bool "Enable HTTP authentication"
 //config:	default y
 //config:	depends on HTTPD
 //config:	help
-//config:	  Utilizes password settings from /etc/httpd.conf for basic
-//config:	  authentication on a per url basis.
-//config:	  Example for httpd.conf file:
-//config:	  /adm:toor:PaSsWd
+//config:	Utilizes password settings from /etc/httpd.conf for basic
+//config:	authentication on a per url basis.
+//config:	Example for httpd.conf file:
+//config:	/adm:toor:PaSsWd
 //config:
 //config:config FEATURE_HTTPD_AUTH_MD5
-//config:	bool "Support MD5 crypted passwords for http Authentication"
+//config:	bool "Support MD5-encrypted passwords in HTTP authentication"
 //config:	default y
 //config:	depends on FEATURE_HTTPD_BASIC_AUTH
 //config:	help
-//config:	  Enables encrypted passwords, and wildcard user/passwords
-//config:	  in httpd.conf file.
-//config:	  User '*' means 'any system user name is ok',
-//config:	  password of '*' means 'use system password for this user'
-//config:	  Examples:
-//config:	  /adm:toor:$1$P/eKnWXS$aI1aPGxT.dJD5SzqAKWrF0
-//config:	  /adm:root:*
-//config:	  /wiki:*:*
+//config:	Enables encrypted passwords, and wildcard user/passwords
+//config:	in httpd.conf file.
+//config:	User '*' means 'any system user name is ok',
+//config:	password of '*' means 'use system password for this user'
+//config:	Examples:
+//config:	/adm:toor:$1$P/eKnWXS$aI1aPGxT.dJD5SzqAKWrF0
+//config:	/adm:root:*
+//config:	/wiki:*:*
 //config:
 //config:config FEATURE_HTTPD_CGI
 //config:	bool "Support Common Gateway Interface (CGI)"
 //config:	default y
 //config:	depends on HTTPD
 //config:	help
-//config:	  This option allows scripts and executables to be invoked
-//config:	  when specific URLs are requested.
+//config:	This option allows scripts and executables to be invoked
+//config:	when specific URLs are requested.
 //config:
 //config:config FEATURE_HTTPD_CONFIG_WITH_SCRIPT_INTERPR
 //config:	bool "Support running scripts through an interpreter"
 //config:	default y
 //config:	depends on FEATURE_HTTPD_CGI
 //config:	help
-//config:	  This option enables support for running scripts through an
-//config:	  interpreter. Turn this on if you want PHP scripts to work
-//config:	  properly. You need to supply an additional line in your
-//config:	  httpd.conf file:
-//config:	  *.php:/path/to/your/php
+//config:	This option enables support for running scripts through an
+//config:	interpreter. Turn this on if you want PHP scripts to work
+//config:	properly. You need to supply an additional line in your
+//config:	httpd.conf file:
+//config:	*.php:/path/to/your/php
 //config:
 //config:config FEATURE_HTTPD_SET_REMOTE_PORT_TO_ENV
 //config:	bool "Set REMOTE_PORT environment variable for CGI"
 //config:	default y
 //config:	depends on FEATURE_HTTPD_CGI
 //config:	help
-//config:	  Use of this option can assist scripts in generating
-//config:	  references that contain a unique port number.
+//config:	Use of this option can assist scripts in generating
+//config:	references that contain a unique port number.
 //config:
 //config:config FEATURE_HTTPD_ENCODE_URL_STR
 //config:	bool "Enable -e option (useful for CGIs written as shell scripts)"
 //config:	default y
 //config:	depends on HTTPD
 //config:	help
-//config:	  This option allows html encoding of arbitrary strings for display
-//config:	  by the browser. Output goes to stdout.
-//config:	  For example, httpd -e "<Hello World>" produces
-//config:	  "&#60Hello&#32World&#62".
+//config:	This option allows html encoding of arbitrary strings for display
+//config:	by the browser. Output goes to stdout.
+//config:	For example, httpd -e "<Hello World>" produces
+//config:	"&#60Hello&#32World&#62".
 //config:
 //config:config FEATURE_HTTPD_ERROR_PAGES
 //config:	bool "Support custom error pages"
 //config:	default y
 //config:	depends on HTTPD
 //config:	help
-//config:	  This option allows you to define custom error pages in
-//config:	  the configuration file instead of the default HTTP status
-//config:	  error pages. For instance, if you add the line:
-//config:	        E404:/path/e404.html
-//config:	  in the config file, the server will respond the specified
-//config:	  '/path/e404.html' file instead of the terse '404 NOT FOUND'
-//config:	  message.
+//config:	This option allows you to define custom error pages in
+//config:	the configuration file instead of the default HTTP status
+//config:	error pages. For instance, if you add the line:
+//config:		E404:/path/e404.html
+//config:	in the config file, the server will respond the specified
+//config:	'/path/e404.html' file instead of the terse '404 NOT FOUND'
+//config:	message.
 //config:
 //config:config FEATURE_HTTPD_PROXY
 //config:	bool "Support reverse proxy"
 //config:	default y
 //config:	depends on HTTPD
 //config:	help
-//config:	  This option allows you to define URLs that will be forwarded
-//config:	  to another HTTP server. To setup add the following line to the
-//config:	  configuration file
-//config:	        P:/url/:http://hostname[:port]/new/path/
-//config:	  Then a request to /url/myfile will be forwarded to
-//config:	  http://hostname[:port]/new/path/myfile.
+//config:	This option allows you to define URLs that will be forwarded
+//config:	to another HTTP server. To setup add the following line to the
+//config:	configuration file
+//config:		P:/url/:http://hostname[:port]/new/path/
+//config:	Then a request to /url/myfile will be forwarded to
+//config:	http://hostname[:port]/new/path/myfile.
 //config:
 //config:config FEATURE_HTTPD_GZIP
 //config:	bool "Support GZIP content encoding"
 //config:	default y
 //config:	depends on HTTPD
 //config:	help
-//config:	  Makes httpd send files using GZIP content encoding if the
-//config:	  client supports it and a pre-compressed <file>.gz exists.
+//config:	Makes httpd send files using GZIP content encoding if the
+//config:	client supports it and a pre-compressed <file>.gz exists.
 
 //applet:IF_HTTPD(APPLET(httpd, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -1371,12 +1371,13 @@ static NOINLINE void cgi_io_loop_and_exi
 				out_cnt += count;
 				count = 0;
 				/* "Status" header format is: "Status: 302 Redirected\r\n" */
-				if (out_cnt >= 7 && memcmp(rbuf, "Status:", 7) == 0) {
+				if (out_cnt >= 8 && memcmp(rbuf, "Status: ", 8) == 0) {
 					/* send "HTTP/1.0 " */
 					if (full_write(STDOUT_FILENO, HTTP_200, 9) != 9)
 						break;
-					rbuf += 7; /* skip "Status:" */
-					count = out_cnt - 7;
+					/* skip "Status: " (including space, sending "HTTP/1.0  NNN" is wrong) */
+					rbuf += 8;
+					count = out_cnt - 8;
 					out_cnt = -1; /* buffering off */
 				} else if (out_cnt >= 4) {
 					/* Did CGI add "HTTP"? */
@@ -2337,7 +2338,7 @@ static void handle_incoming_and_exit(con
 			if (STRNCASECMP(iobuf, "Range:") == 0) {
 				/* We know only bytes=NNN-[MMM] */
 				char *s = skip_whitespace(iobuf + sizeof("Range:")-1);
-				if (is_prefixed_with(s, "bytes=") == 0) {
+				if (is_prefixed_with(s, "bytes=")) {
 					s += sizeof("bytes=")-1;
 					range_start = BB_STRTOOFF(s, &s, 10);
 					if (s[0] != '-' || range_start < 0) {
@@ -2636,17 +2637,19 @@ int httpd_main(int argc UNUSED_PARAM, ch
 #endif
 
 	home_httpd = xrealloc_getcwd_or_warn(NULL);
-	/* -v counts, -i implies -f */
-	opt_complementary = "vv:if";
 	/* We do not "absolutize" path given by -h (home) opt.
 	 * If user gives relative path in -h,
 	 * $SCRIPT_FILENAME will not be set. */
-	opt = getopt32(argv, "c:d:h:"
+	opt = getopt32(argv, "^"
+			"c:d:h:"
 			IF_FEATURE_HTTPD_ENCODE_URL_STR("e:")
 			IF_FEATURE_HTTPD_BASIC_AUTH("r:")
 			IF_FEATURE_HTTPD_AUTH_MD5("m:")
 			IF_FEATURE_HTTPD_SETUID("u:")
-			"p:ifv",
+			"p:ifv"
+			"\0"
+			/* -v counts, -i implies -f */
+			"vv:if",
 			&opt_c_configFile, &url_for_decode, &home_httpd
 			IF_FEATURE_HTTPD_ENCODE_URL_STR(, &url_for_encode)
 			IF_FEATURE_HTTPD_BASIC_AUTH(, &g_realm)
diff -urpN busybox-1.27.2/networking/ifconfig.c busybox-1.28.0/networking/ifconfig.c
--- busybox-1.27.2/networking/ifconfig.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/ifconfig.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,18 +1,17 @@
 /* vi: set sw=4 ts=4: */
-/* ifconfig
+/*
+ * ifconfig
  *
  * Similar to the standard Unix ifconfig, but with only the necessary
  * parts for AF_INET, and without any printing of if info (for now).
  *
  * Bjorn Wesen, Axis Communications AB
  *
- *
  * Authors of the original ifconfig was:
  *              Fred N. van Kempen, <waltje@uwalt.nl.mugnet.org>
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 /*
  * Heavily modified by Manuel Novoa III       Mar 6, 2001
  *
@@ -26,52 +25,52 @@
  * IPV6 support added by Bart Visscher <magick@linux-fan.com>
  */
 //config:config IFCONFIG
-//config:	bool "ifconfig"
+//config:	bool "ifconfig (12 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Ifconfig is used to configure the kernel-resident network interfaces.
+//config:	Ifconfig is used to configure the kernel-resident network interfaces.
 //config:
 //config:config FEATURE_IFCONFIG_STATUS
 //config:	bool "Enable status reporting output (+7k)"
 //config:	default y
 //config:	depends on IFCONFIG
 //config:	help
-//config:	  If ifconfig is called with no arguments it will display the status
-//config:	  of the currently active interfaces.
+//config:	If ifconfig is called with no arguments it will display the status
+//config:	of the currently active interfaces.
 //config:
 //config:config FEATURE_IFCONFIG_SLIP
 //config:	bool "Enable slip-specific options \"keepalive\" and \"outfill\""
 //config:	default y
 //config:	depends on IFCONFIG
 //config:	help
-//config:	  Allow "keepalive" and "outfill" support for SLIP. If you're not
-//config:	  planning on using serial lines, leave this unchecked.
+//config:	Allow "keepalive" and "outfill" support for SLIP. If you're not
+//config:	planning on using serial lines, leave this unchecked.
 //config:
 //config:config FEATURE_IFCONFIG_MEMSTART_IOADDR_IRQ
 //config:	bool "Enable options \"mem_start\", \"io_addr\", and \"irq\""
 //config:	default y
 //config:	depends on IFCONFIG
 //config:	help
-//config:	  Allow the start address for shared memory, start address for I/O,
-//config:	  and/or the interrupt line used by the specified device.
+//config:	Allow the start address for shared memory, start address for I/O,
+//config:	and/or the interrupt line used by the specified device.
 //config:
 //config:config FEATURE_IFCONFIG_HW
 //config:	bool "Enable option \"hw\" (ether only)"
 //config:	default y
 //config:	depends on IFCONFIG
 //config:	help
-//config:	  Set the hardware address of this interface, if the device driver
-//config:	  supports  this  operation. Currently, we only support the 'ether'
-//config:	  class.
+//config:	Set the hardware address of this interface, if the device driver
+//config:	supports  this  operation. Currently, we only support the 'ether'
+//config:	class.
 //config:
 //config:config FEATURE_IFCONFIG_BROADCAST_PLUS
 //config:	bool "Set the broadcast automatically"
 //config:	default y
 //config:	depends on IFCONFIG
 //config:	help
-//config:	  Setting this will make ifconfig attempt to find the broadcast
-//config:	  automatically if the value '+' is used.
+//config:	Setting this will make ifconfig attempt to find the broadcast
+//config:	automatically if the value '+' is used.
 
 //applet:IF_IFCONFIG(APPLET(ifconfig, BB_DIR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/networking/ifenslave.c busybox-1.28.0/networking/ifenslave.c
--- busybox-1.27.2/networking/ifenslave.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/ifenslave.c	2017-08-17 13:50:45.000000000 +0200
@@ -98,14 +98,14 @@
  *         set version to 1.1.0
  */
 //config:config IFENSLAVE
-//config:	bool "ifenslave"
+//config:	bool "ifenslave (13 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Userspace application to bind several interfaces
-//config:	  to a logical interface (use with kernel bonding driver).
+//config:	Userspace application to bind several interfaces
+//config:	to a logical interface (use with kernel bonding driver).
 
-//applet:IF_IFENSLAVE(APPLET(ifenslave, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_IFENSLAVE(APPLET_NOEXEC(ifenslave, ifenslave, BB_DIR_SBIN, BB_SUID_DROP, ifenslave))
 
 //kbuild:lib-$(CONFIG_IFENSLAVE) += ifenslave.o interface.o
 
@@ -113,10 +113,10 @@
 //usage:       "[-cdf] MASTER_IFACE SLAVE_IFACE..."
 //usage:#define ifenslave_full_usage "\n\n"
 //usage:       "Configure network interfaces for parallel routing\n"
-//usage:     "\n	-c,--change-active	Change active slave"
-//usage:     "\n	-d,--detach		Remove slave interface from bonding device"
-//usage:     "\n	-f,--force		Force, even if interface is not Ethernet"
-/* //usage:  "\n	-r,--receive-slave	Create a receive-only slave" */
+//usage:     "\n	-c	Change active slave"
+//usage:     "\n	-d	Remove slave interface from bonding device"
+//usage:     "\n	-f	Force, even if interface is not Ethernet"
+/* //usage:  "\n	-r	Create a receive-only slave" */
 //usage:
 //usage:#define ifenslave_example_usage
 //usage:       "To create a bond device, simply follow these three steps:\n"
@@ -493,19 +493,15 @@ int ifenslave_main(int argc UNUSED_PARAM
 		OPT_d = (1 << 1),
 		OPT_f = (1 << 2),
 	};
-#if ENABLE_LONG_OPTS
-	static const char ifenslave_longopts[] ALIGN1 =
+
+	INIT_G();
+
+	opt = getopt32long(argv, "cdfa",
 		"change-active\0"  No_argument "c"
 		"detach\0"         No_argument "d"
 		"force\0"          No_argument "f"
 		/* "all-interfaces\0" No_argument "a" */
-		;
-
-	applet_long_options = ifenslave_longopts;
-#endif
-	INIT_G();
-
-	opt = getopt32(argv, "cdfa");
+	);
 	argv += optind;
 	if (opt & (opt-1)) /* Only one option can be given */
 		bb_show_usage();
diff -urpN busybox-1.27.2/networking/ifplugd.c busybox-1.28.0/networking/ifplugd.c
--- busybox-1.27.2/networking/ifplugd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/ifplugd.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,11 +7,11 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config IFPLUGD
-//config:	bool "ifplugd"
+//config:	bool "ifplugd (9.9 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Network interface plug detection daemon.
+//config:	Network interface plug detection daemon.
 
 //applet:IF_IFPLUGD(APPLET(ifplugd, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -342,10 +342,8 @@ static int run_script(const char *action
 	/* r < 0 - can't exec, 0 <= r < 0x180 - exited, >=0x180 - killed by sig (r-0x180) */
 	r = spawn_and_wait(argv);
 
-	unsetenv(IFPLUGD_ENV_PREVIOUS);
-	unsetenv(IFPLUGD_ENV_CURRENT);
-	free(env_PREVIOUS);
-	free(env_CURRENT);
+	bb_unsetenv_and_free(env_PREVIOUS);
+	bb_unsetenv_and_free(env_CURRENT);
 
 	bb_error_msg("exit code: %d", r & 0xff);
 	return (option_mask32 & FLAG_IGNORE_RETVAL) ? 0 : r;
diff -urpN busybox-1.27.2/networking/ifupdown.c busybox-1.28.0/networking/ifupdown.c
--- busybox-1.27.2/networking/ifupdown.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/ifupdown.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,83 +1,82 @@
 /* vi: set sw=4 ts=4: */
 /*
- *  ifup/ifdown for busybox
- *  Copyright (c) 2002 Glenn McGrath
- *  Copyright (c) 2003-2004 Erik Andersen <andersen@codepoet.org>
+ * ifup/ifdown for busybox
+ * Copyright (c) 2002 Glenn McGrath
+ * Copyright (c) 2003-2004 Erik Andersen <andersen@codepoet.org>
  *
- *  Based on ifupdown v 0.6.4 by Anthony Towns
- *  Copyright (c) 1999 Anthony Towns <aj@azure.humbug.org.au>
+ * Based on ifupdown v 0.6.4 by Anthony Towns
+ * Copyright (c) 1999 Anthony Towns <aj@azure.humbug.org.au>
  *
- *  Changes to upstream version
- *  Remove checks for kernel version, assume kernel version 2.2.0 or better.
- *  Lines in the interfaces file cannot wrap.
- *  To adhere to the FHS, the default state file is /var/run/ifstate
- *  (defined via CONFIG_IFUPDOWN_IFSTATE_PATH) and can be overridden by build
- *  configuration.
+ * Changes to upstream version
+ * Remove checks for kernel version, assume kernel version 2.2.0 or better.
+ * Lines in the interfaces file cannot wrap.
+ * To adhere to the FHS, the default state file is /var/run/ifstate
+ * (defined via CONFIG_IFUPDOWN_IFSTATE_PATH) and can be overridden by build
+ * configuration.
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config IFUP
-//config:	bool "ifup"
+//config:	bool "ifup (17 kb)"
 //config:	default y
 //config:	help
-//config:	  Activate the specified interfaces. This applet makes use
-//config:	  of either "ifconfig" and "route" or the "ip" command to actually
-//config:	  configure network interfaces. Therefore, you will probably also want
-//config:	  to enable either IFCONFIG and ROUTE, or enable
-//config:	  FEATURE_IFUPDOWN_IP and the various IP options. Of
-//config:	  course you could use non-busybox versions of these programs, so
-//config:	  against my better judgement (since this will surely result in plenty
-//config:	  of support questions on the mailing list), I do not force you to
-//config:	  enable these additional options. It is up to you to supply either
-//config:	  "ifconfig", "route" and "run-parts" or the "ip" command, either
-//config:	  via busybox or via standalone utilities.
+//config:	Activate the specified interfaces. This applet makes use
+//config:	of either "ifconfig" and "route" or the "ip" command to actually
+//config:	configure network interfaces. Therefore, you will probably also want
+//config:	to enable either IFCONFIG and ROUTE, or enable
+//config:	FEATURE_IFUPDOWN_IP and the various IP options. Of
+//config:	course you could use non-busybox versions of these programs, so
+//config:	against my better judgement (since this will surely result in plenty
+//config:	of support questions on the mailing list), I do not force you to
+//config:	enable these additional options. It is up to you to supply either
+//config:	"ifconfig", "route" and "run-parts" or the "ip" command, either
+//config:	via busybox or via standalone utilities.
 //config:
 //config:config IFDOWN
-//config:	bool "ifdown"
+//config:	bool "ifdown (15 kb)"
 //config:	default y
 //config:	help
-//config:	  Deactivate the specified interfaces.
+//config:	Deactivate the specified interfaces.
 //config:
 //config:config IFUPDOWN_IFSTATE_PATH
 //config:	string "Absolute path to ifstate file"
 //config:	default "/var/run/ifstate"
 //config:	depends on IFUP || IFDOWN
 //config:	help
-//config:	  ifupdown keeps state information in a file called ifstate.
-//config:	  Typically it is located in /var/run/ifstate, however
-//config:	  some distributions tend to put it in other places
-//config:	  (debian, for example, uses /etc/network/run/ifstate).
-//config:	  This config option defines location of ifstate.
+//config:	ifupdown keeps state information in a file called ifstate.
+//config:	Typically it is located in /var/run/ifstate, however
+//config:	some distributions tend to put it in other places
+//config:	(debian, for example, uses /etc/network/run/ifstate).
+//config:	This config option defines location of ifstate.
 //config:
 //config:config FEATURE_IFUPDOWN_IP
 //config:	bool "Use ip tool (else ifconfig/route is used)"
 //config:	default y
 //config:	depends on IFUP || IFDOWN
 //config:	help
-//config:	  Use the iproute "ip" command to implement "ifup" and "ifdown", rather
-//config:	  than the default of using the older "ifconfig" and "route" utilities.
+//config:	Use the iproute "ip" command to implement "ifup" and "ifdown", rather
+//config:	than the default of using the older "ifconfig" and "route" utilities.
 //config:
-//config:	  If Y: you must install either the full-blown iproute2 package
-//config:	  or enable "ip" applet in Busybox, or the "ifup" and "ifdown" applets
-//config:	  will not work.
+//config:	If Y: you must install either the full-blown iproute2 package
+//config:	or enable "ip" applet in busybox, or the "ifup" and "ifdown" applets
+//config:	will not work.
 //config:
-//config:	  If N: you must install either the full-blown ifconfig and route
-//config:	  utilities, or enable these applets in Busybox.
+//config:	If N: you must install either the full-blown ifconfig and route
+//config:	utilities, or enable these applets in busybox.
 //config:
 //config:config FEATURE_IFUPDOWN_IPV4
 //config:	bool "Support IPv4"
 //config:	default y
 //config:	depends on IFUP || IFDOWN
 //config:	help
-//config:	  If you want ifup/ifdown to talk IPv4, leave this on.
+//config:	If you want ifup/ifdown to talk IPv4, leave this on.
 //config:
 //config:config FEATURE_IFUPDOWN_IPV6
 //config:	bool "Support IPv6"
 //config:	default y
 //config:	depends on (IFUP || IFDOWN) && FEATURE_IPV6
 //config:	help
-//config:	  If you need support for IPv6, turn this option on.
+//config:	If you need support for IPv6, turn this option on.
 //config:
 //UNUSED:
 ////////:config FEATURE_IFUPDOWN_IPX
@@ -93,18 +92,18 @@
 //config:	default y
 //config:	depends on IFUP || IFDOWN
 //config:	help
-//config:	  This enables support for the "mapping" stanza, unless you have
-//config:	  a weird network setup you don't need it.
+//config:	This enables support for the "mapping" stanza, unless you have
+//config:	a weird network setup you don't need it.
 //config:
 //config:config FEATURE_IFUPDOWN_EXTERNAL_DHCP
 //config:	bool "Support external DHCP clients"
 //config:	default n
 //config:	depends on IFUP || IFDOWN
 //config:	help
-//config:	  This enables support for the external dhcp clients. Clients are
-//config:	  tried in the following order: dhcpcd, dhclient, pump and udhcpc.
-//config:	  Otherwise, if udhcpc applet is enabled, it is used.
-//config:	  Otherwise, ifup/ifdown will have no support for DHCP.
+//config:	This enables support for the external dhcp clients. Clients are
+//config:	tried in the following order: dhcpcd, dhclient, pump and udhcpc.
+//config:	Otherwise, if udhcpc applet is enabled, it is used.
+//config:	Otherwise, ifup/ifdown will have no support for DHCP.
 
 //                 APPLET_ODDNAME:name    main      location     suid_type     help
 //applet:IF_IFUP(  APPLET_ODDNAME(ifup,   ifupdown, BB_DIR_SBIN, BB_SUID_DROP, ifup))
diff -urpN busybox-1.27.2/networking/inetd.c busybox-1.28.0/networking/inetd.c
--- busybox-1.27.2/networking/inetd.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/networking/inetd.c	2017-12-04 16:07:47.000000000 +0100
@@ -154,54 +154,71 @@
  *                      setuid()
  */
 //config:config INETD
-//config:	bool "inetd"
+//config:	bool "inetd (18 kb)"
 //config:	default y
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	  Internet superserver daemon
+//config:	Internet superserver daemon
 //config:
 //config:config FEATURE_INETD_SUPPORT_BUILTIN_ECHO
-//config:	bool "Support echo service"
+//config:	bool "Support echo service on port 7"
 //config:	default y
 //config:	depends on INETD
 //config:	help
-//config:	  Echo received data internal inetd service
+//config:	Internal service which echoes data back.
+//config:	Activated by configuration lines like these:
+//config:		echo stream tcp nowait root internal
+//config:		echo dgram  udp wait   root internal
 //config:
 //config:config FEATURE_INETD_SUPPORT_BUILTIN_DISCARD
-//config:	bool "Support discard service"
+//config:	bool "Support discard service on port 8"
 //config:	default y
 //config:	depends on INETD
 //config:	help
-//config:	  Internet /dev/null internal inetd service
+//config:	Internal service which discards all input.
+//config:	Activated by configuration lines like these:
+//config:		discard stream tcp nowait root internal
+//config:		discard dgram  udp wait   root internal
 //config:
 //config:config FEATURE_INETD_SUPPORT_BUILTIN_TIME
-//config:	bool "Support time service"
+//config:	bool "Support time service on port 37"
 //config:	default y
 //config:	depends on INETD
 //config:	help
-//config:	  Return 32 bit time since 1900 internal inetd service
+//config:	Internal service which returns big-endian 32-bit number
+//config:	of seconds passed since 1900-01-01. The number wraps around
+//config:	on overflow.
+//config:	Activated by configuration lines like these:
+//config:		time stream tcp nowait root internal
+//config:		time dgram  udp wait   root internal
 //config:
 //config:config FEATURE_INETD_SUPPORT_BUILTIN_DAYTIME
-//config:	bool "Support daytime service"
+//config:	bool "Support daytime service on port 13"
 //config:	default y
 //config:	depends on INETD
 //config:	help
-//config:	  Return human-readable time internal inetd service
+//config:	Internal service which returns human-readable time.
+//config:	Activated by configuration lines like these:
+//config:		daytime stream tcp nowait root internal
+//config:		daytime dgram  udp wait   root internal
 //config:
 //config:config FEATURE_INETD_SUPPORT_BUILTIN_CHARGEN
-//config:	bool "Support chargen service"
+//config:	bool "Support chargen service on port 19"
 //config:	default y
 //config:	depends on INETD
 //config:	help
-//config:	  Familiar character generator internal inetd service
+//config:	Internal service which generates endless stream
+//config:	of all ASCII chars beetween space and char 126.
+//config:	Activated by configuration lines like these:
+//config:		chargen stream tcp nowait root internal
+//config:		chargen dgram  udp wait   root internal
 //config:
 //config:config FEATURE_INETD_RPC
 //config:	bool "Support RPC services"
 //config:	default n  # very rarely used, and needs Sun RPC support in libc
 //config:	depends on INETD
-//config:	select FEATURE_HAVE_RPC
 //config:	help
-//config:	  Support Sun-RPC based services
+//config:	Support Sun-RPC based services
 
 //applet:IF_INETD(APPLET(inetd, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -216,6 +233,7 @@
 //usage:     "\n	-q N	Socket listen queue (default 128)"
 //usage:     "\n	-R N	Pause services after N connects/min"
 //usage:     "\n		(default 0 - disabled)"
+//usage:     "\n	Default CONFFILE is /etc/inetd.conf"
 
 #include <syslog.h>
 #include <sys/resource.h> /* setrlimit */
@@ -1470,7 +1488,7 @@ int inetd_main(int argc UNUSED_PARAM, ch
 				bb_error_msg("non-root must run services as himself");
 				goto do_exit1;
 			}
-			if (pwd->pw_uid != 0) {
+			if (pwd->pw_uid != real_uid) {
 				if (sep->se_group)
 					pwd->pw_gid = grp->gr_gid;
 				/* initgroups, setgid, setuid: */
diff -urpN busybox-1.27.2/networking/interface.c busybox-1.28.0/networking/interface.c
--- busybox-1.27.2/networking/interface.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/interface.c	2017-10-20 10:36:58.000000000 +0200
@@ -30,7 +30,6 @@
  *          20001008 - Bernd Eckenfels, Patch from RH for setting mtu
  *			(default AF was wrong)
  */
-
 #include "libbb.h"
 #include "inet_common.h"
 #include <net/if.h>
@@ -223,7 +222,7 @@ static char* FAST_FUNC UNSPEC_print(unsi
 	pos = buff;
 	for (i = 0; i < sizeof(struct sockaddr); i++) {
 		/* careful -- not every libc's sprintf returns # bytes written */
-		sprintf(pos, "%02X-", (*ptr++ & 0377));
+		sprintf(pos, "%02X-", *ptr++);
 		pos += 3;
 	}
 	/* Erase trailing "-".  Works as long as sizeof(struct sockaddr) != 0 */
@@ -704,9 +703,8 @@ static char* FAST_FUNC ether_print(unsig
 {
 	char *buff;
 	buff = xasprintf("%02X:%02X:%02X:%02X:%02X:%02X",
-			 (ptr[0] & 0377), (ptr[1] & 0377), (ptr[2] & 0377),
-			 (ptr[3] & 0377), (ptr[4] & 0377), (ptr[5] & 0377)
-		);
+		ptr[0], ptr[1], ptr[2], ptr[3], ptr[4], ptr[5]
+	);
 	return auto_string(buff);
 }
 
diff -urpN busybox-1.27.2/networking/ip.c busybox-1.28.0/networking/ip.c
--- busybox-1.27.2/networking/ip.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/ip.c	2017-10-05 11:53:08.000000000 +0200
@@ -9,128 +9,130 @@
  * Bernhard Reutner-Fischer rewrote to use index_in_substr_array
  */
 //config:config IP
-//config:	bool "ip"
+//config:	bool "ip (34 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  The "ip" applet is a TCP/IP interface configuration and routing
-//config:	  utility. You generally don't need "ip" to use busybox with
-//config:	  TCP/IP.
+//config:	The "ip" applet is a TCP/IP interface configuration and routing
+//config:	utility.
+//config:	Short forms (enabled below) are busybox-specific extensions.
+//config:	The standard "ip" utility does not provide them. If you are
+//config:	trying to be portable, it's better to use "ip CMD" forms.
 //config:
 //config:config IPADDR
-//config:	bool "ipaddr"
+//config:	bool "ipaddr (14 kb)"
 //config:	default y
 //config:	select FEATURE_IP_ADDRESS
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Support short form of ip addr: ipaddr
+//config:	Short form of "ip addr"
 //config:
 //config:config IPLINK
-//config:	bool "iplink"
+//config:	bool "iplink (16 kb)"
 //config:	default y
 //config:	select FEATURE_IP_LINK
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Support short form of ip link: iplink
+//config:	Short form of "ip link"
 //config:
 //config:config IPROUTE
-//config:	bool "iproute"
+//config:	bool "iproute (15 kb)"
 //config:	default y
 //config:	select FEATURE_IP_ROUTE
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Support short form of ip route: iproute
+//config:	Short form of "ip route"
 //config:
 //config:config IPTUNNEL
-//config:	bool "iptunnel"
+//config:	bool "iptunnel (9.6 kb)"
 //config:	default y
 //config:	select FEATURE_IP_TUNNEL
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Support short form of ip tunnel: iptunnel
+//config:	Short form of "ip tunnel"
 //config:
 //config:config IPRULE
-//config:	bool "iprule"
+//config:	bool "iprule (10 kb)"
 //config:	default y
 //config:	select FEATURE_IP_RULE
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Support short form of ip rule: iprule
+//config:	Short form of "ip rule"
 //config:
 //config:config IPNEIGH
-//config:	bool "ipneigh"
+//config:	bool "ipneigh (8.3 kb)"
 //config:	default y
 //config:	select FEATURE_IP_NEIGH
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Support short form of ip neigh: ipneigh
+//config:	Short form of "ip neigh"
 //config:
 //config:config FEATURE_IP_ADDRESS
 //config:	bool "ip address"
 //config:	default y
 //config:	depends on IP || IPADDR
 //config:	help
-//config:	  Address manipulation support for the "ip" applet.
+//config:	Address manipulation support for the "ip" applet.
 //config:
 //config:config FEATURE_IP_LINK
 //config:	bool "ip link"
 //config:	default y
 //config:	depends on IP || IPLINK
 //config:	help
-//config:	  Configure network devices with "ip".
+//config:	Configure network devices with "ip".
 //config:
 //config:config FEATURE_IP_ROUTE
 //config:	bool "ip route"
 //config:	default y
 //config:	depends on IP || IPROUTE
 //config:	help
-//config:	  Add support for routing table management to "ip".
+//config:	Add support for routing table management to "ip".
 //config:
 //config:config FEATURE_IP_ROUTE_DIR
 //config:	string "ip route configuration directory"
 //config:	default "/etc/iproute2"
 //config:	depends on FEATURE_IP_ROUTE
 //config:	help
-//config:	  Location of the "ip" applet routing configuration.
+//config:	Location of the "ip" applet routing configuration.
 //config:
 //config:config FEATURE_IP_TUNNEL
 //config:	bool "ip tunnel"
 //config:	default y
 //config:	depends on IP || IPTUNNEL
 //config:	help
-//config:	  Add support for tunneling commands to "ip".
+//config:	Add support for tunneling commands to "ip".
 //config:
 //config:config FEATURE_IP_RULE
 //config:	bool "ip rule"
 //config:	default y
 //config:	depends on IP || IPRULE
 //config:	help
-//config:	  Add support for rule commands to "ip".
+//config:	Add support for rule commands to "ip".
 //config:
 //config:config FEATURE_IP_NEIGH
 //config:	bool "ip neighbor"
 //config:	default y
 //config:	depends on IP || IPNEIGH
 //config:	help
-//config:	  Add support for neighbor commands to "ip".
+//config:	Add support for neighbor commands to "ip".
 //config:
 //config:config FEATURE_IP_RARE_PROTOCOLS
 //config:	bool "Support displaying rarely used link types"
 //config:	default n
 //config:	depends on IP || IPADDR || IPLINK || IPROUTE || IPTUNNEL || IPRULE || IPNEIGH
 //config:	help
-//config:	  If you are not going to use links of type "frad", "econet",
-//config:	  "bif" etc, you probably don't need to enable this.
-//config:	  Ethernet, wireless, infrared, ppp/slip, ip tunnelling
-//config:	  link types are supported without this option selected.
+//config:	If you are not going to use links of type "frad", "econet",
+//config:	"bif" etc, you probably don't need to enable this.
+//config:	Ethernet, wireless, infrared, ppp/slip, ip tunnelling
+//config:	link types are supported without this option selected.
 
-//applet:IF_IP(APPLET(ip, BB_DIR_SBIN, BB_SUID_DROP))
-//applet:IF_IPADDR(APPLET(ipaddr, BB_DIR_SBIN, BB_SUID_DROP))
-//applet:IF_IPLINK(APPLET(iplink, BB_DIR_SBIN, BB_SUID_DROP))
-//applet:IF_IPROUTE(APPLET(iproute, BB_DIR_SBIN, BB_SUID_DROP))
-//applet:IF_IPRULE(APPLET(iprule, BB_DIR_SBIN, BB_SUID_DROP))
-//applet:IF_IPTUNNEL(APPLET(iptunnel, BB_DIR_SBIN, BB_SUID_DROP))
-//applet:IF_IPNEIGH(APPLET(ipneigh, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_IP(      APPLET_NOEXEC(ip      , ip      , BB_DIR_SBIN, BB_SUID_DROP, ip      ))
+//applet:IF_IPADDR(  APPLET_NOEXEC(ipaddr  , ipaddr  , BB_DIR_SBIN, BB_SUID_DROP, ipaddr  ))
+//applet:IF_IPLINK(  APPLET_NOEXEC(iplink  , iplink  , BB_DIR_SBIN, BB_SUID_DROP, iplink  ))
+//applet:IF_IPROUTE( APPLET_NOEXEC(iproute , iproute , BB_DIR_SBIN, BB_SUID_DROP, iproute ))
+//applet:IF_IPRULE(  APPLET_NOEXEC(iprule  , iprule  , BB_DIR_SBIN, BB_SUID_DROP, iprule  ))
+//applet:IF_IPTUNNEL(APPLET_NOEXEC(iptunnel, iptunnel, BB_DIR_SBIN, BB_SUID_DROP, iptunnel))
+//applet:IF_IPNEIGH( APPLET_NOEXEC(ipneigh , ipneigh , BB_DIR_SBIN, BB_SUID_DROP, ipneigh ))
 
 //kbuild:lib-$(CONFIG_IP) += ip.o
 //kbuild:lib-$(CONFIG_IPADDR) += ip.o
diff -urpN busybox-1.27.2/networking/ipcalc.c busybox-1.28.0/networking/ipcalc.c
--- busybox-1.27.2/networking/ipcalc.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/ipcalc.c	2017-08-17 13:50:45.000000000 +0200
@@ -12,11 +12,11 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config IPCALC
-//config:	bool "ipcalc"
+//config:	bool "ipcalc (4.3 kb)"
 //config:	default y
 //config:	help
-//config:	  ipcalc takes an IP address and netmask and calculates the
-//config:	  resulting broadcast, network, and host range.
+//config:	ipcalc takes an IP address and netmask and calculates the
+//config:	resulting broadcast, network, and host range.
 //config:
 //config:config FEATURE_IPCALC_LONG_OPTIONS
 //config:	bool "Enable long options"
@@ -28,10 +28,10 @@
 //config:	default y
 //config:	depends on IPCALC
 //config:	help
-//config:	  Adds the options hostname, prefix and silent to the output of
-//config:	  "ipcalc".
+//config:	Adds the options hostname, prefix and silent to the output of
+//config:	"ipcalc".
 
-//applet:IF_IPCALC(APPLET(ipcalc, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_IPCALC(APPLET_NOEXEC(ipcalc, ipcalc, BB_DIR_BIN, BB_SUID_DROP, ipcalc))
 
 //kbuild:lib-$(CONFIG_IPCALC) += ipcalc.o
 
@@ -39,26 +39,14 @@
 //usage:       "[OPTIONS] ADDRESS"
 //usage:       IF_FEATURE_IPCALC_FANCY("[/PREFIX]") " [NETMASK]"
 //usage:#define ipcalc_full_usage "\n\n"
-//usage:       "Calculate IP network settings from a IP address\n"
-//usage:	IF_FEATURE_IPCALC_LONG_OPTIONS(
-//usage:     "\n	-b,--broadcast	Display calculated broadcast address"
-//usage:     "\n	-n,--network	Display calculated network address"
-//usage:     "\n	-m,--netmask	Display default netmask for IP"
+//usage:       "Calculate and display network settings from IP address\n"
+//usage:     "\n	-b	Broadcast address"
+//usage:     "\n	-n	Network address"
+//usage:     "\n	-m	Default netmask for IP"
 //usage:	IF_FEATURE_IPCALC_FANCY(
-//usage:     "\n	-p,--prefix	Display the prefix for IP/NETMASK"
-//usage:     "\n	-h,--hostname	Display first resolved host name"
-//usage:     "\n	-s,--silent	Don't ever display error messages"
-//usage:	)
-//usage:	)
-//usage:	IF_NOT_FEATURE_IPCALC_LONG_OPTIONS(
-//usage:     "\n	-b	Display calculated broadcast address"
-//usage:     "\n	-n	Display calculated network address"
-//usage:     "\n	-m	Display default netmask for IP"
-//usage:	IF_FEATURE_IPCALC_FANCY(
-//usage:     "\n	-p	Display the prefix for IP/NETMASK"
-//usage:     "\n	-h	Display first resolved host name"
-//usage:     "\n	-s	Don't ever display error messages"
-//usage:	)
+//usage:     "\n	-p	Prefix for IP/NETMASK"
+//usage:     "\n	-h	Resolved host name"
+//usage:     "\n	-s	No error messages"
 //usage:	)
 
 #include "libbb.h"
@@ -120,6 +108,11 @@ int get_prefix(unsigned long netmask);
 		"silent\0"    No_argument "s" // don’t ever display error messages
 # endif
 		;
+# define GETOPT32 getopt32long
+# define LONGOPTS ,ipcalc_longopts
+#else
+# define GETOPT32 getopt32
+# define LONGOPTS
 #endif
 
 int ipcalc_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
@@ -137,11 +130,11 @@ int ipcalc_main(int argc UNUSED_PARAM, c
 #define ipaddr    (s_ipaddr.s_addr)
 	char *ipstr;
 
-#if ENABLE_FEATURE_IPCALC_LONG_OPTIONS
-	applet_long_options = ipcalc_longopts;
-#endif
-	opt_complementary = "-1:?2"; /* minimum 1 arg, maximum 2 args */
-	opt = getopt32(argv, "mbn" IF_FEATURE_IPCALC_FANCY("phs"));
+	opt = GETOPT32(argv, "^"
+			"mbn" IF_FEATURE_IPCALC_FANCY("phs")
+			"\0" "-1:?2"/*min 1, max 2 args*/
+			LONGOPTS
+	);
 	argv += optind;
 	if (opt & SILENT)
 		logmode = LOGMODE_NONE; /* suppress error_msg() output */
diff -urpN busybox-1.27.2/networking/isrv_identd.c busybox-1.28.0/networking/isrv_identd.c
--- busybox-1.27.2/networking/isrv_identd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/isrv_identd.c	2017-07-24 18:57:09.000000000 +0200
@@ -7,12 +7,12 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config FAKEIDENTD
-//config:	bool "fakeidentd"
+//config:	bool "fakeidentd (8.9 kb)"
 //config:	default y
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	  fakeidentd listens on the ident port and returns a predefined
-//config:	  fake value on any query.
+//config:	fakeidentd listens on the ident port and returns a predefined
+//config:	fake value on any query.
 
 //applet:IF_FAKEIDENTD(APPLET(fakeidentd, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/networking/libiproute/ip_parse_common_args.c busybox-1.28.0/networking/libiproute/ip_parse_common_args.c
--- busybox-1.27.2/networking/libiproute/ip_parse_common_args.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/libiproute/ip_parse_common_args.c	2017-10-20 10:36:58.000000000 +0200
@@ -11,7 +11,6 @@
  *
  * Rani Assaf <rani@magic.metawire.com> 980929: resolve addresses
  */
-
 #include "ip_common.h"  /* #include "libbb.h" is inside */
 #include "utils.h"
 
diff -urpN busybox-1.27.2/networking/libiproute/ipaddress.c busybox-1.28.0/networking/libiproute/ipaddress.c
--- busybox-1.27.2/networking/libiproute/ipaddress.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/libiproute/ipaddress.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,7 +7,6 @@
  * Changes:
  * Laszlo Valko <valko@linux.karinthy.hu> 990223: address label must be zero terminated
  */
-
 #include <fnmatch.h>
 #include <net/if.h>
 #include <net/if_arp.h>
diff -urpN busybox-1.27.2/networking/libiproute/ipneigh.c busybox-1.28.0/networking/libiproute/ipneigh.c
--- busybox-1.27.2/networking/libiproute/ipneigh.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/libiproute/ipneigh.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Ported to Busybox by:  Curt Brune <curt@cumulusnetworks.com>
  */
-
 #include "ip_common.h"  /* #include "libbb.h" is inside */
 #include "common_bufsiz.h"
 #include "rt_names.h"
diff -urpN busybox-1.27.2/networking/libiproute/iproute.c busybox-1.28.0/networking/libiproute/iproute.c
--- busybox-1.27.2/networking/libiproute/iproute.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/libiproute/iproute.c	2017-12-04 16:07:47.000000000 +0100
@@ -9,12 +9,16 @@
  * Rani Assaf <rani@magic.metawire.com> 980929: resolve addresses
  * Kunihiro Ishiguro <kunihiro@zebra.org> 001102: rtnh_ifindex was not initialized
  */
-
 #include "ip_common.h"  /* #include "libbb.h" is inside */
 #include "common_bufsiz.h"
 #include "rt_names.h"
 #include "utils.h"
 
+#include <linux/version.h>
+/* RTA_TABLE is not a define, can't test with ifdef. */
+/* As a proxy, test which kernels toolchain expects: */
+#define HAVE_RTA_TABLE (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,19))
+
 #ifndef RTAX_RTTVAR
 #define RTAX_RTTVAR RTAX_HOPS
 #endif
@@ -82,9 +86,11 @@ static int FAST_FUNC print_route(const s
 	memset(tb, 0, sizeof(tb));
 	parse_rtattr(tb, RTA_MAX, RTM_RTA(r), len);
 
+#if HAVE_RTA_TABLE
 	if (tb[RTA_TABLE])
 		tid = *(uint32_t *)RTA_DATA(tb[RTA_TABLE]);
 	else
+#endif
 		tid = r->rtm_table;
 
 	if (r->rtm_family == AF_INET6)
@@ -460,12 +466,13 @@ IF_FEATURE_IP_RULE(ARG_table,)
 			NEXT_ARG();
 			if (rtnl_rttable_a2n(&tid, *argv))
 				invarg_1_to_2(*argv, keyword_table);
-			if (tid < 256)
-				req.r.rtm_table = tid;
-			else {
+#if HAVE_RTA_TABLE
+			if (tid > 255) {
 				req.r.rtm_table = RT_TABLE_UNSPEC;
 				addattr32(&req.n, sizeof(req), RTA_TABLE, tid);
-			}
+			} else
+#endif
+				req.r.rtm_table = tid;
 #endif
 		} else if (arg == ARG_dev || arg == ARG_oif) {
 			NEXT_ARG();
diff -urpN busybox-1.27.2/networking/libiproute/iprule.c busybox-1.28.0/networking/libiproute/iprule.c
--- busybox-1.27.2/networking/libiproute/iprule.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/libiproute/iprule.c	2017-12-04 16:07:47.000000000 +0100
@@ -12,7 +12,6 @@
  * Rani Assaf <rani@magic.metawire.com> 980929: resolve addresses
  * initially integrated into busybox by Bernhard Reutner-Fischer
  */
-
 #include <netinet/in.h>
 #include <netinet/ip.h>
 #include <arpa/inet.h>
@@ -25,6 +24,11 @@
 #include "rt_names.h"
 #include "utils.h"
 
+#include <linux/version.h>
+/* RTA_TABLE is not a define, can't test with ifdef. */
+/* As a proxy, test which kernels toolchain expects: */
+#define HAVE_RTA_TABLE (LINUX_VERSION_CODE >= KERNEL_VERSION(2,6,19))
+
 /* If you add stuff here, update iprule_full_usage */
 static const char keywords[] ALIGN1 =
 	"from\0""to\0""preference\0""order\0""priority\0"
@@ -121,9 +125,12 @@ static int FAST_FUNC print_rule(const st
 		printf("iif %s ", (char*)RTA_DATA(tb[RTA_IIF]));
 	}
 
+#if HAVE_RTA_TABLE
 	if (tb[RTA_TABLE])
 		printf("lookup %s ", rtnl_rttable_n2a(*(uint32_t*)RTA_DATA(tb[RTA_TABLE])));
-	else if (r->rtm_table)
+	else
+#endif
+	if (r->rtm_table)
 		printf("lookup %s ", rtnl_rttable_n2a(r->rtm_table));
 
 	if (tb[FRA_SUPPRESS_PREFIXLEN]) {
@@ -267,12 +274,15 @@ static int iprule_modify(int cmd, char *
 			NEXT_ARG();
 			if (rtnl_rttable_a2n(&tid, *argv))
 				invarg_1_to_2(*argv, "table ID");
-			if (tid < 256)
-				req.r.rtm_table = tid;
-			else {
+
+#if HAVE_RTA_TABLE
+			if (tid > 255) {
 				req.r.rtm_table = RT_TABLE_UNSPEC;
 				addattr32(&req.n, sizeof(req), RTA_TABLE, tid);
-			}
+			} else
+#endif
+				req.r.rtm_table = tid;
+
 			table_ok = 1;
 		} else if (key == ARG_suppress_prefixlength) {
 			int prefix_length;
diff -urpN busybox-1.27.2/networking/libiproute/iptunnel.c busybox-1.28.0/networking/libiproute/iptunnel.c
--- busybox-1.27.2/networking/libiproute/iptunnel.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/libiproute/iptunnel.c	2017-10-20 10:36:58.000000000 +0200
@@ -10,7 +10,6 @@
  * Rani Assaf <rani@magic.metawire.com> 980930: do not allow key for ipip/sit
  * Phil Karn <karn@ka9q.ampr.org>       990408: "pmtudisc" flag
  */
-
 #include <netinet/ip.h>
 #include <net/if.h>
 #include <net/if_arp.h>
diff -urpN busybox-1.27.2/networking/libiproute/libnetlink.c busybox-1.28.0/networking/libiproute/libnetlink.c
--- busybox-1.27.2/networking/libiproute/libnetlink.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/libiproute/libnetlink.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,7 +7,6 @@
  *
  * Authors: Alexey Kuznetsov, <kuznet@ms2.inr.ac.ru>
  */
-
 #include <sys/socket.h>
 #include <sys/uio.h>
 
diff -urpN busybox-1.27.2/networking/libiproute/ll_addr.c busybox-1.28.0/networking/libiproute/ll_addr.c
--- busybox-1.27.2/networking/libiproute/ll_addr.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/libiproute/ll_addr.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,14 +7,12 @@
  *
  * Authors: Alexey Kuznetsov, <kuznet@ms2.inr.ac.ru>
  */
-
 #include <net/if_arp.h>
 
 #include "libbb.h"
 #include "rt_names.h"
 #include "utils.h"
 
-
 const char* FAST_FUNC ll_addr_n2a(unsigned char *addr, int alen, int type, char *buf, int blen)
 {
 	int i;
diff -urpN busybox-1.27.2/networking/libiproute/ll_map.c busybox-1.28.0/networking/libiproute/ll_map.c
--- busybox-1.27.2/networking/libiproute/ll_map.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/libiproute/ll_map.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,7 +7,6 @@
  *
  * Authors: Alexey Kuznetsov, <kuznet@ms2.inr.ac.ru>
  */
-
 #include <net/if.h>  /* struct ifreq and co. */
 
 #include "libbb.h"
diff -urpN busybox-1.27.2/networking/libiproute/ll_proto.c busybox-1.28.0/networking/libiproute/ll_proto.c
--- busybox-1.27.2/networking/libiproute/ll_proto.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/libiproute/ll_proto.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,7 +7,6 @@
  *
  * Authors: Alexey Kuznetsov, <kuznet@ms2.inr.ac.ru>
  */
-
 #include "libbb.h"
 #include "rt_names.h"
 #include "utils.h"
diff -urpN busybox-1.27.2/networking/libiproute/rtm_map.c busybox-1.28.0/networking/libiproute/rtm_map.c
--- busybox-1.27.2/networking/libiproute/rtm_map.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/libiproute/rtm_map.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,7 +7,6 @@
  *
  * Authors: Alexey Kuznetsov, <kuznet@ms2.inr.ac.ru>
  */
-
 #include "libbb.h"
 #include "rt_names.h"
 #include "utils.h"
@@ -44,7 +43,6 @@ const char* FAST_FUNC rtnl_rtntype_n2a(i
 	}
 }
 
-
 int FAST_FUNC rtnl_rtntype_a2n(int *id, char *arg)
 {
 	static const char keywords[] ALIGN1 =
diff -urpN busybox-1.27.2/networking/libiproute/utils.c busybox-1.28.0/networking/libiproute/utils.c
--- busybox-1.27.2/networking/libiproute/utils.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/libiproute/utils.c	2017-10-20 10:36:58.000000000 +0200
@@ -8,7 +8,6 @@
  *
  * Rani Assaf <rani@magic.metawire.com> 980929: resolve addresses
  */
-
 #include "libbb.h"
 #include "utils.h"
 #include "inet_common.h"
diff -urpN busybox-1.27.2/networking/nameif.c busybox-1.28.0/networking/nameif.c
--- busybox-1.27.2/networking/nameif.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/nameif.c	2017-10-05 11:53:08.000000000 +0200
@@ -9,38 +9,37 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config NAMEIF
-//config:	bool "nameif"
+//config:	bool "nameif (6.6 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	  nameif is used to rename network interface by its MAC address.
-//config:	  Renamed interfaces MUST be in the down state.
-//config:	  It is possible to use a file (default: /etc/mactab)
-//config:	  with list of new interface names and MACs.
-//config:	  Maximum interface name length: IFNAMSIZ = 16
-//config:	  File fields are separated by space or tab.
-//config:	  File format:
-//config:	  # Comment
-//config:	  new_interface_name    XX:XX:XX:XX:XX:XX
+//config:	nameif is used to rename network interface by its MAC address.
+//config:	Renamed interfaces MUST be in the down state.
+//config:	It is possible to use a file (default: /etc/mactab)
+//config:	with list of new interface names and MACs.
+//config:	Maximum interface name length: IFNAMSIZ = 16
+//config:	File fields are separated by space or tab.
+//config:	File format:
+//config:		# Comment
+//config:		new_interface_name  XX:XX:XX:XX:XX:XX
 //config:
 //config:config FEATURE_NAMEIF_EXTENDED
 //config:	bool "Extended nameif"
 //config:	default y
 //config:	depends on NAMEIF
 //config:	help
-//config:	  This extends the nameif syntax to support the bus_info, driver,
-//config:	  phyaddr selectors. The syntax is compatible to the normal nameif.
-//config:	  File format:
-//config:	    new_interface_name  driver=asix bus=usb-0000:00:08.2-3
-//config:	    new_interface_name  bus=usb-0000:00:08.2-3 00:80:C8:38:91:B5
-//config:	    new_interface_name  phy_address=2 00:80:C8:38:91:B5
-//config:	    new_interface_name  mac=00:80:C8:38:91:B5
-//config:	    new_interface_name  00:80:C8:38:91:B5
+//config:	This extends the nameif syntax to support the bus_info, driver,
+//config:	phyaddr selectors. The syntax is compatible to the normal nameif.
+//config:	File format:
+//config:		new_interface_name  driver=asix bus=usb-0000:00:08.2-3
+//config:		new_interface_name  bus=usb-0000:00:08.2-3 00:80:C8:38:91:B5
+//config:		new_interface_name  phy_address=2 00:80:C8:38:91:B5
+//config:		new_interface_name  mac=00:80:C8:38:91:B5
+//config:		new_interface_name  00:80:C8:38:91:B5
 
-//applet:IF_NAMEIF(APPLET(nameif, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_NAMEIF(APPLET_NOEXEC(nameif, nameif, BB_DIR_SBIN, BB_SUID_DROP, nameif))
 
 //kbuild:lib-$(CONFIG_NAMEIF) += nameif.o
 
diff -urpN busybox-1.27.2/networking/nbd-client.c busybox-1.28.0/networking/nbd-client.c
--- busybox-1.27.2/networking/nbd-client.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/nbd-client.c	2017-10-05 11:53:08.000000000 +0200
@@ -3,19 +3,19 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-#include "libbb.h"
-#include <netinet/tcp.h>
-#include <linux/fs.h>
+//config:config NBDCLIENT
+//config:	bool "nbd-client (4.6 kb)"
+//config:	default y
+//config:	help
+//config:	Network block device client
 
-//applet:IF_NBDCLIENT(APPLET_ODDNAME(nbd-client, nbdclient, BB_DIR_USR_SBIN, BB_SUID_DROP, nbdclient))
+//applet:IF_NBDCLIENT(APPLET_NOEXEC(nbd-client, nbdclient, BB_DIR_USR_SBIN, BB_SUID_DROP, nbdclient))
 
 //kbuild:lib-$(CONFIG_NBDCLIENT) += nbd-client.o
 
-//config:config NBDCLIENT
-//config:	bool "nbd-client"
-//config:	default y
-//config:	help
-//config:	  Network block device client
+#include "libbb.h"
+#include <netinet/tcp.h>
+#include <linux/fs.h>
 
 #define NBD_SET_SOCK          _IO(0xab, 0)
 #define NBD_SET_BLKSIZE       _IO(0xab, 1)
@@ -43,7 +43,7 @@
 //blocksizes other than 1024 without patches
 
 int nbdclient_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
-int nbdclient_main(int argc, char **argv)
+int nbdclient_main(int argc UNUSED_PARAM, char **argv)
 {
 	unsigned long timeout = 0;
 #if BB_MMU
@@ -61,7 +61,7 @@ int nbdclient_main(int argc, char **argv
 	BUILD_BUG_ON(offsetof(struct nbd_header_t, data) != 8+8+8+4);
 
 	// Parse command line stuff (just a stub now)
-	if (argc != 4)
+	if (!argv[1] || !argv[2] || !argv[3] || argv[4])
 		bb_show_usage();
 
 #if !BB_MMU
diff -urpN busybox-1.27.2/networking/nc.c busybox-1.28.0/networking/nc.c
--- busybox-1.27.2/networking/nc.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/nc.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,5 +1,6 @@
 /* vi: set sw=4 ts=4: */
-/* nc: mini-netcat - built from the ground up for LRP
+/*
+ * nc: mini-netcat - built from the ground up for LRP
  *
  * Copyright (C) 1998, 1999  Charles P. Wright
  * Copyright (C) 1998  Dave Cinege
@@ -7,41 +8,50 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config NC
-//config:	bool "nc"
+//config:	bool "nc (11 kb)"
 //config:	default y
 //config:	help
-//config:	  A simple Unix utility which reads and writes data across network
-//config:	  connections.
+//config:	A simple Unix utility which reads and writes data across network
+//config:	connections.
+//config:
+//config:config NETCAT
+//config:	bool "netcat (11 kb)"
+//config:	default n
+//config:	help
+//config:	Alias to nc.
 //config:
 //config:config NC_SERVER
 //config:	bool "Netcat server options (-l)"
 //config:	default y
-//config:	depends on NC
+//config:	depends on NC || NETCAT
 //config:	help
-//config:	  Allow netcat to act as a server.
+//config:	Allow netcat to act as a server.
 //config:
 //config:config NC_EXTRA
 //config:	bool "Netcat extensions (-eiw and -f FILE)"
 //config:	default y
-//config:	depends on NC
+//config:	depends on NC || NETCAT
 //config:	help
-//config:	  Add -e (support for executing the rest of the command line after
-//config:	  making or receiving a successful connection), -i (delay interval for
-//config:	  lines sent), -w (timeout for initial connection).
+//config:	Add -e (support for executing the rest of the command line after
+//config:	making or receiving a successful connection), -i (delay interval for
+//config:	lines sent), -w (timeout for initial connection).
 //config:
 //config:config NC_110_COMPAT
 //config:	bool "Netcat 1.10 compatibility (+2.5k)"
-//config:	default n  # off specially for Rob
-//config:	depends on NC
+//config:	default y
+//config:	depends on NC || NETCAT
 //config:	help
-//config:	  This option makes nc closely follow original nc-1.10.
-//config:	  The code is about 2.5k bigger. It enables
-//config:	  -s ADDR, -n, -u, -v, -o FILE, -z options, but loses
-//config:	  busybox-specific extensions: -f FILE.
+//config:	This option makes nc closely follow original nc-1.10.
+//config:	The code is about 2.5k bigger. It enables
+//config:	-s ADDR, -n, -u, -v, -o FILE, -z options, but loses
+//config:	busybox-specific extensions: -f FILE.
 
 //applet:IF_NC(APPLET(nc, BB_DIR_USR_BIN, BB_SUID_DROP))
+//                 APPLET_ODDNAME:name    main location        suid_type     help
+//applet:IF_NETCAT(APPLET_ODDNAME(netcat, nc,  BB_DIR_USR_BIN, BB_SUID_DROP, nc))
 
 //kbuild:lib-$(CONFIG_NC) += nc.o
+//kbuild:lib-$(CONFIG_NETCAT) += nc.o
 
 #include "libbb.h"
 #include "common_bufsiz.h"
diff -urpN busybox-1.27.2/networking/nc_bloaty.c busybox-1.28.0/networking/nc_bloaty.c
--- busybox-1.27.2/networking/nc_bloaty.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/nc_bloaty.c	2017-08-17 13:50:45.000000000 +0200
@@ -787,11 +787,15 @@ int nc_main(int argc UNUSED_PARAM, char
  e_found:
 
 	// -g -G -t -r deleted, unimplemented -a deleted too
-	opt_complementary = "?2:vv:ll"; /* max 2 params; -v and -l are counters; -w N */
-	getopt32(argv, "np:s:uvw:+" IF_NC_SERVER("lk")
-			IF_NC_EXTRA("i:o:z"),
-			&str_p, &str_s, &o_wait
-			IF_NC_EXTRA(, &str_i, &str_o), &o_verbose IF_NC_SERVER(, &cnt_l));
+	getopt32(argv, "^"
+		"np:s:uvw:+"/* -w N */ IF_NC_SERVER("lk")
+		IF_NC_EXTRA("i:o:z")
+			"\0"
+			"?2:vv:ll", /* max 2 params; -v and -l are counters */
+		&str_p, &str_s, &o_wait
+		IF_NC_EXTRA(, &str_i, &str_o)
+			, &o_verbose IF_NC_SERVER(, &cnt_l)
+	);
 	argv += optind;
 #if ENABLE_NC_EXTRA
 	if (option_mask32 & OPT_i) /* line-interval time */
diff -urpN busybox-1.27.2/networking/netstat.c busybox-1.28.0/networking/netstat.c
--- busybox-1.27.2/networking/netstat.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/netstat.c	2017-07-24 18:57:09.000000000 +0200
@@ -14,27 +14,27 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config NETSTAT
-//config:	bool "netstat"
+//config:	bool "netstat (10 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  netstat prints information about the Linux networking subsystem.
+//config:	netstat prints information about the Linux networking subsystem.
 //config:
 //config:config FEATURE_NETSTAT_WIDE
 //config:	bool "Enable wide output"
 //config:	default y
 //config:	depends on NETSTAT
 //config:	help
-//config:	  Add support for wide columns. Useful when displaying IPv6 addresses
-//config:	  (-W option).
+//config:	Add support for wide columns. Useful when displaying IPv6 addresses
+//config:	(-W option).
 //config:
 //config:config FEATURE_NETSTAT_PRG
 //config:	bool "Enable PID/Program name output"
 //config:	default y
 //config:	depends on NETSTAT
 //config:	help
-//config:	  Add support for -p flag to print out PID and program name.
-//config:	  +700 bytes of code.
+//config:	Add support for -p flag to print out PID and program name.
+//config:	+700 bytes of code.
 
 //applet:IF_NETSTAT(APPLET(netstat, BB_DIR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/networking/nslookup.c busybox-1.28.0/networking/nslookup.c
--- busybox-1.27.2/networking/nslookup.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/nslookup.c	2017-07-24 18:57:09.000000000 +0200
@@ -11,10 +11,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config NSLOOKUP
-//config:	bool "nslookup"
+//config:	bool "nslookup (4.5 kb)"
 //config:	default y
 //config:	help
-//config:	  nslookup is a tool to query Internet name servers.
+//config:	nslookup is a tool to query Internet name servers.
 
 //applet:IF_NSLOOKUP(APPLET(nslookup, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/networking/ntpd.c busybox-1.28.0/networking/ntpd.c
--- busybox-1.27.2/networking/ntpd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/ntpd.c	2017-12-31 10:05:04.000000000 +0100
@@ -41,27 +41,27 @@
  ***********************************************************************
  */
 //config:config NTPD
-//config:	bool "ntpd"
+//config:	bool "ntpd (17 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  The NTP client/server daemon.
+//config:	The NTP client/server daemon.
 //config:
 //config:config FEATURE_NTPD_SERVER
 //config:	bool "Make ntpd usable as a NTP server"
 //config:	default y
 //config:	depends on NTPD
 //config:	help
-//config:	  Make ntpd usable as a NTP server. If you disable this option
-//config:	  ntpd will be usable only as a NTP client.
+//config:	Make ntpd usable as a NTP server. If you disable this option
+//config:	ntpd will be usable only as a NTP client.
 //config:
 //config:config FEATURE_NTPD_CONF
 //config:	bool "Make ntpd understand /etc/ntp.conf"
 //config:	default y
 //config:	depends on NTPD
 //config:	help
-//config:	  Make ntpd look in /etc/ntp.conf for peers. Only "server address"
-//config:	  is supported.
+//config:	Make ntpd look in /etc/ntp.conf for peers. Only "server address"
+//config:	is supported.
 
 //applet:IF_NTPD(APPLET(ntpd, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -71,7 +71,7 @@
 //usage:	"[-dnqNw"IF_FEATURE_NTPD_SERVER("l -I IFACE")"] [-S PROG] [-p PEER]..."
 //usage:#define ntpd_full_usage "\n\n"
 //usage:       "NTP client/server\n"
-//usage:     "\n	-d	Verbose"
+//usage:     "\n	-d	Verbose (may be repeated)"
 //usage:     "\n	-n	Do not daemonize"
 //usage:     "\n	-q	Quit after clock is set"
 //usage:     "\n	-N	Run at high priority"
@@ -155,7 +155,8 @@
 #define RETRY_INTERVAL    32    /* on send/recv error, retry in N secs (need to be power of 2) */
 #define NOREPLY_INTERVAL 512    /* sent, but got no reply: cap next query by this many seconds */
 #define RESPONSE_INTERVAL 16    /* wait for reply up to N secs */
-#define HOSTNAME_INTERVAL  5    /* hostname lookup failed. Wait N secs for next try */
+#define HOSTNAME_INTERVAL  4    /* hostname lookup failed. Wait N * peer->dns_errors secs for next try */
+#define DNS_ERRORS_CAP  0x3f    /* peer->dns_errors is in [0..63] */
 
 /* Step threshold (sec). std ntpd uses 0.128.
  */
@@ -301,6 +302,7 @@ typedef struct {
 	uint8_t          lastpkt_status;
 	uint8_t          lastpkt_stratum;
 	uint8_t          reachable_bits;
+	uint8_t          dns_errors;
 	/* when to send new query (if p_fd == -1)
 	 * or when receive times out (if p_fd >= 0): */
 	double           next_action_time;
@@ -802,10 +804,10 @@ resolve_peer_hostname(peer_t *p)
 		p->p_dotted = xmalloc_sockaddr2dotted_noport(&lsa->u.sa);
 		VERB1 if (strcmp(p->p_hostname, p->p_dotted) != 0)
 			bb_error_msg("'%s' is %s", p->p_hostname, p->p_dotted);
-	} else {
-		/* error message is emitted by host2sockaddr() */
-		set_next(p, HOSTNAME_INTERVAL);
+		p->dns_errors = 0;
+		return lsa;
 	}
+	p->dns_errors = ((p->dns_errors << 1) | 1) & DNS_ERRORS_CAP;
 	return lsa;
 }
 
@@ -866,10 +868,8 @@ do_sendto(int fd,
 static void
 send_query_to_peer(peer_t *p)
 {
-	if (!p->p_lsa) {
-		if (!resolve_peer_hostname(p))
-			return;
-	}
+	if (!p->p_lsa)
+		return;
 
 	/* Why do we need to bind()?
 	 * See what happens when we don't bind:
@@ -2230,15 +2230,16 @@ static NOINLINE void ntp_init(char **arg
 
 	/* Parse options */
 	peers = NULL;
-	opt_complementary = "dd:wn"  /* -d: counter; -p: list; -w implies -n */
-		IF_FEATURE_NTPD_SERVER(":Il"); /* -I implies -l */
-	opts = getopt32(argv,
+	opts = getopt32(argv, "^"
 			"nqNx" /* compat */
 			"wp:*S:"IF_FEATURE_NTPD_SERVER("l") /* NOT compat */
 			IF_FEATURE_NTPD_SERVER("I:") /* compat */
 			"d" /* compat */
-			"46aAbgL", /* compat, ignored */
-			&peers, &G.script_name,
+			"46aAbgL" /* compat, ignored */
+				"\0"
+				"dd:wn"  /* -d: counter; -p: list; -w implies -n */
+				IF_FEATURE_NTPD_SERVER(":Il") /* -I implies -l */
+			, &peers, &G.script_name,
 #if ENABLE_FEATURE_NTPD_SERVER
 			&G.if_name,
 #endif
@@ -2361,7 +2362,9 @@ int ntpd_main(int argc UNUSED_PARAM, cha
 
 		/* Nothing between here and poll() blocks for any significant time */
 
-		nextaction = G.cur_time + 3600;
+		nextaction = G.last_script_run + (11*60);
+		if (nextaction < G.cur_time + 1)
+			nextaction = G.cur_time + 1;
 
 		i = 0;
 #if ENABLE_FEATURE_NTPD_SERVER
@@ -2440,13 +2443,42 @@ int ntpd_main(int argc UNUSED_PARAM, cha
  did_poll:
 		gettime1900d(); /* sets G.cur_time */
 		if (nfds <= 0) {
-			if (!bb_got_signal /* poll wasn't interrupted by a signal */
-			 && G.cur_time - G.last_script_run > 11*60
-			) {
+			double ct;
+			int dns_error;
+
+			if (bb_got_signal)
+				break; /* poll was interrupted by a signal */
+
+			if (G.cur_time - G.last_script_run > 11*60) {
 				/* Useful for updating battery-backed RTC and such */
 				run_script("periodic", G.last_update_offset);
 				gettime1900d(); /* sets G.cur_time */
 			}
+
+			/* Resolve peer names to IPs, if not resolved yet.
+			 * We do it only when poll timed out:
+			 * this way, we almost never overlap DNS resolution with
+			 * "request-reply" packet round trip.
+			 */
+			dns_error = 0;
+			ct = G.cur_time;
+			for (item = G.ntp_peers; item != NULL; item = item->link) {
+				peer_t *p = (peer_t *) item->data;
+				if (p->next_action_time <= ct && !p->p_lsa) {
+					/* This can take up to ~10 sec per each DNS query */
+					dns_error |= (!resolve_peer_hostname(p));
+				}
+			}
+			if (!dns_error)
+				goto check_unsync;
+			/* Set next time for those which are still not resolved */
+			gettime1900d(); /* sets G.cur_time (needed for set_next()) */
+			for (item = G.ntp_peers; item != NULL; item = item->link) {
+				peer_t *p = (peer_t *) item->data;
+				if (p->next_action_time <= ct && !p->p_lsa) {
+					set_next(p, HOSTNAME_INTERVAL * p->dns_errors);
+				}
+			}
 			goto check_unsync;
 		}
 
diff -urpN busybox-1.27.2/networking/ping.c busybox-1.28.0/networking/ping.c
--- busybox-1.27.2/networking/ping.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/ping.c	2017-12-04 16:07:47.000000000 +0100
@@ -24,50 +24,29 @@
  * This version is an adaptation of ping.c from busybox.
  * The code was modified by Bart Visscher <magick@linux-fan.com>
  */
-
-#include <net/if.h>
-#include <netinet/ip_icmp.h>
-#include "libbb.h"
-#include "common_bufsiz.h"
-
-#ifdef __BIONIC__
-/* should be in netinet/ip_icmp.h */
-# define ICMP_DEST_UNREACH    3  /* Destination Unreachable  */
-# define ICMP_SOURCE_QUENCH   4  /* Source Quench    */
-# define ICMP_REDIRECT        5  /* Redirect (change route)  */
-# define ICMP_ECHO            8  /* Echo Request      */
-# define ICMP_TIME_EXCEEDED  11  /* Time Exceeded    */
-# define ICMP_PARAMETERPROB  12  /* Parameter Problem    */
-# define ICMP_TIMESTAMP      13  /* Timestamp Request    */
-# define ICMP_TIMESTAMPREPLY 14  /* Timestamp Reply    */
-# define ICMP_INFO_REQUEST   15  /* Information Request    */
-# define ICMP_INFO_REPLY     16  /* Information Reply    */
-# define ICMP_ADDRESS        17  /* Address Mask Request    */
-# define ICMP_ADDRESSREPLY   18  /* Address Mask Reply    */
-#endif
-
 //config:config PING
-//config:	bool "ping"
+//config:	bool "ping (9.5 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  ping uses the ICMP protocol's mandatory ECHO_REQUEST datagram to
-//config:	  elicit an ICMP ECHO_RESPONSE from a host or gateway.
+//config:	ping uses the ICMP protocol's mandatory ECHO_REQUEST datagram to
+//config:	elicit an ICMP ECHO_RESPONSE from a host or gateway.
 //config:
 //config:config PING6
-//config:	bool "ping6"
+//config:	bool "ping6 (10 kb)"
 //config:	default y
 //config:	depends on FEATURE_IPV6
 //config:	help
-//config:	  This will give you a ping that can talk IPv6.
+//config:	Alias to "ping -6".
 //config:
 //config:config FEATURE_FANCY_PING
 //config:	bool "Enable fancy ping output"
 //config:	default y
 //config:	depends on PING || PING6
 //config:	help
-//config:	  Make the output from the ping applet include statistics, and at the
-//config:	  same time provide full support for ICMP packets.
+//config:	With this option off, ping will say "HOST is alive!"
+//config:	or terminate with SIGALRM in 5 seconds otherwise.
+//config:	No command-line options will be recognized.
 
 /* Needs socket(AF_INET, SOCK_RAW, IPPROTO_ICMP), therefore BB_SUID_MAYBE: */
 //applet:IF_PING(APPLET(ping, BB_DIR_BIN, BB_SUID_MAYBE))
@@ -103,7 +82,7 @@
 //usage:     "\n			(can exit earlier with -c CNT)"
 //usage:     "\n	-q		Quiet, only display output at start"
 //usage:     "\n			and when finished"
-//usage:     "\n	-p		Pattern to use for payload"
+//usage:     "\n	-p HEXBYTE	Pattern to use for payload"
 //usage:
 //usage:# define ping6_trivial_usage
 //usage:       "[OPTIONS] HOST"
@@ -114,7 +93,7 @@
 //usage:     "\n	-I IFACE/IP	Source interface or IP address"
 //usage:     "\n	-q		Quiet, only display output at start"
 //usage:     "\n			and when finished"
-//usage:     "\n	-p		Pattern to use for payload"
+//usage:     "\n	-p HEXBYTE	Pattern to use for payload"
 //usage:
 //usage:#endif
 //usage:
@@ -135,6 +114,35 @@
 //usage:       "1 packets transmitted, 1 packets received, 0% packet loss\n"
 //usage:       "round-trip min/avg/max = 20.1/20.1/20.1 ms\n"
 
+#include <net/if.h>
+#include <netinet/ip_icmp.h>
+#include "libbb.h"
+#include "common_bufsiz.h"
+
+#ifdef __BIONIC__
+/* should be in netinet/ip_icmp.h */
+# define ICMP_DEST_UNREACH    3  /* Destination Unreachable  */
+# define ICMP_SOURCE_QUENCH   4  /* Source Quench    */
+# define ICMP_REDIRECT        5  /* Redirect (change route)  */
+# define ICMP_ECHO            8  /* Echo Request      */
+# define ICMP_TIME_EXCEEDED  11  /* Time Exceeded    */
+# define ICMP_PARAMETERPROB  12  /* Parameter Problem    */
+# define ICMP_TIMESTAMP      13  /* Timestamp Request    */
+# define ICMP_TIMESTAMPREPLY 14  /* Timestamp Reply    */
+# define ICMP_INFO_REQUEST   15  /* Information Request    */
+# define ICMP_INFO_REPLY     16  /* Information Reply    */
+# define ICMP_ADDRESS        17  /* Address Mask Request    */
+# define ICMP_ADDRESSREPLY   18  /* Address Mask Reply    */
+#endif
+
+/* Some operating systems, like GNU/Hurd, don't define SOL_RAW, but do have
+ * IPPROTO_RAW. Since the IPPROTO definitions are also valid to use for
+ * setsockopt (and take the same value as their corresponding SOL definitions,
+ * if they exist), we can just fall back on IPPROTO_RAW. */
+#ifndef SOL_RAW
+# define SOL_RAW IPPROTO_RAW
+#endif
+
 #if ENABLE_PING6
 # include <netinet/icmp6.h>
 /* I see RENUMBERED constants in bits/in.h - !!?
@@ -236,8 +244,6 @@ static void ping4(len_and_sockaddr *lsa)
 				break;
 		}
 	}
-	if (ENABLE_FEATURE_CLEAN_UP)
-		close(pingsock);
 }
 
 #if ENABLE_PING6
@@ -280,8 +286,6 @@ static void ping6(len_and_sockaddr *lsa)
 				break;
 		}
 	}
-	if (ENABLE_FEATURE_CLEAN_UP)
-		close(pingsock);
 }
 #endif
 
@@ -331,6 +335,8 @@ static int common_ping_main(sa_family_t
 	else
 #endif
 		ping4(lsa);
+	if (ENABLE_FEATURE_CLEAN_UP)
+		close(pingsock);
 	printf("%s is alive!\n", G.hostname);
 	return EXIT_SUCCESS;
 }
@@ -341,7 +347,8 @@ static int common_ping_main(sa_family_t
 
 /* Full(er) version */
 
-#define OPT_STRING ("qvc:+s:t:+w:+W:+I:np:4" IF_PING6("6"))
+/* -c NUM, -t NUM, -w NUM, -W NUM */
+#define OPT_STRING "qvc:+s:t:+w:+W:+I:np:4"IF_PING6("6")
 enum {
 	OPT_QUIET = 1 << 0,
 	OPT_VERBOSE = 1 << 1,
@@ -864,9 +871,12 @@ static int common_ping_main(int opt, cha
 
 	INIT_G();
 
-	/* exactly one argument needed; -v and -q don't mix; -c NUM, -t NUM, -w NUM, -W NUM */
-	opt_complementary = "=1:q--v:v--q";
-	opt |= getopt32(argv, OPT_STRING, &pingcount, &str_s, &opt_ttl, &deadline, &timeout, &str_I, &str_p);
+	opt |= getopt32(argv, "^"
+			OPT_STRING
+			/* exactly one arg; -v and -q don't mix */
+			"\0" "=1:q--v:v--q",
+			&pingcount, &str_s, &opt_ttl, &deadline, &timeout, &str_I, &str_p
+	);
 	if (opt & OPT_s)
 		datalen = xatou16(str_s); // -s
 	if (opt & OPT_I) { // -I
@@ -954,7 +964,7 @@ int ping6_main(int argc UNUSED_PARAM, ch
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
diff -urpN busybox-1.27.2/networking/pscan.c busybox-1.28.0/networking/pscan.c
--- busybox-1.27.2/networking/pscan.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/pscan.c	2017-08-17 13:50:45.000000000 +0200
@@ -6,10 +6,10 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config PSCAN
-//config:	bool "pscan"
+//config:	bool "pscan (6.6 kb)"
 //config:	default y
 //config:	help
-//config:	  Simple network port scanner.
+//config:	Simple network port scanner.
 
 //applet:IF_PSCAN(APPLET(pscan, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -75,8 +75,11 @@ int pscan_main(int argc UNUSED_PARAM, ch
 	unsigned rtt_4;
 	unsigned start, diff;
 
-	opt_complementary = "=1"; /* exactly one non-option */
-	opt = getopt32(argv, "cbp:P:t:T:", &opt_min_port, &opt_max_port, &opt_timeout, &opt_min_rtt);
+	opt = getopt32(argv, "^"
+		"cbp:P:t:T:"
+		"\0" "=1", /* exactly one non-option */
+		&opt_min_port, &opt_max_port, &opt_timeout, &opt_min_rtt
+	);
 	argv += optind;
 	max_port = xatou_range(opt_max_port, 1, 65535);
 	port = xatou_range(opt_min_port, 1, max_port);
diff -urpN busybox-1.27.2/networking/route.c busybox-1.28.0/networking/route.c
--- busybox-1.27.2/networking/route.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/route.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,5 +1,6 @@
 /* vi: set sw=4 ts=4: */
-/* route
+/*
+ * route
  *
  * Similar to the standard Unix route, but with only the necessary
  * parts for AF_INET and AF_INET6
@@ -18,18 +19,17 @@
  *
  * IPV6 support added by Bart Visscher <magick@linux-fan.com>
  */
-
 /* 2004/03/09  Manuel Novoa III <mjn3@codepoet.org>
  *
  * Rewritten to fix several bugs, add additional error checking, and
  * remove ridiculous amounts of bloat.
  */
 //config:config ROUTE
-//config:	bool "route"
+//config:	bool "route (8.9 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Route displays or manipulates the kernel's IP routing tables.
+//config:	Route displays or manipulates the kernel's IP routing tables.
 
 //applet:IF_ROUTE(APPLET(route, BB_DIR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/networking/slattach.c busybox-1.28.0/networking/slattach.c
--- busybox-1.27.2/networking/slattach.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/slattach.c	2017-08-17 13:50:45.000000000 +0200
@@ -13,27 +13,27 @@
  * - The -F options allows disabling of RTS/CTS flow control.
  */
 //config:config SLATTACH
-//config:	bool "slattach"
+//config:	bool "slattach (6.1 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  slattach is a small utility to attach network interfaces to serial
-//config:	  lines.
+//config:	slattach configures serial line as SLIP network interface.
 
 //applet:IF_SLATTACH(APPLET(slattach, BB_DIR_SBIN, BB_SUID_DROP))
+/* shouldn't be NOEXEC: may sleep indefinitely */
 
 //kbuild:lib-$(CONFIG_SLATTACH) += slattach.o
 
 //usage:#define slattach_trivial_usage
-//usage:       "[-cehmLF] [-s SPEED] [-p PROTOCOL] DEVICE"
+//usage:       "[-ehmLF] [-c SCRIPT] [-s BAUD] [-p PROTOCOL] SERIAL_DEVICE"
 //usage:#define slattach_full_usage "\n\n"
-//usage:       "Attach network interface(s) to serial line(s)\n"
-//usage:     "\n	-p PROT	Set protocol (slip, cslip, slip6, clisp6 or adaptive)"
-//usage:     "\n	-s SPD	Set line speed"
-//usage:     "\n	-e	Exit after initializing device"
-//usage:     "\n	-h	Exit when the carrier is lost"
-//usage:     "\n	-c PROG	Run PROG when the line is hung up"
-//usage:     "\n	-m	Do NOT initialize the line in raw 8 bits mode"
+//usage:       "Configure serial line as SLIP network interface\n"
+//usage:     "\n	-p PROT	Protocol: slip, cslip (default), slip6, clisp6, adaptive"
+//usage:     "\n	-s BAUD	Line speed"
+//usage:     "\n	-e	Exit after initialization"
+//usage:     "\n	-h	Exit if carrier is lost (else never exits)"
+//usage:     "\n	-c PROG	Run PROG on carrier loss"
+//usage:     "\n	-m	Do NOT set raw 8bit mode"
 //usage:     "\n	-L	Enable 3-wire operation"
 //usage:     "\n	-F	Disable RTS/CTS flow control"
 
@@ -42,103 +42,53 @@
 #include "libiproute/utils.h" /* invarg_1_to_2() */
 
 struct globals {
-	int handle;
 	int saved_disc;
 	struct termios saved_state;
 } FIX_ALIASING;
 #define G (*(struct globals*)bb_common_bufsiz1)
-#define handle       (G.handle      )
-#define saved_disc   (G.saved_disc  )
-#define saved_state  (G.saved_state )
 #define INIT_G() do { setup_common_bufsiz(); } while (0)
 
+#define serial_fd 3
 
-/*
- * Save tty state and line discipline
- *
- * It is fine here to bail out on errors, since we haven modified anything yet
- */
-static void save_state(void)
-{
-	/* Save line status */
-	if (tcgetattr(handle, &saved_state) < 0)
-		bb_perror_msg_and_die("get state");
-
-	/* Save line discipline */
-	xioctl(handle, TIOCGETD, &saved_disc);
-}
-
-static int set_termios_state_or_warn(struct termios *state)
+static int tcsetattr_serial_or_warn(struct termios *state)
 {
 	int ret;
 
-	ret = tcsetattr(handle, TCSANOW, state);
-	if (ret < 0) {
-		bb_perror_msg("set state");
+	ret = tcsetattr(serial_fd, TCSANOW, state);
+	if (ret != 0) {
+		bb_perror_msg("tcsetattr");
 		return 1; /* used as exitcode */
 	}
-	return 0;
+	return ret; /* 0 */
 }
 
-/*
- * Restore state and line discipline for ALL managed ttys
- *
- * Restoring ALL managed ttys is the only way to have a single
- * hangup delay.
- *
- * Go on after errors: we want to restore as many controlled ttys
- * as possible.
- */
 static void restore_state_and_exit(int exitcode) NORETURN;
 static void restore_state_and_exit(int exitcode)
 {
 	struct termios state;
 
 	/* Restore line discipline */
-	if (ioctl_or_warn(handle, TIOCSETD, &saved_disc) < 0) {
+	if (ioctl_or_warn(serial_fd, TIOCSETD, &G.saved_disc)) {
 		exitcode = 1;
 	}
 
 	/* Hangup */
-	memcpy(&state, &saved_state, sizeof(state));
+	memcpy(&state, &G.saved_state, sizeof(state));
 	cfsetispeed(&state, B0);
 	cfsetospeed(&state, B0);
-	if (set_termios_state_or_warn(&state))
-		exitcode = 1;
+	exitcode |= tcsetattr_serial_or_warn(&state);
 	sleep(1);
 
 	/* Restore line status */
-	if (set_termios_state_or_warn(&saved_state))
+	if (tcsetattr_serial_or_warn(&G.saved_state))
 		exit(EXIT_FAILURE);
+
 	if (ENABLE_FEATURE_CLEAN_UP)
-		close(handle);
+		close(serial_fd);
 
 	exit(exitcode);
 }
 
-/*
- * Set tty state, line discipline and encapsulation
- */
-static void set_state(struct termios *state, int encap)
-{
-	int disc;
-
-	/* Set line status */
-	if (set_termios_state_or_warn(state))
-		goto bad;
-	/* Set line discliple (N_SLIP always) */
-	disc = N_SLIP;
-	if (ioctl_or_warn(handle, TIOCSETD, &disc) < 0) {
-		goto bad;
-	}
-
-	/* Set encapsulation (SLIP, CSLIP, etc) */
-	if (ioctl_or_warn(handle, SIOCSIFENCAP, &encap) < 0) {
- bad:
-		restore_state_and_exit(EXIT_FAILURE);
-	}
-}
-
 static void sig_handler(int signo UNUSED_PARAM)
 {
 	restore_state_and_exit(EXIT_SUCCESS);
@@ -155,13 +105,14 @@ int slattach_main(int argc UNUSED_PARAM,
 		"cslip6\0"      /* 3 */
 		"adaptive\0"    /* 8 */
 		;
+	static const int int_N_SLIP = N_SLIP;
 
-	int i, encap, opt;
+	int encap, opt, fd;
 	struct termios state;
 	const char *proto = "cslip";
 	const char *extcmd;   /* Command to execute after hangup */
 	const char *baud_str;
-	int baud_code = -1;   /* Line baud rate (system code) */
+	int baud_code = baud_code; /* for compiler */
 
 	enum {
 		OPT_p_proto  = 1 << 0,
@@ -177,15 +128,13 @@ int slattach_main(int argc UNUSED_PARAM,
 	INIT_G();
 
 	/* Parse command line options */
-	opt = getopt32(argv, "p:s:c:ehmLF", &proto, &baud_str, &extcmd);
+	opt = getopt32(argv, "^" "p:s:c:ehmLF" "\0" "=1",
+				&proto, &baud_str, &extcmd
+	);
 	/*argc -= optind;*/
 	argv += optind;
 
-	if (!*argv)
-		bb_show_usage();
-
 	encap = index_in_strings(proto_names, proto);
-
 	if (encap < 0)
 		invarg_1_to_2(proto, "protocol");
 	if (encap > 3)
@@ -198,6 +147,22 @@ int slattach_main(int argc UNUSED_PARAM,
 			invarg_1_to_2(baud_str, "baud rate");
 	}
 
+	/* Open tty */
+	fd = open(*argv, O_RDWR | O_NDELAY);
+	if (fd < 0) {
+		char *buf = concat_path_file("/dev", *argv);
+		fd = xopen(buf, O_RDWR | O_NDELAY);
+		/* maybe if (ENABLE_FEATURE_CLEAN_UP) ?? */
+		free(buf);
+	}
+	xmove_fd(fd, serial_fd);
+
+	/* Save current tty state */
+	if (tcgetattr(serial_fd, &G.saved_state) != 0)
+		bb_perror_msg_and_die("tcgetattr");
+	/* Save line discipline */
+	xioctl(serial_fd, TIOCGETD, &G.saved_disc);
+
 	/* Trap signals in order to restore tty states upon exit */
 	if (!(opt & OPT_e_quit)) {
 		bb_signals(0
@@ -208,43 +173,37 @@ int slattach_main(int argc UNUSED_PARAM,
 			, sig_handler);
 	}
 
-	/* Open tty */
-	handle = open(*argv, O_RDWR | O_NDELAY);
-	if (handle < 0) {
-		char *buf = concat_path_file("/dev", *argv);
-		handle = xopen(buf, O_RDWR | O_NDELAY);
-		/* maybe if (ENABLE_FEATURE_CLEAN_UP) ?? */
-		free(buf);
-	}
-
-	/* Save current tty state */
-	save_state();
-
 	/* Configure tty */
-	memcpy(&state, &saved_state, sizeof(state));
+	memcpy(&state, &G.saved_state, sizeof(state));
 	if (!(opt & OPT_m_nonraw)) { /* raw not suppressed */
 		memset(&state.c_cc, 0, sizeof(state.c_cc));
 		state.c_cc[VMIN] = 1;
 		state.c_iflag = IGNBRK | IGNPAR;
-		state.c_oflag = 0;
-		state.c_lflag = 0;
+		/*state.c_oflag = 0;*/
+		/*state.c_lflag = 0;*/
 		state.c_cflag = CS8 | HUPCL | CREAD
 		              | ((opt & OPT_L_local) ? CLOCAL : 0)
 		              | ((opt & OPT_F_noflow) ? 0 : CRTSCTS);
-		cfsetispeed(&state, cfgetispeed(&saved_state));
-		cfsetospeed(&state, cfgetospeed(&saved_state));
+		cfsetispeed(&state, cfgetispeed(&G.saved_state));
+		cfsetospeed(&state, cfgetospeed(&G.saved_state));
 	}
-
 	if (opt & OPT_s_baud) {
 		cfsetispeed(&state, baud_code);
 		cfsetospeed(&state, baud_code);
 	}
-
-	set_state(&state, encap);
+	/* Set line status */
+	if (tcsetattr_serial_or_warn(&state))
+		goto bad;
+	/* Set line disclipline (N_SLIP always) */
+	if (ioctl_or_warn(serial_fd, TIOCSETD, (void*)&int_N_SLIP))
+		goto bad;
+	/* Set encapsulation (SLIP, CSLIP, etc) */
+	if (ioctl_or_warn(serial_fd, SIOCSIFENCAP, &encap))
+		goto bad;
 
 	/* Exit now if option -e was passed */
 	if (opt & OPT_e_quit)
-		return 0;
+		return EXIT_SUCCESS;
 
 	/* If we're not requested to watch, just keep descriptor open
 	 * until we are killed */
@@ -254,17 +213,20 @@ int slattach_main(int argc UNUSED_PARAM,
 
 	/* Watch line for hangup */
 	while (1) {
-		if (ioctl(handle, TIOCMGET, &i) < 0 || !(i & TIOCM_CAR))
-			goto no_carrier;
+		int modem_stat;
+		if (ioctl(serial_fd, TIOCMGET, &modem_stat))
+			break;
+		if (!(modem_stat & TIOCM_CAR))
+			break;
 		sleep(15);
 	}
 
- no_carrier:
-
 	/* Execute command on hangup */
 	if (opt & OPT_c_extcmd)
 		system(extcmd);
 
 	/* Restore states and exit */
 	restore_state_and_exit(EXIT_SUCCESS);
+ bad:
+	restore_state_and_exit(EXIT_FAILURE);
 }
diff -urpN busybox-1.27.2/networking/ssl_client.c busybox-1.28.0/networking/ssl_client.c
--- busybox-1.27.2/networking/ssl_client.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/ssl_client.c	2017-07-24 18:57:09.000000000 +0200
@@ -4,11 +4,11 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config SSL_CLIENT
-//config:	bool "ssl_client"
+//config:	bool "ssl_client (23 kb)"
 //config:	default y
 //config:	select TLS
 //config:	help
-//config:	  This tool pipes data to/from a socket, TLS-encrypting it.
+//config:	This tool pipes data to/from a socket, TLS-encrypting it.
 
 //applet:IF_SSL_CLIENT(APPLET(ssl_client, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/networking/tcpudp.c busybox-1.28.0/networking/tcpudp.c
--- busybox-1.27.2/networking/tcpudp.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/tcpudp.c	2017-08-17 13:50:45.000000000 +0200
@@ -29,18 +29,18 @@
  * - don't know how to retrieve ORIGDST for udp.
  */
 //config:config TCPSVD
-//config:	bool "tcpsvd"
+//config:	bool "tcpsvd (13 kb)"
 //config:	default y
 //config:	help
-//config:	  tcpsvd listens on a TCP port and runs a program for each new
-//config:	  connection.
+//config:	tcpsvd listens on a TCP port and runs a program for each new
+//config:	connection.
 //config:
 //config:config UDPSVD
-//config:	bool "udpsvd"
+//config:	bool "udpsvd (13 kb)"
 //config:	default y
 //config:	help
-//config:	  udpsvd listens on an UDP port and runs a program for each new
-//config:	  connection.
+//config:	udpsvd listens on an UDP port and runs a program for each new
+//config:	connection.
 
 //applet:IF_TCPSVD(APPLET_ODDNAME(tcpsvd, tcpudpsvd, BB_DIR_USR_BIN, BB_SUID_DROP, tcpsvd))
 //applet:IF_UDPSVD(APPLET_ODDNAME(udpsvd, tcpudpsvd, BB_DIR_USR_BIN, BB_SUID_DROP, udpsvd))
@@ -269,10 +269,11 @@ int tcpudpsvd_main(int argc UNUSED_PARAM
 
 	tcp = (applet_name[0] == 't');
 
-	/* 3+ args, -i at most once, -p implies -h, -v is counter, -b N, -c N */
-	opt_complementary = "-3:i--i:ph:vv";
 #ifdef SSLSVD
-	opts = getopt32(argv, "+c:+C:i:x:u:l:Eb:+hpt:vU:/:Z:K:",
+	opts = getopt32(argv, "^+"
+		"c:+C:i:x:u:l:Eb:+hpt:vU:/:Z:K:" /* -c NUM, -b NUM */
+		/* 3+ args, -i at most once, -p implies -h, -v is a counter */
+		"\0" "-3:i--i:ph:vv",
 		&cmax, &str_C, &instructs, &instructs, &user, &preset_local_hostname,
 		&backlog, &str_t, &ssluser, &root, &cert, &key, &verbose
 	);
diff -urpN busybox-1.27.2/networking/telnet.c busybox-1.28.0/networking/telnet.c
--- busybox-1.27.2/networking/telnet.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/telnet.c	2017-10-20 10:36:58.000000000 +0200
@@ -18,33 +18,32 @@
  * <jam@ltsp.org>
  * Modified 2004/02/11 to add ability to pass the USER variable to remote host
  * by Fernando Silveira <swrh@gmx.net>
- *
  */
 //config:config TELNET
-//config:	bool "telnet"
+//config:	bool "telnet (8.7 kb)"
 //config:	default y
 //config:	help
-//config:	  Telnet is an interface to the TELNET protocol, but is also commonly
-//config:	  used to test other simple protocols.
+//config:	Telnet is an interface to the TELNET protocol, but is also commonly
+//config:	used to test other simple protocols.
 //config:
 //config:config FEATURE_TELNET_TTYPE
 //config:	bool "Pass TERM type to remote host"
 //config:	default y
 //config:	depends on TELNET
 //config:	help
-//config:	  Setting this option will forward the TERM environment variable to the
-//config:	  remote host you are connecting to. This is useful to make sure that
-//config:	  things like ANSI colors and other control sequences behave.
+//config:	Setting this option will forward the TERM environment variable to the
+//config:	remote host you are connecting to. This is useful to make sure that
+//config:	things like ANSI colors and other control sequences behave.
 //config:
 //config:config FEATURE_TELNET_AUTOLOGIN
 //config:	bool "Pass USER type to remote host"
 //config:	default y
 //config:	depends on TELNET
 //config:	help
-//config:	  Setting this option will forward the USER environment variable to the
-//config:	  remote host you are connecting to. This is useful when you need to
-//config:	  log into a machine without telling the username (autologin). This
-//config:	  option enables `-a' and `-l USER' arguments.
+//config:	Setting this option will forward the USER environment variable to the
+//config:	remote host you are connecting to. This is useful when you need to
+//config:	log into a machine without telling the username (autologin). This
+//config:	option enables '-a' and '-l USER' options.
 //config:
 //config:config FEATURE_TELNET_WIDTH
 //config:	bool "Enable window size autodetection"
@@ -643,8 +642,10 @@ int telnet_main(int argc UNUSED_PARAM, c
 	}
 
 #if ENABLE_FEATURE_TELNET_AUTOLOGIN
-	if (1 & getopt32(argv, "al:", &G.autologin))
+	if (1 == getopt32(argv, "al:", &G.autologin)) {
+		/* Only -a without -l USER picks $USER from envvar */
 		G.autologin = getenv("USER");
+	}
 	argv += optind;
 #else
 	argv++;
diff -urpN busybox-1.27.2/networking/telnetd.c busybox-1.28.0/networking/telnetd.c
--- busybox-1.27.2/networking/telnetd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/telnetd.c	2017-08-17 13:50:45.000000000 +0200
@@ -21,73 +21,73 @@
  * Set process group corrections, initial busybox port
  */
 //config:config TELNETD
-//config:	bool "telnetd"
+//config:	bool "telnetd (12 kb)"
 //config:	default y
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	  A daemon for the TELNET protocol, allowing you to log onto the host
-//config:	  running the daemon. Please keep in mind that the TELNET protocol
-//config:	  sends passwords in plain text. If you can't afford the space for an
-//config:	  SSH daemon and you trust your network, you may say 'y' here. As a
-//config:	  more secure alternative, you should seriously consider installing the
-//config:	  very small Dropbear SSH daemon instead:
+//config:	A daemon for the TELNET protocol, allowing you to log onto the host
+//config:	running the daemon. Please keep in mind that the TELNET protocol
+//config:	sends passwords in plain text. If you can't afford the space for an
+//config:	SSH daemon and you trust your network, you may say 'y' here. As a
+//config:	more secure alternative, you should seriously consider installing the
+//config:	very small Dropbear SSH daemon instead:
 //config:		http://matt.ucc.asn.au/dropbear/dropbear.html
 //config:
-//config:	  Note that for busybox telnetd to work you need several things:
-//config:	  First of all, your kernel needs:
+//config:	Note that for busybox telnetd to work you need several things:
+//config:	First of all, your kernel needs:
 //config:		  CONFIG_UNIX98_PTYS=y
 //config:
-//config:	  Next, you need a /dev/pts directory on your root filesystem:
+//config:	Next, you need a /dev/pts directory on your root filesystem:
 //config:
 //config:		  $ ls -ld /dev/pts
 //config:		  drwxr-xr-x  2 root root 0 Sep 23 13:21 /dev/pts/
 //config:
-//config:	  Next you need the pseudo terminal master multiplexer /dev/ptmx:
+//config:	Next you need the pseudo terminal master multiplexer /dev/ptmx:
 //config:
 //config:		  $ ls -la /dev/ptmx
 //config:		  crw-rw-rw-  1 root tty 5, 2 Sep 23 13:55 /dev/ptmx
 //config:
-//config:	  Any /dev/ttyp[0-9]* files you may have can be removed.
-//config:	  Next, you need to mount the devpts filesystem on /dev/pts using:
+//config:	Any /dev/ttyp[0-9]* files you may have can be removed.
+//config:	Next, you need to mount the devpts filesystem on /dev/pts using:
 //config:
 //config:		  mount -t devpts devpts /dev/pts
 //config:
-//config:	  You need to be sure that busybox has LOGIN and
-//config:	  FEATURE_SUID enabled. And finally, you should make
-//config:	  certain that Busybox has been installed setuid root:
+//config:	You need to be sure that busybox has LOGIN and
+//config:	FEATURE_SUID enabled. And finally, you should make
+//config:	certain that busybox has been installed setuid root:
 //config:
 //config:		chown root.root /bin/busybox
 //config:		chmod 4755 /bin/busybox
 //config:
-//config:	  with all that done, telnetd _should_ work....
+//config:	with all that done, telnetd _should_ work....
 //config:
 //config:config FEATURE_TELNETD_STANDALONE
 //config:	bool "Support standalone telnetd (not inetd only)"
 //config:	default y
 //config:	depends on TELNETD
 //config:	help
-//config:	  Selecting this will make telnetd able to run standalone.
+//config:	Selecting this will make telnetd able to run standalone.
 //config:
 //config:config FEATURE_TELNETD_INETD_WAIT
 //config:	bool "Support -w SEC option (inetd wait mode)"
 //config:	default y
 //config:	depends on FEATURE_TELNETD_STANDALONE
 //config:	help
-//config:	  This option allows you to run telnetd in "inet wait" mode.
-//config:	  Example inetd.conf line (note "wait", not usual "nowait"):
+//config:	This option allows you to run telnetd in "inet wait" mode.
+//config:	Example inetd.conf line (note "wait", not usual "nowait"):
 //config:
-//config:	  telnet stream tcp wait root /bin/telnetd telnetd -w10
+//config:	telnet stream tcp wait root /bin/telnetd telnetd -w10
 //config:
-//config:	  In this example, inetd passes _listening_ socket_ as fd 0
-//config:	  to telnetd when connection appears.
-//config:	  telnetd will wait for connections until all existing
-//config:	  connections are closed, and no new connections
-//config:	  appear during 10 seconds. Then it exits, and inetd continues
-//config:	  to listen for new connections.
-//config:
-//config:	  This option is rarely used. "tcp nowait" is much more usual
-//config:	  way of running tcp services, including telnetd.
-//config:	  You most probably want to say N here.
+//config:	In this example, inetd passes _listening_ socket_ as fd 0
+//config:	to telnetd when connection appears.
+//config:	telnetd will wait for connections until all existing
+//config:	connections are closed, and no new connections
+//config:	appear during 10 seconds. Then it exits, and inetd continues
+//config:	to listen for new connections.
+//config:
+//config:	This option is rarely used. "tcp nowait" is much more usual
+//config:	way of running tcp services, including telnetd.
+//config:	You most probably want to say N here.
 
 //applet:IF_TELNETD(APPLET(telnetd, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -659,13 +659,15 @@ int telnetd_main(int argc UNUSED_PARAM,
 #endif
 	INIT_G();
 
-	/* -w NUM, and implies -F. -w and -i don't mix */
-	IF_FEATURE_TELNETD_INETD_WAIT(opt_complementary = "wF:i--w:w--i";)
 	/* Even if !STANDALONE, we accept (and ignore) -i, thus people
 	 * don't need to guess whether it's ok to pass -i to us */
-	opt = getopt32(argv, "f:l:Ki"
+	opt = getopt32(argv, "^"
+			"f:l:Ki"
 			IF_FEATURE_TELNETD_STANDALONE("p:b:F")
-			IF_FEATURE_TELNETD_INETD_WAIT("Sw:+"),
+			IF_FEATURE_TELNETD_INETD_WAIT("Sw:+") /* -w NUM */
+			"\0"
+			/* -w implies -F. -w and -i don't mix */
+			IF_FEATURE_TELNETD_INETD_WAIT("wF:i--w:w--i"),
 			&G.issuefile, &G.loginpath
 			IF_FEATURE_TELNETD_STANDALONE(, &opt_portnbr, &opt_bindaddr)
 			IF_FEATURE_TELNETD_INETD_WAIT(, &sec_linger)
diff -urpN busybox-1.27.2/networking/tftp.c busybox-1.28.0/networking/tftp.c
--- busybox-1.27.2/networking/tftp.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/tftp.c	2018-01-01 20:40:41.000000000 +0100
@@ -19,22 +19,27 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config TFTP
-//config:	bool "tftp"
+//config:	bool "tftp (12 kb)"
 //config:	default y
 //config:	help
-//config:	  This enables the Trivial File Transfer Protocol client program. TFTP
-//config:	  is usually used for simple, small transfers such as a root image
-//config:	  for a network-enabled bootloader.
+//config:	Trivial File Transfer Protocol client. TFTP is usually used
+//config:	for simple, small transfers such as a root image
+//config:	for a network-enabled bootloader.
+//config:
+//config:config FEATURE_TFTP_PROGRESS_BAR
+//config:	bool "Enable progress bar"
+//config:	default y
+//config:	depends on TFTP
 //config:
 //config:config TFTPD
-//config:	bool "tftpd"
+//config:	bool "tftpd (10 kb)"
 //config:	default y
 //config:	help
-//config:	  This enables the Trivial File Transfer Protocol server program.
-//config:	  It expects that stdin is a datagram socket and a packet
-//config:	  is already pending on it. It will exit after one transfer.
-//config:	  In other words: it should be run from inetd in nowait mode,
-//config:	  or from udpsvd. Example: "udpsvd -E 0 69 tftpd DIR"
+//config:	Trivial File Transfer Protocol server.
+//config:	It expects that stdin is a datagram socket and a packet
+//config:	is already pending on it. It will exit after one transfer.
+//config:	In other words: it should be run from inetd in nowait mode,
+//config:	or from udpsvd. Example: "udpsvd -E 0 69 tftpd DIR"
 //config:
 //config:comment "Common options for tftp/tftpd"
 //config:	depends on TFTP || TFTPD
@@ -44,42 +49,37 @@
 //config:	default y
 //config:	depends on TFTP || TFTPD
 //config:	help
-//config:	  Add support for the GET command within the TFTP client. This allows
-//config:	  a client to retrieve a file from a TFTP server.
-//config:	  Also enable upload support in tftpd, if tftpd is selected.
+//config:	Add support for the GET command within the TFTP client. This allows
+//config:	a client to retrieve a file from a TFTP server.
+//config:	Also enable upload support in tftpd, if tftpd is selected.
 //config:
-//config:	  Note: this option does _not_ make tftpd capable of download
-//config:	  (the usual operation people need from it)!
+//config:	Note: this option does _not_ make tftpd capable of download
+//config:	(the usual operation people need from it)!
 //config:
 //config:config FEATURE_TFTP_PUT
 //config:	bool "Enable 'tftp put' and/or tftpd download code"
 //config:	default y
 //config:	depends on TFTP || TFTPD
 //config:	help
-//config:	  Add support for the PUT command within the TFTP client. This allows
-//config:	  a client to transfer a file to a TFTP server.
-//config:	  Also enable download support in tftpd, if tftpd is selected.
+//config:	Add support for the PUT command within the TFTP client. This allows
+//config:	a client to transfer a file to a TFTP server.
+//config:	Also enable download support in tftpd, if tftpd is selected.
 //config:
 //config:config FEATURE_TFTP_BLOCKSIZE
 //config:	bool "Enable 'blksize' and 'tsize' protocol options"
 //config:	default y
 //config:	depends on TFTP || TFTPD
 //config:	help
-//config:	  Allow tftp to specify block size, and tftpd to understand
-//config:	  "blksize" and "tsize" options.
-//config:
-//config:config FEATURE_TFTP_PROGRESS_BAR
-//config:	bool "Enable progress bar"
-//config:	default y
-//config:	depends on TFTP && FEATURE_TFTP_BLOCKSIZE
+//config:	Allow tftp to specify block size, and tftpd to understand
+//config:	"blksize" and "tsize" options.
 //config:
 //config:config TFTP_DEBUG
 //config:	bool "Enable debug"
 //config:	default n
 //config:	depends on TFTP || TFTPD
 //config:	help
-//config:	  Make tftp[d] print debugging messages on stderr.
-//config:	  This is useful if you are diagnosing a bug in tftp[d].
+//config:	Make tftp[d] print debugging messages on stderr.
+//config:	This is useful if you are diagnosing a bug in tftp[d].
 
 //applet:#if ENABLE_FEATURE_TFTP_GET || ENABLE_FEATURE_TFTP_PUT
 //applet:IF_TFTP(APPLET(tftp, BB_DIR_USR_BIN, BB_SUID_DROP))
@@ -208,7 +208,7 @@ struct globals {
 #define G_error_pkt_reason (G.error_pkt[3])
 #define G_error_pkt_str    ((char*)(G.error_pkt + 4))
 
-#if ENABLE_FEATURE_TFTP_PROGRESS_BAR
+#if ENABLE_FEATURE_TFTP_PROGRESS_BAR && ENABLE_FEATURE_TFTP_BLOCKSIZE
 static void tftp_progress_update(void)
 {
 	bb_progress_update(&G.pmt, 0, G.pos, G.size);
@@ -227,6 +227,7 @@ static void tftp_progress_done(void)
 	}
 }
 #else
+# define tftp_progress_update() ((void)0)
 # define tftp_progress_init() ((void)0)
 # define tftp_progress_done() ((void)0)
 #endif
@@ -761,15 +762,16 @@ int tftp_main(int argc UNUSED_PARAM, cha
 
 	INIT_G();
 
-	/* -p or -g is mandatory, and they are mutually exclusive */
-	opt_complementary = "" IF_FEATURE_TFTP_GET("g:") IF_FEATURE_TFTP_PUT("p:")
-			IF_GETPUT("g--p:p--g:");
-
-	IF_GETPUT(opt =) getopt32(argv,
+	IF_GETPUT(opt =) getopt32(argv, "^"
 			IF_FEATURE_TFTP_GET("g") IF_FEATURE_TFTP_PUT("p")
-				"l:r:" IF_FEATURE_TFTP_BLOCKSIZE("b:"),
+			"l:r:" IF_FEATURE_TFTP_BLOCKSIZE("b:")
+			"\0"
+			/* -p or -g is mandatory, and they are mutually exclusive */
+			IF_FEATURE_TFTP_GET("g:") IF_FEATURE_TFTP_PUT("p:")
+			IF_GETPUT("g--p:p--g:"),
 			&local_file, &remote_file
-			IF_FEATURE_TFTP_BLOCKSIZE(, &blksize_str));
+			IF_FEATURE_TFTP_BLOCKSIZE(, &blksize_str)
+	);
 	argv += optind;
 
 # if ENABLE_FEATURE_TFTP_BLOCKSIZE
diff -urpN busybox-1.27.2/networking/tls_aes.c busybox-1.28.0/networking/tls_aes.c
--- busybox-1.27.2/networking/tls_aes.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/networking/tls_aes.c	2017-07-18 19:13:20.000000000 +0200
@@ -40,10 +40,6 @@
  */
 #include "tls.h"
 
-/* TODO: grep for this and move to libbb */
-#define get_unaligned_be32(buf) ({ uint32_t v; move_from_unaligned32(v, buf); SWAP_BE32(v); })
-
-
 // The lookup-tables are marked const so they can be placed in read-only storage instead of RAM
 // The numbers below can be computed dynamically trading ROM for RAM -
 // This can be useful in (embedded) bootloader applications, where ROM is often limited.
diff -urpN busybox-1.27.2/networking/tls_pstm.c busybox-1.28.0/networking/tls_pstm.c
--- busybox-1.27.2/networking/tls_pstm.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/networking/tls_pstm.c	2017-07-18 19:13:20.000000000 +0200
@@ -2127,7 +2127,7 @@ int32 pstm_invmod(psPool_t *pool, pstm_i
 {
 	pstm_int	x, y, u, v, B, D;
 	int32		res;
-	uint16		neg, sanity;
+	int		neg, sanity; //bbox: was uint16
 
 	/* 2. [modified] b must be odd   */
 	if (pstm_iseven (b) == 1) {
diff -urpN busybox-1.27.2/networking/tls_pstm_montgomery_reduce.c busybox-1.28.0/networking/tls_pstm_montgomery_reduce.c
--- busybox-1.27.2/networking/tls_pstm_montgomery_reduce.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/networking/tls_pstm_montgomery_reduce.c	2017-07-18 19:13:20.000000000 +0200
@@ -345,7 +345,7 @@ int32 pstm_montgomery_reduce(psPool_t *p
 {
 	pstm_digit	*c, *_c, *tmpm, mu;
 	int32		oldused, x, y;
-	int16		pa;
+	int		pa; //bbox: was int16
 
 	pa = m->used;
 	if (pa > a->alloc) {
diff -urpN busybox-1.27.2/networking/tls_pstm_mul_comba.c busybox-1.28.0/networking/tls_pstm_mul_comba.c
--- busybox-1.27.2/networking/tls_pstm_mul_comba.c	2017-08-04 02:18:00.000000000 +0200
+++ busybox-1.28.0/networking/tls_pstm_mul_comba.c	2017-07-18 19:13:20.000000000 +0200
@@ -229,7 +229,7 @@ asm(                               \
 static int32 pstm_mul_comba_gen(psPool_t *pool, pstm_int *A, pstm_int *B,
 			pstm_int *C, pstm_digit *paD, uint32 paDlen)
 {
-	int16		paDfail, pa;
+	int		paDfail, pa; //bbox: was int16
 	int32       ix, iy, iz, tx, ty;
 	pstm_digit	c0, c1, c2, *tmpx, *tmpy, *dst;
 
diff -urpN busybox-1.27.2/networking/tls_pstm_sqr_comba.c busybox-1.28.0/networking/tls_pstm_sqr_comba.c
--- busybox-1.27.2/networking/tls_pstm_sqr_comba.c	2017-08-04 02:18:00.000000000 +0200
+++ busybox-1.28.0/networking/tls_pstm_sqr_comba.c	2017-07-18 19:13:20.000000000 +0200
@@ -447,7 +447,7 @@ asm(                               \
 static int32 pstm_sqr_comba_gen(psPool_t *pool, pstm_int *A, pstm_int *B,
 			pstm_digit *paD, uint32 paDlen)
 {
-	int16		paDfail, pa;
+	int		paDfail, pa; //bbox: was int16
 	int32       ix, iz;
 	pstm_digit  c0, c1, c2, *dst;
 #ifdef PSTM_ISO
diff -urpN busybox-1.27.2/networking/traceroute.c busybox-1.28.0/networking/traceroute.c
--- busybox-1.27.2/networking/traceroute.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/traceroute.c	2017-12-04 16:07:47.000000000 +0100
@@ -12,12 +12,12 @@
  * this paragraph in its entirety in the documentation or other materials
  * provided with the distribution, and (3) all advertising materials mentioning
  * features or use of this software display the following acknowledgement:
- * ``This product includes software developed by the University of California,
+ * ''This product includes software developed by the University of California,
  * Lawrence Berkeley Laboratory and its contributors.'' Neither the name of
  * the University nor the names of its contributors may be used to endorse
  * or promote products derived from this software without specific prior
  * written permission.
- * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
+ * THIS SOFTWARE IS PROVIDED ''AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
  * WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  */
@@ -210,26 +210,26 @@
  *     Tue Dec 20 03:50:13 PST 1988
  */
 //config:config TRACEROUTE
-//config:	bool "traceroute"
+//config:	bool "traceroute (11 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Utility to trace the route of IP packets.
+//config:	Utility to trace the route of IP packets.
 //config:
 //config:config TRACEROUTE6
-//config:	bool "traceroute6"
+//config:	bool "traceroute6 (12 kb)"
 //config:	default y
 //config:	depends on FEATURE_IPV6
 //config:	help
-//config:	  Utility to trace the route of IPv6 packets.
+//config:	Utility to trace the route of IPv6 packets.
 //config:
 //config:config FEATURE_TRACEROUTE_VERBOSE
 //config:	bool "Enable verbose output"
 //config:	default y
 //config:	depends on TRACEROUTE || TRACEROUTE6
 //config:	help
-//config:	  Add some verbosity to traceroute. This includes among other things
-//config:	  hostnames and ICMP response types.
+//config:	Add some verbosity to traceroute. This includes among other things
+//config:	hostnames and ICMP response types.
 //config:
 //config:config FEATURE_TRACEROUTE_USE_ICMP
 //config:	bool "Enable -I option (use ICMP instead of UDP)"
@@ -311,6 +311,9 @@
 # ifndef SOL_IPV6
 #  define SOL_IPV6 IPPROTO_IPV6
 # endif
+# if defined(IPV6_PKTINFO) && !defined(IPV6_RECVPKTINFO)
+#  define IPV6_RECVPKTINFO IPV6_PKTINFO
+# endif
 #endif
 
 #include "libbb.h"
@@ -323,6 +326,14 @@
 # define IPPROTO_IP 0
 #endif
 
+/* Some operating systems, like GNU/Hurd, don't define SOL_RAW, but do have
+ * IPPROTO_RAW. Since the IPPROTO definitions are also valid to use for
+ * setsockopt (and take the same value as their corresponding SOL definitions,
+ * if they exist), we can just fall back on IPPROTO_RAW. */
+#ifndef SOL_RAW
+# define SOL_RAW IPPROTO_RAW
+#endif
+
 
 #define OPT_STRING \
 	"FIlnrdvxt:i:m:p:q:s:w:z:f:" \
@@ -698,6 +709,9 @@ packet_ok(int read_len, len_and_sockaddr
 
 # if ENABLE_FEATURE_TRACEROUTE_VERBOSE
 	if (verbose) {
+#  ifndef MAXHOSTNAMELEN
+#   define MAXHOSTNAMELEN 80
+#  endif
 		unsigned char *p;
 		char pa1[MAXHOSTNAMELEN];
 		char pa2[MAXHOSTNAMELEN];
@@ -833,9 +847,9 @@ common_traceroute_main(int op, char **ar
 
 	INIT_G();
 
-	/* minimum 1 arg */
-	opt_complementary = "-1:x-x";
-	op |= getopt32(argv, OPT_STRING
+	op |= getopt32(argv, "^"
+		OPT_STRING
+		"\0" "-1:x-x" /* minimum 1 arg */
 		, &tos_str, &device, &max_ttl_str, &port_str, &nprobes_str
 		, &source, &waittime_str, &pausemsecs_str, &first_ttl_str
 	);
@@ -903,12 +917,7 @@ common_traceroute_main(int op, char **ar
 #if ENABLE_TRACEROUTE6
 	if (af == AF_INET6) {
 		xmove_fd(xsocket(AF_INET6, SOCK_RAW, IPPROTO_ICMPV6), rcvsock);
-# ifdef IPV6_RECVPKTINFO
 		setsockopt_1(rcvsock, SOL_IPV6, IPV6_RECVPKTINFO);
-		setsockopt_1(rcvsock, SOL_IPV6, IPV6_2292PKTINFO);
-# else
-		setsockopt_1(rcvsock, SOL_IPV6, IPV6_PKTINFO);
-# endif
 	} else
 #endif
 	{
diff -urpN busybox-1.27.2/networking/tunctl.c busybox-1.28.0/networking/tunctl.c
--- busybox-1.27.2/networking/tunctl.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/tunctl.c	2017-08-17 13:50:45.000000000 +0200
@@ -10,21 +10,21 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config TUNCTL
-//config:	bool "tunctl"
+//config:	bool "tunctl (6.4 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  tunctl creates or deletes tun devices.
+//config:	tunctl creates or deletes tun devices.
 //config:
 //config:config FEATURE_TUNCTL_UG
 //config:	bool "Support owner:group assignment"
 //config:	default y
 //config:	depends on TUNCTL
 //config:	help
-//config:	  Allow to specify owner and group of newly created interface.
-//config:	  340 bytes of pure bloat. Say no here.
+//config:	Allow to specify owner and group of newly created interface.
+//config:	340 bytes of pure bloat. Say no here.
 
-//applet:IF_TUNCTL(APPLET(tunctl, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_TUNCTL(APPLET_NOEXEC(tunctl, tunctl, BB_DIR_SBIN, BB_SUID_DROP, tunctl))
 
 //kbuild:lib-$(CONFIG_TUNCTL) += tunctl.o
 
@@ -83,10 +83,13 @@ int tunctl_main(int argc UNUSED_PARAM, c
 #endif
 	};
 
-	opt_complementary = "=0:t--d:d--t"; // no arguments; t ^ d
-	opts = getopt32(argv, "f:t:d:" IF_FEATURE_TUNCTL_UG("u:g:b"),
+	opts = getopt32(argv, "^"
+			"f:t:d:" IF_FEATURE_TUNCTL_UG("u:g:b")
+			"\0"
+			"=0:t--d:d--t", // no arguments; t ^ d
 			&opt_device, &opt_name, &opt_name
-			IF_FEATURE_TUNCTL_UG(, &opt_user, &opt_group));
+			IF_FEATURE_TUNCTL_UG(, &opt_user, &opt_group)
+	);
 
 	// select device
 	memset(&ifr, 0, sizeof(ifr));
@@ -153,9 +156,12 @@ int tunctl_main(int argc UNUSED_PARAM, c
 		OPT_d = 1 << 2, // delete named interface
 	};
 
-	opt_complementary = "=0:t--d:d--t"; // no arguments; t ^ d
-	opts = getopt32(argv, "f:t:d:u:g:b", // u, g, b accepted and ignored
-			&opt_device, &opt_name, &opt_name, NULL, NULL);
+	opts = getopt32(argv, "^"
+			"f:t:d:u:g:b" // u, g, b accepted and ignored
+			"\0"
+			"=0:t--d:d--t", // no arguments; t ^ d
+			&opt_device, &opt_name, &opt_name, NULL, NULL
+	);
 
 	// set interface name
 	memset(&ifr, 0, sizeof(ifr));
diff -urpN busybox-1.27.2/networking/udhcp/Config.src busybox-1.28.0/networking/udhcp/Config.src
--- busybox-1.27.2/networking/udhcp/Config.src	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/udhcp/Config.src	2017-07-29 23:01:53.000000000 +0200
@@ -3,161 +3,165 @@
 # see scripts/kbuild/config-language.txt.
 #
 
-INSERT
-
 config UDHCPD
-	bool "udhcpd (DHCP server)"
+	bool "udhcpd"
 	default y
 	select PLATFORM_LINUX
 	help
-	  udhcpd is a DHCP server geared primarily toward embedded systems,
-	  while striving to be fully functional and RFC compliant.
-
-config FEATURE_UDHCPD_WRITE_LEASES_EARLY
-	bool "Rewrite the lease file at every new acknowledge"
-	default y
-	depends on UDHCPD
-	help
-	  If selected, udhcpd will write a new file with leases every
-	  time a new lease has been accepted, thus eliminating the need
-	  to send SIGUSR1 for the initial writing or updating. Any timed
-	  rewriting remains undisturbed.
+	udhcpd is a DHCP server geared primarily toward embedded systems,
+	while striving to be fully functional and RFC compliant.
 
 config FEATURE_UDHCPD_BASE_IP_ON_MAC
 	bool "Select IP address based on client MAC"
 	default n
 	depends on UDHCPD
 	help
-	  If selected, udhcpd will base its selection of IP address to offer
-	  on the client's hardware address. Otherwise udhcpd uses the next
-	  consecutive free address.
-
-	  This reduces the frequency of IP address changes for clients
-	  which let their lease expire, and makes consecutive DHCPOFFERS
-	  for the same client to (almost always) contain the same
-	  IP address.
+	If selected, udhcpd will base its selection of IP address to offer
+	on the client's hardware address. Otherwise udhcpd uses the next
+	consecutive free address.
+
+	This reduces the frequency of IP address changes for clients
+	which let their lease expire, and makes consecutive DHCPOFFERS
+	for the same client to (almost always) contain the same
+	IP address.
+
+config FEATURE_UDHCPD_WRITE_LEASES_EARLY
+	bool "Rewrite lease file at every new acknowledge"
+	default y
+	depends on UDHCPD
+	help
+	If selected, udhcpd will write a new file with leases every
+	time a new lease has been accepted, thus eliminating the need
+	to send SIGUSR1 for the initial writing or updating. Any timed
+	rewriting remains undisturbed.
 
 config DHCPD_LEASES_FILE
 	string "Absolute path to lease file"
 	default "/var/lib/misc/udhcpd.leases"
 	depends on UDHCPD
 	help
-	  udhcpd stores addresses in a lease file. This is the absolute path
-	  of the file. Normally it is safe to leave it untouched.
+	udhcpd stores addresses in a lease file. This is the absolute path
+	of the file. Normally it is safe to leave it untouched.
 
 config DUMPLEASES
-	bool "dumpleases"
+	bool "dumpleases (6.4 kb)"
 	default y
 	help
-	  dumpleases displays the leases written out by the udhcpd.
-	  Lease times are stored in the file by time remaining in lease, or
-	  by the absolute time that it expires in seconds from epoch.
+	dumpleases displays the leases written out by the udhcpd.
+	Lease times are stored in the file by time remaining in lease, or
+	by the absolute time that it expires in seconds from epoch.
 
 config DHCPRELAY
-	bool "dhcprelay"
+	bool "dhcprelay (5.8 kb)"
 	default y
 	help
-	  dhcprelay listens for dhcp requests on one or more interfaces
-	  and forwards these requests to a different interface or dhcp
-	  server.
+	dhcprelay listens for DHCP requests on one or more interfaces
+	and forwards these requests to a different interface or DHCP
+	server.
 
 config UDHCPC
-	bool "udhcpc (DHCP client)"
+	bool "udhcpc"
 	default y
 	select PLATFORM_LINUX
 	help
-	  udhcpc is a DHCP client geared primarily toward embedded systems,
-	  while striving to be fully functional and RFC compliant.
+	udhcpc is a DHCP client geared primarily toward embedded systems,
+	while striving to be fully functional and RFC compliant.
 
-	  The udhcp client negotiates a lease with the DHCP server and
-	  runs a script when a lease is obtained or lost.
+	The udhcp client negotiates a lease with the DHCP server and
+	runs a script when a lease is obtained or lost.
 
 config FEATURE_UDHCPC_ARPING
 	bool "Verify that the offered address is free, using ARP ping"
 	default y
 	depends on UDHCPC
 	help
-	  If selected, udhcpc will send ARP probes and make sure
-	  the offered address is really not in use by anyone. The client
-	  will DHCPDECLINE the offer if the address is in use,
-	  and restart the discover process.
+	If selected, udhcpc will send ARP probes and make sure
+	the offered address is really not in use by anyone. The client
+	will DHCPDECLINE the offer if the address is in use,
+	and restart the discover process.
 
 config FEATURE_UDHCPC_SANITIZEOPT
 	bool "Do not pass malformed host and domain names"
 	default y
 	depends on UDHCPC
 	help
-	  If selected, udhcpc will check some options (such as option 12 -
-	  hostname) and if they don't look like valid hostnames
-	  (for example, if they start with dash or contain spaces),
-	  they will be replaced with string "bad" when exporting
-	  to the environment.
+	If selected, udhcpc will check some options (such as option 12 -
+	hostname) and if they don't look like valid hostnames
+	(for example, if they start with dash or contain spaces),
+	they will be replaced with string "bad" when exporting
+	to the environment.
 
 config UDHCPC_DEFAULT_SCRIPT
 	string "Absolute path to config script"
 	default "/usr/share/udhcpc/default.script"
 	depends on UDHCPC
 	help
-	  This script is called after udhcpc receives an answer. See
-	  examples/udhcp for a working example. Normally it is safe
-	  to leave this untouched.
+	This script is called after udhcpc receives an answer. See
+	examples/udhcp for a working example. Normally it is safe
+	to leave this untouched.
+
+# udhcpc6 config is inserted here:
+INSERT
+
+comment "Common options for DHCP applets"
+        depends on UDHCPD || UDHCPC || UDHCPC6 || DHCPRELAY
 
 config FEATURE_UDHCP_PORT
 	bool "Enable '-P port' option for udhcpd and udhcpc"
 	default n
-	depends on UDHCPD || UDHCPC
+	depends on UDHCPD || UDHCPC || UDHCPC6
 	help
-	  At the cost of ~300 bytes, enables -P port option.
-	  This feature is typically not needed.
+	At the cost of ~300 bytes, enables -P port option.
+	This feature is typically not needed.
 
 config UDHCP_DEBUG
-	int "Maximum verbosity level for udhcp applets (0..9)"
+	int "Maximum verbosity level (0..9)"
 	default 9
 	range 0 9
-	depends on UDHCPD || UDHCPC || DHCPRELAY
+	depends on UDHCPD || UDHCPC || UDHCPC6 || DHCPRELAY
 	help
-	  Verbosity can be increased with multiple -v options.
-	  This option controls how high it can be cranked up.
+	Verbosity can be increased with multiple -v options.
+	This option controls how high it can be cranked up.
 
-	  Bigger values result in bigger code. Levels above 1
-	  are very verbose and useful for debugging only.
+	Bigger values result in bigger code. Levels above 1
+	are very verbose and useful for debugging only.
 
-config FEATURE_UDHCP_RFC3397
-	bool "Support RFC3397 domain search (experimental)"
-	default y
+config UDHCPC_SLACK_FOR_BUGGY_SERVERS
+	int "DHCP options slack buffer size"
+	default 80
+	range 0 924
 	depends on UDHCPD || UDHCPC
 	help
-	  If selected, both client and server will support passing of domain
-	  search lists via option 119, specified in RFC 3397,
-	  and SIP servers option 120, specified in RFC 3361.
+	Some buggy DHCP servers send DHCP offer packets with option
+	field larger than we expect (which might also be considered a
+	buffer overflow attempt). These packets are normally discarded.
+	If circumstances beyond your control force you to support such
+	servers, this may help. The upper limit (924) makes udhcpc accept
+	even 1500 byte packets (maximum-sized ethernet packets).
+
+	This option does not make udhcp[cd] emit non-standard
+	sized packets.
+
+	Known buggy DHCP servers:
+	3Com OfficeConnect Remote 812 ADSL Router:
+		seems to confuse maximum allowed UDP packet size with
+		maximum size of entire IP packet, and sends packets
+		which are 28 bytes too large.
+	Seednet (ISP) VDSL: sends packets 2 bytes too large.
 
-config FEATURE_UDHCP_8021Q
-	bool "Support 802.1Q VLAN parameters"
+config FEATURE_UDHCP_RFC3397
+	bool "Support RFC 3397 domain search options"
 	default y
 	depends on UDHCPD || UDHCPC
 	help
-	  If selected, both client and server will support passing of VLAN
-	  ID and priority via options 132 and 133 as per 802.1Q.
+	If selected, both client and server will support passing of domain
+	search lists via option 119, specified in RFC 3397,
+	and SIP servers option 120, specified in RFC 3361.
 
-config UDHCPC_SLACK_FOR_BUGGY_SERVERS
-	int "DHCP options slack buffer size"
-	default 80
-	range 0 924
+config FEATURE_UDHCP_8021Q
+	bool "Support 802.1Q VLAN parameters options"
+	default y
 	depends on UDHCPD || UDHCPC
 	help
-	  Some buggy DHCP servers send DHCP offer packets with option
-	  field larger than we expect (which might also be considered a
-	  buffer overflow attempt). These packets are normally discarded.
-	  If circumstances beyond your control force you to support such
-	  servers, this may help. The upper limit (924) makes dhcpc accept
-	  even 1500 byte packets (maximum-sized ethernet packets).
-
-	  This option does not make dhcp[cd] emit non-standard
-	  sized packets.
-
-	  Known buggy DHCP servers:
-	  3Com OfficeConnect Remote 812 ADSL Router:
-	    seems to confuse maximum allowed UDP packet size with
-	    maximum size of entire IP packet, and sends packets which are
-	    28 bytes too large.
-	  Seednet (ISP) VDSL: sends packets 2 bytes too large.
+	If selected, both client and server will support passing of VLAN
+	ID and priority via options 132 and 133 as per 802.1Q.
diff -urpN busybox-1.27.2/networking/udhcp/common.h busybox-1.28.0/networking/udhcp/common.h
--- busybox-1.27.2/networking/udhcp/common.h	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/udhcp/common.h	2017-10-05 11:53:08.000000000 +0200
@@ -308,7 +308,9 @@ int udhcp_send_raw_packet(struct dhcp_pa
 
 int udhcp_send_kernel_packet(struct dhcp_packet *dhcp_pkt,
 		uint32_t source_nip, int source_port,
-		uint32_t dest_nip, int dest_port) FAST_FUNC;
+		uint32_t dest_nip, int dest_port,
+		int send_flags
+) FAST_FUNC;
 
 void udhcp_sp_setup(void) FAST_FUNC;
 void udhcp_sp_fd_set(struct pollfd *pfds, int extra_fd) FAST_FUNC;
diff -urpN busybox-1.27.2/networking/udhcp/d6_dhcpc.c busybox-1.28.0/networking/udhcp/d6_dhcpc.c
--- busybox-1.27.2/networking/udhcp/d6_dhcpc.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/udhcp/d6_dhcpc.c	2017-10-05 11:53:08.000000000 +0200
@@ -8,37 +8,36 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 //config:config UDHCPC6
-//config:	bool "udhcpc6 (DHCPv6 client, EXPERIMENTAL)"
+//config:	bool "udhcpc6"
 //config:	default n  # not yet ready
 //config:	depends on FEATURE_IPV6
 //config:	help
-//config:	  udhcpc6 is a DHCPv6 client
+//config:	udhcpc6 is a DHCPv6 client
 //config:
 //config:config FEATURE_UDHCPC6_RFC3646
 //config:	bool "Support RFC 3646 (DNS server and search list)"
 //config:	default y
 //config:	depends on UDHCPC6
 //config:	help
-//config:	  List of DNS servers and domain search list can be requested with
-//config:	  "-O dns" and "-O search". If server gives these values,
-//config:	  they will be set in environment variables "dns" and "search".
+//config:	List of DNS servers and domain search list can be requested with
+//config:	"-O dns" and "-O search". If server gives these values,
+//config:	they will be set in environment variables "dns" and "search".
 //config:
 //config:config FEATURE_UDHCPC6_RFC4704
 //config:	bool "Support RFC 4704 (Client FQDN)"
 //config:	default y
 //config:	depends on UDHCPC6
 //config:	help
-//config:	  You can request FQDN to be given by server using "-O fqdn".
+//config:	You can request FQDN to be given by server using "-O fqdn".
 //config:
 //config:config FEATURE_UDHCPC6_RFC4833
 //config:	bool "Support RFC 4833 (Timezones)"
 //config:	default y
 //config:	depends on UDHCPC6
 //config:	help
-//config:	  You can request POSIX timezone with "-O tz" and timezone name
-//config:	  with "-O timezone".
+//config:	You can request POSIX timezone with "-O tz" and timezone name
+//config:	with "-O timezone".
 
 //applet:IF_UDHCPC6(APPLET(udhcpc6, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -703,13 +702,15 @@ static NOINLINE int send_d6_renew(uint32
 	opt_ptr = add_d6_client_options(opt_ptr);
 
 	bb_error_msg("sending %s", "renew");
-	if (server_ipv6)
+	if (server_ipv6) {
 		return d6_send_kernel_packet(
 			&packet, (opt_ptr - (uint8_t*) &packet),
 			our_cur_ipv6, CLIENT_PORT6,
 			server_ipv6, SERVER_PORT6,
 			client_config.ifindex
+			/* TODO? send_flags: MSG_DONTROUTE (see IPv4 code for reason why) */
 		);
+	}
 	return d6_mcast_from_client_config_ifindex(&packet, opt_ptr);
 }
 
@@ -877,14 +878,19 @@ static int d6_raw_socket(int ifindex)
 	};
 #endif
 
-	log1("opening raw socket on ifindex %d", ifindex); //log2?
+	log2("opening raw socket on ifindex %d", ifindex);
 
 	fd = xsocket(PF_PACKET, SOCK_DGRAM, htons(ETH_P_IPV6));
-	log1("got raw socket fd %d", fd); //log2?
+	log2("got raw socket fd %d", fd);
 
+	memset(&sock, 0, sizeof(sock)); /* let's be deterministic */
 	sock.sll_family = AF_PACKET;
 	sock.sll_protocol = htons(ETH_P_IPV6);
 	sock.sll_ifindex = ifindex;
+	/*sock.sll_hatype = ARPHRD_???;*/
+	/*sock.sll_pkttype = PACKET_???;*/
+	/*sock.sll_halen = ???;*/
+	/*sock.sll_addr[8] = ???;*/
 	xbind(fd, (struct sockaddr *) &sock, sizeof(sock));
 
 #if 0
@@ -1101,14 +1107,15 @@ int udhcpc6_main(int argc UNUSED_PARAM,
 	client_config.script = CONFIG_UDHCPC_DEFAULT_SCRIPT;
 
 	/* Parse command line */
-	/* O,x: list; -T,-t,-A take numeric param */
-	IF_UDHCP_VERBOSE(opt_complementary = "vv";)
-	IF_LONG_OPTS(applet_long_options = udhcpc6_longopts;)
-	opt = getopt32(argv, "i:np:qRr:s:T:+t:+SA:+O:*ox:*f"
+	opt = getopt32long(argv, "^"
+		/* O,x: list; -T,-t,-A take numeric param */
+		"i:np:qRr:s:T:+t:+SA:+O:*ox:*f"
 		USE_FOR_MMU("b")
 		///IF_FEATURE_UDHCPC_ARPING("a")
 		IF_FEATURE_UDHCP_PORT("P:")
 		"v"
+		"\0" IF_UDHCP_VERBOSE("vv") /* -v is a counter */
+		, udhcpc6_longopts
 		, &client_config.interface, &client_config.pidfile, &str_r /* i,p */
 		, &client_config.script /* s */
 		, &discover_timeout, &discover_retries, &tryagain_timeout /* T,t,A */
@@ -1238,7 +1245,7 @@ int udhcpc6_main(int argc UNUSED_PARAM,
 		retval = 0;
 		/* If we already timed out, fall through with retval = 0, else... */
 		if (tv > 0) {
-			log1("waiting on select %u seconds", tv);
+			log1("waiting %u seconds", tv);
 			timestamp_before_wait = (unsigned)monotonic_sec();
 			retval = poll(pfds, 2, tv < INT_MAX/1000 ? tv * 1000 : INT_MAX);
 			if (retval < 0) {
@@ -1248,7 +1255,7 @@ int udhcpc6_main(int argc UNUSED_PARAM,
 					continue;
 				}
 				/* Else: an error occured, panic! */
-				bb_perror_msg_and_die("select");
+				bb_perror_msg_and_die("poll");
 			}
 		}
 
@@ -1425,7 +1432,7 @@ int udhcpc6_main(int argc UNUSED_PARAM,
 				len = d6_recv_raw_packet(&srv6_buf, &packet, sockfd);
 			if (len == -1) {
 				/* Error is severe, reopen socket */
-				bb_error_msg("read error: %s, reopening socket", strerror(errno));
+				bb_error_msg("read error: "STRERROR_FMT", reopening socket" STRERROR_ERRNO);
 				sleep(discover_timeout); /* 3 seconds by default */
 				change_listen_mode(listen_mode); /* just close and reopen */
 			}
diff -urpN busybox-1.27.2/networking/udhcp/d6_packet.c busybox-1.28.0/networking/udhcp/d6_packet.c
--- busybox-1.27.2/networking/udhcp/d6_packet.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/udhcp/d6_packet.c	2017-10-05 11:53:08.000000000 +0200
@@ -18,7 +18,7 @@ void FAST_FUNC d6_dump_packet(struct d6_
 		return;
 
 	bb_error_msg(
-		"xid %x"
+		" xid %x"
 		, packet->d6_xid32
 	);
 	//*bin2hex(buf, (void *) packet->chaddr, sizeof(packet->chaddr)) = '\0';
@@ -75,6 +75,8 @@ int FAST_FUNC d6_send_raw_packet(
 	dest_sll.sll_family = AF_PACKET;
 	dest_sll.sll_protocol = htons(ETH_P_IPV6);
 	dest_sll.sll_ifindex = ifindex;
+	/*dest_sll.sll_hatype = ARPHRD_???;*/
+	/*dest_sll.sll_pkttype = PACKET_???;*/
 	dest_sll.sll_halen = 6;
 	memcpy(dest_sll.sll_addr, dest_arp, 6);
 
diff -urpN busybox-1.27.2/networking/udhcp/d6_socket.c busybox-1.28.0/networking/udhcp/d6_socket.c
--- busybox-1.27.2/networking/udhcp/d6_socket.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/udhcp/d6_socket.c	2017-07-24 18:57:09.000000000 +0200
@@ -28,8 +28,8 @@ int FAST_FUNC d6_read_interface(const ch
 		if (ifa->ifa_addr->sa_family == AF_PACKET) {
 			struct sockaddr_ll *sll = (struct sockaddr_ll*)(ifa->ifa_addr);
 			memcpy(mac, sll->sll_addr, 6);
-			log1("MAC %02x:%02x:%02x:%02x:%02x:%02x", mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
-			log1("adapter index %d", sll->sll_ifindex);
+			log2("MAC %02x:%02x:%02x:%02x:%02x:%02x", mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
+			log2("ifindex %d", sll->sll_ifindex);
 			*ifindex = sll->sll_ifindex;
 			retval &= (0xf - (1<<0));
 		}
diff -urpN busybox-1.27.2/networking/udhcp/dhcpc.c busybox-1.28.0/networking/udhcp/dhcpc.c
--- busybox-1.27.2/networking/udhcp/dhcpc.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/udhcp/dhcpc.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,7 +1,6 @@
 /* vi: set sw=4 ts=4: */
 /*
  * udhcp client
- *
  * Russ Dill <Russ.Dill@asu.edu> July 2001
  *
  * This program is free software; you can redistribute it and/or modify
@@ -694,10 +693,16 @@ static int raw_bcast_from_client_config_
 
 static int bcast_or_ucast(struct dhcp_packet *packet, uint32_t ciaddr, uint32_t server)
 {
-	if (server)
+	if (server) {
+		/* Without MSG_DONTROUTE, the packet was seen routed over
+		 * _other interface_ if server ID is bogus (example: 1.1.1.1).
+		 */
 		return udhcp_send_kernel_packet(packet,
 			ciaddr, CLIENT_PORT,
-			server, SERVER_PORT);
+			server, SERVER_PORT,
+			/*send_flags: "to hosts only on directly connected networks" */ MSG_DONTROUTE
+		);
+	}
 	return raw_bcast_from_client_config_ifindex(packet, ciaddr);
 }
 
@@ -735,7 +740,7 @@ static NOINLINE int send_discover(uint32
 static NOINLINE int send_select(uint32_t xid, uint32_t server, uint32_t requested)
 {
 	struct dhcp_packet packet;
-	struct in_addr addr;
+	struct in_addr temp_addr;
 
 /*
  * RFC 2131 4.3.2 DHCPREQUEST message
@@ -766,8 +771,8 @@ static NOINLINE int send_select(uint32_t
 	 */
 	add_client_options(&packet);
 
-	addr.s_addr = requested;
-	bb_error_msg("sending select for %s", inet_ntoa(addr));
+	temp_addr.s_addr = requested;
+	bb_error_msg("sending select for %s", inet_ntoa(temp_addr));
 	return raw_bcast_from_client_config_ifindex(&packet, INADDR_ANY);
 }
 
@@ -776,6 +781,7 @@ static NOINLINE int send_select(uint32_t
 static NOINLINE int send_renew(uint32_t xid, uint32_t server, uint32_t ciaddr)
 {
 	struct dhcp_packet packet;
+	struct in_addr temp_addr;
 
 /*
  * RFC 2131 4.3.2 DHCPREQUEST message
@@ -806,7 +812,8 @@ static NOINLINE int send_renew(uint32_t
 	 */
 	add_client_options(&packet);
 
-	bb_error_msg("sending %s", "renew");
+	temp_addr.s_addr = server;
+	bb_error_msg("sending renew to %s", inet_ntoa(temp_addr));
 	return bcast_or_ucast(&packet, ciaddr, server);
 }
 
@@ -1001,18 +1008,23 @@ static int udhcp_raw_socket(int ifindex)
 	int fd;
 	struct sockaddr_ll sock;
 
-	log1("opening raw socket on ifindex %d", ifindex); //log2?
+	log2("opening raw socket on ifindex %d", ifindex);
 
 	fd = xsocket(PF_PACKET, SOCK_DGRAM, htons(ETH_P_IP));
 	/* ^^^^^
 	 * SOCK_DGRAM: remove link-layer headers on input (SOCK_RAW keeps them)
 	 * ETH_P_IP: want to receive only packets with IPv4 eth type
 	 */
-	log1("got raw socket fd"); //log2?
+	log2("got raw socket fd");
 
+	memset(&sock, 0, sizeof(sock)); /* let's be deterministic */
 	sock.sll_family = AF_PACKET;
 	sock.sll_protocol = htons(ETH_P_IP);
 	sock.sll_ifindex = ifindex;
+	/*sock.sll_hatype = ARPHRD_???;*/
+	/*sock.sll_pkttype = PACKET_???;*/
+	/*sock.sll_halen = ???;*/
+	/*sock.sll_addr[8] = ???;*/
 	xbind(fd, (struct sockaddr *) &sock, sizeof(sock));
 
 #if 0 /* Several users reported breakage when BPF filter is used */
@@ -1183,44 +1195,6 @@ static void client_background(void)
 //usage:       "	[-i IFACE]"IF_FEATURE_UDHCP_PORT(" [-P PORT]")" [-s PROG] [-p PIDFILE]\n"
 //usage:       "	[-oC] [-r IP] [-V VENDOR] [-F NAME] [-x OPT:VAL]... [-O OPT]..."
 //usage:#define udhcpc_full_usage "\n"
-//usage:	IF_LONG_OPTS(
-//usage:     "\n	-i,--interface IFACE	Interface to use (default eth0)"
-//usage:	IF_FEATURE_UDHCP_PORT(
-//usage:     "\n	-P,--client-port PORT	Use PORT (default 68)"
-//usage:	)
-//usage:     "\n	-s,--script PROG	Run PROG at DHCP events (default "CONFIG_UDHCPC_DEFAULT_SCRIPT")"
-//usage:     "\n	-p,--pidfile FILE	Create pidfile"
-//usage:     "\n	-B,--broadcast		Request broadcast replies"
-//usage:     "\n	-t,--retries N		Send up to N discover packets (default 3)"
-//usage:     "\n	-T,--timeout SEC	Pause between packets (default 3)"
-//usage:     "\n	-A,--tryagain SEC	Wait if lease is not obtained (default 20)"
-//usage:     "\n	-n,--now		Exit if lease is not obtained"
-//usage:     "\n	-q,--quit		Exit after obtaining lease"
-//usage:     "\n	-R,--release		Release IP on exit"
-//usage:     "\n	-f,--foreground		Run in foreground"
-//usage:	USE_FOR_MMU(
-//usage:     "\n	-b,--background		Background if lease is not obtained"
-//usage:	)
-//usage:     "\n	-S,--syslog		Log to syslog too"
-//usage:	IF_FEATURE_UDHCPC_ARPING(
-//usage:     "\n	-a[MSEC],--arping[=MSEC] Validate offered address with ARP ping"
-//usage:	)
-//usage:     "\n	-r,--request IP		Request this IP address"
-//usage:     "\n	-o,--no-default-options	Don't request any options (unless -O is given)"
-//usage:     "\n	-O,--request-option OPT	Request option OPT from server (cumulative)"
-//usage:     "\n	-x OPT:VAL		Include option OPT in sent packets (cumulative)"
-//usage:     "\n				Examples of string, numeric, and hex byte opts:"
-//usage:     "\n				-x hostname:bbox - option 12"
-//usage:     "\n				-x lease:3600 - option 51 (lease time)"
-//usage:     "\n				-x 0x3d:0100BEEFC0FFEE - option 61 (client id)"
-//usage:     "\n	-F,--fqdn NAME		Ask server to update DNS mapping for NAME"
-//usage:     "\n	-V,--vendorclass VENDOR	Vendor identifier (default 'udhcp VERSION')"
-//usage:     "\n	-C,--clientid-none	Don't send MAC as client identifier"
-//usage:	IF_UDHCP_VERBOSE(
-//usage:     "\n	-v			Verbose"
-//usage:	)
-//usage:	)
-//usage:	IF_NOT_LONG_OPTS(
 //usage:     "\n	-i IFACE	Interface to use (default eth0)"
 //usage:	IF_FEATURE_UDHCP_PORT(
 //usage:     "\n	-P PORT		Use PORT (default 68)"
@@ -1256,7 +1230,6 @@ static void client_background(void)
 //usage:	IF_UDHCP_VERBOSE(
 //usage:     "\n	-v		Verbose"
 //usage:	)
-//usage:	)
 //usage:     "\nSignals:"
 //usage:     "\n	USR1	Renew lease"
 //usage:     "\n	USR2	Release lease"
@@ -1295,16 +1268,18 @@ int udhcpc_main(int argc UNUSED_PARAM, c
 	str_V = "udhcp "BB_VER;
 
 	/* Parse command line */
-	/* O,x: list; -T,-t,-A take numeric param */
-	IF_UDHCP_VERBOSE(opt_complementary = "vv";)
-	IF_LONG_OPTS(applet_long_options = udhcpc_longopts;)
-	opt = getopt32(argv, "CV:H:h:F:i:np:qRr:s:T:+t:+SA:+O:*ox:*fB"
+	opt = getopt32long(argv, "^"
+		/* O,x: list; -T,-t,-A take numeric param */
+		"CV:H:h:F:i:np:qRr:s:T:+t:+SA:+O:*ox:*fB"
 		USE_FOR_MMU("b")
 		IF_FEATURE_UDHCPC_ARPING("a::")
 		IF_FEATURE_UDHCP_PORT("P:")
 		"v"
+		"\0" IF_UDHCP_VERBOSE("vv") /* -v is a counter */
+		, udhcpc_longopts
 		, &str_V, &str_h, &str_h, &str_F
-		, &client_config.interface, &client_config.pidfile, &str_r /* i,p */
+		, &client_config.interface, &client_config.pidfile /* i,p */
+		, &str_r /* r */
 		, &client_config.script /* s */
 		, &discover_timeout, &discover_retries, &tryagain_timeout /* T,t,A */
 		, &list_O
@@ -1455,7 +1430,7 @@ int udhcpc_main(int argc UNUSED_PARAM, c
 		retval = 0;
 		/* If we already timed out, fall through with retval = 0, else... */
 		if (tv > 0) {
-			log1("waiting on select %u seconds", tv);
+			log1("waiting %u seconds", tv);
 			timestamp_before_wait = (unsigned)monotonic_sec();
 			retval = poll(pfds, 2, tv < INT_MAX/1000 ? tv * 1000 : INT_MAX);
 			if (retval < 0) {
@@ -1465,7 +1440,7 @@ int udhcpc_main(int argc UNUSED_PARAM, c
 					continue;
 				}
 				/* Else: an error occurred, panic! */
-				bb_perror_msg_and_die("select");
+				bb_perror_msg_and_die("poll");
 			}
 		}
 
@@ -1556,11 +1531,24 @@ int udhcpc_main(int argc UNUSED_PARAM, c
 			 * Anyway, it does recover by eventually failing through
 			 * into INIT_SELECTING state.
 			 */
-					send_renew(xid, server_addr, requested_ip);
-					timeout >>= 1;
-					continue;
+					if (send_renew(xid, server_addr, requested_ip) >= 0) {
+						timeout >>= 1;
+//TODO: the timeout to receive an answer for our renew should not be selected
+//with "timeout = lease_seconds / 2; ...; timeout = timeout / 2": it is often huge.
+//Waiting e.g. 4*3600 seconds for a reply does not make sense
+//(if reply isn't coming, we keep an open socket for hours),
+//it should be something like 10 seconds.
+//Also, it's probably best to try sending renew in kernel mode a few (3-5) times
+//and fall back to raw mode if it does not work.
+						continue;
+					}
+					/* else: error sending.
+					 * example: ENETUNREACH seen with server
+					 * which gave us bogus server ID 1.1.1.1
+					 * which wasn't reachable (and probably did not exist).
+					 */
 				}
-				/* Timed out, enter rebinding state */
+				/* Timed out or error, enter rebinding state */
 				log1("entering rebinding state");
 				state = REBINDING;
 				/* fall right through */
@@ -1642,7 +1630,7 @@ int udhcpc_main(int argc UNUSED_PARAM, c
 				len = udhcp_recv_raw_packet(&packet, sockfd);
 			if (len == -1) {
 				/* Error is severe, reopen socket */
-				bb_error_msg("read error: %s, reopening socket", strerror(errno));
+				bb_error_msg("read error: "STRERROR_FMT", reopening socket" STRERROR_ERRNO);
 				sleep(discover_timeout); /* 3 seconds by default */
 				change_listen_mode(listen_mode); /* just close and reopen */
 			}
diff -urpN busybox-1.27.2/networking/udhcp/dhcpd.c busybox-1.28.0/networking/udhcp/dhcpd.c
--- busybox-1.27.2/networking/udhcp/dhcpd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/udhcp/dhcpd.c	2017-10-05 11:53:08.000000000 +0200
@@ -588,7 +588,9 @@ static void send_packet_to_relay(struct
 
 	udhcp_send_kernel_packet(dhcp_pkt,
 			server_config.server_nip, SERVER_PORT,
-			dhcp_pkt->gateway_nip, SERVER_PORT);
+			dhcp_pkt->gateway_nip, SERVER_PORT,
+			/*send_flags:*/ 0
+	);
 }
 
 static void send_packet(struct dhcp_packet *dhcp_pkt, int force_broadcast)
@@ -814,11 +816,12 @@ int udhcpd_main(int argc UNUSED_PARAM, c
 	IF_FEATURE_UDHCP_PORT(SERVER_PORT = 67;)
 	IF_FEATURE_UDHCP_PORT(CLIENT_PORT = 68;)
 
+	opt = getopt32(argv, "^"
+		"fSI:va:"IF_FEATURE_UDHCP_PORT("P:")
+		"\0"
 #if defined CONFIG_UDHCP_DEBUG && CONFIG_UDHCP_DEBUG >= 1
-	opt_complementary = "vv";
+		"vv"
 #endif
-	opt = getopt32(argv, "fSI:va:"
-		IF_FEATURE_UDHCP_PORT("P:")
 		, &str_I
 		, &str_a
 		IF_FEATURE_UDHCP_PORT(, &str_P)
@@ -945,7 +948,7 @@ int udhcpd_main(int argc UNUSED_PARAM, c
 		if (bytes < 0) {
 			/* bytes can also be -2 ("bad packet data") */
 			if (bytes == -1 && errno != EINTR) {
-				log1("read error: %s, reopening socket", strerror(errno));
+				log1("read error: "STRERROR_FMT", reopening socket" STRERROR_ERRNO);
 				close(server_socket);
 				server_socket = -1;
 			}
diff -urpN busybox-1.27.2/networking/udhcp/dhcprelay.c busybox-1.28.0/networking/udhcp/dhcprelay.c
--- busybox-1.27.2/networking/udhcp/dhcprelay.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/udhcp/dhcprelay.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,5 +1,6 @@
 /* vi: set sw=4 ts=4: */
-/* Port to Busybox Copyright (C) 2006 Jesse Dutton <jessedutton@gmail.com>
+/*
+ * Port to Busybox Copyright (C) 2006 Jesse Dutton <jessedutton@gmail.com>
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  *
diff -urpN busybox-1.27.2/networking/udhcp/domain_codec.c busybox-1.28.0/networking/udhcp/domain_codec.c
--- busybox-1.27.2/networking/udhcp/domain_codec.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/udhcp/domain_codec.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,6 +1,6 @@
 /* vi: set sw=4 ts=4: */
-
-/* RFC1035 domain compression routines (C) 2007 Gabriel Somlo <somlo at cmu.edu>
+/*
+ * RFC1035 domain compression routines (C) 2007 Gabriel Somlo <somlo at cmu.edu>
  *
  * Loosely based on the isc-dhcpd implementation by dhankins@isc.org
  *
diff -urpN busybox-1.27.2/networking/udhcp/dumpleases.c busybox-1.28.0/networking/udhcp/dumpleases.c
--- busybox-1.27.2/networking/udhcp/dumpleases.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/udhcp/dumpleases.c	2017-08-17 13:50:45.000000000 +0200
@@ -2,7 +2,7 @@
 /*
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-//applet:IF_DUMPLEASES(APPLET(dumpleases, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_DUMPLEASES(APPLET_NOEXEC(dumpleases, dumpleases, BB_DIR_USR_BIN, BB_SUID_DROP, dumpleases))
 
 //kbuild:lib-$(CONFIG_DUMPLEASES) += dumpleases.o
 
@@ -51,12 +51,15 @@ int dumpleases_main(int argc UNUSED_PARA
 		"decimal\0"   No_argument       "d"
 		;
 
-	applet_long_options = dumpleases_longopts;
 #endif
 	init_unicode();
 
-	opt_complementary = "=0:a--r:r--a";
-	opt = getopt32(argv, "arf:d", &file);
+	opt = getopt32long(argv, "^"
+			"arf:d"
+			"\0" "=0:a--r:r--a",
+			dumpleases_longopts,
+			&file
+	);
 
 	fd = xopen(file, O_RDONLY);
 
diff -urpN busybox-1.27.2/networking/udhcp/packet.c busybox-1.28.0/networking/udhcp/packet.c
--- busybox-1.27.2/networking/udhcp/packet.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/udhcp/packet.c	2017-10-05 11:53:08.000000000 +0200
@@ -41,7 +41,7 @@ void FAST_FUNC udhcp_dump_packet(struct
 		return;
 
 	bb_error_msg(
-		//"op %x"
+		//" op %x"
 		//" htype %x"
 		" hlen %x"
 		//" hops %x"
@@ -52,7 +52,6 @@ void FAST_FUNC udhcp_dump_packet(struct
 		" yiaddr %x"
 		" siaddr %x"
 		" giaddr %x"
-		//" chaddr %s"
 		//" sname %s"
 		//" file %s"
 		//" cookie %x"
@@ -68,14 +67,13 @@ void FAST_FUNC udhcp_dump_packet(struct
 		, packet->yiaddr
 		, packet->siaddr_nip
 		, packet->gateway_nip
-		//, packet->chaddr[16]
 		//, packet->sname[64]
 		//, packet->file[128]
 		//, packet->cookie
 		//, packet->options[]
 	);
 	*bin2hex(buf, (void *) packet->chaddr, sizeof(packet->chaddr)) = '\0';
-	bb_error_msg("chaddr %s", buf);
+	bb_error_msg(" chaddr %s", buf);
 }
 #endif
 
@@ -129,6 +127,8 @@ int FAST_FUNC udhcp_send_raw_packet(stru
 	dest_sll.sll_family = AF_PACKET;
 	dest_sll.sll_protocol = htons(ETH_P_IP);
 	dest_sll.sll_ifindex = ifindex;
+	/*dest_sll.sll_hatype = ARPHRD_???;*/
+	/*dest_sll.sll_pkttype = PACKET_???;*/
 	dest_sll.sll_halen = 6;
 	memcpy(dest_sll.sll_addr, dest_arp, 6);
 
@@ -189,7 +189,8 @@ int FAST_FUNC udhcp_send_raw_packet(stru
 /* Let the kernel do all the work for packet generation */
 int FAST_FUNC udhcp_send_kernel_packet(struct dhcp_packet *dhcp_pkt,
 		uint32_t source_nip, int source_port,
-		uint32_t dest_nip, int dest_port)
+		uint32_t dest_nip, int dest_port,
+		int send_flags)
 {
 	struct sockaddr_in sa;
 	unsigned padding;
@@ -226,8 +227,8 @@ int FAST_FUNC udhcp_send_kernel_packet(s
 	padding = DHCP_OPTIONS_BUFSIZE - 1 - udhcp_end_option(dhcp_pkt->options);
 	if (padding > DHCP_SIZE - 300)
 		padding = DHCP_SIZE - 300;
-	result = safe_write(fd, dhcp_pkt, DHCP_SIZE - padding);
-	msg = "write";
+	result = send(fd, dhcp_pkt, DHCP_SIZE - padding, send_flags);
+	msg = "send";
  ret_close:
 	close(fd);
 	if (result < 0) {
diff -urpN busybox-1.27.2/networking/udhcp/socket.c busybox-1.28.0/networking/udhcp/socket.c
--- busybox-1.27.2/networking/udhcp/socket.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/udhcp/socket.c	2017-07-24 18:57:09.000000000 +0200
@@ -56,7 +56,7 @@ int FAST_FUNC udhcp_read_interface(const
 			close(fd);
 			return -1;
 		}
-		log1("adapter index %d", ifr->ifr_ifindex);
+		log2("ifindex %d", ifr->ifr_ifindex);
 		*ifindex = ifr->ifr_ifindex;
 	}
 
@@ -66,7 +66,7 @@ int FAST_FUNC udhcp_read_interface(const
 			return -1;
 		}
 		memcpy(mac, ifr->ifr_hwaddr.sa_data, 6);
-		log1("MAC %02x:%02x:%02x:%02x:%02x:%02x",
+		log2("MAC %02x:%02x:%02x:%02x:%02x:%02x",
 			mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
 	}
 
diff -urpN busybox-1.27.2/networking/vconfig.c busybox-1.28.0/networking/vconfig.c
--- busybox-1.27.2/networking/vconfig.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/vconfig.c	2017-10-05 11:53:08.000000000 +0200
@@ -6,17 +6,14 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
-/* BB_AUDIT SUSv3 N/A */
-
 //config:config VCONFIG
-//config:	bool "vconfig"
+//config:	bool "vconfig (2.5 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Creates, removes, and configures VLAN interfaces
+//config:	Creates, removes, and configures VLAN interfaces
 
-//applet:IF_VCONFIG(APPLET(vconfig, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_VCONFIG(APPLET_NOEXEC(vconfig, vconfig, BB_DIR_SBIN, BB_SUID_DROP, vconfig))
 
 //kbuild:lib-$(CONFIG_VCONFIG) += vconfig.o
 
@@ -34,6 +31,8 @@
 #include "libbb.h"
 #include <net/if.h>
 
+/* BB_AUDIT SUSv3 N/A */
+
 /* Stuff from linux/if_vlan.h, kernel version 2.4.23 */
 enum vlan_ioctl_cmds {
 	ADD_VLAN_CMD,
diff -urpN busybox-1.27.2/networking/wget.c busybox-1.28.0/networking/wget.c
--- busybox-1.27.2/networking/wget.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/wget.c	2017-10-05 11:53:08.000000000 +0200
@@ -8,13 +8,12 @@
  * Copyright (C) 2010 Bradley M. Kuhn <bkuhn@ebb.org>
  * Kuhn's copyrights are licensed GPLv2-or-later.  File as a whole remains GPLv2.
  */
-
 //config:config WGET
-//config:	bool "wget"
+//config:	bool "wget (35 kb)"
 //config:	default y
 //config:	help
-//config:	  wget is a utility for non-interactive download of files from HTTP
-//config:	  and FTP servers.
+//config:	wget is a utility for non-interactive download of files from HTTP
+//config:	and FTP servers.
 //config:
 //config:config FEATURE_WGET_LONG_OPTIONS
 //config:	bool "Enable long options"
@@ -31,21 +30,21 @@
 //config:	default y
 //config:	depends on WGET
 //config:	help
-//config:	  Support authenticated HTTP transfers.
+//config:	Support authenticated HTTP transfers.
 //config:
 //config:config FEATURE_WGET_TIMEOUT
 //config:	bool "Enable timeout option -T SEC"
 //config:	default y
 //config:	depends on WGET
 //config:	help
-//config:	  Supports network read and connect timeouts for wget,
-//config:	  so that wget will give up and timeout, through the -T
-//config:	  command line option.
+//config:	Supports network read and connect timeouts for wget,
+//config:	so that wget will give up and timeout, through the -T
+//config:	command line option.
 //config:
-//config:	  Currently only connect and network data read timeout are
-//config:	  supported (i.e., timeout is not applied to the DNS query). When
-//config:	  FEATURE_WGET_LONG_OPTIONS is also enabled, the --timeout option
-//config:	  will work in addition to -T.
+//config:	Currently only connect and network data read timeout are
+//config:	supported (i.e., timeout is not applied to the DNS query). When
+//config:	FEATURE_WGET_LONG_OPTIONS is also enabled, the --timeout option
+//config:	will work in addition to -T.
 //config:
 //config:config FEATURE_WGET_HTTPS
 //config:	bool "Support HTTPS using internal TLS code"
@@ -53,68 +52,68 @@
 //config:	depends on WGET
 //config:	select TLS
 //config:	help
-//config:	  wget will use internal TLS code to connect to https:// URLs.
-//config:	  Note:
-//config:	  On NOMMU machines, ssl_helper applet should be available
-//config:	  in the $PATH for this to work. Make sure to select that applet.
+//config:	wget will use internal TLS code to connect to https:// URLs.
+//config:	Note:
+//config:	On NOMMU machines, ssl_helper applet should be available
+//config:	in the $PATH for this to work. Make sure to select that applet.
 //config:
-//config:	  Note: currently, TLS code only makes TLS I/O work, it
-//config:	  does *not* check that the peer is who it claims to be, etc.
-//config:	  IOW: it uses peer-supplied public keys to establish encryption
-//config:	  and signing keys, then encrypts and signs outgoing data and
-//config:	  decrypts incoming data.
-//config:	  It does not check signature hashes on the incoming data:
-//config:	  this means that attackers manipulating TCP packets can
-//config:	  send altered data and we unknowingly receive garbage.
-//config:	  (This check might be relatively easy to add).
-//config:	  It does not check public key's certificate:
-//config:	  this means that the peer may be an attacker impersonating
-//config:	  the server we think we are talking to.
+//config:	Note: currently, TLS code only makes TLS I/O work, it
+//config:	does *not* check that the peer is who it claims to be, etc.
+//config:	IOW: it uses peer-supplied public keys to establish encryption
+//config:	and signing keys, then encrypts and signs outgoing data and
+//config:	decrypts incoming data.
+//config:	It does not check signature hashes on the incoming data:
+//config:	this means that attackers manipulating TCP packets can
+//config:	send altered data and we unknowingly receive garbage.
+//config:	(This check might be relatively easy to add).
+//config:	It does not check public key's certificate:
+//config:	this means that the peer may be an attacker impersonating
+//config:	the server we think we are talking to.
 //config:
-//config:	  If you think this is unacceptable, consider this. As more and more
-//config:	  servers switch to HTTPS-only operation, without such "crippled"
-//config:	  TLS code it is *impossible* to simply download a kernel source
-//config:	  from kernel.org. Which can in real world translate into
-//config:	  "my small automatic tooling to build cross-compilers from sources
-//config:	  no longer works, I need to additionally keep a local copy
-//config:	  of ~4 megabyte source tarball of a SSL library and ~2 megabyte
-//config:	  source of wget, need to compile and built both before I can
-//config:	  download anything. All this despite the fact that the build
-//config:	  is done in a QEMU sandbox on a machine with absolutely nothing
-//config:	  worth stealing, so I don't care if someone would go to a lot
-//config:	  of trouble to intercept my HTTPS download to send me an altered
-//config:	  kernel tarball".
+//config:	If you think this is unacceptable, consider this. As more and more
+//config:	servers switch to HTTPS-only operation, without such "crippled"
+//config:	TLS code it is *impossible* to simply download a kernel source
+//config:	from kernel.org. Which can in real world translate into
+//config:	"my small automatic tooling to build cross-compilers from sources
+//config:	no longer works, I need to additionally keep a local copy
+//config:	of ~4 megabyte source tarball of a SSL library and ~2 megabyte
+//config:	source of wget, need to compile and built both before I can
+//config:	download anything. All this despite the fact that the build
+//config:	is done in a QEMU sandbox on a machine with absolutely nothing
+//config:	worth stealing, so I don't care if someone would go to a lot
+//config:	of trouble to intercept my HTTPS download to send me an altered
+//config:	kernel tarball".
 //config:
-//config:	  If you still think this is unacceptable, send patches.
+//config:	If you still think this is unacceptable, send patches.
 //config:
-//config:	  If you still think this is unacceptable, do not want to send
-//config:	  patches, but do want to waste bandwidth expaining how wrong
-//config:	  it is, you will be ignored.
+//config:	If you still think this is unacceptable, do not want to send
+//config:	patches, but do want to waste bandwidth expaining how wrong
+//config:	it is, you will be ignored.
 //config:
 //config:config FEATURE_WGET_OPENSSL
 //config:	bool "Try to connect to HTTPS using openssl"
 //config:	default y
 //config:	depends on WGET
 //config:	help
-//config:	  Try to use openssl to handle HTTPS.
+//config:	Try to use openssl to handle HTTPS.
 //config:
-//config:	  OpenSSL has a simple SSL client for debug purposes.
-//config:	  If you select this option, wget will effectively run:
-//config:	  "openssl s_client -quiet -connect hostname:443
-//config:	  -servername hostname 2>/dev/null" and pipe its data
-//config:	  through it. -servername is not used if hostname is numeric.
-//config:	  Note inconvenient API: host resolution is done twice,
-//config:	  and there is no guarantee openssl's idea of IPv6 address
-//config:	  format is the same as ours.
-//config:	  Another problem is that s_client prints debug information
-//config:	  to stderr, and it needs to be suppressed. This means
-//config:	  all error messages get suppressed too.
-//config:	  openssl is also a big binary, often dynamically linked
-//config:	  against ~15 libraries.
+//config:	OpenSSL has a simple SSL client for debug purposes.
+//config:	If you select this option, wget will effectively run:
+//config:	"openssl s_client -quiet -connect hostname:443
+//config:	-servername hostname 2>/dev/null" and pipe its data
+//config:	through it. -servername is not used if hostname is numeric.
+//config:	Note inconvenient API: host resolution is done twice,
+//config:	and there is no guarantee openssl's idea of IPv6 address
+//config:	format is the same as ours.
+//config:	Another problem is that s_client prints debug information
+//config:	to stderr, and it needs to be suppressed. This means
+//config:	all error messages get suppressed too.
+//config:	openssl is also a big binary, often dynamically linked
+//config:	against ~15 libraries.
 //config:
-//config:	  If openssl can't be executed, internal TLS code will be used
-//config:	  (if you enabled it); if openssl can be executed but fails later,
-//config:	  wget can't detect this, and download will fail.
+//config:	If openssl can't be executed, internal TLS code will be used
+//config:	(if you enabled it); if openssl can be executed but fails later,
+//config:	wget can't detect this, and download will fail.
 
 //applet:IF_WGET(APPLET(wget, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -1365,6 +1364,11 @@ IF_DESKTOP(	"no-clobber\0"       No_argu
 IF_DESKTOP(	"no-host-directories\0" No_argument    "\xf0")
 IF_DESKTOP(	"no-parent\0"        No_argument       "\xf0")
 		;
+# define GETOPT32 getopt32long
+# define LONGOPTS ,wget_longopts
+#else
+# define GETOPT32 getopt32
+# define LONGOPTS
 #endif
 
 #if ENABLE_FEATURE_WGET_LONG_OPTIONS
@@ -1381,11 +1385,9 @@ IF_DESKTOP(	"no-parent\0"        No_argu
 	G.user_agent = "Wget"; /* "User-Agent" header field */
 
 #if ENABLE_FEATURE_WGET_LONG_OPTIONS
-	applet_long_options = wget_longopts;
 #endif
-	opt_complementary = "-1" /* at least one URL */
-		IF_FEATURE_WGET_LONG_OPTIONS(":\xff::"); /* --header is a list */
-	getopt32(argv, "cqSO:P:Y:U:T:+"
+	GETOPT32(argv, "^"
+		"cqSO:P:Y:U:T:+"
 		/*ignored:*/ "t:"
 		/*ignored:*/ "n::"
 		/* wget has exactly four -n<letter> opts, all of which we can ignore:
@@ -1396,6 +1398,10 @@ IF_DESKTOP(	"no-parent\0"        No_argu
 		 * "n::" above says that we accept -n[ARG].
 		 * Specifying "n:" would be a bug: "-n ARG" would eat ARG!
 		 */
+		"\0"
+		"-1" /* at least one URL */
+		IF_FEATURE_WGET_LONG_OPTIONS(":\xff::") /* --header is a list */
+		LONGOPTS
 		, &G.fname_out, &G.dir_prefix,
 		&G.proxy_flag, &G.user_agent,
 		IF_FEATURE_WGET_TIMEOUT(&G.timeout_seconds) IF_NOT_FEATURE_WGET_TIMEOUT(NULL),
diff -urpN busybox-1.27.2/networking/whois.c busybox-1.28.0/networking/whois.c
--- busybox-1.27.2/networking/whois.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/whois.c	2017-10-05 11:53:08.000000000 +0200
@@ -9,12 +9,11 @@
  * Add ipv6 support
  * Add proxy support
  */
-
 //config:config WHOIS
-//config:	bool "whois"
+//config:	bool "whois (6.6 kb)"
 //config:	default y
 //config:	help
-//config:	  whois is a client for the whois directory service
+//config:	whois is a client for the whois directory service
 
 //applet:IF_WHOIS(APPLET(whois, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -167,8 +166,7 @@ int whois_main(int argc UNUSED_PARAM, ch
 	int port = 43;
 	const char *host = "whois.iana.org";
 
-	opt_complementary = "-1";
-	getopt32(argv, "ih:p:+", &host, &port);
+	getopt32(argv, "^" "ih:p:+" "\0" "-1", &host, &port);
 	argv += optind;
 
 	do {
diff -urpN busybox-1.27.2/networking/zcip.c busybox-1.28.0/networking/zcip.c
--- busybox-1.27.2/networking/zcip.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/networking/zcip.c	2017-10-20 10:36:58.000000000 +0200
@@ -8,24 +8,23 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 /*
  * ZCIP just manages the 169.254.*.* addresses.  That network is not
  * routed at the IP level, though various proxies or bridges can
  * certainly be used.  Its naming is built over multicast DNS.
  */
 //config:config ZCIP
-//config:	bool "zcip"
+//config:	bool "zcip (7.8 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	  ZCIP provides ZeroConf IPv4 address selection, according to RFC 3927.
-//config:	  It's a daemon that allocates and defends a dynamically assigned
-//config:	  address on the 169.254/16 network, requiring no system administrator.
+//config:	ZCIP provides ZeroConf IPv4 address selection, according to RFC 3927.
+//config:	It's a daemon that allocates and defends a dynamically assigned
+//config:	address on the 169.254/16 network, requiring no system administrator.
 //config:
-//config:	  See http://www.zeroconf.org for further details, and "zcip.script"
-//config:	  in the busybox examples.
+//config:	See http://www.zeroconf.org for further details, and "zcip.script"
+//config:	in the busybox examples.
 
 //applet:IF_ZCIP(APPLET(zcip, BB_DIR_SBIN, BB_SUID_DROP))
 
@@ -183,6 +182,7 @@ static int run(char *argv[3], const char
 	int status;
 	const char *addr = addr; /* for gcc */
 	const char *fmt = "%s %s %s" + 3;
+	char *env_ip = env_ip;
 
 	argv[2] = (char*)param;
 
@@ -190,12 +190,16 @@ static int run(char *argv[3], const char
 
 	if (nip != 0) {
 		addr = nip_to_a(nip);
-		xsetenv("ip", addr);
+		/* Must not use setenv() repeatedly, it leaks memory. Use putenv() */
+		env_ip = xasprintf("ip=%s", addr);
+		putenv(env_ip);
 		fmt -= 3;
 	}
 	bb_error_msg(fmt, argv[2], argv[0], addr);
-
 	status = spawn_and_wait(argv + 1);
+	if (nip != 0)
+		bb_unsetenv_and_free(env_ip);
+
 	if (status < 0) {
 		bb_perror_msg("%s %s %s" + 3, argv[2], argv[0]);
 		return -errno;
@@ -248,8 +252,9 @@ int zcip_main(int argc UNUSED_PARAM, cha
 #define QUIT       (opts & 2)
 	// Parse commandline: prog [options] ifname script
 	// exactly 2 args; -v accumulates and implies -f
-	opt_complementary = "=2:vv:vf";
-	opts = getopt32(argv, "fqr:l:v", &r_opt, &l_opt, &verbose);
+	opts = getopt32(argv, "^" "fqr:l:v" "\0" "=2:vv:vf",
+				&r_opt, &l_opt, &verbose
+	);
 #if !BB_MMU
 	// on NOMMU reexec early (or else we will rerun things twice)
 	if (!FOREGROUND)
diff -urpN busybox-1.27.2/printutils/lpd.c busybox-1.28.0/printutils/lpd.c
--- busybox-1.27.2/printutils/lpd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/printutils/lpd.c	2017-08-08 14:08:06.000000000 +0200
@@ -70,10 +70,10 @@
  * mv -f ./"$DATAFILE" save/
  */
 //config:config LPD
-//config:	bool "lpd"
+//config:	bool "lpd (5.3 kb)"
 //config:	default y
 //config:	help
-//config:	  lpd is a print spooling daemon.
+//config:	lpd is a print spooling daemon.
 
 //applet:IF_LPD(APPLET(lpd, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -198,9 +198,8 @@ int lpd_main(int argc UNUSED_PARAM, char
 				q = p; // next line
 			}
 			// helper should not talk over network.
-			// this call reopens stdio fds to "/dev/null"
-			// (no daemonization is done)
-			bb_daemonize_or_rexec(DAEMON_DEVNULL_STDIO | DAEMON_ONLY_SANITIZE, NULL);
+			// this call reopens stdio fds to "/dev/null".
+			bb_daemon_helper(DAEMON_DEVNULL_STDIO);
 			BB_EXECVP_or_die(argv);
 		}
 
diff -urpN busybox-1.27.2/printutils/lpr.c busybox-1.28.0/printutils/lpr.c
--- busybox-1.27.2/printutils/lpr.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/printutils/lpr.c	2017-07-24 18:57:09.000000000 +0200
@@ -12,16 +12,16 @@
  * See RFC 1179 for protocol description.
  */
 //config:config LPR
-//config:	bool "lpr"
+//config:	bool "lpr (10 kb)"
 //config:	default y
 //config:	help
-//config:	  lpr sends files (or standard input) to a print spooling daemon.
+//config:	lpr sends files (or standard input) to a print spooling daemon.
 //config:
 //config:config LPQ
-//config:	bool "lpq"
+//config:	bool "lpq (10 kb)"
 //config:	default y
 //config:	help
-//config:	  lpq is a print spool queue examination and manipulation program.
+//config:	lpq is a print spool queue examination and manipulation program.
 
 //              APPLET_ODDNAME:name main  location        suid_type     help
 //applet:IF_LPQ(APPLET_ODDNAME(lpq, lpqr, BB_DIR_USR_BIN, BB_SUID_DROP, lpq))
diff -urpN busybox-1.27.2/procps/Config.src busybox-1.28.0/procps/Config.src
--- busybox-1.27.2/procps/Config.src	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/Config.src	2017-07-24 18:57:09.000000000 +0200
@@ -12,7 +12,7 @@ config FEATURE_SHOW_THREADS
 	default y
 	depends on PS || TOP || PSTREE
 	help
-	  Enables the ps -T option, showing of threads in pstree,
-	  and 'h' command in top.
+	Enables the ps -T option, showing of threads in pstree,
+	and 'h' command in top.
 
 endmenu
diff -urpN busybox-1.27.2/procps/free.c busybox-1.28.0/procps/free.c
--- busybox-1.27.2/procps/free.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/free.c	2017-10-20 10:36:58.000000000 +0200
@@ -7,15 +7,15 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config FREE
-//config:	bool "free"
+//config:	bool "free (2.4 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX #sysinfo()
 //config:	help
-//config:	  free displays the total amount of free and used physical and swap
-//config:	  memory in the system, as well as the buffers used by the kernel.
-//config:	  The shared memory column should be ignored; it is obsolete.
+//config:	free displays the total amount of free and used physical and swap
+//config:	memory in the system, as well as the buffers used by the kernel.
+//config:	The shared memory column should be ignored; it is obsolete.
 
-//applet:IF_FREE(APPLET(free, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_FREE(APPLET_NOFORK(free, free, BB_DIR_USR_BIN, BB_SUID_DROP, free))
 
 //kbuild:lib-$(CONFIG_FREE) += free.o
 
@@ -32,7 +32,6 @@
 //usage:       "Total:       386144       257128       129016\n"
 
 #include "libbb.h"
-#include "common_bufsiz.h"
 #ifdef __linux__
 # include <sys/sysinfo.h>
 #endif
@@ -40,22 +39,21 @@
 struct globals {
 	unsigned mem_unit;
 #if ENABLE_DESKTOP
-	unsigned unit_steps;
-# define G_unit_steps G.unit_steps
+	uint8_t unit_steps;
+# define G_unit_steps g->unit_steps
 #else
 # define G_unit_steps 10
 #endif
-} FIX_ALIASING;
-#define G (*(struct globals*)bb_common_bufsiz1)
-#define INIT_G() do { setup_common_bufsiz(); } while (0)
+};
+/* Because of NOFORK, "globals" are not in global data */
 
-
-static unsigned long long scale(unsigned long d)
+static unsigned long long scale(struct globals *g, unsigned long d)
 {
-	return ((unsigned long long)d * G.mem_unit) >> G_unit_steps;
+	return ((unsigned long long)d * g->mem_unit) >> G_unit_steps;
 }
 
-static unsigned long parse_cached_kb(void)
+/* NOINLINE reduces main() stack usage, which makes code smaller (on x86 at least) */
+static NOINLINE unsigned long parse_cached_kb(void)
 {
 	char buf[60]; /* actual lines we expect are ~30 chars or less */
 	FILE *fp;
@@ -66,8 +64,8 @@ static unsigned long parse_cached_kb(voi
 		if (sscanf(buf, "Cached: %lu %*s\n", &cached) == 1)
 			break;
 	}
-	if (ENABLE_FEATURE_CLEAN_UP)
-		fclose(fp);
+	/* Have to close because of NOFORK */
+	fclose(fp);
 
 	return cached;
 }
@@ -75,11 +73,10 @@ static unsigned long parse_cached_kb(voi
 int free_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int free_main(int argc UNUSED_PARAM, char **argv IF_NOT_DESKTOP(UNUSED_PARAM))
 {
+	struct globals G;
 	struct sysinfo info;
 	unsigned long long cached;
 
-	INIT_G();
-
 #if ENABLE_DESKTOP
 	G.unit_steps = 10;
 	if (argv[1] && argv[1][0] == '-') {
@@ -120,12 +117,12 @@ int free_main(int argc UNUSED_PARAM, cha
 #define FIELDS_2 (FIELDS_6 + 4*6)
 
 	printf(FIELDS_6,
-		scale(info.totalram),                //total
-		scale(info.totalram - info.freeram), //used
-		scale(info.freeram),                 //free
-		scale(info.sharedram),               //shared
-		scale(info.bufferram),               //buffers
-		scale(cached)                        //cached
+		scale(&G, info.totalram),                //total
+		scale(&G, info.totalram - info.freeram), //used
+		scale(&G, info.freeram),                 //free
+		scale(&G, info.sharedram),               //shared
+		scale(&G, info.bufferram),               //buffers
+		scale(&G, cached)                        //cached
 	);
 	/* Show alternate, more meaningful busy/free numbers by counting
 	 * buffer cache as free memory. */
@@ -133,15 +130,15 @@ int free_main(int argc UNUSED_PARAM, cha
 	cached += info.freeram;
 	cached += info.bufferram;
 	printf(FIELDS_2,
-		scale(info.totalram - cached), //used
-		scale(cached)                  //free
+		scale(&G, info.totalram - cached), //used
+		scale(&G, cached)                  //free
 	);
 #if BB_MMU
 	printf("Swap:  ");
 	printf(FIELDS_3,
-		scale(info.totalswap),                 //total
-		scale(info.totalswap - info.freeswap), //used
-		scale(info.freeswap)                   //free
+		scale(&G, info.totalswap),                 //total
+		scale(&G, info.totalswap - info.freeswap), //used
+		scale(&G, info.freeswap)                   //free
 	);
 #endif
 	return EXIT_SUCCESS;
diff -urpN busybox-1.27.2/procps/fuser.c busybox-1.28.0/procps/fuser.c
--- busybox-1.27.2/procps/fuser.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/fuser.c	2017-08-17 13:50:45.000000000 +0200
@@ -7,12 +7,12 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config FUSER
-//config:	bool "fuser"
+//config:	bool "fuser (7 kb)"
 //config:	default y
 //config:	help
-//config:	  fuser lists all PIDs (Process IDs) that currently have a given
-//config:	  file open. fuser can also list all PIDs that have a given network
-//config:	  (TCP or UDP) port open.
+//config:	fuser lists all PIDs (Process IDs) that currently have a given
+//config:	file open. fuser can also list all PIDs that have a given network
+//config:	(TCP or UDP) port open.
 
 //applet:IF_FUSER(APPLET(fuser, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -299,8 +299,7 @@ int fuser_main(int argc UNUSED_PARAM, ch
 		break;
 	}
 
-	opt_complementary = "-1"; /* at least one param */
-	getopt32(argv, OPTION_STRING);
+	getopt32(argv, "^" OPTION_STRING "\0" "-1"/*at least one arg*/);
 	argv += optind;
 
 	pp = argv;
diff -urpN busybox-1.27.2/procps/iostat.c busybox-1.28.0/procps/iostat.c
--- busybox-1.27.2/procps/iostat.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/iostat.c	2017-10-05 11:53:08.000000000 +0200
@@ -6,12 +6,11 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 //config:config IOSTAT
-//config:	bool "iostat"
+//config:	bool "iostat (7.4 kb)"
 //config:	default y
 //config:	help
-//config:	  Report CPU and I/O statistics
+//config:	Report CPU and I/O statistics
 
 //applet:IF_IOSTAT(APPLET(iostat, BB_DIR_BIN, BB_SUID_DROP))
 
@@ -418,8 +417,7 @@ int iostat_main(int argc UNUSED_PARAM, c
 
 	/* Parse and process arguments */
 	/* -k and -m are mutually exclusive */
-	opt_complementary = "k--m:m--k";
-	opt = getopt32(argv, "cdtzkm");
+	opt = getopt32(argv, "^" "cdtzkm" "\0" "k--m:m--k");
 	if (!(opt & (OPT_c + OPT_d)))
 		/* Default is -cd */
 		opt |= OPT_c + OPT_d;
diff -urpN busybox-1.27.2/procps/kill.c busybox-1.28.0/procps/kill.c
--- busybox-1.27.2/procps/kill.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/kill.c	2018-01-01 20:40:41.000000000 +0100
@@ -8,34 +8,34 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config KILL
-//config:	bool "kill"
+//config:	bool "kill (2.6 kb)"
 //config:	default y
 //config:	help
-//config:	  The command kill sends the specified signal to the specified
-//config:	  process or process group. If no signal is specified, the TERM
-//config:	  signal is sent.
+//config:	The command kill sends the specified signal to the specified
+//config:	process or process group. If no signal is specified, the TERM
+//config:	signal is sent.
 //config:
 //config:config KILLALL
-//config:	bool "killall"
+//config:	bool "killall (5.6 kb)"
 //config:	default y
 //config:	help
-//config:	  killall sends a signal to all processes running any of the
-//config:	  specified commands. If no signal name is specified, SIGTERM is
-//config:	  sent.
+//config:	killall sends a signal to all processes running any of the
+//config:	specified commands. If no signal name is specified, SIGTERM is
+//config:	sent.
 //config:
 //config:config KILLALL5
-//config:	bool "killall5"
+//config:	bool "killall5 (5.3 kb)"
 //config:	default y
 //config:	help
-//config:	  The SystemV killall command. killall5 sends a signal
-//config:	  to all processes except kernel threads and the processes
-//config:	  in its own session, so it won't kill the shell that is running
-//config:	  the script it was called from.
-
-//applet:IF_KILL(APPLET(kill, BB_DIR_BIN, BB_SUID_DROP))
-//                   APPLET_ODDNAME:name      main  location         suid_type     help
-//applet:IF_KILLALL( APPLET_ODDNAME(killall,  kill, BB_DIR_USR_BIN,  BB_SUID_DROP, killall))
-//applet:IF_KILLALL5(APPLET_ODDNAME(killall5, kill, BB_DIR_USR_SBIN, BB_SUID_DROP, killall5))
+//config:	The SystemV killall command. killall5 sends a signal
+//config:	to all processes except kernel threads and the processes
+//config:	in its own session, so it won't kill the shell that is running
+//config:	the script it was called from.
+
+//applet:IF_KILL(    APPLET_NOFORK(kill,     kill, BB_DIR_BIN,      BB_SUID_DROP, kill))
+//                   APPLET_NOFORK:name      main  location         suid_type     help
+//applet:IF_KILLALL( APPLET_NOFORK(killall,  kill, BB_DIR_USR_BIN,  BB_SUID_DROP, killall))
+//applet:IF_KILLALL5(APPLET_NOFORK(killall5, kill, BB_DIR_USR_SBIN, BB_SUID_DROP, killall5))
 
 //kbuild:lib-$(CONFIG_KILL) += kill.o
 //kbuild:lib-$(CONFIG_KILLALL) += kill.o
@@ -87,7 +87,7 @@
  * + we can't use xfunc here
  * + we can't use applet_name
  * + we can't use bb_show_usage
- * (Above doesn't apply for killall[5] cases)
+ * (doesn't apply for killall[5], still should be careful b/c NOFORK)
  *
  * kill %n gets translated into kill ' -<process group>' by shell (note space!)
  * This is needed to avoid collision with kill -9 ... syntax
@@ -108,7 +108,10 @@ int kill_main(int argc UNUSED_PARAM, cha
 {
 	char *arg;
 	pid_t pid;
-	int signo = SIGTERM, errors = 0, quiet = 0;
+	int signo = SIGTERM, errors = 0;
+#if ENABLE_KILL || ENABLE_KILLALL
+	int quiet = 0;
+#endif
 
 #if KILL_APPLET_CNT == 1
 # define is_killall  ENABLE_KILLALL
@@ -170,7 +173,9 @@ int kill_main(int argc UNUSED_PARAM, cha
 
 	/* The -q quiet option */
 	if (is_killall && arg[1] == 'q' && arg[2] == '\0') {
+#if ENABLE_KILL || ENABLE_KILLALL
 		quiet = 1;
+#endif
 		arg = *++argv;
 		if (!arg)
 			bb_show_usage();
@@ -184,14 +189,19 @@ int kill_main(int argc UNUSED_PARAM, cha
 	if (is_killall5 && arg[0] == 'o')
 		goto do_it_now;
 
+	/* "--" separates options from args. Testcase: "kill -- -123" */
+	if (!is_killall5 && arg[0] == '-' && arg[1] == '\0')
+		goto do_it_sooner;
+
 	if (argv[1] && arg[0] == 's' && arg[1] == '\0') { /* -s SIG? */
 		arg = *++argv;
 	} /* else it must be -SIG */
 	signo = get_signum(arg);
-	if (signo < 0) { /* || signo > MAX_SIGNUM ? */
+	if (signo < 0) {
 		bb_error_msg("bad signal name '%s'", arg);
 		return EXIT_FAILURE;
 	}
+ do_it_sooner:
 	arg = *++argv;
 
  do_it_now:
diff -urpN busybox-1.27.2/procps/lsof.c busybox-1.28.0/procps/lsof.c
--- busybox-1.27.2/procps/lsof.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/lsof.c	2017-10-05 11:53:08.000000000 +0200
@@ -6,13 +6,12 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 //config:config LSOF
-//config:	bool "lsof"
+//config:	bool "lsof (3.6 kb)"
 //config:	default y
 //config:	help
-//config:	  Show open files in the format of:
-//config:	  PID <TAB> /path/to/executable <TAB> /path/to/opened/file
+//config:	Show open files in the format of:
+//config:	PID <TAB> /path/to/executable <TAB> /path/to/opened/file
 
 //applet:IF_LSOF(APPLET(lsof, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/procps/mpstat.c busybox-1.28.0/procps/mpstat.c
--- busybox-1.27.2/procps/mpstat.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/mpstat.c	2017-10-05 11:53:08.000000000 +0200
@@ -6,17 +6,17 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
+//config:config MPSTAT
+//config:	bool "mpstat (10 kb)"
+//config:	default y
+//config:	help
+//config:	Per-processor statistics
 
 //applet:IF_MPSTAT(APPLET(mpstat, BB_DIR_BIN, BB_SUID_DROP))
+/* shouldn't be noexec: "mpstat INTERVAL" runs indefinitely */
 
 //kbuild:lib-$(CONFIG_MPSTAT) += mpstat.o
 
-//config:config MPSTAT
-//config:	bool "mpstat"
-//config:	default y
-//config:	help
-//config:	  Per-processor statistics
-
 #include "libbb.h"
 #include <sys/utsname.h>  /* struct utsname */
 
diff -urpN busybox-1.27.2/procps/nmeter.c busybox-1.28.0/procps/nmeter.c
--- busybox-1.27.2/procps/nmeter.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/nmeter.c	2017-10-05 11:53:08.000000000 +0200
@@ -5,12 +5,11 @@
  *
  * Contact me: vda.linux@googlemail.com
  */
-
 //config:config NMETER
-//config:	bool "nmeter"
+//config:	bool "nmeter (10 kb)"
 //config:	default y
 //config:	help
-//config:	  Prints selected system stats continuously, one line per update.
+//config:	Prints selected system stats continuously, one line per update.
 
 //applet:IF_NMETER(APPLET(nmeter, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/procps/pgrep.c busybox-1.28.0/procps/pgrep.c
--- busybox-1.27.2/procps/pgrep.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/pgrep.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,20 +7,24 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config PGREP
-//config:	bool "pgrep"
+//config:	bool "pgrep (6.8 kb)"
 //config:	default y
 //config:	help
-//config:	  Look for processes by name.
+//config:	Look for processes by name.
 //config:
 //config:config PKILL
-//config:	bool "pkill"
+//config:	bool "pkill (7.6 kb)"
 //config:	default y
 //config:	help
-//config:	  Send signals to processes by name.
+//config:	Send signals to processes by name.
 
-//applet:IF_PGREP(APPLET(pgrep, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_PGREP(APPLET_ODDNAME(pgrep, pgrep, BB_DIR_USR_BIN, BB_SUID_DROP, pgrep))
 //                APPLET_ODDNAME:name   main   location        suid_type     help
 //applet:IF_PKILL(APPLET_ODDNAME(pkill, pgrep, BB_DIR_USR_BIN, BB_SUID_DROP, pkill))
+/* can't be noexec: can find _itself_ under wrong name, since after fork only,
+ * /proc/PID/cmdline and comm are wrong! Can fix comm (prctl(PR_SET_NAME)),
+ * but cmdline?
+ */
 
 //kbuild:lib-$(CONFIG_PGREP) += pgrep.o
 //kbuild:lib-$(CONFIG_PKILL) += pgrep.o
@@ -155,15 +159,18 @@ int pgrep_main(int argc UNUSED_PARAM, ch
 	proc = NULL;
 	while ((proc = procps_scan(proc, scan_mask)) != NULL) {
 		char *cmd;
-		int cmdlen;
+		int cmdlen, match;
 
 		if (proc->pid == pid)
 			continue;
 
-		if (ppid2match >= 0 && ppid2match != proc->ppid)
-			continue;
-		if (sid2match >= 0 && sid2match != proc->sid)
-			continue;
+		if (!OPT_INVERT) {
+			/* Quickly reject -sN -PN mismatches... unless -v */
+			if (ppid2match >= 0 && ppid2match != proc->ppid)
+				continue;
+			if (sid2match >= 0 && sid2match != proc->sid)
+				continue;
+		}
 
 		cmdlen = -1;
 		cmd = proc->argv0;
@@ -186,12 +193,36 @@ int pgrep_main(int argc UNUSED_PARAM, ch
 			}
 		}
 
+		if (OPT_INVERT) {
+			/* "pgrep -v -P1 firefox" means "not (ppid=1 AND name=firefox)"
+			 * or equivalently "ppid!=1 OR name!=firefox".
+			 * Check the first condition and if true, skip matching.
+			 */
+			if (ppid2match >= 0 && ppid2match != proc->ppid)
+				goto got_it;
+			if (sid2match >= 0 && sid2match != proc->sid)
+				goto got_it;
+		}
+
+		match = !argv[0]; /* if no PATTERN, then it's a match, else... */
+		if (!match) {
+ again:
+			match = (regexec(&re_buffer, cmd, 1, re_match, 0) == 0);
+			if (!match && cmd != proc->comm) {
+				/* if argv[] did not match, try comm */
+				cmdlen = -1;
+				cmd = proc->comm;
+				goto again;
+			}
+			if (match && OPT_ANCHOR) {
+				/* -x requires full string match */
+				match = (re_match[0].rm_so == 0 && cmd[re_match[0].rm_eo] == '\0');
+			}
+		}
+
 		/* NB: OPT_INVERT is always 0 or 1 */
-		if (!argv[0]
-		 || (regexec(&re_buffer, cmd, 1, re_match, 0) == 0 /* match found */
-		    && (!OPT_ANCHOR || (re_match[0].rm_so == 0 && re_match[0].rm_eo == (regoff_t)strlen(cmd)))
-		    ) ^ OPT_INVERT
-		) {
+		if (match ^ OPT_INVERT) {
+ got_it:
 			matched_pid = proc->pid;
 			if (OPT_LAST) {
 				free(cmd_last);
diff -urpN busybox-1.27.2/procps/pidof.c busybox-1.28.0/procps/pidof.c
--- busybox-1.27.2/procps/pidof.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/pidof.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,29 +7,33 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config PIDOF
-//config:	bool "pidof"
+//config:	bool "pidof (6.6 kb)"
 //config:	default y
 //config:	help
-//config:	  Pidof finds the process id's (pids) of the named programs. It prints
-//config:	  those id's on the standard output.
+//config:	Pidof finds the process id's (pids) of the named programs. It prints
+//config:	those id's on the standard output.
 //config:
 //config:config FEATURE_PIDOF_SINGLE
 //config:	bool "Enable single shot (-s)"
 //config:	default y
 //config:	depends on PIDOF
 //config:	help
-//config:	  Support '-s' for returning only the first pid found.
+//config:	Support '-s' for returning only the first pid found.
 //config:
 //config:config FEATURE_PIDOF_OMIT
 //config:	bool "Enable omitting pids (-o PID)"
 //config:	default y
 //config:	depends on PIDOF
 //config:	help
-//config:	  Support '-o PID' for omitting the given pid(s) in output.
-//config:	  The special pid %PPID can be used to name the parent process
-//config:	  of the pidof, in other words the calling shell or shell script.
+//config:	Support '-o PID' for omitting the given pid(s) in output.
+//config:	The special pid %PPID can be used to name the parent process
+//config:	of the pidof, in other words the calling shell or shell script.
 
 //applet:IF_PIDOF(APPLET(pidof, BB_DIR_BIN, BB_SUID_DROP))
+/* can't be noexec: can find _itself_ under wrong name, since after fork only,
+ * /proc/PID/cmdline and comm are wrong! Can fix comm (prctl(PR_SET_NAME)),
+ * but cmdline?
+ */
 
 //kbuild:lib-$(CONFIG_PIDOF) += pidof.o
 
diff -urpN busybox-1.27.2/procps/pmap.c busybox-1.28.0/procps/pmap.c
--- busybox-1.27.2/procps/pmap.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/pmap.c	2017-10-05 11:53:08.000000000 +0200
@@ -7,18 +7,18 @@
  * Licensed under GPLv2 or later, see the LICENSE file in this source tree
  * for details.
  */
-
 //config:config PMAP
-//config:       bool "pmap"
-//config:       default y
-//config:       help
-//config:         Display processes' memory mappings.
+//config:	bool "pmap (6 kb)"
+//config:	default y
+//config:	help
+//config:	Display processes' memory mappings.
 
 //applet:IF_PMAP(APPLET(pmap, BB_DIR_USR_BIN, BB_SUID_DROP))
+
 //kbuild:lib-$(CONFIG_PMAP) += pmap.o
 
 //usage:#define pmap_trivial_usage
-//usage:       "[-xq] PID"
+//usage:       "[-xq] PID..."
 //usage:#define pmap_full_usage "\n\n"
 //usage:       "Display process memory usage"
 //usage:     "\n"
@@ -96,7 +96,7 @@ int pmap_main(int argc UNUSED_PARAM, cha
 	unsigned opts;
 	int ret;
 
-	opts = getopt32(argv, "xq");
+	opts = getopt32(argv, "^" "xq" "\0" "-1"); /* min one arg */
 	argv += optind;
 
 	ret = 0;
diff -urpN busybox-1.27.2/procps/powertop.c busybox-1.28.0/procps/powertop.c
--- busybox-1.27.2/procps/powertop.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/powertop.c	2017-10-05 11:53:08.000000000 +0200
@@ -8,24 +8,23 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
-//applet:IF_POWERTOP(APPLET(powertop, BB_DIR_USR_SBIN, BB_SUID_DROP))
-
-//kbuild:lib-$(CONFIG_POWERTOP) += powertop.o
-
 //config:config POWERTOP
-//config:	bool "powertop"
+//config:	bool "powertop (9.1 kb)"
 //config:	default y
 //config:	help
-//config:	  Analyze power consumption on Intel-based laptops
+//config:	Analyze power consumption on Intel-based laptops
 //config:
 //config:config FEATURE_POWERTOP_INTERACTIVE
 //config:	bool "Accept keyboard commands"
 //config:	default y
 //config:	depends on POWERTOP
 //config:	help
-//config:	  Without this, powertop will only refresh display every 10 seconds.
-//config:	  No keyboard commands will work, only ^C to terminate.
+//config:	Without this, powertop will only refresh display every 10 seconds.
+//config:	No keyboard commands will work, only ^C to terminate.
+
+//applet:IF_POWERTOP(APPLET(powertop, BB_DIR_USR_SBIN, BB_SUID_DROP))
+
+//kbuild:lib-$(CONFIG_POWERTOP) += powertop.o
 
 // XXX This should be configurable
 #define ENABLE_FEATURE_POWERTOP_PROCIRQ 1
@@ -52,6 +51,8 @@
 /* Max filename length of entry in /sys/devices subsystem */
 #define BIG_SYSNAME_LEN    16
 
+#define ESC "\033"
+
 typedef unsigned long long ullong;
 
 struct line {
@@ -718,7 +719,7 @@ int powertop_main(int UNUSED_PARAM argc,
 	set_termios_to_raw(STDIN_FILENO, &G.init_settings, TERMIOS_CLEAR_ISIG);
 	bb_signals(BB_FATAL_SIGS, sig_handler);
 	/* So we don't forget to reset term settings */
-	atexit(reset_term);
+	die_func = reset_term;
 #endif
 
 	/* Collect initial data */
@@ -777,8 +778,8 @@ int powertop_main(int UNUSED_PARAM argc,
 			}
 		}
 
-		/* Clear the screen */
-		printf("\033[H\033[J");
+		/* Home; clear screen */
+		printf(ESC"[H" ESC"[J");
 
 		/* Clear C-state lines */
 		memset(&cstate_lines, 0, sizeof(cstate_lines));
@@ -855,6 +856,9 @@ int powertop_main(int UNUSED_PARAM argc,
 	} /* for (;;) */
 
 	bb_putchar('\n');
+#if ENABLE_FEATURE_POWERTOP_INTERACTIVE
+	reset_term();
+#endif
 
 	return EXIT_SUCCESS;
 }
diff -urpN busybox-1.27.2/procps/ps.c busybox-1.28.0/procps/ps.c
--- busybox-1.27.2/procps/ps.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/ps.c	2017-09-07 14:42:40.000000000 +0200
@@ -9,32 +9,32 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config PS
-//config:	bool "ps"
+//config:	bool "ps (11 kb)"
 //config:	default y
 //config:	help
-//config:	  ps gives a snapshot of the current processes.
+//config:	ps gives a snapshot of the current processes.
 //config:
 //config:config FEATURE_PS_WIDE
-//config:	bool "Enable wide output option (-w)"
+//config:	bool "Enable wide output (-w)"
 //config:	default y
-//config:	depends on PS && !DESKTOP
+//config:	depends on (PS || MINIPS) && !DESKTOP
 //config:	help
-//config:	  Support argument 'w' for wide output.
-//config:	  If given once, 132 chars are printed, and if given more
-//config:	  than once, the length is unlimited.
+//config:	Support argument 'w' for wide output.
+//config:	If given once, 132 chars are printed, and if given more
+//config:	than once, the length is unlimited.
 //config:
 //config:config FEATURE_PS_LONG
-//config:	bool "Enable long output option (-l)"
+//config:	bool "Enable long output (-l)"
 //config:	default y
-//config:	depends on PS && !DESKTOP
+//config:	depends on (PS || MINIPS) && !DESKTOP
 //config:	help
-//config:	  Support argument 'l' for long output.
-//config:	  Adds fields PPID, RSS, START, TIME & TTY
+//config:	Support argument 'l' for long output.
+//config:	Adds fields PPID, RSS, START, TIME & TTY
 //config:
 //config:config FEATURE_PS_TIME
-//config:	bool "Support -o time and -o etime output specifiers"
+//config:	bool "Enable -o time and -o etime specifiers"
 //config:	default y
-//config:	depends on PS && DESKTOP
+//config:	depends on (PS || MINIPS) && DESKTOP
 //config:	select PLATFORM_LINUX
 //config:
 //config:config FEATURE_PS_UNUSUAL_SYSTEMS
@@ -42,17 +42,20 @@
 //config:	default n
 //config:	depends on FEATURE_PS_TIME
 //config:	help
-//config:	  Include support for measuring HZ on old kernels and non-ELF systems
-//config:	  (if you are on Linux 2.4.0+ and use ELF, you don't need this)
+//config:	Include support for measuring HZ on old kernels and non-ELF systems
+//config:	(if you are on Linux 2.4.0+ and use ELF, you don't need this)
 //config:
 //config:config FEATURE_PS_ADDITIONAL_COLUMNS
-//config:	bool "Support -o rgroup, -o ruser, -o nice specifiers"
+//config:	bool "Enable -o rgroup, -o ruser, -o nice specifiers"
 //config:	default y
-//config:	depends on PS && DESKTOP
+//config:	depends on (PS || MINIPS) && DESKTOP
 
-//applet:IF_PS(APPLET(ps, BB_DIR_BIN, BB_SUID_DROP))
+//                 APPLET_NOEXEC:name    main location    suid_type     help
+//applet:IF_PS(    APPLET_NOEXEC(ps,     ps,  BB_DIR_BIN, BB_SUID_DROP, ps))
+//applet:IF_MINIPS(APPLET_NOEXEC(minips, ps,  BB_DIR_BIN, BB_SUID_DROP, ps))
 
 //kbuild:lib-$(CONFIG_PS) += ps.o
+//kbuild:lib-$(CONFIG_MINIPS) += ps.o
 
 //usage:#if ENABLE_DESKTOP
 //usage:
@@ -144,12 +147,6 @@ static unsigned long get_uptime(void)
 #endif
 
 #if ENABLE_DESKTOP
-
-#include <sys/times.h> /* for times() */
-#ifndef AT_CLKTCK
-# define AT_CLKTCK 17
-#endif
-
 /* TODO:
  * http://pubs.opengroup.org/onlinepubs/9699919799/utilities/ps.html
  * specifies (for XSI-conformant systems) following default columns
@@ -186,7 +183,9 @@ struct globals {
 	char *buffer;
 	unsigned terminal_width;
 #if ENABLE_FEATURE_PS_TIME
+# if ENABLE_FEATURE_PS_UNUSUAL_SYSTEMS || !defined(__linux__)
 	unsigned kernel_HZ;
+# endif
 	unsigned long seconds_since_boot;
 #endif
 } FIX_ALIASING;
@@ -197,91 +196,15 @@ struct globals {
 #define need_flags         (G.need_flags        )
 #define buffer             (G.buffer            )
 #define terminal_width     (G.terminal_width    )
-#define kernel_HZ          (G.kernel_HZ         )
 #define INIT_G() do { setup_common_bufsiz(); } while (0)
 
 #if ENABLE_FEATURE_PS_TIME
-/* for ELF executables, notes are pushed before environment and args */
-static uintptr_t find_elf_note(uintptr_t findme)
-{
-	uintptr_t *ep = (uintptr_t *) environ;
-
-	while (*ep++)
-		continue;
-	while (*ep) {
-		if (ep[0] == findme) {
-			return ep[1];
-		}
-		ep += 2;
-	}
-	return -1;
-}
-
-#if ENABLE_FEATURE_PS_UNUSUAL_SYSTEMS
-static unsigned get_HZ_by_waiting(void)
-{
-	struct timeval tv1, tv2;
-	unsigned t1, t2, r, hz;
-	unsigned cnt = cnt; /* for compiler */
-	int diff;
-
-	r = 0;
-
-	/* Wait for times() to reach new tick */
-	t1 = times(NULL);
-	do {
-		t2 = times(NULL);
-	} while (t2 == t1);
-	gettimeofday(&tv2, NULL);
-
-	do {
-		t1 = t2;
-		tv1.tv_usec = tv2.tv_usec;
-
-		/* Wait exactly one times() tick */
-		do {
-			t2 = times(NULL);
-		} while (t2 == t1);
-		gettimeofday(&tv2, NULL);
-
-		/* Calculate ticks per sec, rounding up to even */
-		diff = tv2.tv_usec - tv1.tv_usec;
-		if (diff <= 0) diff += 1000000;
-		hz = 1000000u / (unsigned)diff;
-		hz = (hz+1) & ~1;
-
-		/* Count how many same hz values we saw */
-		if (r != hz) {
-			r = hz;
-			cnt = 0;
-		}
-		cnt++;
-	} while (cnt < 3); /* exit if saw 3 same values */
-
-	return r;
-}
-#else
-static inline unsigned get_HZ_by_waiting(void)
-{
-	/* Better method? */
-	return 100;
-}
-#endif
-
-static unsigned get_kernel_HZ(void)
-{
-	if (kernel_HZ)
-		return kernel_HZ;
-
-	/* Works for ELF only, Linux 2.4.0+ */
-	kernel_HZ = find_elf_note(AT_CLKTCK);
-	if (kernel_HZ == (unsigned)-1)
-		kernel_HZ = get_HZ_by_waiting();
-
-	G.seconds_since_boot = get_uptime();
-
-	return kernel_HZ;
-}
+# if ENABLE_FEATURE_PS_UNUSUAL_SYSTEMS || !defined(__linux__)
+#  define get_kernel_HZ() (G.kernel_HZ)
+# else
+    /* non-ancient Linux standardized on 100 for "times" freq */
+#  define get_kernel_HZ() ((unsigned)100)
+# endif
 #endif
 
 /* Print value to buf, max size+1 chars (including trailing '\0') */
@@ -340,6 +263,11 @@ static void func_pgid(char *buf, int siz
 	sprintf(buf, "%*u", size, ps->pgid);
 }
 
+static void func_sid(char *buf, int size, const procps_status_t *ps)
+{
+	sprintf(buf, "%*u", size, ps->sid);
+}
+
 static void put_lu(char *buf, int size, unsigned long u)
 {
 	char buf4[5];
@@ -368,52 +296,71 @@ static void func_tty(char *buf, int size
 }
 
 #if ENABLE_FEATURE_PS_ADDITIONAL_COLUMNS
-
 static void func_rgroup(char *buf, int size, const procps_status_t *ps)
 {
 	safe_strncpy(buf, get_cached_groupname(ps->rgid), size+1);
 }
-
 static void func_ruser(char *buf, int size, const procps_status_t *ps)
 {
 	safe_strncpy(buf, get_cached_username(ps->ruid), size+1);
 }
-
 static void func_nice(char *buf, int size, const procps_status_t *ps)
 {
 	sprintf(buf, "%*d", size, ps->niceness);
 }
-
 #endif
 
 #if ENABLE_FEATURE_PS_TIME
+static void format_time(char *buf, int size, unsigned long tt)
+{
+	unsigned ff;
+
+	/* Used to show "14453:50" if tt is large. Ugly.
+	 * procps-ng 3.3.10 uses "[[dd-]hh:]mm:ss" format.
+	 * TODO: switch to that?
+	 */
 
+	/* Formatting for 5-char TIME column.
+	 * NB: "size" is not always 5: ELAPSED is wider (7),
+	 * not taking advantage of that (yet?).
+	 */
+	ff = tt % 60;
+	tt /= 60;
+	if (tt < 60) {
+		snprintf(buf, size+1, "%2u:%02u", (unsigned)tt, ff);
+		return;
+	}
+	ff = tt % 60;
+	tt /= 60;
+	if (tt < 24) {
+		snprintf(buf, size+1, "%2uh%02u", (unsigned)tt, ff);
+		return;
+	}
+	ff = tt % 24;
+	tt /= 24;
+	if (tt < 100) {
+		snprintf(buf, size+1, "%2ud%02u", (unsigned)tt, ff);
+		return;
+	}
+	snprintf(buf, size+1, "%4lud", tt);
+}
 static void func_etime(char *buf, int size, const procps_status_t *ps)
 {
 	/* elapsed time [[dd-]hh:]mm:ss; here only mm:ss */
 	unsigned long mm;
-	unsigned ss;
 
 	mm = ps->start_time / get_kernel_HZ();
-	/* must be after get_kernel_HZ()! */
 	mm = G.seconds_since_boot - mm;
-	ss = mm % 60;
-	mm /= 60;
-	snprintf(buf, size+1, "%3lu:%02u", mm, ss);
+	format_time(buf, size, mm);
 }
-
 static void func_time(char *buf, int size, const procps_status_t *ps)
 {
 	/* cumulative time [[dd-]hh:]mm:ss; here only mm:ss */
 	unsigned long mm;
-	unsigned ss;
 
 	mm = (ps->utime + ps->stime) / get_kernel_HZ();
-	ss = mm % 60;
-	mm /= 60;
-	snprintf(buf, size+1, "%3lu:%02u", mm, ss);
+	format_time(buf, size, mm);
 }
-
 #endif
 
 #if ENABLE_SELINUX
@@ -424,11 +371,6 @@ static void func_label(char *buf, int si
 #endif
 
 /*
-static void func_nice(char *buf, int size, const procps_status_t *ps)
-{
-	ps->???
-}
-
 static void func_pcpu(char *buf, int size, const procps_status_t *ps)
 {
 }
@@ -453,11 +395,12 @@ static const ps_out_t out_spec[] = {
 //	{ 5                  , "pcpu"  ,"%CPU"   ,func_pcpu  ,PSSCAN_        },
 #endif
 #if ENABLE_FEATURE_PS_TIME
-	{ 6                  , "time"  ,"TIME"   ,func_time  ,PSSCAN_STIME | PSSCAN_UTIME },
+	{ 5                  , "time"  ,"TIME"   ,func_time  ,PSSCAN_STIME | PSSCAN_UTIME },
 #endif
 	{ 6                  , "tty"   ,"TT"     ,func_tty   ,PSSCAN_TTY     },
 	{ 4                  , "vsz"   ,"VSZ"    ,func_vsz   ,PSSCAN_VSZ     },
 /* Not mandated, but useful: */
+	{ 5                  , "sid"   ,"SID"    ,func_sid   ,PSSCAN_SID     },
 	{ 4                  , "stat"  ,"STAT"   ,func_state ,PSSCAN_STATE   },
 	{ 4                  , "rss"   ,"RSS"    ,func_rss   ,PSSCAN_RSS     },
 #if ENABLE_SELINUX
@@ -624,6 +567,12 @@ int ps_main(int argc UNUSED_PARAM, char
 	};
 
 	INIT_G();
+#if ENABLE_FEATURE_PS_TIME
+	G.seconds_since_boot = get_uptime();
+# if ENABLE_FEATURE_PS_UNUSUAL_SYSTEMS || !defined(__linux__)
+	G.kernel_HZ = bb_clk_tck(); /* this is sysconf(_SC_CLK_TCK) */
+# endif
+#endif
 
 	// POSIX:
 	// -a  Write information for all processes associated with terminals
@@ -714,9 +663,12 @@ int ps_main(int argc UNUSED_PARAM, char
 # if ENABLE_FEATURE_PS_WIDE
 	/* -w is a bit complicated */
 	int w_count = 0;
-	opt_complementary = "-:ww";
-	opts = getopt32(argv, IF_SELINUX("Z")IF_FEATURE_SHOW_THREADS("T")IF_FEATURE_PS_LONG("l")
-					"w", &w_count);
+	make_all_argv_opts(argv);
+	opts = getopt32(argv, "^"
+		IF_SELINUX("Z")IF_FEATURE_SHOW_THREADS("T")IF_FEATURE_PS_LONG("l")"w"
+		"\0" "ww",
+		&w_count
+	);
 	/* if w is given once, GNU ps sets the width to 132,
 	 * if w is given more than once, it is "unlimited"
 	 */
@@ -730,7 +682,7 @@ int ps_main(int argc UNUSED_PARAM, char
 	}
 # else
 	/* -w is not supported, only -Z and/or -T */
-	opt_complementary = "-";
+	make_all_argv_opts(argv);
 	opts = getopt32(argv, IF_SELINUX("Z")IF_FEATURE_SHOW_THREADS("T")IF_FEATURE_PS_LONG("l"));
 # endif
 
diff -urpN busybox-1.27.2/procps/pstree.c busybox-1.28.0/procps/pstree.c
--- busybox-1.27.2/procps/pstree.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/pstree.c	2017-08-17 13:50:45.000000000 +0200
@@ -9,14 +9,13 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 //config:config PSTREE
-//config:	bool "pstree"
+//config:	bool "pstree (9.4 kb)"
 //config:	default y
 //config:	help
-//config:	  Display a tree of processes.
+//config:	Display a tree of processes.
 
-//applet:IF_PSTREE(APPLET(pstree, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_PSTREE(APPLET_NOEXEC(pstree, pstree, BB_DIR_USR_BIN, BB_SUID_DROP, pstree))
 
 //kbuild:lib-$(CONFIG_PSTREE) += pstree.o
 
@@ -387,8 +386,7 @@ int pstree_main(int argc UNUSED_PARAM, c
 
 	G.output_width = get_terminal_width(0);
 
-	opt_complementary = "?1";
-	getopt32(argv, "p");
+	getopt32(argv, "^" "p" "\0" "?1");
 	argv += optind;
 
 	if (argv[0]) {
diff -urpN busybox-1.27.2/procps/pwdx.c busybox-1.28.0/procps/pwdx.c
--- busybox-1.27.2/procps/pwdx.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/pwdx.c	2017-10-05 11:53:08.000000000 +0200
@@ -7,14 +7,13 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 //config:config PWDX
-//config:	bool "pwdx"
+//config:	bool "pwdx (3.5 kb)"
 //config:	default y
 //config:	help
-//config:	  Report current working directory of a process
+//config:	Report current working directory of a process
 
-//applet:IF_PWDX(APPLET(pwdx, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_PWDX(APPLET_NOFORK(pwdx, pwdx, BB_DIR_USR_BIN, BB_SUID_DROP, pwdx))
 
 //kbuild:lib-$(CONFIG_PWDX) += pwdx.o
 
@@ -28,8 +27,7 @@
 int pwdx_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int pwdx_main(int argc UNUSED_PARAM, char **argv)
 {
-	opt_complementary = "-1";
-	getopt32(argv, "");
+	getopt32(argv, "^" "" "\0" "-1");
 	argv += optind;
 
 	do {
@@ -50,6 +48,7 @@ int pwdx_main(int argc UNUSED_PARAM, cha
 
 		sprintf(buf, "/proc/%u/cwd", pid);
 
+		/* NOFORK: only one alloc is allowed; must free */
 		s = xmalloc_readlink(buf);
 		// "pwdx /proc/1" says "/proc/1: DIR", not "1: DIR"
 		printf("%s: %s\n", *argv, s ? s : strerror(errno == ENOENT ? ESRCH : errno));
diff -urpN busybox-1.27.2/procps/smemcap.c busybox-1.28.0/procps/smemcap.c
--- busybox-1.27.2/procps/smemcap.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/smemcap.c	2017-10-05 11:53:08.000000000 +0200
@@ -7,18 +7,17 @@
  the GNU General Public License version 2 or later, incorporated
  herein by reference.
 */
+//config:config SMEMCAP
+//config:	bool "smemcap (2.5 kb)"
+//config:	default y
+//config:	help
+//config:	smemcap is a tool for capturing process data for smem,
+//config:	a memory usage statistic tool.
 
 //applet:IF_SMEMCAP(APPLET(smemcap, BB_DIR_USR_BIN, BB_SUID_DROP))
 
 //kbuild:lib-$(CONFIG_SMEMCAP) += smemcap.o
 
-//config:config SMEMCAP
-//config:	bool "smemcap"
-//config:	default y
-//config:	help
-//config:	  smemcap is a tool for capturing process data for smem,
-//config:	  a memory usage statistic tool.
-
 #include "libbb.h"
 #include "bb_archive.h"
 
diff -urpN busybox-1.27.2/procps/sysctl.c busybox-1.28.0/procps/sysctl.c
--- busybox-1.27.2/procps/sysctl.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/sysctl.c	2017-08-08 14:08:06.000000000 +0200
@@ -11,27 +11,27 @@
  * v1.01.1 - busybox applet aware by <solar@gentoo.org>
  */
 //config:config BB_SYSCTL
-//config:	bool "sysctl"
+//config:	bool "sysctl (6.9 kb)"
 //config:	default y
 //config:	help
-//config:	  Configure kernel parameters at runtime.
+//config:	Configure kernel parameters at runtime.
 
-//applet:IF_BB_SYSCTL(APPLET(sysctl, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_BB_SYSCTL(APPLET_NOEXEC(sysctl, sysctl, BB_DIR_SBIN, BB_SUID_DROP, sysctl))
 
 //kbuild:lib-$(CONFIG_BB_SYSCTL) += sysctl.o
 
 //usage:#define sysctl_trivial_usage
-//usage:       "[OPTIONS] [KEY[=VALUE]]..."
+//usage:       "-p [-enq] [FILE...] / [-enqaw] [KEY[=VALUE]]..."
 //usage:#define sysctl_full_usage "\n\n"
 //usage:       "Show/set kernel parameters\n"
+//usage:     "\n	-p	Set values from FILEs (default /etc/sysctl.conf)"
 //usage:     "\n	-e	Don't warn about unknown keys"
 //usage:     "\n	-n	Don't show key names"
+//usage:     "\n	-q      Quiet"
 //usage:     "\n	-a	Show all values"
 /* Same as -a, no need to show it */
 /* //usage:     "\n	-A	Show all values in table form" */
 //usage:     "\n	-w	Set values"
-//usage:     "\n	-p FILE	Set values from FILE (default /etc/sysctl.conf)"
-//usage:     "\n	-q      Set values silently"
 //usage:
 //usage:#define sysctl_example_usage
 //usage:       "sysctl [-n] [-e] variable...\n"
@@ -48,7 +48,7 @@ enum {
 	FLAG_TABLE_FORMAT    = 1 << 2, /* not implemented */
 	FLAG_SHOW_ALL        = 1 << 3,
 	FLAG_PRELOAD_FILE    = 1 << 4,
-/* TODO: procps 3.2.8 seems to not require -w for KEY=VAL to work: */
+	/* NB: procps 3.2.8 does not require -w for KEY=VAL to work, it only rejects non-KEY=VAL form */
 	FLAG_WRITE           = 1 << 5,
 	FLAG_QUIET           = 1 << 6,
 };
@@ -104,6 +104,7 @@ static int sysctl_act_on_setting(char *s
 	int fd, retval = EXIT_SUCCESS;
 	char *cptr, *outname;
 	char *value = value; /* for compiler */
+	bool writing = (option_mask32 & FLAG_WRITE);
 
 	outname = xstrdup(setting);
 
@@ -114,8 +115,10 @@ static int sysctl_act_on_setting(char *s
 		cptr++;
 	}
 
-	if (option_mask32 & FLAG_WRITE) {
-		cptr = strchr(setting, '=');
+	cptr = strchr(setting, '=');
+	if (cptr)
+		writing = 1;
+	if (writing) {
 		if (cptr == NULL) {
 			bb_error_msg("error: '%s' must be of the form name=value",
 				outname);
@@ -147,7 +150,7 @@ static int sysctl_act_on_setting(char *s
 			break;
 		default:
 			bb_perror_msg("error %sing key '%s'",
-					option_mask32 & FLAG_WRITE ?
+					writing ?
 						"sett" : "read",
 					outname);
 			break;
@@ -156,7 +159,7 @@ static int sysctl_act_on_setting(char *s
 		goto end;
 	}
 
-	if (option_mask32 & FLAG_WRITE) {
+	if (writing) {
 //TODO: procps 3.2.7 writes "value\n", note trailing "\n"
 		xwrite_str(fd, value);
 		close(fd);
@@ -238,23 +241,33 @@ static int sysctl_handle_preload_file(co
 {
 	char *token[2];
 	parser_t *parser;
+	int parse_flags;
 
 	parser = config_open(filename);
 	/* Must do it _after_ config_open(): */
 	xchdir("/proc/sys");
-	/* xchroot("/proc/sys") - if you are paranoid */
 
-//TODO: ';' is comment char too
-//TODO: comment may be only at line start. "var=1 #abc" - "1 #abc" is the value
-// (but _whitespace_ from ends should be trimmed first (and we do it right))
-//TODO: "var==1" is mishandled (must use "=1" as a value, but uses "1")
-// can it be fixed by removing PARSE_COLLAPSE bit?
-	while (config_read(parser, token, 2, 2, "# \t=", PARSE_NORMAL)) {
+	parse_flags = 0;
+	parse_flags &= ~PARSE_COLLAPSE;   // NO (var==val is not var=val) - treat consecutive delimiters as one
+	parse_flags &= ~PARSE_TRIM;       // NO - trim leading and trailing delimiters
+	parse_flags |= PARSE_GREEDY;      // YES - last token takes entire remainder of the line
+	parse_flags &= ~PARSE_MIN_DIE;    // NO - die if < min tokens found
+	parse_flags &= ~PARSE_EOL_COMMENTS; // NO (only first char) - comments are recognized even if not first char
+	parse_flags |= PARSE_ALT_COMMENTS;// YES - two comment chars: ';' and '#'
+	/* <space><tab><space>#comment is also comment, not strictly 1st char only */
+	parse_flags |= PARSE_WS_COMMENTS; // YES - comments are recognized even if there is whitespace before
+	while (config_read(parser, token, 2, 2, ";#=", parse_flags)) {
 		char *tp;
+
+		trim(token[1]);
+		tp = trim(token[0]);
 		sysctl_dots_to_slashes(token[0]);
-		tp = xasprintf("%s=%s", token[0], token[1]);
-		sysctl_act_recursive(tp);
-		free(tp);
+		/* ^^^converted in-place. tp still points to NUL */
+		/* now, add "=TOKEN1" */
+		*tp++ = '=';
+		overlapping_strcpy(tp, token[1]);
+
+		sysctl_act_on_setting(token[0]);
 	}
 	if (ENABLE_FEATURE_CLEAN_UP)
 		config_close(parser);
@@ -273,12 +286,19 @@ int sysctl_main(int argc UNUSED_PARAM, c
 	option_mask32 = opt;
 
 	if (opt & FLAG_PRELOAD_FILE) {
+		int cur_dir_fd;
 		option_mask32 |= FLAG_WRITE;
-		/* xchdir("/proc/sys") is inside */
-		return sysctl_handle_preload_file(*argv ? *argv : "/etc/sysctl.conf");
+		if (!*argv)
+			*--argv = (char*)"/etc/sysctl.conf";
+		cur_dir_fd = xopen(".", O_RDONLY | O_DIRECTORY);
+		do {
+			/* xchdir("/proc/sys") is inside */
+			sysctl_handle_preload_file(*argv);
+			xfchdir(cur_dir_fd); /* files can be relative, must restore cwd */
+		} while (*++argv);
+		return 0; /* procps-ng 3.3.10 does not flag parse errors */
 	}
 	xchdir("/proc/sys");
-	/* xchroot("/proc/sys") - if you are paranoid */
 	if (opt & (FLAG_TABLE_FORMAT | FLAG_SHOW_ALL)) {
 		return sysctl_act_recursive(".");
 	}
diff -urpN busybox-1.27.2/procps/top.c busybox-1.28.0/procps/top.c
--- busybox-1.27.2/procps/top.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/top.c	2017-10-05 11:53:08.000000000 +0200
@@ -50,74 +50,74 @@
  * chroot . ./top -bn1 >top1.out
  */
 //config:config TOP
-//config:	bool "top"
+//config:	bool "top (17 kb)"
 //config:	default y
 //config:	help
-//config:	  The top program provides a dynamic real-time view of a running
-//config:	  system.
+//config:	The top program provides a dynamic real-time view of a running
+//config:	system.
 //config:
 //config:config FEATURE_TOP_INTERACTIVE
 //config:	bool "Accept keyboard commands"
 //config:	default y
 //config:	depends on TOP
 //config:	help
-//config:	  Without this, top will only refresh display every 5 seconds.
-//config:	  No keyboard commands will work, only ^C to terminate.
+//config:	Without this, top will only refresh display every 5 seconds.
+//config:	No keyboard commands will work, only ^C to terminate.
 //config:
 //config:config FEATURE_TOP_CPU_USAGE_PERCENTAGE
 //config:	bool "Show CPU per-process usage percentage"
 //config:	default y
 //config:	depends on TOP
 //config:	help
-//config:	  Make top display CPU usage for each process.
-//config:	  This adds about 2k.
+//config:	Make top display CPU usage for each process.
+//config:	This adds about 2k.
 //config:
 //config:config FEATURE_TOP_CPU_GLOBAL_PERCENTS
 //config:	bool "Show CPU global usage percentage"
 //config:	default y
 //config:	depends on FEATURE_TOP_CPU_USAGE_PERCENTAGE
 //config:	help
-//config:	  Makes top display "CPU: NN% usr NN% sys..." line.
-//config:	  This adds about 0.5k.
+//config:	Makes top display "CPU: NN% usr NN% sys..." line.
+//config:	This adds about 0.5k.
 //config:
 //config:config FEATURE_TOP_SMP_CPU
 //config:	bool "SMP CPU usage display ('c' key)"
 //config:	default y
 //config:	depends on FEATURE_TOP_CPU_GLOBAL_PERCENTS
 //config:	help
-//config:	  Allow 'c' key to switch between individual/cumulative CPU stats
-//config:	  This adds about 0.5k.
+//config:	Allow 'c' key to switch between individual/cumulative CPU stats
+//config:	This adds about 0.5k.
 //config:
 //config:config FEATURE_TOP_DECIMALS
 //config:	bool "Show 1/10th of a percent in CPU/mem statistics"
 //config:	default y
 //config:	depends on FEATURE_TOP_CPU_USAGE_PERCENTAGE
 //config:	help
-//config:	  Show 1/10th of a percent in CPU/mem statistics.
-//config:	  This adds about 0.3k.
+//config:	Show 1/10th of a percent in CPU/mem statistics.
+//config:	This adds about 0.3k.
 //config:
 //config:config FEATURE_TOP_SMP_PROCESS
 //config:	bool "Show CPU process runs on ('j' field)"
 //config:	default y
 //config:	depends on TOP
 //config:	help
-//config:	  Show CPU where process was last found running on.
-//config:	  This is the 'j' field.
+//config:	Show CPU where process was last found running on.
+//config:	This is the 'j' field.
 //config:
 //config:config FEATURE_TOPMEM
 //config:	bool "Topmem command ('s' key)"
 //config:	default y
 //config:	depends on TOP
 //config:	help
-//config:	  Enable 's' in top (gives lots of memory info).
+//config:	Enable 's' in top (gives lots of memory info).
 
 //applet:IF_TOP(APPLET(top, BB_DIR_USR_BIN, BB_SUID_DROP))
 
 //kbuild:lib-$(CONFIG_TOP) += top.o
 
 #include "libbb.h"
-#include "common_bufsiz.h"
 
+#define ESC "\033"
 
 typedef struct top_status_t {
 	unsigned long vsz;
@@ -154,6 +154,8 @@ typedef int (*cmp_funcp)(top_status_t *P
 
 enum { SORT_DEPTH = 3 };
 
+/* Screens wider than this are unlikely */
+enum { LINE_BUF_SIZE = 512 - 64 };
 
 struct globals {
 	top_status_t *top;
@@ -192,10 +194,9 @@ struct globals {
 #if ENABLE_FEATURE_TOP_INTERACTIVE
 	char kbd_input[KEYCODE_BUFFER_SIZE];
 #endif
-	char line_buf[80];
-}; //FIX_ALIASING; - large code growth
-enum { LINE_BUF_SIZE = COMMON_BUFSIZE - offsetof(struct globals, line_buf) };
-#define G (*(struct globals*)bb_common_bufsiz1)
+	char line_buf[LINE_BUF_SIZE];
+};
+#define G (*ptr_to_globals)
 #define top              (G.top               )
 #define ntop             (G.ntop              )
 #define sort_field       (G.sort_field        )
@@ -213,8 +214,7 @@ enum { LINE_BUF_SIZE = COMMON_BUFSIZE -
 #define total_pcpu       (G.total_pcpu        )
 #define line_buf         (G.line_buf          )
 #define INIT_G() do { \
-	setup_common_bufsiz(); \
-	BUILD_BUG_ON(sizeof(G) > COMMON_BUFSIZE); \
+	SET_PTR_TO_GLOBALS(xzalloc(sizeof(G))); \
 	BUILD_BUG_ON(LINE_BUF_SIZE <= 80); \
 } while (0)
 
@@ -581,7 +581,7 @@ static unsigned long display_header(int
 		meminfo[MI_BUFFERS],
 		meminfo[MI_CACHED]);
 	/* Go to top & clear to the end of screen */
-	printf(OPT_BATCH_MODE ? "%s\n" : "\033[H\033[J%s\n", scrbuf);
+	printf(OPT_BATCH_MODE ? "%s\n" : ESC"[H" ESC"[J" "%s\n", scrbuf);
 	(*lines_rem_p)--;
 
 	/* Display CPU time split as percentage of total time.
@@ -619,7 +619,7 @@ static NOINLINE void display_process_lis
 #endif
 
 	/* what info of the processes is shown */
-	printf(OPT_BATCH_MODE ? "%.*s" : "\033[7m%.*s\033[0m", scr_width,
+	printf(OPT_BATCH_MODE ? "%.*s" : ESC"[7m" "%.*s" ESC"[m", scr_width,
 		"  PID  PPID USER     STAT   VSZ %VSZ"
 		IF_FEATURE_TOP_SMP_PROCESS(" CPU")
 		IF_FEATURE_TOP_CPU_USAGE_PERCENTAGE(" %CPU")
@@ -803,7 +803,7 @@ static void display_topmem_header(int sc
 		meminfo[MI_ANONPAGES],
 		meminfo[MI_MAPPED],
 		meminfo[MI_MEMFREE]);
-	printf(OPT_BATCH_MODE ? "%.*s\n" : "\033[H\033[J%.*s\n", scr_width, line_buf);
+	printf(OPT_BATCH_MODE ? "%.*s\n" : ESC"[H" ESC"[J" "%.*s\n", scr_width, line_buf);
 
 	snprintf(line_buf, LINE_BUF_SIZE,
 		" slab:%lu buf:%lu cache:%lu dirty:%lu write:%lu",
@@ -845,7 +845,7 @@ static NOINLINE void display_topmem_proc
 	cp[6] = ch;
 	do *cp++ = ch; while (*cp == ' ');
 
-	printf(OPT_BATCH_MODE ? "%.*s" : "\e[7m%.*s\e[0m", scr_width, line_buf);
+	printf(OPT_BATCH_MODE ? "%.*s" : ESC"[7m" "%.*s" ESC"[m", scr_width, line_buf);
 	lines_rem--;
 
 	if (lines_rem > ntop - G_scroll_ofs)
@@ -1110,15 +1110,14 @@ int top_main(int argc UNUSED_PARAM, char
 #endif
 
 	/* all args are options; -n NUM */
-	opt_complementary = "-"; /* options can be specified w/o dash */
+	make_all_argv_opts(argv); /* options can be specified w/o dash */
 	col = getopt32(argv, "d:n:b"IF_FEATURE_TOPMEM("m"), &str_interval, &str_iterations);
 #if ENABLE_FEATURE_TOPMEM
 	if (col & OPT_m) /* -m (busybox specific) */
 		scan_mask = TOPMEM_MASK;
 #endif
 	if (col & OPT_d) {
-		/* work around for "-d 1" -> "-d -1" done by getopt32
-		 * (opt_complementary == "-" does this) */
+		/* work around for "-d 1" -> "-d -1" done by make_all_argv_opts() */
 		if (str_interval[0] == '-')
 			str_interval++;
 		/* Need to limit it to not overflow poll timeout */
@@ -1148,6 +1147,7 @@ int top_main(int argc UNUSED_PARAM, char
 	else {
 		/* Turn on unbuffered input; turn off echoing, ^C ^Z etc */
 		set_termios_to_raw(STDIN_FILENO, &initial_settings, TERMIOS_CLEAR_ISIG);
+		die_func = reset_term;
 	}
 
 	bb_signals(BB_FATAL_SIGS, sig_catcher);
diff -urpN busybox-1.27.2/procps/uptime.c busybox-1.28.0/procps/uptime.c
--- busybox-1.27.2/procps/uptime.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/uptime.c	2017-08-08 14:08:06.000000000 +0200
@@ -12,22 +12,22 @@
  * Added FEATURE_UPTIME_UTMP_SUPPORT flag.
  */
 //config:config UPTIME
-//config:	bool "uptime"
+//config:	bool "uptime (632 bytes)"
 //config:	default y
 //config:	select PLATFORM_LINUX #sysinfo()
 //config:	help
-//config:	  uptime gives a one line display of the current time, how long
-//config:	  the system has been running, how many users are currently logged
-//config:	  on, and the system load averages for the past 1, 5, and 15 minutes.
+//config:	uptime gives a one line display of the current time, how long
+//config:	the system has been running, how many users are currently logged
+//config:	on, and the system load averages for the past 1, 5, and 15 minutes.
 //config:
 //config:config FEATURE_UPTIME_UTMP_SUPPORT
 //config:	bool "Show the number of users"
 //config:	default y
 //config:	depends on UPTIME && FEATURE_UTMP
 //config:	help
-//config:	  Display the number of users currently logged on.
+//config:	Display the number of users currently logged on.
 
-//applet:IF_UPTIME(APPLET(uptime, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_UPTIME(APPLET_NOEXEC(uptime, uptime, BB_DIR_USR_BIN, BB_SUID_DROP, uptime))
 
 //kbuild:lib-$(CONFIG_UPTIME) += uptime.o
 
diff -urpN busybox-1.27.2/procps/watch.c busybox-1.28.0/procps/watch.c
--- busybox-1.27.2/procps/watch.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/procps/watch.c	2017-10-05 11:53:08.000000000 +0200
@@ -7,16 +7,12 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
-/* BB_AUDIT SUSv3 N/A */
-/* BB_AUDIT GNU defects -- only option -n is supported. */
-
 //config:config WATCH
-//config:	bool "watch"
+//config:	bool "watch (4.1 kb)"
 //config:	default y
 //config:	help
-//config:	  watch is used to execute a program periodically, showing
-//config:	  output to the screen.
+//config:	watch is used to execute a program periodically, showing
+//config:	output to the screen.
 
 //applet:IF_WATCH(APPLET(watch, BB_DIR_BIN, BB_SUID_DROP))
 
@@ -35,8 +31,13 @@
 //usage:       "Mon Dec 17 10:31:42 GMT 2000\n"
 //usage:       "Mon Dec 17 10:31:44 GMT 2000"
 
+/* BB_AUDIT SUSv3 N/A */
+/* BB_AUDIT GNU defects -- only option -n is supported. */
+
 #include "libbb.h"
 
+#define ESC "\033"
+
 // procps 2.0.18:
 // watch [-d] [-n seconds]
 //   [--differences[=cumulative]] [--interval=seconds] command
@@ -62,9 +63,9 @@ int watch_main(int argc UNUSED_PARAM, ch
 	xopen("/dev/null", O_RDONLY);
 #endif
 
-	opt_complementary = "-1"; // at least one param; -n NUM
-	// "+": stop at first non-option (procps 3.x only)
-	opt = getopt32(argv, "+dtn:+", &period);
+	// "+": stop at first non-option (procps 3.x only); -n NUM
+	// at least one param
+	opt = getopt32(argv, "^+" "dtn:+" "\0" "-1", &period);
 	argv += optind;
 
 	// watch from both procps 2.x and 3.x does concatenation. Example:
@@ -77,7 +78,7 @@ int watch_main(int argc UNUSED_PARAM, ch
 	header = NULL;
 	while (1) {
 		/* home; clear to the end of screen */
-		printf("\033[H""\033[J");
+		printf(ESC"[H" ESC"[J");
 		if (!(opt & 0x2)) { // no -t
 			const unsigned time_len = sizeof("1234-67-90 23:56:89");
 
diff -urpN busybox-1.27.2/runit/chpst.c busybox-1.28.0/runit/chpst.c
--- busybox-1.27.2/runit/chpst.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/runit/chpst.c	2017-08-17 13:50:45.000000000 +0200
@@ -13,7 +13,7 @@ modification, are permitted provided tha
    3. The name of the author may not be used to endorse or promote products
       derived from this software without specific prior written permission.
 
-THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
+THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
 WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
@@ -28,43 +28,43 @@ ADVISED OF THE POSSIBILITY OF SUCH DAMAG
 /* Busyboxed by Denys Vlasenko <vda.linux@googlemail.com> */
 
 //config:config CHPST
-//config:	bool "chpst"
+//config:	bool "chpst (8.7 kb)"
 //config:	default y
 //config:	help
-//config:	  chpst changes the process state according to the given options, and
-//config:	  execs specified program.
+//config:	chpst changes the process state according to the given options, and
+//config:	execs specified program.
 //config:
 //config:config SETUIDGID
-//config:	bool "setuidgid"
+//config:	bool "setuidgid (4.2 kb)"
 //config:	default y
 //config:	help
-//config:	  Sets soft resource limits as specified by options
+//config:	Sets soft resource limits as specified by options
 //config:
 //config:config ENVUIDGID
-//config:	bool "envuidgid"
+//config:	bool "envuidgid (3.6 kb)"
 //config:	default y
 //config:	help
-//config:	  Sets $UID to account's uid and $GID to account's gid
+//config:	Sets $UID to account's uid and $GID to account's gid
 //config:
 //config:config ENVDIR
-//config:	bool "envdir"
+//config:	bool "envdir (2.5 kb)"
 //config:	default y
 //config:	help
-//config:	  Sets various environment variables as specified by files
-//config:	  in the given directory
+//config:	Sets various environment variables as specified by files
+//config:	in the given directory
 //config:
 //config:config SOFTLIMIT
-//config:	bool "softlimit"
+//config:	bool "softlimit (4.3 kb)"
 //config:	default y
 //config:	help
-//config:	  Sets soft resource limits as specified by options
+//config:	Sets soft resource limits as specified by options
 
-//applet:IF_CHPST(APPLET(chpst, BB_DIR_USR_BIN, BB_SUID_DROP))
-//                    APPLET_ODDNAME:name       main   location        suid_type     help
-//applet:IF_ENVDIR(   APPLET_ODDNAME(envdir,    chpst, BB_DIR_USR_BIN, BB_SUID_DROP, envdir))
-//applet:IF_ENVUIDGID(APPLET_ODDNAME(envuidgid, chpst, BB_DIR_USR_BIN, BB_SUID_DROP, envuidgid))
-//applet:IF_SETUIDGID(APPLET_ODDNAME(setuidgid, chpst, BB_DIR_USR_BIN, BB_SUID_DROP, setuidgid))
-//applet:IF_SOFTLIMIT(APPLET_ODDNAME(softlimit, chpst, BB_DIR_USR_BIN, BB_SUID_DROP, softlimit))
+//applet:IF_CHPST(    APPLET_NOEXEC(chpst,     chpst, BB_DIR_USR_BIN, BB_SUID_DROP, chpst))
+//                    APPLET_NOEXEC:name       main   location        suid_type     help
+//applet:IF_ENVDIR(   APPLET_NOEXEC(envdir,    chpst, BB_DIR_USR_BIN, BB_SUID_DROP, envdir))
+//applet:IF_ENVUIDGID(APPLET_NOEXEC(envuidgid, chpst, BB_DIR_USR_BIN, BB_SUID_DROP, envuidgid))
+//applet:IF_SETUIDGID(APPLET_NOEXEC(setuidgid, chpst, BB_DIR_USR_BIN, BB_SUID_DROP, setuidgid))
+//applet:IF_SOFTLIMIT(APPLET_NOEXEC(softlimit, chpst, BB_DIR_USR_BIN, BB_SUID_DROP, softlimit))
 
 //kbuild:lib-$(CONFIG_CHPST) += chpst.o
 //kbuild:lib-$(CONFIG_ENVDIR) += chpst.o
@@ -301,9 +301,10 @@ int chpst_main(int argc UNUSED_PARAM, ch
 		// FIXME: can we live with int-sized limits?
 		// can we live with 40000 days?
 		// if yes -> getopt converts strings to numbers for us
-		opt_complementary = "-1";
-		opt = getopt32(argv, "+a:+c:+d:+f:+l:+m:+o:+p:+r:+s:+t:+u:U:e:"
-			IF_CHPST("/:n:vP012"),
+		opt = getopt32(argv, "^+"
+			"a:+c:+d:+f:+l:+m:+o:+p:+r:+s:+t:+u:U:e:"
+			IF_CHPST("/:n:vP012")
+			"\0" "-1",
 			&limita, &limitc, &limitd, &limitf, &limitl,
 			&limitm, &limito, &limitp, &limitr, &limits, &limitt,
 			&set_user, &set_user, &env_dir
diff -urpN busybox-1.27.2/runit/runit_lib.h busybox-1.28.0/runit/runit_lib.h
--- busybox-1.27.2/runit/runit_lib.h	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/runit/runit_lib.h	2017-08-03 17:53:10.000000000 +0200
@@ -13,7 +13,7 @@ modification, are permitted provided tha
    3. The name of the author may not be used to endorse or promote products
       derived from this software without specific prior written permission.
 
-THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
+THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
 WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
diff -urpN busybox-1.27.2/runit/runsv.c busybox-1.28.0/runit/runsv.c
--- busybox-1.27.2/runit/runsv.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/runit/runsv.c	2017-08-03 17:53:10.000000000 +0200
@@ -13,7 +13,7 @@ modification, are permitted provided tha
    3. The name of the author may not be used to endorse or promote products
       derived from this software without specific prior written permission.
 
-THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
+THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
 WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
@@ -28,11 +28,11 @@ ADVISED OF THE POSSIBILITY OF SUCH DAMAG
 /* Busyboxed by Denys Vlasenko <vda.linux@googlemail.com> */
 
 //config:config RUNSV
-//config:	bool "runsv"
+//config:	bool "runsv (7.2 kb)"
 //config:	default y
 //config:	help
-//config:	  runsv starts and monitors a service and optionally an appendant log
-//config:	  service.
+//config:	runsv starts and monitors a service and optionally an appendant log
+//config:	service.
 
 //applet:IF_RUNSV(APPLET(runsv, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/runit/runsvdir.c busybox-1.28.0/runit/runsvdir.c
--- busybox-1.27.2/runit/runsvdir.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/runit/runsvdir.c	2017-08-17 13:50:45.000000000 +0200
@@ -13,7 +13,7 @@ modification, are permitted provided tha
    3. The name of the author may not be used to endorse or promote products
       derived from this software without specific prior written permission.
 
-THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
+THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
 WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
@@ -28,21 +28,21 @@ ADVISED OF THE POSSIBILITY OF SUCH DAMAG
 /* Busyboxed by Denys Vlasenko <vda.linux@googlemail.com> */
 
 //config:config RUNSVDIR
-//config:	bool "runsvdir"
+//config:	bool "runsvdir (6 kb)"
 //config:	default y
 //config:	help
-//config:	  runsvdir starts a runsv process for each subdirectory, or symlink to
-//config:	  a directory, in the services directory dir, up to a limit of 1000
-//config:	  subdirectories, and restarts a runsv process if it terminates.
+//config:	runsvdir starts a runsv process for each subdirectory, or symlink to
+//config:	a directory, in the services directory dir, up to a limit of 1000
+//config:	subdirectories, and restarts a runsv process if it terminates.
 //config:
 //config:config FEATURE_RUNSVDIR_LOG
 //config:	bool "Enable scrolling argument log"
 //config:	depends on RUNSVDIR
 //config:	default n
 //config:	help
-//config:	  Enable feature where second parameter of runsvdir holds last error
-//config:	  message (viewable via top/ps). Otherwise (feature is off
-//config:	  or no parameter), error messages go to stderr only.
+//config:	Enable feature where second parameter of runsvdir holds last error
+//config:	message (viewable via top/ps). Otherwise (feature is off
+//config:	or no parameter), error messages go to stderr only.
 
 //applet:IF_RUNSVDIR(APPLET(runsvdir, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -248,10 +248,9 @@ int runsvdir_main(int argc UNUSED_PARAM,
 
 	INIT_G();
 
-	opt_complementary = "-1";
 	opt_s_argv[0] = NULL;
 	opt_s_argv[2] = NULL;
-	getopt32(argv, "Ps:", &opt_s_argv[0]);
+	getopt32(argv, "^" "Ps:" "\0" "-1", &opt_s_argv[0]);
 	argv += optind;
 
 	i_am_init = (getpid() == 1);
diff -urpN busybox-1.27.2/runit/sv.c busybox-1.28.0/runit/sv.c
--- busybox-1.27.2/runit/sv.c	2017-08-05 01:40:12.000000000 +0200
+++ busybox-1.28.0/runit/sv.c	2017-10-05 11:53:08.000000000 +0200
@@ -13,7 +13,7 @@ modification, are permitted provided tha
    3. The name of the author may not be used to endorse or promote products
       derived from this software without specific prior written permission.
 
-THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
+THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
 WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
@@ -154,29 +154,29 @@ Exit Codes
 /* Busyboxed by Denys Vlasenko <vda.linux@googlemail.com> */
 
 //config:config SV
-//config:	bool "sv"
+//config:	bool "sv (7.8 kb)"
 //config:	default y
 //config:	help
-//config:	  sv reports the current status and controls the state of services
-//config:	  monitored by the runsv supervisor.
+//config:	sv reports the current status and controls the state of services
+//config:	monitored by the runsv supervisor.
 //config:
 //config:config SV_DEFAULT_SERVICE_DIR
 //config:	string "Default directory for services"
 //config:	default "/var/service"
 //config:	depends on SV
 //config:	help
-//config:	  Default directory for services.
-//config:	  Defaults to "/var/service"
+//config:	Default directory for services.
+//config:	Defaults to "/var/service"
 //config:
 //config:config SVC
-//config:	bool "svc"
+//config:	bool "svc (7.8 kb)"
 //config:	default y
 //config:	help
-//config:	  svc controls the state of services monitored by the runsv supervisor.
-//config:	  It is comaptible with daemontools command with the same name.
+//config:	svc controls the state of services monitored by the runsv supervisor.
+//config:	It is comaptible with daemontools command with the same name.
 
-//applet:IF_SV(APPLET(sv, BB_DIR_USR_BIN, BB_SUID_DROP))
-//applet:IF_SVC(APPLET(svc, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_SV( APPLET_NOEXEC(sv,  sv,  BB_DIR_USR_BIN, BB_SUID_DROP, sv ))
+//applet:IF_SVC(APPLET_NOEXEC(svc, svc, BB_DIR_USR_BIN, BB_SUID_DROP, svc))
 
 //kbuild:lib-$(CONFIG_SV) += sv.o
 //kbuild:lib-$(CONFIG_SVC) += sv.o
@@ -193,7 +193,7 @@ struct globals {
 /* "Bernstein" time format: unix + 0x400000000000000aULL */
 	uint64_t tstart, tnow;
 	svstatus_t svstatus;
-	unsigned islog;
+	smallint islog;
 } FIX_ALIASING;
 #define G (*(struct globals*)bb_common_bufsiz1)
 #define acts         (G.acts        )
@@ -203,7 +203,11 @@ struct globals {
 #define tnow         (G.tnow        )
 #define svstatus     (G.svstatus    )
 #define islog        (G.islog       )
-#define INIT_G() do { setup_common_bufsiz(); } while (0)
+#define INIT_G() do { \
+	setup_common_bufsiz(); \
+	/* need to zero out, svc calls sv() repeatedly */ \
+	memset(&G, 0, sizeof(G)); \
+} while (0)
 
 
 #define str_equal(s,t) (strcmp((s), (t)) == 0)
@@ -220,7 +224,7 @@ static void out(const char *p, const cha
 {
 	printf("%s%s%s: %s", p, *service, islog ? "/log" : "", m1);
 	if (errno) {
-		printf(": %s", strerror(errno));
+		printf(": "STRERROR_FMT STRERROR_ERRNO);
 	}
 	bb_putchar('\n'); /* will also flush the output */
 }
@@ -502,8 +506,9 @@ static int sv(char **argv)
 	x = getenv("SVWAIT");
 	if (x) waitsec = xatou(x);
 
-	opt_complementary = "vv"; /* -w N, -v is a counter */
-	getopt32(argv, "w:+v", &waitsec, &verbose);
+	getopt32(argv, "^" "w:+v" "\0" "vv" /* -w N, -v is a counter */,
+			&waitsec, &verbose
+	);
 	argv += optind;
 	action = *argv++;
 	if (!action || !*argv) bb_show_usage();
@@ -701,8 +706,6 @@ int svc_main(int argc UNUSED_PARAM, char
 	const char *optstring;
 	unsigned opts;
 
-	INIT_G();
-
 	optstring = "udopchaitkx";
 	opts = getopt32(argv, optstring);
 	argv += optind;
diff -urpN busybox-1.27.2/runit/svlogd.c busybox-1.28.0/runit/svlogd.c
--- busybox-1.27.2/runit/svlogd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/runit/svlogd.c	2017-10-05 11:53:08.000000000 +0200
@@ -13,7 +13,7 @@ modification, are permitted provided tha
    3. The name of the author may not be used to endorse or promote products
       derived from this software without specific prior written permission.
 
-THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
+THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
 WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
@@ -123,14 +123,13 @@ log message, you can use a pattern like
 
 -*: *: pid *
 */
-
 //config:config SVLOGD
-//config:	bool "svlogd"
+//config:	bool "svlogd (15 kb)"
 //config:	default y
 //config:	help
-//config:	  svlogd continuously reads log data from its standard input, optionally
-//config:	  filters log messages, and writes the data to one or more automatically
-//config:	  rotated logs.
+//config:	svlogd continuously reads log data from its standard input, optionally
+//config:	filters log messages, and writes the data to one or more automatically
+//config:	rotated logs.
 
 //applet:IF_SVLOGD(APPLET(svlogd, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -1037,9 +1036,10 @@ int svlogd_main(int argc, char **argv)
 
 	INIT_G();
 
-	opt_complementary = "tt:vv";
-	opt = getopt32(argv, "r:R:l:b:tv",
-			&r, &replace, &l, &b, &timestamp, &verbose);
+	opt = getopt32(argv, "^"
+			"r:R:l:b:tv" "\0" "tt:vv",
+			&r, &replace, &l, &b, &timestamp, &verbose
+	);
 	if (opt & 1) { // -r
 		repl = r[0];
 		if (!repl || r[1])
diff -urpN busybox-1.27.2/scripts/Makefile.IMA busybox-1.28.0/scripts/Makefile.IMA
--- busybox-1.27.2/scripts/Makefile.IMA	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/scripts/Makefile.IMA	2017-08-18 19:22:37.000000000 +0200
@@ -115,6 +115,9 @@ lib-y:=
 include debianutils/Kbuild
 lib-all-y += $(patsubst %,debianutils/%,$(sort $(lib-y)))
 lib-y:=
+include klibc-utils/Kbuild
+lib-all-y += $(patsubst %,klibc-utils/%,$(sort $(lib-y)))
+lib-y:=
 include runit/Kbuild
 lib-all-y += $(patsubst %,runit/%,$(sort $(lib-y)))
 lib-y:=
diff -urpN busybox-1.27.2/scripts/echo.c busybox-1.28.0/scripts/echo.c
--- busybox-1.27.2/scripts/echo.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/scripts/echo.c	2017-08-03 17:53:10.000000000 +0200
@@ -214,7 +214,7 @@ int main(int argc, char **argv)
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
diff -urpN busybox-1.27.2/scripts/kconfig/conf.c busybox-1.28.0/scripts/kconfig/conf.c
--- busybox-1.27.2/scripts/kconfig/conf.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/scripts/kconfig/conf.c	2017-09-07 17:01:53.000000000 +0200
@@ -76,14 +76,53 @@ static void conf_askvalue(struct symbol
 
 	line[0] = '\n';
 	line[1] = 0;
+	line[2] = 0;
 
 	if (!sym_is_changable(sym)) {
 		printf("%s\n", def);
-		line[0] = '\n';
-		line[1] = 0;
 		return;
 	}
 
+	// If autoconf run (allnoconfig and such), reset bool and tristates:
+	// "select ITEM" sets ITEM=y and then parent item might have been
+	// reset to "n" later. Try to set ITEM to "n" on the second run.
+	if (type == S_BOOLEAN || type == S_TRISTATE) {
+		switch (input_mode) {
+		case set_yes:
+			if (sym_tristate_within_range(sym, yes)) {
+				line[0] = 'y';
+				line[1] = '\n';
+				printf("%s", line);
+				return;
+			}
+		case set_mod:
+			if (type == S_TRISTATE) {
+				if (sym_tristate_within_range(sym, mod)) {
+					line[0] = 'm';
+					line[1] = '\n';
+					printf("%s", line);
+					return;
+				}
+			} else {
+				if (sym_tristate_within_range(sym, yes)) {
+					line[0] = 'y';
+					line[1] = '\n';
+					printf("%s", line);
+					return;
+				}
+			}
+		case set_no:
+			if (sym_tristate_within_range(sym, no)) {
+				line[0] = 'n';
+				line[1] = '\n';
+				printf("%s", line);
+				return;
+			}
+		default: // placate compiler
+			break;
+		}
+	}
+
 	switch (input_mode) {
 	case set_no:
 	case set_mod:
@@ -590,6 +629,19 @@ int main(int ac, char **av)
 	if (input_mode != ask_silent) {
 		rootEntry = &rootmenu;
 		conf(&rootmenu);
+		// If autoconf run (allnoconfig and such), run it twice:
+		// "select ITEM" sets ITEM=y and then parent item
+		// is reset to "n" later. Second run sets ITEM to "n".
+		// Example: ADDUSER selects LONG_OPTS.
+		// allnoconfig must set _both_ to "n".
+		// Before, LONG_OPTS remained "y".
+		if (input_mode == set_no
+		 || input_mode == set_mod
+		 || input_mode == set_yes
+		) {
+			rootEntry = &rootmenu;
+			conf(&rootmenu);
+		}
 		if (input_mode == ask_all) {
 			input_mode = ask_silent;
 			valid_stdin = 1;
diff -urpN busybox-1.27.2/scripts/randomtest busybox-1.28.0/scripts/randomtest
--- busybox-1.27.2/scripts/randomtest	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/scripts/randomtest	2018-01-01 20:40:41.000000000 +0100
@@ -52,6 +52,7 @@ echo '# CONFIG_RFKILL is not set' >>.con
 if test x"$LIBC" = x"glibc"; then
 	cat .config \
 	| grep -v CONFIG_STATIC \
+	| grep -v CONFIG_FEATURE_LIBBUSYBOX_STATIC \
 	\
 	| grep -v CONFIG_FEATURE_2_4_MODULES \
 	| grep -v CONFIG_FEATURE_USE_BSS_TAIL \
@@ -59,6 +60,7 @@ if test x"$LIBC" = x"glibc"; then
 	>.config.new
 	mv .config.new .config
 	echo '# CONFIG_STATIC is not set' >>.config
+	echo '# CONFIG_FEATURE_LIBBUSYBOX_STATIC is not set' >>.config
 	# newer glibc (at least 2.23) no longer supply query_module() ABI.
 	# People who target 2.4 kernels would likely use older glibc (and older bbox).
 	echo '# CONFIG_FEATURE_2_4_MODULES is not set' >>.config
diff -urpN busybox-1.27.2/scripts/randomtest.loop busybox-1.28.0/scripts/randomtest.loop
--- busybox-1.27.2/scripts/randomtest.loop	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/scripts/randomtest.loop	2018-01-01 20:40:41.000000000 +0100
@@ -66,6 +66,7 @@ while sleep 1; do
 			continue
 		fi
 	fi
+	grep -i 'warning:' "$dir/make.log"
 	rm -rf -- "$dir"
 	let cnt++
 done
diff -urpN busybox-1.27.2/scripts/test_setenv_leak.c busybox-1.28.0/scripts/test_setenv_leak.c
--- busybox-1.27.2/scripts/test_setenv_leak.c	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/scripts/test_setenv_leak.c	2017-07-24 18:57:09.000000000 +0200
@@ -0,0 +1,18 @@
+#include <stdio.h>
+#include <stdlib.h>
+#include <unistd.h>
+int main(int argc, char **argv)
+{
+	char buf[256];
+
+	int i = argv[1] ? atoi(argv[1]) : 999999;
+	while (--i > 0) {
+		sprintf(buf, "%d", i);
+		setenv("VAR", buf, 1);
+	}
+	printf("Check size of [heap] mapping:\n");
+	freopen("/proc/self/maps", "r", stdin);
+	while (fgets(buf, sizeof(buf), stdin))
+		fputs(buf, stdout);
+	return 0;
+}
diff -urpN busybox-1.27.2/scripts/trylink busybox-1.28.0/scripts/trylink
--- busybox-1.27.2/scripts/trylink	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/scripts/trylink	2017-07-18 19:13:20.000000000 +0200
@@ -91,7 +91,9 @@ fi
 
 START_GROUP="-Wl,--start-group"
 END_GROUP="-Wl,--end-group"
-INFO_OPTS="-Wl,--warn-common -Wl,-Map,$EXE.map -Wl,--verbose"
+INFO_OPTS() {
+	echo "-Wl,--warn-common -Wl,-Map,$EXE.map -Wl,--verbose"
+}
 
 # gold may not support --sort-common (yet)
 SORT_COMMON="-Wl,--sort-common"
@@ -194,7 +196,7 @@ if ! test -f busybox_ldscript; then
 	    $GC_SECTIONS \
 	    $START_GROUP $O_FILES $A_FILES $END_GROUP \
 	    $l_list \
-	    $INFO_OPTS \
+	    `INFO_OPTS` \
     || {
 	cat $EXE.out
 	exit 1
@@ -225,7 +227,7 @@ else
 	    -Wl,-T,busybox_ldscript \
 	    $START_GROUP $O_FILES $A_FILES $END_GROUP \
 	    $l_list \
-	    $INFO_OPTS \
+	    `INFO_OPTS` \
     || {
 	cat $EXE.out
 	exit 1
@@ -244,10 +246,14 @@ if test "$CONFIG_BUILD_LIBBUSYBOX" = y;
     }
     ln -s "libbusybox.so.$BB_VER" "$sharedlib_dir"/libbusybox.so 2>/dev/null
 
+    # Yes, "ld -shared -static" is a thing. It's a shared library which is itself static.
+    LBB_STATIC=""
+    test "$CONFIG_FEATURE_LIBBUSYBOX_STATIC" = y && LBB_STATIC="-Wl,-static"
+
     EXE="$sharedlib_dir/libbusybox.so.${BB_VER}_unstripped"
     try $CC $CFLAGS $LDFLAGS \
 	    -o $EXE \
-	    -shared -fPIC \
+	    -shared -fPIC $LBB_STATIC \
 	    -Wl,--enable-new-dtags \
 	    -Wl,-z,combreloc \
 	    -Wl,-soname="libbusybox.so.$BB_VER" \
@@ -256,7 +262,7 @@ if test "$CONFIG_BUILD_LIBBUSYBOX" = y;
 	    $SORT_SECTION \
 	    $START_GROUP $A_FILES $END_GROUP \
 	    $l_list \
-	    $INFO_OPTS \
+	    `INFO_OPTS` \
     || {
 	echo "Linking $EXE failed"
 	cat $EXE.out
@@ -277,7 +283,7 @@ if test "$CONFIG_FEATURE_SHARED_BUSYBOX"
 	    $START_GROUP $O_FILES $END_GROUP \
 	    -L"$sharedlib_dir" -lbusybox \
 	    $l_list \
-	    $INFO_OPTS \
+	    `INFO_OPTS` \
     || {
 	echo "Linking $EXE failed"
 	cat $EXE.out
diff -urpN busybox-1.27.2/selinux/chcon.c busybox-1.28.0/selinux/chcon.c
--- busybox-1.27.2/selinux/chcon.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/selinux/chcon.c	2017-08-17 13:50:45.000000000 +0200
@@ -8,16 +8,11 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config CHCON
-//config:	bool "chcon"
+//config:	bool "chcon (8.9 kb)"
 //config:	default n
 //config:	depends on SELINUX
 //config:	help
-//config:	  Enable support to change the security context of file.
-//config:
-//config:config FEATURE_CHCON_LONG_OPTIONS
-//config:	bool "Enable long options"
-//config:	default y
-//config:	depends on CHCON && LONG_OPTS
+//config:	Enable support to change the security context of file.
 
 //applet:IF_CHCON(APPLET(chcon, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -26,34 +21,24 @@
 //usage:#define chcon_trivial_usage
 //usage:       "[OPTIONS] CONTEXT FILE..."
 //usage:       "\n	chcon [OPTIONS] [-u USER] [-r ROLE] [-l RANGE] [-t TYPE] FILE..."
-//usage:	IF_FEATURE_CHCON_LONG_OPTIONS(
+//usage:	IF_LONG_OPTS(
 //usage:       "\n	chcon [OPTIONS] --reference=RFILE FILE..."
 //usage:	)
+//usage:
 //usage:#define chcon_full_usage "\n\n"
 //usage:       "Change the security context of each FILE to CONTEXT\n"
-//usage:	IF_FEATURE_CHCON_LONG_OPTIONS(
-//usage:     "\n	-v,--verbose		Verbose"
-//usage:     "\n	-c,--changes		Report changes made"
-//usage:     "\n	-h,--no-dereference	Affect symlinks instead of their targets"
-//usage:     "\n	-f,--silent,--quiet	Suppress most error messages"
-//usage:     "\n	--reference RFILE	Use RFILE's group instead of using a CONTEXT value"
-//usage:     "\n	-u,--user USER		Set user/role/type/range in the target"
-//usage:     "\n	-r,--role ROLE		security context"
-//usage:     "\n	-t,--type TYPE"
-//usage:     "\n	-l,--range RANGE"
-//usage:     "\n	-R,--recursive		Recurse"
-//usage:	)
-//usage:	IF_NOT_FEATURE_CHCON_LONG_OPTIONS(
 //usage:     "\n	-v	Verbose"
 //usage:     "\n	-c	Report changes made"
 //usage:     "\n	-h	Affect symlinks instead of their targets"
 //usage:     "\n	-f	Suppress most error messages"
+//usage:	IF_LONG_OPTS(
+//usage:     "\n	--reference RFILE Use RFILE's group instead of using a CONTEXT value"
+//usage:	)
 //usage:     "\n	-u USER	Set user/role/type/range in the target security context"
 //usage:     "\n	-r ROLE"
 //usage:     "\n	-t TYPE"
 //usage:     "\n	-l RNG"
 //usage:     "\n	-R	Recurse"
-//usage:	)
 
 #include <selinux/context.h>
 
@@ -68,7 +53,7 @@
 #define OPT_TYPE		(1<<6)	/* 't' */
 #define OPT_RANGE		(1<<7)	/* 'l' */
 #define OPT_VERBOSE		(1<<8)	/* 'v' */
-#define OPT_REFERENCE		((1<<9) * ENABLE_FEATURE_CHCON_LONG_OPTIONS)
+#define OPT_REFERENCE		((1<<9) * ENABLE_LONG_OPTS)
 #define OPT_COMPONENT_SPECIFIED	(OPT_USER | OPT_ROLE | OPT_TYPE | OPT_RANGE)
 
 static char *user = NULL;
@@ -157,7 +142,7 @@ skip:
 	return rc;
 }
 
-#if ENABLE_FEATURE_CHCON_LONG_OPTIONS
+#if ENABLE_LONG_OPTS
 static const char chcon_longopts[] ALIGN1 =
 	"recursive\0"      No_argument       "R"
 	"changes\0"        No_argument       "c"
@@ -180,20 +165,21 @@ int chcon_main(int argc UNUSED_PARAM, ch
 	char *fname;
 	int i, errors = 0;
 
-#if ENABLE_FEATURE_CHCON_LONG_OPTIONS
-	applet_long_options = chcon_longopts;
-#endif
-	opt_complementary = "-1"  /* at least 1 param */
-		":?"  /* error if exclusivity constraints are violated */
-#if ENABLE_FEATURE_CHCON_LONG_OPTIONS
+	getopt32long(argv, "^"
+		"Rchfu:r:t:l:v"
+		"\0"
+		"-1" /* at least 1 arg */
+		":?" /* error if exclusivity constraints are violated */
+#if ENABLE_LONG_OPTS
 		":\xff--urtl:u--\xff:r--\xff:t--\xff:l--\xff"
 #endif
-		":f--v:v--f";  /* 'verbose' and 'quiet' are exclusive */
-	getopt32(argv, "Rchfu:r:t:l:v",
-		&user, &role, &type, &range, &reference_file);
+		":f--v:v--f"  /* 'verbose' and 'quiet' are exclusive */
+		, chcon_longopts,
+		&user, &role, &type, &range, &reference_file
+	);
 	argv += optind;
 
-#if ENABLE_FEATURE_CHCON_LONG_OPTIONS
+#if ENABLE_LONG_OPTS
 	if (option_mask32 & OPT_REFERENCE) {
 		/* FIXME: lgetfilecon() should be used when '-h' is specified.
 		 * But current implementation follows the original one. */
diff -urpN busybox-1.27.2/selinux/getenforce.c busybox-1.28.0/selinux/getenforce.c
--- busybox-1.27.2/selinux/getenforce.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/selinux/getenforce.c	2017-07-24 18:57:10.000000000 +0200
@@ -7,11 +7,11 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config GETENFORCE
-//config:	bool "getenforce"
+//config:	bool "getenforce (1.7 kb)"
 //config:	default n
 //config:	depends on SELINUX
 //config:	help
-//config:	  Enable support to get the current mode of SELinux.
+//config:	Enable support to get the current mode of SELinux.
 
 //applet:IF_GETENFORCE(APPLET(getenforce, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/selinux/getsebool.c busybox-1.28.0/selinux/getsebool.c
--- busybox-1.27.2/selinux/getsebool.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/selinux/getsebool.c	2017-07-24 18:57:10.000000000 +0200
@@ -7,11 +7,11 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config GETSEBOOL
-//config:	bool "getsebool"
+//config:	bool "getsebool (5.5 kb)"
 //config:	default n
 //config:	depends on SELINUX
 //config:	help
-//config:	  Enable support to get SELinux boolean values.
+//config:	Enable support to get SELinux boolean values.
 
 //applet:IF_GETSEBOOL(APPLET(getsebool, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/selinux/load_policy.c busybox-1.28.0/selinux/load_policy.c
--- busybox-1.27.2/selinux/load_policy.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/selinux/load_policy.c	2017-07-24 18:57:10.000000000 +0200
@@ -5,11 +5,11 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config LOAD_POLICY
-//config:	bool "load_policy"
+//config:	bool "load_policy (1.6 kb)"
 //config:	default n
 //config:	depends on SELINUX
 //config:	help
-//config:	  Enable support to load SELinux policy.
+//config:	Enable support to load SELinux policy.
 
 //applet:IF_LOAD_POLICY(APPLET(load_policy, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/selinux/matchpathcon.c busybox-1.28.0/selinux/matchpathcon.c
--- busybox-1.27.2/selinux/matchpathcon.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/selinux/matchpathcon.c	2017-10-05 11:53:08.000000000 +0200
@@ -6,12 +6,12 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config MATCHPATHCON
-//config:	bool "matchpathcon"
+//config:	bool "matchpathcon (6.1 kb)"
 //config:	default n
 //config:	depends on SELINUX
 //config:	help
-//config:	  Enable support to get default security context of the
-//config:	  specified path from the file contexts configuration.
+//config:	Enable support to get default security context of the
+//config:	specified path from the file contexts configuration.
 
 //applet:IF_MATCHPATHCON(APPLET(matchpathcon, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -58,9 +58,13 @@ int matchpathcon_main(int argc UNUSED_PA
 	unsigned opts;
 	char *fcontext, *prefix, *path;
 
-	opt_complementary = "-1" /* at least one param reqd */
-		":?:f--p:p--f"; /* mutually exclusive */
-	opts = getopt32(argv, "nNf:p:V", &fcontext, &prefix);
+	opts = getopt32(argv, "^"
+			"nNf:p:V"
+			"\0"
+			"-1" /* at least one param reqd */
+			":?:f--p:p--f" /* mutually exclusive */
+			, &fcontext, &prefix
+	);
 	argv += optind;
 
 	if (opts & OPT_NOT_TRANS) {
@@ -100,7 +104,7 @@ int matchpathcon_main(int argc UNUSED_PA
 			freecon(con);
 			continue;
 		}
-		printf("actual context unknown: %s, should be ", strerror(errno));
+		printf("actual context unknown: "STRERROR_FMT", should be " STRERROR_ERRNO);
 		error += print_matchpathcon(path, 1);
 	}
 	matchpathcon_fini();
diff -urpN busybox-1.27.2/selinux/runcon.c busybox-1.28.0/selinux/runcon.c
--- busybox-1.27.2/selinux/runcon.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/selinux/runcon.c	2017-08-17 13:50:45.000000000 +0200
@@ -29,16 +29,11 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config RUNCON
-//config:	bool "runcon"
+//config:	bool "runcon (6.6 kb)"
 //config:	default n
 //config:	depends on SELINUX
 //config:	help
-//config:	  Enable support to run command in specified security context.
-//config:
-//config:config FEATURE_RUNCON_LONG_OPTIONS
-//config:	bool "Enable long options"
-//config:	default y
-//config:	depends on RUNCON && LONG_OPTS
+//config:	Enable support to run command in specified security context.
 
 //applet:IF_RUNCON(APPLET(runcon, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -50,20 +45,11 @@
 //usage:#define runcon_full_usage "\n\n"
 //usage:       "Run PROG in a different security context\n"
 //usage:     "\n	CONTEXT		Complete security context\n"
-//usage:	IF_FEATURE_RUNCON_LONG_OPTIONS(
-//usage:     "\n	-c,--compute	Compute process transition context before modifying"
-//usage:     "\n	-t,--type TYPE	Type (for same role as parent)"
-//usage:     "\n	-u,--user USER	User identity"
-//usage:     "\n	-r,--role ROLE	Role"
-//usage:     "\n	-l,--range RNG	Levelrange"
-//usage:	)
-//usage:	IF_NOT_FEATURE_RUNCON_LONG_OPTIONS(
 //usage:     "\n	-c	Compute process transition context before modifying"
 //usage:     "\n	-t TYPE	Type (for same role as parent)"
 //usage:     "\n	-u USER	User identity"
 //usage:     "\n	-r ROLE	Role"
 //usage:     "\n	-l RNG	Levelrange"
-//usage:	)
 
 #include <selinux/context.h>
 /* from deprecated <selinux/flask.h>: */
@@ -108,7 +94,7 @@ static context_t runcon_compute_new_cont
 	return con;
 }
 
-#if ENABLE_FEATURE_RUNCON_LONG_OPTIONS
+#if ENABLE_LONG_OPTS
 static const char runcon_longopts[] ALIGN1 =
 	"user\0"    Required_argument "u"
 	"role\0"    Required_argument "r"
@@ -140,11 +126,12 @@ int runcon_main(int argc UNUSED_PARAM, c
 
 	selinux_or_die();
 
-#if ENABLE_FEATURE_RUNCON_LONG_OPTIONS
-	applet_long_options = runcon_longopts;
-#endif
-	opt_complementary = "-1";
-	opts = getopt32(argv, "r:t:u:l:ch", &role, &type, &user, &range);
+	opts = getopt32long(argv, "^"
+			"r:t:u:l:ch"
+			"\0" "-1",
+			runcon_longopts,
+			&role, &type, &user, &range
+	);
 	argv += optind;
 
 	if (!(opts & OPTS_CONTEXT_COMPONENT)) {
diff -urpN busybox-1.27.2/selinux/selinuxenabled.c busybox-1.28.0/selinux/selinuxenabled.c
--- busybox-1.27.2/selinux/selinuxenabled.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/selinux/selinuxenabled.c	2017-07-24 18:57:10.000000000 +0200
@@ -7,12 +7,12 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config SELINUXENABLED
-//config:	bool "selinuxenabled"
+//config:	bool "selinuxenabled (321 bytes)"
 //config:	default n
 //config:	depends on SELINUX
 //config:	help
-//config:	  Enable support for this command to be used within shell scripts
-//config:	  to determine if selinux is enabled.
+//config:	Enable support for this command to be used within shell scripts
+//config:	to determine if selinux is enabled.
 
 //applet:IF_SELINUXENABLED(APPLET(selinuxenabled, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/selinux/sestatus.c busybox-1.28.0/selinux/sestatus.c
--- busybox-1.27.2/selinux/sestatus.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/selinux/sestatus.c	2017-08-17 13:50:45.000000000 +0200
@@ -8,11 +8,11 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config SESTATUS
-//config:	bool "sestatus"
+//config:	bool "sestatus (12 kb)"
 //config:	default n
 //config:	depends on SELINUX
 //config:	help
-//config:	  Displays the status of SELinux.
+//config:	Displays the status of SELinux.
 
 //applet:IF_SESTATUS(APPLET(sestatus, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -167,8 +167,7 @@ int sestatus_main(int argc UNUSED_PARAM,
 	const char *pol_path;
 	int rc;
 
-	opt_complementary = "?0";  /* no arguments are required. */
-	opts = getopt32(argv, "vb");
+	opts = getopt32(argv, "^" "vb" "\0" "=0"/*no arguments*/);
 
 	/* SELinux status: line */
 	rc = is_selinux_enabled();
diff -urpN busybox-1.27.2/selinux/setenforce.c busybox-1.28.0/selinux/setenforce.c
--- busybox-1.27.2/selinux/setenforce.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/selinux/setenforce.c	2017-07-24 18:57:10.000000000 +0200
@@ -7,11 +7,11 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config SETENFORCE
-//config:	bool "setenforce"
+//config:	bool "setenforce (2.1 kb)"
 //config:	default n
 //config:	depends on SELINUX
 //config:	help
-//config:	  Enable support to modify the mode SELinux is running in.
+//config:	Enable support to modify the mode SELinux is running in.
 
 //applet:IF_SETENFORCE(APPLET(setenforce, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/selinux/setfiles.c busybox-1.28.0/selinux/setfiles.c
--- busybox-1.27.2/selinux/setfiles.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/selinux/setfiles.c	2017-09-07 14:42:40.000000000 +0200
@@ -4,30 +4,30 @@
   Port to BusyBox (c) 2007 by Yuichi Nakamura <ynakam@hitachisoft.jp>
 */
 //config:config SETFILES
-//config:	bool "setfiles"
+//config:	bool "setfiles (13 kb)"
 //config:	default n
 //config:	depends on SELINUX
 //config:	help
-//config:	  Enable support to modify to relabel files.
-//config:	  Notice: If you built libselinux with -D_FILE_OFFSET_BITS=64,
-//config:	  (It is default in libselinux's Makefile), you _must_ enable
-//config:	  CONFIG_LFS.
+//config:	Enable support to modify to relabel files.
+//config:	Notice: If you built libselinux with -D_FILE_OFFSET_BITS=64,
+//config:	(It is default in libselinux's Makefile), you _must_ enable
+//config:	CONFIG_LFS.
 //config:
 //config:config FEATURE_SETFILES_CHECK_OPTION
 //config:	bool "Enable check option"
 //config:	default n
 //config:	depends on SETFILES
 //config:	help
-//config:	  Support "-c" option (check the validity of the contexts against
-//config:	  the specified binary policy) for setfiles. Requires libsepol.
+//config:	Support "-c" option (check the validity of the contexts against
+//config:	the specified binary policy) for setfiles. Requires libsepol.
 //config:
 //config:config RESTORECON
-//config:	bool "restorecon"
+//config:	bool "restorecon (12 kb)"
 //config:	default n
 //config:	depends on SELINUX
 //config:	help
-//config:	  Enable support to relabel files. The feature is almost
-//config:	  the same as setfiles, but usage is a little different.
+//config:	Enable support to relabel files. The feature is almost
+//config:	the same as setfiles, but usage is a little different.
 
 //applet:IF_SETFILES(APPLET(setfiles, BB_DIR_SBIN, BB_SUID_DROP))
 //                     APPLET_ODDNAME:name        main      location     suid_type     help
@@ -610,17 +610,25 @@ int setfiles_main(int argc UNUSED_PARAM,
 
 	set_matchpathcon_flags(matchpathcon_flags);
 
-	opt_complementary = "vv:v--p:p--v:v--q:q--v";
 	/* Option order must match OPT_x definitions! */
 	if (applet_name[0] == 'r') { /* restorecon */
-		flags = getopt32(argv, "de:*f:ilnpqrsvo:FWR",
-			&exclude_dir, &input_filename, &out_filename, &verbose);
+		flags = getopt32(argv, "^"
+			"de:*f:ilnpqrsvo:FWR"
+				"\0"
+				"vv:v--p:p--v:v--q:q--v",
+			&exclude_dir, &input_filename, &out_filename,
+				&verbose
+		);
 	} else { /* setfiles */
-		flags = getopt32(argv, "de:*f:ilnpqr:svo:FW"
-				IF_FEATURE_SETFILES_CHECK_OPTION("c:"),
+		flags = getopt32(argv, "^"
+			"de:*f:ilnpqr:svo:FW"
+			IF_FEATURE_SETFILES_CHECK_OPTION("c:")
+				"\0"
+				"vv:v--p:p--v:v--q:q--v",
 			&exclude_dir, &input_filename, &rootpath, &out_filename,
-				IF_FEATURE_SETFILES_CHECK_OPTION(&policyfile,)
-			&verbose);
+			IF_FEATURE_SETFILES_CHECK_OPTION(&policyfile,)
+				&verbose
+		);
 	}
 	argv += optind;
 
@@ -673,7 +681,7 @@ int setfiles_main(int argc UNUSED_PARAM,
 			bb_show_usage();
 		xstat(argv[0], &sb);
 		if (!S_ISREG(sb.st_mode)) {
-			bb_error_msg_and_die("spec file %s is not a regular file", argv[0]);
+			bb_error_msg_and_die("'%s' is not a regular file", argv[0]);
 		}
 		/* Load the file contexts configuration and check it. */
 		rc = matchpathcon_init(argv[0]);
diff -urpN busybox-1.27.2/selinux/setsebool.c busybox-1.28.0/selinux/setsebool.c
--- busybox-1.27.2/selinux/setsebool.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/selinux/setsebool.c	2017-07-24 18:57:10.000000000 +0200
@@ -8,12 +8,12 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config SETSEBOOL
-//config:	bool "setsebool"
+//config:	bool "setsebool (1.7 kb)"
 //config:	default n
 //config:	depends on SELINUX
 //config:	help
-//config:	  Enable support for change boolean.
-//config:	  semanage and -P option is not supported yet.
+//config:	Enable support for change boolean.
+//config:	semanage and -P option is not supported yet.
 
 //applet:IF_SETSEBOOL(APPLET(setsebool, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/shell/Config.src busybox-1.28.0/shell/Config.src
--- busybox-1.27.2/shell/Config.src	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/Config.src	2017-07-24 18:57:10.000000000 +0200
@@ -10,26 +10,26 @@ choice
 	prompt "Choose which shell is aliased to 'sh' name"
 	default SH_IS_ASH
 	help
-	  Choose which shell you want to be executed by 'sh' alias.
-	  The ash shell is the most bash compatible and full featured one.
+	Choose which shell you want to be executed by 'sh' alias.
+	The ash shell is the most bash compatible and full featured one.
 
 # note: cannot use "select ASH" here, it breaks "make allnoconfig"
 config SH_IS_ASH
 	depends on !NOMMU
 	bool "ash"
 	help
-	  Choose ash to be the shell executed by 'sh' name.
-	  The ash code will be built into busybox. If you don't select
-	  "ash" choice (CONFIG_ASH), this shell may only be invoked by
-	  the name 'sh' (and not 'ash').
+	Choose ash to be the shell executed by 'sh' name.
+	The ash code will be built into busybox. If you don't select
+	"ash" choice (CONFIG_ASH), this shell may only be invoked by
+	the name 'sh' (and not 'ash').
 
 config SH_IS_HUSH
 	bool "hush"
 	help
-	  Choose hush to be the shell executed by 'sh' name.
-	  The hush code will be built into busybox. If you don't select
-	  "hush" choice (CONFIG_HUSH), this shell may only be invoked by
-	  the name 'sh' (and not 'hush').
+	Choose hush to be the shell executed by 'sh' name.
+	The hush code will be built into busybox. If you don't select
+	"hush" choice (CONFIG_HUSH), this shell may only be invoked by
+	the name 'sh' (and not 'hush').
 
 config SH_IS_NONE
 	bool "none"
@@ -40,36 +40,36 @@ choice
 	prompt "Choose which shell is aliased to 'bash' name"
 	default BASH_IS_NONE
 	help
-	  Choose which shell you want to be executed by 'bash' alias.
-	  The ash shell is the most bash compatible and full featured one,
-	  although compatibility is far from being complete.
-
-	  Note that selecting this option does not switch on any bash
-	  compatibility code. It merely makes it possible to install
-	  /bin/bash (sym)link and run scripts which start with
-	  #!/bin/bash line.
-
-	  Many systems use it in scripts which use bash-specific features,
-	  even simple ones like $RANDOM. Without this option, busybox
-	  can't be used for running them because it won't recongnize
-	  "bash" as a supported applet name.
+	Choose which shell you want to be executed by 'bash' alias.
+	The ash shell is the most bash compatible and full featured one,
+	although compatibility is far from being complete.
+
+	Note that selecting this option does not switch on any bash
+	compatibility code. It merely makes it possible to install
+	/bin/bash (sym)link and run scripts which start with
+	#!/bin/bash line.
+
+	Many systems use it in scripts which use bash-specific features,
+	even simple ones like $RANDOM. Without this option, busybox
+	can't be used for running them because it won't recongnize
+	"bash" as a supported applet name.
 
 config BASH_IS_ASH
 	depends on !NOMMU
 	bool "ash"
 	help
-	  Choose ash to be the shell executed by 'bash' name.
-	  The ash code will be built into busybox. If you don't select
-	  "ash" choice (CONFIG_ASH), this shell may only be invoked by
-	  the name 'bash' (and not 'ash').
+	Choose ash to be the shell executed by 'bash' name.
+	The ash code will be built into busybox. If you don't select
+	"ash" choice (CONFIG_ASH), this shell may only be invoked by
+	the name 'bash' (and not 'ash').
 
 config BASH_IS_HUSH
 	bool "hush"
 	help
-	  Choose hush to be the shell executed by 'bash' name.
-	  The hush code will be built into busybox. If you don't select
-	  "hush" choice (CONFIG_HUSH), this shell may only be invoked by
-	  the name 'bash' (and not 'hush').
+	Choose hush to be the shell executed by 'bash' name.
+	The hush code will be built into busybox. If you don't select
+	"hush" choice (CONFIG_HUSH), this shell may only be invoked by
+	the name 'bash' (and not 'hush').
 
 config BASH_IS_NONE
 	bool "none"
@@ -88,71 +88,78 @@ config FEATURE_SH_MATH
 	default y
 	depends on ASH || HUSH || SH_IS_ASH || BASH_IS_ASH || SH_IS_HUSH || BASH_IS_HUSH
 	help
-	  Enable math support in the shell via $((...)) syntax.
+	Enable math support in the shell via $((...)) syntax.
 
 config FEATURE_SH_MATH_64
 	bool "Extend POSIX math support to 64 bit"
 	default y
 	depends on FEATURE_SH_MATH
 	help
-	  Enable 64-bit math support in the shell. This will make the shell
-	  slightly larger, but will allow computation with very large numbers.
-	  This is not in POSIX, so do not rely on this in portable code.
+	Enable 64-bit math support in the shell. This will make the shell
+	slightly larger, but will allow computation with very large numbers.
+	This is not in POSIX, so do not rely on this in portable code.
 
 config FEATURE_SH_EXTRA_QUIET
 	bool "Hide message on interactive shell startup"
 	default y
 	depends on ASH || HUSH || SH_IS_ASH || BASH_IS_ASH || SH_IS_HUSH || BASH_IS_HUSH
 	help
-	  Remove the busybox introduction when starting a shell.
+	Remove the busybox introduction when starting a shell.
 
 config FEATURE_SH_STANDALONE
 	bool "Standalone shell"
 	default n
 	depends on ASH || HUSH || SH_IS_ASH || BASH_IS_ASH || SH_IS_HUSH || BASH_IS_HUSH
 	help
-	  This option causes busybox shells to use busybox applets
-	  in preference to executables in the PATH whenever possible. For
-	  example, entering the command 'ifconfig' into the shell would cause
-	  busybox to use the ifconfig busybox applet. Specifying the fully
-	  qualified executable name, such as '/sbin/ifconfig' will still
-	  execute the /sbin/ifconfig executable on the filesystem. This option
-	  is generally used when creating a statically linked version of busybox
-	  for use as a rescue shell, in the event that you screw up your system.
-
-	  This is implemented by re-execing /proc/self/exe (typically)
-	  with right parameters.
-
-	  However, there are drawbacks: it is problematic in chroot jails
-	  without mounted /proc, and ps/top may show command name as 'exe'
-	  for applets started this way.
+	This option causes busybox shells to use busybox applets
+	in preference to executables in the PATH whenever possible. For
+	example, entering the command 'ifconfig' into the shell would cause
+	busybox to use the ifconfig busybox applet. Specifying the fully
+	qualified executable name, such as '/sbin/ifconfig' will still
+	execute the /sbin/ifconfig executable on the filesystem. This option
+	is generally used when creating a statically linked version of busybox
+	for use as a rescue shell, in the event that you screw up your system.
+
+	This is implemented by re-execing /proc/self/exe (typically)
+	with right parameters.
+
+	However, there are drawbacks: it is problematic in chroot jails
+	without mounted /proc, and ps/top may show command name as 'exe'
+	for applets started this way.
 
 config FEATURE_SH_NOFORK
 	bool "Run 'nofork' applets directly"
 	default n
 	depends on ASH || HUSH || SH_IS_ASH || BASH_IS_ASH || SH_IS_HUSH || BASH_IS_HUSH
 	help
-	  This option causes busybox shells to not execute typical
-	  fork/exec/wait sequence, but call <applet>_main directly,
-	  if possible. (Sometimes it is not possible: for example,
-	  this is not possible in pipes).
+	This option causes busybox shells to not execute typical
+	fork/exec/wait sequence, but call <applet>_main directly,
+	if possible. (Sometimes it is not possible: for example,
+	this is not possible in pipes).
 
-	  This will be done only for some applets (those which are marked
-	  NOFORK in include/applets.h).
+	This will be done only for some applets (those which are marked
+	NOFORK in include/applets.h).
 
-	  This may significantly speed up some shell scripts.
+	This may significantly speed up some shell scripts.
 
-	  This feature is relatively new. Use with care. Report bugs
-	  to project mailing list.
+	This feature is relatively new. Use with care. Report bugs
+	to project mailing list.
+
+config FEATURE_SH_READ_FRAC
+	bool "read -t N.NNN support (+110 bytes)"
+	default y
+	depends on ASH || HUSH || SH_IS_ASH || BASH_IS_ASH || SH_IS_HUSH || BASH_IS_HUSH
+	help
+	Enable support for fractional second timeout in read builtin.
 
 config FEATURE_SH_HISTFILESIZE
 	bool "Use $HISTFILESIZE"
 	default y
 	depends on ASH || HUSH || SH_IS_ASH || BASH_IS_ASH || SH_IS_HUSH || BASH_IS_HUSH
 	help
-	  This option makes busybox shells to use $HISTFILESIZE variable
-	  to set shell history size. Note that its max value is capped
-	  by "History size" setting in library tuning section.
+	This option makes busybox shells to use $HISTFILESIZE variable
+	to set shell history size. Note that its max value is capped
+	by "History size" setting in library tuning section.
 
 endif # Options common to all shells
 
diff -urpN busybox-1.27.2/shell/ash.c busybox-1.28.0/shell/ash.c
--- busybox-1.27.2/shell/ash.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/shell/ash.c	2018-01-01 20:40:41.000000000 +0100
@@ -16,15 +16,14 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config ASH
-//config:	bool "ash"
+//config:	bool "ash (77 kb)"
 //config:	default y
 //config:	depends on !NOMMU
 //config:	help
-//config:	  Tha 'ash' shell adds about 60k in the default configuration and is
-//config:	  the most complete and most pedantically correct shell included with
-//config:	  busybox. This shell is actually a derivative of the Debian 'dash'
-//config:	  shell (by Herbert Xu), which was created by porting the 'ash' shell
-//config:	  (written by Kenneth Almquist) from NetBSD.
+//config:	The most complete and most pedantically correct shell included with
+//config:	busybox. This shell is actually a derivative of the Debian 'dash'
+//config:	shell (by Herbert Xu), which was created by porting the 'ash' shell
+//config:	(written by Kenneth Almquist) from NetBSD.
 //config:
 //config:# ash options
 //config:# note: Don't remove !NOMMU part in the next line; it would break
@@ -41,11 +40,11 @@
 //config:	default y	# Y is bigger, but because of uclibc glob() bug, let Y be default for now
 //config:	depends on ASH || SH_IS_ASH || BASH_IS_ASH
 //config:	help
-//config:	  Do not use glob() function from libc, use internal implementation.
-//config:	  Use this if you are getting "glob.h: No such file or directory"
-//config:	  or similar build errors.
-//config:	  Note that as of now (2017-01), uclibc and musl glob() both have bugs
-//config:	  which would break ash if you select N here.
+//config:	Do not use glob() function from libc, use internal implementation.
+//config:	Use this if you are getting "glob.h: No such file or directory"
+//config:	or similar build errors.
+//config:	Note that as of now (2017-01), uclibc and musl glob() both have bugs
+//config:	which would break ash if you select N here.
 //config:
 //config:config ASH_BASH_COMPAT
 //config:	bool "bash-compatible extensions"
@@ -67,37 +66,37 @@
 //config:	default y
 //config:	depends on ASH || SH_IS_ASH || BASH_IS_ASH
 //config:	help
-//config:	  Enable pseudorandom generator and dynamic variable "$RANDOM".
-//config:	  Each read of "$RANDOM" will generate a new pseudorandom value.
-//config:	  You can reset the generator by using a specified start value.
-//config:	  After "unset RANDOM" the generator will switch off and this
-//config:	  variable will no longer have special treatment.
+//config:	Enable pseudorandom generator and dynamic variable "$RANDOM".
+//config:	Each read of "$RANDOM" will generate a new pseudorandom value.
+//config:	You can reset the generator by using a specified start value.
+//config:	After "unset RANDOM" the generator will switch off and this
+//config:	variable will no longer have special treatment.
 //config:
 //config:config ASH_EXPAND_PRMT
 //config:	bool "Expand prompt string"
 //config:	default y
 //config:	depends on ASH || SH_IS_ASH || BASH_IS_ASH
 //config:	help
-//config:	  $PS# may contain volatile content, such as backquote commands.
-//config:	  This option recreates the prompt string from the environment
-//config:	  variable each time it is displayed.
+//config:	$PS# may contain volatile content, such as backquote commands.
+//config:	This option recreates the prompt string from the environment
+//config:	variable each time it is displayed.
 //config:
 //config:config ASH_IDLE_TIMEOUT
 //config:	bool "Idle timeout variable $TMOUT"
 //config:	default y
 //config:	depends on ASH || SH_IS_ASH || BASH_IS_ASH
 //config:	help
-//config:	  Enable bash-like auto-logout after $TMOUT seconds of idle time.
+//config:	Enable bash-like auto-logout after $TMOUT seconds of idle time.
 //config:
 //config:config ASH_MAIL
 //config:	bool "Check for new mail in interactive shell"
 //config:	default y
 //config:	depends on ASH || SH_IS_ASH || BASH_IS_ASH
 //config:	help
-//config:	  Enable "check for new mail" function:
-//config:	  if set, $MAIL file and $MAILPATH list of files
-//config:	  are checked for mtime changes, and "you have mail"
-//config:	  message is printed if change is detected.
+//config:	Enable "check for new mail" function:
+//config:	if set, $MAIL file and $MAILPATH list of files
+//config:	are checked for mtime changes, and "you have mail"
+//config:	message is printed if change is detected.
 //config:
 //config:config ASH_ECHO
 //config:	bool "echo builtin"
@@ -129,9 +128,9 @@
 //config:	default y
 //config:	depends on ASH || SH_IS_ASH || BASH_IS_ASH
 //config:	help
-//config:	  Enable support for the 'command' builtin, which allows
-//config:	  you to run the specified command or builtin,
-//config:	  even when there is a function with the same name.
+//config:	Enable support for the 'command' builtin, which allows
+//config:	you to run the specified command or builtin,
+//config:	even when there is a function with the same name.
 //config:
 //config:endif # ash options
 
@@ -189,6 +188,9 @@
 #define    BASH_PIPEFAIL        ENABLE_ASH_BASH_COMPAT
 #define    BASH_HOSTNAME_VAR    ENABLE_ASH_BASH_COMPAT
 #define    BASH_SHLVL_VAR       ENABLE_ASH_BASH_COMPAT
+#define    BASH_XTRACEFD        ENABLE_ASH_BASH_COMPAT
+#define    BASH_READ_D          ENABLE_ASH_BASH_COMPAT
+#define IF_BASH_READ_D              IF_ASH_BASH_COMPAT
 
 #if defined(__ANDROID_API__) && __ANDROID_API__ <= 24
 /* Bionic at least up to version 24 has no glob() */
@@ -215,6 +217,9 @@
 #include "shell_common.h"
 #if ENABLE_FEATURE_SH_MATH
 # include "math.h"
+#else
+typedef long arith_t;
+# define ARITH_FMT "%ld"
 #endif
 #if ENABLE_ASH_RANDOM_SUPPORT
 # include "random.h"
@@ -326,7 +331,6 @@ struct globals_misc {
 #define EXERROR 1       /* a generic error */
 #define EXEXIT 4        /* exit the shell */
 
-	smallint isloginsh;
 	char nullstr[1];        /* zero length string */
 
 	char optlist[NOPTS];
@@ -364,7 +368,7 @@ struct globals_misc {
 #define S_DFL      1            /* default signal handling (SIG_DFL) */
 #define S_CATCH    2            /* signal is caught */
 #define S_IGN      3            /* signal is ignored (SIG_IGN) */
-#define S_HARD_IGN 4            /* signal is ignored permanently */
+#define S_HARD_IGN 4            /* signal is ignored permanently (it was SIG_IGN on entry to shell) */
 
 	/* indicates specified signal received */
 	uint8_t gotsig[NSIG - 1]; /* offset by 1: "signal" 0 is meaningless */
@@ -395,7 +399,6 @@ extern struct globals_misc *const ash_pt
 #define pending_int       (G_misc.pending_int      )
 #define got_sigchld       (G_misc.got_sigchld      )
 #define pending_sig       (G_misc.pending_sig      )
-#define isloginsh   (G_misc.isloginsh  )
 #define nullstr     (G_misc.nullstr    )
 #define optlist     (G_misc.optlist    )
 #define sigmode     (G_misc.sigmode    )
@@ -622,8 +625,8 @@ fmtstr(char *outbuf, size_t length, cons
 	va_list ap;
 	int ret;
 
-	va_start(ap, fmt);
 	INT_OFF;
+	va_start(ap, fmt);
 	ret = vsnprintf(outbuf, length, fmt, ap);
 	va_end(ap);
 	INT_ON;
@@ -1226,6 +1229,10 @@ struct strpush {
 	int unget;
 };
 
+/*
+ * The parsefile structure pointed to by the global variable parsefile
+ * contains information about the current file being read.
+ */
 struct parsefile {
 	struct parsefile *prev; /* preceding file on stack */
 	int linno;              /* current line */
@@ -1248,7 +1255,6 @@ static struct parsefile basepf;        /
 static struct parsefile *g_parsefile = &basepf;  /* current input file */
 static int startlinno;                 /* line # where last token started */
 static char *commandname;              /* currently executing command */
-static struct strlist *cmdenviron;     /* environment for builtin command */
 
 
 /* ============ Message printing */
@@ -1305,6 +1311,11 @@ ash_msg_and_raise_error(const char *msg,
 	va_end(ap);
 }
 
+/*
+ * 'fmt' must be a string literal.
+ */
+#define ash_msg_and_raise_perror(fmt, ...) ash_msg_and_raise_error(fmt ": "STRERROR_FMT, ##__VA_ARGS__ STRERROR_ERRNO)
+
 static void raise_error_syntax(const char *) NORETURN;
 static void
 raise_error_syntax(const char *msg)
@@ -1659,7 +1670,7 @@ static char *
 stack_nputstr(const char *s, size_t n, char *p)
 {
 	p = makestrspace(n, p);
-	p = (char *)memcpy(p, s, n) + n;
+	p = (char *)mempcpy(p, s, n);
 	return p;
 }
 
@@ -1743,7 +1754,7 @@ number(const char *s)
 }
 
 /*
- * Produce a possibly single quoted string suitable as input to the shell.
+ * Produce a single quoted string suitable as input to the shell.
  * The return string is allocated on the stack.
  */
 static char *
@@ -1762,7 +1773,7 @@ single_quote(const char *s)
 		q = p = makestrspace(len + 3, p);
 
 		*q++ = '\'';
-		q = (char *)memcpy(q, s, len) + len;
+		q = (char *)mempcpy(q, s, len);
 		*q++ = '\'';
 		s += len;
 
@@ -1776,7 +1787,7 @@ single_quote(const char *s)
 		q = p = makestrspace(len + 3, p);
 
 		*q++ = '"';
-		q = (char *)memcpy(q, s - len, len) + len;
+		q = (char *)mempcpy(q, s - len, len);
 		*q++ = '"';
 
 		STADJUST(q - p, p);
@@ -1787,6 +1798,44 @@ single_quote(const char *s)
 	return stackblock();
 }
 
+/*
+ * Produce a possibly single quoted string suitable as input to the shell.
+ * If quoting was done, the return string is allocated on the stack,
+ * otherwise a pointer to the original string is returned.
+ */
+static const char *
+maybe_single_quote(const char *s)
+{
+	const char *p = s;
+
+	while (*p) {
+		/* Assuming ACSII */
+		/* quote ctrl_chars space !"#$%&'()* */
+		if (*p < '+')
+			goto need_quoting;
+		/* quote ;<=>? */
+		if (*p >= ';' && *p <= '?')
+			goto need_quoting;
+		/* quote `[\ */
+		if (*p == '`')
+			goto need_quoting;
+		if (*p == '[')
+			goto need_quoting;
+		if (*p == '\\')
+			goto need_quoting;
+		/* quote {|}~ DEL and high bytes */
+		if (*p > 'z')
+			goto need_quoting;
+		/* Not quoting these: +,-./ 0-9 :@ A-Z ]^_ a-z */
+		/* TODO: maybe avoid quoting % */
+		p++;
+	}
+	return s;
+
+ need_quoting:
+	return single_quote(s);
+}
+
 
 /* ============ nextopt */
 
@@ -1850,10 +1899,6 @@ nextopt(const char *optstring)
 
 /* ============ Shell variables */
 
-/*
- * The parsefile structure pointed to by the global variable parsefile
- * contains information about the current file being read.
- */
 struct shparam {
 	int nparam;             /* # of positional parameters (without $0) */
 #if ENABLE_ASH_GETOPTS
@@ -1979,7 +2024,7 @@ struct redirtab;
 struct globals_var {
 	struct shparam shellparam;      /* $@ current positional parameters */
 	struct redirtab *redirlist;
-	int preverrout_fd;   /* save fd2 before print debug if xflag is set. */
+	int preverrout_fd;   /* stderr fd: usually 2, unless redirect moved it */
 	struct var *vartab[VTABSIZE];
 	struct var varinit[ARRAY_SIZE(varinit_data)];
 };
@@ -2047,7 +2092,9 @@ extern struct globals_var *const ash_ptr
 static void FAST_FUNC
 getoptsreset(const char *value)
 {
-	shellparam.optind = number(value) ?: 1;
+	shellparam.optind = 1;
+	if (is_number(value))
+		shellparam.optind = number(value) ?: 1;
 	shellparam.optoff = -1;
 }
 #endif
@@ -2185,15 +2232,9 @@ reinit_unicode_for_ash(void)
 /*
  * Search the environment of a builtin command.
  */
-static const char *
+static ALWAYS_INLINE const char *
 bltinlookup(const char *name)
 {
-	struct strlist *sp;
-
-	for (sp = cmdenviron; sp; sp = sp->next) {
-		if (varcmp(sp->text, name) == 0)
-			return var_end(sp->text);
-	}
 	return lookupvar(name);
 }
 
@@ -2204,14 +2245,15 @@ bltinlookup(const char *name)
  * will go away.
  * Called with interrupts off.
  */
-static void
+static struct var *
 setvareq(char *s, int flags)
 {
 	struct var *vp, **vpp;
 
 	vpp = hashvar(s);
 	flags |= (VEXPORT & (((unsigned) (1 - aflag)) - 1));
-	vp = *findvar(vpp, s);
+	vpp = findvar(vpp, s);
+	vp = *vpp;
 	if (vp) {
 		if ((vp->flags & (VREADONLY|VDYNAMIC)) == VREADONLY) {
 			const char *n;
@@ -2224,7 +2266,7 @@ setvareq(char *s, int flags)
 		}
 
 		if (flags & VNOSET)
-			return;
+			goto out;
 
 		if (vp->var_func && !(flags & VNOFUNC))
 			vp->var_func(var_end(s));
@@ -2232,11 +2274,22 @@ setvareq(char *s, int flags)
 		if (!(vp->flags & (VTEXTFIXED|VSTACK)))
 			free((char*)vp->var_text);
 
+		if (((flags & (VEXPORT|VREADONLY|VSTRFIXED|VUNSET)) | (vp->flags & VSTRFIXED)) == VUNSET) {
+			*vpp = vp->next;
+			free(vp);
+ out_free:
+			if ((flags & (VTEXTFIXED|VSTACK|VNOSAVE)) == VNOSAVE)
+				free(s);
+			goto out;
+		}
+
 		flags |= vp->flags & ~(VTEXTFIXED|VSTACK|VNOSAVE|VUNSET);
 	} else {
 		/* variable s is not found */
 		if (flags & VNOSET)
-			return;
+			goto out;
+		if ((flags & (VEXPORT|VREADONLY|VSTRFIXED|VUNSET)) == VUNSET)
+			goto out_free;
 		vp = ckzalloc(sizeof(*vp));
 		vp->next = *vpp;
 		/*vp->func = NULL; - ckzalloc did it */
@@ -2246,13 +2299,16 @@ setvareq(char *s, int flags)
 		s = ckstrdup(s);
 	vp->var_text = s;
 	vp->flags = flags;
+
+ out:
+	return vp;
 }
 
 /*
  * Set the value of a variable.  The flags argument is ored with the
  * flags of the variable.  If val is NULL, the variable is unset.
  */
-static void
+static struct var *
 setvar(const char *name, const char *val, int flags)
 {
 	const char *q;
@@ -2260,6 +2316,7 @@ setvar(const char *name, const char *val
 	char *nameeq;
 	size_t namelen;
 	size_t vallen;
+	struct var *vp;
 
 	q = endofname(name);
 	p = strchrnul(q, '=');
@@ -2275,14 +2332,16 @@ setvar(const char *name, const char *val
 
 	INT_OFF;
 	nameeq = ckmalloc(namelen + vallen + 2);
-	p = memcpy(nameeq, name, namelen) + namelen;
+	p = mempcpy(nameeq, name, namelen);
 	if (val) {
 		*p++ = '=';
-		p = memcpy(p, val, vallen) + vallen;
+		p = mempcpy(p, val, vallen);
 	}
 	*p = '\0';
-	setvareq(nameeq, flags | VNOSAVE);
+	vp = setvareq(nameeq, flags | VNOSAVE);
 	INT_ON;
+
+	return vp;
 }
 
 static void FAST_FUNC
@@ -2294,43 +2353,10 @@ setvar0(const char *name, const char *va
 /*
  * Unset the specified variable.
  */
-static int
+static void
 unsetvar(const char *s)
 {
-	struct var **vpp;
-	struct var *vp;
-	int retval;
-
-	vpp = findvar(hashvar(s), s);
-	vp = *vpp;
-	retval = 2;
-	if (vp) {
-		int flags = vp->flags;
-
-		retval = 1;
-		if (flags & VREADONLY)
-			goto out;
-#if ENABLE_ASH_RANDOM_SUPPORT
-		vp->flags &= ~VDYNAMIC;
-#endif
-		if (flags & VUNSET)
-			goto ok;
-		if ((flags & VSTRFIXED) == 0) {
-			INT_OFF;
-			if ((flags & (VTEXTFIXED|VSTACK)) == 0)
-				free((char*)vp->var_text);
-			*vpp = vp->next;
-			free(vp);
-			INT_ON;
-		} else {
-			setvar0(s, NULL);
-			vp->flags &= ~VEXPORT;
-		}
- ok:
-		retval = 0;
-	}
- out:
-	return retval;
+	setvar(s, NULL, 0);
 }
 
 /*
@@ -2354,8 +2380,11 @@ listsetvar(struct strlist *list_set_var,
 /*
  * Generate a list of variables satisfying the given conditions.
  */
+#if !ENABLE_FEATURE_SH_NOFORK
+# define listvars(on, off, lp, end) listvars(on, off, end)
+#endif
 static char **
-listvars(int on, int off, char ***end)
+listvars(int on, int off, struct strlist *lp, char ***end)
 {
 	struct var **vpp;
 	struct var *vp;
@@ -2368,12 +2397,40 @@ listvars(int on, int off, char ***end)
 	do {
 		for (vp = *vpp; vp; vp = vp->next) {
 			if ((vp->flags & mask) == on) {
+#if ENABLE_FEATURE_SH_NOFORK
+				/* If variable with the same name is both
+				 * exported and temporarily set for a command:
+				 *  export ZVAR=5
+				 *  ZVAR=6 printenv
+				 * then "ZVAR=6" will be both in vartab and
+				 * lp lists. Do not pass it twice to printenv.
+				 */
+				struct strlist *lp1 = lp;
+				while (lp1) {
+					if (strcmp(lp1->text, vp->var_text) == 0)
+						goto skip;
+					lp1 = lp1->next;
+				}
+#endif
 				if (ep == stackstrend())
 					ep = growstackstr();
 				*ep++ = (char*)vp->var_text;
+#if ENABLE_FEATURE_SH_NOFORK
+ skip: ;
+#endif
 			}
 		}
 	} while (++vpp < vartab + VTABSIZE);
+
+#if ENABLE_FEATURE_SH_NOFORK
+	while (lp) {
+		if (ep == stackstrend())
+			ep = growstackstr();
+		*ep++ = lp->text;
+		lp = lp->next;
+	}
+#endif
+
 	if (ep == stackstrend())
 		ep = growstackstr();
 	if (end)
@@ -2413,8 +2470,7 @@ path_advance(const char **path, const ch
 		growstackblock();
 	q = stackblock();
 	if (p != start) {
-		memcpy(q, start, p - start);
-		q += p - start;
+		q = mempcpy(q, start, p - start);
 		*q++ = '/';
 	}
 	strcpy(q, name);
@@ -2459,8 +2515,20 @@ putprompt(const char *s)
 #endif
 
 /* expandstr() needs parsing machinery, so it is far away ahead... */
-static const char *expandstr(const char *ps);
+static const char *expandstr(const char *ps, int syntax_type);
+/* Values for syntax param */
+#define BASESYNTAX 0    /* not in quotes */
+#define DQSYNTAX   1    /* in double quotes */
+#define SQSYNTAX   2    /* in single quotes */
+#define ARISYNTAX  3    /* in arithmetic */
+#if ENABLE_ASH_EXPAND_PRMT
+# define PSSYNTAX  4    /* prompt. never passed to SIT() */
+#endif
+/* PSSYNTAX expansion is identical to DQSYNTAX, except keeping '\$' as '\$' */
 
+/*
+ * called by editline -- any expansions to the prompt should be added here.
+ */
 static void
 setprompt_if(smallint do_set, int whichprompt)
 {
@@ -2484,7 +2552,7 @@ setprompt_if(smallint do_set, int whichp
 	}
 #if ENABLE_ASH_EXPAND_PRMT
 	pushstackmark(&smark, stackblocksize());
-	putprompt(expandstr(prompt));
+	putprompt(expandstr(prompt, PSSYNTAX));
 	popstackmark(&smark);
 #else
 	putprompt(prompt);
@@ -2704,7 +2772,7 @@ cdcmd(int argc UNUSED_PARAM, char **argv
 	goto docd;
 
  err:
-	ash_msg_and_raise_error("can't cd to %s", dest);
+	ash_msg_and_raise_perror("can't cd to %s", dest);
 	/* NOTREACHED */
  out:
 	if (flags & CD_PRINT)
@@ -2809,13 +2877,6 @@ enum {
 /* c in SIT(c, syntax) must be an *unsigned char* or PEOA or PEOF,
  * caller must ensure proper cast on it if c is *char_ptr!
  */
-/* Values for syntax param */
-#define BASESYNTAX 0    /* not in quotes */
-#define DQSYNTAX   1    /* in double quotes */
-#define SQSYNTAX   2    /* in single quotes */
-#define ARISYNTAX  3    /* in arithmetic */
-#define PSSYNTAX   4    /* prompt. never passed to SIT() */
-
 #if USE_SIT_FUNCTION
 
 static int
@@ -3504,9 +3565,12 @@ setsignal(int signo)
 #endif
 		}
 	}
-//TODO: if !rootshell, we reset SIGQUIT to DFL,
-//whereas we have to restore it to what shell got on entry
-//from the parent. See comment above
+	/* if !rootshell, we reset SIGQUIT to DFL,
+	 * whereas we have to restore it to what shell got on entry.
+	 * This is handled by the fact that if signal was IGNored on entry,
+	 * then cur_act is S_HARD_IGN and we never change its sigaction
+	 * (see code below).
+	 */
 
 	if (signo == SIGCHLD)
 		new_act = S_CATCH;
@@ -3530,10 +3594,18 @@ setsignal(int signo)
 				cur_act = S_IGN;   /* don't hard ignore these */
 			}
 		}
+		if (act.sa_handler == SIG_DFL && new_act == S_DFL) {
+			/* installing SIG_DFL over SIG_DFL is a no-op */
+			/* saves one sigaction call in each "sh -c SCRIPT" invocation */
+			*t = S_DFL;
+			return;
+		}
 	}
 	if (cur_act == S_HARD_IGN || cur_act == new_act)
 		return;
 
+	*t = new_act;
+
 	act.sa_handler = SIG_DFL;
 	switch (new_act) {
 	case S_CATCH:
@@ -3543,16 +3615,13 @@ setsignal(int signo)
 		act.sa_handler = SIG_IGN;
 		break;
 	}
-
 	/* flags and mask matter only if !DFL and !IGN, but we do it
 	 * for all cases for more deterministic behavior:
 	 */
-	act.sa_flags = 0;
+	act.sa_flags = 0; //TODO: why not SA_RESTART?
 	sigfillset(&act.sa_mask);
 
 	sigaction_set(signo, &act);
-
-	*t = new_act;
 }
 
 /* mode flags for set_curjob */
@@ -3810,7 +3879,7 @@ static void
 xtcsetpgrp(int fd, pid_t pgrp)
 {
 	if (tcsetpgrp(fd, pgrp))
-		ash_msg_and_raise_error("can't set tty process group (%m)");
+		ash_msg_and_raise_perror("can't set tty process group");
 }
 
 /*
@@ -4608,6 +4677,10 @@ cmdputs(const char *s)
 			/* These can only happen inside quotes */
 			cc[0] = c;
 			str = cc;
+//FIXME:
+// $ true $$ &
+// $ <cr>
+// [1]+  Done    true ${\$}   <<=== BUG: ${\$} is not a valid way to write $$ (${$} would be ok)
 			c = '\\';
 			break;
 		default:
@@ -4789,7 +4862,10 @@ cmdtxt(union node *n)
 		cmdputs(utoa(n->nfile.fd));
 		cmdputs(p);
 		if (n->type == NTOFD || n->type == NFROMFD) {
-			cmdputs(utoa(n->ndup.dupfd));
+			if (n->ndup.dupfd >= 0)
+				cmdputs(utoa(n->ndup.dupfd));
+			else
+				cmdputs("-");
 			break;
 		}
 		n = n->nfile.fname;
@@ -4942,7 +5018,7 @@ forkchild(struct job *jp, union node *n,
 		if (jp->nprocs == 0) {
 			close(0);
 			if (open(bb_dev_null, O_RDONLY) != 0)
-				ash_msg_and_raise_error("can't open '%s'", bb_dev_null);
+				ash_msg_and_raise_perror("can't open '%s'", bb_dev_null);
 		}
 	}
 	if (oldlvl == 0) {
@@ -5031,7 +5107,7 @@ forkshell(struct job *jp, union node *n,
 		TRACE(("Fork failed, errno=%d", errno));
 		if (jp)
 			freejob(jp);
-		ash_msg_and_raise_error("can't fork");
+		ash_msg_and_raise_perror("can't fork");
 	}
 	if (pid == 0) {
 		CLEAR_RANDOM_T(&random_gen); /* or else $RANDOM repeats in child */
@@ -5158,69 +5234,7 @@ stoppedjobs(void)
 #undef EMPTY
 #undef CLOSED
 #define EMPTY -2                /* marks an unused slot in redirtab */
-#define CLOSED -3               /* marks a slot of previously-closed fd */
-
-/*
- * Open a file in noclobber mode.
- * The code was copied from bash.
- */
-static int
-noclobberopen(const char *fname)
-{
-	int r, fd;
-	struct stat finfo, finfo2;
-
-	/*
-	 * If the file exists and is a regular file, return an error
-	 * immediately.
-	 */
-	r = stat(fname, &finfo);
-	if (r == 0 && S_ISREG(finfo.st_mode)) {
-		errno = EEXIST;
-		return -1;
-	}
-
-	/*
-	 * If the file was not present (r != 0), make sure we open it
-	 * exclusively so that if it is created before we open it, our open
-	 * will fail.  Make sure that we do not truncate an existing file.
-	 * Note that we don't turn on O_EXCL unless the stat failed -- if the
-	 * file was not a regular file, we leave O_EXCL off.
-	 */
-	if (r != 0)
-		return open(fname, O_WRONLY|O_CREAT|O_EXCL, 0666);
-	fd = open(fname, O_WRONLY|O_CREAT, 0666);
-
-	/* If the open failed, return the file descriptor right away. */
-	if (fd < 0)
-		return fd;
-
-	/*
-	 * OK, the open succeeded, but the file may have been changed from a
-	 * non-regular file to a regular file between the stat and the open.
-	 * We are assuming that the O_EXCL open handles the case where FILENAME
-	 * did not exist and is symlinked to an existing file between the stat
-	 * and open.
-	 */
-
-	/*
-	 * If we can open it and fstat the file descriptor, and neither check
-	 * revealed that it was a regular file, and the file has not been
-	 * replaced, return the file descriptor.
-	 */
-	if (fstat(fd, &finfo2) == 0
-	 && !S_ISREG(finfo2.st_mode)
-	 && finfo.st_dev == finfo2.st_dev
-	 && finfo.st_ino == finfo2.st_ino
-	) {
-		return fd;
-	}
-
-	/* The file has been replaced.  badness. */
-	close(fd);
-	errno = EEXIST;
-	return -1;
-}
+#define CLOSED -1               /* marks a slot of previously-closed fd */
 
 /*
  * Handle here documents.  Normally we fork off a process to write the
@@ -5236,7 +5250,7 @@ openhere(union node *redir)
 	size_t len = 0;
 
 	if (pipe(pip) < 0)
-		ash_msg_and_raise_error("pipe call failed");
+		ash_msg_and_raise_perror("can't create pipe");
 	if (redir->type == NHERE) {
 		len = strlen(redir->nhere.doc->narg.text);
 		if (len <= PIPE_BUF) {
@@ -5266,6 +5280,7 @@ openhere(union node *redir)
 static int
 openredirect(union node *redir)
 {
+	struct stat sb;
 	char *fname;
 	int f;
 
@@ -5305,9 +5320,23 @@ openredirect(union node *redir)
 #endif
 		/* Take care of noclobber mode. */
 		if (Cflag) {
-			f = noclobberopen(fname);
-			if (f < 0)
+			if (stat(fname, &sb) < 0) {
+				f = open(fname, O_WRONLY|O_CREAT|O_EXCL, 0666);
+				if (f < 0)
+					goto ecreate;
+			} else if (!S_ISREG(sb.st_mode)) {
+				f = open(fname, O_WRONLY, 0666);
+				if (f < 0)
+					goto ecreate;
+				if (fstat(f, &sb) < 0 && S_ISREG(sb.st_mode)) {
+					close(f);
+					errno = EEXIST;
+					goto ecreate;
+				}
+			} else {
+				errno = EEXIST;
 				goto ecreate;
+			}
 			break;
 		}
 		/* FALLTHROUGH */
@@ -5343,7 +5372,7 @@ savefd(int from)
 	err = newfd < 0 ? errno : 0;
 	if (err != EBADF) {
 		if (err)
-			ash_msg_and_raise_error("%d: %m", from);
+			ash_msg_and_raise_perror("%d", from);
 		close(from);
 		fcntl(newfd, F_SETFD, FD_CLOEXEC);
 	}
@@ -5358,77 +5387,186 @@ dup2_or_raise(int from, int to)
 	newfd = (from != to) ? dup2(from, to) : to;
 	if (newfd < 0) {
 		/* Happens when source fd is not open: try "echo >&99" */
-		ash_msg_and_raise_error("%d: %m", from);
+		ash_msg_and_raise_perror("%d", from);
 	}
 	return newfd;
 }
+static int
+fcntl_F_DUPFD(int fd, int avoid_fd)
+{
+	int newfd;
+ repeat:
+	newfd = fcntl(fd, F_DUPFD, avoid_fd + 1);
+	if (newfd < 0) {
+		if (errno == EBUSY)
+			goto repeat;
+		if (errno == EINTR)
+			goto repeat;
+	}
+	return newfd;
+}
+static int
+xdup_CLOEXEC_and_close(int fd, int avoid_fd)
+{
+	int newfd;
+ repeat:
+	newfd = fcntl(fd, F_DUPFD, avoid_fd + 1);
+	if (newfd < 0) {
+		if (errno == EBUSY)
+			goto repeat;
+		if (errno == EINTR)
+			goto repeat;
+		/* fd was not open? */
+		if (errno == EBADF)
+			return fd;
+		ash_msg_and_raise_perror("%d", newfd);
+	}
+	fcntl(newfd, F_SETFD, FD_CLOEXEC);
+	close(fd);
+	return newfd;
+}
 
 /* Struct def and variable are moved down to the first usage site */
-struct two_fd_t {
-	int orig, copy;
+struct squirrel {
+	int orig_fd;
+	int moved_to;
 };
 struct redirtab {
 	struct redirtab *next;
 	int pair_count;
-	struct two_fd_t two_fd[];
+	struct squirrel two_fd[];
 };
 #define redirlist (G_var.redirlist)
-enum {
-	COPYFD_RESTORE = (int)~(INT_MAX),
-};
 
-static int
-need_to_remember(struct redirtab *rp, int fd)
+static void
+add_squirrel_closed(struct redirtab *sq, int fd)
 {
 	int i;
 
-	if (!rp) /* remembering was not requested */
-		return 0;
+	if (!sq)
+		return;
 
-	for (i = 0; i < rp->pair_count; i++) {
-		if (rp->two_fd[i].orig == fd) {
-			/* already remembered */
-			return 0;
+	for (i = 0; sq->two_fd[i].orig_fd != EMPTY; i++) {
+		/* If we collide with an already moved fd... */
+		if (fd == sq->two_fd[i].orig_fd) {
+			/* Examples:
+			 * "echo 3>FILE 3>&- 3>FILE"
+			 * "echo 3>&- 3>FILE"
+			 * No need for last redirect to insert
+			 * another "need to close 3" indicator.
+			 */
+			TRACE(("redirect_fd %d: already moved or closed\n", fd));
+			return;
 		}
 	}
-	return 1;
+	TRACE(("redirect_fd %d: previous fd was closed\n", fd));
+	sq->two_fd[i].orig_fd = fd;
+	sq->two_fd[i].moved_to = CLOSED;
 }
 
-/* "hidden" fd is a fd used to read scripts, or a copy of such */
 static int
-is_hidden_fd(struct redirtab *rp, int fd)
+save_fd_on_redirect(int fd, int avoid_fd, struct redirtab *sq)
 {
-	int i;
-	struct parsefile *pf;
+	int i, new_fd;
 
-	if (fd == -1)
+	if (avoid_fd < 9) /* the important case here is that it can be -1 */
+		avoid_fd = 9;
+
+#if JOBS
+	if (fd == ttyfd) {
+		/* Testcase: "ls -l /proc/$$/fd 10>&-" should work */
+		ttyfd = xdup_CLOEXEC_and_close(ttyfd, avoid_fd);
+		TRACE(("redirect_fd %d: matches ttyfd, moving it to %d\n", fd, ttyfd));
+		return 1; /* "we closed fd" */
+	}
+#endif
+	/* Are we called from redirect(0)? E.g. redirect
+	 * in a forked child. No need to save fds,
+	 * we aren't going to use them anymore, ok to trash.
+	 */
+	if (!sq)
 		return 0;
-	/* Check open scripts' fds */
-	pf = g_parsefile;
-	while (pf) {
-		/* We skip pf_fd == 0 case because of the following case:
-		 * $ ash  # running ash interactively
-		 * $ . ./script.sh
-		 * and in script.sh: "exec 9>&0".
-		 * Even though top-level pf_fd _is_ 0,
-		 * it's still ok to use it: "read" builtin uses it,
-		 * why should we cripple "exec" builtin?
-		 */
-		if (pf->pf_fd > 0 && fd == pf->pf_fd) {
-			return 1;
+
+	/* If this one of script's fds? */
+	if (fd != 0) {
+		struct parsefile *pf = g_parsefile;
+		while (pf) {
+			/* We skip fd == 0 case because of the following:
+			 * $ ash  # running ash interactively
+			 * $ . ./script.sh
+			 * and in script.sh: "exec 9>&0".
+			 * Even though top-level pf_fd _is_ 0,
+			 * it's still ok to use it: "read" builtin uses it,
+			 * why should we cripple "exec" builtin?
+			 */
+			if (fd == pf->pf_fd) {
+				pf->pf_fd = xdup_CLOEXEC_and_close(fd, avoid_fd);
+				return 1; /* "we closed fd" */
+			}
+			pf = pf->prev;
 		}
-		pf = pf->prev;
 	}
 
-	if (!rp)
-		return 0;
-	/* Check saved fds of redirects */
-	fd |= COPYFD_RESTORE;
-	for (i = 0; i < rp->pair_count; i++) {
-		if (rp->two_fd[i].copy == fd) {
-			return 1;
+	/* Check whether it collides with any open fds (e.g. stdio), save fds as needed */
+
+	/* First: do we collide with some already moved fds? */
+	for (i = 0; sq->two_fd[i].orig_fd != EMPTY; i++) {
+		/* If we collide with an already moved fd... */
+		if (fd == sq->two_fd[i].moved_to) {
+			new_fd = fcntl_F_DUPFD(fd, avoid_fd);
+			sq->two_fd[i].moved_to = new_fd;
+			TRACE(("redirect_fd %d: already busy, moving to %d\n", fd, new_fd));
+			if (new_fd < 0) /* what? */
+				xfunc_die();
+			return 0; /* "we did not close fd" */
+		}
+		if (fd == sq->two_fd[i].orig_fd) {
+			/* Example: echo Hello >/dev/null 1>&2 */
+			TRACE(("redirect_fd %d: already moved\n", fd));
+			return 0; /* "we did not close fd" */
 		}
 	}
+
+	/* If this fd is open, we move and remember it; if it's closed, new_fd = CLOSED (-1) */
+	new_fd = fcntl_F_DUPFD(fd, avoid_fd);
+	TRACE(("redirect_fd %d: previous fd is moved to %d (-1 if it was closed)\n", fd, new_fd));
+	if (new_fd < 0) {
+		if (errno != EBADF)
+			xfunc_die();
+		/* new_fd = CLOSED; - already is -1 */
+	}
+	sq->two_fd[i].moved_to = new_fd;
+	sq->two_fd[i].orig_fd = fd;
+
+	/* if we move stderr, let "set -x" code know */
+	if (fd == preverrout_fd)
+		preverrout_fd = new_fd;
+
+	return 0; /* "we did not close fd" */
+}
+
+static int
+internally_opened_fd(int fd, struct redirtab *sq)
+{
+	int i;
+#if JOBS
+	if (fd == ttyfd)
+		return 1;
+#endif
+	/* If this one of script's fds? */
+	if (fd != 0) {
+		struct parsefile *pf = g_parsefile;
+		while (pf) {
+			if (fd == pf->pf_fd)
+				return 1;
+			pf = pf->prev;
+		}
+	}
+
+	if (sq)	for (i = 0; i < sq->pair_count && sq->two_fd[i].orig_fd != EMPTY; i++) {
+		if (fd == sq->two_fd[i].moved_to)
+			return 1;
+	}
 	return 0;
 }
 
@@ -5439,148 +5577,147 @@ is_hidden_fd(struct redirtab *rp, int fd
  */
 /* flags passed to redirect */
 #define REDIR_PUSH    01        /* save previous values of file descriptors */
-#define REDIR_SAVEFD2 03        /* set preverrout */
 static void
 redirect(union node *redir, int flags)
 {
 	struct redirtab *sv;
-	int sv_pos;
-	int i;
-	int fd;
-	int newfd;
-	int copied_fd2 = -1;
 
-	if (!redir) {
+	if (!redir)
 		return;
-	}
 
 	sv = NULL;
-	sv_pos = 0;
 	INT_OFF;
-	if (flags & REDIR_PUSH) {
-		union node *tmp = redir;
-		do {
-			sv_pos++;
-#if BASH_REDIR_OUTPUT
-			if (tmp->nfile.type == NTO2)
-				sv_pos++;
-#endif
-			tmp = tmp->nfile.next;
-		} while (tmp);
-		sv = ckmalloc(sizeof(*sv) + sv_pos * sizeof(sv->two_fd[0]));
-		sv->next = redirlist;
-		sv->pair_count = sv_pos;
-		redirlist = sv;
-		while (sv_pos > 0) {
-			sv_pos--;
-			sv->two_fd[sv_pos].orig = sv->two_fd[sv_pos].copy = EMPTY;
-		}
-	}
-
+	if (flags & REDIR_PUSH)
+		sv = redirlist;
 	do {
-		int right_fd = -1;
+		int fd;
+		int newfd;
+		int close_fd;
+		int closed;
+
 		fd = redir->nfile.fd;
 		if (redir->nfile.type == NTOFD || redir->nfile.type == NFROMFD) {
-			right_fd = redir->ndup.dupfd;
-			//bb_error_msg("doing %d > %d", fd, right_fd);
-			/* redirect from/to same file descriptor? */
-			if (right_fd == fd)
-				continue;
-			/* "echo >&10" and 10 is a fd opened to a sh script? */
-			if (is_hidden_fd(sv, right_fd)) {
-				errno = EBADF; /* as if it is closed */
-				ash_msg_and_raise_error("%d: %m", right_fd);
-			}
-			newfd = -1;
+			//bb_error_msg("doing %d > %d", fd, newfd);
+			newfd = redir->ndup.dupfd;
+			close_fd = -1;
 		} else {
 			newfd = openredirect(redir); /* always >= 0 */
 			if (fd == newfd) {
-				/* Descriptor wasn't open before redirect.
-				 * Mark it for close in the future */
-				if (need_to_remember(sv, fd)) {
-					goto remember_to_close;
-				}
+				/* open() gave us precisely the fd we wanted.
+				 * This means that this fd was not busy
+				 * (not opened to anywhere).
+				 * Remember to close it on restore:
+				 */
+				add_squirrel_closed(sv, fd);
 				continue;
 			}
+			close_fd = newfd;
 		}
-#if BASH_REDIR_OUTPUT
- redirect_more:
-#endif
-		if (need_to_remember(sv, fd)) {
-			/* Copy old descriptor */
-			/* Careful to not accidentally "save"
-			 * to the same fd as right side fd in N>&M */
-			int minfd = right_fd < 10 ? 10 : right_fd + 1;
-#if defined(F_DUPFD_CLOEXEC)
-			i = fcntl(fd, F_DUPFD_CLOEXEC, minfd);
-#else
-			i = fcntl(fd, F_DUPFD, minfd);
-#endif
-			if (i == -1) {
-				i = errno;
-				if (i != EBADF) {
-					/* Strange error (e.g. "too many files" EMFILE?) */
-					if (newfd >= 0)
-						close(newfd);
-					errno = i;
-					ash_msg_and_raise_error("%d: %m", fd);
-					/* NOTREACHED */
-				}
-				/* EBADF: it is not open - good, remember to close it */
- remember_to_close:
-				i = CLOSED;
-			} else { /* fd is open, save its copy */
-#if !defined(F_DUPFD_CLOEXEC)
-				fcntl(i, F_SETFD, FD_CLOEXEC);
-#endif
-				/* "exec fd>&-" should not close fds
-				 * which point to script file(s).
-				 * Force them to be restored afterwards */
-				if (is_hidden_fd(sv, fd))
-					i |= COPYFD_RESTORE;
-			}
-			if (fd == 2)
-				copied_fd2 = i;
-			sv->two_fd[sv_pos].orig = fd;
-			sv->two_fd[sv_pos].copy = i;
-			sv_pos++;
-		}
-		if (newfd < 0) {
-			/* NTOFD/NFROMFD: copy redir->ndup.dupfd to fd */
-			if (redir->ndup.dupfd < 0) { /* "fd>&-" */
-				/* Don't want to trigger debugging */
-				if (fd != -1)
-					close(fd);
-			} else {
-				dup2_or_raise(redir->ndup.dupfd, fd);
+
+		if (fd == newfd)
+			continue;
+
+		/* if "N>FILE": move newfd to fd */
+		/* if "N>&M": dup newfd to fd */
+		/* if "N>&-": close fd (newfd is -1) */
+
+ IF_BASH_REDIR_OUTPUT(redirect_more:)
+
+		closed = save_fd_on_redirect(fd, /*avoid:*/ newfd, sv);
+		if (newfd == -1) {
+			/* "N>&-" means "close me" */
+			if (!closed) {
+				/* ^^^ optimization: saving may already
+				 * have closed it. If not... */
+				close(fd);
+			}
+		} else {
+			/* if newfd is a script fd or saved fd, simulate EBADF */
+			if (internally_opened_fd(newfd, sv)) {
+				errno = EBADF;
+				ash_msg_and_raise_perror("%d", newfd);
 			}
-		} else if (fd != newfd) { /* move newfd to fd */
 			dup2_or_raise(newfd, fd);
+			if (close_fd >= 0) /* "N>FILE" or ">&FILE" or heredoc? */
+				close(close_fd);
 #if BASH_REDIR_OUTPUT
-			if (!(redir->nfile.type == NTO2 && fd == 2))
+			if (redir->nfile.type == NTO2 && fd == 1) {
+				/* ">&FILE". we already redirected to 1, now copy 1 to 2 */
+				fd = 2;
+				newfd = 1;
+				close_fd = -1;
+				goto redirect_more;
+			}
 #endif
-				close(newfd);
 		}
+	} while ((redir = redir->nfile.next) != NULL);
+	INT_ON;
+
+//dash:#define REDIR_SAVEFD2 03        /* set preverrout */
+#define REDIR_SAVEFD2 0
+	// dash has a bug: since REDIR_SAVEFD2=3 and REDIR_PUSH=1, this test
+	// triggers for pure REDIR_PUSH too. Thus, this is done almost always,
+	// not only for calls with flags containing REDIR_SAVEFD2.
+	// We do this unconditionally (see save_fd_on_redirect()).
+	//if ((flags & REDIR_SAVEFD2) && copied_fd2 >= 0)
+	//	preverrout_fd = copied_fd2;
+}
+
+static int
+redirectsafe(union node *redir, int flags)
+{
+	int err;
+	volatile int saveint;
+	struct jmploc *volatile savehandler = exception_handler;
+	struct jmploc jmploc;
+
+	SAVE_INT(saveint);
+	/* "echo 9>/dev/null; echo >&9; echo result: $?" - result should be 1, not 2! */
+	err = setjmp(jmploc.loc); /* was = setjmp(jmploc.loc) * 2; */
+	if (!err) {
+		exception_handler = &jmploc;
+		redirect(redir, flags);
+	}
+	exception_handler = savehandler;
+	if (err && exception_type != EXERROR)
+		longjmp(exception_handler->loc, 1);
+	RESTORE_INT(saveint);
+	return err;
+}
+
+static struct redirtab*
+pushredir(union node *redir)
+{
+	struct redirtab *sv;
+	int i;
+
+	if (!redir)
+		return redirlist;
+
+	i = 0;
+	do {
+		i++;
 #if BASH_REDIR_OUTPUT
-		if (redir->nfile.type == NTO2 && fd == 1) {
-			/* We already redirected it to fd 1, now copy it to 2 */
-			newfd = 1;
-			fd = 2;
-			goto redirect_more;
-		}
+		if (redir->nfile.type == NTO2)
+			i++;
 #endif
-	} while ((redir = redir->nfile.next) != NULL);
+		redir = redir->nfile.next;
+	} while (redir);
 
-	INT_ON;
-	if ((flags & REDIR_SAVEFD2) && copied_fd2 >= 0)
-		preverrout_fd = copied_fd2;
+	sv = ckzalloc(sizeof(*sv) + i * sizeof(sv->two_fd[0]));
+	sv->pair_count = i;
+	while (--i >= 0)
+		sv->two_fd[i].orig_fd = sv->two_fd[i].moved_to = EMPTY;
+	sv->next = redirlist;
+	redirlist = sv;
+	return sv->next;
 }
 
 /*
  * Undo the effects of the last redirection.
  */
 static void
-popredir(int drop, int restore)
+popredir(int drop)
 {
 	struct redirtab *rp;
 	int i;
@@ -5590,20 +5727,19 @@ popredir(int drop, int restore)
 	INT_OFF;
 	rp = redirlist;
 	for (i = 0; i < rp->pair_count; i++) {
-		int fd = rp->two_fd[i].orig;
-		int copy = rp->two_fd[i].copy;
+		int fd = rp->two_fd[i].orig_fd;
+		int copy = rp->two_fd[i].moved_to;
 		if (copy == CLOSED) {
 			if (!drop)
 				close(fd);
 			continue;
 		}
 		if (copy != EMPTY) {
-			if (!drop || (restore && (copy & COPYFD_RESTORE))) {
-				copy &= ~COPYFD_RESTORE;
+			if (!drop) {
 				/*close(fd);*/
 				dup2_or_raise(copy, fd);
 			}
-			close(copy & ~COPYFD_RESTORE);
+			close(copy);
 		}
 	}
 	redirlist = rp->next;
@@ -5611,30 +5747,11 @@ popredir(int drop, int restore)
 	INT_ON;
 }
 
-/*
- * Undo all redirections.  Called on error or interrupt.
- */
-
-static int
-redirectsafe(union node *redir, int flags)
+static void
+unwindredir(struct redirtab *stop)
 {
-	int err;
-	volatile int saveint;
-	struct jmploc *volatile savehandler = exception_handler;
-	struct jmploc jmploc;
-
-	SAVE_INT(saveint);
-	/* "echo 9>/dev/null; echo >&9; echo result: $?" - result should be 1, not 2! */
-	err = setjmp(jmploc.loc); // huh?? was = setjmp(jmploc.loc) * 2;
-	if (!err) {
-		exception_handler = &jmploc;
-		redirect(redir, flags);
-	}
-	exception_handler = savehandler;
-	if (err && exception_type != EXERROR)
-		longjmp(exception_handler->loc, 1);
-	RESTORE_INT(saveint);
-	return err;
+	while (redirlist != stop)
+		popredir(/*drop:*/ 0);
 }
 
 
@@ -5697,7 +5814,7 @@ ash_arith(const char *s)
 #define RMESCAPE_SLASH  0x20    /* Stop globbing after slash */
 
 /* Add CTLESC when necessary. */
-#define QUOTES_ESC     (EXP_FULL | EXP_CASE | EXP_QPAT | EXP_REDIR)
+#define QUOTES_ESC     (EXP_FULL | EXP_CASE | EXP_QPAT)
 /* Do not skip NUL characters. */
 #define QUOTES_KEEPNUL EXP_TILDE
 
@@ -5730,19 +5847,20 @@ static struct arglist exparg;
 
 /*
  * Our own itoa().
+ * cvtnum() is used even if math support is off (to prepare $? values and such).
  */
-#if !ENABLE_FEATURE_SH_MATH
-/* cvtnum() is used even if math support is off (to prepare $? values and such) */
-typedef long arith_t;
-# define ARITH_FMT "%ld"
-#endif
 static int
 cvtnum(arith_t num)
 {
 	int len;
 
-	expdest = makestrspace(sizeof(arith_t)*3 + 2, expdest);
-	len = fmtstr(expdest, sizeof(arith_t)*3 + 2, ARITH_FMT, num);
+	/* 32-bit and wider ints require buffer size of bytes*3 (or less) */
+	len = sizeof(arith_t) * 3;
+	/* If narrower: worst case, 1-byte ints: need 5 bytes: "-127<NUL>" */
+	if (sizeof(arith_t) < 4) len += 2;
+
+	expdest = makestrspace(len, expdest);
+	len = fmtstr(expdest, len, ARITH_FMT, num);
 	STADJUST(len, expdest);
 	return len;
 }
@@ -5909,7 +6027,7 @@ rmescapes(char *str, int flag)
 		}
 		q = r;
 		if (len > 0) {
-			q = (char *)memcpy(q, str, len) + len;
+			q = (char *)mempcpy(q, str, len);
 		}
 	}
 
@@ -5919,6 +6037,7 @@ rmescapes(char *str, int flag)
 	while (*p) {
 		if ((unsigned char)*p == CTLQUOTEMARK) {
 // Note: both inquotes and protect_against_glob only affect whether
+// CTLESC,<ch> gets converted to <ch> or to \<ch>
 			inquotes = ~inquotes;
 			p++;
 			protect_against_glob = globbing;
@@ -5931,7 +6050,33 @@ rmescapes(char *str, int flag)
 				ash_msg_and_raise_error("CTLESC at EOL (shouldn't happen)");
 #endif
 			if (protect_against_glob) {
-				*q++ = '\\';
+				/*
+				 * We used to trust glob() and fnmatch() to eat
+				 * superfluous escapes (\z where z has no
+				 * special meaning anyway). But this causes
+				 * bugs such as string of one greek letter rho
+				 * (unicode-encoded as two bytes "cf,81")
+				 * getting encoded as "cf,CTLESC,81"
+				 * and here, converted to "cf,\,81" -
+				 * which does not go well with some flavors
+				 * of fnmatch() in unicode locales
+				 * (for example, glibc <= 2.22).
+				 *
+				 * Lets add "\" only on the chars which need it.
+				 * Testcases for less obvious chars are shown.
+				 */
+				if (*p == '*'
+				 || *p == '?'
+				 || *p == '['
+				 || *p == '\\' /* case '\' in \\ ) echo ok;; *) echo WRONG;; esac */
+				 || *p == ']' /* case ']' in [a\]] ) echo ok;; *) echo WRONG;; esac */
+				 || *p == '-' /* case '-' in [a\-c]) echo ok;; *) echo WRONG;; esac */
+				 || *p == '!' /* case '!' in [\!] ) echo ok;; *) echo WRONG;; esac */
+				/* Some libc support [^negate], that's why "^" also needs love */
+				 || *p == '^' /* case '^' in [\^] ) echo ok;; *) echo WRONG;; esac */
+				) {
+					*q++ = '\\';
+				}
 			}
 		} else if (*p == '\\' && !inquotes) {
 			/* naked back slash */
@@ -6134,9 +6279,24 @@ struct backcmd {                /* resul
 };
 
 /* These forward decls are needed to use "eval" code for backticks handling: */
-#define EV_EXIT 01              /* exit after evaluating tree */
+/* flags in argument to evaltree */
+#define EV_EXIT    01           /* exit after evaluating tree */
+#define EV_TESTED  02           /* exit status is checked; ignore -e flag */
 static int evaltree(union node *, int);
 
+/* An evaltree() which is known to never return.
+ * Used to use an alias:
+ * static int evaltreenr(union node *, int) __attribute__((alias("evaltree"),__noreturn__));
+ * but clang was reported to "transfer" noreturn-ness to evaltree() as well.
+ */
+static ALWAYS_INLINE NORETURN void
+evaltreenr(union node *n, int flags)
+{
+	evaltree(n, flags);
+	bb_unreachable(abort());
+	/* NOTREACHED */
+}
+
 static void FAST_FUNC
 evalbackcmd(union node *n, struct backcmd *result)
 {
@@ -6152,7 +6312,7 @@ evalbackcmd(union node *n, struct backcm
 	}
 
 	if (pipe(pip) < 0)
-		ash_msg_and_raise_error("pipe call failed");
+		ash_msg_and_raise_perror("can't create pipe");
 	jp = makejob(/*n,*/ 1);
 	if (forkshell(jp, n, FORK_NOJOB) == 0) {
 		/* child */
@@ -6173,7 +6333,7 @@ evalbackcmd(union node *n, struct backcm
  */
 		eflag = 0;
 		ifsfree();
-		evaltree(n, EV_EXIT); /* actually evaltreenr... */
+		evaltreenr(n, EV_EXIT);
 		/* NOTREACHED */
 	}
 	/* parent */
@@ -6304,19 +6464,15 @@ expari(int flag)
 #endif
 
 /* argstr needs it */
-static char *evalvar(char *p, int flags, struct strlist *var_str_list);
+static char *evalvar(char *p, int flags);
 
 /*
  * Perform variable and command substitution.  If EXP_FULL is set, output CTLESC
  * characters to allow for further processing.  Otherwise treat
  * $@ like $* since no splitting will be performed.
- *
- * var_str_list (can be NULL) is a list of "VAR=val" strings which take precedence
- * over shell variables. Needed for "A=a B=$A; echo $B" case - we use it
- * for correct expansion of "B=$A" word.
  */
 static void
-argstr(char *p, int flags, struct strlist *var_str_list)
+argstr(char *p, int flags)
 {
 	static const char spclchars[] ALIGN1 = {
 		'=',
@@ -6409,7 +6565,7 @@ argstr(char *p, int flags, struct strlis
 			inquotes ^= EXP_QUOTED;
 			/* "$@" syntax adherence hack */
 			if (inquotes && !memcmp(p, dolatstr + 1, DOLATSTRLEN - 1)) {
-				p = evalvar(p + 1, flags | inquotes, /* var_str_list: */ NULL) + 1;
+				p = evalvar(p + 1, flags | inquotes) + 1;
 				goto start;
 			}
  addquote:
@@ -6435,7 +6591,7 @@ argstr(char *p, int flags, struct strlis
 			goto addquote;
 		case CTLVAR:
 			TRACE(("argstr: evalvar('%s')\n", p));
-			p = evalvar(p, flags | inquotes, var_str_list);
+			p = evalvar(p, flags | inquotes);
 			TRACE(("argstr: evalvar:'%s'\n", (char *)stackblock()));
 			goto start;
 		case CTLBACKQ:
@@ -6577,7 +6733,7 @@ varunset(const char *end, const char *va
 
 static const char *
 subevalvar(char *p, char *varname, int strloc, int subtype,
-		int startloc, int varflags, int flag, struct strlist *var_str_list)
+		int startloc, int varflags, int flag)
 {
 	struct nodelist *saveargbackq = argbackq;
 	int quotes = flag & QUOTES_ESC;
@@ -6585,7 +6741,6 @@ subevalvar(char *p, char *varname, int s
 	char *loc;
 	char *rmesc, *rmescend;
 	char *str;
-	IF_BASH_SUBSTR(int pos, len, orig_len;)
 	int amount, resetloc;
 	IF_BASH_PATTERN_SUBST(int workloc;)
 	IF_BASH_PATTERN_SUBST(char *repl = NULL;)
@@ -6596,8 +6751,8 @@ subevalvar(char *p, char *varname, int s
 	//		p, varname, strloc, subtype, startloc, varflags, quotes);
 
 	argstr(p, EXP_TILDE | (subtype != VSASSIGN && subtype != VSQUESTION ?
-			(flag & (EXP_QUOTED | EXP_QPAT) ? EXP_QPAT : EXP_CASE) : 0),
-			var_str_list);
+			(flag & (EXP_QUOTED | EXP_QPAT) ? EXP_QPAT : EXP_CASE) : 0)
+	);
 	STPUTC('\0', expdest);
 	argbackq = saveargbackq;
 	startp = (char *)stackblock() + startloc;
@@ -6614,14 +6769,23 @@ subevalvar(char *p, char *varname, int s
 		/* NOTREACHED */
 
 #if BASH_SUBSTR
-	case VSSUBSTR:
-//TODO: support more general format ${v:EXPR:EXPR},
-// where EXPR follows $(()) rules
+	case VSSUBSTR: {
+		int pos, len, orig_len;
+		char *colon;
+
 		loc = str = stackblock() + strloc;
+
+# if !ENABLE_FEATURE_SH_MATH
+#  define ash_arith number
+# endif
 		/* Read POS in ${var:POS:LEN} */
-		pos = atoi(loc); /* number(loc) errors out on "1:4" */
-		len = str - startp - 1;
+		colon = strchr(loc, ':');
+		if (colon) *colon = '\0';
+		pos = ash_arith(loc);
+		if (colon) *colon = ':';
 
+		/* Read LEN in ${var:POS:LEN} */
+		len = str - startp - 1;
 		/* *loc != '\0', guaranteed by parser */
 		if (quotes) {
 			char *ptr;
@@ -6635,25 +6799,21 @@ subevalvar(char *p, char *varname, int s
 			}
 		}
 		orig_len = len;
-
 		if (*loc++ == ':') {
 			/* ${var::LEN} */
-			len = number(loc);
+			len = ash_arith(loc);
 		} else {
 			/* Skip POS in ${var:POS:LEN} */
 			len = orig_len;
 			while (*loc && *loc != ':') {
-				/* TODO?
-				 * bash complains on: var=qwe; echo ${var:1a:123}
-				if (!isdigit(*loc))
-					ash_msg_and_raise_error(msg_illnum, str);
-				 */
 				loc++;
 			}
 			if (*loc++ == ':') {
-				len = number(loc);
+				len = ash_arith(loc);
 			}
 		}
+#  undef ash_arith
+
 		if (pos < 0) {
 			/* ${VAR:$((-n)):l} starts n chars from the end */
 			pos = orig_len + pos;
@@ -6661,12 +6821,16 @@ subevalvar(char *p, char *varname, int s
 		if ((unsigned)pos >= orig_len) {
 			/* apart from obvious ${VAR:999999:l},
 			 * covers ${VAR:$((-9999999)):l} - result is ""
-			 * (bash-compat)
+			 * (bash compat)
 			 */
 			pos = 0;
 			len = 0;
 		}
-		if (len > (orig_len - pos))
+		if (len < 0) {
+			/* ${VAR:N:-M} sets LEN to strlen()-M */
+			len = (orig_len - pos) + len;
+		}
+		if ((unsigned)len > (orig_len - pos))
 			len = orig_len - pos;
 
 		for (str = startp; pos; str++, pos--) {
@@ -6682,6 +6846,7 @@ subevalvar(char *p, char *varname, int s
 		amount = loc - expdest;
 		STADJUST(amount, expdest);
 		return loc;
+	}
 #endif /* BASH_SUBSTR */
 	}
 
@@ -6726,6 +6891,7 @@ subevalvar(char *p, char *varname, int s
 #if BASH_PATTERN_SUBST
 	workloc = expdest - (char *)stackblock();
 	if (subtype == VSREPLACE || subtype == VSREPLACEALL) {
+		int len;
 		char *idx, *end;
 
 		if (!repl) {
@@ -6863,7 +7029,7 @@ subevalvar(char *p, char *varname, int s
  * ash -c 'echo ${#1#}'  name:'1=#'
  */
 static NOINLINE ssize_t
-varvalue(char *name, int varflags, int flags, struct strlist *var_str_list, int *quotedp)
+varvalue(char *name, int varflags, int flags, int *quotedp)
 {
 	const char *p;
 	int num;
@@ -6955,31 +7121,6 @@ varvalue(char *name, int varflags, int f
 		goto value;
 	default:
 		/* NB: name has form "VAR=..." */
-
-		/* "A=a B=$A" case: var_str_list is a list of "A=a" strings
-		 * which should be considered before we check variables. */
-		if (var_str_list) {
-			unsigned name_len = (strchrnul(name, '=') - name) + 1;
-			p = NULL;
-			do {
-				char *str, *eq;
-				str = var_str_list->text;
-				eq = strchr(str, '=');
-				if (!eq) /* stop at first non-assignment */
-					break;
-				eq++;
-				if (name_len == (unsigned)(eq - str)
-				 && strncmp(str, name, name_len) == 0
-				) {
-					p = eq;
-					/* goto value; - WRONG! */
-					/* think "A=1 A=2 B=$A" */
-				}
-				var_str_list = var_str_list->next;
-			} while (var_str_list);
-			if (p)
-				goto value;
-		}
 		p = lookupvar(name);
  value:
 		if (!p)
@@ -7009,7 +7150,7 @@ varvalue(char *name, int varflags, int f
  * input string.
  */
 static char *
-evalvar(char *p, int flag, struct strlist *var_str_list)
+evalvar(char *p, int flag)
 {
 	char varflags;
 	char subtype;
@@ -7033,7 +7174,7 @@ evalvar(char *p, int flag, struct strlis
 	p = strchr(p, '=') + 1; //TODO: use var_end(p)?
 
  again:
-	varlen = varvalue(var, varflags, flag, var_str_list, &quoted);
+	varlen = varvalue(var, varflags, flag, &quoted);
 	if (varflags & VSNUL)
 		varlen--;
 
@@ -7047,8 +7188,7 @@ evalvar(char *p, int flag, struct strlis
 		if (varlen < 0) {
 			argstr(
 				p,
-				flag | EXP_TILDE | EXP_WORD,
-				var_str_list
+				flag | EXP_TILDE | EXP_WORD
 			);
 			goto end;
 		}
@@ -7060,7 +7200,7 @@ evalvar(char *p, int flag, struct strlis
 			goto record;
 
 		subevalvar(p, var, 0, subtype, startloc, varflags,
-			   flag & ~QUOTES_ESC, var_str_list);
+			   flag & ~QUOTES_ESC);
 		varflags &= ~VSNUL;
 		/*
 		 * Remove any recorded regions beyond
@@ -7113,7 +7253,7 @@ evalvar(char *p, int flag, struct strlis
 		STPUTC('\0', expdest);
 		patloc = expdest - (char *)stackblock();
 		if (NULL == subevalvar(p, /* varname: */ NULL, patloc, subtype,
-				startloc, varflags, flag, var_str_list)) {
+				startloc, varflags, flag)) {
 			int amount = expdest - (
 				(char *)stackblock() + patloc - 1
 			);
@@ -7537,8 +7677,7 @@ expandarg(union node *arg, struct arglis
 	argbackq = arg->narg.backquote;
 	STARTSTACKSTR(expdest);
 	TRACE(("expandarg: argstr('%s',flags:%x)\n", arg->narg.text, flag));
-	argstr(arg->narg.text, flag,
-			/* var_str_list: */ arglist ? arglist->list : NULL);
+	argstr(arg->narg.text, flag);
 	p = _STPUTC('\0', expdest);
 	expdest = p - 1;
 	if (arglist == NULL) {
@@ -7557,10 +7696,6 @@ expandarg(union node *arg, struct arglis
 		exparg.lastp = &exparg.list;
 		expandmeta(exparg.list /*, flag*/);
 	} else {
-		if (flag & EXP_REDIR) { /*XXX - for now, just remove escapes */
-			rmescapes(p, 0);
-			TRACE(("expandarg: rmescapes:'%s'\n", p));
-		}
 		sp = stzalloc(sizeof(*sp));
 		sp->text = p;
 		*exparg.lastp = sp;
@@ -7592,7 +7727,10 @@ expandhere(union node *arg, int fd)
 static int
 patmatch(char *pattern, const char *string)
 {
-	return pmatch(preglob(pattern, 0), string);
+	char *p = preglob(pattern, 0);
+	int r = pmatch(p, string);
+	//bb_error_msg("!fnmatch(pattern:'%s',str:'%s',0):%d", p, string, r);
+	return r;
 }
 
 /*
@@ -7607,8 +7745,7 @@ casematch(union node *pattern, char *val
 	setstackmark(&smark);
 	argbackq = pattern->narg.backquote;
 	STARTSTACKSTR(expdest);
-	argstr(pattern->narg.text, EXP_TILDE | EXP_CASE,
-			/* var_str_list: */ NULL);
+	argstr(pattern->narg.text, EXP_TILDE | EXP_CASE);
 	STACKSTRNUL(expdest);
 	ifsfree();
 	result = patmatch(stackblock(), val);
@@ -7686,7 +7823,7 @@ static int builtinloc = -1;     /* index
 
 
 static void
-tryexec(IF_FEATURE_SH_STANDALONE(int applet_no,) char *cmd, char **argv, char **envp)
+tryexec(IF_FEATURE_SH_STANDALONE(int applet_no,) const char *cmd, char **argv, char **envp)
 {
 #if ENABLE_FEATURE_SH_STANDALONE
 	if (applet_no >= 0) {
@@ -7694,7 +7831,8 @@ tryexec(IF_FEATURE_SH_STANDALONE(int app
 			clearenv();
 			while (*envp)
 				putenv(*envp++);
-			run_applet_no_and_exit(applet_no, cmd, argv);
+			popredir(/*drop:*/ 1);
+			run_noexec_applet_and_exit(applet_no, cmd, argv);
 		}
 		/* re-exec ourselves with the new arguments */
 		execve(bb_busybox_exec_path, argv, envp);
@@ -7711,7 +7849,7 @@ tryexec(IF_FEATURE_SH_STANDALONE(int app
 #else
 	execve(cmd, argv, envp);
 #endif
-	if (cmd != (char*) bb_busybox_exec_path && errno == ENOEXEC) {
+	if (cmd != bb_busybox_exec_path && errno == ENOEXEC) {
 		/* Run "cmd" as a shell script:
 		 * http://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html
 		 * "If the execve() function fails with ENOEXEC, the shell
@@ -7728,8 +7866,8 @@ tryexec(IF_FEATURE_SH_STANDALONE(int app
 		 * message and exit code 126. For one, this prevents attempts
 		 * to interpret foreign ELF binaries as shell scripts.
 		 */
-		argv[0] = cmd;
-		cmd = (char*) bb_busybox_exec_path;
+		argv[0] = (char*) cmd;
+		cmd = bb_busybox_exec_path;
 		/* NB: this is only possible because all callers of shellexec()
 		 * ensure that the argv[-1] slot exists!
 		 */
@@ -7753,7 +7891,7 @@ static void shellexec(char *prog, char *
 	int exerrno;
 	int applet_no = -1; /* used only by FEATURE_SH_STANDALONE */
 
-	envp = listvars(VEXPORT, VUNSET, /*end:*/ NULL);
+	envp = listvars(VEXPORT, VUNSET, /*strlist:*/ NULL, /*end:*/ NULL);
 	if (strchr(prog, '/') != NULL
 #if ENABLE_FEATURE_SH_STANDALONE
 	 || (applet_no = find_applet_by_name(prog)) >= 0
@@ -8343,10 +8481,6 @@ commandcmd(int argc UNUSED_PARAM, char *
 static void *funcblock;         /* block to allocate function from */
 static char *funcstring_end;    /* end of block to allocate strings from */
 
-/* flags in argument to evaltree */
-#define EV_EXIT    01           /* exit after evaluating tree */
-#define EV_TESTED  02           /* exit status is checked; ignore -e flag */
-
 static const uint8_t nodesize[N_NUMBER] ALIGN1 = {
 	[NCMD     ] = SHELL_ALIGN(sizeof(struct ncmd)),
 	[NPIPE    ] = SHELL_ALIGN(sizeof(struct npipe)),
@@ -8730,12 +8864,13 @@ evaltree(union node *n, int flags)
 		goto setstatus;
 	case NREDIR:
 		expredir(n->nredir.redirect);
+		pushredir(n->nredir.redirect);
 		status = redirectsafe(n->nredir.redirect, REDIR_PUSH);
 		if (!status) {
 			status = evaltree(n->nredir.n, flags & EV_TESTED);
 		}
 		if (n->nredir.redirect)
-			popredir(/*drop:*/ 0, /*restore:*/ 0 /* not sure */);
+			popredir(/*drop:*/ 0);
 		goto setstatus;
 	case NCMD:
 		evalfn = evalcommand;
@@ -8823,11 +8958,6 @@ evaltree(union node *n, int flags)
 	return exitstatus;
 }
 
-#if !defined(__alpha__) || (defined(__GNUC__) && __GNUC__ >= 3)
-static
-#endif
-int evaltreenr(union node *, int) __attribute__ ((alias("evaltree"),__noreturn__));
-
 static int
 skiploop(void)
 {
@@ -9074,7 +9204,7 @@ evalpipe(union node *n, int flags)
 		if (lp->next) {
 			if (pipe(pip) < 0) {
 				close(prevfd);
-				ash_msg_and_raise_error("pipe call failed");
+				ash_msg_and_raise_perror("can't create pipe");
 			}
 		}
 		if (forkshell(jp, lp->n, n->npipe.pipe_backgnd) == 0) {
@@ -9162,27 +9292,57 @@ optschanged(void)
 #endif
 }
 
-static struct localvar *localvars;
+struct localvar_list {
+	struct localvar_list *next;
+	struct localvar *lv;
+};
+
+static struct localvar_list *localvar_stack;
 
 /*
  * Called after a function returns.
  * Interrupts must be off.
  */
 static void
-poplocalvars(void)
+poplocalvars(int keep)
 {
-	struct localvar *lvp;
+	struct localvar_list *ll;
+	struct localvar *lvp, *next;
 	struct var *vp;
 
-	while ((lvp = localvars) != NULL) {
-		localvars = lvp->next;
+	INT_OFF;
+	ll = localvar_stack;
+	localvar_stack = ll->next;
+
+	next = ll->lv;
+	free(ll);
+
+	while ((lvp = next) != NULL) {
+		next = lvp->next;
 		vp = lvp->vp;
 		TRACE(("poplocalvar %s\n", vp ? vp->var_text : "-"));
-		if (vp == NULL) {       /* $- saved */
+		if (keep) {
+			int bits = VSTRFIXED;
+
+			if (lvp->flags != VUNSET) {
+				if (vp->var_text == lvp->text)
+					bits |= VTEXTFIXED;
+				else if (!(lvp->flags & (VTEXTFIXED|VSTACK)))
+					free((char*)lvp->text);
+			}
+
+			vp->flags &= ~bits;
+			vp->flags |= (lvp->flags & bits);
+
+			if ((vp->flags &
+			     (VEXPORT|VREADONLY|VSTRFIXED|VUNSET)) == VUNSET)
+				unsetvar(vp->var_text);
+		} else if (vp == NULL) {	/* $- saved */
 			memcpy(optlist, lvp->text, sizeof(optlist));
 			free((char*)lvp->text);
 			optschanged();
-		} else if ((lvp->flags & (VUNSET|VSTRFIXED)) == VUNSET) {
+		} else if (lvp->flags == VUNSET) {
+			vp->flags &= ~(VSTRFIXED|VREADONLY);
 			unsetvar(vp->var_text);
 		} else {
 			if (vp->var_func)
@@ -9194,19 +9354,43 @@ poplocalvars(void)
 		}
 		free(lvp);
 	}
+	INT_ON;
+}
+
+/*
+ * Create a new localvar environment.
+ */
+static struct localvar_list *
+pushlocalvars(void)
+{
+	struct localvar_list *ll;
+
+	INT_OFF;
+	ll = ckzalloc(sizeof(*ll));
+	/*ll->lv = NULL; - zalloc did it */
+	ll->next = localvar_stack;
+	localvar_stack = ll;
+	INT_ON;
+
+	return ll->next;
+}
+
+static void
+unwindlocalvars(struct localvar_list *stop)
+{
+	while (localvar_stack != stop)
+		poplocalvars(0);
 }
 
 static int
 evalfun(struct funcnode *func, int argc, char **argv, int flags)
 {
 	volatile struct shparam saveparam;
-	struct localvar *volatile savelocalvars;
 	struct jmploc *volatile savehandler;
 	struct jmploc jmploc;
 	int e;
 
 	saveparam = shellparam;
-	savelocalvars = localvars;
 	savehandler = exception_handler;
 	e = setjmp(jmploc.loc);
 	if (e) {
@@ -9214,7 +9398,6 @@ evalfun(struct funcnode *func, int argc,
 	}
 	INT_OFF;
 	exception_handler = &jmploc;
-	localvars = NULL;
 	shellparam.malloced = 0;
 	func->count++;
 	funcnest++;
@@ -9225,13 +9408,13 @@ evalfun(struct funcnode *func, int argc,
 	shellparam.optind = 1;
 	shellparam.optoff = -1;
 #endif
+	pushlocalvars();
 	evaltree(func->n.narg.next, flags & EV_TESTED);
+	poplocalvars(0);
  funcdone:
 	INT_OFF;
 	funcnest--;
 	freefunc(func);
-	poplocalvars();
-	localvars = savelocalvars;
 	freeparam(&shellparam);
 	shellparam = saveparam;
 	exception_handler = savehandler;
@@ -9260,7 +9443,7 @@ mklocal(char *name)
 	 * x=0; f() { local x=1; echo $x; local x; echo $x; }; f; echo $x
 	 * x=0; f() { local x=1; echo $x; local x=2; echo $x; }; f; echo $x
 	 */
-	lvp = localvars;
+	lvp = localvar_stack->lv;
 	while (lvp) {
 		if (lvp->vp && varcmp(lvp->vp->var_text, name) == 0) {
 			if (eq)
@@ -9285,10 +9468,9 @@ mklocal(char *name)
 		if (vp == NULL) {
 			/* variable did not exist yet */
 			if (eq)
-				setvareq(name, VSTRFIXED);
+				vp = setvareq(name, VSTRFIXED);
 			else
-				setvar(name, NULL, VSTRFIXED);
-			vp = *vpp;      /* the new variable */
+				vp = setvar(name, NULL, VSTRFIXED);
 			lvp->flags = VUNSET;
 		} else {
 			lvp->text = vp->var_text;
@@ -9305,8 +9487,8 @@ mklocal(char *name)
 		}
 	}
 	lvp->vp = vp;
-	lvp->next = localvars;
-	localvars = lvp;
+	lvp->next = localvar_stack->lv;
+	localvar_stack->lv = lvp;
  ret:
 	INT_ON;
 }
@@ -9319,7 +9501,7 @@ localcmd(int argc UNUSED_PARAM, char **a
 {
 	char *name;
 
-	if (!funcnest)
+	if (!localvar_stack)
 		ash_msg_and_raise_error("not in a function");
 
 	argv = argptr;
@@ -9488,7 +9670,7 @@ static const struct builtincmd builtinta
 #if ENABLE_FEATURE_SH_MATH
 	{ BUILTIN_NOSPEC        "let"     , letcmd     },
 #endif
-	{ BUILTIN_ASSIGN        "local"   , localcmd   },
+	{ BUILTIN_SPEC_REG_ASSG "local"   , localcmd   },
 #if ENABLE_ASH_PRINTF
 	{ BUILTIN_REGULAR       "printf"  , printfcmd  },
 #endif
@@ -9577,6 +9759,8 @@ evalcommand(union node *cmd, int flags)
 	static const struct builtincmd null_bltin = {
 		"\0\0", bltincmd /* why three NULs? */
 	};
+	struct localvar_list *localvar_stop;
+	struct redirtab *redir_stop;
 	struct stackmark smark;
 	union node *argp;
 	struct arglist arglist;
@@ -9591,13 +9775,12 @@ evalcommand(union node *cmd, int flags)
 	int spclbltin;
 	int status;
 	char **nargv;
-	struct builtincmd *bcmd;
 	smallint cmd_is_exec;
-	smallint pseudovarflag = 0;
 
 	/* First expand the arguments. */
 	TRACE(("evalcommand(0x%lx, %d) called\n", (long)cmd, flags));
 	setstackmark(&smark);
+	localvar_stop = pushlocalvars();
 	back_exitstatus = 0;
 
 	cmdentry.cmdtype = CMDBUILTIN;
@@ -9609,21 +9792,24 @@ evalcommand(union node *cmd, int flags)
 
 	argc = 0;
 	if (cmd->ncmd.args) {
+		struct builtincmd *bcmd;
+		smallint pseudovarflag;
+
 		bcmd = find_builtin(cmd->ncmd.args->narg.text);
 		pseudovarflag = bcmd && IS_BUILTIN_ASSIGN(bcmd);
-	}
 
-	for (argp = cmd->ncmd.args; argp; argp = argp->narg.next) {
-		struct strlist **spp;
+		for (argp = cmd->ncmd.args; argp; argp = argp->narg.next) {
+			struct strlist **spp;
 
-		spp = arglist.lastp;
-		if (pseudovarflag && isassignment(argp->narg.text))
-			expandarg(argp, &arglist, EXP_VARTILDE);
-		else
-			expandarg(argp, &arglist, EXP_FULL | EXP_TILDE);
+			spp = arglist.lastp;
+			if (pseudovarflag && isassignment(argp->narg.text))
+				expandarg(argp, &arglist, EXP_VARTILDE);
+			else
+				expandarg(argp, &arglist, EXP_FULL | EXP_TILDE);
 
-		for (sp = *spp; sp; sp = sp->next)
-			argc++;
+			for (sp = *spp; sp; sp = sp->next)
+				argc++;
+		}
 	}
 
 	/* Reserve one extra spot at the front for shellexec. */
@@ -9639,8 +9825,18 @@ evalcommand(union node *cmd, int flags)
 	if (iflag && funcnest == 0 && argc > 0)
 		lastarg = nargv[-1];
 
-	preverrout_fd = 2;
 	expredir(cmd->ncmd.redirect);
+	redir_stop = pushredir(cmd->ncmd.redirect);
+	preverrout_fd = 2;
+	if (BASH_XTRACEFD && xflag) {
+		/* NB: bash closes fd == $BASH_XTRACEFD when it is changed.
+		 * we do not emulate this. We only use its value.
+		 */
+		const char *xtracefd = lookupvar("BASH_XTRACEFD");
+		if (xtracefd && is_number(xtracefd))
+			preverrout_fd = atoi(xtracefd);
+
+	}
 	status = redirectsafe(cmd->ncmd.redirect, REDIR_PUSH | REDIR_SAVEFD2);
 
 	path = vpath.var_text;
@@ -9651,6 +9847,8 @@ evalcommand(union node *cmd, int flags)
 		spp = varlist.lastp;
 		expandarg(argp, &varlist, EXP_VARTILDE);
 
+		mklocal((*spp)->text);
+
 		/*
 		 * Modify the command lookup path, if a PATH= assignment
 		 * is present
@@ -9662,18 +9860,36 @@ evalcommand(union node *cmd, int flags)
 
 	/* Print the command if xflag is set. */
 	if (xflag) {
-		int n;
-		const char *p = " %s" + 1;
+		const char *pfx = "";
+
+		fdprintf(preverrout_fd, "%s", expandstr(ps4val(), DQSYNTAX));
 
-		fdprintf(preverrout_fd, p, expandstr(ps4val()));
 		sp = varlist.list;
-		for (n = 0; n < 2; n++) {
-			while (sp) {
-				fdprintf(preverrout_fd, p, sp->text);
-				sp = sp->next;
-				p = " %s";
-			}
-			sp = arglist.list;
+		while (sp) {
+			char *varval = sp->text;
+			char *eq = strchrnul(varval, '=');
+			if (*eq)
+				eq++;
+			fdprintf(preverrout_fd, "%s%.*s%s",
+				pfx,
+				(int)(eq - varval), varval,
+				maybe_single_quote(eq)
+			);
+			sp = sp->next;
+			pfx = " ";
+		}
+
+		sp = arglist.list;
+		while (sp) {
+			fdprintf(preverrout_fd, "%s%s",
+				pfx,
+				/* always quote if matches reserved word: */
+				findkwd(sp->text)
+				? single_quote(sp->text)
+				: maybe_single_quote(sp->text)
+			);
+			sp = sp->next;
+			pfx = " ";
 		}
 		safe_write(preverrout_fd, "\n", 1);
 	}
@@ -9736,7 +9952,7 @@ evalcommand(union node *cmd, int flags)
 	switch (cmdentry.cmdtype) {
 	default: {
 
-#if ENABLE_FEATURE_SH_NOFORK
+#if ENABLE_FEATURE_SH_NOFORK && NUM_APPLETS > 1
 /* (1) BUG: if variables are set, we need to fork, or save/restore them
  *     around run_nofork_applet() call.
  * (2) Should this check also be done in forkshell()?
@@ -9745,13 +9961,35 @@ evalcommand(union node *cmd, int flags)
 		/* find_command() encodes applet_no as (-2 - applet_no) */
 		int applet_no = (- cmdentry.u.index - 2);
 		if (applet_no >= 0 && APPLET_IS_NOFORK(applet_no)) {
-			listsetvar(varlist.list, VEXPORT|VSTACK);
-			/* run <applet>_main() */
+			char **sv_environ;
+
+			INT_OFF;
+			sv_environ = environ;
+			environ = listvars(VEXPORT, VUNSET, varlist.list, /*end:*/ NULL);
+			/*
+			 * Run <applet>_main().
+			 * Signals (^C) can't interrupt here.
+			 * Otherwise we can mangle stdio or malloc internal state.
+			 * This makes applets which can run for a long time
+			 * and/or wait for user input ineligible for NOFORK:
+			 * for example, "yes" or "rm" (rm -i waits for input).
+			 */
 			status = run_nofork_applet(applet_no, argv);
+			environ = sv_environ;
+			/*
+			 * Try enabling NOFORK for "yes" applet.
+			 * ^C _will_ stop it (write returns EINTR),
+			 * but this causes stdout FILE to be stuck
+			 * and needing clearerr(). What if other applets
+			 * also can get EINTRs? Do we need to switch
+			 * our signals to SA_RESTART?
+			 */
+			/*clearerr(stdout);*/
+			INT_ON;
 			break;
 		}
 #endif
-		/* Can we avoid forking off? For example, very last command
+		/* Can we avoid forking? For example, very last command
 		 * in a script or a subshell does not need forking,
 		 * we can just exec it.
 		 */
@@ -9776,17 +10014,12 @@ evalcommand(union node *cmd, int flags)
 		/* NOTREACHED */
 	} /* default */
 	case CMDBUILTIN:
-		cmdenviron = varlist.list;
-		if (cmdenviron) {
-			struct strlist *list = cmdenviron;
-			int i = VNOSET;
-			if (spclbltin > 0 || argc == 0) {
-				i = 0;
-				if (cmd_is_exec && argc > 1)
-					i = VEXPORT;
-			}
-			listsetvar(list, i);
+		if (spclbltin > 0 || argc == 0) {
+			poplocalvars(1);
+			if (cmd_is_exec && argc > 1)
+				listsetvar(varlist.list, VEXPORT);
 		}
+
 		/* Tight loop with builtins only:
 		 * "while kill -0 $child; do true; done"
 		 * will never exit even if $child died, unless we do this
@@ -9804,7 +10037,7 @@ evalcommand(union node *cmd, int flags)
 		goto readstatus;
 
 	case CMDFUNCTION:
-		listsetvar(varlist.list, 0);
+		poplocalvars(1);
 		/* See above for the rationale */
 		dowait(DOWAIT_NONBLOCK, NULL);
 		if (evalfun(cmdentry.u.func, argc, argv, flags))
@@ -9816,7 +10049,9 @@ evalcommand(union node *cmd, int flags)
 
  out:
 	if (cmd->ncmd.redirect)
-		popredir(/*drop:*/ cmd_is_exec, /*restore:*/ cmd_is_exec);
+		popredir(/*drop:*/ cmd_is_exec);
+	unwindredir(redir_stop);
+	unwindlocalvars(localvar_stop);
 	if (lastarg) {
 		/* dsl: I think this is intended to be used to support
 		 * '_' in 'vi' command mode during line editing...
@@ -9932,6 +10167,7 @@ static smallint checkkwd;
 #define CHKALIAS        0x1
 #define CHKKWD          0x2
 #define CHKNL           0x4
+#define CHKEOFMARK      0x8
 
 /*
  * Push a string back onto the input at this current parsefile level.
@@ -10016,8 +10252,8 @@ preadfd(void)
 	if (!iflag || g_parsefile->pf_fd != STDIN_FILENO)
 		nr = nonblock_immune_read(g_parsefile->pf_fd, buf, IBUFSIZ - 1);
 	else {
-		int timeout = -1;
 # if ENABLE_ASH_IDLE_TIMEOUT
+		int timeout = -1;
 		if (iflag) {
 			const char *tmout_var = lookupvar("TMOUT");
 			if (tmout_var) {
@@ -10026,12 +10262,13 @@ preadfd(void)
 					timeout = -1;
 			}
 		}
+		line_input_state->timeout = timeout;
 # endif
 # if ENABLE_FEATURE_TAB_COMPLETION
 		line_input_state->path_lookup = pathval();
 # endif
 		reinit_unicode_for_ash();
-		nr = read_line_input(line_input_state, cmdedit_prompt, buf, IBUFSIZ, timeout);
+		nr = read_line_input(line_input_state, cmdedit_prompt, buf, IBUFSIZ);
 		if (nr == 0) {
 			/* ^C pressed, "convert" to SIGINT */
 			write(STDOUT_FILENO, "^C", 2);
@@ -10244,31 +10481,6 @@ pgetc_without_PEOA(void)
 #endif
 
 /*
- * Read a line from the script.
- */
-static char *
-pfgets(char *line, int len)
-{
-	char *p = line;
-	int nleft = len;
-	int c;
-
-	while (--nleft > 0) {
-		c = pgetc_without_PEOA();
-		if (c == PEOF) {
-			if (p == line)
-				return NULL;
-			break;
-		}
-		*p++ = c;
-		if (c == '\n')
-			break;
-	}
-	*p = '\0';
-	return line;
-}
-
-/*
  * Undo a call to pgetc.  Only two characters may be pushed back.
  * PEOF may be pushed back.
  */
@@ -10391,7 +10603,7 @@ setinputfile(const char *fname, int flag
 		if (flags & INPUT_NOFILE_OK)
 			goto out;
 		exitstatus = 127;
-		ash_msg_and_raise_error("can't open '%s'", fname);
+		ash_msg_and_raise_perror("can't open '%s'", fname);
 	}
 	if (fd < 10)
 		fd = savefd(fd);
@@ -10575,7 +10787,7 @@ setoption(int flag, int val)
 	/* NOTREACHED */
 }
 static int
-options(int cmdline)
+options(int cmdline, int *login_sh)
 {
 	char *p;
 	int val;
@@ -10616,11 +10828,14 @@ options(int cmdline)
 				if (*argptr)
 					argptr++;
 			} else if (cmdline && (c == 'l')) { /* -l or +l == --login */
-				isloginsh = 1;
+				if (login_sh)
+					*login_sh = 1;
 			/* bash does not accept +-login, we also won't */
 			} else if (cmdline && val && (c == '-')) { /* long options */
-				if (strcmp(p, "login") == 0)
-					isloginsh = 1;
+				if (strcmp(p, "login") == 0) {
+					if (login_sh)
+						*login_sh = 1;
+				}
 				break;
 			} else {
 				setoption(c, val);
@@ -10674,7 +10889,7 @@ showvars(const char *sep_prefix, int on,
 	const char *sep;
 	char **ep, **epend;
 
-	ep = listvars(on, off, &epend);
+	ep = listvars(on, off, /*strlist:*/ NULL, &epend);
 	qsort(ep, epend - ep, sizeof(char *), vpcmp);
 
 	sep = *sep_prefix ? " " : sep_prefix;
@@ -10683,9 +10898,17 @@ showvars(const char *sep_prefix, int on,
 		const char *p;
 		const char *q;
 
-		p = strchrnul(*ep, '=');
+		p = endofname(*ep);
+/* Used to have simple "p = strchrnul(*ep, '=')" here instead, but this
+ * makes "export -p" to have output not suitable for "eval":
+ * import os
+ * os.environ["test-test"]="test"
+ * if os.fork() == 0:
+ *   os.execv("ash", [ 'ash', '-c', 'eval $(export -p); echo OK' ])  # fixes this
+ * os.execv("ash", [ 'ash', '-c', 'env | grep test-test' ])
+ */
 		q = nullstr;
-		if (*p)
+		if (*p == '=')
 			q = single_quote(++p);
 		out1fmt("%s%s%.*s%s\n", sep_prefix, sep, (int)(p - *ep), *ep, q);
 	}
@@ -10704,7 +10927,7 @@ setcmd(int argc UNUSED_PARAM, char **arg
 		return showvars(nullstr, 0, VUNSET);
 
 	INT_OFF;
-	retval = options(/*cmdline:*/ 0);
+	retval = options(/*cmdline:*/ 0, NULL);
 	if (retval == 0) { /* if no parse error... */
 		optschanged();
 		if (*argptr != NULL) {
@@ -10761,6 +10984,7 @@ getopts(char *optstr, char *optvar, char
 		p = *optnext;
 		if (p == NULL || *p != '-' || *++p == '\0') {
  atend:
+			unsetvar("OPTARG");
 			p = NULL;
 			done = 1;
 			goto out;
@@ -10773,7 +10997,11 @@ getopts(char *optstr, char *optvar, char
 	c = *p++;
 	for (q = optstr; *q != c;) {
 		if (*q == '\0') {
-			if (optstr[0] == ':') {
+			/* OPTERR is a bashism */
+			const char *cp = lookupvar("OPTERR");
+			if ((cp && LONE_CHAR(cp, '0'))
+			 || (optstr[0] == ':')
+			) {
 				sbuf[0] = c;
 				/*sbuf[1] = '\0'; - already is */
 				setvar0("OPTARG", sbuf);
@@ -10790,7 +11018,11 @@ getopts(char *optstr, char *optvar, char
 
 	if (*++q == ':') {
 		if (*p == '\0' && (p = *optnext) == NULL) {
-			if (optstr[0] == ':') {
+			/* OPTERR is a bashism */
+			const char *cp = lookupvar("OPTERR");
+			if ((cp && LONE_CHAR(cp, '0'))
+			 || (optstr[0] == ':')
+			) {
 				sbuf[0] = c;
 				/*sbuf[1] = '\0'; - already is */
 				setvar0("OPTARG", sbuf);
@@ -10901,8 +11133,6 @@ raise_error_unexpected_syntax(int token)
 	/* NOTREACHED */
 }
 
-#define EOFMARKLEN 79
-
 /* parsing is heavily cross-recursive, need these forward decls */
 static union node *andor(void);
 static union node *pipeline(void);
@@ -11082,43 +11312,22 @@ fixredir(union node *n, const char *text
 	}
 }
 
-/*
- * Returns true if the text contains nothing to expand (no dollar signs
- * or backquotes).
- */
-static int
-noexpand(const char *text)
-{
-	unsigned char c;
-
-	while ((c = *text++) != '\0') {
-		if (c == CTLQUOTEMARK)
-			continue;
-		if (c == CTLESC)
-			text++;
-		else if (SIT(c, BASESYNTAX) == CCTL)
-			return 0;
-	}
-	return 1;
-}
-
 static void
 parsefname(void)
 {
 	union node *n = redirnode;
 
+	if (n->type == NHERE)
+		checkkwd = CHKEOFMARK;
 	if (readtoken() != TWORD)
 		raise_error_unexpected_syntax(-1);
 	if (n->type == NHERE) {
 		struct heredoc *here = heredoc;
 		struct heredoc *p;
-		int i;
 
 		if (quoteflag == 0)
 			n->type = NXHERE;
 		TRACE(("Here document %d\n", n->type));
-		if (!noexpand(wordtext) || (i = strlen(wordtext)) == 0 || i > EOFMARKLEN)
-			raise_error_syntax("illegal eof marker for << redirection");
 		rmescapes(wordtext, 0);
 		here->eofmark = wordtext;
 		here->next = NULL;
@@ -11510,6 +11719,15 @@ decode_dollar_squote(void)
 }
 #endif
 
+/* Used by expandstr to get here-doc like behaviour. */
+#define FAKEEOFMARK ((char*)(uintptr_t)1)
+
+static ALWAYS_INLINE int
+realeofmark(const char *eofmark)
+{
+	return eofmark && eofmark != FAKEEOFMARK;
+}
+
 /*
  * If eofmark is NULL, read a word or a redirection symbol.  If eofmark
  * is not NULL, read a here document.  In the latter case, eofmark is the
@@ -11534,7 +11752,6 @@ readtoken1(int c, int syntax, char *eofm
 	/* c parameter is an unsigned char or PEOF or PEOA */
 	char *out;
 	size_t len;
-	char line[EOFMARKLEN + 1];
 	struct nodelist *bqlist;
 	smallint quotef;
 	smallint dblquote;
@@ -11552,9 +11769,13 @@ readtoken1(int c, int syntax, char *eofm
 	bqlist = NULL;
 	quotef = 0;
 	IF_FEATURE_SH_MATH(prevsyntax = 0;)
+#if ENABLE_ASH_EXPAND_PRMT
 	pssyntax = (syntax == PSSYNTAX);
 	if (pssyntax)
 		syntax = DQSYNTAX;
+#else
+	pssyntax = 0; /* constant */
+#endif
 	dblquote = (syntax == DQSYNTAX);
 	varnest = 0;
 	IF_FEATURE_SH_MATH(arinest = 0;)
@@ -11608,7 +11829,7 @@ readtoken1(int c, int syntax, char *eofm
 			} else if (c == '\n') {
 				nlprompt();
 			} else {
-				if (c == '$' && pssyntax) {
+				if (pssyntax && c == '$') {
 					USTPUTC(CTLESC, out);
 					USTPUTC('\\', out);
 				}
@@ -11756,7 +11977,10 @@ readtoken1(int c, int syntax, char *eofm
  * we are at the end of the here document, this routine sets the c to PEOF.
  */
 checkend: {
-	if (eofmark) {
+	if (realeofmark(eofmark)) {
+		int markloc;
+		char *p;
+
 #if ENABLE_ASH_ALIAS
 		if (c == PEOA)
 			c = pgetc_without_PEOA();
@@ -11766,27 +11990,42 @@ checkend: {
 				c = pgetc_without_PEOA();
 			}
 		}
-		if (c == *eofmark) {
-			if (pfgets(line, sizeof(line)) != NULL) {
-				char *p, *q;
-				int cc;
-
-				p = line;
-				for (q = eofmark + 1;; p++, q++) {
-					cc = *p;
-					if (cc == '\n')
-						cc = 0;
-					if (!*q || cc != *q)
-						break;
-				}
-				if (cc == *q) {
-					c = PEOF;
-					nlnoprompt();
-				} else {
-					pushstring(line, NULL);
+
+		markloc = out - (char *)stackblock();
+		for (p = eofmark; STPUTC(c, out), *p; p++) {
+			if (c != *p)
+				goto more_heredoc;
+
+			c = pgetc_without_PEOA();
+		}
+
+		if (c == '\n' || c == PEOF) {
+			c = PEOF;
+			g_parsefile->linno++;
+			needprompt = doprompt;
+		} else {
+			int len_here;
+
+ more_heredoc:
+			p = (char *)stackblock() + markloc + 1;
+			len_here = out - p;
+
+			if (len_here) {
+				len_here -= (c >= PEOF);
+				c = p[-1];
+
+				if (len_here) {
+					char *str;
+
+					str = alloca(len_here + 1);
+					*(char *)mempcpy(str, p, len_here) = '\0';
+
+					pushstring(str, NULL);
 				}
 			}
 		}
+
+		STADJUST((char *)stackblock() + markloc - out, out);
 	}
 	goto checkend_return;
 }
@@ -11880,7 +12119,8 @@ parsesub: {
 	int typeloc;
 
 	c = pgetc_eatbnl();
-	if (c > 255 /* PEOA or PEOF */
+	if ((checkkwd & CHKEOFMARK)
+	 || c > 255 /* PEOA or PEOF */
 	 || (c != '(' && c != '{' && !is_name(c) && !is_special(c))
 	) {
 #if BASH_DOLLAR_SQUOTE
@@ -11896,7 +12136,7 @@ parsesub: {
 #if ENABLE_FEATURE_SH_MATH
 			PARSEARITH();
 #else
-			raise_error_syntax("you disabled math support for $((arith)) syntax");
+			raise_error_syntax("support for $((arith)) is disabled");
 #endif
 		} else {
 			pungetc();
@@ -11925,7 +12165,7 @@ parsesub: {
 				STPUTC(c, out);
 				c = pgetc_eatbnl();
 			} while (isdigit(c));
-		} else if (is_special(c)) {
+		} else {
 			/* $[{[#]]<specialchar>[}] */
 			int cc = c;
 
@@ -11943,10 +12183,16 @@ parsesub: {
 					cc = '#';
 				}
 			}
+
+			if (!is_special(cc)) {
+				if (subtype == VSLENGTH)
+					subtype = 0;
+				goto badsub;
+			}
+
 			USTPUTC(cc, out);
-		} else {
-			goto badsub;
 		}
+
 		if (c != '}' && subtype == VSLENGTH) {
 			/* ${#VAR didn't end with } */
 			goto badsub;
@@ -12442,22 +12688,35 @@ parseheredoc(void)
 }
 
 
-/*
- * called by editline -- any expansions to the prompt should be added here.
- */
 static const char *
-expandstr(const char *ps)
+expandstr(const char *ps, int syntax_type)
 {
 	union node n;
 	int saveprompt;
 
-	/* XXX Fix (char *) cast. It _is_ a bug. ps is variable's value,
-	 * and token processing _can_ alter it (delete NULs etc). */
+	/* XXX Fix (char *) cast. */
 	setinputstring((char *)ps);
 
 	saveprompt = doprompt;
 	doprompt = 0;
-	readtoken1(pgetc(), PSSYNTAX, nullstr, 0);
+
+	/* readtoken1() might die horribly.
+	 * Try a prompt with syntactically wrong command:
+	 * PS1='$(date "+%H:%M:%S) > '
+	 */
+	{
+		volatile int saveint;
+		struct jmploc *volatile savehandler = exception_handler;
+		struct jmploc jmploc;
+		SAVE_INT(saveint);
+		if (setjmp(jmploc.loc) == 0) {
+			exception_handler = &jmploc;
+			readtoken1(pgetc(), syntax_type, FAKEEOFMARK, 0);
+		}
+		exception_handler = savehandler;
+		RESTORE_INT(saveint);
+	}
+
 	doprompt = saveprompt;
 
 	popfile();
@@ -12471,6 +12730,12 @@ expandstr(const char *ps)
 	return stackblock();
 }
 
+static inline int
+parser_eof(void)
+{
+	return tokpushback && lasttoken == TEOF;
+}
+
 /*
  * Execute a command or commands contained in a string.
  */
@@ -12506,7 +12771,7 @@ evalstring(char *s, int flags)
 	while ((n = parsecmd(0)) != NODE_EOF) {
 		int i;
 
-		i = evaltree(n, flags);
+		i = evaltree(n, flags & ~(parser_eof() ? 0 : EV_EXIT));
 		if (n)
 			status = i;
 		popstackmark(&smark);
@@ -12520,7 +12785,7 @@ evalstring(char *s, int flags)
 
 	exception_handler = savehandler;
 	if (ex)
-                longjmp(exception_handler->loc, ex);
+		longjmp(exception_handler->loc, ex);
 
 	return status;
 }
@@ -12657,11 +12922,12 @@ dotcmd(int argc_ UNUSED_PARAM, char **ar
 	char *fullname;
 	char **argv;
 	char *args_need_save;
-	struct strlist *sp;
 	volatile struct shparam saveparam;
 
-	for (sp = cmdenviron; sp; sp = sp->next)
-		setvareq(ckstrdup(sp->text), VSTRFIXED | VTEXTFIXED);
+//???
+//	struct strlist *sp;
+//	for (sp = cmdenviron; sp; sp = sp->next)
+//		setvareq(ckstrdup(sp->text), VSTRFIXED | VTEXTFIXED);
 
 	nextopt(nullstr); /* handle possible "--" */
 	argv = argptr;
@@ -12961,13 +13227,18 @@ trapcmd(int argc UNUSED_PARAM, char **ar
 		return 0;
 	}
 
+	/* Why the second check?
+	 * "trap NUM [sig2]..." is the same as "trap - NUM [sig2]..."
+	 * In this case, NUM is signal no, not an action.
+	 */
 	action = NULL;
-	if (ap[1])
+	if (ap[1] && !is_number(ap[0]))
 		action = *ap++;
+
 	exitcode = 0;
 	while (*ap) {
 		signo = get_signum(*ap);
-		if (signo < 0 || signo >= NSIG) {
+		if (signo < 0) {
 			/* Mimic bash message exactly */
 			ash_msg("%s: invalid signal specification", *ap);
 			exitcode = 1;
@@ -13125,7 +13396,6 @@ unsetcmd(int argc UNUSED_PARAM, char **a
 	char **ap;
 	int i;
 	int flag = 0;
-	int ret = 0;
 
 	while ((i = nextopt("vf")) != 0) {
 		flag = i;
@@ -13133,15 +13403,13 @@ unsetcmd(int argc UNUSED_PARAM, char **a
 
 	for (ap = argptr; *ap; ap++) {
 		if (flag != 'f') {
-			i = unsetvar(*ap);
-			ret |= i;
-			if (!(i & 2))
-				continue;
+			unsetvar(*ap);
+			continue;
 		}
 		if (flag != 'v')
 			unsetfunc(*ap);
 	}
-	return ret & 1;
+	return 0;
 }
 
 static const unsigned char timescmd_str[] ALIGN1 = {
@@ -13154,21 +13422,23 @@ static const unsigned char timescmd_str[
 static int FAST_FUNC
 timescmd(int argc UNUSED_PARAM, char **argv UNUSED_PARAM)
 {
-	unsigned long clk_tck, s, t;
+	unsigned clk_tck;
 	const unsigned char *p;
 	struct tms buf;
 
 	clk_tck = bb_clk_tck();
-	times(&buf);
 
+	times(&buf);
 	p = timescmd_str;
 	do {
+		unsigned sec, frac;
+		unsigned long t;
 		t = *(clock_t *)(((char *) &buf) + p[1]);
-		s = t / clk_tck;
-		t = t % clk_tck;
-		out1fmt("%lum%lu.%03lus%c",
-			s / 60, s % 60,
-			(t * 1000) / clk_tck,
+		sec = t / clk_tck;
+		frac = t % clk_tck;
+		out1fmt("%um%u.%03us%c",
+			sec / 60, sec % 60,
+			(frac * 1000) / clk_tck,
 			p[0]);
 		p += 2;
 	} while (*p);
@@ -13207,10 +13477,10 @@ letcmd(int argc UNUSED_PARAM, char **arg
  *      -p PROMPT       Display PROMPT on stderr (if input is from tty)
  *      -t SECONDS      Timeout after SECONDS (tty or pipe only)
  *      -u FD           Read from given FD instead of fd 0
+ *      -d DELIM        End on DELIM char, not newline
  * This uses unbuffered input, which may be avoidable in some cases.
  * TODO: bash also has:
  *      -a ARRAY        Read into array[0],[1],etc
- *      -d DELIM        End on DELIM char, not newline
  *      -e              Use line editing (tty only)
  */
 static int FAST_FUNC
@@ -13220,11 +13490,12 @@ readcmd(int argc UNUSED_PARAM, char **ar
 	char *opt_p = NULL;
 	char *opt_t = NULL;
 	char *opt_u = NULL;
+	char *opt_d = NULL; /* optimized out if !BASH */
 	int read_flags = 0;
 	const char *r;
 	int i;
 
-	while ((i = nextopt("p:u:rt:n:s")) != '\0') {
+	while ((i = nextopt("p:u:rt:n:sd:")) != '\0') {
 		switch (i) {
 		case 'p':
 			opt_p = optionarg;
@@ -13244,6 +13515,11 @@ readcmd(int argc UNUSED_PARAM, char **ar
 		case 'u':
 			opt_u = optionarg;
 			break;
+#if BASH_READ_D
+		case 'd':
+			opt_d = optionarg;
+			break;
+#endif
 		default:
 			break;
 		}
@@ -13261,12 +13537,15 @@ readcmd(int argc UNUSED_PARAM, char **ar
 		opt_n,
 		opt_p,
 		opt_t,
-		opt_u
+		opt_u,
+		opt_d
 	);
 	INT_ON;
 
 	if ((uintptr_t)r == 1 && errno == EINTR) {
-		/* to get SIGCHLD: sleep 1 & read x; echo $x */
+		/* To get SIGCHLD: sleep 1 & read x; echo $x
+		 * Correct behavior is to not exit "read"
+		 */
 		if (pending_sig == 0)
 			goto again;
 	}
@@ -13320,8 +13599,8 @@ umaskcmd(int argc UNUSED_PARAM, char **a
 		}
 	} else {
 		char *modestr = *argptr;
-                /* numeric umasks are taken as-is */
-                /* symbolic umasks are inverted: "umask a=rx" calls umask(222) */
+		/* numeric umasks are taken as-is */
+		/* symbolic umasks are inverted: "umask a=rx" calls umask(222) */
 		if (!isdigit(modestr[0]))
 			mask ^= 0777;
 		mask = bb_parse_mode(modestr, mask);
@@ -13381,13 +13660,15 @@ exitshell(void)
 	/* NOTREACHED */
 }
 
-static void
+/* Don't inline: conserve stack of caller from having our locals too */
+static NOINLINE void
 init(void)
 {
 	/* we will never free this */
 	basepf.next_to_pgetc = basepf.buf = ckmalloc(IBUFSIZ);
+	basepf.linno = 1;
 
-	sigmode[SIGCHLD - 1] = S_DFL;
+	sigmode[SIGCHLD - 1] = S_DFL; /* ensure we install handler even if it is SIG_IGNed */
 	setsignal(SIGCHLD);
 
 	/* bash re-enables SIGHUP which is SIG_IGNed on entry.
@@ -13398,12 +13679,21 @@ init(void)
 	{
 		char **envp;
 		const char *p;
-		struct stat st1, st2;
 
 		initvar();
 		for (envp = environ; envp && *envp; envp++) {
-			p = endofname(*envp);
-			if (p != *envp && *p == '=') {
+/* Used to have
+ *			p = endofname(*envp);
+ *			if (p != *envp && *p == '=') {
+ * here to weed out badly-named variables, but this breaks
+ * scenarios where people do want them passed to children:
+ * import os
+ * os.environ["test-test"]="test"
+ * if os.fork() == 0:
+ *   os.execv("ash", [ 'ash', '-c', 'eval $(export -p); echo OK' ])  # fixes this
+ * os.execv("ash", [ 'ash', '-c', 'env | grep test-test' ])  # breaks this
+ */
+			if (strchr(*envp, '=')) {
 				setvareq(*envp, VEXPORT|VTEXTFIXED);
 			}
 		}
@@ -13424,6 +13714,7 @@ init(void)
 #endif
 		p = lookupvar("PWD");
 		if (p) {
+			struct stat st1, st2;
 			if (p[0] != '/' || stat(p, &st1) || stat(".", &st2)
 			 || st1.st_dev != st2.st_dev || st1.st_ino != st2.st_ino
 			) {
@@ -13443,21 +13734,23 @@ init(void)
 /*
  * Process the shell command line arguments.
  */
-static void
+static int
 procargs(char **argv)
 {
 	int i;
 	const char *xminusc;
 	char **xargv;
+	int login_sh;
 
 	xargv = argv;
+	login_sh = xargv[0] && xargv[0][0] == '-';
 	arg0 = xargv[0];
 	/* if (xargv[0]) - mmm, this is always true! */
 		xargv++;
 	for (i = 0; i < NOPTS; i++)
 		optlist[i] = 2;
 	argptr = xargv;
-	if (options(/*cmdline:*/ 1)) {
+	if (options(/*cmdline:*/ 1, &login_sh)) {
 		/* it already printed err message */
 		raise_exception(EXERROR);
 	}
@@ -13501,6 +13794,8 @@ procargs(char **argv)
 		xargv++;
 	}
 	optschanged();
+
+	return login_sh;
 }
 
 /*
@@ -13509,7 +13804,7 @@ procargs(char **argv)
 static void
 read_profile(const char *name)
 {
-	name = expandstr(name);
+	name = expandstr(name, DQSYNTAX);
 	if (setinputfile(name, INPUT_PUSH_FILE | INPUT_NOFILE_OK) < 0)
 		return;
 	cmdloop(0);
@@ -13537,8 +13832,10 @@ reset(void)
 	popallfiles();
 
 	/* from redir.c: */
-	while (redirlist)
-		popredir(/*drop:*/ 0, /*restore:*/ 0);
+	unwindredir(NULL);
+
+	/* from var.c: */
+	unwindlocalvars(NULL);
 }
 
 #if PROFILE
@@ -13559,6 +13856,7 @@ int ash_main(int argc UNUSED_PARAM, char
 	volatile smallint state;
 	struct jmploc jmploc;
 	struct stackmark smark;
+	int login_sh;
 
 	/* Initialize global data */
 	INIT_G_misc();
@@ -13607,15 +13905,13 @@ int ash_main(int argc UNUSED_PARAM, char
 
 	init();
 	setstackmark(&smark);
-	procargs(argv);
+	login_sh = procargs(argv);
 #if DEBUG
 	TRACE(("Shell args: "));
 	trace_puts_args(argv);
 #endif
 
-	if (argv[0] && argv[0][0] == '-')
-		isloginsh = 1;
-	if (isloginsh) {
+	if (login_sh) {
 		const char *hp;
 
 		state = 1;
@@ -13648,8 +13944,8 @@ int ash_main(int argc UNUSED_PARAM, char
 		 * Testcase: ash -c 'exec 1>&0' must not complain. */
 		// if (!sflag) g_parsefile->pf_fd = -1;
 		// ^^ not necessary since now we special-case fd 0
-		// in is_hidden_fd() to not be considered "hidden fd"
-		evalstring(minusc, 0);
+		// in save_fd_on_redirect()
+		evalstring(minusc, sflag ? 0 : EV_EXIT);
 	}
 
 	if (sflag || minusc == NULL) {
@@ -13712,7 +14008,7 @@ int ash_main(int argc UNUSED_PARAM, char
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
diff -urpN busybox-1.27.2/shell/ash_LINENO.patch busybox-1.28.0/shell/ash_LINENO.patch
--- busybox-1.27.2/shell/ash_LINENO.patch	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_LINENO.patch	2017-08-18 19:22:37.000000000 +0200
@@ -0,0 +1,498 @@
+This patch is a backport from dash of the combination of:
+	[SHELL] Add preliminary LINENO support
+	[VAR] Fix varinit ordering that broke fc
+	[SHELL] Improve LINENO support
+
+Applies cleanly on top of:
+	commit 9832bbaba966f0e52e183f10cd93fad7f8f643fe
+	Date: Tue Aug 15 15:44:41 2017 +0200
+
+Testsuite needs some tweaks (line numbers in some messages change).
+
+Unfortunately, it is somewhat big:
+
+function                                             old     new   delta
+parse_command                                       1581    1658     +77
+calcsize                                             203     272     +69
+copynode                                             195     257     +62
+lookupvar                                             59     108     +49
+evaltree                                             494     534     +40
+evalfor                                              152     187     +35
+evalcase                                             278     313     +35
+evalcommand                                         1547    1581     +34
+evalsubshell                                         169     199     +30
+linenovar                                              -      22     +22
+raise_error_syntax                                    11      29     +18
+evalfun                                              266     280     +14
+varinit_data                                          96     108     +12
+cmdtxt                                               626     631      +5
+lineno                                                 -       4      +4
+funcline                                               -       4      +4
+ash_vmsg                                             144     141      -3
+startlinno                                             4       -      -4
+funcnest                                               4       -      -4
+xxreadtoken                                          272     259     -13
+readtoken1                                          2635    2594     -41
+------------------------------------------------------------------------------
+(add/remove: 3/2 grow/shrink: 13/3 up/down: 510/-65)          Total: 445 bytes
+   text	   data	    bss	    dec	    hex	filename
+ 912030	    563	   5844	 918437	  e03a5	busybox_old
+ 912473	    587	   5844	 918904	  e0578	busybox_unstripped
+
+diff --git a/shell/ash.c b/shell/ash.c
+index 703802f..93a3814 100644
+--- a/shell/ash.c
++++ b/shell/ash.c
+@@ -312,6 +312,8 @@ struct globals_misc {
+ 	/* shell level: 0 for the main shell, 1 for its children, and so on */
+ 	int shlvl;
+ #define rootshell (!shlvl)
++	int errlinno;
++
+ 	char *minusc;  /* argument to -c option */
+ 
+ 	char *curdir; // = nullstr;     /* current working directory */
+@@ -389,6 +391,7 @@ extern struct globals_misc *const ash_ptr_to_globals_misc;
+ #define job_warning       (G_misc.job_warning)
+ #define rootpid     (G_misc.rootpid    )
+ #define shlvl       (G_misc.shlvl      )
++#define errlinno    (G_misc.errlinno   )
+ #define minusc      (G_misc.minusc     )
+ #define curdir      (G_misc.curdir     )
+ #define physdir     (G_misc.physdir    )
+@@ -723,6 +726,7 @@ union node;
+ 
+ struct ncmd {
+ 	smallint type; /* Nxxxx */
++	int linno;
+ 	union node *assign;
+ 	union node *args;
+ 	union node *redirect;
+@@ -736,6 +740,7 @@ struct npipe {
+ 
+ struct nredir {
+ 	smallint type;
++	int linno;
+ 	union node *n;
+ 	union node *redirect;
+ };
+@@ -755,6 +760,7 @@ struct nif {
+ 
+ struct nfor {
+ 	smallint type;
++	int linno;
+ 	union node *args;
+ 	union node *body;
+ 	char *var;
+@@ -762,6 +768,7 @@ struct nfor {
+ 
+ struct ncase {
+ 	smallint type;
++	int linno;
+ 	union node *expr;
+ 	union node *cases;
+ };
+@@ -773,6 +780,13 @@ struct nclist {
+ 	union node *body;
+ };
+ 
++struct ndefun {
++	smallint type;
++	int linno;
++	char *text;
++	union node *body;
++};
++
+ struct narg {
+ 	smallint type;
+ 	union node *next;
+@@ -824,6 +838,7 @@ union node {
+ 	struct nfor nfor;
+ 	struct ncase ncase;
+ 	struct nclist nclist;
++	struct ndefun ndefun;
+ 	struct narg narg;
+ 	struct nfile nfile;
+ 	struct ndup ndup;
+@@ -1253,7 +1268,6 @@ struct parsefile {
+ 
+ static struct parsefile basepf;        /* top level input file */
+ static struct parsefile *g_parsefile = &basepf;  /* current input file */
+-static int startlinno;                 /* line # where last token started */
+ static char *commandname;              /* currently executing command */
+ 
+ 
+@@ -1267,7 +1281,7 @@ ash_vmsg(const char *msg, va_list ap)
+ 		if (strcmp(arg0, commandname))
+ 			fprintf(stderr, "%s: ", commandname);
+ 		if (!iflag || g_parsefile->pf_fd > 0)
+-			fprintf(stderr, "line %d: ", startlinno);
++			fprintf(stderr, "line %d: ", errlinno);
+ 	}
+ 	vfprintf(stderr, msg, ap);
+ 	newline_and_flush(stderr);
+@@ -1327,6 +1341,7 @@ static void raise_error_syntax(const char *) NORETURN;
+ static void
+ raise_error_syntax(const char *msg)
+ {
++	errlinno = g_parsefile->linno;
+ 	ash_msg_and_raise_error("syntax error: %s", msg);
+ 	/* NOTREACHED */
+ }
+@@ -1993,6 +2008,9 @@ static void changepath(const char *) FAST_FUNC;
+ static void change_random(const char *) FAST_FUNC;
+ #endif
+ 
++static int lineno;
++static char linenovar[sizeof("LINENO=%d") + sizeof(int)*3] = "LINENO=";
++
+ static const struct {
+ 	int flags;
+ 	const char *var_text;
+@@ -2014,6 +2032,7 @@ static const struct {
+ #if ENABLE_ASH_GETOPTS
+ 	{ VSTRFIXED|VTEXTFIXED       , defoptindvar, getoptsreset    },
+ #endif
++	{ VSTRFIXED|VTEXTFIXED       , linenovar   , NULL            },
+ #if ENABLE_ASH_RANDOM_SUPPORT
+ 	{ VSTRFIXED|VTEXTFIXED|VUNSET|VDYNAMIC, "RANDOM", change_random },
+ #endif
+@@ -2066,12 +2085,14 @@ extern struct globals_var *const ash_ptr_to_globals_var;
+ #define vps4      (&vps2)[1]
+ #if ENABLE_ASH_GETOPTS
+ # define voptind  (&vps4)[1]
++# define vlineno  (&voptind)[1]
+ # if ENABLE_ASH_RANDOM_SUPPORT
+-#  define vrandom (&voptind)[1]
++#  define vrandom (&vlineno)[1]
+ # endif
+ #else
++# define vlineno  (&vps4)[1]
+ # if ENABLE_ASH_RANDOM_SUPPORT
+-#  define vrandom (&vps4)[1]
++#  define vrandom (&vlineno)[1]
+ # endif
+ #endif
+ 
+@@ -2209,8 +2230,12 @@ lookupvar(const char *name)
+ 		if (v->flags & VDYNAMIC)
+ 			v->var_func(NULL);
+ #endif
+-		if (!(v->flags & VUNSET))
++		if (!(v->flags & VUNSET)) {
++			if (v == &vlineno && v->var_text == linenovar) {
++				fmtstr(linenovar+7, sizeof(linenovar)-7, "%d", lineno);
++			}
+ 			return var_end(v->var_text);
++		}
+ 	}
+ 	return NULL;
+ }
+@@ -4783,7 +4808,7 @@ cmdtxt(union node *n)
+ 		p = "; done";
+ 		goto dodo;
+ 	case NDEFUN:
+-		cmdputs(n->narg.text);
++		cmdputs(n->ndefun.text);
+ 		p = "() { ... }";
+ 		goto dotail2;
+ 	case NCMD:
+@@ -8551,6 +8576,9 @@ calcsize(int funcblocksize, union node *n)
+ 		funcblocksize = calcsize(funcblocksize, n->nclist.next);
+ 		break;
+ 	case NDEFUN:
++		funcblocksize = calcsize(funcblocksize, n->ndefun.body);
++		funcblocksize += SHELL_ALIGN(strlen(n->ndefun.text) + 1);
++		break;
+ 	case NARG:
+ 		funcblocksize = sizenodelist(funcblocksize, n->narg.backquote);
+ 		funcblocksize += SHELL_ALIGN(strlen(n->narg.text) + 1); /* was funcstringsize += ... */
+@@ -8626,6 +8654,7 @@ copynode(union node *n)
+ 		new->ncmd.redirect = copynode(n->ncmd.redirect);
+ 		new->ncmd.args = copynode(n->ncmd.args);
+ 		new->ncmd.assign = copynode(n->ncmd.assign);
++		new->ncmd.linno = n->ncmd.linno;
+ 		break;
+ 	case NPIPE:
+ 		new->npipe.cmdlist = copynodelist(n->npipe.cmdlist);
+@@ -8636,6 +8665,7 @@ copynode(union node *n)
+ 	case NSUBSHELL:
+ 		new->nredir.redirect = copynode(n->nredir.redirect);
+ 		new->nredir.n = copynode(n->nredir.n);
++		new->nredir.linno = n->nredir.linno;
+ 		break;
+ 	case NAND:
+ 	case NOR:
+@@ -8654,10 +8684,12 @@ copynode(union node *n)
+ 		new->nfor.var = nodeckstrdup(n->nfor.var);
+ 		new->nfor.body = copynode(n->nfor.body);
+ 		new->nfor.args = copynode(n->nfor.args);
++		new->nfor.linno = n->nfor.linno;
+ 		break;
+ 	case NCASE:
+ 		new->ncase.cases = copynode(n->ncase.cases);
+ 		new->ncase.expr = copynode(n->ncase.expr);
++		new->ncase.linno = n->ncase.linno;
+ 		break;
+ 	case NCLIST:
+ 		new->nclist.body = copynode(n->nclist.body);
+@@ -8665,6 +8697,10 @@ copynode(union node *n)
+ 		new->nclist.next = copynode(n->nclist.next);
+ 		break;
+ 	case NDEFUN:
++		new->ndefun.body = copynode(n->ndefun.body);
++		new->ndefun.text = nodeckstrdup(n->ndefun.text);
++		new->ndefun.linno = n->ndefun.linno;
++		break;
+ 	case NARG:
+ 		new->narg.backquote = copynodelist(n->narg.backquote);
+ 		new->narg.text = nodeckstrdup(n->narg.text);
+@@ -8733,7 +8769,7 @@ defun(union node *func)
+ 	INT_OFF;
+ 	entry.cmdtype = CMDFUNCTION;
+ 	entry.u.func = copyfunc(func);
+-	addcmdentry(func->narg.text, &entry);
++	addcmdentry(func->ndefun.text, &entry);
+ 	INT_ON;
+ }
+ 
+@@ -8743,8 +8779,8 @@ defun(union node *func)
+ #define SKIPFUNC       (1 << 2)
+ static smallint evalskip;       /* set to SKIPxxx if we are skipping commands */
+ static int skipcount;           /* number of levels to skip */
+-static int funcnest;            /* depth of function calls */
+ static int loopnest;            /* current loop nesting level */
++static int funcline;            /* starting line number of current function, or 0 if not in a function */
+ 
+ /* Forward decl way out to parsing code - dotrap needs it */
+ static int evalstring(char *s, int flags);
+@@ -8839,6 +8875,9 @@ evaltree(union node *n, int flags)
+ 		status = !evaltree(n->nnot.com, EV_TESTED);
+ 		goto setstatus;
+ 	case NREDIR:
++		errlinno = lineno = n->nredir.linno;
++		if (funcline)
++			lineno -= funcline - 1;
+ 		expredir(n->nredir.redirect);
+ 		pushredir(n->nredir.redirect);
+ 		status = redirectsafe(n->nredir.redirect, REDIR_PUSH);
+@@ -8993,6 +9032,10 @@ evalfor(union node *n, int flags)
+ 	struct stackmark smark;
+ 	int status = 0;
+ 
++	errlinno = lineno = n->ncase.linno;
++	if (funcline)
++		lineno -= funcline - 1;
++
+ 	setstackmark(&smark);
+ 	arglist.list = NULL;
+ 	arglist.lastp = &arglist.list;
+@@ -9024,6 +9067,10 @@ evalcase(union node *n, int flags)
+ 	struct stackmark smark;
+ 	int status = 0;
+ 
++	errlinno = lineno = n->ncase.linno;
++	if (funcline)
++		lineno -= funcline - 1;
++
+ 	setstackmark(&smark);
+ 	arglist.list = NULL;
+ 	arglist.lastp = &arglist.list;
+@@ -9058,6 +9105,10 @@ evalsubshell(union node *n, int flags)
+ 	int backgnd = (n->type == NBACKGND); /* FORK_BG(1) if yes, else FORK_FG(0) */
+ 	int status;
+ 
++	errlinno = lineno = n->nredir.linno;
++	if (funcline)
++		lineno -= funcline - 1;
++
+ 	expredir(n->nredir.redirect);
+ 	if (!backgnd && (flags & EV_EXIT) && !may_have_traps)
+ 		goto nofork;
+@@ -9365,8 +9416,10 @@ evalfun(struct funcnode *func, int argc, char **argv, int flags)
+ 	struct jmploc *volatile savehandler;
+ 	struct jmploc jmploc;
+ 	int e;
++	int savefuncline;
+ 
+ 	saveparam = shellparam;
++	savefuncline = funcline;
+ 	savehandler = exception_handler;
+ 	e = setjmp(jmploc.loc);
+ 	if (e) {
+@@ -9376,7 +9429,7 @@ evalfun(struct funcnode *func, int argc, char **argv, int flags)
+ 	exception_handler = &jmploc;
+ 	shellparam.malloced = 0;
+ 	func->count++;
+-	funcnest++;
++	funcline = func->n.ndefun.linno;
+ 	INT_ON;
+ 	shellparam.nparam = argc - 1;
+ 	shellparam.p = argv + 1;
+@@ -9385,11 +9438,11 @@ evalfun(struct funcnode *func, int argc, char **argv, int flags)
+ 	shellparam.optoff = -1;
+ #endif
+ 	pushlocalvars();
+-	evaltree(func->n.narg.next, flags & EV_TESTED);
++	evaltree(func->n.ndefun.body, flags & EV_TESTED);
+ 	poplocalvars(0);
+  funcdone:
+ 	INT_OFF;
+-	funcnest--;
++	funcline = savefuncline;
+ 	freefunc(func);
+ 	freeparam(&shellparam);
+ 	shellparam = saveparam;
+@@ -9753,6 +9806,10 @@ evalcommand(union node *cmd, int flags)
+ 	char **nargv;
+ 	smallint cmd_is_exec;
+ 
++	errlinno = lineno = cmd->ncmd.linno;
++	if (funcline)
++		lineno -= funcline - 1;
++
+ 	/* First expand the arguments. */
+ 	TRACE(("evalcommand(0x%lx, %d) called\n", (long)cmd, flags));
+ 	setstackmark(&smark);
+@@ -9798,7 +9855,7 @@ evalcommand(union node *cmd, int flags)
+ 	*nargv = NULL;
+ 
+ 	lastarg = NULL;
+-	if (iflag && funcnest == 0 && argc > 0)
++	if (iflag && funcline == 0 && argc > 0)
+ 		lastarg = nargv[-1];
+ 
+ 	expredir(cmd->ncmd.redirect);
+@@ -11317,6 +11374,7 @@ simplecmd(void)
+ 	union node *vars, **vpp;
+ 	union node **rpp, *redir;
+ 	int savecheckkwd;
++	int savelinno;
+ #if BASH_TEST2
+ 	smallint double_brackets_flag = 0;
+ #endif
+@@ -11330,6 +11388,7 @@ simplecmd(void)
+ 	rpp = &redir;
+ 
+ 	savecheckkwd = CHKALIAS;
++	savelinno = g_parsefile->linno;
+ 	for (;;) {
+ 		int t;
+ 		checkkwd = savecheckkwd;
+@@ -11419,7 +11478,9 @@ simplecmd(void)
+ 				}
+ 				n->type = NDEFUN;
+ 				checkkwd = CHKNL | CHKKWD | CHKALIAS;
+-				n->narg.next = parse_command();
++				n->ndefun.text = n->narg.text;
++				n->ndefun.linno = g_parsefile->linno;
++				n->ndefun.body = parse_command();
+ 				return n;
+ 			}
+ 			IF_BASH_FUNCTION(function_flag = 0;)
+@@ -11435,6 +11496,7 @@ simplecmd(void)
+ 	*rpp = NULL;
+ 	n = stzalloc(sizeof(struct ncmd));
+ 	n->type = NCMD;
++	n->ncmd.linno = savelinno;
+ 	n->ncmd.args = args;
+ 	n->ncmd.assign = vars;
+ 	n->ncmd.redirect = redir;
+@@ -11450,10 +11512,13 @@ parse_command(void)
+ 	union node *redir, **rpp;
+ 	union node **rpp2;
+ 	int t;
++	int savelinno;
+ 
+ 	redir = NULL;
+ 	rpp2 = &redir;
+ 
++	savelinno = g_parsefile->linno;
++
+ 	switch (readtoken()) {
+ 	default:
+ 		raise_error_unexpected_syntax(-1);
+@@ -11504,6 +11569,7 @@ parse_command(void)
+ 			raise_error_syntax("bad for loop variable");
+ 		n1 = stzalloc(sizeof(struct nfor));
+ 		n1->type = NFOR;
++		n1->nfor.linno = savelinno;
+ 		n1->nfor.var = wordtext;
+ 		checkkwd = CHKNL | CHKKWD | CHKALIAS;
+ 		if (readtoken() == TIN) {
+@@ -11544,6 +11610,7 @@ parse_command(void)
+ 	case TCASE:
+ 		n1 = stzalloc(sizeof(struct ncase));
+ 		n1->type = NCASE;
++		n1->ncase.linno = savelinno;
+ 		if (readtoken() != TWORD)
+ 			raise_error_unexpected_syntax(TWORD);
+ 		n1->ncase.expr = n2 = stzalloc(sizeof(struct narg));
+@@ -11595,6 +11662,7 @@ parse_command(void)
+ 	case TLP:
+ 		n1 = stzalloc(sizeof(struct nredir));
+ 		n1->type = NSUBSHELL;
++		n1->nredir.linno = savelinno;
+ 		n1->nredir.n = list(0);
+ 		/*n1->nredir.redirect = NULL; - stzalloc did it */
+ 		t = TRP;
+@@ -11628,6 +11696,7 @@ parse_command(void)
+ 		if (n1->type != NSUBSHELL) {
+ 			n2 = stzalloc(sizeof(struct nredir));
+ 			n2->type = NREDIR;
++			n2->nredir.linno = savelinno;
+ 			n2->nredir.n = n1;
+ 			n1 = n2;
+ 		}
+@@ -11726,10 +11795,8 @@ readtoken1(int c, int syntax, char *eofmark, int striptabs)
+ 	IF_FEATURE_SH_MATH(int arinest;)    /* levels of arithmetic expansion */
+ 	IF_FEATURE_SH_MATH(int parenlevel;) /* levels of parens in arithmetic */
+ 	int dqvarnest;       /* levels of variables expansion within double quotes */
+-
+ 	IF_BASH_DOLLAR_SQUOTE(smallint bash_dollar_squote = 0;)
+ 
+-	startlinno = g_parsefile->linno;
+ 	bqlist = NULL;
+ 	quotef = 0;
+ 	IF_FEATURE_SH_MATH(prevsyntax = 0;)
+@@ -11906,7 +11973,6 @@ readtoken1(int c, int syntax, char *eofmark, int striptabs)
+ 	if (syntax != BASESYNTAX && eofmark == NULL)
+ 		raise_error_syntax("unterminated quoted string");
+ 	if (varnest != 0) {
+-		startlinno = g_parsefile->linno;
+ 		/* { */
+ 		raise_error_syntax("missing '}'");
+ 	}
+@@ -12298,7 +12364,6 @@ parsebackq: {
+ 
+ 			case PEOF:
+ 			IF_ASH_ALIAS(case PEOA:)
+-				startlinno = g_parsefile->linno;
+ 				raise_error_syntax("EOF in backquote substitution");
+ 
+ 			case '\n':
+@@ -12380,8 +12445,6 @@ parsearith: {
+  *      quoted.
+  * If the token is TREDIR, then we set redirnode to a structure containing
+  *      the redirection.
+- * In all cases, the variable startlinno is set to the number of the line
+- *      on which the token starts.
+  *
+  * [Change comment:  here documents and internal procedures]
+  * [Readtoken shouldn't have any arguments.  Perhaps we should make the
+@@ -12419,7 +12482,6 @@ xxreadtoken(void)
+ 		return lasttoken;
+ 	}
+ 	setprompt_if(needprompt, 2);
+-	startlinno = g_parsefile->linno;
+ 	for (;;) {                      /* until token or start of word found */
+ 		c = pgetc();
+ 		if (c == ' ' || c == '\t' IF_ASH_ALIAS( || c == PEOA))
+@@ -12480,7 +12542,6 @@ xxreadtoken(void)
+ 		return lasttoken;
+ 	}
+ 	setprompt_if(needprompt, 2);
+-	startlinno = g_parsefile->linno;
+ 	for (;;) {      /* until token or start of word found */
+ 		c = pgetc();
+ 		switch (c) {
diff -urpN busybox-1.27.2/shell/ash_test/ash-getopts/getopt_nested.right busybox-1.28.0/shell/ash_test/ash-getopts/getopt_nested.right
--- busybox-1.27.2/shell/ash_test/ash-getopts/getopt_nested.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-getopts/getopt_nested.right	2017-09-07 14:42:40.000000000 +0200
@@ -0,0 +1,14 @@
+var:a
+var:b
+var:c
+var:a
+var:b
+var:c
+Illegal option -d
+var:?
+Illegal option -e
+var:?
+Illegal option -f
+var:?
+var:a
+End: var:? OPTIND:6
diff -urpN busybox-1.27.2/shell/ash_test/ash-getopts/getopt_nested.tests busybox-1.28.0/shell/ash_test/ash-getopts/getopt_nested.tests
--- busybox-1.27.2/shell/ash_test/ash-getopts/getopt_nested.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-getopts/getopt_nested.tests	2017-09-07 14:42:40.000000000 +0200
@@ -0,0 +1,21 @@
+# Test that there is no interference of getopt()
+# in getopts and unset.
+# It's unclear what "correct" OPTIND values should be
+# for "b" and "c" results from "-bc": 2? 3?
+# What we focus on here is that all options are reported
+# correct number of times and in correct sequence.
+
+(
+
+loop=99
+while getopts "abc" var -a -bc -abc -def -a; do
+    echo "var:$var" #OPTIND:$OPTIND
+    # this may use getopt():
+    unset -ff func
+    test $((--loop)) = 0 && break  # BUG if this triggers
+done
+echo "End: var:$var OPTIND:$OPTIND"
+
+) 2>&1 \
+| sed   -e 's/ unrecognized option: / invalid option -- /' \
+        -e 's/ illegal option -- / invalid option -- /' \
diff -urpN busybox-1.27.2/shell/ash_test/ash-getopts/getopt_optarg.right busybox-1.28.0/shell/ash_test/ash-getopts/getopt_optarg.right
--- busybox-1.27.2/shell/ash_test/ash-getopts/getopt_optarg.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-getopts/getopt_optarg.right	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,18 @@
+*** no OPTIND, optstring:'w:et' args:-q -w e -r -t -y
+Illegal option -q
+var:'?' OPTIND:2 OPTARG:''
+var:'w' OPTIND:4 OPTARG:'e'
+Illegal option -r
+var:'?' OPTIND:5 OPTARG:''
+var:'t' OPTIND:6 OPTARG:''
+Illegal option -y
+var:'?' OPTIND:7 OPTARG:''
+exited: var:'?' OPTIND:7 OPTARG:''
+*** OPTIND=0, optstring:'w:et' args:-w 1 -w2 -w -e -e -t -t
+var:'w' OPTIND:3 OPTARG:'1'
+var:'w' OPTIND:4 OPTARG:'2'
+var:'w' OPTIND:6 OPTARG:'-e'
+var:'e' OPTIND:7 OPTARG:''
+var:'t' OPTIND:8 OPTARG:''
+var:'t' OPTIND:9 OPTARG:''
+exited: var:'?' OPTIND:9 OPTARG:''
diff -urpN busybox-1.27.2/shell/ash_test/ash-getopts/getopt_optarg.tests busybox-1.28.0/shell/ash_test/ash-getopts/getopt_optarg.tests
--- busybox-1.27.2/shell/ash_test/ash-getopts/getopt_optarg.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-getopts/getopt_optarg.tests	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,18 @@
+set -- -q -w e -r -t -y
+echo "*** no OPTIND, optstring:'w:et' args:$*"
+var=QWERTY
+OPTARG=ASDFGH
+while getopts "w:et" var; do
+	echo "var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+	OPTARG=ASDFGH
+done
+echo "exited: var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+
+set -- -w 1 -w2 -w -e -e -t -t
+echo "*** OPTIND=0, optstring:'w:et' args:$*"
+OPTIND=0
+while getopts "w:et" var; do
+	echo "var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+	OPTARG=ASDFGH
+done
+echo "exited: var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
diff -urpN busybox-1.27.2/shell/ash_test/ash-getopts/getopt_positional.right busybox-1.28.0/shell/ash_test/ash-getopts/getopt_positional.right
--- busybox-1.27.2/shell/ash_test/ash-getopts/getopt_positional.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-getopts/getopt_positional.right	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,6 @@
+*** no OPTIND, optstring:'we' args:-q -w -e r -t -y
+Illegal option -q
+var:'?' OPTIND:2
+var:'w' OPTIND:3
+var:'e' OPTIND:4
+exited: var:'?' OPTIND:4
diff -urpN busybox-1.27.2/shell/ash_test/ash-getopts/getopt_positional.tests busybox-1.28.0/shell/ash_test/ash-getopts/getopt_positional.tests
--- busybox-1.27.2/shell/ash_test/ash-getopts/getopt_positional.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-getopts/getopt_positional.tests	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,8 @@
+set -- -q -w -e r -t -y
+echo "*** no OPTIND, optstring:'we' args:$*"
+var=QWERTY
+while getopts "we" var; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+# unfortunately, "rc:0" is shown since while's overall exitcode is "success"
+echo "exited: var:'$var' OPTIND:$OPTIND"
diff -urpN busybox-1.27.2/shell/ash_test/ash-getopts/getopt_silent.right busybox-1.28.0/shell/ash_test/ash-getopts/getopt_silent.right
--- busybox-1.27.2/shell/ash_test/ash-getopts/getopt_silent.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-getopts/getopt_silent.right	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,6 @@
+*** optstring:':ac' args:-a -b -c
+1 rc:0 var:'a' OPTIND:2 OPTARG:''
+2 rc:0 var:'?' OPTIND:3 OPTARG:'b'
+3 rc:0 var:'c' OPTIND:4 OPTARG:''
+4 rc:1 var:'?' OPTIND:4 OPTARG:''
+5 rc:1 var:'?' OPTIND:4 OPTARG:''
diff -urpN busybox-1.27.2/shell/ash_test/ash-getopts/getopt_silent.tests busybox-1.28.0/shell/ash_test/ash-getopts/getopt_silent.tests
--- busybox-1.27.2/shell/ash_test/ash-getopts/getopt_silent.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-getopts/getopt_silent.tests	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,23 @@
+# Open Group Base Specifications Issue 7:
+# """
+# If an unknown option is met, VAR shall be set to "?". In this case,
+# if the first character in optstring is ":", OPTARG shall be set
+# to the option character found, but no output shall be written
+# to standard error; otherwise, the shell variable OPTARG shall be
+# unset and a diagnostic message shall be written to standard error."
+# ...
+# If an option-argument is missing:
+# If the first character of optstring is ":", VAR shall be set to ":"
+# and OPTARG shall be set to the option character found.
+# """
+
+echo "*** optstring:':ac' args:-a -b -c"
+getopts ":ac" var -a -b -c; echo "1 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+getopts ":ac" var -a -b -c; echo "2 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+getopts ":ac" var -a -b -c; echo "3 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+getopts ":ac" var -a -b -c; echo "4 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+# Previous line should result in "rc:1", which is normally treated
+# in getopts loops as exit condition.
+# Nevertheless, let's verify that calling it yet another time doesn't do
+# anything weird:
+getopts ":ac" var -a -b -c; echo "5 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
diff -urpN busybox-1.27.2/shell/ash_test/ash-getopts/getopt_simple.right busybox-1.28.0/shell/ash_test/ash-getopts/getopt_simple.right
--- busybox-1.27.2/shell/ash_test/ash-getopts/getopt_simple.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-getopts/getopt_simple.right	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,34 @@
+*** no OPTIND, optstring:'ab' args:-a -b c
+var:'a' OPTIND:2
+var:'b' OPTIND:3
+exited: rc:0 var:'?' OPTIND:3
+*** OPTIND=1, optstring:'ab' args:-a -b c
+var:'a' OPTIND:2
+var:'b' OPTIND:3
+exited: rc:0 var:'?' OPTIND:3
+*** OPTIND=0, optstring:'ab' args:-a -b c
+var:'a' OPTIND:2
+var:'b' OPTIND:3
+exited: rc:0 var:'?' OPTIND:3
+*** unset OPTIND, optstring:'ab' args:-a -b c
+var:'a' OPTIND:2
+var:'b' OPTIND:3
+exited: rc:0 var:'?' OPTIND:3
+*** optstring:'ab' args:-a -b c
+1 rc:0 var:'a' OPTIND:2
+2 rc:0 var:'b' OPTIND:3
+3 rc:1 var:'?' OPTIND:3
+*** unset OPTIND, optstring:'ab' args:-a c -c -b d
+var:'a' OPTIND:2
+exited: rc:0 var:'?' OPTIND:2
+*** unset OPTIND, optstring:'ab' args:-a -c -b d
+var:'a' OPTIND:2
+Illegal option -c
+var:'?' OPTIND:3
+var:'b' OPTIND:4
+exited: rc:0 var:'?' OPTIND:4
+*** unset OPTIND, OPTERR=0, optstring:'ab' args:-a -c -b d
+var:'a' OPTIND:2
+var:'?' OPTIND:3
+var:'b' OPTIND:4
+exited: rc:0 var:'?' OPTIND:4
diff -urpN busybox-1.27.2/shell/ash_test/ash-getopts/getopt_simple.tests busybox-1.28.0/shell/ash_test/ash-getopts/getopt_simple.tests
--- busybox-1.27.2/shell/ash_test/ash-getopts/getopt_simple.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-getopts/getopt_simple.tests	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,75 @@
+# Simple usage cases for getopts.
+#
+# OPTIND is either not touched at all (first loop with getopts,
+# relying on shell startup init), or getopts state is reset
+# before new loop with "unset OPTIND", "OPTIND=1" or "OPTIND=0".
+#
+# Each option is a separate argument (no "-abc"). This conceptually
+# needs only $OPTIND to hold getopts state.
+#
+# We check that loop does not stop on unknown option (sets "?"),
+# stops on _first_ non-option argument.
+
+echo "*** no OPTIND, optstring:'ab' args:-a -b c"
+var=QWERTY
+while getopts "ab" var -a -b c; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+# unfortunately, "rc:0" is shown since while's overall exitcode is "success"
+echo "exited: rc:$? var:'$var' OPTIND:$OPTIND"
+
+# Resetting behavior =1
+echo "*** OPTIND=1, optstring:'ab' args:-a -b c"
+OPTIND=1
+while getopts "ab" var -a -b c; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+echo "exited: rc:$? var:'$var' OPTIND:$OPTIND"
+
+# Resetting behavior =0
+echo "*** OPTIND=0, optstring:'ab' args:-a -b c"
+OPTIND=0
+while getopts "ab" var -a -b c; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+echo "exited: rc:$? var:'$var' OPTIND:$OPTIND"
+
+# Resetting behavior "unset"
+echo "*** unset OPTIND, optstring:'ab' args:-a -b c"
+unset OPTIND
+while getopts "ab" var -a -b c; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+echo "exited: rc:$? var:'$var' OPTIND:$OPTIND"
+
+# What is the final exitcode?
+echo "*** optstring:'ab' args:-a -b c"
+unset OPTIND
+getopts "ab" var -a -b c; echo "1 rc:$? var:'$var' OPTIND:$OPTIND"
+getopts "ab" var -a -b c; echo "2 rc:$? var:'$var' OPTIND:$OPTIND"
+getopts "ab" var -a -b c; echo "3 rc:$? var:'$var' OPTIND:$OPTIND"
+
+# Where would it stop? c or -c?
+echo "*** unset OPTIND, optstring:'ab' args:-a c -c -b d"
+unset OPTIND
+while getopts "ab" var -a c -c -b d; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+echo "exited: rc:$? var:'$var' OPTIND:$OPTIND"
+
+# What happens on unknown option?
+echo "*** unset OPTIND, optstring:'ab' args:-a -c -b d"
+unset OPTIND
+while getopts "ab" var -a -c -b d; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+echo "exited: rc:$? var:'$var' OPTIND:$OPTIND"
+
+# ORTERR=0 suppresses error message?
+echo "*** unset OPTIND, OPTERR=0, optstring:'ab' args:-a -c -b d"
+unset OPTIND
+OPTERR=0
+while getopts "ab" var -a -c -b d; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+echo "exited: rc:$? var:'$var' OPTIND:$OPTIND"
diff -urpN busybox-1.27.2/shell/ash_test/ash-getopts/getopt_test_libc_bug.right busybox-1.28.0/shell/ash_test/ash-getopts/getopt_test_libc_bug.right
--- busybox-1.27.2/shell/ash_test/ash-getopts/getopt_test_libc_bug.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-getopts/getopt_test_libc_bug.right	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,26 @@
+*** optstring:'ac' args:-a -b -c -d e
+1 rc:0 var:'a' OPTIND:2 OPTARG:''
+Illegal option -b
+2 rc:0 var:'?' OPTIND:3 OPTARG:''
+3 rc:0 var:'c' OPTIND:4 OPTARG:''
+Illegal option -d
+4 rc:0 var:'?' OPTIND:5 OPTARG:''
+5 rc:1 var:'?' OPTIND:5 OPTARG:''
+
+*** optstring:'ac' args:-a -b -c -d e
+1 rc:0 var:'a' OPTIND:2 OPTARG:''
+Illegal option -b
+2 rc:0 var:'?' OPTIND:3 OPTARG:''
+3 rc:0 var:'c' OPTIND:4 OPTARG:''
+Illegal option -d
+4 rc:0 var:'?' OPTIND:5 OPTARG:''
+5 rc:1 var:'?' OPTIND:5 OPTARG:''
+
+*** optstring:'ac' args:-a -b -c -d e
+1 rc:0 var:'a' OPTIND:2 OPTARG:''
+Illegal option -b
+2 rc:0 var:'?' OPTIND:3 OPTARG:''
+3 rc:0 var:'c' OPTIND:4 OPTARG:''
+Illegal option -d
+4 rc:0 var:'?' OPTIND:5 OPTARG:''
+5 rc:1 var:'?' OPTIND:5 OPTARG:''
diff -urpN busybox-1.27.2/shell/ash_test/ash-getopts/getopt_test_libc_bug.tests busybox-1.28.0/shell/ash_test/ash-getopts/getopt_test_libc_bug.tests
--- busybox-1.27.2/shell/ash_test/ash-getopts/getopt_test_libc_bug.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-getopts/getopt_test_libc_bug.tests	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,38 @@
+# This test can fail with libc with buggy getopt() implementation.
+# If getopt() wants to parse multi-option args (-abc),
+# it needs to remember a position within current arg.
+#
+# If this position is kept as a POINTER, not an offset,
+# and if argv[] ADDRESSES (not contents!) change, it blows up.
+
+echo "*** optstring:'ac' args:-a -b -c -d e"
+getopts "ac" var -a -b -c -d e; echo "1 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+getopts "ac" var -a -b -c -d e; echo "2 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+getopts "ac" var -a -b -c -d e; echo "3 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+getopts "ac" var -a -b -c -d e; echo "4 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+getopts "ac" var -a -b -c -d e; echo "5 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+
+# Above: args are (usually) in the same locations in memory.
+# Below: variable allocations change the location.
+
+echo
+echo "*** optstring:'ac' args:-a -b -c -d e"
+unset OPTIND
+OPTARG=QWERTY; getopts "ac" var -a -b -c -d e; echo "1 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+NEWVAR=NEWVAL; getopts "ac" var -a -b -c -d e; echo "2 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+VAR111=NEWVAL; getopts "ac" var -a -b -c -d e; echo "3 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+VAR222=NEWVAL; getopts "ac" var -a -b -c -d e; echo "4 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+VAR333=NEWVAL; getopts "ac" var -a -b -c -d e; echo "5 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+
+# Slightly different attempts to force reallocations
+
+echo
+echo "*** optstring:'ac' args:-a -b -c -d e"
+unset OPTIND
+export OPTARG; getopts "ac" var -a -b -c -d e; echo "1 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+export NEWVAR; getopts "ac" var -a -b -c -d e; echo "2 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+export VAR111; getopts "ac" var -a -b -c -d e; echo "3 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+export VAR222; getopts "ac" var -a -b -c -d e; echo "4 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+export VAR333; getopts "ac" var -a -b -c -d e; echo "5 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+
+# All copies of code above should generate identical output
diff -urpN busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc1.right busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc1.right
--- busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc1.right	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc1.right	2017-07-18 19:13:20.000000000 +0200
@@ -1 +1,5 @@
-./heredoc1.tests: line 3: syntax error: unexpected "then"
+qwe
+asd
+123
+456
+Ok
diff -urpN busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc1.tests busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc1.tests
--- busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc1.tests	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc1.tests	2017-07-18 19:13:20.000000000 +0200
@@ -1,3 +1,9 @@
-# We used to SEGV on this:
-
-<<EOF; then <W
+cat <<000; cat <<www; cat <<eee
+000
+qwe
+asd
+www
+123
+456
+eee
+echo Ok
diff -urpN busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc3.right busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc3.right
--- busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc3.right	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc3.right	2017-07-18 19:13:20.000000000 +0200
@@ -1 +1,9 @@
-hello
+exit EOF-f
+"
+echo $f
+echo `echo Hello World`
+moo	 
+ EOF-f
+EOF-f   f
+EOF-f 
+Ok
diff -urpN busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc3.tests busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc3.tests
--- busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc3.tests	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc3.tests	2017-07-18 19:13:20.000000000 +0200
@@ -1,9 +1,12 @@
-echo hello >greeting
-cat <<EOF &&
-$(cat greeting)
-EOF
-{
-	echo $?
-	cat greeting
-} >/dev/null
-rm greeting
+f=1
+  cat <<- EOF-f""
+		exit EOF-f
+"
+echo $f
+echo `echo Hello World`
+		moo	 
+ EOF-f
+EOF-f   f
+EOF-f 
+EOF-f
+echo Ok
diff -urpN busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc8.right busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc8.right
--- busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc8.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc8.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1 @@
+./heredoc8.tests: line 3: syntax error: unexpected "then"
diff -urpN busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc8.tests busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc8.tests
--- busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc8.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc8.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,3 @@
+# ash used to SEGV on this:
+
+<<EOF; then <W
diff -urpN busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc9.right busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc9.right
--- busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc9.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc9.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1 @@
+hello
diff -urpN busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc9.tests busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc9.tests
--- busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc9.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc9.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,9 @@
+echo hello >greeting
+cat <<EOF &&
+$(cat greeting)
+EOF
+{
+	echo $?
+	cat greeting
+} >/dev/null
+rm greeting
diff -urpN busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc_empty.right busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc_empty.right
--- busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc_empty.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc_empty.right	2017-07-29 23:01:53.000000000 +0200
@@ -0,0 +1,3 @@
+OK
+OK
+OK
diff -urpN busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc_empty.tests busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc_empty.tests
--- busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc_empty.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc_empty.tests	2017-07-29 23:01:53.000000000 +0200
@@ -0,0 +1,8 @@
+unset a
+cat <<- $a
+	OK
+$a
+cat <<- ""
+	OK
+
+echo OK
diff -urpN busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc_empty2.right busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc_empty2.right
--- busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc_empty2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc_empty2.right	2017-07-29 23:01:53.000000000 +0200
@@ -0,0 +1,4 @@
+OK1
+Ok:0
+OK2
+Ok:0
diff -urpN busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc_empty2.tests busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc_empty2.tests
--- busybox-1.27.2/shell/ash_test/ash-heredoc/heredoc_empty2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-heredoc/heredoc_empty2.tests	2017-07-29 23:01:53.000000000 +0200
@@ -0,0 +1,14 @@
+unset a
+
+# Heredoc with empty delimiter
+cat <<- ""
+	OK1
+
+echo Ok:$?
+
+# Heredoc with empty delimiter
+cat <<- ""
+	OK2
+	
+
+echo Ok:$?
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/assignment2.right busybox-1.28.0/shell/ash_test/ash-misc/assignment2.right
--- busybox-1.27.2/shell/ash_test/ash-misc/assignment2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-misc/assignment2.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,2 @@
+./assignment2.tests: line 2: a=b: not found
+127
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/assignment2.tests busybox-1.28.0/shell/ash_test/ash-misc/assignment2.tests
--- busybox-1.27.2/shell/ash_test/ash-misc/assignment2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-misc/assignment2.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,3 @@
+# This must not be interpreted as an assignment
+a''=b true
+echo $?
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/empty_args.right busybox-1.28.0/shell/ash_test/ash-misc/empty_args.right
--- busybox-1.27.2/shell/ash_test/ash-misc/empty_args.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-misc/empty_args.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,6 @@
+Null 0th arg:
+./empty_args.tests: line 2: : Permission denied
+127
+Null 1st arg:
+0
+Null arg in exec:
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/empty_args.tests busybox-1.28.0/shell/ash_test/ash-misc/empty_args.tests
--- busybox-1.27.2/shell/ash_test/ash-misc/empty_args.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-misc/empty_args.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,9 @@
+echo Null 0th arg:
+""
+echo $?
+echo Null 1st arg:
+# printf without args would print usage info
+printf ""
+echo $?
+echo Null arg in exec:
+exec printf ""
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/env_and_func.right busybox-1.28.0/shell/ash_test/ash-misc/env_and_func.right
--- busybox-1.27.2/shell/ash_test/ash-misc/env_and_func.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-misc/env_and_func.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,2 @@
+var=val
+var=val
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/env_and_func.tests busybox-1.28.0/shell/ash_test/ash-misc/env_and_func.tests
--- busybox-1.27.2/shell/ash_test/ash-misc/env_and_func.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-misc/env_and_func.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,8 @@
+var=old
+f() { echo "var=$var"; }
+# bash: POSIXLY_CORRECT behavior is to "leak" new variable values
+# out of function invocations (similar to "special builtins" behavior);
+# but in "bash mode", they don't leak.
+# hush does not "leak" values. ash does.
+var=val f
+echo "var=$var"
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/func6.right busybox-1.28.0/shell/ash_test/ash-misc/func6.right
--- busybox-1.27.2/shell/ash_test/ash-misc/func6.right	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-misc/func6.right	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-Two:2
-Two:2
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/func6.tests busybox-1.28.0/shell/ash_test/ash-misc/func6.tests
--- busybox-1.27.2/shell/ash_test/ash-misc/func6.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-misc/func6.tests	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-f1() {
-	while return 2; do :; done
-}
-f1
-echo Two:$?
-
-f2() {
-	while :; do return 2; done
-}
-f2
-echo Two:$?
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/func_prio_over_builtins.right busybox-1.28.0/shell/ash_test/ash-misc/func_prio_over_builtins.right
--- busybox-1.27.2/shell/ash_test/ash-misc/func_prio_over_builtins.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-misc/func_prio_over_builtins.right	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,5 @@
+YES
+YES
+YES
+YES
+Ok:YES
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/func_prio_over_builtins.tests busybox-1.28.0/shell/ash_test/ash-misc/func_prio_over_builtins.tests
--- busybox-1.27.2/shell/ash_test/ash-misc/func_prio_over_builtins.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-misc/func_prio_over_builtins.tests	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,5 @@
+true() { echo YES >&2; }
+true
+true | true
+(true)
+echo Ok:`true 2>&1`
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/func_return1.right busybox-1.28.0/shell/ash_test/ash-misc/func_return1.right
--- busybox-1.27.2/shell/ash_test/ash-misc/func_return1.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-misc/func_return1.right	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,2 @@
+Two:2
+Two:2
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/func_return1.tests busybox-1.28.0/shell/ash_test/ash-misc/func_return1.tests
--- busybox-1.27.2/shell/ash_test/ash-misc/func_return1.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-misc/func_return1.tests	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,11 @@
+f1() {
+	while return 2; do :; done
+}
+f1
+echo Two:$?
+
+f2() {
+	while :; do return 2; done
+}
+f2
+echo Two:$?
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/func_return2.right busybox-1.28.0/shell/ash_test/ash-misc/func_return2.right
--- busybox-1.27.2/shell/ash_test/ash-misc/func_return2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-misc/func_return2.right	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,2 @@
+Two:2
+Two:2
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/func_return2.tests busybox-1.28.0/shell/ash_test/ash-misc/func_return2.tests
--- busybox-1.27.2/shell/ash_test/ash-misc/func_return2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-misc/func_return2.tests	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,6 @@
+f1() { return 2; }
+f1
+echo Two:$?
+false
+true | f1
+echo Two:$?
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/shift1.tests busybox-1.28.0/shell/ash_test/ash-misc/shift1.tests
--- busybox-1.27.2/shell/ash_test/ash-misc/shift1.tests	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-misc/shift1.tests	2017-07-18 19:13:20.000000000 +0200
@@ -1,5 +1,5 @@
 $THIS_SH -c 'shift;    echo "$@"' 0 1 2 3 4
-#We do abort on -1, but then we abort. bash executes echo.
+# We do complain on -1, but then we abort. bash executes echo.
 $THIS_SH -c 'shift -1; echo "$@"' 0 1 2 3 4
 $THIS_SH -c 'shift  0; echo "$@"' 0 1 2 3 4
 $THIS_SH -c 'shift  1; echo "$@"' 0 1 2 3 4
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/sigint1.right busybox-1.28.0/shell/ash_test/ash-misc/sigint1.right
--- busybox-1.27.2/shell/ash_test/ash-misc/sigint1.right	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-misc/sigint1.right	1970-01-01 01:00:00.000000000 +0100
@@ -1 +0,0 @@
-Sending SIGINT to main shell PID
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/sigint1.tests busybox-1.28.0/shell/ash_test/ash-misc/sigint1.tests
--- busybox-1.27.2/shell/ash_test/ash-misc/sigint1.tests	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-misc/sigint1.tests	1970-01-01 01:00:00.000000000 +0100
@@ -1,41 +0,0 @@
-# What should happen if non-interactive shell gets SIGINT?
-
-(sleep 1; echo Sending SIGINT to main shell PID; exec kill -INT $$) &
-
-# We create a child which exits with 0 even on SIGINT
-# (The complex command is necessary only if SIGINT is generated by ^C,
-# in this testcase even bare "sleep 2" would do because
-# in the testcase we don't send SIGINT *to the child*...)
-$THIS_SH -c 'trap "exit 0" SIGINT; sleep 2'
-
-# In one second, we (main shell) get SIGINT here.
-# The question is whether we should, or should not, exit.
-
-# bash will not stop here. It will execute next command(s).
-
-# The rationale for this is described here:
-# http://www.cons.org/cracauer/sigint.html
-#
-# Basically, bash will not exit on SIGINT immediately if it waits
-# for a child. It will wait for the child to exit.
-# If child exits NOT by dying on SIGINT, then bash will not exit.
-#
-# The idea is that the following script:
-# | emacs file.txt
-# | more cmds
-# User may use ^C to interrupt editor's ops like search. But then
-# emacs exits normally. User expects that script doesn't stop.
-#
-# This is a nice idea, but detecting "did process really exit
-# with SIGINT?" is racy. Consider:
-# | bash -c 'while true; do /bin/true; done'
-# When ^C is pressed while bash waits for /bin/true to exit,
-# it may happen that /bin/true exits with exitcode 0 before
-# ^C is delivered to it as SIGINT. bash will see SIGINT, then
-# it will see that child exited with 0, and bash will NOT EXIT.
-
-# Therefore we do not implement bash behavior.
-# I'd say that emacs need to put itself into a separate pgrp
-# to isolate shell from getting stray SIGINTs from ^C.
-
-echo Next command after SIGINT was executed
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/tickquote1.tests busybox-1.28.0/shell/ash_test/ash-misc/tickquote1.tests
--- busybox-1.27.2/shell/ash_test/ash-misc/tickquote1.tests	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-misc/tickquote1.tests	2017-07-18 19:13:20.000000000 +0200
@@ -1 +1 @@
-echo `"pwd`
+echo _`"pwd`_
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/wait6.right busybox-1.28.0/shell/ash_test/ash-misc/wait6.right
--- busybox-1.27.2/shell/ash_test/ash-misc/wait6.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-misc/wait6.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,2 @@
+0
+3
diff -urpN busybox-1.27.2/shell/ash_test/ash-misc/wait6.tests busybox-1.28.0/shell/ash_test/ash-misc/wait6.tests
--- busybox-1.27.2/shell/ash_test/ash-misc/wait6.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-misc/wait6.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,6 @@
+# In bash, "wait $!" extracts correct exitcode even if bg task has already exited
+# It prints 0, then 3:
+(sleep 0; exit 3) & sleep 1
+echo $?
+wait $!
+echo $?
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/and_or_and_backgrounding.right busybox-1.28.0/shell/ash_test/ash-parsing/and_or_and_backgrounding.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/and_or_and_backgrounding.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/and_or_and_backgrounding.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,4 @@
+First
+Second
+Third
+Done
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/and_or_and_backgrounding.tests busybox-1.28.0/shell/ash_test/ash-parsing/and_or_and_backgrounding.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/and_or_and_backgrounding.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/and_or_and_backgrounding.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,30 @@
+# According to this doc, && || have higher precedence than ; &.
+# See example below.
+# Precedence of ; is not a problem in practice. Precedence of & is.
+#
+#http://www.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html
+#
+#2.9.3 Lists
+#
+#An AND-OR list is a sequence of one or more pipelines separated by
+#the operators "&&" and "||" .
+#
+#A list is a sequence of one or more AND-OR lists separated by the operators
+#';' and '&' and optionally terminated by ';', '&', or <newline>.
+#
+#The operators "&&" and "||" shall have equal precedence and shall be
+#evaluated with left associativity. For example, both of the following
+#commands write solely bar to standard output:
+#
+#    false && echo foo || echo bar
+#    true || echo foo && echo bar
+#
+#A ';' or <newline> terminator shall cause the preceding AND-OR list
+#to be executed sequentially; an '&' shall cause asynchronous execution
+#of the preceding AND-OR list.
+
+echo First && sleep 0.2 && echo Third &
+sleep 0.1
+echo Second
+wait
+echo Done
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/argv0.right busybox-1.28.0/shell/ash_test/ash-parsing/argv0.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/argv0.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/argv0.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1 @@
+OK
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/argv0.tests busybox-1.28.0/shell/ash_test/ash-parsing/argv0.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/argv0.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/argv0.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,4 @@
+if test $# = 0; then
+    exec "$THIS_SH" "$0" arg
+fi
+echo OK
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/brace1.right busybox-1.28.0/shell/ash_test/ash-parsing/brace1.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/brace1.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/brace1.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,7 @@
+{abc}
+{
+}
+./brace1.tests: line 4: {cmd: not found
+./brace1.tests: line 5: {: not found
+./brace1.tests: line 6: {: not found
+Done: 127
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/brace1.tests busybox-1.28.0/shell/ash_test/ash-parsing/brace1.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/brace1.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/brace1.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,7 @@
+echo {abc}
+echo {
+echo }
+{cmd
+""{
+{""
+echo Done: $?
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/brace2.right busybox-1.28.0/shell/ash_test/ash-parsing/brace2.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/brace2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/brace2.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,3 @@
+{q,w}
+{q,w}
+Done
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/brace2.tests busybox-1.28.0/shell/ash_test/ash-parsing/brace2.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/brace2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/brace2.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,5 @@
+v='{q,w}'
+# Should not brace-expand v value
+echo $v
+echo "$v"
+echo Done
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/comment1.right busybox-1.28.0/shell/ash_test/ash-parsing/comment1.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/comment1.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/comment1.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,2 @@
+Nothing:
+String: #should-be-echoed
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/comment1.tests busybox-1.28.0/shell/ash_test/ash-parsing/comment1.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/comment1.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/comment1.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,2 @@
+echo Nothing: #should-not-be-echoed
+echo String: ""#should-be-echoed
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/comment2.right busybox-1.28.0/shell/ash_test/ash-parsing/comment2.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/comment2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/comment2.right	2017-12-04 16:07:47.000000000 +0100
@@ -0,0 +1,4 @@
+Ok1
+Ok2
+Ok5
+Ok6
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/comment2.tests busybox-1.28.0/shell/ash_test/ash-parsing/comment2.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/comment2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/comment2.tests	2017-12-04 16:07:47.000000000 +0100
@@ -0,0 +1,13 @@
+echo "`echo Ok1 #comment is ignored`"
+echo `echo Ok2 #comment is ignored`
+#
+# Surprisingly, bash does not handle comments in $()
+# the same way as in ``. "#" causes the rest of the line, _including_ )",
+# to be ignored. These lines would cause an error:
+#echo "$(echo Ok3 #comment is ignored)"
+#echo $(echo Ok4 #comment is ignored)
+#
+echo "$(echo Ok5 #comment is ignored
+)"
+echo $(echo Ok6 #comment is ignored
+)
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/eol1.right busybox-1.28.0/shell/ash_test/ash-parsing/eol1.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/eol1.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/eol1.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1 @@
+Done:0
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/eol1.tests busybox-1.28.0/shell/ash_test/ash-parsing/eol1.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/eol1.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/eol1.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,18 @@
+# bug was that we treated <newline> as ';' in this line:
+true || echo foo |
+echo BAD1 | cat
+
+# variation on the same theme
+true || echo foo |
+# comment
+echo BAD2 | cat
+
+# variation on the same theme
+true || echo foo |
+
+echo BAD3 | cat
+
+# this should error out, but currently works in hush:
+#true || echo foo |;
+
+echo Done:$?
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/escape1.right busybox-1.28.0/shell/ash_test/ash-parsing/escape1.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/escape1.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/escape1.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,4 @@
+\
+a\b
+\\
+c\\d
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/escape1.tests busybox-1.28.0/shell/ash_test/ash-parsing/escape1.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/escape1.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/escape1.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,6 @@
+test "$CONFIG_FEATURE_FANCY_ECHO" = "y" || exit 77
+
+echo "\\"
+echo a"\\"b
+echo '\\'
+echo c'\\'d
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/escape2.right busybox-1.28.0/shell/ash_test/ash-parsing/escape2.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/escape2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/escape2.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,4 @@
+*?[a]*
+a*?[a]*b
+*?[a]*
+c*?[a]*d
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/escape2.tests busybox-1.28.0/shell/ash_test/ash-parsing/escape2.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/escape2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/escape2.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,4 @@
+echo "*?[a]*"
+echo a"*?[a]*"b
+echo '*?[a]*'
+echo c'*?[a]*'d
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/escape3.right busybox-1.28.0/shell/ash_test/ash-parsing/escape3.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/escape3.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/escape3.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,23 @@
+v: a \ b \\ c \\\ d \\\\ e
+v: a \ b \\ c \\\ d \\\\ e
+Unquoted:
+.a.
+.\.
+.b.
+.\\.
+.c.
+.\\\.
+.d.
+.\\\\.
+.e.
+Quoted:
+.a.
+.\.
+.b.
+.\\.
+.c.
+.\\\.
+.d.
+.\\\\.
+.e.
+done
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/escape3.tests busybox-1.28.0/shell/ash_test/ash-parsing/escape3.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/escape3.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/escape3.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,10 @@
+test "$CONFIG_FEATURE_FANCY_ECHO" = "y" || exit 77
+
+v='a \ b \\ c \\\ d \\\\ e'
+echo v: $v
+echo v: "$v"
+echo Unquoted:
+for a in $v; do echo .$a.; done
+echo Quoted:
+for a in $v; do echo ".$a."; done
+echo done
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/escape4.right busybox-1.28.0/shell/ash_test/ash-parsing/escape4.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/escape4.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/escape4.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,2 @@
+Ok
+End
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/escape4.tests busybox-1.28.0/shell/ash_test/ash-parsing/escape4.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/escape4.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/escape4.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,6 @@
+i\
+f tr\
+ue; th\
+en echo "O\
+k"; fi; echo "\
+End"
\ No newline at end of file
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/escape5.right busybox-1.28.0/shell/ash_test/ash-parsing/escape5.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/escape5.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/escape5.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,9 @@
+a\nb\nc\n
+a
+b
+c
+a\nb\nc\n
+a
+b
+c
+Done
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/escape5.tests busybox-1.28.0/shell/ash_test/ash-parsing/escape5.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/escape5.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/escape5.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,7 @@
+v="a\nb\nc\n"
+echo "$v"
+printf "$v"
+v='a\nb\nc\n'
+echo "$v"
+printf "$v"
+echo Done
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/group1.right busybox-1.28.0/shell/ash_test/ash-parsing/group1.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/group1.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/group1.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1 @@
+word} }
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/group1.tests busybox-1.28.0/shell/ash_test/ash-parsing/group1.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/group1.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/group1.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1 @@
+{ echo word} }; }
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/group2.right busybox-1.28.0/shell/ash_test/ash-parsing/group2.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/group2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/group2.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,2 @@
+got TERM
+Done: 0
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/group2.tests busybox-1.28.0/shell/ash_test/ash-parsing/group2.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/group2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/group2.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,3 @@
+# Bug was in handling of "}&" without space
+{ trap "echo got TERM" TERM; sleep 2; }& sleep 1; kill $!; wait
+echo Done: $?
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/groups_and_keywords1.right busybox-1.28.0/shell/ash_test/ash-parsing/groups_and_keywords1.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/groups_and_keywords1.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/groups_and_keywords1.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,11 @@
+Semicolons after } can be omitted 1:
+foo
+bar
+Semicolons after } can be omitted 2:
+foo
+bar
+Semicolons after fi can be omitted:
+foo
+bar
+baz
+Done:0
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/groups_and_keywords1.tests busybox-1.28.0/shell/ash_test/ash-parsing/groups_and_keywords1.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/groups_and_keywords1.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/groups_and_keywords1.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,10 @@
+echo "Semicolons after } can be omitted 1:"
+if { echo foo; } then { echo bar; } fi
+
+echo "Semicolons after } can be omitted 2:"
+while { echo foo; } do { echo bar; break; } done
+
+echo "Semicolons after fi can be omitted:"
+while if echo foo; then echo bar; fi do echo baz; break; done
+
+echo Done:$?
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/groups_and_keywords2.right busybox-1.28.0/shell/ash_test/ash-parsing/groups_and_keywords2.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/groups_and_keywords2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/groups_and_keywords2.right	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,3 @@
+./groups_and_keywords2.tests: eval: line 1: syntax error: unexpected ")"
+Fail:2
+./groups_and_keywords2.tests: line 8: syntax error: unexpected ")"
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/groups_and_keywords2.tests busybox-1.28.0/shell/ash_test/ash-parsing/groups_and_keywords2.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/groups_and_keywords2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/groups_and_keywords2.tests	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,9 @@
+# This is an error
+(eval 'if() { echo; }')
+echo Fail:$?
+# ^^^^^^ bash prints 1, but interactively it sets $? = 2
+# we print 2
+
+# This is an error, and it aborts in script
+if() { echo; }
+echo Not reached
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/negate.right busybox-1.28.0/shell/ash_test/ash-parsing/negate.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/negate.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/negate.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,36 @@
+! printing !
+0
+1
+1
+0
+0
+0
+!
+a
+b
+c
+! 1
+a 1
+b 1
+c 1
+! 1
+a 1
+b 1
+c 1
+0
+0
+0
+0
+1
+1
+1
+1
+0
+0
+0
+0
+1
+1
+1
+1
+Done
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/negate.tests busybox-1.28.0/shell/ash_test/ash-parsing/negate.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/negate.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/negate.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,19 @@
+echo ! printing !
+! false
+echo $?
+! true
+echo $?
+if ! false; then false; echo $?; fi
+echo $?
+if ! false; then ! false; echo $?; fi
+echo $?
+PRINTF=`which printf`
+for a in ! a b c; do echo $a; done
+for a in ! a b c; do ! printf "$a "; echo $?; done
+test x"$PRINTF" = x"" && exit 1
+for a in ! a b c; do ! "$PRINTF" "$a "; echo $?; done
+for a in ! a b c; do ! printf "$a " | false; echo $?; done
+for a in ! a b c; do ! printf "$a " | true; echo $?; done
+for a in ! a b c; do ! { printf "$a " | false; }; echo $?; done
+for a in ! a b c; do ! { printf "$a " | true; }; echo $?; done
+echo Done
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/noeol.right busybox-1.28.0/shell/ash_test/ash-parsing/noeol.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/noeol.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/noeol.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1 @@
+HELLO
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/noeol.tests busybox-1.28.0/shell/ash_test/ash-parsing/noeol.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/noeol.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/noeol.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,2 @@
+# next line has no EOL!
+echo HELLO
\ No newline at end of file
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/noeol2.right busybox-1.28.0/shell/ash_test/ash-parsing/noeol2.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/noeol2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/noeol2.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1 @@
+1
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/noeol2.tests busybox-1.28.0/shell/ash_test/ash-parsing/noeol2.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/noeol2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/noeol2.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,7 @@
+# last line has no EOL!
+if true
+then
+  echo 1
+else
+  echo 2
+fi
\ No newline at end of file
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/noeol3.right busybox-1.28.0/shell/ash_test/ash-parsing/noeol3.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/noeol3.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/noeol3.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1 @@
+./noeol3.tests: line 2: syntax error: unterminated quoted string
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/noeol3.tests busybox-1.28.0/shell/ash_test/ash-parsing/noeol3.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/noeol3.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/noeol3.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,2 @@
+# last line has no EOL!
+echo "unterminated
\ No newline at end of file
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/process_subst.right busybox-1.28.0/shell/ash_test/ash-parsing/process_subst.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/process_subst.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/process_subst.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,3 @@
+TESTzzBEST
+TEST$(echo zz)BEST
+TEST'BEST
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/process_subst.tests busybox-1.28.0/shell/ash_test/ash-parsing/process_subst.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/process_subst.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/process_subst.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,3 @@
+echo "TEST`echo zz;echo;echo`BEST"
+echo "TEST`echo '$(echo zz)'`BEST"
+echo "TEST`echo "'"`BEST"
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/quote1.right busybox-1.28.0/shell/ash_test/ash-parsing/quote1.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/quote1.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/quote1.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1 @@
+'1'
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/quote1.tests busybox-1.28.0/shell/ash_test/ash-parsing/quote1.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/quote1.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/quote1.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,2 @@
+a=1
+echo "'$a'"
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/quote2.right busybox-1.28.0/shell/ash_test/ash-parsing/quote2.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/quote2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/quote2.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1 @@
+>1
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/quote2.tests busybox-1.28.0/shell/ash_test/ash-parsing/quote2.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/quote2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/quote2.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,2 @@
+a=1
+echo ">$a"
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/quote3.right busybox-1.28.0/shell/ash_test/ash-parsing/quote3.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/quote3.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/quote3.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,12 @@
+Testing: in ""
+..
+Testing: in ''
+..
+Testing: in $empty
+Testing: in $empty""
+..
+Testing: in $empty''
+..
+Testing: in "$empty"
+..
+Finished
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/quote3.tests busybox-1.28.0/shell/ash_test/ash-parsing/quote3.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/quote3.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/quote3.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,21 @@
+empty=''
+
+echo 'Testing: in ""'
+for a in ""; do echo ".$a."; done
+
+echo 'Testing: in '"''"
+for a in ''; do echo ".$a."; done
+
+echo 'Testing: in $empty'
+for a in $empty; do echo ".$a."; done
+
+echo 'Testing: in $empty""'
+for a in $empty""; do echo ".$a."; done
+
+echo 'Testing: in $empty'"''"
+for a in $empty''; do echo ".$a."; done
+
+echo 'Testing: in "$empty"'
+for a in "$empty"; do echo ".$a."; done
+
+echo Finished
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/quote4.right busybox-1.28.0/shell/ash_test/ash-parsing/quote4.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/quote4.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/quote4.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1 @@
+a b
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/quote4.tests busybox-1.28.0/shell/ash_test/ash-parsing/quote4.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/quote4.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/quote4.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,2 @@
+a_b='a b'
+echo "$a_b"
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/starquoted.right busybox-1.28.0/shell/ash_test/ash-parsing/starquoted.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/starquoted.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/starquoted.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,8 @@
+.1 abc d e f.
+.1.
+.abc.
+.d e f.
+.-1 abc d e f-.
+.-1.
+.abc.
+.d e f-.
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/starquoted.tests busybox-1.28.0/shell/ash_test/ash-parsing/starquoted.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/starquoted.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/starquoted.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,8 @@
+if test $# = 0; then
+    exec "$THIS_SH" "$0" 1 abc 'd e f'
+fi
+
+for a in "$*"; do echo ".$a."; done
+for a in "$@"; do echo ".$a."; done
+for a in "-$*-"; do echo ".$a."; done
+for a in "-$@-"; do echo ".$a."; done
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/starquoted2.right busybox-1.28.0/shell/ash_test/ash-parsing/starquoted2.right
--- busybox-1.27.2/shell/ash_test/ash-parsing/starquoted2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/starquoted2.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,8 @@
+Should be printed
+Would not be printed by bash
+Would not be printed by bash
+Would not be printed by bash
+Should be printed
+Empty:
+Empty:
+Empty:
diff -urpN busybox-1.27.2/shell/ash_test/ash-parsing/starquoted2.tests busybox-1.28.0/shell/ash_test/ash-parsing/starquoted2.tests
--- busybox-1.27.2/shell/ash_test/ash-parsing/starquoted2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-parsing/starquoted2.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,19 @@
+if test $# != 0; then
+    exec "$THIS_SH" "$0"
+fi
+
+# No params!
+for a in "$*"; do echo Should be printed; done
+for a in "$@"; do echo Should not be printed; done
+# Yes, believe it or not, bash is mesmerized by "$@" and stops
+# treating "" as "this word cannot be expanded to nothing,
+# but must be at least null string". Now it can be expanded to nothing.
+for a in "$@"""; do echo Would not be printed by bash; done
+for a in """$@"; do echo Would not be printed by bash; done
+for a in """$@"''"$@"''; do echo Would not be printed by bash; done
+for a in ""; do echo Should be printed; done
+
+# Bug 207: "$@" expands to nothing, and we erroneously glob "%s\n" twice:
+printf 'Empty:%s\n' "$@"
+printf "Empty:%s\n" "$@"
+printf "Empty:%s\\n" "$@"
diff -urpN busybox-1.27.2/shell/ash_test/ash-psubst/emptytick.right busybox-1.28.0/shell/ash_test/ash-psubst/emptytick.right
--- busybox-1.27.2/shell/ash_test/ash-psubst/emptytick.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-psubst/emptytick.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,17 @@
+0
+0
+./emptytick.tests: line 3: : Permission denied
+127
+./emptytick.tests: line 4: : Permission denied
+127
+0
+0
+0
+0
+./emptytick.tests: line 10: : Permission denied
+127
+./emptytick.tests: line 11: : Permission denied
+127
+0
+0
+./emptytick.tests: exec: line 15: : Permission denied
diff -urpN busybox-1.27.2/shell/ash_test/ash-psubst/emptytick.tests busybox-1.28.0/shell/ash_test/ash-psubst/emptytick.tests
--- busybox-1.27.2/shell/ash_test/ash-psubst/emptytick.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-psubst/emptytick.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,16 @@
+true;  ``; echo $?
+false; ``; echo $?
+true;  `""`; echo $?
+false; `""`; echo $?
+true;  `     `; echo $?
+false; `     `; echo $?
+
+true;  $(); echo $?
+false; $(); echo $?
+true;  $(""); echo $?
+false; $(""); echo $?
+true;  $(     ); echo $?
+false; $(     ); echo $?
+
+exec ''; echo $?
+echo Not reached
diff -urpN busybox-1.27.2/shell/ash_test/ash-psubst/tick.right busybox-1.28.0/shell/ash_test/ash-psubst/tick.right
--- busybox-1.27.2/shell/ash_test/ash-psubst/tick.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-psubst/tick.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,2 @@
+1
+1
diff -urpN busybox-1.27.2/shell/ash_test/ash-psubst/tick.tests busybox-1.28.0/shell/ash_test/ash-psubst/tick.tests
--- busybox-1.27.2/shell/ash_test/ash-psubst/tick.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-psubst/tick.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,4 @@
+true
+false; echo `echo $?`
+true
+{ false; echo `echo $?`; }
diff -urpN busybox-1.27.2/shell/ash_test/ash-psubst/tick2.right busybox-1.28.0/shell/ash_test/ash-psubst/tick2.right
--- busybox-1.27.2/shell/ash_test/ash-psubst/tick2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-psubst/tick2.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1 @@
+BAZ
diff -urpN busybox-1.27.2/shell/ash_test/ash-psubst/tick2.tests busybox-1.28.0/shell/ash_test/ash-psubst/tick2.tests
--- busybox-1.27.2/shell/ash_test/ash-psubst/tick2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-psubst/tick2.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,5 @@
+if false; then
+    echo "FOO"
+    tmp=`echo BAR >&2`
+fi
+echo BAZ
diff -urpN busybox-1.27.2/shell/ash_test/ash-psubst/tick3.right busybox-1.28.0/shell/ash_test/ash-psubst/tick3.right
--- busybox-1.27.2/shell/ash_test/ash-psubst/tick3.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-psubst/tick3.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,6 @@
+\TESTZZBEST
+$TEST
+Q
+a\bc
+11-$a-\t-\-\"-`-\--\z-\*-\?-22 33-$a-\t-\-"-`-\--\z-\*-\?-44
+done:0
diff -urpN busybox-1.27.2/shell/ash_test/ash-psubst/tick3.tests busybox-1.28.0/shell/ash_test/ash-psubst/tick3.tests
--- busybox-1.27.2/shell/ash_test/ash-psubst/tick3.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-psubst/tick3.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,14 @@
+test "$CONFIG_FEATURE_FANCY_ECHO" = "y" || exit 77
+
+TEST=Q
+# \` is special
+echo `echo '\'TEST\`echo ZZ\`BEST`
+# \$ and \\ are special
+echo `echo \\$TEST`
+echo `echo \$TEST`
+echo a`echo \\\\b`c
+
+# \" is not special if in unquoted `cmd` (passed verbatim WITH \),
+# but is special in quoted one
+echo `echo 11'-$a-\t-\\-\"-\`-\--\z-\*-\?-'22` "`echo 33'-$a-\t-\\-\"-\`-\--\z-\*-\?-'44`"
+echo done:$?
diff -urpN busybox-1.27.2/shell/ash_test/ash-psubst/tick4.right busybox-1.28.0/shell/ash_test/ash-psubst/tick4.right
--- busybox-1.27.2/shell/ash_test/ash-psubst/tick4.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-psubst/tick4.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,7 @@
+(TEST) BEST
+TEST) BEST
+((TEST) BEST
+)
+abc
+a)c
+OK: 0
diff -urpN busybox-1.27.2/shell/ash_test/ash-psubst/tick4.tests busybox-1.28.0/shell/ash_test/ash-psubst/tick4.tests
--- busybox-1.27.2/shell/ash_test/ash-psubst/tick4.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-psubst/tick4.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,7 @@
+echo $(echo '(TEST)' BEST)
+echo $(echo 'TEST)' BEST)
+echo $(echo \(\(TEST\) BEST)
+echo $(echo \))
+echo $(echo a"`echo "b"`"c )
+echo $(echo a"`echo ")"`"c )
+echo OK: $?
diff -urpN busybox-1.27.2/shell/ash_test/ash-psubst/tick_huge.right busybox-1.28.0/shell/ash_test/ash-psubst/tick_huge.right
--- busybox-1.27.2/shell/ash_test/ash-psubst/tick_huge.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-psubst/tick_huge.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,3 @@
+546ed3f5c81c780d3ab86ada14824237  -
+546ed3f5c81c780d3ab86ada14824237  -
+End
diff -urpN busybox-1.27.2/shell/ash_test/ash-psubst/tick_huge.tests busybox-1.28.0/shell/ash_test/ash-psubst/tick_huge.tests
--- busybox-1.27.2/shell/ash_test/ash-psubst/tick_huge.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-psubst/tick_huge.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,7 @@
+# This creates 120k file
+yes "123456789 123456789 123456789 123456789" | head -3000 >>"$0.tmp"
+
+echo "`cat $0.tmp`" | md5sum
+rm "$0.tmp"
+yes "123456789 123456789 123456789 123456789" | head -3000 | md5sum
+echo End
diff -urpN busybox-1.27.2/shell/ash_test/ash-quoting/mode_x.right busybox-1.28.0/shell/ash_test/ash-quoting/mode_x.right
--- busybox-1.27.2/shell/ash_test/ash-quoting/mode_x.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-quoting/mode_x.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,10 @@
++ var1=val
++ var2='one two'
++ true '%s\n' one 'two '"'"'three' four
++ this=command
++ 'this=command'
+./mode_x.tests: line 1: this=command: not found
++ true
++ true
++ 'if' true
+./mode_x.tests: line 1: if: not found
diff -urpN busybox-1.27.2/shell/ash_test/ash-quoting/mode_x.tests busybox-1.28.0/shell/ash_test/ash-quoting/mode_x.tests
--- busybox-1.27.2/shell/ash_test/ash-quoting/mode_x.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-quoting/mode_x.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,14 @@
+set -x
+
+var1=val
+var2='one two'
+true %s\\n one "two 'three" four
+
+# assignment:
+this=command
+# NOT assignment, +x code should show it quoted:
+"this=command"
+
+if true; then true; fi
+# +x code should quote 'if' here:
+"if" true
diff -urpN busybox-1.27.2/shell/ash_test/ash-quoting/quoted_punct.right busybox-1.28.0/shell/ash_test/ash-quoting/quoted_punct.right
--- busybox-1.27.2/shell/ash_test/ash-quoting/quoted_punct.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-quoting/quoted_punct.right	2017-07-06 17:14:57.000000000 +0200
@@ -0,0 +1,35 @@
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
diff -urpN busybox-1.27.2/shell/ash_test/ash-quoting/quoted_punct.tests busybox-1.28.0/shell/ash_test/ash-quoting/quoted_punct.tests
--- busybox-1.27.2/shell/ash_test/ash-quoting/quoted_punct.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-quoting/quoted_punct.tests	2017-07-06 17:14:57.000000000 +0200
@@ -0,0 +1,41 @@
+# Testing glob-escaping of every ASCII punctuation char
+# Some chars have more than one test
+# 21..2f
+case '!' in [\!] ) echo ok;; *) echo 'WRONG!';; esac
+case '"' in [\"] ) echo ok;; *) echo 'WRONG"';; esac
+case '#' in [\#] ) echo ok;; *) echo 'WRONG#';; esac
+case '$' in [\$] ) echo ok;; *) echo 'WRONG$';; esac
+case '%' in [\%] ) echo ok;; *) echo 'WRONG%';; esac
+case '&' in [\&] ) echo ok;; *) echo 'WRONG&';; esac
+case "'" in [\'] ) echo ok;; *) echo "WRONG'";; esac
+case '(' in [\(] ) echo ok;; *) echo 'WRONG(';; esac
+case ')' in [\)] ) echo ok;; *) echo 'WRONG)';; esac
+case '*' in [\*] ) echo ok;; *) echo 'WRONG*';; esac
+case '+' in [\+] ) echo ok;; *) echo 'WRONG+';; esac
+case ',' in [\,] ) echo ok;; *) echo 'WRONG,';; esac
+case '-' in [\-] ) echo ok;; *) echo 'WRONG-';; esac
+case '-' in [a\-c]) echo ok;; *) echo 'WRONGa\-c';; esac
+case '.' in [\.] ) echo ok;; *) echo 'WRONG.';; esac
+case '/' in [\/] ) echo ok;; *) echo 'WRONG/';; esac
+# 3a..40
+case ':' in [\:] ) echo ok;; *) echo 'WRONG:';; esac
+case ';' in [\;] ) echo ok;; *) echo 'WRONG;';; esac
+case '<' in [\<] ) echo ok;; *) echo 'WRONG<';; esac
+case '=' in [\=] ) echo ok;; *) echo 'WRONG=';; esac
+case '>' in [\>] ) echo ok;; *) echo 'WRONG>';; esac
+case '?' in [\?] ) echo ok;; *) echo 'WRONG?';; esac
+case '@' in [\@] ) echo ok;; *) echo 'WRONG@';; esac
+# 5b..60
+case '[' in [\[] ) echo ok;; *) echo 'WRONG[';; esac
+case '\' in [\\] ) echo ok;; *) echo 'WRONG\';; esac
+case '\' in \\ ) echo ok;; *) echo 'WRONG\\';; esac
+case ']' in [\]] ) echo ok;; *) echo 'WRONG]';; esac
+case ']' in [a\]]) echo ok;; *) echo 'WRONGa]';; esac
+case '^' in [\^] ) echo ok;; *) echo 'WRONG^';; esac
+case '_' in [\_] ) echo ok;; *) echo 'WRONG_';; esac
+case '`' in [\`] ) echo ok;; *) echo 'WRONG`';; esac
+# 7b..7e
+case '{' in [\{] ) echo ok;; *) echo 'WRONG{';; esac
+case '|' in [\|] ) echo ok;; *) echo 'WRONG|';; esac
+case '}' in [\}] ) echo ok;; *) echo 'WRONG}';; esac
+case '~' in [\~] ) echo ok;; *) echo 'WRONG~';; esac
diff -urpN busybox-1.27.2/shell/ash_test/ash-quoting/unicode_8x_chars.right busybox-1.28.0/shell/ash_test/ash-quoting/unicode_8x_chars.right
--- busybox-1.27.2/shell/ash_test/ash-quoting/unicode_8x_chars.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-quoting/unicode_8x_chars.right	2017-07-06 17:14:57.000000000 +0200
@@ -0,0 +1,6 @@
+ok
+ok
+ok
+ok
+ok
+ok
diff -urpN busybox-1.27.2/shell/ash_test/ash-quoting/unicode_8x_chars.tests busybox-1.28.0/shell/ash_test/ash-quoting/unicode_8x_chars.tests
--- busybox-1.27.2/shell/ash_test/ash-quoting/unicode_8x_chars.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-quoting/unicode_8x_chars.tests	2017-07-06 17:14:57.000000000 +0200
@@ -0,0 +1,28 @@
+# Unicode: cf 80
+case π in
+( "π" ) echo ok ;;
+( * )   echo WRONG ;;
+esac
+# Unicode: cf 81
+case ρ in
+( "ρ" ) echo ok ;;
+( * )   echo WRONG ;;
+esac
+# Unicode: cf 82
+case ς in
+( "ς" ) echo ok ;;
+( * )   echo WRONG ;;
+esac
+
+case "π" in
+( π ) echo ok ;;
+( * ) echo WRONG ;;
+esac
+case "ρ" in
+( ρ ) echo ok ;;
+( * ) echo WRONG ;;
+esac
+case "ς" in
+( ς ) echo ok ;;
+( * ) echo WRONG ;;
+esac
diff -urpN busybox-1.27.2/shell/ash_test/ash-read/read_t0.right busybox-1.28.0/shell/ash_test/ash-read/read_t0.right
--- busybox-1.27.2/shell/ash_test/ash-read/read_t0.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-read/read_t0.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,3 @@
+><[0]
+><[0]
+><[1]
diff -urpN busybox-1.27.2/shell/ash_test/ash-read/read_t0.tests busybox-1.28.0/shell/ash_test/ash-read/read_t0.tests
--- busybox-1.27.2/shell/ash_test/ash-read/read_t0.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-read/read_t0.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,14 @@
+# ><[0]
+echo Ok | { sleep 0.1; read -t 0 reply; echo ">$reply<[$?]"; }
+
+# This would not be deterministic: returns 0 "data exists" if EOF is seen
+# (true terminated) - because EOF is considered to be data (read will not block),
+# else returns 1 "no data".
+## ><[????]
+#true | { read -t 0 reply; echo ">$reply<[$?]"; }
+
+# ><[0]
+true | { sleep 0.1; read -t 0 reply; echo ">$reply<[$?]"; }
+
+# ><[1]
+sleep 0.2 | { read -p IGNORED_PROMPT -t 0 reply; echo ">$reply<[$?]"; }
diff -urpN busybox-1.27.2/shell/ash_test/ash-redir/redir5.right busybox-1.28.0/shell/ash_test/ash-redir/redir5.right
--- busybox-1.27.2/shell/ash_test/ash-redir/redir5.right	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-redir/redir5.right	2017-07-18 19:13:20.000000000 +0200
@@ -1,2 +1,4 @@
-./redir5.tests: line 2: 10: Bad file descriptor
-OK
+Backgrounded pipes shall have their stdin redirected to /dev/null
+Zero:0
+Zero:0
+Done
diff -urpN busybox-1.27.2/shell/ash_test/ash-redir/redir5.tests busybox-1.28.0/shell/ash_test/ash-redir/redir5.tests
--- busybox-1.27.2/shell/ash_test/ash-redir/redir5.tests	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-redir/redir5.tests	2017-07-18 19:13:20.000000000 +0200
@@ -1,3 +1,13 @@
-# ash uses fd 10 (usually) for reading the script
-echo LOST >&10
-echo OK
+echo "Backgrounded pipes shall have their stdin redirected to /dev/null"
+
+# 1. bash does not redirect stdin to /dev/null if it is interactive.
+# hush does it always (this is allowed by standards).
+
+# 2. Failure will result in this script hanging
+
+cat & wait; echo Zero:$?
+
+# This does not work for bash! bash bug?
+cat | cat & wait; echo Zero:$?
+
+echo Done
diff -urpN busybox-1.27.2/shell/ash_test/ash-redir/redir_script.tests busybox-1.28.0/shell/ash_test/ash-redir/redir_script.tests
--- busybox-1.27.2/shell/ash_test/ash-redir/redir_script.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-redir/redir_script.tests	2017-08-03 17:53:10.000000000 +0200
@@ -20,10 +20,15 @@ eval "find_fds $fds"
 
 # Shell should not lose that fd. Did it?
 find_fds
-test x"$fds1" = x"$fds" && { echo "Ok: script fd is not closed"; exit 0; }
+test x"$fds1" = x"$fds" \
+&& { echo "Ok: script fd is not closed"; exit 0; }
+
+# One legit way to handle it is to move script fd. For example, if we see that fd 10 moved to fd 11:
+test x"$fds1" = x" 10>&- 3>&-" && \
+test x"$fds"  = x" 11>&- 3>&-" \
+&& { echo "Ok: script fd is not closed"; exit 0; }
 
 echo "Bug: script fd is closed"
 echo "fds1:$fds1"
 echo "fds2:$fds"
 exit 1
-
diff -urpN busybox-1.27.2/shell/ash_test/ash-redir/redir_to_bad_fd.right busybox-1.28.0/shell/ash_test/ash-redir/redir_to_bad_fd.right
--- busybox-1.27.2/shell/ash_test/ash-redir/redir_to_bad_fd.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-redir/redir_to_bad_fd.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,2 @@
+./redir_to_bad_fd.tests: line 2: 10: Bad file descriptor
+OK
diff -urpN busybox-1.27.2/shell/ash_test/ash-redir/redir_to_bad_fd.tests busybox-1.28.0/shell/ash_test/ash-redir/redir_to_bad_fd.tests
--- busybox-1.27.2/shell/ash_test/ash-redir/redir_to_bad_fd.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-redir/redir_to_bad_fd.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,3 @@
+# ash uses fd 10 (usually) for reading the script
+echo LOST >&10
+echo OK
diff -urpN busybox-1.27.2/shell/ash_test/ash-redir/redir_to_bad_fd255.right busybox-1.28.0/shell/ash_test/ash-redir/redir_to_bad_fd255.right
--- busybox-1.27.2/shell/ash_test/ash-redir/redir_to_bad_fd255.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-redir/redir_to_bad_fd255.right	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,2 @@
+./redir_to_bad_fd255.tests: line 2: 255: Bad file descriptor
+OK
diff -urpN busybox-1.27.2/shell/ash_test/ash-redir/redir_to_bad_fd255.tests busybox-1.28.0/shell/ash_test/ash-redir/redir_to_bad_fd255.tests
--- busybox-1.27.2/shell/ash_test/ash-redir/redir_to_bad_fd255.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-redir/redir_to_bad_fd255.tests	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,3 @@
+# ash uses fd 10 (usually) for reading the script
+echo LOST >&255
+echo OK
diff -urpN busybox-1.27.2/shell/ash_test/ash-redir/redir_to_bad_fd3.right busybox-1.28.0/shell/ash_test/ash-redir/redir_to_bad_fd3.right
--- busybox-1.27.2/shell/ash_test/ash-redir/redir_to_bad_fd3.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-redir/redir_to_bad_fd3.right	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,2 @@
+./redir_to_bad_fd3.tests: line 2: 3: Bad file descriptor
+OK
diff -urpN busybox-1.27.2/shell/ash_test/ash-redir/redir_to_bad_fd3.tests busybox-1.28.0/shell/ash_test/ash-redir/redir_to_bad_fd3.tests
--- busybox-1.27.2/shell/ash_test/ash-redir/redir_to_bad_fd3.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-redir/redir_to_bad_fd3.tests	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,3 @@
+# ash uses fd 10 (usually) for reading the script
+echo LOST >&3
+echo OK
diff -urpN busybox-1.27.2/shell/ash_test/ash-signals/catch.right busybox-1.28.0/shell/ash_test/ash-signals/catch.right
--- busybox-1.27.2/shell/ash_test/ash-signals/catch.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-signals/catch.right	2017-07-24 19:43:52.000000000 +0200
@@ -0,0 +1,5 @@
+sending USR2
+caught
+sending USR2
+sending USR2
+User defined signal 2
diff -urpN busybox-1.27.2/shell/ash_test/ash-signals/catch.tests busybox-1.28.0/shell/ash_test/ash-signals/catch.tests
--- busybox-1.27.2/shell/ash_test/ash-signals/catch.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-signals/catch.tests	2017-07-24 19:43:52.000000000 +0200
@@ -0,0 +1,20 @@
+# avoid ugly warnings about signals not being caught
+trap ":" USR1 USR2
+
+"$THIS_SH" -c '
+trap "echo caught" USR2
+echo "sending USR2"
+kill -USR2 $$
+
+trap "" USR2
+echo "sending USR2"
+kill -USR2 $$
+
+trap "-" USR2
+echo "sending USR2"
+kill -USR2 $$
+
+echo "not reached"
+'
+
+trap "-" USR1 USR2
diff -urpN busybox-1.27.2/shell/ash_test/ash-signals/signal_read2.right busybox-1.28.0/shell/ash_test/ash-signals/signal_read2.right
--- busybox-1.27.2/shell/ash_test/ash-signals/signal_read2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-signals/signal_read2.right	2017-07-24 19:43:52.000000000 +0200
@@ -0,0 +1,2 @@
+Hangup
+Done:129
diff -urpN busybox-1.27.2/shell/ash_test/ash-signals/signal_read2.tests busybox-1.28.0/shell/ash_test/ash-signals/signal_read2.tests
--- busybox-1.27.2/shell/ash_test/ash-signals/signal_read2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-signals/signal_read2.tests	2017-07-24 19:43:52.000000000 +0200
@@ -0,0 +1,7 @@
+$THIS_SH -c '
+(sleep 1; kill -HUP $$) &
+while true; do
+	read ignored
+done
+'
+echo "Done:$?"
diff -urpN busybox-1.27.2/shell/ash_test/ash-signals/subshell.right busybox-1.28.0/shell/ash_test/ash-signals/subshell.right
--- busybox-1.27.2/shell/ash_test/ash-signals/subshell.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-signals/subshell.right	2017-07-24 19:43:52.000000000 +0200
@@ -0,0 +1,21 @@
+trap -- '' HUP
+trap -- '' QUIT
+trap -- '' SYS
+Ok
+trap -- '' HUP
+trap -- '' QUIT
+trap -- '' SYS
+Ok
+trap -- '' HUP
+trap -- '' QUIT
+trap -- '' SYS
+Ok
+trap -- '' HUP
+trap -- '' QUIT
+trap -- '' SYS
+Ok
+trap -- '' HUP
+trap -- '' QUIT
+trap -- '' SYS
+Terminated
+Done
diff -urpN busybox-1.27.2/shell/ash_test/ash-signals/subshell.tests busybox-1.28.0/shell/ash_test/ash-signals/subshell.tests
--- busybox-1.27.2/shell/ash_test/ash-signals/subshell.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-signals/subshell.tests	2017-07-24 19:43:52.000000000 +0200
@@ -0,0 +1,19 @@
+# Non-empty traps should be reset in subshell
+
+# HUP is special in interactive shells
+trap '' HUP
+# QUIT is always special
+trap '' QUIT
+# SYS is not special
+trap '' SYS
+# WINCH is harmless
+trap 'bad: caught WINCH' WINCH
+# With TERM we'll check whether it is reset
+trap 'bad: caught TERM'  TERM
+
+(trap; "$THIS_SH" -c 'kill -HUP   $PPID'; echo Ok)
+(trap; "$THIS_SH" -c 'kill -QUIT  $PPID'; echo Ok)
+(trap; "$THIS_SH" -c 'kill -SYS   $PPID'; echo Ok)
+(trap; "$THIS_SH" -c 'kill -WINCH $PPID'; echo Ok)
+(trap; "$THIS_SH" -c 'kill -TERM  $PPID'; echo Bad: TERM is not reset)
+echo Done
diff -urpN busybox-1.27.2/shell/ash_test/ash-standalone/nofork_env.right busybox-1.28.0/shell/ash_test/ash-standalone/nofork_env.right
--- busybox-1.27.2/shell/ash_test/ash-standalone/nofork_env.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-standalone/nofork_env.right	2017-12-04 16:07:47.000000000 +0100
@@ -0,0 +1,9 @@
+ZVAR=1
+ZVAR=2
+ZVAR=3
+ZVAR=4
+ZVAR=5
+ZVAR=6
+ZVAR=7
+ZVAR=8
+Ok:0
diff -urpN busybox-1.27.2/shell/ash_test/ash-standalone/nofork_env.tests busybox-1.28.0/shell/ash_test/ash-standalone/nofork_env.tests
--- busybox-1.27.2/shell/ash_test/ash-standalone/nofork_env.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-standalone/nofork_env.tests	2017-12-04 16:07:47.000000000 +0100
@@ -0,0 +1,15 @@
+# ash had a bug where NOFORKed applet (env/printenv) was not seeing new exported variables
+
+(export ZVAR=1; printenv) | grep ^ZVAR=
+(ZVAR=2 printenv) | grep ^ZVAR=
+
+(export ZVAR=3; env) | grep ^ZVAR=
+(ZVAR=4 env) | grep ^ZVAR=
+
+export ZVAR=5; printenv | grep ^ZVAR=
+ZVAR=6 printenv | grep ^ZVAR=
+
+export ZVAR=7; env | grep ^ZVAR=
+ZVAR=8 env | grep ^ZVAR=
+
+echo Ok:$?
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/param_expand_alt.right busybox-1.28.0/shell/ash_test/ash-vars/param_expand_alt.right
--- busybox-1.27.2/shell/ash_test/ash-vars/param_expand_alt.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/param_expand_alt.right	2017-07-29 23:01:53.000000000 +0200
@@ -0,0 +1,9 @@
+SHELL: line 1: syntax error: bad substitution
+SHELL: line 1: syntax error: bad substitution
+__
+_z_ _z_
+_ _ _ _ _
+_aaaa _ _ _word _word
+_ _ _ _ _
+_ _ _ _word _
+_fff _ _ _word _word
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/param_expand_alt.tests busybox-1.28.0/shell/ash_test/ash-vars/param_expand_alt.tests
--- busybox-1.27.2/shell/ash_test/ash-vars/param_expand_alt.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/param_expand_alt.tests	2017-07-29 23:01:53.000000000 +0200
@@ -0,0 +1,33 @@
+# First try some invalid patterns. Do in subshell due to parsing error.
+# (set argv0 to "SHELL" to avoid "/path/to/shell: blah" in error messages)
+"$THIS_SH" -c 'echo ${+}  ; echo moo' SHELL
+"$THIS_SH" -c 'echo ${:+} ; echo moo' SHELL
+
+# now some funky ones.
+# ${V+word} "if V unset, then substitute nothing, else substitute word"
+# ${V:+word} "if V unset or '', then substitute nothing, else substitute word"
+#
+# ${#:+} is a :+ op on $#, but ${#+} (and any other ${#c}) is "length of $c",
+# not + op on $#.
+# bash and dash do not accept ${#+}. it's possible for some shell to skip
+# the check that c is valid and interpret ${#+} as "len of $+". Not testing it.
+# echo _${#+}_
+echo _${#:+}_
+# Forms with non-empty word work as expected in both ash and bash.
+echo _${#+z}_ _${#:+z}_
+
+# now some valid ones
+set --
+echo _$1 _${1+} _${1:+} _${1+word} _${1:+word}
+
+set -- aaaa
+echo _$1 _${1+} _${1:+} _${1+word} _${1:+word}
+
+unset f
+echo _$f _${f+} _${f:+} _${f+word} _${f:+word}
+
+f=
+echo _$f _${f+} _${f:+} _${f+word} _${f:+word}
+
+f=fff
+echo _$f _${f+} _${f:+} _${f+word} _${f:+word}
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/param_expand_assign.right busybox-1.28.0/shell/ash_test/ash-vars/param_expand_assign.right
--- busybox-1.27.2/shell/ash_test/ash-vars/param_expand_assign.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/param_expand_assign.right	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,27 @@
+SHELL: line 1: syntax error: bad substitution
+SHELL: line 1: syntax error: bad substitution
+SHELL: line 1: syntax error: bad substitution
+0
+SHELL: line 1: 1: bad variable name
+SHELL: line 1: 1: bad variable name
+SHELL: line 1: 1: bad variable name
+SHELL: line 1: 1: bad variable name
+_aa
+_aa
+_aa
+_aa
+_
+_
+_
+_word
+_word
+_
+_
+_
+_
+_word
+_fff
+_fff
+_fff
+_fff
+_fff
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/param_expand_assign.tests busybox-1.28.0/shell/ash_test/ash-vars/param_expand_assign.tests
--- busybox-1.27.2/shell/ash_test/ash-vars/param_expand_assign.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/param_expand_assign.tests	2017-07-25 15:25:52.000000000 +0200
@@ -0,0 +1,39 @@
+# First try some invalid patterns. Do in subshell due to parsing error.
+# (set argv0 to "SHELL" to avoid "/path/to/shell: blah" in error messages)
+"$THIS_SH" -c 'echo ${=}' SHELL
+"$THIS_SH" -c 'echo ${:=}' SHELL
+
+# now some funky ones
+"$THIS_SH" -c 'echo ${#=}' SHELL
+"$THIS_SH" -c 'echo ${#:=}' SHELL
+
+# should error out
+"$THIS_SH" -c 'set --; echo _${1=}' SHELL
+"$THIS_SH" -c 'set --; echo _${1:=}' SHELL
+"$THIS_SH" -c 'set --; echo _${1=word}' SHELL
+"$THIS_SH" -c 'set --; echo _${1:=word}' SHELL
+
+# should not error
+"$THIS_SH" -c 'set aa; echo _${1=}' SHELL
+"$THIS_SH" -c 'set aa; echo _${1:=}' SHELL
+"$THIS_SH" -c 'set aa; echo _${1=word}' SHELL
+"$THIS_SH" -c 'set aa; echo _${1:=word}' SHELL
+
+# should work fine
+unset f; echo _$f
+unset f; echo _${f=}
+unset f; echo _${f:=}
+unset f; echo _${f=word}
+unset f; echo _${f:=word}
+
+f=; echo _$f
+f=; echo _${f=}
+f=; echo _${f:=}
+f=; echo _${f=word}
+f=; echo _${f:=word}
+
+f=fff; echo _$f
+f=fff; echo _${f=}
+f=fff; echo _${f:=}
+f=fff; echo _${f=word}
+f=fff; echo _${f:=word}
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/param_expand_bash_substring.right busybox-1.28.0/shell/ash_test/ash-vars/param_expand_bash_substring.right
--- busybox-1.27.2/shell/ash_test/ash-vars/param_expand_bash_substring.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/param_expand_bash_substring.right	2017-07-25 15:25:52.000000000 +0200
@@ -0,0 +1,64 @@
+SHELL: line 1: syntax error: bad substitution
+SHELL: line 1: syntax error: bad substitution
+SHELL: line 1: syntax error: bad substitution
+SHELL: line 1: syntax error: bad substitution
+SHELL: line 1: syntax error: missing '}'
+1    =||
+1:1  =||
+1:1:2=||
+1::2 =||
+1:1: =||
+1::  =||
+1    =|0123|
+1:1  =|123|
+1:1:2=|12|
+1::2 =|01|
+1:1: =||
+1::  =||
+f    =||
+f:1  =||
+f:1:2=||
+f::2 =||
+f:1: =||
+f::  =||
+f    =||
+f:1  =||
+f:1:2=||
+f::2 =||
+f:1: =||
+f::  =||
+f    =|a|
+f:1  =||
+f:1:2=||
+f::2 =|a|
+f:1: =||
+f::  =||
+f    =|0123456789|
+f:1  =|123456789|
+f:1:2=|12|
+f::2 =|01|
+f:1: =||
+f::  =||
+Substrings from special vars
+?    =|0|
+?:1  =||
+?:1:2=||
+?::2 =|0|
+?:1: =||
+?::  =||
+#    =|11|
+#:1  =|1|
+#:1:2=|1|
+#::2 =|11|
+#:1: =||
+#::  =||
+Substrings with expressions
+f            =|01234567|
+f:1+1:2+2    =|2345|
+f:-1:2+2     =|01234567|
+f:1:f        =|1234567|
+f:1:$f       =|1234567|
+f:1:${f}     =|1234567|
+f:1:${f:3:1} =|123|
+f:1:1`echo 1`=|1|
+Done
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/param_expand_bash_substring.tests busybox-1.28.0/shell/ash_test/ash-vars/param_expand_bash_substring.tests
--- busybox-1.27.2/shell/ash_test/ash-vars/param_expand_bash_substring.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/param_expand_bash_substring.tests	2017-07-25 15:25:52.000000000 +0200
@@ -0,0 +1,84 @@
+# first try some invalid patterns
+# do all of these in subshells since it's supposed to error out
+# (set argv0 to "SHELL" to avoid "/path/to/shell: blah" in error messages)
+export var=0123456789
+"$THIS_SH" -c 'echo ${:}' SHELL
+"$THIS_SH" -c 'echo ${::}' SHELL
+"$THIS_SH" -c 'echo ${:1}' SHELL
+"$THIS_SH" -c 'echo ${::1}' SHELL
+
+#this also is not valid in bash, hush accepts it:
+"$THIS_SH" -c 'echo ${var:}' SHELL
+
+# then some funky ones
+# UNFIXED BUG: this should work: "$THIS_SH" -c 'echo ${?:0}'
+
+# now some valid ones
+set --; echo "1    =|${1}|"
+set --; echo "1:1  =|${1:1}|"
+set --; echo "1:1:2=|${1:1:2}|"
+set --; echo "1::2 =|${1::2}|"
+set --; echo "1:1: =|${1:1:}|"
+set --; echo "1::  =|${1::}|"
+
+set -- 0123; echo "1    =|${1}|"
+set -- 0123; echo "1:1  =|${1:1}|"
+set -- 0123; echo "1:1:2=|${1:1:2}|"
+set -- 0123; echo "1::2 =|${1::2}|"
+set -- 0123; echo "1:1: =|${1:1:}|"
+set -- 0123; echo "1::  =|${1::}|"
+
+unset f; echo "f    =|$f|"
+unset f; echo "f:1  =|${f:1}|"
+unset f; echo "f:1:2=|${f:1:2}|"
+unset f; echo "f::2 =|${f::2}|"
+unset f; echo "f:1: =|${f:1:}|"
+unset f; echo "f::  =|${f::}|"
+
+f=; echo "f    =|$f|"
+f=; echo "f:1  =|${f:1}|"
+f=; echo "f:1:2=|${f:1:2}|"
+f=; echo "f::2 =|${f::2}|"
+f=; echo "f:1: =|${f:1:}|"
+f=; echo "f::  =|${f::}|"
+
+f=a; echo "f    =|$f|"
+f=a; echo "f:1  =|${f:1}|"
+f=a; echo "f:1:2=|${f:1:2}|"
+f=a; echo "f::2 =|${f::2}|"
+f=a; echo "f:1: =|${f:1:}|"
+f=a; echo "f::  =|${f::}|"
+
+f=0123456789; echo "f    =|$f|"
+f=0123456789; echo "f:1  =|${f:1}|"
+f=0123456789; echo "f:1:2=|${f:1:2}|"
+f=0123456789; echo "f::2 =|${f::2}|"
+f=0123456789; echo "f:1: =|${f:1:}|"
+f=0123456789; echo "f::  =|${f::}|"
+
+echo "Substrings from special vars"
+echo '?    '"=|$?|"
+echo '?:1  '"=|${?:1}|"
+echo '?:1:2'"=|${?:1:2}|"
+echo '?::2 '"=|${?::2}|"
+echo '?:1: '"=|${?:1:}|"
+echo '?::  '"=|${?::}|"
+set -- 1 2 3 4 5 6 7 8 9 10 11
+echo '#    '"=|$#|"
+echo '#:1  '"=|${#:1}|"
+echo '#:1:2'"=|${#:1:2}|"
+echo '#::2 '"=|${#::2}|"
+echo '#:1: '"=|${#:1:}|"
+echo '#::  '"=|${#::}|"
+
+echo "Substrings with expressions"
+f=01234567; echo 'f            '"=|$f|"
+f=01234567; echo 'f:1+1:2+2    '"=|${f:1+1:2+2}|"
+f=01234567; echo 'f:-1:2+2     '"=|${f:-1:2+2}|"
+f=01234567; echo 'f:1:f        '"=|${f:1:f}|"
+f=01234567; echo 'f:1:$f       '"=|${f:1:$f}|"
+f=01234567; echo 'f:1:${f}     '"=|${f:1:${f}}|"
+f=01234567; echo 'f:1:${f:3:1} '"=|${f:1:${f:3:1}}|"
+f=01234567; echo 'f:1:1`echo 1`'"=|${f:1:`echo 1`}|"
+
+echo Done
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/param_expand_default.right busybox-1.28.0/shell/ash_test/ash-vars/param_expand_default.right
--- busybox-1.27.2/shell/ash_test/ash-vars/param_expand_default.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/param_expand_default.right	2017-07-25 15:25:52.000000000 +0200
@@ -0,0 +1,7 @@
+SHELL: line 1: syntax error: bad substitution
+_0 _0
+_ _ _ _word _word
+_aaaa _aaaa _aaaa _aaaa _aaaa
+_ _ _ _word _word
+_ _ _ _ _word
+_fff _fff _fff _fff _fff
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/param_expand_default.tests busybox-1.28.0/shell/ash_test/ash-vars/param_expand_default.tests
--- busybox-1.27.2/shell/ash_test/ash-vars/param_expand_default.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/param_expand_default.tests	2017-07-25 15:25:52.000000000 +0200
@@ -0,0 +1,23 @@
+# first try some invalid patterns (do in subshell due to parsing error)
+# (set argv0 to "SHELL" to avoid "/path/to/shell: blah" in error messages)
+# valid in bash and ash (same as $-): "$THIS_SH" -c 'echo ${-}' SHELL
+"$THIS_SH" -c 'echo ${:-}' SHELL
+
+# now some funky ones
+echo _${#-} _${#:-}
+
+# now some valid ones
+set --
+echo _$1 _${1-} _${1:-} _${1-word} _${1:-word}
+
+set -- aaaa
+echo _$1 _${1-} _${1:-} _${1-word} _${1:-word}
+
+unset f
+echo _$f _${f-} _${f:-} _${f-word} _${f:-word}
+
+f=
+echo _$f _${f-} _${f:-} _${f-word} _${f:-word}
+
+f=fff
+echo _$f _${f-} _${f:-} _${f-word} _${f:-word}
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/param_expand_indicate_error.right busybox-1.28.0/shell/ash_test/ash-vars/param_expand_indicate_error.right
--- busybox-1.27.2/shell/ash_test/ash-vars/param_expand_indicate_error.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/param_expand_indicate_error.right	2017-07-25 15:25:52.000000000 +0200
@@ -0,0 +1,43 @@
+SHELL: line 1: syntax error: bad substitution
+1
+0
+====
+_
+SHELL: line 1: 1: parameter not set
+SHELL: line 1: 1: parameter not set or null
+SHELL: line 1: 1: message1
+SHELL: line 1: 1: message1
+SHELL: line 1: 1: unset!
+SHELL: line 1: 1: null or unset!
+====
+_aaaa
+_aaaa
+_aaaa
+_aaaa
+_aaaa
+_aaaa
+_aaaa
+====
+_
+SHELL: line 1: f: parameter not set
+SHELL: line 1: f: parameter not set or null
+SHELL: line 1: f: message3
+SHELL: line 1: f: message3
+SHELL: line 1: f: unset!
+SHELL: line 1: f: null or unset!
+====
+_
+_
+SHELL: line 1: f: parameter not set or null
+_
+SHELL: line 1: f: message4
+_
+SHELL: line 1: f: null or unset!
+====
+_fff
+_fff
+_fff
+_fff
+_fff
+_fff
+_fff
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/param_expand_indicate_error.tests busybox-1.28.0/shell/ash_test/ash-vars/param_expand_indicate_error.tests
--- busybox-1.27.2/shell/ash_test/ash-vars/param_expand_indicate_error.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/param_expand_indicate_error.tests	2017-07-25 15:25:52.000000000 +0200
@@ -0,0 +1,61 @@
+# do all of these in subshells since it's supposed to error out
+# (set argv0 to "SHELL" to avoid "/path/to/shell: blah" in error messages)
+
+# first try some invalid patterns
+#"$THIS_SH" -c 'echo ${?}' SHELL -- this is valid as it's the same as $?
+"$THIS_SH" -c 'echo ${:?}' SHELL
+
+# then some funky ones
+# note: bash prints 1 - treats it as "length of $#"
+"$THIS_SH" -c 'echo ${#?}' SHELL
+# bash prints 0
+"$THIS_SH" -c 'echo ${#:?}' SHELL
+
+# now some valid ones
+export msg_unset="unset!"
+export msg_null_or_unset="null or unset!"
+
+echo ====
+"$THIS_SH" -c 'set --; echo _$1' SHELL
+"$THIS_SH" -c 'set --; echo _${1?}' SHELL
+"$THIS_SH" -c 'set --; echo _${1:?}' SHELL
+"$THIS_SH" -c 'set --; echo _${1?message1}' SHELL
+"$THIS_SH" -c 'set --; echo _${1:?message1}' SHELL
+"$THIS_SH" -c 'set --; echo _${1?$msg_unset}' SHELL
+"$THIS_SH" -c 'set --; echo _${1:?$msg_null_or_unset}' SHELL
+
+echo ====
+"$THIS_SH" -c 'set -- aaaa; echo _$1' SHELL
+"$THIS_SH" -c 'set -- aaaa; echo _${1?}' SHELL
+"$THIS_SH" -c 'set -- aaaa; echo _${1:?}' SHELL
+"$THIS_SH" -c 'set -- aaaa; echo _${1?word}' SHELL
+"$THIS_SH" -c 'set -- aaaa; echo _${1:?word}' SHELL
+"$THIS_SH" -c 'set -- aaaa; echo _${1?$msg_unset}' SHELL
+"$THIS_SH" -c 'set -- aaaa; echo _${1:?$msg_null_or_unset}' SHELL
+
+echo ====
+"$THIS_SH" -c 'unset f; echo _$f' SHELL
+"$THIS_SH" -c 'unset f; echo _${f?}' SHELL
+"$THIS_SH" -c 'unset f; echo _${f:?}' SHELL
+"$THIS_SH" -c 'unset f; echo _${f?message3}' SHELL
+"$THIS_SH" -c 'unset f; echo _${f:?message3}' SHELL
+"$THIS_SH" -c 'unset f; echo _${f?$msg_unset}' SHELL
+"$THIS_SH" -c 'unset f; echo _${f:?$msg_null_or_unset}' SHELL
+
+echo ====
+"$THIS_SH" -c 'f=; echo _$f' SHELL
+"$THIS_SH" -c 'f=; echo _${f?}' SHELL
+"$THIS_SH" -c 'f=; echo _${f:?}' SHELL
+"$THIS_SH" -c 'f=; echo _${f?word}' SHELL
+"$THIS_SH" -c 'f=; echo _${f:?message4}' SHELL
+"$THIS_SH" -c 'f=; echo _${f?$msg_unset}' SHELL
+"$THIS_SH" -c 'f=; echo _${f:?$msg_null_or_unset}' SHELL
+
+echo ====
+"$THIS_SH" -c 'f=fff; echo _$f' SHELL
+"$THIS_SH" -c 'f=fff; echo _${f?}' SHELL
+"$THIS_SH" -c 'f=fff; echo _${f:?}' SHELL
+"$THIS_SH" -c 'f=fff; echo _${f?word}' SHELL
+"$THIS_SH" -c 'f=fff; echo _${f:?word}' SHELL
+"$THIS_SH" -c 'f=fff; echo _${f?$msg_unset}' SHELL
+"$THIS_SH" -c 'f=fff; echo _${f:?$msg_null_or_unset}' SHELL
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/param_expand_len1.right busybox-1.28.0/shell/ash_test/ash-vars/param_expand_len1.right
--- busybox-1.27.2/shell/ash_test/ash-vars/param_expand_len1.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/param_expand_len1.right	2017-07-29 23:01:53.000000000 +0200
@@ -0,0 +1,11 @@
+One:1
+Two:2
+Three:3
+
+One:1
+Two:2
+Three:3
+
+Ok ${#$}: 0
+
+Ok ${#!}: 0
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/param_expand_len1.tests busybox-1.28.0/shell/ash_test/ash-vars/param_expand_len1.tests
--- busybox-1.27.2/shell/ash_test/ash-vars/param_expand_len1.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/param_expand_len1.tests	2017-07-29 23:01:53.000000000 +0200
@@ -0,0 +1,31 @@
+# ${#c} for any single char c means "length of $c", including all special vars
+
+false
+echo One:${#?}
+(exit 10)
+echo Two:${#?}
+(exit 100)
+echo Three:${#?}
+
+echo
+echo One:${##}
+set -- 1 2 3 4 5 6 7 8 9 0
+echo Two:${##}
+set -- 1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0 \
+       1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0 \
+       1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0 \
+       1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0
+echo Three:${##}
+
+echo
+v=$$
+test "${#v}" = "${#$}"
+echo 'Ok ${#$}:' $?
+
+echo
+sleep 0 &
+v=$!
+test "${#v}" = "${#!}"
+echo 'Ok ${#!}:' $?
+
+# TODO: ${#-} ${#_}
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/readonly0.right busybox-1.28.0/shell/ash_test/ash-vars/readonly0.right
--- busybox-1.27.2/shell/ash_test/ash-vars/readonly0.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/readonly0.right	2017-07-29 23:01:53.000000000 +0200
@@ -0,0 +1,13 @@
+readonly a='A'
+readonly b='B'
+Ok:0
+
+./readonly0.tests: line 19: a: is read only
+Fail:2
+./readonly0.tests: readonly: line 21: a: is read only
+Fail:2
+
+./readonly0.tests: export: line 27: a: is read only
+Fail:2
+
+./readonly0.tests: unset: line 44: a: is read only
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/readonly0.tests busybox-1.28.0/shell/ash_test/ash-vars/readonly0.tests
--- busybox-1.27.2/shell/ash_test/ash-vars/readonly0.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/readonly0.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,45 @@
+unset a b
+#
+readonly a=A
+b=B
+readonly b
+# readonly on already readonly var is harmless:
+readonly b a
+readonly | grep '^readonly [ab]='
+# this should work:
+export a b
+export -n a b
+echo Ok:$?
+env | grep -e^a= -e^b=  # shows nothing
+
+echo
+# these should all fail (despite the same value being assigned)
+# bash does not abort even in non-interactive more (in script)
+# ash does, using subshell to continue
+true; (a=A)
+echo Fail:$?
+true; (readonly a=A)
+echo Fail:$?
+
+echo
+# in bash, assignment in export fails, but export succeeds! :)
+# we don't mimic that!
+true; (export a=Z)
+echo Fail:$?
+#env | grep '^a='
+#echo "^^^a is exported"
+export -n a  # undo that bashism, if it happens
+
+## ash: assignment errors in "a=Z CMD" lead to CMD not executed
+## echo
+## export b
+## # this fails to both set and export a:
+## a=Z env | echo grep '^[ab]='
+## echo "^^^a is not exported"
+## # but external command does get executed, and $? is not mangled (stays 42):
+## (exit 42); a=Z env echo Visible:$?
+
+echo
+# ash: this fails *silently*, bug? bash says "cannot unset: readonly variable"
+true; unset a
+echo Fail:$?
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/readonly1.right busybox-1.28.0/shell/ash_test/ash-vars/readonly1.right
--- busybox-1.27.2/shell/ash_test/ash-vars/readonly1.right	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-vars/readonly1.right	2017-07-24 18:57:10.000000000 +0200
@@ -1,2 +1,2 @@
-One:1
-One:1
+Fail:2
+Fail:2
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/readonly1.tests busybox-1.28.0/shell/ash_test/ash-vars/readonly1.tests
--- busybox-1.27.2/shell/ash_test/ash-vars/readonly1.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-vars/readonly1.tests	2017-07-24 18:57:10.000000000 +0200
@@ -1,7 +1,7 @@
 readonly bla=123
 # Bare "eval bla=123" should abort ("eval" is a special builtin):
 (eval bla=123 2>/dev/null; echo BUG)
-echo One:$?
+echo Fail:$?
 # "command BLTIN" disables "special-ness", should not abort:
 command eval bla=123 2>/dev/null
-echo One:$?
+echo Fail:$?
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/unset.right busybox-1.28.0/shell/ash_test/ash-vars/unset.right
--- busybox-1.27.2/shell/ash_test/ash-vars/unset.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/unset.right	2017-07-29 23:01:53.000000000 +0200
@@ -0,0 +1,17 @@
+./unset.tests: unset: line 3: -: bad variable name
+2
+./unset.tests: unset: line 5: illegal option -m
+2
+0
+___
+0 f g
+0 g
+0
+___
+0 f g
+0
+0 f g
+0
+___
+./unset.tests: unset: line 36: VAR_RO: is read only
+2 f g
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/unset.tests busybox-1.28.0/shell/ash_test/ash-vars/unset.tests
--- busybox-1.27.2/shell/ash_test/ash-vars/unset.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/unset.tests	2017-07-29 23:01:53.000000000 +0200
@@ -0,0 +1,40 @@
+# check invalid options are rejected
+# bash: in posix mode, aborts if non-interactive; using subshell to avoid that
+(unset -)
+echo $?
+(unset -m a b c)
+echo $?
+
+# check funky usage
+unset
+echo $?
+
+# check normal usage
+echo ___
+f=f g=g
+echo $? $f $g
+unset f
+echo $? $f $g
+unset g
+echo $? $f $g
+
+echo ___
+f=f g=g
+echo $? $f $g
+unset f g
+echo $? $f $g
+f=f g=g
+echo $? $f $g
+unset -v f g
+echo $? $f $g
+
+# check read only vars
+echo ___
+f=f g=g
+VAR_RO=1
+readonly VAR_RO
+(unset VAR_RO)
+echo $? $f $g
+# not testing "do variables survive error halfway through unset" since unset aborts
+# unset f VAR_RO g
+#echo $? $f $g
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/var-utf8-length.tests busybox-1.28.0/shell/ash_test/ash-vars/var-utf8-length.tests
--- busybox-1.27.2/shell/ash_test/ash-vars/var-utf8-length.tests	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-vars/var-utf8-length.tests	2017-07-18 19:13:20.000000000 +0200
@@ -1,2 +1,4 @@
+LANG=en_US.UTF-8
+LC_ALL=en_US.UTF-8
 X=abcdÉfghÍjklmnÓpqrstÚvwcyz
 echo ${#X}
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/var_bash1a.tests busybox-1.28.0/shell/ash_test/ash-vars/var_bash1a.tests
--- busybox-1.27.2/shell/ash_test/ash-vars/var_bash1a.tests	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/ash-vars/var_bash1a.tests	2017-07-18 19:13:20.000000000 +0200
@@ -5,7 +5,7 @@ echo "parameter     '${parameter}'"
 echo "varoffset2    '${parameter:${offset}}'"
 echo "varoffset-2   '${parameter:${noffset}}'"
 echo "literal '2'   '${parameter:2}'"
-# This is not inrpreted as ${VAR:POS{:LEN}},
+# This is not interpreted as ${VAR:POS{:LEN}},
 # but as ${VAR:=WORD} - if VAR is unset or null, substitute WORD
 echo "literal '-2'  '${parameter:-2}'"
 echo "literal ' -2' '${parameter: -2}'"
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/var_bash1b.right busybox-1.28.0/shell/ash_test/ash-vars/var_bash1b.right
--- busybox-1.27.2/shell/ash_test/ash-vars/var_bash1b.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/var_bash1b.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,23 @@
+all    |0123456
+4:     |456
+4:2    |45
+4:-1   |45
+4:-2   |4
+4:-3   |
+-4:    |3456
+-4:2   |34
+-4:-1  |345
+-4:-2  |34
+-4:-3  |3
+-4:-4  |
+-4:i=2 |34
+-4:i=-2|34
+-4:i=-3|3
+-4:i=-4|
+-5:    |23456
+-6:    |123456
+-7:    |0123456
+-8:    |
+-9:    |
+-9:-99 |
+Ok:0
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/var_bash1b.tests busybox-1.28.0/shell/ash_test/ash-vars/var_bash1b.tests
--- busybox-1.27.2/shell/ash_test/ash-vars/var_bash1b.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/var_bash1b.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,24 @@
+set -- 0123456
+	echo "all    |"$1
+	echo "4:     |"${1:4}
+	echo "4:2    |"${1:4:2}
+	echo "4:-1   |"${1:4:-1}
+	echo "4:-2   |"${1:4:-2}
+	echo "4:-3   |"${1:4:-3}
+	echo "-4:    |"${1: -4}
+	echo "-4:2   |"${1: -4:2}
+	echo "-4:-1  |"${1: -4:-1}
+	echo "-4:-2  |"${1: -4:-2}
+	echo "-4:-3  |"${1: -4:-3}
+	echo "-4:-4  |"${1: -4:-4}
+i=2;	echo "-4:i=2 |"${1: -4:i}
+i=-2;	echo "-4:i=-2|"${1: -4:i}
+i=-3;	echo "-4:i=-3|"${1: -4:i}
+i=-4;	echo "-4:i=-4|"${1: -4:i}
+	echo "-5:    |"${1: -5}
+	echo "-6:    |"${1: -6}
+	echo "-7:    |"${1: -7}
+	echo "-8:    |"${1: -8}
+	echo "-9:    |"${1: -9}
+	echo "-9:-99 |"${1: -9:-99}
+echo Ok:$?
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/var_bash6.right busybox-1.28.0/shell/ash_test/ash-vars/var_bash6.right
--- busybox-1.27.2/shell/ash_test/ash-vars/var_bash6.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/var_bash6.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,5 @@
+Expected Actual
+a*z    : a*z
+\z     : \z
+a1z a2z: a1z a2z
+z      : z
diff -urpN busybox-1.27.2/shell/ash_test/ash-vars/var_bash6.tests busybox-1.28.0/shell/ash_test/ash-vars/var_bash6.tests
--- busybox-1.27.2/shell/ash_test/ash-vars/var_bash6.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/ash_test/ash-vars/var_bash6.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,9 @@
+# This testcase checks globbing correctness in ${v/a/b}
+
+>a1z; >a2z;
+          echo 'Expected' 'Actual'
+v='a bz'; echo 'a*z    :' "${v/a*z/a*z}"
+v='a bz'; echo '\z     :' "${v/a*z/\z}"
+v='a bz'; echo 'a1z a2z:' ${v/a*z/a*z}
+v='a bz'; echo 'z      :' ${v/a*z/\z}
+rm a1z a2z
diff -urpN busybox-1.27.2/shell/ash_test/printenv.c busybox-1.28.0/shell/ash_test/printenv.c
--- busybox-1.27.2/shell/ash_test/printenv.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/printenv.c	2017-08-03 17:53:10.000000000 +0200
@@ -56,7 +56,7 @@ main (argc, argv)
       if (**argv == **envp && strncmp (*envp, *argv, len) == 0)
 	{
 	  eval = *envp + len;
-	  /* If the environment variable doesn't have an `=', ignore it. */
+	  /* If the environment variable doesn't have an '=', ignore it. */
 	  if (*eval == '=')
 	    {
 	      puts (eval + 1);
diff -urpN busybox-1.27.2/shell/ash_test/run-all busybox-1.28.0/shell/ash_test/run-all
--- busybox-1.27.2/shell/ash_test/run-all	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/ash_test/run-all	2017-07-24 18:57:10.000000000 +0200
@@ -1,76 +1,96 @@
 #!/bin/sh
 
-TOPDIR=$PWD
+TOPDIR=`pwd`
+
+if test ! -x ash; then
+	if test ! -x ../../busybox; then
+		echo "Can't run tests. Put ash binary into this directory (`pwd`)"
+		exit 1
+	fi
+	echo "No ./ash - creating a link to ../../busybox"
+	ln -s ../../busybox ash
+fi
+if test ! -f .config; then
+	if test ! -f ../../.config; then
+		echo "Missing .config file"
+		exit 1
+	fi
+	cp ../../.config . || exit 1
+fi
+
+eval $(sed -e '/^#/d' -e '/^$/d' -e 's:^:export :' .config)
 
-test -x ash || {
-    echo "No ./ash - creating a link to ../../busybox"
-    ln -s ../../busybox ash
-}
 test -x printenv || gcc -O2 -o printenv printenv.c || exit $?
 test -x recho    || gcc -O2 -o recho    recho.c    || exit $?
 test -x zecho    || gcc -O2 -o zecho    zecho.c    || exit $?
 
-PATH="$PWD:$PATH" # for ash and recho/zecho/printenv
+PATH="`pwd`:$PATH" # for ash and recho/zecho/printenv
 export PATH
 
-THIS_SH="$PWD/ash"
+THIS_SH="`pwd`/ash"
 export THIS_SH
 
 do_test()
 {
-    test -d "$1" || return 0
-#   echo do_test "$1"
-    # $1 but with / replaced by # so that it can be used as filename part
-    noslash=`echo "$1" | sed 's:/:#:g'`
-    (
-    cd "$1" || { echo "cannot cd $1!"; exit 1; }
-    for x in run-*; do
-	test -f "$x" || continue
-	case "$x" in
-	    "$0"|run-minimal|run-gprof) ;;
-	    *.orig|*~) ;;
-	    #*) echo $x ; sh $x ;;
-	    *)
-	    echo -n "$1/$x: "
-	    sh "$x" >"$TOPDIR/$noslash-$x.fail" 2>&1 && \
-	    { echo "ok"; rm "$TOPDIR/$noslash-$x.fail"; } || echo "fail";
-	    ;;
-	esac
-    done
-    # Many bash run-XXX scripts just do this,
-    # no point in duplication it all over the place
-    for x in *.tests; do
-	test -x "$x" || continue
-	name="${x%%.tests}"
-	test -f "$name.right" || continue
-	echo -n "$1/$x: "
-	{
-	    "$THIS_SH" "./$x" >"$name.xx" 2>&1
-	    diff -u "$name.xx" "$name.right" >"$TOPDIR/$noslash-$x.fail" \
-	    && rm -f "$name.xx" "$TOPDIR/$noslash-$x.fail"
-	} && echo "ok" || echo "fail"
-    done
-    )
+	test -d "$1" || return 0
+	d=${d%/}
+#	echo Running tests in directory "$1"
+	# $1 but with / replaced by # so that it can be used as filename part
+	noslash=`echo "$1" | sed 's:/:#:g'`
+	(
+	cd "$1" || { echo "cannot cd $1!"; exit 1; }
+	for x in run-*; do
+		test -f "$x" || continue
+		case "$x" in
+			"$0"|run-minimal|run-gprof) ;;
+			*.orig|*~) ;;
+			#*) echo $x ; sh $x ;;
+			*)
+			echo -n "$1/$x:"
+			sh "$x" >"$TOPDIR/$noslash-$x.fail" 2>&1 && \
+			{ { echo " ok"; rm "$TOPDIR/$noslash-$x.fail"; } || echo " fail"; }
+			;;
+		esac
+	done
+	# Many bash run-XXX scripts just do this,
+	# no point in duplication it all over the place
+	for x in *.tests; do
+		test -x "$x" || continue
+		name="${x%%.tests}"
+		test -f "$name.right" || continue
+#		echo Running test: "$x"
+		echo -n "$1/$x:"
+		{
+			"$THIS_SH" "./$x" >"$name.xx" 2>&1
+			diff -u "$name.xx" "$name.right" >"$TOPDIR/$noslash-$x.fail" \
+			&& rm -f "$name.xx" "$TOPDIR/$noslash-$x.fail"
+		} && echo " ok" || echo " fail"
+		done
+	)
 }
 
-# main part of this script
+# Main part of this script
 # Usage: run-all [directories]
 
+ret=0
+
 if [ $# -lt 1 ]; then
-    # All sub directories
-    modules=`ls -d ash-*`
-    # If you want to test ash against hush and msh testsuites
-    # (have to copy hush_test and msh_test dirs to current dir first):
-    #modules=`ls -d ash-* hush_test/hush-* msh_test/msh-*`
-
-    for module in $modules; do
-	do_test $module
-    done
+	# All sub directories
+	modules=`ls -d ash-*`
+	# If you want to test ash against hush testsuite
+	# (have to copy hush_test dir to current dir first):
+	#modules=`ls -d ash-* hush_test/hush-*`
+
+	for module in $modules; do
+		do_test $module || ret=1
+	done
 else
-    while [ $# -ge 1 ]; do
+	while [ $# -ge 1 ]; do
 	if [ -d $1 ]; then
-	    do_test $1
+		do_test $1 || ret=1
 	fi
 	shift
-    done
+	done
 fi
+
+exit ${ret}
diff -urpN busybox-1.27.2/shell/cttyhack.c busybox-1.28.0/shell/cttyhack.c
--- busybox-1.27.2/shell/cttyhack.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/cttyhack.c	2017-10-05 11:53:08.000000000 +0200
@@ -4,55 +4,53 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-#include "libbb.h"
-
-//applet:IF_CTTYHACK(APPLET(cttyhack, BB_DIR_BIN, BB_SUID_DROP))
-
-//kbuild:lib-$(CONFIG_CTTYHACK) += cttyhack.o
-
 //config:config CTTYHACK
-//config:	bool "cttyhack"
+//config:	bool "cttyhack (2.5 kb)"
 //config:	default y
 //config:	help
-//config:	  One common problem reported on the mailing list is the "can't
-//config:	  access tty; job control turned off" error message, which typically
-//config:	  appears when one tries to use a shell with stdin/stdout on
-//config:	  /dev/console.
-//config:	  This device is special - it cannot be a controlling tty.
+//config:	One common problem reported on the mailing list is the "can't
+//config:	access tty; job control turned off" error message, which typically
+//config:	appears when one tries to use a shell with stdin/stdout on
+//config:	/dev/console.
+//config:	This device is special - it cannot be a controlling tty.
 //config:
-//config:	  The proper solution is to use the correct device instead of
-//config:	  /dev/console.
+//config:	The proper solution is to use the correct device instead of
+//config:	/dev/console.
 //config:
-//config:	  cttyhack provides a "quick and dirty" solution to this problem.
-//config:	  It analyzes stdin with various ioctls, trying to determine whether
-//config:	  it is a /dev/ttyN or /dev/ttySN (virtual terminal or serial line).
-//config:	  On Linux it also checks sysfs for a pointer to the active console.
-//config:	  If cttyhack is able to find the real console device, it closes
-//config:	  stdin/out/err and reopens that device.
-//config:	  Then it executes the given program. Opening the device will make
-//config:	  that device a controlling tty. This may require cttyhack
-//config:	  to be a session leader.
+//config:	cttyhack provides a "quick and dirty" solution to this problem.
+//config:	It analyzes stdin with various ioctls, trying to determine whether
+//config:	it is a /dev/ttyN or /dev/ttySN (virtual terminal or serial line).
+//config:	On Linux it also checks sysfs for a pointer to the active console.
+//config:	If cttyhack is able to find the real console device, it closes
+//config:	stdin/out/err and reopens that device.
+//config:	Then it executes the given program. Opening the device will make
+//config:	that device a controlling tty. This may require cttyhack
+//config:	to be a session leader.
 //config:
-//config:	  Example for /etc/inittab (for busybox init):
+//config:	Example for /etc/inittab (for busybox init):
 //config:
-//config:	  ::respawn:/bin/cttyhack /bin/sh
+//config:	::respawn:/bin/cttyhack /bin/sh
 //config:
-//config:	  Starting an interactive shell from boot shell script:
+//config:	Starting an interactive shell from boot shell script:
 //config:
-//config:	  setsid cttyhack sh
+//config:	setsid cttyhack sh
 //config:
-//config:	  Giving controlling tty to shell running with PID 1:
+//config:	Giving controlling tty to shell running with PID 1:
 //config:
-//config:	  # exec cttyhack sh
+//config:	# exec cttyhack sh
 //config:
-//config:	  Without cttyhack, you need to know exact tty name,
-//config:	  and do something like this:
+//config:	Without cttyhack, you need to know exact tty name,
+//config:	and do something like this:
 //config:
-//config:	  # exec setsid sh -c 'exec sh </dev/tty1 >/dev/tty1 2>&1'
+//config:	# exec setsid sh -c 'exec sh </dev/tty1 >/dev/tty1 2>&1'
 //config:
-//config:	  Starting getty on a controlling tty from a shell script:
+//config:	Starting getty on a controlling tty from a shell script:
 //config:
-//config:	  # getty 115200 $(cttyhack)
+//config:	# getty 115200 $(cttyhack)
+
+//applet:IF_CTTYHACK(APPLET_NOEXEC(cttyhack, cttyhack, BB_DIR_BIN, BB_SUID_DROP, cttyhack))
+
+//kbuild:lib-$(CONFIG_CTTYHACK) += cttyhack.o
 
 //usage:#define cttyhack_trivial_usage
 //usage:       "[PROG ARGS]"
@@ -65,6 +63,8 @@
 //usage:     "\nStarting interactive shell from boot shell script:"
 //usage:     "\n	setsid cttyhack sh"
 
+#include "libbb.h"
+
 #if !defined(__linux__) && !defined(TIOCGSERIAL) && !ENABLE_WERROR
 # warning cttyhack will not be able to detect a controlling tty on this system
 #endif
diff -urpN busybox-1.27.2/shell/hush.c busybox-1.28.0/shell/hush.c
--- busybox-1.27.2/shell/hush.c	2017-08-04 02:19:57.000000000 +0200
+++ busybox-1.28.0/shell/hush.c	2018-01-01 20:40:41.000000000 +0100
@@ -41,14 +41,26 @@
  *
  * TODOs:
  *      grep for "TODO" and fix (some of them are easy)
+ *      make complex ${var%...} constructs support optional
+ *      make here documents optional
  *      special variables (done: PWD, PPID, RANDOM)
+ *      follow IFS rules more precisely, including update semantics
  *      tilde expansion
  *      aliases
- *      follow IFS rules more precisely, including update semantics
  *      builtins mandated by standards we don't support:
- *          [un]alias, command, fc, getopts, newgrp, readonly, times
- *      make complex ${var%...} constructs support optional
- *      make here documents optional
+ *          [un]alias, command, fc:
+ *          command -v CMD: print "/path/to/CMD"
+ *              prints "CMD" for builtins
+ *              prints "alias ALIAS='EXPANSION'" for aliases
+ *              prints nothing and sets $? to 1 if not found
+ *          command -V CMD: print "CMD is /path/CMD|a shell builtin|etc"
+ *          command [-p] CMD: run CMD, even if a function CMD also exists
+ *              (can use this to override standalone shell as well)
+ *              -p: use default $PATH
+ *          command BLTIN: disables special-ness (e.g. errors do not abort)
+ *          fc -l[nr] [BEG] [END]: list range of commands in history
+ *          fc [-e EDITOR] [BEG] [END]: edit/rerun range of commands
+ *          fc -s [PAT=REP] [CMD]: rerun CMD, replacing PAT with REP
  *
  * Bash compat TODO:
  *      redirection of stdout+stderr: &> and >&
@@ -64,8 +76,13 @@
  *          The EXPR is evaluated according to ARITHMETIC EVALUATION.
  *          This is exactly equivalent to let "EXPR".
  *      $[EXPR]: synonym for $((EXPR))
+ *      indirect expansion: ${!VAR}
+ *      substring op on @: ${@:n:m}
  *
  * Won't do:
+ *      Some builtins mandated by standards:
+ *          newgrp [GRP]: not a builtin in bash but a suid binary
+ *              which spawns a new shell with new group ID
  *      In bash, export builtin is special, its arguments are assignments
  *          and therefore expansion of them should be "one-word" expansion:
  *              $ export i=`echo 'a  b'` # export has one arg: "i=a  b"
@@ -82,18 +99,18 @@
  *              aaa
  */
 //config:config HUSH
-//config:	bool "hush"
+//config:	bool "hush (64 kb)"
 //config:	default y
 //config:	help
-//config:	  hush is a small shell (25k). It handles the normal flow control
-//config:	  constructs such as if/then/elif/else/fi, for/in/do/done, while loops,
-//config:	  case/esac. Redirections, here documents, $((arithmetic))
-//config:	  and functions are supported.
+//config:	hush is a small shell. It handles the normal flow control
+//config:	constructs such as if/then/elif/else/fi, for/in/do/done, while loops,
+//config:	case/esac. Redirections, here documents, $((arithmetic))
+//config:	and functions are supported.
 //config:
-//config:	  It will compile and work on no-mmu systems.
+//config:	It will compile and work on no-mmu systems.
 //config:
-//config:	  It does not handle select, aliases, tilde expansion,
-//config:	  &>file and >&file redirection of stdout+stderr.
+//config:	It does not handle select, aliases, tilde expansion,
+//config:	&>file and >&file redirection of stdout+stderr.
 //config:
 //config:config HUSH_BASH_COMPAT
 //config:	bool "bash-compatible extensions"
@@ -105,17 +122,17 @@
 //config:	default y
 //config:	depends on HUSH_BASH_COMPAT
 //config:	help
-//config:	  Enable {abc,def} extension.
+//config:	Enable {abc,def} extension.
 //config:
 //config:config HUSH_INTERACTIVE
 //config:	bool "Interactive mode"
 //config:	default y
 //config:	depends on HUSH || SH_IS_HUSH || BASH_IS_HUSH
 //config:	help
-//config:	  Enable interactive mode (prompt and command editing).
-//config:	  Without this, hush simply reads and executes commands
-//config:	  from stdin just like a shell script from a file.
-//config:	  No prompt, no PS1/PS2 magic shell variables.
+//config:	Enable interactive mode (prompt and command editing).
+//config:	Without this, hush simply reads and executes commands
+//config:	from stdin just like a shell script from a file.
+//config:	No prompt, no PS1/PS2 magic shell variables.
 //config:
 //config:config HUSH_SAVEHISTORY
 //config:	bool "Save command history to .hush_history"
@@ -127,18 +144,18 @@
 //config:	default y
 //config:	depends on HUSH_INTERACTIVE
 //config:	help
-//config:	  Enable job control: Ctrl-Z backgrounds, Ctrl-C interrupts current
-//config:	  command (not entire shell), fg/bg builtins work. Without this option,
-//config:	  "cmd &" still works by simply spawning a process and immediately
-//config:	  prompting for next command (or executing next command in a script),
-//config:	  but no separate process group is formed.
+//config:	Enable job control: Ctrl-Z backgrounds, Ctrl-C interrupts current
+//config:	command (not entire shell), fg/bg builtins work. Without this option,
+//config:	"cmd &" still works by simply spawning a process and immediately
+//config:	prompting for next command (or executing next command in a script),
+//config:	but no separate process group is formed.
 //config:
 //config:config HUSH_TICK
 //config:	bool "Support process substitution"
 //config:	default y
 //config:	depends on HUSH || SH_IS_HUSH || BASH_IS_HUSH
 //config:	help
-//config:	  Enable `command` and $(command).
+//config:	Enable `command` and $(command).
 //config:
 //config:config HUSH_IF
 //config:	bool "Support if/then/elif/else/fi"
@@ -155,37 +172,37 @@
 //config:	default y
 //config:	depends on HUSH || SH_IS_HUSH || BASH_IS_HUSH
 //config:	help
-//config:	  Enable case ... esac statement. +400 bytes.
+//config:	Enable case ... esac statement. +400 bytes.
 //config:
 //config:config HUSH_FUNCTIONS
 //config:	bool "Support funcname() { commands; } syntax"
 //config:	default y
 //config:	depends on HUSH || SH_IS_HUSH || BASH_IS_HUSH
 //config:	help
-//config:	  Enable support for shell functions. +800 bytes.
+//config:	Enable support for shell functions. +800 bytes.
 //config:
 //config:config HUSH_LOCAL
 //config:	bool "local builtin"
 //config:	default y
 //config:	depends on HUSH_FUNCTIONS
 //config:	help
-//config:	  Enable support for local variables in functions.
+//config:	Enable support for local variables in functions.
 //config:
 //config:config HUSH_RANDOM_SUPPORT
 //config:	bool "Pseudorandom generator and $RANDOM variable"
 //config:	default y
 //config:	depends on HUSH || SH_IS_HUSH || BASH_IS_HUSH
 //config:	help
-//config:	  Enable pseudorandom generator and dynamic variable "$RANDOM".
-//config:	  Each read of "$RANDOM" will generate a new pseudorandom value.
+//config:	Enable pseudorandom generator and dynamic variable "$RANDOM".
+//config:	Each read of "$RANDOM" will generate a new pseudorandom value.
 //config:
 //config:config HUSH_MODE_X
 //config:	bool "Support 'hush -x' option and 'set -x' command"
 //config:	default y
 //config:	depends on HUSH || SH_IS_HUSH || BASH_IS_HUSH
 //config:	help
-//config:	  This instructs hush to print commands before execution.
-//config:	  Adds ~300 bytes.
+//config:	This instructs hush to print commands before execution.
+//config:	Adds ~300 bytes.
 //config:
 //config:config HUSH_ECHO
 //config:	bool "echo builtin"
@@ -217,7 +234,14 @@
 //config:	default y
 //config:	depends on HUSH_EXPORT
 //config:	help
-//config:	  export -n unexports variables. It is a bash extension.
+//config:	export -n unexports variables. It is a bash extension.
+//config:
+//config:config HUSH_READONLY
+//config:	bool "readonly builtin"
+//config:	default y
+//config:	depends on HUSH || SH_IS_HUSH || BASH_IS_HUSH
+//config:	help
+//config:	Enable support for read-only variables.
 //config:
 //config:config HUSH_KILL
 //config:	bool "kill builtin (supports kill %jobspec)"
@@ -239,6 +263,11 @@
 //config:	default y
 //config:	depends on HUSH || SH_IS_HUSH || BASH_IS_HUSH
 //config:
+//config:config HUSH_TIMES
+//config:	bool "times builtin"
+//config:	default y
+//config:	depends on HUSH || SH_IS_HUSH || BASH_IS_HUSH
+//config:
 //config:config HUSH_READ
 //config:	bool "read builtin"
 //config:	default y
@@ -264,21 +293,18 @@
 //config:	default y
 //config:	depends on HUSH || SH_IS_HUSH || BASH_IS_HUSH
 //config:
+//config:config HUSH_GETOPTS
+//config:	bool "getopts builtin"
+//config:	default y
+//config:	depends on HUSH || SH_IS_HUSH || BASH_IS_HUSH
+//config:
 //config:config HUSH_MEMLEAK
 //config:	bool "memleak builtin (debugging)"
 //config:	default n
 //config:	depends on HUSH || SH_IS_HUSH || BASH_IS_HUSH
-//config:
-//config:config MSH
-//config:	bool "msh (deprecated: aliased to hush)"
-//config:	default n
-//config:	select HUSH
-//config:	help
-//config:	  msh is deprecated and will be removed, please migrate to hush.
 
 //applet:IF_HUSH(APPLET(hush, BB_DIR_BIN, BB_SUID_DROP))
 //                       APPLET_ODDNAME:name  main  location    suid_type     help
-//applet:IF_MSH(         APPLET_ODDNAME(msh,  hush, BB_DIR_BIN, BB_SUID_DROP, hush))
 //applet:IF_SH_IS_HUSH(  APPLET_ODDNAME(sh,   hush, BB_DIR_BIN, BB_SUID_DROP, hush))
 //applet:IF_BASH_IS_HUSH(APPLET_ODDNAME(bash, hush, BB_DIR_BIN, BB_SUID_DROP, hush))
 
@@ -293,7 +319,7 @@
  * therefore we don't show them either.
  */
 //usage:#define hush_trivial_usage
-//usage:	"[-nxl] [-c 'SCRIPT' [ARG0 [ARGS]] / FILE [ARGS]]"
+//usage:	"[-enxl] [-c 'SCRIPT' [ARG0 [ARGS]] / FILE [ARGS]]"
 //usage:#define hush_full_usage "\n\n"
 //usage:	"Unix shell interpreter"
 
@@ -307,6 +333,7 @@
 #if ENABLE_HUSH_CASE
 # include <fnmatch.h>
 #endif
+#include <sys/times.h>
 #include <sys/utsname.h> /* for setting $HOSTNAME */
 
 #include "busybox.h"  /* for APPLET_IS_NOFORK/NOEXEC */
@@ -334,6 +361,7 @@
 #define BASH_SOURCE        ENABLE_HUSH_BASH_COMPAT
 #define BASH_HOSTNAME_VAR  ENABLE_HUSH_BASH_COMPAT
 #define BASH_TEST2         (ENABLE_HUSH_BASH_COMPAT && ENABLE_HUSH_TEST)
+#define BASH_READ_D        ENABLE_HUSH_BASH_COMPAT
 
 
 /* Build knobs */
@@ -410,6 +438,7 @@
 #define debug_printf_expand(...) do {} while (0)
 #define debug_printf_varexp(...) do {} while (0)
 #define debug_printf_glob(...)   do {} while (0)
+#define debug_printf_redir(...)  do {} while (0)
 #define debug_printf_list(...)   do {} while (0)
 #define debug_printf_subst(...)  do {} while (0)
 #define debug_printf_clean(...)  do {} while (0)
@@ -753,6 +782,7 @@ struct function {
 static const char o_opt_strings[] ALIGN1 =
 	"pipefail\0"
 	"noexec\0"
+	"errexit\0"
 #if ENABLE_HUSH_MODE_X
 	"xtrace\0"
 #endif
@@ -760,6 +790,7 @@ static const char o_opt_strings[] ALIGN1
 enum {
 	OPT_O_PIPEFAIL,
 	OPT_O_NOEXEC,
+	OPT_O_ERREXIT,
 #if ENABLE_HUSH_MODE_X
 	OPT_O_XTRACE,
 #endif
@@ -816,6 +847,25 @@ struct globals {
 #else
 # define G_saved_tty_pgrp 0
 #endif
+	/* How deeply are we in context where "set -e" is ignored */
+	int errexit_depth;
+	/* "set -e" rules (do we follow them correctly?):
+	 * Exit if pipe, list, or compound command exits with a non-zero status.
+	 * Shell does not exit if failed command is part of condition in
+	 * if/while, part of && or || list except the last command, any command
+	 * in a pipe but the last, or if the command's return value is being
+	 * inverted with !. If a compound command other than a subshell returns a
+	 * non-zero status because a command failed while -e was being ignored, the
+	 * shell does not exit. A trap on ERR, if set, is executed before the shell
+	 * exits [ERR is a bashism].
+	 *
+	 * If a compound command or function executes in a context where -e is
+	 * ignored, none of the commands executed within are affected by the -e
+	 * setting. If a compound command or function sets -e while executing in a
+	 * context where -e is ignored, that setting does not have any effect until
+	 * the compound command or the command containing the function call completes.
+	 */
+
 	char o_opt[NUM_OPT_O];
 #if ENABLE_HUSH_MODE_X
 # define G_x_mode (G.o_opt[OPT_O_XTRACE])
@@ -839,6 +889,7 @@ struct globals {
 	smallint exiting; /* used to prevent EXIT trap recursion */
 	/* These four support $?, $#, and $1 */
 	smalluint last_exitcode;
+	smalluint last_bg_pid_exitcode;
 #if ENABLE_HUSH_SET
 	/* are global_argv and global_argv[1..n] malloced? (note: not [0]) */
 	smalluint global_args_malloced;
@@ -856,6 +907,9 @@ struct globals {
 	unsigned depth_break_continue;
 	unsigned depth_of_loop;
 #endif
+#if ENABLE_HUSH_GETOPTS
+	unsigned getopt_count;
+#endif
 	const char *ifs;
 	const char *cwd;
 	struct variable *top_var;
@@ -929,10 +983,16 @@ static int builtin_exit(char **argv) FAS
 #if ENABLE_HUSH_EXPORT
 static int builtin_export(char **argv) FAST_FUNC;
 #endif
+#if ENABLE_HUSH_READONLY
+static int builtin_readonly(char **argv) FAST_FUNC;
+#endif
 #if ENABLE_HUSH_JOB
 static int builtin_fg_bg(char **argv) FAST_FUNC;
 static int builtin_jobs(char **argv) FAST_FUNC;
 #endif
+#if ENABLE_HUSH_GETOPTS
+static int builtin_getopts(char **argv) FAST_FUNC;
+#endif
 #if ENABLE_HUSH_HELP
 static int builtin_help(char **argv) FAST_FUNC;
 #endif
@@ -966,6 +1026,9 @@ static int builtin_trap(char **argv) FAS
 #if ENABLE_HUSH_TYPE
 static int builtin_type(char **argv) FAST_FUNC;
 #endif
+#if ENABLE_HUSH_TIMES
+static int builtin_times(char **argv) FAST_FUNC;
+#endif
 static int builtin_true(char **argv) FAST_FUNC;
 #if ENABLE_HUSH_UMASK
 static int builtin_umask(char **argv) FAST_FUNC;
@@ -1024,7 +1087,10 @@ static const struct built_in_command blt
 	BLTIN("export"   , builtin_export  , "Set environment variables"),
 #endif
 #if ENABLE_HUSH_JOB
-	BLTIN("fg"       , builtin_fg_bg   , "Bring job into foreground"),
+	BLTIN("fg"       , builtin_fg_bg   , "Bring job to foreground"),
+#endif
+#if ENABLE_HUSH_GETOPTS
+	BLTIN("getopts"  , builtin_getopts , NULL),
 #endif
 #if ENABLE_HUSH_HELP
 	BLTIN("help"     , builtin_help    , NULL),
@@ -1047,6 +1113,9 @@ static const struct built_in_command blt
 #if ENABLE_HUSH_READ
 	BLTIN("read"     , builtin_read    , "Input into variable"),
 #endif
+#if ENABLE_HUSH_READONLY
+	BLTIN("readonly" , builtin_readonly, "Make variables read-only"),
+#endif
 #if ENABLE_HUSH_FUNCTIONS
 	BLTIN("return"   , builtin_return  , "Return from function"),
 #endif
@@ -1057,6 +1126,9 @@ static const struct built_in_command blt
 #if BASH_SOURCE
 	BLTIN("source"   , builtin_source  , NULL),
 #endif
+#if ENABLE_HUSH_TIMES
+	BLTIN("times"    , builtin_times   , NULL),
+#endif
 #if ENABLE_HUSH_TRAP
 	BLTIN("trap"     , builtin_trap    , "Trap signals"),
 #endif
@@ -1074,7 +1146,7 @@ static const struct built_in_command blt
 	BLTIN("unset"    , builtin_unset   , "Unset variables"),
 #endif
 #if ENABLE_HUSH_WAIT
-	BLTIN("wait"     , builtin_wait    , "Wait for process"),
+	BLTIN("wait"     , builtin_wait    , "Wait for process to finish"),
 #endif
 };
 /* These builtins won't be used if we are on NOMMU and need to re-exec
@@ -1154,6 +1226,10 @@ static const struct built_in_command blt
 # define DEBUG_GLOB 0
 #endif
 
+#ifndef debug_printf_redir
+# define debug_printf_redir(...) (indent(), fdprintf(2, __VA_ARGS__))
+#endif
+
 #ifndef debug_printf_list
 # define debug_printf_list(...) (indent(), fdprintf(2, __VA_ARGS__))
 #endif
@@ -1221,7 +1297,7 @@ static void xxfree(void *ptr)
  * HUSH_DEBUG >= 2 prints line number in this file where it was detected.
  */
 #if HUSH_DEBUG < 2
-# define die_if_script(lineno, ...)             die_if_script(__VA_ARGS__)
+# define msg_and_die_if_script(lineno, ...)     msg_and_die_if_script(__VA_ARGS__)
 # define syntax_error(lineno, msg)              syntax_error(msg)
 # define syntax_error_at(lineno, msg)           syntax_error_at(msg)
 # define syntax_error_unterm_ch(lineno, ch)     syntax_error_unterm_ch(ch)
@@ -1229,7 +1305,16 @@ static void xxfree(void *ptr)
 # define syntax_error_unexpected_ch(lineno, ch) syntax_error_unexpected_ch(ch)
 #endif
 
-static void die_if_script(unsigned lineno, const char *fmt, ...)
+static void die_if_script(void)
+{
+	if (!G_interactive_fd) {
+		if (G.last_exitcode) /* sometines it's 2, not 1 (bash compat) */
+			xfunc_error_retval = G.last_exitcode;
+		xfunc_die();
+	}
+}
+
+static void msg_and_die_if_script(unsigned lineno, const char *fmt, ...)
 {
 	va_list p;
 
@@ -1239,8 +1324,7 @@ static void die_if_script(unsigned linen
 	va_start(p, fmt);
 	bb_verror_msg(fmt, p, NULL);
 	va_end(p);
-	if (!G_interactive_fd)
-		xfunc_die();
+	die_if_script();
 }
 
 static void syntax_error(unsigned lineno UNUSED_PARAM, const char *msg)
@@ -1249,16 +1333,20 @@ static void syntax_error(unsigned lineno
 		bb_error_msg("syntax error: %s", msg);
 	else
 		bb_error_msg("syntax error");
+	die_if_script();
 }
 
 static void syntax_error_at(unsigned lineno UNUSED_PARAM, const char *msg)
 {
 	bb_error_msg("syntax error at '%s'", msg);
+	die_if_script();
 }
 
 static void syntax_error_unterm_str(unsigned lineno UNUSED_PARAM, const char *s)
 {
 	bb_error_msg("syntax error: unterminated %s", s);
+//? source4.tests fails: in bash, echo ${^} in script does not terminate the script
+//	die_if_script();
 }
 
 static void syntax_error_unterm_ch(unsigned lineno, char ch)
@@ -1276,17 +1364,18 @@ static void syntax_error_unexpected_ch(u
 	bb_error_msg("hush.c:%u", lineno);
 #endif
 	bb_error_msg("syntax error: unexpected %s", ch == EOF ? "EOF" : msg);
+	die_if_script();
 }
 
 #if HUSH_DEBUG < 2
-# undef die_if_script
+# undef msg_and_die_if_script
 # undef syntax_error
 # undef syntax_error_at
 # undef syntax_error_unterm_ch
 # undef syntax_error_unterm_str
 # undef syntax_error_unexpected_ch
 #else
-# define die_if_script(...)             die_if_script(__LINE__, __VA_ARGS__)
+# define msg_and_die_if_script(...)     msg_and_die_if_script(__LINE__, __VA_ARGS__)
 # define syntax_error(msg)              syntax_error(__LINE__, msg)
 # define syntax_error_at(msg)           syntax_error_at(__LINE__, msg)
 # define syntax_error_unterm_ch(ch)     syntax_error_unterm_ch(__LINE__, ch)
@@ -1389,17 +1478,37 @@ static void free_strings(char **strings)
 	free(strings);
 }
 
+static int fcntl_F_DUPFD(int fd, int avoid_fd)
+{
+	int newfd;
+ repeat:
+	newfd = fcntl(fd, F_DUPFD, avoid_fd + 1);
+	if (newfd < 0) {
+		if (errno == EBUSY)
+			goto repeat;
+		if (errno == EINTR)
+			goto repeat;
+	}
+	return newfd;
+}
 
-static int xdup_and_close(int fd, int F_DUPFD_maybe_CLOEXEC)
+static int xdup_CLOEXEC_and_close(int fd, int avoid_fd)
 {
-	/* We avoid taking stdio fds. Mimicking ash: use fds above 9 */
-	int newfd = fcntl(fd, F_DUPFD_maybe_CLOEXEC, 10);
+	int newfd;
+ repeat:
+	newfd = fcntl(fd, F_DUPFD_CLOEXEC, avoid_fd + 1);
 	if (newfd < 0) {
+		if (errno == EBUSY)
+			goto repeat;
+		if (errno == EINTR)
+			goto repeat;
 		/* fd was not open? */
 		if (errno == EBADF)
 			return fd;
 		xfunc_die();
 	}
+	if (F_DUPFD_CLOEXEC == F_DUPFD) /* if old libc (w/o F_DUPFD_CLOEXEC) */
+		fcntl(newfd, F_SETFD, FD_CLOEXEC);
 	close(fd);
 	return newfd;
 }
@@ -1432,13 +1541,14 @@ static void fclose_and_forget(FILE *fp)
 	}
 	fclose(fp);
 }
-static int save_FILEs_on_redirect(int fd)
+static int save_FILEs_on_redirect(int fd, int avoid_fd)
 {
 	struct FILE_list *fl = G.FILE_list;
 	while (fl) {
 		if (fd == fl->fd) {
 			/* We use it only on script files, they are all CLOEXEC */
-			fl->fd = xdup_and_close(fd, F_DUPFD_CLOEXEC);
+			fl->fd = xdup_CLOEXEC_and_close(fd, avoid_fd);
+			debug_printf_redir("redirect_fd %d: matches a script fd, moving it to %d\n", fd, fl->fd);
 			return 1;
 		}
 		fl = fl->next;
@@ -1451,6 +1561,7 @@ static void restore_redirected_FILEs(voi
 	while (fl) {
 		int should_be = fileno(fl->fp);
 		if (fl->fd != should_be) {
+			debug_printf_redir("restoring script fd from %d to %d\n", fl->fd, should_be);
 			xmove_fd(fl->fd, should_be);
 			fl->fd = should_be;
 		}
@@ -1473,6 +1584,16 @@ static void close_all_FILE_list(void)
 	}
 }
 #endif
+static int fd_in_FILEs(int fd)
+{
+	struct FILE_list *fl = G.FILE_list;
+	while (fl) {
+		if (fl->fd == fd)
+			return 1;
+		fl = fl->next;
+	}
+	return 0;
+}
 
 
 /* Helpers for setting new $n and restoring them back
@@ -1717,7 +1838,7 @@ static void restore_ttypgrp_and__exit(vo
  *	echo END_OF_SCRIPT
  * lseeks fd in input FILE object from EOF to "e" in "echo END_OF_SCRIPT".
  * This makes "echo END_OF_SCRIPT" executed twice.
- * Similar problems can be seen with die_if_script() -> xfunc_die()
+ * Similar problems can be seen with msg_and_die_if_script() -> xfunc_die()
  * and in `cmd` handling.
  * If set as die_func(), this makes xfunc_die() exit via _exit(), not exit():
  */
@@ -1883,6 +2004,9 @@ static int check_and_run_traps(void)
 			break;
 #if ENABLE_HUSH_JOB
 		case SIGHUP: {
+//TODO: why are we doing this? ash and dash don't do this,
+//they have no handler for SIGHUP at all,
+//they rely on kernel to send SIGHUP+SIGCONT to orphaned process groups
 			struct pipe *job;
 			debug_printf_exec("%s: sig:%d default SIGHUP handler\n", __func__, sig);
 			/* bash is observed to signal whole process groups,
@@ -1986,32 +2110,19 @@ static const char* FAST_FUNC get_local_v
 
 /* str holds "NAME=VAL" and is expected to be malloced.
  * We take ownership of it.
- * flg_export:
- *  0: do not change export flag
- *     (if creating new variable, flag will be 0)
- *  1: set export flag and putenv the variable
- * -1: clear export flag and unsetenv the variable
- * flg_read_only is set only when we handle -R var=val
- */
-#if !BB_MMU && ENABLE_HUSH_LOCAL
-/* all params are used */
-#elif BB_MMU && ENABLE_HUSH_LOCAL
-#define set_local_var(str, flg_export, local_lvl, flg_read_only) \
-	set_local_var(str, flg_export, local_lvl)
-#elif BB_MMU && !ENABLE_HUSH_LOCAL
-#define set_local_var(str, flg_export, local_lvl, flg_read_only) \
-	set_local_var(str, flg_export)
-#elif !BB_MMU && !ENABLE_HUSH_LOCAL
-#define set_local_var(str, flg_export, local_lvl, flg_read_only) \
-	set_local_var(str, flg_export, flg_read_only)
-#endif
-static int set_local_var(char *str, int flg_export, int local_lvl, int flg_read_only)
+ */
+#define SETFLAG_EXPORT   (1 << 0)
+#define SETFLAG_UNEXPORT (1 << 1)
+#define SETFLAG_MAKE_RO  (1 << 2)
+#define SETFLAG_LOCAL_SHIFT    3
+static int set_local_var(char *str, unsigned flags)
 {
 	struct variable **var_pp;
 	struct variable *cur;
 	char *free_me = NULL;
 	char *eq_sign;
 	int name_len;
+	IF_HUSH_LOCAL(unsigned local_lvl = (flags >> SETFLAG_LOCAL_SHIFT);)
 
 	eq_sign = strchr(str, '=');
 	if (!eq_sign) { /* not expected to ever happen? */
@@ -2029,14 +2140,13 @@ static int set_local_var(char *str, int
 
 		/* We found an existing var with this name */
 		if (cur->flg_read_only) {
-#if !BB_MMU
-			if (!flg_read_only)
-#endif
-				bb_error_msg("%s: readonly variable", str);
+			bb_error_msg("%s: readonly variable", str);
 			free(str);
+//NOTE: in bash, assignment in "export READONLY_VAR=Z" fails, and sets $?=1,
+//but export per se succeeds (does put the var in env). We don't mimic that.
 			return -1;
 		}
-		if (flg_export == -1) { // "&& cur->flg_export" ?
+		if (flags & SETFLAG_UNEXPORT) { // && cur->flg_export ?
 			debug_printf_env("%s: unsetenv '%s'\n", __func__, str);
 			*eq_sign = '\0';
 			unsetenv(str);
@@ -2060,7 +2170,7 @@ static int set_local_var(char *str, int
 			 * z=z
 			 */
 			if (cur->flg_export)
-				flg_export = 1;
+				flags |= SETFLAG_EXPORT;
 			break;
 		}
 #endif
@@ -2091,24 +2201,29 @@ static int set_local_var(char *str, int
 
 	/* Not found - create new variable struct */
 	cur = xzalloc(sizeof(*cur));
-#if ENABLE_HUSH_LOCAL
-	cur->func_nest_level = local_lvl;
-#endif
+	IF_HUSH_LOCAL(cur->func_nest_level = local_lvl;)
 	cur->next = *var_pp;
 	*var_pp = cur;
 
  set_str_and_exp:
 	cur->varstr = str;
-#if !BB_MMU
-	cur->flg_read_only = flg_read_only;
-#endif
  exp:
-	if (flg_export == 1)
+#if !BB_MMU || ENABLE_HUSH_READONLY
+	if (flags & SETFLAG_MAKE_RO) {
+		cur->flg_read_only = 1;
+	}
+#endif
+	if (flags & SETFLAG_EXPORT)
 		cur->flg_export = 1;
 	if (name_len == 4 && cur->varstr[0] == 'P' && cur->varstr[1] == 'S')
 		cmdedit_update_prompt();
+#if ENABLE_HUSH_GETOPTS
+	/* defoptindvar is a "OPTIND=..." constant string */
+	if (strncmp(cur->varstr, defoptindvar, 7) == 0)
+		G.getopt_count = 0;
+#endif
 	if (cur->flg_export) {
-		if (flg_export == -1) {
+		if (flags & SETFLAG_UNEXPORT) {
 			cur->flg_export = 0;
 			/* unsetenv was already done */
 		} else {
@@ -2125,10 +2240,9 @@ static int set_local_var(char *str, int
 }
 
 /* Used at startup and after each cd */
-static void set_pwd_var(int exp)
+static void set_pwd_var(unsigned flag)
 {
-	set_local_var(xasprintf("PWD=%s", get_cwd(/*force:*/ 1)),
-		/*exp:*/ exp, /*lvl:*/ 0, /*ro:*/ 0);
+	set_local_var(xasprintf("PWD=%s", get_cwd(/*force:*/ 1)), flag);
 }
 
 static int unset_local_var_len(const char *name, int name_len)
@@ -2138,6 +2252,10 @@ static int unset_local_var_len(const cha
 
 	if (!name)
 		return EXIT_SUCCESS;
+#if ENABLE_HUSH_GETOPTS
+	if (name_len == 6 && strncmp(name, "OPTIND", 6) == 0)
+		G.getopt_count = 0;
+#endif
 	var_pp = &G.top_var;
 	while ((cur = *var_pp) != NULL) {
 		if (strncmp(cur->varstr, name, name_len) == 0 && cur->varstr[name_len] == '=') {
@@ -2160,7 +2278,7 @@ static int unset_local_var_len(const cha
 	return EXIT_SUCCESS;
 }
 
-#if ENABLE_HUSH_UNSET
+#if ENABLE_HUSH_UNSET || ENABLE_HUSH_GETOPTS
 static int unset_local_var(const char *name)
 {
 	return unset_local_var_len(name, strlen(name));
@@ -2182,11 +2300,11 @@ static void unset_vars(char **strings)
 	free(strings);
 }
 
-#if BASH_HOSTNAME_VAR || ENABLE_FEATURE_SH_MATH || ENABLE_HUSH_READ
+#if BASH_HOSTNAME_VAR || ENABLE_FEATURE_SH_MATH || ENABLE_HUSH_READ || ENABLE_HUSH_GETOPTS
 static void FAST_FUNC set_local_var_from_halves(const char *name, const char *val)
 {
 	char *var = xasprintf("%s=%s", name, val);
-	set_local_var(var, /*flags:*/ 0, /*lvl:*/ 0, /*ro:*/ 0);
+	set_local_var(var, /*flag:*/ 0);
 }
 #endif
 
@@ -2229,16 +2347,32 @@ static struct variable *set_vars_and_sav
 		if (eq) {
 			var_pp = get_ptr_to_local_var(*s, eq - *s);
 			if (var_pp) {
-				/* Remove variable from global linked list */
 				var_p = *var_pp;
+				if (var_p->flg_read_only) {
+					char **p;
+					bb_error_msg("%s: readonly variable", *s);
+					/*
+					 * "VAR=V BLTIN" unsets VARs after BLTIN completes.
+					 * If VAR is readonly, leaving it in the list
+					 * after asssignment error (msg above)
+					 * causes doubled error message later, on unset.
+					 */
+					debug_printf_env("removing/freeing '%s' element\n", *s);
+					free(*s);
+					p = s;
+					do { *p = p[1]; p++; } while (*p);
+					goto next;
+				}
+				/* Remove variable from global linked list */
 				debug_printf_env("%s: removing '%s'\n", __func__, var_p->varstr);
 				*var_pp = var_p->next;
 				/* Add it to returned list */
 				var_p->next = old;
 				old = var_p;
 			}
-			set_local_var(*s, /*exp:*/ 1, /*lvl:*/ 0, /*ro:*/ 0);
+			set_local_var(*s, SETFLAG_EXPORT);
 		}
+ next:
 		s++;
 	}
 	return old;
@@ -2327,18 +2461,17 @@ static int get_user_input(struct in_str
 		/* buglet: SIGINT will not make new prompt to appear _at once_,
 		 * only after <Enter>. (^C works immediately) */
 		r = read_line_input(G.line_input_state, prompt_str,
-				G.user_input_buf, CONFIG_FEATURE_EDITING_MAX_LEN-1,
-				/*timeout*/ -1
+				G.user_input_buf, CONFIG_FEATURE_EDITING_MAX_LEN-1
 		);
 		/* read_line_input intercepts ^C, "convert" it to SIGINT */
-		if (r == 0) {
-			write(STDOUT_FILENO, "^C", 2);
+		if (r == 0)
 			raise(SIGINT);
-		}
 		check_and_run_traps();
 		if (r != 0 && !G.flag_SIGINT)
 			break;
 		/* ^C or SIGINT: repeat */
+		/* bash prints ^C even on real SIGINT (non-kbd generated) */
+		write(STDOUT_FILENO, "^C", 2);
 		G.last_exitcode = 128 + SIGINT;
 	}
 	if (r < 0) {
@@ -2590,9 +2723,8 @@ static void o_delchr(o_string *o)
 static void o_addblock(o_string *o, const char *str, int len)
 {
 	o_grow_by(o, len);
-	memcpy(&o->data[o->length], str, len);
+	((char*)mempcpy(&o->data[o->length], str, len))[0] = '\0';
 	o->length += len;
-	o->data[o->length] = '\0';
 }
 
 static void o_addstr(o_string *o, const char *str)
@@ -3301,7 +3433,7 @@ static int done_command(struct parse_con
 #if 0	/* Instead we emit error message at run time */
 	if (ctx->pending_redirect) {
 		/* For example, "cmd >" (no filename to redirect to) */
-		die_if_script("syntax error: %s", "invalid redirect");
+		syntax_error("invalid redirect");
 		ctx->pending_redirect = NULL;
 	}
 #endif
@@ -3334,12 +3466,49 @@ static void done_pipe(struct parse_conte
 	debug_printf_parse("done_pipe entered, followup %d\n", type);
 	/* Close previous command */
 	not_null = done_command(ctx);
-	ctx->pipe->followup = type;
 #if HAS_KEYWORDS
 	ctx->pipe->pi_inverted = ctx->ctx_inverted;
 	ctx->ctx_inverted = 0;
 	ctx->pipe->res_word = ctx->ctx_res_w;
 #endif
+	if (type == PIPE_BG && ctx->list_head != ctx->pipe) {
+		/* Necessary since && and || have precedence over &:
+		 * "cmd1 && cmd2 &" must spawn both cmds, not only cmd2,
+		 * in a backgrounded subshell.
+		 */
+		struct pipe *pi;
+		struct command *command;
+
+		/* Is this actually this construct, all pipes end with && or ||? */
+		pi = ctx->list_head;
+		while (pi != ctx->pipe) {
+			if (pi->followup != PIPE_AND && pi->followup != PIPE_OR)
+				goto no_conv;
+			pi = pi->next;
+		}
+
+		debug_printf_parse("BG with more than one pipe, converting to { p1 &&...pN; } &\n");
+		pi->followup = PIPE_SEQ; /* close pN _not_ with "&"! */
+		pi = xzalloc(sizeof(*pi));
+		pi->followup = PIPE_BG;
+		pi->num_cmds = 1;
+		pi->cmds = xzalloc(sizeof(pi->cmds[0]));
+		command = &pi->cmds[0];
+		if (CMD_NORMAL != 0) /* "if xzalloc didn't do that already" */
+			command->cmd_type = CMD_NORMAL;
+		command->group = ctx->list_head;
+#if !BB_MMU
+		command->group_as_string = xstrndup(
+			    ctx->as_string.data,
+			    ctx->as_string.length - 1 /* do not copy last char, "&" */
+		);
+#endif
+		/* Replace all pipes in ctx with one newly created */
+		ctx->list_head = ctx->pipe = pi;
+	} else {
+ no_conv:
+		ctx->pipe->followup = type;
+	}
 
 	/* Without this check, even just <enter> on command line generates
 	 * tree of three NOPs (!). Which is harmless but annoying.
@@ -3509,9 +3678,8 @@ static int reserved_word(o_string *word,
 	if (r->flag & FLAG_START) {
 		struct parse_context *old;
 
-		old = xmalloc(sizeof(*old));
+		old = xmemdup(ctx, sizeof(*ctx));
 		debug_printf_parse("push stack %p\n", old);
-		*old = *ctx;   /* physical copy */
 		initialize_context(ctx);
 		ctx->stack = old;
 	} else if (/*ctx->ctx_res_w == RES_NONE ||*/ !(ctx->old_flag & (1 << r->res))) {
@@ -3831,7 +3999,7 @@ static int parse_redirect(struct parse_c
 #if 0		/* Instead we emit error message at run time */
 		if (ctx->pending_redirect) {
 			/* For example, "cmd > <file" */
-			die_if_script("syntax error: %s", "invalid redirect");
+			syntax_error("invalid redirect");
 		}
 #endif
 		/* Set ctx->pending_redirect, so we know what to do at the
@@ -3894,24 +4062,34 @@ static char *fetch_till_str(o_string *as
 		ch = i_getch(input);
 		if (ch != EOF)
 			nommu_addchr(as_string, ch);
-		if ((ch == '\n' || ch == EOF)
-		 && ((heredoc_flags & HEREDOC_QUOTED) || prev != '\\')
-		) {
-			if (strcmp(heredoc.data + past_EOL, word) == 0) {
-				heredoc.data[past_EOL] = '\0';
-				debug_printf_parse("parsed heredoc '%s'\n", heredoc.data);
-				return heredoc.data;
-			}
-			while (ch == '\n') {
-				o_addchr(&heredoc, ch);
-				prev = ch;
+		if (ch == '\n' || ch == EOF) {
+ check_heredoc_end:
+			if ((heredoc_flags & HEREDOC_QUOTED) || prev != '\\') {
+				if (strcmp(heredoc.data + past_EOL, word) == 0) {
+					heredoc.data[past_EOL] = '\0';
+					debug_printf_parse("parsed heredoc '%s'\n", heredoc.data);
+					return heredoc.data;
+				}
+				if (ch == '\n') {
+					/* This is a new line.
+					 * Remember position and backslash-escaping status.
+					 */
+					o_addchr(&heredoc, ch);
+					prev = ch;
  jump_in:
-				past_EOL = heredoc.length;
-				do {
-					ch = i_getch(input);
-					if (ch != EOF)
-						nommu_addchr(as_string, ch);
-				} while ((heredoc_flags & HEREDOC_SKIPTABS) && ch == '\t');
+					past_EOL = heredoc.length;
+					/* Get 1st char of next line, possibly skipping leading tabs */
+					do {
+						ch = i_getch(input);
+						if (ch != EOF)
+							nommu_addchr(as_string, ch);
+					} while ((heredoc_flags & HEREDOC_SKIPTABS) && ch == '\t');
+					/* If this immediately ended the line,
+					 * go back to end-of-line checks.
+					 */
+					if (ch == '\n')
+						goto check_heredoc_end;
+				}
 			}
 		}
 		if (ch == EOF) {
@@ -4359,6 +4537,8 @@ static int parse_dollar(o_string *as_str
 	case '@': /* args */
 		goto make_one_char_var;
 	case '{': {
+		char len_single_ch;
+
 		o_addchr(dest, SPECIAL_VAR_SYMBOL);
 
 		ch = i_getch(input); /* eat '{' */
@@ -4378,6 +4558,7 @@ static int parse_dollar(o_string *as_str
 			return 0;
 		}
 		nommu_addchr(as_string, ch);
+		len_single_ch = ch;
 		ch |= quote_mask;
 
 		/* It's possible to just call add_till_closing_bracket() at this point.
@@ -4402,9 +4583,18 @@ static int parse_dollar(o_string *as_str
 				/* handle parameter expansions
 				 * http://www.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html#tag_02_06_02
 				 */
-				if (!strchr(VAR_SUBST_OPS, ch)) /* ${var<bad_char>... */
-					goto bad_dollar_syntax;
-
+				if (!strchr(VAR_SUBST_OPS, ch)) { /* ${var<bad_char>... */
+					if (len_single_ch != '#'
+					/*|| !strchr(SPECIAL_VARS_STR, ch) - disallow errors like ${#+} ? */
+					 || i_peek(input) != '}'
+					) {
+						goto bad_dollar_syntax;
+					}
+					/* else: it's "length of C" ${#C} op,
+					 * where C is a single char
+					 * special var name, e.g. ${#!}.
+					 */
+				}
 				/* Eat everything until closing '}' (or ':') */
 				end_ch = '}';
 				if (BASH_SUBSTR
@@ -4461,6 +4651,7 @@ static int parse_dollar(o_string *as_str
 				}
 				break;
 			}
+			len_single_ch = 0; /* it can't be ${#C} op */
 		}
 		o_addchr(dest, SPECIAL_VAR_SYMBOL);
 		break;
@@ -4782,7 +4973,9 @@ static struct pipe *parse_stream(char **
 					 * Really, ask yourself, why
 					 * "cmd && <newline>" doesn't start
 					 * cmd but waits for more input?
-					 * No reason...)
+					 * The only reason is that it might be
+					 * a "cmd1 && <nl> cmd2 &" construct,
+					 * cmd1 may need to run in BG).
 					 */
 					struct pipe *pi = ctx.list_head;
 					if (pi->num_cmds != 0       /* check #1 */
@@ -4878,10 +5071,16 @@ static struct pipe *parse_stream(char **
 				else
 					o_free_unsafe(&ctx.as_string);
 #endif
-				debug_leave();
+				if (ch != ';' && IS_NULL_PIPE(ctx.list_head)) {
+					/* Example: bare "{ }", "()" */
+					G.last_exitcode = 2; /* bash compat */
+					syntax_error_unexpected_ch(ch);
+					goto parse_error2;
+				}
 				debug_printf_parse("parse_stream return %p: "
 						"end_trigger char found\n",
 						ctx.list_head);
+				debug_leave();
 				return ctx.list_head;
 			}
 		}
@@ -4941,14 +5140,23 @@ static struct pipe *parse_stream(char **
 		case '#':
 			if (dest.length == 0 && !dest.has_quoted_part) {
 				/* skip "#comment" */
+				/* note: we do not add it to &ctx.as_string */
+/* TODO: in bash:
+ * comment inside $() goes to the next \n, even inside quoted string (!):
+ * cmd "$(cmd2 #comment)" - syntax error
+ * cmd "`cmd2 #comment`" - ok
+ * We accept both (comment ends where command subst ends, in both cases).
+ */
 				while (1) {
 					ch = i_peek(input);
-					if (ch == EOF || ch == '\n')
+					if (ch == '\n') {
+						nommu_addchr(&ctx.as_string, '\n');
+						break;
+					}
+					ch = i_getch(input);
+					if (ch == EOF)
 						break;
-					i_getch(input);
-					/* note: we do not add it to &ctx.as_string */
 				}
-				nommu_addchr(&ctx.as_string, '\n');
 				continue; /* back to top of while (1) */
 			}
 			break;
@@ -5139,9 +5347,9 @@ static struct pipe *parse_stream(char **
 			/* proper use of this character is caught by end_trigger:
 			 * if we see {, we call parse_group(..., end_trigger='}')
 			 * and it will match } earlier (not here). */
-			syntax_error_unexpected_ch(ch);
 			G.last_exitcode = 2;
-			goto parse_error1;
+			syntax_error_unexpected_ch(ch);
+			goto parse_error2;
 		default:
 			if (HUSH_DEBUG)
 				bb_error_msg_and_die("BUG: unexpected %c\n", ch);
@@ -5150,7 +5358,7 @@ static struct pipe *parse_stream(char **
 
  parse_error:
 	G.last_exitcode = 1;
- parse_error1:
+ parse_error2:
 	{
 		struct parse_context *pctx;
 		IF_HAS_KEYWORDS(struct parse_context *p2;)
@@ -5197,7 +5405,7 @@ static struct pipe *parse_stream(char **
 /*** Execution routines ***/
 
 /* Expansion can recurse, need forward decls: */
-#if !BASH_PATTERN_SUBST
+#if !BASH_PATTERN_SUBST && !ENABLE_HUSH_CASE
 /* only ${var/pattern/repl} (its pattern part) needs additional mode */
 #define expand_string_to_string(str, do_unbackslash) \
 	expand_string_to_string(str)
@@ -5325,6 +5533,9 @@ static int expand_on_ifs(int *ended_with
 #endif
 static char *encode_then_expand_string(const char *str, int process_bkslash, int do_unbackslash)
 {
+#if !BASH_PATTERN_SUBST
+	enum { do_unbackslash = 1 };
+#endif
 	char *exp_str;
 	struct in_str input;
 	o_string dest = NULL_O_STRING;
@@ -5367,7 +5578,7 @@ static arith_t expand_and_evaluate_arith
 	if (errmsg_p)
 		*errmsg_p = math_state.errmsg;
 	if (math_state.errmsg)
-		die_if_script(math_state.errmsg);
+		msg_and_die_if_script(math_state.errmsg);
 	return res;
 }
 #endif
@@ -5406,17 +5617,15 @@ static char *replace_pattern(char *val,
 			break;
 
 		result = xrealloc(result, res_len + (s - val) + repl_len + 1);
-		memcpy(result + res_len, val, s - val);
-		res_len += s - val;
-		strcpy(result + res_len, repl);
-		res_len += repl_len;
+		strcpy(mempcpy(result + res_len, val, s - val), repl);
+		res_len += (s - val) + repl_len;
 		debug_printf_varexp("val:'%s' s:'%s' result:'%s'\n", val, s, result);
 
 		val = s + size;
 		if (exp_op == '/')
 			break;
 	}
-	if (val[0] && result) {
+	if (*val && result) {
 		result = xrealloc(result, res_len + strlen(val) + 1);
 		strcpy(result + res_len, val);
 		debug_printf_varexp("val:'%s' result:'%s'\n", val, result);
@@ -5449,8 +5658,10 @@ static NOINLINE const char *expand_one_v
 	first_char = arg[0] = arg0 & 0x7f;
 	exp_op = 0;
 
-	if (first_char == '#'      /* ${#... */
-	 && arg[1] && !exp_saveptr /* not ${#} and not ${#<op_char>...} */
+	if (first_char == '#' && arg[1] /* ${#...} but not ${#} */
+	 && (!exp_saveptr               /* and ( not(${#<op_char>...}) */
+	    || (arg[2] == '\0' && strchr(SPECIAL_VARS_STR, arg[1])) /* or ${#C} "len of $C" ) */
+	    )		/* NB: skipping ^^^specvar check mishandles ${#::2} */
 	) {
 		/* It must be length operator: ${#var} */
 		var++;
@@ -5623,27 +5834,34 @@ static NOINLINE const char *expand_one_v
 			if (errmsg)
 				goto arith_err;
 			debug_printf_varexp("len:'%s'=%lld\n", exp_word, (long long)len);
-			if (len >= 0) { /* bash compat: len < 0 is illegal */
-				if (beg < 0) /* bash compat */
-					beg = 0;
-				debug_printf_varexp("from val:'%s'\n", val);
-				if (len == 0 || !val || beg >= strlen(val)) {
+			if (beg < 0) {
+				/* negative beg counts from the end */
+				beg = (arith_t)strlen(val) + beg;
+				if (beg < 0) /* ${v: -999999} is "" */
+					beg = len = 0;
+			}
+			debug_printf_varexp("from val:'%s'\n", val);
+			if (len < 0) {
+				/* in bash, len=-n means strlen()-n */
+				len = (arith_t)strlen(val) - beg + len;
+				if (len < 0) /* bash compat */
+					msg_and_die_if_script("%s: substring expression < 0", var);
+			}
+			if (len <= 0 || !val || beg >= strlen(val)) {
  arith_err:
-					val = NULL;
-				} else {
-					/* Paranoia. What if user entered 9999999999999
-					 * which fits in arith_t but not int? */
-					if (len >= INT_MAX)
-						len = INT_MAX;
-					val = to_be_freed = xstrndup(val + beg, len);
-				}
-				debug_printf_varexp("val:'%s'\n", val);
-			} else
-#endif /* HUSH_SUBSTR_EXPANSION && FEATURE_SH_MATH */
-			{
-				die_if_script("malformed ${%s:...}", var);
 				val = NULL;
-			}
+			} else {
+				/* Paranoia. What if user entered 9999999999999
+				 * which fits in arith_t but not int? */
+				if (len >= INT_MAX)
+					len = INT_MAX;
+				val = to_be_freed = xstrndup(val + beg, len);
+			}
+			debug_printf_varexp("val:'%s'\n", val);
+#else /* not (HUSH_SUBSTR_EXPANSION && FEATURE_SH_MATH) */
+			msg_and_die_if_script("malformed ${%s:...}", var);
+			val = NULL;
+#endif
 		} else { /* one of "-=+?" */
 			/* Standard-mandated substitution ops:
 			 * ${var?word} - indicate error if unset
@@ -5678,9 +5896,13 @@ static NOINLINE const char *expand_one_v
 					exp_word = to_be_freed;
 				if (exp_op == '?') {
 					/* mimic bash message */
-					die_if_script("%s: %s",
+					msg_and_die_if_script("%s: %s",
 						var,
-						exp_word[0] ? exp_word : "parameter null or not set"
+						exp_word[0]
+						? exp_word
+						: "parameter null or not set"
+						/* ash has more specific messages, a-la: */
+						/*: (exp_save == ':' ? "parameter null or not set" : "parameter not set")*/
 					);
 //TODO: how interactive bash aborts expansion mid-command?
 				} else {
@@ -5691,11 +5913,11 @@ static NOINLINE const char *expand_one_v
 					/* ${var=[word]} or ${var:=[word]} */
 					if (isdigit(var[0]) || var[0] == '#') {
 						/* mimic bash message */
-						die_if_script("$%s: cannot assign in this way", var);
+						msg_and_die_if_script("$%s: cannot assign in this way", var);
 						val = NULL;
 					} else {
 						char *new_var = xasprintf("%s=%s", var, val);
-						set_local_var(new_var, /*exp:*/ 0, /*lvl:*/ 0, /*ro:*/ 0);
+						set_local_var(new_var, /*flag:*/ 0);
 					}
 				}
 			}
@@ -5944,7 +6166,7 @@ static char **expand_strvec_to_strvec_si
  */
 static char *expand_string_to_string(const char *str, int do_unbackslash)
 {
-#if !BASH_PATTERN_SUBST
+#if !BASH_PATTERN_SUBST && !ENABLE_HUSH_CASE
 	const int do_unbackslash = 1;
 #endif
 	char *argv[2], **list;
@@ -5977,7 +6199,7 @@ static char *expand_string_to_string(con
 	return (char*)list;
 }
 
-/* Used for "eval" builtin */
+/* Used for "eval" builtin and case string */
 static char* expand_strvec_to_string(char **argv)
 {
 	char **list;
@@ -6519,85 +6741,175 @@ static void setup_heredoc(struct redir_s
 	wait(NULL); /* wait till child has died */
 }
 
-/* fd: redirect wants this fd to be used (e.g. 3>file).
- * Move all conflicting internally used fds,
- * and remember them so that we can restore them later.
- */
-static int save_fds_on_redirect(int fd, int squirrel[3])
+struct squirrel {
+	int orig_fd;
+	int moved_to;
+	/* moved_to = n: fd was moved to n; restore back to orig_fd after redir */
+	/* moved_to = -1: fd was opened by redirect; close orig_fd after redir */
+};
+
+static struct squirrel *append_squirrel(struct squirrel *sq, int i, int orig, int moved)
 {
-	if (squirrel) {
-		/* Handle redirects of fds 0,1,2 */
+	sq = xrealloc(sq, (i + 2) * sizeof(sq[0]));
+	sq[i].orig_fd = orig;
+	sq[i].moved_to = moved;
+	sq[i+1].orig_fd = -1; /* end marker */
+	return sq;
+}
 
-		/* If we collide with an already moved stdio fd... */
-		if (fd == squirrel[0]) {
-			squirrel[0] = xdup_and_close(squirrel[0], F_DUPFD);
-			return 1;
+static struct squirrel *add_squirrel(struct squirrel *sq, int fd, int avoid_fd)
+{
+	int moved_to;
+	int i;
+
+	i = 0;
+	if (sq) for (; sq[i].orig_fd >= 0; i++) {
+		/* If we collide with an already moved fd... */
+		if (fd == sq[i].moved_to) {
+			sq[i].moved_to = fcntl_F_DUPFD(sq[i].moved_to, avoid_fd);
+			debug_printf_redir("redirect_fd %d: already busy, moving to %d\n", fd, sq[i].moved_to);
+			if (sq[i].moved_to < 0) /* what? */
+				xfunc_die();
+			return sq;
 		}
-		if (fd == squirrel[1]) {
-			squirrel[1] = xdup_and_close(squirrel[1], F_DUPFD);
-			return 1;
+		if (fd == sq[i].orig_fd) {
+			/* Example: echo Hello >/dev/null 1>&2 */
+			debug_printf_redir("redirect_fd %d: already moved\n", fd);
+			return sq;
 		}
-		if (fd == squirrel[2]) {
-			squirrel[2] = xdup_and_close(squirrel[2], F_DUPFD);
-			return 1;
-		}
-		/* If we are about to redirect stdio fd, and did not yet move it... */
-		if (fd <= 2 && squirrel[fd] < 0) {
-			/* We avoid taking stdio fds */
-			squirrel[fd] = fcntl(fd, F_DUPFD, 10);
-			if (squirrel[fd] < 0 && errno != EBADF)
-				xfunc_die();
-			return 0; /* "we did not close fd" */
+	}
+
+	/* If this fd is open, we move and remember it; if it's closed, moved_to = -1 */
+	moved_to = fcntl_F_DUPFD(fd, avoid_fd);
+	debug_printf_redir("redirect_fd %d: previous fd is moved to %d (-1 if it was closed)\n", fd, moved_to);
+	if (moved_to < 0 && errno != EBADF)
+		xfunc_die();
+	return append_squirrel(sq, i, fd, moved_to);
+}
+
+static struct squirrel *add_squirrel_closed(struct squirrel *sq, int fd)
+{
+	int i;
+
+	i = 0;
+	if (sq) for (; sq[i].orig_fd >= 0; i++) {
+		/* If we collide with an already moved fd... */
+		if (fd == sq[i].orig_fd) {
+			/* Examples:
+			 * "echo 3>FILE 3>&- 3>FILE"
+			 * "echo 3>&- 3>FILE"
+			 * No need for last redirect to insert
+			 * another "need to close 3" indicator.
+			 */
+			debug_printf_redir("redirect_fd %d: already moved or closed\n", fd);
+			return sq;
 		}
 	}
 
+	debug_printf_redir("redirect_fd %d: previous fd was closed\n", fd);
+	return append_squirrel(sq, i, fd, -1);
+}
+
+/* fd: redirect wants this fd to be used (e.g. 3>file).
+ * Move all conflicting internally used fds,
+ * and remember them so that we can restore them later.
+ */
+static int save_fd_on_redirect(int fd, int avoid_fd, struct squirrel **sqp)
+{
+	if (avoid_fd < 9) /* the important case here is that it can be -1 */
+		avoid_fd = 9;
+
 #if ENABLE_HUSH_INTERACTIVE
-	if (fd != 0 && fd == G.interactive_fd) {
-		G.interactive_fd = xdup_and_close(G.interactive_fd, F_DUPFD_CLOEXEC);
-		return 1;
+	if (fd == G.interactive_fd) {
+		/* Testcase: "ls -l /proc/$$/fd 255>&-" should work */
+		G.interactive_fd = xdup_CLOEXEC_and_close(G.interactive_fd, avoid_fd);
+		debug_printf_redir("redirect_fd %d: matches interactive_fd, moving it to %d\n", fd, G.interactive_fd);
+		return 1; /* "we closed fd" */
 	}
 #endif
-
 	/* Are we called from setup_redirects(squirrel==NULL)? Two cases:
 	 * (1) Redirect in a forked child. No need to save FILEs' fds,
 	 * we aren't going to use them anymore, ok to trash.
-	 * (2) "exec 3>FILE". Bummer. We can save FILEs' fds,
-	 * but how are we doing to use them?
+	 * (2) "exec 3>FILE". Bummer. We can save script FILEs' fds,
+	 * but how are we doing to restore them?
 	 * "fileno(fd) = new_fd" can't be done.
 	 */
-	if (!squirrel)
+	if (!sqp)
 		return 0;
 
-	return save_FILEs_on_redirect(fd);
+	/* If this one of script's fds? */
+	if (save_FILEs_on_redirect(fd, avoid_fd))
+		return 1; /* yes. "we closed fd" */
+
+	/* Check whether it collides with any open fds (e.g. stdio), save fds as needed */
+	*sqp = add_squirrel(*sqp, fd, avoid_fd);
+	return 0; /* "we did not close fd" */
 }
 
-static void restore_redirects(int squirrel[3])
+static void restore_redirects(struct squirrel *sq)
 {
-	int i, fd;
-	for (i = 0; i <= 2; i++) {
-		fd = squirrel[i];
-		if (fd != -1) {
-			/* We simply die on error */
-			xmove_fd(fd, i);
+	if (sq) {
+		int i;
+		for (i = 0; sq[i].orig_fd >= 0; i++) {
+			if (sq[i].moved_to >= 0) {
+				/* We simply die on error */
+				debug_printf_redir("restoring redirected fd from %d to %d\n", sq[i].moved_to, sq[i].orig_fd);
+				xmove_fd(sq[i].moved_to, sq[i].orig_fd);
+			} else {
+				/* cmd1 9>FILE; cmd2_should_see_fd9_closed */
+				debug_printf_redir("restoring redirected fd %d: closing it\n", sq[i].orig_fd);
+				close(sq[i].orig_fd);
+			}
 		}
+		free(sq);
 	}
 
-	/* Moved G.interactive_fd stays on new fd, not doing anything for it */
+	/* If moved, G.interactive_fd stays on new fd, not restoring it */
 
 	restore_redirected_FILEs();
 }
 
+#if ENABLE_FEATURE_SH_STANDALONE && BB_MMU
+static void close_saved_fds_and_FILE_fds(void)
+{
+	if (G_interactive_fd)
+		close(G_interactive_fd);
+	close_all_FILE_list();
+}
+#endif
+
+static int internally_opened_fd(int fd, struct squirrel *sq)
+{
+	int i;
+
+#if ENABLE_HUSH_INTERACTIVE
+	if (fd == G.interactive_fd)
+		return 1;
+#endif
+	/* If this one of script's fds? */
+	if (fd_in_FILEs(fd))
+		return 1;
+
+	if (sq) for (i = 0; sq[i].orig_fd >= 0; i++) {
+		if (fd == sq[i].moved_to)
+			return 1;
+	}
+	return 0;
+}
+
 /* squirrel != NULL means we squirrel away copies of stdin, stdout,
  * and stderr if they are redirected. */
-static int setup_redirects(struct command *prog, int squirrel[])
+static int setup_redirects(struct command *prog, struct squirrel **sqp)
 {
-	int openfd, mode;
 	struct redir_struct *redir;
 
 	for (redir = prog->redirects; redir; redir = redir->next) {
+		int newfd;
+		int closed;
+
 		if (redir->rd_type == REDIRECT_HEREDOC2) {
 			/* "rd_fd<<HERE" case */
-			save_fds_on_redirect(redir->rd_fd, squirrel);
+			save_fd_on_redirect(redir->rd_fd, /*avoid:*/ 0, sqp);
 			/* for REDIRECT_HEREDOC2, rd_filename holds _contents_
 			 * of the heredoc */
 			debug_printf_parse("set heredoc '%s'\n",
@@ -6609,20 +6921,22 @@ static int setup_redirects(struct comman
 		if (redir->rd_dup == REDIRFD_TO_FILE) {
 			/* "rd_fd<*>file" case (<*> is <,>,>>,<>) */
 			char *p;
+			int mode;
+
 			if (redir->rd_filename == NULL) {
 				/*
 				 * Examples:
 				 * "cmd >" (no filename)
 				 * "cmd > <file" (2nd redirect starts too early)
 				 */
-				die_if_script("syntax error: %s", "invalid redirect");
+				syntax_error("invalid redirect");
 				continue;
 			}
 			mode = redir_table[redir->rd_type].mode;
 			p = expand_string_to_string(redir->rd_filename, /*unbackslash:*/ 1);
-			openfd = open_or_warn(p, mode);
+			newfd = open_or_warn(p, mode);
 			free(p);
-			if (openfd < 0) {
+			if (newfd < 0) {
 				/* Error message from open_or_warn can be lost
 				 * if stderr has been redirected, but bash
 				 * and ash both lose it as well
@@ -6630,27 +6944,52 @@ static int setup_redirects(struct comman
 				 */
 				return 1;
 			}
+			if (newfd == redir->rd_fd && sqp) {
+				/* open() gave us precisely the fd we wanted.
+				 * This means that this fd was not busy
+				 * (not opened to anywhere).
+				 * Remember to close it on restore:
+				 */
+				*sqp = add_squirrel_closed(*sqp, newfd);
+				debug_printf_redir("redir to previously closed fd %d\n", newfd);
+			}
 		} else {
-			/* "rd_fd<*>rd_dup" or "rd_fd<*>-" cases */
-			openfd = redir->rd_dup;
+			/* "rd_fd>&rd_dup" or "rd_fd>&-" case */
+			newfd = redir->rd_dup;
 		}
 
-		if (openfd != redir->rd_fd) {
-			int closed = save_fds_on_redirect(redir->rd_fd, squirrel);
-			if (openfd == REDIRFD_CLOSE) {
-				/* "rd_fd >&-" means "close me" */
-				if (!closed) {
-					/* ^^^ optimization: saving may already
-					 * have closed it. If not... */
-					close(redir->rd_fd);
-				}
-			} else {
-				xdup2(openfd, redir->rd_fd);
-				if (redir->rd_dup == REDIRFD_TO_FILE)
-					/* "rd_fd > FILE" */
-					close(openfd);
-				/* else: "rd_fd > rd_dup" */
-			}
+		if (newfd == redir->rd_fd)
+			continue;
+
+		/* if "N>FILE": move newfd to redir->rd_fd */
+		/* if "N>&M": dup newfd to redir->rd_fd */
+		/* if "N>&-": close redir->rd_fd (newfd is REDIRFD_CLOSE) */
+
+		closed = save_fd_on_redirect(redir->rd_fd, /*avoid:*/ newfd, sqp);
+		if (newfd == REDIRFD_CLOSE) {
+			/* "N>&-" means "close me" */
+			if (!closed) {
+				/* ^^^ optimization: saving may already
+				 * have closed it. If not... */
+				close(redir->rd_fd);
+			}
+			/* Sometimes we do another close on restore, getting EBADF.
+			 * Consider "echo 3>FILE 3>&-"
+			 * first redirect remembers "need to close 3",
+			 * and second redirect closes 3! Restore code then closes 3 again.
+			 */
+		} else {
+			/* if newfd is a script fd or saved fd, simulate EBADF */
+			if (internally_opened_fd(newfd, sqp ? *sqp : NULL)) {
+				//errno = EBADF;
+				//bb_perror_msg_and_die("can't duplicate file descriptor");
+				newfd = -1; /* same effect as code above */
+			}
+			xdup2(newfd, redir->rd_fd);
+			if (redir->rd_dup == REDIRFD_TO_FILE)
+				/* "rd_fd > FILE" */
+				close(newfd);
+			/* else: "rd_fd > rd_dup" */
 		}
 	}
 	return 0;
@@ -6817,11 +7156,34 @@ static void exec_function(char ***to_fre
 	argv[0] = G.global_argv[0];
 	G.global_argv = argv;
 	G.global_argc = n = 1 + string_array_len(argv + 1);
+
+// Example when we are here: "cmd | func"
+// func will run with saved-redirect fds open.
+// $ f() { echo /proc/self/fd/*; }
+// $ true | f
+// /proc/self/fd/0 /proc/self/fd/1 /proc/self/fd/2 /proc/self/fd/255 /proc/self/fd/3
+// stdio^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G_interactive_fd^ DIR fd for glob
+// Same in script:
+// $ . ./SCRIPT
+// /proc/self/fd/0 /proc/self/fd/1 /proc/self/fd/2 /proc/self/fd/255 /proc/self/fd/3 /proc/self/fd/4
+// stdio^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ G_interactive_fd^ opened ./SCRIPT DIR fd for glob
+// They are CLOEXEC so external programs won't see them, but
+// for "more correctness" we might want to close those extra fds here:
+//?	close_saved_fds_and_FILE_fds();
+
+	/* "we are in function, ok to use return" */
+	G_flag_return_in_progress = -1;
+	IF_HUSH_LOCAL(G.func_nest_level++;)
+
 	/* On MMU, funcp->body is always non-NULL */
 	n = run_list(funcp->body);
 	fflush_all();
 	_exit(n);
 # else
+//?	close_saved_fds_and_FILE_fds();
+
+//TODO: check whether "true | func_with_return" works
+
 	re_execute_shell(to_free,
 			funcp->body_as_string,
 			G.global_argv[0],
@@ -6841,9 +7203,7 @@ static int run_function(const struct fun
 	/* "we are in function, ok to use return" */
 	sv_flg = G_flag_return_in_progress;
 	G_flag_return_in_progress = -1;
-# if ENABLE_HUSH_LOCAL
-	G.func_nest_level++;
-# endif
+	IF_HUSH_LOCAL(G.func_nest_level++;)
 
 	/* On MMU, funcp->body is always non-NULL */
 # if !BB_MMU
@@ -6907,6 +7267,7 @@ static void exec_builtin(char ***to_free
 #if BB_MMU
 	int rcode;
 	fflush_all();
+//?	close_saved_fds_and_FILE_fds();
 	rcode = x->b_function(argv);
 	fflush_all();
 	_exit(rcode);
@@ -7028,6 +7389,16 @@ static NOINLINE void pseudo_exec_argv(no
 		goto skip;
 #endif
 
+#if ENABLE_HUSH_FUNCTIONS
+	/* Check if the command matches any functions (this goes before bltins) */
+	{
+		const struct function *funcp = find_function(argv[0]);
+		if (funcp) {
+			exec_function(&nommu_save->argv_from_re_execing, funcp, argv);
+		}
+	}
+#endif
+
 	/* Check if the command matches any of the builtins.
 	 * Depending on context, this might be redundant.  But it's
 	 * easier to waste a few CPU cycles than it is to figure out
@@ -7044,15 +7415,6 @@ static NOINLINE void pseudo_exec_argv(no
 			exec_builtin(&nommu_save->argv_from_re_execing, x, argv);
 		}
 	}
-#if ENABLE_HUSH_FUNCTIONS
-	/* Check if the command matches any functions */
-	{
-		const struct function *funcp = find_function(argv[0]);
-		if (funcp) {
-			exec_function(&nommu_save->argv_from_re_execing, funcp, argv);
-		}
-	}
-#endif
 
 #if ENABLE_FEATURE_SH_STANDALONE
 	/* Check if the command matches any busybox applets */
@@ -7061,12 +7423,16 @@ static NOINLINE void pseudo_exec_argv(no
 		if (a >= 0) {
 # if BB_MMU /* see above why on NOMMU it is not allowed */
 			if (APPLET_IS_NOEXEC(a)) {
-				/* Do not leak open fds from opened script files etc */
-				close_all_FILE_list();
+				/* Do not leak open fds from opened script files etc.
+				 * Testcase: interactive "ls -l /proc/self/fd"
+				 * should not show tty fd open.
+				 */
+				close_saved_fds_and_FILE_fds();
+//FIXME: should also close saved redir fds
 				/* Without this, "rm -i FILE" can't be ^C'ed: */
 				switch_off_special_sigs(G.special_sig_mask);
 				debug_printf_exec("running applet '%s'\n", argv[0]);
-				run_applet_no_and_exit(a, argv[0], argv);
+				run_noexec_applet_and_exit(a, argv[0], argv);
 			}
 # endif
 			/* Re-exec ourselves */
@@ -7163,24 +7529,54 @@ static const char *get_cmdtext(struct pi
 	return pi->cmdtext;
 }
 
-static void insert_bg_job(struct pipe *pi)
+static void remove_job_from_table(struct pipe *pi)
+{
+	struct pipe *prev_pipe;
+
+	if (pi == G.job_list) {
+		G.job_list = pi->next;
+	} else {
+		prev_pipe = G.job_list;
+		while (prev_pipe->next != pi)
+			prev_pipe = prev_pipe->next;
+		prev_pipe->next = pi->next;
+	}
+	G.last_jobid = 0;
+	if (G.job_list)
+		G.last_jobid = G.job_list->jobid;
+}
+
+static void delete_finished_job(struct pipe *pi)
+{
+	remove_job_from_table(pi);
+	free_pipe(pi);
+}
+
+static void clean_up_last_dead_job(void)
+{
+	if (G.job_list && !G.job_list->alive_cmds)
+		delete_finished_job(G.job_list);
+}
+
+static void insert_job_into_table(struct pipe *pi)
 {
 	struct pipe *job, **jobp;
 	int i;
 
-	/* Linear search for the ID of the job to use */
-	pi->jobid = 1;
-	for (job = G.job_list; job; job = job->next)
-		if (job->jobid >= pi->jobid)
-			pi->jobid = job->jobid + 1;
+	clean_up_last_dead_job();
 
-	/* Add job to the list of running jobs */
+	/* Find the end of the list, and find next job ID to use */
+	i = 0;
 	jobp = &G.job_list;
-	while ((job = *jobp) != NULL)
+	while ((job = *jobp) != NULL) {
+		if (job->jobid > i)
+			i = job->jobid;
 		jobp = &job->next;
-	job = *jobp = xmalloc(sizeof(*job));
+	}
+	pi->jobid = i + 1;
 
-	*job = *pi; /* physical copy */
+	/* Create a new job struct at the end */
+	job = *jobp = xmemdup(pi, sizeof(*pi));
 	job->next = NULL;
 	job->cmds = xzalloc(sizeof(pi->cmds[0]) * pi->num_cmds);
 	/* Cannot copy entire pi->cmds[] vector! This causes double frees */
@@ -7194,31 +7590,6 @@ static void insert_bg_job(struct pipe *p
 		printf("[%u] %u %s\n", job->jobid, (unsigned)job->cmds[0].pid, job->cmdtext);
 	G.last_jobid = job->jobid;
 }
-
-static void remove_bg_job(struct pipe *pi)
-{
-	struct pipe *prev_pipe;
-
-	if (pi == G.job_list) {
-		G.job_list = pi->next;
-	} else {
-		prev_pipe = G.job_list;
-		while (prev_pipe->next != pi)
-			prev_pipe = prev_pipe->next;
-		prev_pipe->next = pi->next;
-	}
-	if (G.job_list)
-		G.last_jobid = G.job_list->jobid;
-	else
-		G.last_jobid = 0;
-}
-
-/* Remove a backgrounded job */
-static void delete_finished_bg_job(struct pipe *pi)
-{
-	remove_bg_job(pi);
-	free_pipe(pi);
-}
 #endif /* JOB */
 
 static int job_exited_or_stopped(struct pipe *pi)
@@ -7305,7 +7676,7 @@ static int process_wait_result(struct pi
 				if (G_interactive_fd) {
 #if ENABLE_HUSH_JOB
 					if (fg_pipe->alive_cmds != 0)
-						insert_bg_job(fg_pipe);
+						insert_job_into_table(fg_pipe);
 #endif
 					return rcode;
 				}
@@ -7334,16 +7705,31 @@ static int process_wait_result(struct pi
  found_pi_and_prognum:
 	if (dead) {
 		/* child exited */
-		pi->cmds[i].pid = 0;
-		pi->cmds[i].cmd_exitcode = WEXITSTATUS(status);
+		int rcode = WEXITSTATUS(status);
 		if (WIFSIGNALED(status))
-			pi->cmds[i].cmd_exitcode = 128 + WTERMSIG(status);
+			rcode = 128 + WTERMSIG(status);
+		pi->cmds[i].cmd_exitcode = rcode;
+		if (G.last_bg_pid == pi->cmds[i].pid)
+			G.last_bg_pid_exitcode = rcode;
+		pi->cmds[i].pid = 0;
 		pi->alive_cmds--;
 		if (!pi->alive_cmds) {
-			if (G_interactive_fd)
+			if (G_interactive_fd) {
 				printf(JOB_STATUS_FORMAT, pi->jobid,
 						"Done", pi->cmdtext);
-			delete_finished_bg_job(pi);
+				delete_finished_job(pi);
+			} else {
+/*
+ * bash deletes finished jobs from job table only in interactive mode,
+ * after "jobs" cmd, or if pid of a new process matches one of the old ones
+ * (see cleanup_dead_jobs(), delete_old_job(), J_NOTIFIED in bash source).
+ * Testcase script: "(exit 3) & sleep 1; wait %1; echo $?" prints 3 in bash.
+ * We only retain one "dead" job, if it's the single job on the list.
+ * This covers most of real-world scenarios where this is useful.
+ */
+				if (pi != G.job_list)
+					delete_finished_job(pi);
+			}
 		}
 	} else {
 		/* child stopped */
@@ -7500,14 +7886,14 @@ static int checkjobs_and_fg_shell(struct
 static int redirect_and_varexp_helper(char ***new_env_p,
 		struct variable **old_vars_p,
 		struct command *command,
-		int squirrel[3],
+		struct squirrel **sqp,
 		char **argv_expanded)
 {
 	/* setup_redirects acts on file descriptors, not FILEs.
 	 * This is perfect for work that comes after exec().
 	 * Is it really safe for inline use?  Experimentally,
 	 * things seem to work. */
-	int rcode = setup_redirects(command, squirrel);
+	int rcode = setup_redirects(command, sqp);
 	if (rcode == 0) {
 		char **new_env = expand_assignments(command->argv, command->assignment_cnt);
 		*new_env_p = new_env;
@@ -7527,8 +7913,7 @@ static NOINLINE int run_pipe(struct pipe
 	struct command *command;
 	char **argv_expanded;
 	char **argv;
-	/* it is not always needed, but we aim to smaller code */
-	int squirrel[] = { -1, -1, -1 };
+	struct squirrel *squirrel = NULL;
 	int rcode;
 
 	debug_printf_exec("run_pipe start: members:%d\n", pi->num_cmds);
@@ -7585,7 +7970,7 @@ static NOINLINE int run_pipe(struct pipe
 		/* { list } */
 		debug_printf("non-subshell group\n");
 		rcode = 1; /* exitcode if redir failed */
-		if (setup_redirects(command, squirrel) == 0) {
+		if (setup_redirects(command, &squirrel) == 0) {
 			debug_printf_exec(": run_list\n");
 			rcode = run_list(command->group) & 0xff;
 		}
@@ -7612,15 +7997,15 @@ static NOINLINE int run_pipe(struct pipe
 			/* Ensure redirects take effect (that is, create files).
 			 * Try "a=t >file" */
 #if 0 /* A few cases in testsuite fail with this code. FIXME */
-			rcode = redirect_and_varexp_helper(&new_env, /*old_vars:*/ NULL, command, squirrel, /*argv_expanded:*/ NULL);
+			rcode = redirect_and_varexp_helper(&new_env, /*old_vars:*/ NULL, command, &squirrel, /*argv_expanded:*/ NULL);
 			/* Set shell variables */
 			if (new_env) {
 				argv = new_env;
 				while (*argv) {
-					set_local_var(*argv, /*exp:*/ 0, /*lvl:*/ 0, /*ro:*/ 0);
-					/* Do we need to flag set_local_var() errors?
-					 * "assignment to readonly var" and "putenv error"
-					 */
+					if (set_local_var(*argv, /*flag:*/ 0)) {
+						/* assignment to readonly var / putenv error? */
+						rcode = 1;
+					}
 					argv++;
 				}
 			}
@@ -7634,7 +8019,7 @@ static NOINLINE int run_pipe(struct pipe
 
 #else /* Older, bigger, but more correct code */
 
-			rcode = setup_redirects(command, squirrel);
+			rcode = setup_redirects(command, &squirrel);
 			restore_redirects(squirrel);
 			/* Set shell variables */
 			if (G_x_mode)
@@ -7645,10 +8030,10 @@ static NOINLINE int run_pipe(struct pipe
 					fprintf(stderr, " %s", p);
 				debug_printf_exec("set shell var:'%s'->'%s'\n",
 						*argv, p);
-				set_local_var(p, /*exp:*/ 0, /*lvl:*/ 0, /*ro:*/ 0);
-				/* Do we need to flag set_local_var() errors?
-				 * "assignment to readonly var" and "putenv error"
-				 */
+				if (set_local_var(p, /*flag:*/ 0)) {
+					/* assignment to readonly var / putenv error? */
+					rcode = 1;
+				}
 				argv++;
 			}
 			if (G_x_mode)
@@ -7682,12 +8067,13 @@ static NOINLINE int run_pipe(struct pipe
 			return G.last_exitcode;
 		}
 
-		x = find_builtin(argv_expanded[0]);
 #if ENABLE_HUSH_FUNCTIONS
-		funcp = NULL;
-		if (!x)
-			funcp = find_function(argv_expanded[0]);
+		/* Check if argv[0] matches any functions (this goes before bltins) */
+		funcp = find_function(argv_expanded[0]);
 #endif
+		x = NULL;
+		if (!funcp)
+			x = find_builtin(argv_expanded[0]);
 		if (x || funcp) {
 			if (!funcp) {
 				if (x->b_function == builtin_exec && argv_expanded[1] == NULL) {
@@ -7697,7 +8083,7 @@ static NOINLINE int run_pipe(struct pipe
 					goto clean_up_and_ret1;
 				}
 			}
-			rcode = redirect_and_varexp_helper(&new_env, &old_vars, command, squirrel, argv_expanded);
+			rcode = redirect_and_varexp_helper(&new_env, &old_vars, command, &squirrel, argv_expanded);
 			if (rcode == 0) {
 				if (!funcp) {
 					debug_printf_exec(": builtin '%s' '%s'...\n",
@@ -7753,10 +8139,10 @@ static NOINLINE int run_pipe(struct pipe
 			return rcode;
 		}
 
-		if (ENABLE_FEATURE_SH_NOFORK) {
+		if (ENABLE_FEATURE_SH_NOFORK && NUM_APPLETS > 1) {
 			int n = find_applet_by_name(argv_expanded[0]);
 			if (n >= 0 && APPLET_IS_NOFORK(n)) {
-				rcode = redirect_and_varexp_helper(&new_env, &old_vars, command, squirrel, argv_expanded);
+				rcode = redirect_and_varexp_helper(&new_env, &old_vars, command, &squirrel, argv_expanded);
 				if (rcode == 0) {
 					debug_printf_exec(": run_nofork_applet '%s' '%s'...\n",
 						argv_expanded[0], argv_expanded[1]);
@@ -7989,6 +8375,7 @@ static int run_list(struct pipe *pi)
 	/* Go through list of pipes, (maybe) executing them. */
 	for (; pi; pi = IF_HUSH_LOOPS(rword == RES_DONE ? loop_top : ) pi->next) {
 		int r;
+		int sv_errexit_depth;
 
 		if (G.flag_SIGINT)
 			break;
@@ -7998,6 +8385,16 @@ static int run_list(struct pipe *pi)
 		IF_HAS_KEYWORDS(rword = pi->res_word;)
 		debug_printf_exec(": rword=%d cond_code=%d last_rword=%d\n",
 				rword, cond_code, last_rword);
+
+		sv_errexit_depth = G.errexit_depth;
+		if (
+#if ENABLE_HUSH_IF
+		    rword == RES_IF || rword == RES_ELIF ||
+#endif
+		    pi->followup != PIPE_SEQ
+		) {
+			G.errexit_depth++;
+		}
 #if ENABLE_HUSH_LOOPS
 		if ((rword == RES_WHILE || rword == RES_UNTIL || rword == RES_FOR)
 		 && loop_top == NULL /* avoid bumping G.depth_of_loop twice */
@@ -8075,7 +8472,7 @@ static int run_list(struct pipe *pi)
 			}
 			/* Insert next value from for_lcur */
 			/* note: *for_lcur already has quotes removed, $var expanded, etc */
-			set_local_var(xasprintf("%s=%s", pi->cmds[0].argv[0], *for_lcur++), /*exp:*/ 0, /*lvl:*/ 0, /*ro:*/ 0);
+			set_local_var(xasprintf("%s=%s", pi->cmds[0].argv[0], *for_lcur++), /*flag:*/ 0);
 			continue;
 		}
 		if (rword == RES_IN) {
@@ -8089,6 +8486,7 @@ static int run_list(struct pipe *pi)
 		if (rword == RES_CASE) {
 			debug_printf_exec("CASE cond_code:%d\n", cond_code);
 			case_word = expand_strvec_to_string(pi->cmds->argv);
+			unbackslash(case_word);
 			continue;
 		}
 		if (rword == RES_MATCH) {
@@ -8100,9 +8498,10 @@ static int run_list(struct pipe *pi)
 			/* all prev words didn't match, does this one match? */
 			argv = pi->cmds->argv;
 			while (*argv) {
-				char *pattern = expand_string_to_string(*argv, /*unbackslash:*/ 1);
+				char *pattern = expand_string_to_string(*argv, /*unbackslash:*/ 0);
 				/* TODO: which FNM_xxx flags to use? */
 				cond_code = (fnmatch(pattern, case_word, /*flags:*/ 0) != 0);
+				debug_printf_exec("fnmatch(pattern:'%s',str:'%s'):%d\n", pattern, case_word, cond_code);
 				free(pattern);
 				if (cond_code == 0) { /* match! we will execute this branch */
 					free(case_word);
@@ -8183,10 +8582,11 @@ static int run_list(struct pipe *pi)
 			 * I'm NOT treating inner &'s as jobs */
 #if ENABLE_HUSH_JOB
 			if (G.run_list_level == 1)
-				insert_bg_job(pi);
+				insert_job_into_table(pi);
 #endif
 			/* Last command's pid goes to $! */
 			G.last_bg_pid = pi->cmds[pi->num_cmds - 1].pid;
+			G.last_bg_pid_exitcode = 0;
 			debug_printf_exec(": cmd&: exitcode EXIT_SUCCESS\n");
 /* Check pi->pi_inverted? "! sleep 1 & echo $?": bash says 1. dash and ash say 0 */
 			rcode = EXIT_SUCCESS;
@@ -8208,6 +8608,14 @@ static int run_list(struct pipe *pi)
 			check_and_run_traps();
 		}
 
+		/* Handle "set -e" */
+		if (rcode != 0 && G.o_opt[OPT_O_ERREXIT]) {
+			debug_printf_exec("ERREXIT:1 errexit_depth:%d\n", G.errexit_depth);
+			if (G.errexit_depth == 0)
+				hush_exit(rcode);
+		}
+		G.errexit_depth = sv_errexit_depth;
+
 		/* Analyze how result affects subsequent commands */
 #if ENABLE_HUSH_IF
 		if (rword == RES_IF || rword == RES_ELIF)
@@ -8289,6 +8697,10 @@ static void install_sighandlers(unsigned
 		 */
 		if (sig == SIGCHLD)
 			continue;
+		/* bash re-enables SIGHUP which is SIG_IGNed on entry.
+		 * Try: "trap '' HUP; bash; echo RET" and type "kill -HUP $$"
+		 */
+		//if (sig == SIGHUP) continue; - TODO?
 		if (old_handler == SIG_IGN) {
 			/* oops... restore back to IGN, and record this fact */
 			install_sighandler(sig, old_handler);
@@ -8387,6 +8799,9 @@ static int set_mode(int state, char mode
 			G.o_opt[idx] = state;
 			break;
 		}
+	case 'e':
+		G.o_opt[OPT_O_ERREXIT] = state;
+		break;
 	default:
 		return EXIT_FAILURE;
 	}
@@ -8446,7 +8861,7 @@ int hush_main(int argc, char **argv)
 	putenv(shell_ver->varstr);
 
 	/* Export PWD */
-	set_pwd_var(/*exp:*/ 1);
+	set_pwd_var(SETFLAG_EXPORT);
 
 #if BASH_HOSTNAME_VAR
 	/* Set (but not export) HOSTNAME unless already set */
@@ -8513,7 +8928,7 @@ int hush_main(int argc, char **argv)
 	flags = (argv[0] && argv[0][0] == '-') ? OPT_login : 0;
 	builtin_argc = 0;
 	while (1) {
-		opt = getopt(argc, argv, "+c:xinsl"
+		opt = getopt(argc, argv, "+c:exinsl"
 #if !BB_MMU
 				"<:$:R:V:"
 # if ENABLE_HUSH_FUNCTIONS
@@ -8616,7 +9031,7 @@ int hush_main(int argc, char **argv)
 		}
 		case 'R':
 		case 'V':
-			set_local_var(xstrdup(optarg), /*exp:*/ 0, /*lvl:*/ 0, /*ro:*/ opt == 'R');
+			set_local_var(xstrdup(optarg), opt == 'R' ? SETFLAG_MAKE_RO : 0);
 			break;
 # if ENABLE_HUSH_FUNCTIONS
 		case 'F': {
@@ -8631,6 +9046,7 @@ int hush_main(int argc, char **argv)
 #endif
 		case 'n':
 		case 'x':
+		case 'e':
 			if (set_mode(1, opt, NULL) == 0) /* no error */
 				break;
 		default:
@@ -8717,7 +9133,7 @@ int hush_main(int argc, char **argv)
 			G_saved_tty_pgrp = 0;
 
 		/* try to dup stdin to high fd#, >= 255 */
-		G_interactive_fd = fcntl(STDIN_FILENO, F_DUPFD, 255);
+		G_interactive_fd = fcntl_F_DUPFD(STDIN_FILENO, 254);
 		if (G_interactive_fd < 0) {
 			/* try to dup to any fd */
 			G_interactive_fd = dup(STDIN_FILENO);
@@ -8790,7 +9206,7 @@ int hush_main(int argc, char **argv)
 #elif ENABLE_HUSH_INTERACTIVE
 	/* No job control compiled in, only prompt/line editing */
 	if (isatty(STDIN_FILENO) && isatty(STDOUT_FILENO)) {
-		G_interactive_fd = fcntl(STDIN_FILENO, F_DUPFD, 255);
+		G_interactive_fd = fcntl_F_DUPFD(STDIN_FILENO, 254);
 		if (G_interactive_fd < 0) {
 			/* try to dup to any fd */
 			G_interactive_fd = dup(STDIN_FILENO);
@@ -8829,16 +9245,6 @@ int hush_main(int argc, char **argv)
 }
 
 
-#if ENABLE_MSH
-int msh_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
-int msh_main(int argc, char **argv)
-{
-	bb_error_msg("msh is deprecated, please use hush instead");
-	return hush_main(argc, argv);
-}
-#endif
-
-
 /*
  * Built-ins
  */
@@ -8928,7 +9334,7 @@ static int FAST_FUNC builtin_cd(char **a
 	 * Note: do not enforce exporting. If PWD was unset or unexported,
 	 * set it again, but do not export. bash does the same.
 	 */
-	set_pwd_var(/*exp:*/ 0);
+	set_pwd_var(/*flag:*/ 0);
 	return EXIT_SUCCESS;
 }
 
@@ -8967,6 +9373,14 @@ static int FAST_FUNC builtin_exec(char *
 	if (G_saved_tty_pgrp && getpid() == G.root_pid)
 		tcsetpgrp(G_interactive_fd, G_saved_tty_pgrp);
 
+	/* Saved-redirect fds, script fds and G_interactive_fd are still
+	 * open here. However, they are all CLOEXEC, and execv below
+	 * closes them. Try interactive "exec ls -l /proc/self/fd",
+	 * it should show no extra open fds in the "ls" process.
+	 * If we'd try to run builtins/NOEXECs, this would need improving.
+	 */
+	//close_saved_fds_and_FILE_fds();
+
 	/* TODO: if exec fails, bash does NOT exit! We do.
 	 * We'll need to undo trap cleanup (it's inside execvp_or_die)
 	 * and tcsetpgrp, and this is inherently racy.
@@ -9068,13 +9482,20 @@ static int FAST_FUNC builtin_read(char *
 	char *opt_p = NULL;
 	char *opt_t = NULL;
 	char *opt_u = NULL;
+	char *opt_d = NULL; /* optimized out if !BASH */
 	const char *ifs;
 	int read_flags;
 
 	/* "!": do not abort on errors.
 	 * Option string must start with "sr" to match BUILTIN_READ_xxx
 	 */
-	read_flags = getopt32(argv, "!srn:p:t:u:", &opt_n, &opt_p, &opt_t, &opt_u);
+	read_flags = getopt32(argv,
+#if BASH_READ_D
+		"!srn:p:t:u:d:", &opt_n, &opt_p, &opt_t, &opt_u, &opt_d
+#else
+		"!srn:p:t:u:", &opt_n, &opt_p, &opt_t, &opt_u
+#endif
+	);
 	if (read_flags == (uint32_t)-1)
 		return EXIT_FAILURE;
 	argv += optind;
@@ -9088,7 +9509,8 @@ static int FAST_FUNC builtin_read(char *
 		opt_n,
 		opt_p,
 		opt_t,
-		opt_u
+		opt_u,
+		opt_d
 	);
 
 	if ((uintptr_t)r == 1 && errno == EINTR) {
@@ -9166,12 +9588,8 @@ static void print_escaped(const char *s)
 }
 #endif
 
-#if ENABLE_HUSH_EXPORT || ENABLE_HUSH_LOCAL
-# if !ENABLE_HUSH_LOCAL
-#define helper_export_local(argv, exp, lvl) \
-	helper_export_local(argv, exp)
-# endif
-static void helper_export_local(char **argv, int exp, int lvl)
+#if ENABLE_HUSH_EXPORT || ENABLE_HUSH_LOCAL || ENABLE_HUSH_READONLY
+static int helper_export_local(char **argv, unsigned flags)
 {
 	do {
 		char *name = *argv;
@@ -9185,7 +9603,7 @@ static void helper_export_local(char **a
 			vpp = get_ptr_to_local_var(name, name_end - name);
 			var = vpp ? *vpp : NULL;
 
-			if (exp == -1) { /* unexporting? */
+			if (flags & SETFLAG_UNEXPORT) {
 				/* export -n NAME (without =VALUE) */
 				if (var) {
 					var->flg_export = 0;
@@ -9194,7 +9612,7 @@ static void helper_export_local(char **a
 				} /* else: export -n NOT_EXISTING_VAR: no-op */
 				continue;
 			}
-			if (exp == 1) { /* exporting? */
+			if (flags & SETFLAG_EXPORT) {
 				/* export NAME (without =VALUE) */
 				if (var) {
 					var->flg_export = 1;
@@ -9203,28 +9621,45 @@ static void helper_export_local(char **a
 					continue;
 				}
 			}
+			if (flags & SETFLAG_MAKE_RO) {
+				/* readonly NAME (without =VALUE) */
+				if (var) {
+					var->flg_read_only = 1;
+					continue;
+				}
+			}
 # if ENABLE_HUSH_LOCAL
-			if (exp == 0 /* local? */
-			 && var && var->func_nest_level == lvl
-			) {
-				/* "local x=abc; ...; local x" - ignore second local decl */
-				continue;
+			/* Is this "local" bltin? */
+			if (!(flags & (SETFLAG_EXPORT|SETFLAG_UNEXPORT|SETFLAG_MAKE_RO))) {
+				unsigned lvl = flags >> SETFLAG_LOCAL_SHIFT;
+				if (var && var->func_nest_level == lvl) {
+					/* "local x=abc; ...; local x" - ignore second local decl */
+					continue;
+				}
 			}
 # endif
 			/* Exporting non-existing variable.
 			 * bash does not put it in environment,
 			 * but remembers that it is exported,
 			 * and does put it in env when it is set later.
-			 * We just set it to "" and export. */
+			 * We just set it to "" and export.
+			 */
 			/* Or, it's "local NAME" (without =VALUE).
-			 * bash sets the value to "". */
+			 * bash sets the value to "".
+			 */
+			/* Or, it's "readonly NAME" (without =VALUE).
+			 * bash remembers NAME and disallows its creation
+			 * in the future.
+			 */
 			name = xasprintf("%s=", name);
 		} else {
 			/* (Un)exporting/making local NAME=VALUE */
 			name = xstrdup(name);
 		}
-		set_local_var(name, /*exp:*/ exp, /*lvl:*/ lvl, /*ro:*/ 0);
+		if (set_local_var(name, flags))
+			return EXIT_FAILURE;
 	} while (*++argv);
+	return EXIT_SUCCESS;
 }
 #endif
 
@@ -9270,9 +9705,7 @@ static int FAST_FUNC builtin_export(char
 		return EXIT_SUCCESS;
 	}
 
-	helper_export_local(argv, (opt_unexport ? -1 : 1), 0);
-
-	return EXIT_SUCCESS;
+	return helper_export_local(argv, opt_unexport ? SETFLAG_UNEXPORT : SETFLAG_EXPORT);
 }
 #endif
 
@@ -9283,8 +9716,29 @@ static int FAST_FUNC builtin_local(char
 		bb_error_msg("%s: not in a function", argv[0]);
 		return EXIT_FAILURE; /* bash compat */
 	}
-	helper_export_local(argv, 0, G.func_nest_level);
-	return EXIT_SUCCESS;
+	argv++;
+	return helper_export_local(argv, G.func_nest_level << SETFLAG_LOCAL_SHIFT);
+}
+#endif
+
+#if ENABLE_HUSH_READONLY
+static int FAST_FUNC builtin_readonly(char **argv)
+{
+	argv++;
+	if (*argv == NULL) {
+		/* bash: readonly [-p]: list all readonly VARs
+		 * (-p has no effect in bash)
+		 */
+		struct variable *e;
+		for (e = G.top_var; e; e = e->next) {
+			if (e->flg_read_only) {
+//TODO: quote value: readonly VAR='VAL'
+				printf("readonly %s\n", e->varstr);
+			}
+		}
+		return EXIT_SUCCESS;
+	}
+	return helper_export_local(argv, SETFLAG_MAKE_RO);
 }
 #endif
 
@@ -9414,7 +9868,18 @@ static int FAST_FUNC builtin_shift(char
 	int n = 1;
 	argv = skip_dash_dash(argv);
 	if (argv[0]) {
-		n = atoi(argv[0]);
+		n = bb_strtou(argv[0], NULL, 10);
+		if (errno || n < 0) {
+			/* shared string with ash.c */
+			bb_error_msg("Illegal number: %s", argv[0]);
+			/*
+			 * ash aborts in this case.
+			 * bash prints error message and set $? to 1.
+			 * Interestingly, for "shift 99999" bash does not
+			 * print error message, but does set $? to 1
+			 * (and does no shifting at all).
+			 */
+		}
 	}
 	if (n >= 0 && n < G.global_argc) {
 		if (G_global_args_malloced) {
@@ -9430,6 +9895,131 @@ static int FAST_FUNC builtin_shift(char
 	return EXIT_FAILURE;
 }
 
+#if ENABLE_HUSH_GETOPTS
+static int FAST_FUNC builtin_getopts(char **argv)
+{
+/* http://pubs.opengroup.org/onlinepubs/9699919799/utilities/getopts.html
+
+TODO:
+If a required argument is not found, and getopts is not silent,
+a question mark (?) is placed in VAR, OPTARG is unset, and a
+diagnostic message is printed.  If getopts is silent, then a
+colon (:) is placed in VAR and OPTARG is set to the option
+character found.
+
+Test that VAR is a valid variable name?
+
+"Whenever the shell is invoked, OPTIND shall be initialized to 1"
+*/
+	char cbuf[2];
+	const char *cp, *optstring, *var;
+	int c, n, exitcode, my_opterr;
+	unsigned count;
+
+	optstring = *++argv;
+	if (!optstring || !(var = *++argv)) {
+		bb_error_msg("usage: getopts OPTSTRING VAR [ARGS]");
+		return EXIT_FAILURE;
+	}
+
+	if (argv[1])
+		argv[0] = G.global_argv[0]; /* for error messages in getopt() */
+	else
+		argv = G.global_argv;
+	cbuf[1] = '\0';
+
+	my_opterr = 0;
+	if (optstring[0] != ':') {
+		cp = get_local_var_value("OPTERR");
+		/* 0 if "OPTERR=0", 1 otherwise */
+		my_opterr = (!cp || NOT_LONE_CHAR(cp, '0'));
+	}
+
+	/* getopts stops on first non-option. Add "+" to force that */
+	/*if (optstring[0] != '+')*/ {
+		char *s = alloca(strlen(optstring) + 2);
+		sprintf(s, "+%s", optstring);
+		optstring = s;
+	}
+
+	/* Naively, now we should just
+	 *	cp = get_local_var_value("OPTIND");
+	 *	optind = cp ? atoi(cp) : 0;
+	 *	optarg = NULL;
+	 *	opterr = my_opterr;
+	 *	c = getopt(string_array_len(argv), argv, optstring);
+	 * and be done? Not so fast...
+	 * Unlike normal getopt() usage in C programs, here
+	 * each successive call will (usually) have the same argv[] CONTENTS,
+	 * but not the ADDRESSES. Worse yet, it's possible that between
+	 * invocations of "getopts", there will be calls to shell builtins
+	 * which use getopt() internally. Example:
+	 *	while getopts "abc" RES -a -bc -abc de; do
+	 *		unset -ff func
+	 *	done
+	 * This would not work correctly: getopt() call inside "unset"
+	 * modifies internal libc state which is tracking position in
+	 * multi-option strings ("-abc"). At best, it can skip options
+	 * or return the same option infinitely. With glibc implementation
+	 * of getopt(), it would use outright invalid pointers and return
+	 * garbage even _without_ "unset" mangling internal state.
+	 *
+	 * We resort to resetting getopt() state and calling it N times,
+	 * until we get Nth result (or failure).
+	 * (N == G.getopt_count is reset to 0 whenever OPTIND is [un]set).
+	 */
+	GETOPT_RESET();
+	count = 0;
+	n = string_array_len(argv);
+	do {
+		optarg = NULL;
+		opterr = (count < G.getopt_count) ? 0 : my_opterr;
+		c = getopt(n, argv, optstring);
+		if (c < 0)
+			break;
+		count++;
+	} while (count <= G.getopt_count);
+
+	/* Set OPTIND. Prevent resetting of the magic counter! */
+	set_local_var_from_halves("OPTIND", utoa(optind));
+	G.getopt_count = count; /* "next time, give me N+1'th result" */
+	GETOPT_RESET(); /* just in case */
+
+	/* Set OPTARG */
+	/* Always set or unset, never left as-is, even on exit/error:
+	 * "If no option was found, or if the option that was found
+	 * does not have an option-argument, OPTARG shall be unset."
+	 */
+	cp = optarg;
+	if (c == '?') {
+		/* If ":optstring" and unknown option is seen,
+		 * it is stored to OPTARG.
+		 */
+		if (optstring[1] == ':') {
+			cbuf[0] = optopt;
+			cp = cbuf;
+		}
+	}
+	if (cp)
+		set_local_var_from_halves("OPTARG", cp);
+	else
+		unset_local_var("OPTARG");
+
+	/* Convert -1 to "?" */
+	exitcode = EXIT_SUCCESS;
+	if (c < 0) { /* -1: end of options */
+		exitcode = EXIT_FAILURE;
+		c = '?';
+	}
+
+	/* Set VAR */
+	cbuf[0] = c;
+	set_local_var_from_halves(var, cbuf);
+
+	return exitcode;
+}
+#endif
+
 static int FAST_FUNC builtin_source(char **argv)
 {
 	char *arg_path, *filename;
@@ -9524,10 +10114,10 @@ static int FAST_FUNC builtin_trap(char *
 			sighandler_t handler;
 
 			sig = get_signum(*argv++);
-			if (sig < 0 || sig >= NSIG) {
+			if (sig < 0) {
 				ret = EXIT_FAILURE;
 				/* Mimic bash message exactly */
-				bb_perror_msg("trap: %s: invalid signal specification", argv[-1]);
+				bb_error_msg("trap: %s: invalid signal specification", argv[-1]);
 				continue;
 			}
 
@@ -9620,6 +10210,9 @@ static int FAST_FUNC builtin_jobs(char *
 
 		printf(JOB_STATUS_FORMAT, job->jobid, status_string, job->cmdtext);
 	}
+
+	clean_up_last_dead_job();
+
 	return EXIT_SUCCESS;
 }
 
@@ -9664,14 +10257,14 @@ static int FAST_FUNC builtin_fg_bg(char
 	i = kill(- pi->pgrp, SIGCONT);
 	if (i < 0) {
 		if (errno == ESRCH) {
-			delete_finished_bg_job(pi);
+			delete_finished_job(pi);
 			return EXIT_SUCCESS;
 		}
 		bb_perror_msg("kill (SIGCONT)");
 	}
 
 	if (argv[0][0] == 'f') {
-		remove_bg_job(pi);
+		remove_job_from_table(pi); /* FG job shouldn't be in job table */
 		return checkjobs_and_fg_shell(pi);
 	}
 	return EXIT_SUCCESS;
@@ -9864,8 +10457,12 @@ static int FAST_FUNC builtin_wait(char *
 				wait_pipe = parse_jobspec(*argv);
 				if (wait_pipe) {
 					ret = job_exited_or_stopped(wait_pipe);
-					if (ret < 0)
+					if (ret < 0) {
 						ret = wait_for_child_or_signal(wait_pipe, 0);
+					} else {
+						/* waiting on "last dead job" removes it */
+						clean_up_last_dead_job();
+					}
 				}
 				/* else: parse_jobspec() already emitted error msg */
 				continue;
@@ -9881,14 +10478,15 @@ static int FAST_FUNC builtin_wait(char *
 		ret = waitpid(pid, &status, WNOHANG);
 		if (ret < 0) {
 			/* No */
+			ret = 127;
 			if (errno == ECHILD) {
-				if (G.last_bg_pid > 0 && pid == G.last_bg_pid) {
+				if (pid == G.last_bg_pid) {
 					/* "wait $!" but last bg task has already exited. Try:
 					 * (sleep 1; exit 3) & sleep 2; echo $?; wait $!; echo $?
 					 * In bash it prints exitcode 0, then 3.
 					 * In dash, it is 127.
 					 */
-					/* ret = G.last_bg_pid_exitstatus - FIXME */
+					ret = G.last_bg_pid_exitcode;
 				} else {
 					/* Example: "wait 1". mimic bash message */
 					bb_error_msg("wait: pid %d is not a child of this shell", (int)pid);
@@ -9897,7 +10495,6 @@ static int FAST_FUNC builtin_wait(char *
 				/* ??? */
 				bb_perror_msg("wait %s", *argv);
 			}
-			ret = 127;
 			continue; /* bash checks all argv[] */
 		}
 		if (ret == 0) {
@@ -9982,6 +10579,41 @@ static int FAST_FUNC builtin_return(char
 }
 #endif
 
+#if ENABLE_HUSH_TIMES
+static int FAST_FUNC builtin_times(char **argv UNUSED_PARAM)
+{
+	static const uint8_t times_tbl[] ALIGN1 = {
+		' ',  offsetof(struct tms, tms_utime),
+		'\n', offsetof(struct tms, tms_stime),
+		' ',  offsetof(struct tms, tms_cutime),
+		'\n', offsetof(struct tms, tms_cstime),
+		0
+	};
+	const uint8_t *p;
+	unsigned clk_tck;
+	struct tms buf;
+
+	clk_tck = bb_clk_tck();
+
+	times(&buf);
+	p = times_tbl;
+	do {
+		unsigned sec, frac;
+		unsigned long t;
+		t = *(clock_t *)(((char *) &buf) + p[1]);
+		sec = t / clk_tck;
+		frac = t % clk_tck;
+		printf("%um%u.%03us%c",
+			sec / 60, sec % 60,
+			(frac * 1000) / clk_tck,
+			p[0]);
+		p += 2;
+	} while (*p);
+
+	return EXIT_SUCCESS;
+}
+#endif
+
 #if ENABLE_HUSH_MEMLEAK
 static int FAST_FUNC builtin_memleak(char **argv UNUSED_PARAM)
 {
diff -urpN busybox-1.27.2/shell/hush_test/hush-bugs/and_or_and_backgrounding.right busybox-1.28.0/shell/hush_test/hush-bugs/and_or_and_backgrounding.right
--- busybox-1.27.2/shell/hush_test/hush-bugs/and_or_and_backgrounding.right	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-bugs/and_or_and_backgrounding.right	1970-01-01 01:00:00.000000000 +0100
@@ -1,4 +0,0 @@
-First
-Second
-Third
-Done
diff -urpN busybox-1.27.2/shell/hush_test/hush-bugs/and_or_and_backgrounding.tests busybox-1.28.0/shell/hush_test/hush-bugs/and_or_and_backgrounding.tests
--- busybox-1.27.2/shell/hush_test/hush-bugs/and_or_and_backgrounding.tests	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-bugs/and_or_and_backgrounding.tests	1970-01-01 01:00:00.000000000 +0100
@@ -1,31 +0,0 @@
-# UNFIXED BUG: hush thinks that ; && || & have the same precedence.
-# According to this doc, && || have higher precedence than ; &.
-# See example below.
-# Precedence of ; is not a problem in practice. Precedence of & is.
-#
-#http://www.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html
-#
-#2.9.3 Lists
-#
-#An AND-OR list is a sequence of one or more pipelines separated by
-#the operators "&&" and "||" .
-#
-#A list is a sequence of one or more AND-OR lists separated by the operators
-#';' and '&' and optionally terminated by ';', '&', or <newline>.
-#
-#The operators "&&" and "||" shall have equal precedence and shall be
-#evaluated with left associativity. For example, both of the following
-#commands write solely bar to standard output:
-#
-#    false && echo foo || echo bar
-#    true || echo foo && echo bar
-#
-#A ';' or <newline> terminator shall cause the preceding AND-OR list
-#to be executed sequentially; an '&' shall cause asynchronous execution
-#of the preceding AND-OR list.
-
-echo First && sleep 0.2 && echo Third &
-sleep 0.1
-echo Second
-wait
-echo Done
diff -urpN busybox-1.27.2/shell/hush_test/hush-getopts/getopt_nested.right busybox-1.28.0/shell/hush_test/hush-getopts/getopt_nested.right
--- busybox-1.27.2/shell/hush_test/hush-getopts/getopt_nested.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-getopts/getopt_nested.right	2017-09-07 14:42:40.000000000 +0200
@@ -0,0 +1,14 @@
+var:a
+var:b
+var:c
+var:a
+var:b
+var:c
+./getopt_nested.tests: invalid option -- d
+var:?
+./getopt_nested.tests: invalid option -- e
+var:?
+./getopt_nested.tests: invalid option -- f
+var:?
+var:a
+End: var:? OPTIND:6
diff -urpN busybox-1.27.2/shell/hush_test/hush-getopts/getopt_nested.tests busybox-1.28.0/shell/hush_test/hush-getopts/getopt_nested.tests
--- busybox-1.27.2/shell/hush_test/hush-getopts/getopt_nested.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-getopts/getopt_nested.tests	2017-09-07 14:42:40.000000000 +0200
@@ -0,0 +1,21 @@
+# Test that there is no interference of getopt()
+# in getopts and unset.
+# It's unclear what "correct" OPTIND values should be
+# for "b" and "c" results from "-bc": 2? 3?
+# What we focus on here is that all options are reported
+# correct number of times and in correct sequence.
+
+(
+
+loop=99
+while getopts "abc" var -a -bc -abc -def -a; do
+    echo "var:$var" #OPTIND:$OPTIND
+    # this may use getopt():
+    unset -ff func
+    test $((--loop)) = 0 && break  # BUG if this triggers
+done
+echo "End: var:$var OPTIND:$OPTIND"
+
+) 2>&1 \
+| sed   -e 's/ unrecognized option: / invalid option -- /' \
+        -e 's/ illegal option -- / invalid option -- /' \
diff -urpN busybox-1.27.2/shell/hush_test/hush-getopts/getopt_optarg.right busybox-1.28.0/shell/hush_test/hush-getopts/getopt_optarg.right
--- busybox-1.27.2/shell/hush_test/hush-getopts/getopt_optarg.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-getopts/getopt_optarg.right	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,18 @@
+*** no OPTIND, optstring:'w:et' args:-q -w e -r -t -y
+./getopt_optarg.tests: invalid option -- q
+var:'?' OPTIND:2 OPTARG:''
+var:'w' OPTIND:4 OPTARG:'e'
+./getopt_optarg.tests: invalid option -- r
+var:'?' OPTIND:5 OPTARG:''
+var:'t' OPTIND:6 OPTARG:''
+./getopt_optarg.tests: invalid option -- y
+var:'?' OPTIND:7 OPTARG:''
+exited: var:'?' OPTIND:7 OPTARG:''
+*** OPTIND=0, optstring:'w:et' args:-w 1 -w2 -w -e -e -t -t
+var:'w' OPTIND:3 OPTARG:'1'
+var:'w' OPTIND:4 OPTARG:'2'
+var:'w' OPTIND:6 OPTARG:'-e'
+var:'e' OPTIND:7 OPTARG:''
+var:'t' OPTIND:8 OPTARG:''
+var:'t' OPTIND:9 OPTARG:''
+exited: var:'?' OPTIND:9 OPTARG:''
diff -urpN busybox-1.27.2/shell/hush_test/hush-getopts/getopt_optarg.tests busybox-1.28.0/shell/hush_test/hush-getopts/getopt_optarg.tests
--- busybox-1.27.2/shell/hush_test/hush-getopts/getopt_optarg.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-getopts/getopt_optarg.tests	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,24 @@
+(
+
+set -- -q -w e -r -t -y
+echo "*** no OPTIND, optstring:'w:et' args:$*"
+var=QWERTY
+OPTARG=ASDFGH
+while getopts "w:et" var; do
+	echo "var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+	OPTARG=ASDFGH
+done
+echo "exited: var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+
+set -- -w 1 -w2 -w -e -e -t -t
+echo "*** OPTIND=0, optstring:'w:et' args:$*"
+OPTIND=0
+while getopts "w:et" var; do
+	echo "var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+	OPTARG=ASDFGH
+done
+echo "exited: var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+
+) 2>&1 \
+| sed	-e 's/ unrecognized option: / invalid option -- /' \
+	-e 's/ illegal option -- / invalid option -- /' \
diff -urpN busybox-1.27.2/shell/hush_test/hush-getopts/getopt_positional.right busybox-1.28.0/shell/hush_test/hush-getopts/getopt_positional.right
--- busybox-1.27.2/shell/hush_test/hush-getopts/getopt_positional.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-getopts/getopt_positional.right	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,6 @@
+*** no OPTIND, optstring:'we' args:-q -w -e r -t -y
+./getopt_positional.tests: invalid option -- q
+var:'?' OPTIND:2
+var:'w' OPTIND:3
+var:'e' OPTIND:4
+exited: var:'?' OPTIND:4
diff -urpN busybox-1.27.2/shell/hush_test/hush-getopts/getopt_positional.tests busybox-1.28.0/shell/hush_test/hush-getopts/getopt_positional.tests
--- busybox-1.27.2/shell/hush_test/hush-getopts/getopt_positional.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-getopts/getopt_positional.tests	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,13 @@
+(
+
+set -- -q -w -e r -t -y
+echo "*** no OPTIND, optstring:'we' args:$*"
+var=QWERTY
+while getopts "we" var; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+echo "exited: var:'$var' OPTIND:$OPTIND"
+
+) 2>&1 \
+| sed	-e 's/ unrecognized option: / invalid option -- /' \
+	-e 's/ illegal option -- / invalid option -- /' \
diff -urpN busybox-1.27.2/shell/hush_test/hush-getopts/getopt_silent.right busybox-1.28.0/shell/hush_test/hush-getopts/getopt_silent.right
--- busybox-1.27.2/shell/hush_test/hush-getopts/getopt_silent.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-getopts/getopt_silent.right	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,6 @@
+*** optstring:':ac' args:-a -b -c
+1 rc:0 var:'a' OPTIND:2 OPTARG:''
+2 rc:0 var:'?' OPTIND:3 OPTARG:'b'
+3 rc:0 var:'c' OPTIND:4 OPTARG:''
+4 rc:1 var:'?' OPTIND:4 OPTARG:''
+5 rc:1 var:'?' OPTIND:4 OPTARG:''
diff -urpN busybox-1.27.2/shell/hush_test/hush-getopts/getopt_silent.tests busybox-1.28.0/shell/hush_test/hush-getopts/getopt_silent.tests
--- busybox-1.27.2/shell/hush_test/hush-getopts/getopt_silent.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-getopts/getopt_silent.tests	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,29 @@
+# Open Group Base Specifications Issue 7:
+# """
+# If an unknown option is met, VAR shall be set to "?". In this case,
+# if the first character in optstring is ":", OPTARG shall be set
+# to the option character found, but no output shall be written
+# to standard error; otherwise, the shell variable OPTARG shall be
+# unset and a diagnostic message shall be written to standard error."
+# ...
+# If an option-argument is missing:
+# If the first character of optstring is ":", VAR shall be set to ":"
+# and OPTARG shall be set to the option character found.
+# """
+
+(
+
+echo "*** optstring:':ac' args:-a -b -c"
+getopts ":ac" var -a -b -c; echo "1 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+getopts ":ac" var -a -b -c; echo "2 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+getopts ":ac" var -a -b -c; echo "3 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+getopts ":ac" var -a -b -c; echo "4 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+# Previous line should result in "rc:1", which is normally treated
+# in getopts loops as exit condition.
+# Nevertheless, let's verify that calling it yet another time doesn't do
+# anything weird:
+getopts ":ac" var -a -b -c; echo "5 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+
+) 2>&1 \
+| sed	-e 's/ unrecognized option: / invalid option -- /' \
+	-e 's/ illegal option -- / invalid option -- /' \
diff -urpN busybox-1.27.2/shell/hush_test/hush-getopts/getopt_simple.right busybox-1.28.0/shell/hush_test/hush-getopts/getopt_simple.right
--- busybox-1.27.2/shell/hush_test/hush-getopts/getopt_simple.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-getopts/getopt_simple.right	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,34 @@
+*** no OPTIND, optstring:'ab' args:-a -b c
+var:'a' OPTIND:2
+var:'b' OPTIND:3
+exited: rc:0 var:'?' OPTIND:3
+*** OPTIND=1, optstring:'ab' args:-a -b c
+var:'a' OPTIND:2
+var:'b' OPTIND:3
+exited: rc:0 var:'?' OPTIND:3
+*** OPTIND=0, optstring:'ab' args:-a -b c
+var:'a' OPTIND:2
+var:'b' OPTIND:3
+exited: rc:0 var:'?' OPTIND:3
+*** unset OPTIND, optstring:'ab' args:-a -b c
+var:'a' OPTIND:2
+var:'b' OPTIND:3
+exited: rc:0 var:'?' OPTIND:3
+*** optstring:'ab' args:-a -b c
+1 rc:0 var:'a' OPTIND:2
+2 rc:0 var:'b' OPTIND:3
+3 rc:1 var:'?' OPTIND:3
+*** unset OPTIND, optstring:'ab' args:-a c -c -b d
+var:'a' OPTIND:2
+exited: rc:0 var:'?' OPTIND:2
+*** unset OPTIND, optstring:'ab' args:-a -c -b d
+var:'a' OPTIND:2
+./getopt_simple.tests: invalid option -- c
+var:'?' OPTIND:3
+var:'b' OPTIND:4
+exited: rc:0 var:'?' OPTIND:4
+*** unset OPTIND, OPTERR=0, optstring:'ab' args:-a -c -b d
+var:'a' OPTIND:2
+var:'?' OPTIND:3
+var:'b' OPTIND:4
+exited: rc:0 var:'?' OPTIND:4
diff -urpN busybox-1.27.2/shell/hush_test/hush-getopts/getopt_simple.tests busybox-1.28.0/shell/hush_test/hush-getopts/getopt_simple.tests
--- busybox-1.27.2/shell/hush_test/hush-getopts/getopt_simple.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-getopts/getopt_simple.tests	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,81 @@
+# Simple usage cases for getopts.
+#
+# OPTIND is either not touched at all (first loop with getopts,
+# relying on shell startup init), or getopts state is reset
+# before new loop with "unset OPTIND", "OPTIND=1" or "OPTIND=0".
+#
+# Each option is a separate argument (no "-abc"). This conceptually
+# needs only $OPTIND to hold getopts state.
+#
+# We check that loop does not stop on unknown option (sets "?"),
+# stops on _first_ non-option argument.
+
+(
+
+echo "*** no OPTIND, optstring:'ab' args:-a -b c"
+var=QWERTY
+while getopts "ab" var -a -b c; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+# unfortunately, "rc:0" is shown since while's overall exitcode is "success"
+echo "exited: rc:$? var:'$var' OPTIND:$OPTIND"
+
+# Resetting behavior =1
+echo "*** OPTIND=1, optstring:'ab' args:-a -b c"
+OPTIND=1
+while getopts "ab" var -a -b c; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+echo "exited: rc:$? var:'$var' OPTIND:$OPTIND"
+
+# Resetting behavior =0
+echo "*** OPTIND=0, optstring:'ab' args:-a -b c"
+OPTIND=0
+while getopts "ab" var -a -b c; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+echo "exited: rc:$? var:'$var' OPTIND:$OPTIND"
+
+# Resetting behavior "unset"
+echo "*** unset OPTIND, optstring:'ab' args:-a -b c"
+unset OPTIND
+while getopts "ab" var -a -b c; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+echo "exited: rc:$? var:'$var' OPTIND:$OPTIND"
+
+# What is the final exitcode?
+echo "*** optstring:'ab' args:-a -b c"
+unset OPTIND
+getopts "ab" var -a -b c; echo "1 rc:$? var:'$var' OPTIND:$OPTIND"
+getopts "ab" var -a -b c; echo "2 rc:$? var:'$var' OPTIND:$OPTIND"
+getopts "ab" var -a -b c; echo "3 rc:$? var:'$var' OPTIND:$OPTIND"
+
+# Where would it stop? c or -c?
+echo "*** unset OPTIND, optstring:'ab' args:-a c -c -b d"
+unset OPTIND
+while getopts "ab" var -a c -c -b d; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+echo "exited: rc:$? var:'$var' OPTIND:$OPTIND"
+
+# What happens on unknown option?
+echo "*** unset OPTIND, optstring:'ab' args:-a -c -b d"
+unset OPTIND
+while getopts "ab" var -a -c -b d; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+echo "exited: rc:$? var:'$var' OPTIND:$OPTIND"
+
+# ORTERR=0 suppresses error message?
+echo "*** unset OPTIND, OPTERR=0, optstring:'ab' args:-a -c -b d"
+unset OPTIND
+OPTERR=0
+while getopts "ab" var -a -c -b d; do
+	echo "var:'$var' OPTIND:$OPTIND"
+done
+echo "exited: rc:$? var:'$var' OPTIND:$OPTIND"
+
+) 2>&1 \
+| sed	-e 's/ unrecognized option: / invalid option -- /' \
+	-e 's/ illegal option -- / invalid option -- /' \
diff -urpN busybox-1.27.2/shell/hush_test/hush-getopts/getopt_test_libc_bug.right busybox-1.28.0/shell/hush_test/hush-getopts/getopt_test_libc_bug.right
--- busybox-1.27.2/shell/hush_test/hush-getopts/getopt_test_libc_bug.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-getopts/getopt_test_libc_bug.right	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,26 @@
+*** optstring:'ac' args:-a -b -c -d e
+1 rc:0 var:'a' OPTIND:2 OPTARG:''
+./getopt_test_libc_bug.tests: invalid option -- b
+2 rc:0 var:'?' OPTIND:3 OPTARG:''
+3 rc:0 var:'c' OPTIND:4 OPTARG:''
+./getopt_test_libc_bug.tests: invalid option -- d
+4 rc:0 var:'?' OPTIND:5 OPTARG:''
+5 rc:1 var:'?' OPTIND:5 OPTARG:''
+
+*** optstring:'ac' args:-a -b -c -d e
+1 rc:0 var:'a' OPTIND:2 OPTARG:''
+./getopt_test_libc_bug.tests: invalid option -- b
+2 rc:0 var:'?' OPTIND:3 OPTARG:''
+3 rc:0 var:'c' OPTIND:4 OPTARG:''
+./getopt_test_libc_bug.tests: invalid option -- d
+4 rc:0 var:'?' OPTIND:5 OPTARG:''
+5 rc:1 var:'?' OPTIND:5 OPTARG:''
+
+*** optstring:'ac' args:-a -b -c -d e
+1 rc:0 var:'a' OPTIND:2 OPTARG:''
+./getopt_test_libc_bug.tests: invalid option -- b
+2 rc:0 var:'?' OPTIND:3 OPTARG:''
+3 rc:0 var:'c' OPTIND:4 OPTARG:''
+./getopt_test_libc_bug.tests: invalid option -- d
+4 rc:0 var:'?' OPTIND:5 OPTARG:''
+5 rc:1 var:'?' OPTIND:5 OPTARG:''
diff -urpN busybox-1.27.2/shell/hush_test/hush-getopts/getopt_test_libc_bug.tests busybox-1.28.0/shell/hush_test/hush-getopts/getopt_test_libc_bug.tests
--- busybox-1.27.2/shell/hush_test/hush-getopts/getopt_test_libc_bug.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-getopts/getopt_test_libc_bug.tests	2017-08-17 13:50:45.000000000 +0200
@@ -0,0 +1,44 @@
+# This test can fail with libc with buggy getopt() implementation.
+# If getopt() wants to parse multi-option args (-abc),
+# it needs to remember a position within current arg.
+#
+# If this position is kept as a POINTER, not an offset,
+# and if argv[] ADDRESSES (not contents!) change, it blows up.
+
+(
+
+echo "*** optstring:'ac' args:-a -b -c -d e"
+getopts "ac" var -a -b -c -d e; echo "1 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+getopts "ac" var -a -b -c -d e; echo "2 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+getopts "ac" var -a -b -c -d e; echo "3 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+getopts "ac" var -a -b -c -d e; echo "4 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+getopts "ac" var -a -b -c -d e; echo "5 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+
+# Above: args are (usually) in the same locations in memory.
+# Below: variable allocations change the location.
+
+echo
+echo "*** optstring:'ac' args:-a -b -c -d e"
+unset OPTIND
+OPTARG=QWERTY; getopts "ac" var -a -b -c -d e; echo "1 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+NEWVAR=NEWVAL; getopts "ac" var -a -b -c -d e; echo "2 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+VAR111=NEWVAL; getopts "ac" var -a -b -c -d e; echo "3 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+VAR222=NEWVAL; getopts "ac" var -a -b -c -d e; echo "4 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+VAR333=NEWVAL; getopts "ac" var -a -b -c -d e; echo "5 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+
+# Slightly different attempts to force reallocations
+
+echo
+echo "*** optstring:'ac' args:-a -b -c -d e"
+unset OPTIND
+export OPTARG; getopts "ac" var -a -b -c -d e; echo "1 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+export NEWVAR; getopts "ac" var -a -b -c -d e; echo "2 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+export VAR111; getopts "ac" var -a -b -c -d e; echo "3 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+export VAR222; getopts "ac" var -a -b -c -d e; echo "4 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+export VAR333; getopts "ac" var -a -b -c -d e; echo "5 rc:$? var:'$var' OPTIND:$OPTIND OPTARG:'$OPTARG'"
+
+# All copies of code above should generate identical output
+
+) 2>&1 \
+| sed	-e 's/ unrecognized option: / invalid option -- /' \
+	-e 's/ illegal option -- / invalid option -- /' \
diff -urpN busybox-1.27.2/shell/hush_test/hush-heredoc/heredoc8.right busybox-1.28.0/shell/hush_test/hush-heredoc/heredoc8.right
--- busybox-1.27.2/shell/hush_test/hush-heredoc/heredoc8.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-heredoc/heredoc8.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1 @@
+hush: syntax error at 'then'
diff -urpN busybox-1.27.2/shell/hush_test/hush-heredoc/heredoc8.tests busybox-1.28.0/shell/hush_test/hush-heredoc/heredoc8.tests
--- busybox-1.27.2/shell/hush_test/hush-heredoc/heredoc8.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-heredoc/heredoc8.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,3 @@
+# ash used to SEGV on this:
+
+<<EOF; then <W
diff -urpN busybox-1.27.2/shell/hush_test/hush-heredoc/heredoc_empty2.right busybox-1.28.0/shell/hush_test/hush-heredoc/heredoc_empty2.right
--- busybox-1.27.2/shell/hush_test/hush-heredoc/heredoc_empty2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-heredoc/heredoc_empty2.right	2017-07-29 23:01:53.000000000 +0200
@@ -0,0 +1,4 @@
+OK1
+Ok:0
+OK2
+Ok:0
diff -urpN busybox-1.27.2/shell/hush_test/hush-heredoc/heredoc_empty2.tests busybox-1.28.0/shell/hush_test/hush-heredoc/heredoc_empty2.tests
--- busybox-1.27.2/shell/hush_test/hush-heredoc/heredoc_empty2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-heredoc/heredoc_empty2.tests	2017-07-29 23:01:53.000000000 +0200
@@ -0,0 +1,14 @@
+unset a
+
+# Heredoc with empty delimiter
+cat <<- ""
+	OK1
+
+echo Ok:$?
+
+# Heredoc with empty delimiter
+cat <<- ""
+	OK2
+	
+
+echo Ok:$?
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/env_and_func.tests busybox-1.28.0/shell/hush_test/hush-misc/env_and_func.tests
--- busybox-1.27.2/shell/hush_test/hush-misc/env_and_func.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-misc/env_and_func.tests	2017-07-24 18:57:10.000000000 +0200
@@ -1,4 +1,8 @@
 var=old
 f() { echo "var=$var"; }
+# bash: POSIXLY_CORRECT behavior is to "leak" new variable values
+# out of function invocations (similar to "special builtins" behavior);
+# but in "bash mode", they don't leak.
+# hush does not "leak" values. ash does.
 var=val f
 echo "var=$var"
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/errexit1.right busybox-1.28.0/shell/hush_test/hush-misc/errexit1.right
--- busybox-1.27.2/shell/hush_test/hush-misc/errexit1.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-misc/errexit1.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1 @@
+OK
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/errexit1.tests busybox-1.28.0/shell/hush_test/hush-misc/errexit1.tests
--- busybox-1.27.2/shell/hush_test/hush-misc/errexit1.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-misc/errexit1.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,5 @@
+set -e
+(true)
+echo OK
+(false)
+echo FAIL
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/func6.right busybox-1.28.0/shell/hush_test/hush-misc/func6.right
--- busybox-1.27.2/shell/hush_test/hush-misc/func6.right	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-misc/func6.right	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-Two:2
-Two:2
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/func6.tests busybox-1.28.0/shell/hush_test/hush-misc/func6.tests
--- busybox-1.27.2/shell/hush_test/hush-misc/func6.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-misc/func6.tests	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-f1() {
-	while return 2; do :; done
-}
-f1
-echo Two:$?
-
-f2() {
-	while :; do return 2; done
-}
-f2
-echo Two:$?
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/func_prio_over_builtins.right busybox-1.28.0/shell/hush_test/hush-misc/func_prio_over_builtins.right
--- busybox-1.27.2/shell/hush_test/hush-misc/func_prio_over_builtins.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-misc/func_prio_over_builtins.right	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,5 @@
+YES
+YES
+YES
+YES
+Ok:YES
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/func_prio_over_builtins.tests busybox-1.28.0/shell/hush_test/hush-misc/func_prio_over_builtins.tests
--- busybox-1.27.2/shell/hush_test/hush-misc/func_prio_over_builtins.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-misc/func_prio_over_builtins.tests	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,5 @@
+true() { echo YES >&2; }
+true
+true | true
+(true)
+echo Ok:`true 2>&1`
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/func_return1.right busybox-1.28.0/shell/hush_test/hush-misc/func_return1.right
--- busybox-1.27.2/shell/hush_test/hush-misc/func_return1.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-misc/func_return1.right	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,2 @@
+Two:2
+Two:2
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/func_return1.tests busybox-1.28.0/shell/hush_test/hush-misc/func_return1.tests
--- busybox-1.27.2/shell/hush_test/hush-misc/func_return1.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-misc/func_return1.tests	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,11 @@
+f1() {
+	while return 2; do :; done
+}
+f1
+echo Two:$?
+
+f2() {
+	while :; do return 2; done
+}
+f2
+echo Two:$?
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/func_return2.right busybox-1.28.0/shell/hush_test/hush-misc/func_return2.right
--- busybox-1.27.2/shell/hush_test/hush-misc/func_return2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-misc/func_return2.right	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,2 @@
+Two:2
+Two:2
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/func_return2.tests busybox-1.28.0/shell/hush_test/hush-misc/func_return2.tests
--- busybox-1.27.2/shell/hush_test/hush-misc/func_return2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-misc/func_return2.tests	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,6 @@
+f1() { return 2; }
+f1
+echo Two:$?
+false
+true | f1
+echo Two:$?
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/shift1.right busybox-1.28.0/shell/hush_test/hush-misc/shift1.right
--- busybox-1.27.2/shell/hush_test/hush-misc/shift1.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-misc/shift1.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,10 @@
+2 3 4
+hush: Illegal number: -1
+1 2 3 4
+1 2 3 4
+2 3 4
+3 4
+4
+
+1 2 3 4
+1 2 3 4
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/shift1.tests busybox-1.28.0/shell/hush_test/hush-misc/shift1.tests
--- busybox-1.27.2/shell/hush_test/hush-misc/shift1.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-misc/shift1.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,10 @@
+$THIS_SH -c 'shift;    echo "$@"' 0 1 2 3 4
+#We complain on -1 and continue.
+$THIS_SH -c 'shift -1; echo "$@"' 0 1 2 3 4
+$THIS_SH -c 'shift  0; echo "$@"' 0 1 2 3 4
+$THIS_SH -c 'shift  1; echo "$@"' 0 1 2 3 4
+$THIS_SH -c 'shift  2; echo "$@"' 0 1 2 3 4
+$THIS_SH -c 'shift  3; echo "$@"' 0 1 2 3 4
+$THIS_SH -c 'shift  4; echo "$@"' 0 1 2 3 4
+$THIS_SH -c 'shift  5; echo "$@"' 0 1 2 3 4
+$THIS_SH -c 'shift  6; echo "$@"' 0 1 2 3 4
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/sigint1.right busybox-1.28.0/shell/hush_test/hush-misc/sigint1.right
--- busybox-1.27.2/shell/hush_test/hush-misc/sigint1.right	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-misc/sigint1.right	1970-01-01 01:00:00.000000000 +0100
@@ -1 +0,0 @@
-Sending SIGINT to main shell PID
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/sigint1.tests busybox-1.28.0/shell/hush_test/hush-misc/sigint1.tests
--- busybox-1.27.2/shell/hush_test/hush-misc/sigint1.tests	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-misc/sigint1.tests	1970-01-01 01:00:00.000000000 +0100
@@ -1,41 +0,0 @@
-# What should happen if non-interactive shell gets SIGINT?
-
-(sleep 1; echo Sending SIGINT to main shell PID; exec kill -INT $$) &
-
-# We create a child which exits with 0 even on SIGINT
-# (The complex command is necessary only if SIGINT is generated by ^C,
-# in this testcase even bare "sleep 2" would do because
-# in the testcase we don't send SIGINT *to the child*...)
-$THIS_SH -c 'trap "exit 0" SIGINT; sleep 2'
-
-# In one second, we (main shell) get SIGINT here.
-# The question is whether we should, or should not, exit.
-
-# bash will not stop here. It will execute next command(s).
-
-# The rationale for this is described here:
-# http://www.cons.org/cracauer/sigint.html
-#
-# Basically, bash will not exit on SIGINT immediately if it waits
-# for a child. It will wait for the child to exit.
-# If child exits NOT by dying on SIGINT, then bash will not exit.
-#
-# The idea is that the following script:
-# | emacs file.txt
-# | more cmds
-# User may use ^C to interrupt editor's ops like search. But then
-# emacs exits normally. User expects that script doesn't stop.
-#
-# This is a nice idea, but detecting "did process really exit
-# with SIGINT?" is racy. Consider:
-# | bash -c 'while true; do /bin/true; done'
-# When ^C is pressed while bash waits for /bin/true to exit,
-# it may happen that /bin/true exits with exitcode 0 before
-# ^C is delivered to it as SIGINT. bash will see SIGINT, then
-# it will see that child exited with 0, and bash will NOT EXIT.
-
-# Therefore we do not implement bash behavior.
-# I'd say that emacs need to put itself into a separate pgrp
-# to isolate shell from getting stray SIGINTs from ^C.
-
-echo Next command after SIGINT was executed
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/tickquote1.right busybox-1.28.0/shell/hush_test/hush-misc/tickquote1.right
--- busybox-1.27.2/shell/hush_test/hush-misc/tickquote1.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-misc/tickquote1.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1 @@
+hush: syntax error: unterminated "
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/tickquote1.tests busybox-1.28.0/shell/hush_test/hush-misc/tickquote1.tests
--- busybox-1.27.2/shell/hush_test/hush-misc/tickquote1.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-misc/tickquote1.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,2 @@
+# UNFIXED BUG: hush does not parse embedded `cmd` at embedding document parse time
+echo _`"pwd`_
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/wait6.right busybox-1.28.0/shell/hush_test/hush-misc/wait6.right
--- busybox-1.27.2/shell/hush_test/hush-misc/wait6.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-misc/wait6.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,2 @@
+0
+3
diff -urpN busybox-1.27.2/shell/hush_test/hush-misc/wait6.tests busybox-1.28.0/shell/hush_test/hush-misc/wait6.tests
--- busybox-1.27.2/shell/hush_test/hush-misc/wait6.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-misc/wait6.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,6 @@
+# In bash, "wait $!" extracts correct exitcode even if bg task has already exited
+# It prints 0, then 3:
+(sleep 0; exit 3) & sleep 1
+echo $?
+wait $!
+echo $?
diff -urpN busybox-1.27.2/shell/hush_test/hush-parsing/and_or_and_backgrounding.right busybox-1.28.0/shell/hush_test/hush-parsing/and_or_and_backgrounding.right
--- busybox-1.27.2/shell/hush_test/hush-parsing/and_or_and_backgrounding.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-parsing/and_or_and_backgrounding.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,4 @@
+First
+Second
+Third
+Done
diff -urpN busybox-1.27.2/shell/hush_test/hush-parsing/and_or_and_backgrounding.tests busybox-1.28.0/shell/hush_test/hush-parsing/and_or_and_backgrounding.tests
--- busybox-1.27.2/shell/hush_test/hush-parsing/and_or_and_backgrounding.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-parsing/and_or_and_backgrounding.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,30 @@
+# According to this doc, && || have higher precedence than ; &.
+# See example below.
+# Precedence of ; is not a problem in practice. Precedence of & is.
+#
+#http://www.opengroup.org/onlinepubs/009695399/utilities/xcu_chap02.html
+#
+#2.9.3 Lists
+#
+#An AND-OR list is a sequence of one or more pipelines separated by
+#the operators "&&" and "||" .
+#
+#A list is a sequence of one or more AND-OR lists separated by the operators
+#';' and '&' and optionally terminated by ';', '&', or <newline>.
+#
+#The operators "&&" and "||" shall have equal precedence and shall be
+#evaluated with left associativity. For example, both of the following
+#commands write solely bar to standard output:
+#
+#    false && echo foo || echo bar
+#    true || echo foo && echo bar
+#
+#A ';' or <newline> terminator shall cause the preceding AND-OR list
+#to be executed sequentially; an '&' shall cause asynchronous execution
+#of the preceding AND-OR list.
+
+echo First && sleep 0.2 && echo Third &
+sleep 0.1
+echo Second
+wait
+echo Done
diff -urpN busybox-1.27.2/shell/hush_test/hush-parsing/comment2.right busybox-1.28.0/shell/hush_test/hush-parsing/comment2.right
--- busybox-1.27.2/shell/hush_test/hush-parsing/comment2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-parsing/comment2.right	2017-12-04 16:07:47.000000000 +0100
@@ -0,0 +1,4 @@
+Ok1
+Ok2
+Ok5
+Ok6
diff -urpN busybox-1.27.2/shell/hush_test/hush-parsing/comment2.tests busybox-1.28.0/shell/hush_test/hush-parsing/comment2.tests
--- busybox-1.27.2/shell/hush_test/hush-parsing/comment2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-parsing/comment2.tests	2017-12-04 16:07:47.000000000 +0100
@@ -0,0 +1,13 @@
+echo "`echo Ok1 #comment is ignored`"
+echo `echo Ok2 #comment is ignored`
+#
+# Surprisingly, bash does not handle comments in $()
+# the same way as in ``. "#" causes the rest of the line, _including_ )",
+# to be ignored. These lines would cause an error:
+#echo "$(echo Ok3 #comment is ignored)"
+#echo $(echo Ok4 #comment is ignored)
+#
+echo "$(echo Ok5 #comment is ignored
+)"
+echo $(echo Ok6 #comment is ignored
+)
diff -urpN busybox-1.27.2/shell/hush_test/hush-parsing/groups_and_keywords2.right busybox-1.28.0/shell/hush_test/hush-parsing/groups_and_keywords2.right
--- busybox-1.27.2/shell/hush_test/hush-parsing/groups_and_keywords2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-parsing/groups_and_keywords2.right	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,3 @@
+hush: syntax error: unexpected )
+Fail:2
+hush: syntax error: unexpected )
diff -urpN busybox-1.27.2/shell/hush_test/hush-parsing/groups_and_keywords2.tests busybox-1.28.0/shell/hush_test/hush-parsing/groups_and_keywords2.tests
--- busybox-1.27.2/shell/hush_test/hush-parsing/groups_and_keywords2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-parsing/groups_and_keywords2.tests	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,9 @@
+# This is an error
+(eval 'if() { echo; }')
+echo Fail:$?
+# ^^^^^^ bash prints 1, but interactively it sets $? = 2
+# we print 2
+
+# This is an error, and it aborts in script
+if() { echo; }
+echo Not reached
diff -urpN busybox-1.27.2/shell/hush_test/hush-quoting/quoted_punct.right busybox-1.28.0/shell/hush_test/hush-quoting/quoted_punct.right
--- busybox-1.27.2/shell/hush_test/hush-quoting/quoted_punct.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-quoting/quoted_punct.right	2017-07-06 17:14:57.000000000 +0200
@@ -0,0 +1,35 @@
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
+ok
diff -urpN busybox-1.27.2/shell/hush_test/hush-quoting/quoted_punct.tests busybox-1.28.0/shell/hush_test/hush-quoting/quoted_punct.tests
--- busybox-1.27.2/shell/hush_test/hush-quoting/quoted_punct.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-quoting/quoted_punct.tests	2017-07-06 17:14:57.000000000 +0200
@@ -0,0 +1,41 @@
+# Testing glob-escaping of every ASCII punctuation char
+# Some chars have more than one test
+# 21..2f
+case '!' in [\!] ) echo ok;; *) echo 'WRONG!';; esac
+case '"' in [\"] ) echo ok;; *) echo 'WRONG"';; esac
+case '#' in [\#] ) echo ok;; *) echo 'WRONG#';; esac
+case '$' in [\$] ) echo ok;; *) echo 'WRONG$';; esac
+case '%' in [\%] ) echo ok;; *) echo 'WRONG%';; esac
+case '&' in [\&] ) echo ok;; *) echo 'WRONG&';; esac
+case "'" in [\'] ) echo ok;; *) echo "WRONG'";; esac
+case '(' in [\(] ) echo ok;; *) echo 'WRONG(';; esac
+case ')' in [\)] ) echo ok;; *) echo 'WRONG)';; esac
+case '*' in [\*] ) echo ok;; *) echo 'WRONG*';; esac
+case '+' in [\+] ) echo ok;; *) echo 'WRONG+';; esac
+case ',' in [\,] ) echo ok;; *) echo 'WRONG,';; esac
+case '-' in [\-] ) echo ok;; *) echo 'WRONG-';; esac
+case '-' in [a\-c]) echo ok;; *) echo 'WRONGa\-c';; esac
+case '.' in [\.] ) echo ok;; *) echo 'WRONG.';; esac
+case '/' in [\/] ) echo ok;; *) echo 'WRONG/';; esac
+# 3a..40
+case ':' in [\:] ) echo ok;; *) echo 'WRONG:';; esac
+case ';' in [\;] ) echo ok;; *) echo 'WRONG;';; esac
+case '<' in [\<] ) echo ok;; *) echo 'WRONG<';; esac
+case '=' in [\=] ) echo ok;; *) echo 'WRONG=';; esac
+case '>' in [\>] ) echo ok;; *) echo 'WRONG>';; esac
+case '?' in [\?] ) echo ok;; *) echo 'WRONG?';; esac
+case '@' in [\@] ) echo ok;; *) echo 'WRONG@';; esac
+# 5b..60
+case '[' in [\[] ) echo ok;; *) echo 'WRONG[';; esac
+case '\' in [\\] ) echo ok;; *) echo 'WRONG\';; esac
+case '\' in \\ ) echo ok;; *) echo 'WRONG\\';; esac
+case ']' in [\]] ) echo ok;; *) echo 'WRONG]';; esac
+case ']' in [a\]]) echo ok;; *) echo 'WRONGa]';; esac
+case '^' in [\^] ) echo ok;; *) echo 'WRONG^';; esac
+case '_' in [\_] ) echo ok;; *) echo 'WRONG_';; esac
+case '`' in [\`] ) echo ok;; *) echo 'WRONG`';; esac
+# 7b..7e
+case '{' in [\{] ) echo ok;; *) echo 'WRONG{';; esac
+case '|' in [\|] ) echo ok;; *) echo 'WRONG|';; esac
+case '}' in [\}] ) echo ok;; *) echo 'WRONG}';; esac
+case '~' in [\~] ) echo ok;; *) echo 'WRONG~';; esac
diff -urpN busybox-1.27.2/shell/hush_test/hush-quoting/unicode_8x_chars.right busybox-1.28.0/shell/hush_test/hush-quoting/unicode_8x_chars.right
--- busybox-1.27.2/shell/hush_test/hush-quoting/unicode_8x_chars.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-quoting/unicode_8x_chars.right	2017-07-06 17:14:57.000000000 +0200
@@ -0,0 +1,6 @@
+ok
+ok
+ok
+ok
+ok
+ok
diff -urpN busybox-1.27.2/shell/hush_test/hush-quoting/unicode_8x_chars.tests busybox-1.28.0/shell/hush_test/hush-quoting/unicode_8x_chars.tests
--- busybox-1.27.2/shell/hush_test/hush-quoting/unicode_8x_chars.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-quoting/unicode_8x_chars.tests	2017-07-06 17:14:57.000000000 +0200
@@ -0,0 +1,28 @@
+# Unicode: cf 80
+case π in
+( "π" ) echo ok ;;
+( * )   echo WRONG ;;
+esac
+# Unicode: cf 81
+case ρ in
+( "ρ" ) echo ok ;;
+( * )   echo WRONG ;;
+esac
+# Unicode: cf 82
+case ς in
+( "ς" ) echo ok ;;
+( * )   echo WRONG ;;
+esac
+
+case "π" in
+( π ) echo ok ;;
+( * ) echo WRONG ;;
+esac
+case "ρ" in
+( ρ ) echo ok ;;
+( * ) echo WRONG ;;
+esac
+case "ς" in
+( ς ) echo ok ;;
+( * ) echo WRONG ;;
+esac
diff -urpN busybox-1.27.2/shell/hush_test/hush-read/read_t0.right busybox-1.28.0/shell/hush_test/hush-read/read_t0.right
--- busybox-1.27.2/shell/hush_test/hush-read/read_t0.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-read/read_t0.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,3 @@
+><[0]
+><[0]
+><[1]
diff -urpN busybox-1.27.2/shell/hush_test/hush-read/read_t0.tests busybox-1.28.0/shell/hush_test/hush-read/read_t0.tests
--- busybox-1.27.2/shell/hush_test/hush-read/read_t0.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-read/read_t0.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,14 @@
+# ><[0]
+echo Ok | { sleep 0.1; read -t 0 reply; echo ">$reply<[$?]"; }
+
+# This would not be deterministic: returns 0 "data exists" if EOF is seen
+# (true terminated) - because EOF is considered to be data (read will not block),
+# else returns 1 "no data".
+## ><[????]
+#true | { read -t 0 reply; echo ">$reply<[$?]"; }
+
+# ><[0]
+true | { sleep 0.1; read -t 0 reply; echo ">$reply<[$?]"; }
+
+# ><[1]
+sleep 0.2 | { read -p IGNORED_PROMPT -t 0 reply; echo ">$reply<[$?]"; }
diff -urpN busybox-1.27.2/shell/hush_test/hush-redir/redir.right busybox-1.28.0/shell/hush_test/hush-redir/redir.right
--- busybox-1.27.2/shell/hush_test/hush-redir/redir.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-redir/redir.right	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,2 @@
+hush: write error: Bad file descriptor
+TEST
diff -urpN busybox-1.27.2/shell/hush_test/hush-redir/redir.tests busybox-1.28.0/shell/hush_test/hush-redir/redir.tests
--- busybox-1.27.2/shell/hush_test/hush-redir/redir.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-redir/redir.tests	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,6 @@
+# test: closed fds should stay closed
+exec 1>&-
+echo TEST >TEST
+echo JUNK # lost: stdout is closed
+cat TEST >&2
+rm TEST
diff -urpN busybox-1.27.2/shell/hush_test/hush-redir/redir3.right busybox-1.28.0/shell/hush_test/hush-redir/redir3.right
--- busybox-1.27.2/shell/hush_test/hush-redir/redir3.right	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-redir/redir3.right	2017-07-18 19:13:20.000000000 +0200
@@ -1,14 +1,2 @@
-hush: can't open '/does/not/exist': No such file or directory
-One:1
-hush: can't open '/cant/be/created': No such file or directory
-One:1
-Ok
-hush: can't open '/cant/be/created': No such file or directory
-Zero:0
-hush: can't open '/cant/be/created': No such file or directory
-One:1
-hush: can't open '/cant/be/created': No such file or directory
-One:1
-hush: can't open '/cant/be/created': No such file or directory
-Zero:0
-Done
+TEST
+hush: can't duplicate file descriptor: Bad file descriptor
diff -urpN busybox-1.27.2/shell/hush_test/hush-redir/redir3.tests busybox-1.28.0/shell/hush_test/hush-redir/redir3.tests
--- busybox-1.27.2/shell/hush_test/hush-redir/redir3.tests	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-redir/redir3.tests	2017-07-18 19:13:20.000000000 +0200
@@ -1,9 +1,5 @@
-echo Error >/does/not/exist; echo One:$?
-t=BAD
-t=Ok >>/cant/be/created; echo One:$?
-echo $t
-! >/cant/be/created; echo Zero:$?
-exec >/cant/be/created; echo One:$?
-exec /bin/true >/cant/be/created; echo One:$?
-! exec /bin/true >/cant/be/created; echo Zero:$?
-echo Done
+# redirects to closed descriptors should not leave these descriptors
+# open afterwards
+echo TEST 9>/dev/null
+echo MUST ERROR OUT >&9
+echo "Output to fd#9: $?"
diff -urpN busybox-1.27.2/shell/hush_test/hush-redir/redir_errors.right busybox-1.28.0/shell/hush_test/hush-redir/redir_errors.right
--- busybox-1.27.2/shell/hush_test/hush-redir/redir_errors.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-redir/redir_errors.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,14 @@
+hush: can't open '/does/not/exist': No such file or directory
+One:1
+hush: can't open '/cant/be/created': No such file or directory
+One:1
+Ok
+hush: can't open '/cant/be/created': No such file or directory
+Zero:0
+hush: can't open '/cant/be/created': No such file or directory
+One:1
+hush: can't open '/cant/be/created': No such file or directory
+One:1
+hush: can't open '/cant/be/created': No such file or directory
+Zero:0
+Done
diff -urpN busybox-1.27.2/shell/hush_test/hush-redir/redir_errors.tests busybox-1.28.0/shell/hush_test/hush-redir/redir_errors.tests
--- busybox-1.27.2/shell/hush_test/hush-redir/redir_errors.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-redir/redir_errors.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,9 @@
+echo Error >/does/not/exist; echo One:$?
+t=BAD
+t=Ok >>/cant/be/created; echo One:$?
+echo $t
+! >/cant/be/created; echo Zero:$?
+exec >/cant/be/created; echo One:$?
+exec /bin/true >/cant/be/created; echo One:$?
+! exec /bin/true >/cant/be/created; echo Zero:$?
+echo Done
diff -urpN busybox-1.27.2/shell/hush_test/hush-redir/redir_script.tests busybox-1.28.0/shell/hush_test/hush-redir/redir_script.tests
--- busybox-1.27.2/shell/hush_test/hush-redir/redir_script.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-redir/redir_script.tests	2017-08-03 17:53:10.000000000 +0200
@@ -20,10 +20,15 @@ eval "find_fds $fds"
 
 # Shell should not lose that fd. Did it?
 find_fds
-test x"$fds1" = x"$fds" && { echo "Ok: script fd is not closed"; exit 0; }
+test x"$fds1" = x"$fds" \
+&& { echo "Ok: script fd is not closed"; exit 0; }
+
+# One legit way to handle it is to move script fd. For example, if we see that fd 10 moved to fd 11:
+test x"$fds1" = x" 10>&- 3>&-" && \
+test x"$fds"  = x" 11>&- 3>&-" \
+&& { echo "Ok: script fd is not closed"; exit 0; }
 
 echo "Bug: script fd is closed"
 echo "fds1:$fds1"
 echo "fds2:$fds"
 exit 1
-
diff -urpN busybox-1.27.2/shell/hush_test/hush-redir/redir_to_bad_fd.right busybox-1.28.0/shell/hush_test/hush-redir/redir_to_bad_fd.right
--- busybox-1.27.2/shell/hush_test/hush-redir/redir_to_bad_fd.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-redir/redir_to_bad_fd.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1 @@
+hush: can't duplicate file descriptor: Bad file descriptor
diff -urpN busybox-1.27.2/shell/hush_test/hush-redir/redir_to_bad_fd.tests busybox-1.28.0/shell/hush_test/hush-redir/redir_to_bad_fd.tests
--- busybox-1.27.2/shell/hush_test/hush-redir/redir_to_bad_fd.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-redir/redir_to_bad_fd.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,3 @@
+# ash uses fd 10 (usually) for reading the script
+echo LOST >&10
+echo OK
diff -urpN busybox-1.27.2/shell/hush_test/hush-redir/redir_to_bad_fd255.right busybox-1.28.0/shell/hush_test/hush-redir/redir_to_bad_fd255.right
--- busybox-1.27.2/shell/hush_test/hush-redir/redir_to_bad_fd255.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-redir/redir_to_bad_fd255.right	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1 @@
+hush: can't duplicate file descriptor: Bad file descriptor
diff -urpN busybox-1.27.2/shell/hush_test/hush-redir/redir_to_bad_fd255.tests busybox-1.28.0/shell/hush_test/hush-redir/redir_to_bad_fd255.tests
--- busybox-1.27.2/shell/hush_test/hush-redir/redir_to_bad_fd255.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-redir/redir_to_bad_fd255.tests	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,3 @@
+# ash uses fd 10 (usually) for reading the script
+echo LOST >&255
+echo OK
diff -urpN busybox-1.27.2/shell/hush_test/hush-redir/redir_to_bad_fd3.right busybox-1.28.0/shell/hush_test/hush-redir/redir_to_bad_fd3.right
--- busybox-1.27.2/shell/hush_test/hush-redir/redir_to_bad_fd3.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-redir/redir_to_bad_fd3.right	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1 @@
+hush: can't duplicate file descriptor: Bad file descriptor
diff -urpN busybox-1.27.2/shell/hush_test/hush-redir/redir_to_bad_fd3.tests busybox-1.28.0/shell/hush_test/hush-redir/redir_to_bad_fd3.tests
--- busybox-1.27.2/shell/hush_test/hush-redir/redir_to_bad_fd3.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-redir/redir_to_bad_fd3.tests	2017-08-03 17:53:10.000000000 +0200
@@ -0,0 +1,3 @@
+# ash uses fd 10 (usually) for reading the script
+echo LOST >&3
+echo OK
diff -urpN busybox-1.27.2/shell/hush_test/hush-signals/signal4.right busybox-1.28.0/shell/hush_test/hush-signals/signal4.right
--- busybox-1.27.2/shell/hush_test/hush-signals/signal4.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-signals/signal4.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,4 @@
+hush: trap: BADNAME: invalid signal specification
+1
+Trapped
+Ok
diff -urpN busybox-1.27.2/shell/hush_test/hush-signals/signal4.tests busybox-1.28.0/shell/hush_test/hush-signals/signal4.tests
--- busybox-1.27.2/shell/hush_test/hush-signals/signal4.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-signals/signal4.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,5 @@
+#!/bin/sh
+
+trap "echo Trapped" BADNAME TERM; echo $?
+kill $$
+echo Ok
diff -urpN busybox-1.27.2/shell/hush_test/hush-signals/signal8.right busybox-1.28.0/shell/hush_test/hush-signals/signal8.right
--- busybox-1.27.2/shell/hush_test/hush-signals/signal8.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-signals/signal8.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,3 @@
+Removing traps
+End of exit_func
+Done: 0
diff -urpN busybox-1.27.2/shell/hush_test/hush-signals/signal8.tests busybox-1.28.0/shell/hush_test/hush-signals/signal8.tests
--- busybox-1.27.2/shell/hush_test/hush-signals/signal8.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-signals/signal8.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,18 @@
+"$THIS_SH" -c '
+exit_func() {
+    echo "Removing traps"
+    trap - EXIT TERM INT
+    echo "End of exit_func"
+}
+set -e
+trap exit_func EXIT TERM INT
+sleep 2
+exit 77
+' &
+
+sleep 1
+# BUG: ash kills -PGRP, but in non-interactive shell we do not create pgrps!
+# In this case, bash kills by PID, not PGRP.
+kill -TERM %1
+wait
+echo Done: $?
diff -urpN busybox-1.27.2/shell/hush_test/hush-signals/signal9.right busybox-1.28.0/shell/hush_test/hush-signals/signal9.right
--- busybox-1.27.2/shell/hush_test/hush-signals/signal9.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-signals/signal9.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,3 @@
+Removing traps
+End of exit_func
+Done: 0
diff -urpN busybox-1.27.2/shell/hush_test/hush-signals/signal9.tests busybox-1.28.0/shell/hush_test/hush-signals/signal9.tests
--- busybox-1.27.2/shell/hush_test/hush-signals/signal9.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-signals/signal9.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,21 @@
+# Note: the inner script is a test which checks for a different bug
+# (ordering between INT handler and exit on "set -e"),
+# but so far I did not figure out how to simulate it non-interactively.
+
+"$THIS_SH" -c '
+exit_func() {
+    echo "Removing traps"
+    trap - EXIT TERM INT
+    echo "End of exit_func"
+}
+set -e
+trap exit_func EXIT TERM INT
+sleep 2
+exit 77
+' &
+
+child=$!
+sleep 1
+kill -TERM $child
+wait
+echo Done: $?
diff -urpN busybox-1.27.2/shell/hush_test/hush-standalone/nofork_env.right busybox-1.28.0/shell/hush_test/hush-standalone/nofork_env.right
--- busybox-1.27.2/shell/hush_test/hush-standalone/nofork_env.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-standalone/nofork_env.right	2017-12-04 16:07:47.000000000 +0100
@@ -0,0 +1,9 @@
+ZVAR=1
+ZVAR=2
+ZVAR=3
+ZVAR=4
+ZVAR=5
+ZVAR=6
+ZVAR=7
+ZVAR=8
+Ok:0
diff -urpN busybox-1.27.2/shell/hush_test/hush-standalone/nofork_env.tests busybox-1.28.0/shell/hush_test/hush-standalone/nofork_env.tests
--- busybox-1.27.2/shell/hush_test/hush-standalone/nofork_env.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-standalone/nofork_env.tests	2017-12-04 16:07:47.000000000 +0100
@@ -0,0 +1,15 @@
+# ash had a bug where NOFORKed applet (env/printenv) was not seeing new exported variables
+
+(export ZVAR=1; printenv) | grep ^ZVAR=
+(ZVAR=2 printenv) | grep ^ZVAR=
+
+(export ZVAR=3; env) | grep ^ZVAR=
+(ZVAR=4 env) | grep ^ZVAR=
+
+export ZVAR=5; printenv | grep ^ZVAR=
+ZVAR=6 printenv | grep ^ZVAR=
+
+export ZVAR=7; env | grep ^ZVAR=
+ZVAR=8 env | grep ^ZVAR=
+
+echo Ok:$?
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/param_expand_alt.right busybox-1.28.0/shell/hush_test/hush-vars/param_expand_alt.right
--- busybox-1.27.2/shell/hush_test/hush-vars/param_expand_alt.right	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-vars/param_expand_alt.right	2017-07-29 23:01:53.000000000 +0200
@@ -1,6 +1,7 @@
 hush: syntax error: unterminated ${name}
 hush: syntax error: unterminated ${name}
-__ __
+__
+_z_ _z_
 _ _ _ _ _
 _aaaa _ _ _word _word
 _ _ _ _ _
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/param_expand_alt.tests busybox-1.28.0/shell/hush_test/hush-vars/param_expand_alt.tests
--- busybox-1.27.2/shell/hush_test/hush-vars/param_expand_alt.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-vars/param_expand_alt.tests	2017-07-29 23:01:53.000000000 +0200
@@ -1,9 +1,20 @@
-# first try some invalid patterns (do in subshell due to parsing error)
-"$THIS_SH" -c 'echo ${+}  ; echo moo'
-"$THIS_SH" -c 'echo ${:+} ; echo moo'
+# First try some invalid patterns. Do in subshell due to parsing error.
+# (set argv0 to "SHELL" to avoid "/path/to/shell: blah" in error messages)
+"$THIS_SH" -c 'echo ${+}  ; echo moo' SHELL
+"$THIS_SH" -c 'echo ${:+} ; echo moo' SHELL
 
-# now some funky ones. (bash doesn't accept ${#+})
-echo _${#+}_ _${#:+}_
+# now some funky ones.
+# ${V+word} "if V unset, then substitute nothing, else substitute word"
+# ${V:+word} "if V unset or '', then substitute nothing, else substitute word"
+#
+# ${#:+} is a :+ op on $#, but ${#+} (and any other ${#c}) is "length of $c",
+# not + op on $#.
+# bash and dash do not accept ${#+}. it's possible for some shell to skip
+# the check that c is valid and interpret ${#+} as "len of $+". Not testing it.
+# echo _${#+}_
+echo _${#:+}_
+# Forms with non-empty word work as expected in both ash and bash.
+echo _${#+z}_ _${#:+z}_
 
 # now some valid ones
 set --
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/param_expand_assign.tests busybox-1.28.0/shell/hush_test/hush-vars/param_expand_assign.tests
--- busybox-1.27.2/shell/hush_test/hush-vars/param_expand_assign.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-vars/param_expand_assign.tests	2017-07-25 15:25:52.000000000 +0200
@@ -1,22 +1,23 @@
-# first try some invalid patterns (do in subshell due to parsing error)
-"$THIS_SH" -c 'echo ${=}'
-"$THIS_SH" -c 'echo ${:=}'
+# First try some invalid patterns. Do in subshell due to parsing error.
+# (set argv0 to "SHELL" to avoid "/path/to/shell: blah" in error messages)
+"$THIS_SH" -c 'echo ${=}' SHELL
+"$THIS_SH" -c 'echo ${:=}' SHELL
 
 # now some funky ones
-"$THIS_SH" -c 'echo ${#=}'
-"$THIS_SH" -c 'echo ${#:=}'
+"$THIS_SH" -c 'echo ${#=}' SHELL
+"$THIS_SH" -c 'echo ${#:=}' SHELL
 
 # should error out
-"$THIS_SH" -c 'set --; echo _${1=}'
-"$THIS_SH" -c 'set --; echo _${1:=}'
-"$THIS_SH" -c 'set --; echo _${1=word}'
-"$THIS_SH" -c 'set --; echo _${1:=word}'
+"$THIS_SH" -c 'set --; echo _${1=}' SHELL
+"$THIS_SH" -c 'set --; echo _${1:=}' SHELL
+"$THIS_SH" -c 'set --; echo _${1=word}' SHELL
+"$THIS_SH" -c 'set --; echo _${1:=word}' SHELL
 
 # should not error
-"$THIS_SH" -c 'set aa; echo _${1=}'
-"$THIS_SH" -c 'set aa; echo _${1:=}'
-"$THIS_SH" -c 'set aa; echo _${1=word}'
-"$THIS_SH" -c 'set aa; echo _${1:=word}'
+"$THIS_SH" -c 'set aa; echo _${1=}' SHELL
+"$THIS_SH" -c 'set aa; echo _${1:=}' SHELL
+"$THIS_SH" -c 'set aa; echo _${1=word}' SHELL
+"$THIS_SH" -c 'set aa; echo _${1:=word}' SHELL
 
 # should work fine
 unset f; echo _$f
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/param_expand_bash_substring.tests busybox-1.28.0/shell/hush_test/hush-vars/param_expand_bash_substring.tests
--- busybox-1.27.2/shell/hush_test/hush-vars/param_expand_bash_substring.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-vars/param_expand_bash_substring.tests	2017-07-25 15:25:52.000000000 +0200
@@ -1,13 +1,14 @@
 # first try some invalid patterns
 # do all of these in subshells since it's supposed to error out
+# (set argv0 to "SHELL" to avoid "/path/to/shell: blah" in error messages)
 export var=0123456789
-"$THIS_SH" -c 'echo ${:}'
-"$THIS_SH" -c 'echo ${::}'
-"$THIS_SH" -c 'echo ${:1}'
-"$THIS_SH" -c 'echo ${::1}'
+"$THIS_SH" -c 'echo ${:}' SHELL
+"$THIS_SH" -c 'echo ${::}' SHELL
+"$THIS_SH" -c 'echo ${:1}' SHELL
+"$THIS_SH" -c 'echo ${::1}' SHELL
 
-#this also is not valid in bash, but we accept it:
-"$THIS_SH" -c 'echo ${var:}'
+#this also is not valid in bash, hush accepts it:
+"$THIS_SH" -c 'echo ${var:}' SHELL
 
 # then some funky ones
 # UNFIXED BUG: this should work: "$THIS_SH" -c 'echo ${?:0}'
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/param_expand_default.tests busybox-1.28.0/shell/hush_test/hush-vars/param_expand_default.tests
--- busybox-1.27.2/shell/hush_test/hush-vars/param_expand_default.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-vars/param_expand_default.tests	2017-07-25 15:25:52.000000000 +0200
@@ -1,6 +1,8 @@
 # first try some invalid patterns (do in subshell due to parsing error)
-"$THIS_SH" -c 'echo ${-}'
-"$THIS_SH" -c 'echo ${:-}'
+# (set argv0 to "SHELL" to avoid "/path/to/shell: blah" in error messages)
+# valid in bash and ash (same as $-), not supported in hush (yet?):
+"$THIS_SH" -c 'echo ${-}' SHELL
+"$THIS_SH" -c 'echo ${:-}' SHELL
 
 # now some funky ones
 echo _${#-} _${#:-}
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/param_expand_indicate_error.right busybox-1.28.0/shell/hush_test/hush-vars/param_expand_indicate_error.right
--- busybox-1.27.2/shell/hush_test/hush-vars/param_expand_indicate_error.right	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-vars/param_expand_indicate_error.right	2017-07-25 15:25:52.000000000 +0200
@@ -1,5 +1,5 @@
 hush: syntax error: unterminated ${name}
-0
+1
 0
 ====
 _
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/param_expand_indicate_error.tests busybox-1.28.0/shell/hush_test/hush-vars/param_expand_indicate_error.tests
--- busybox-1.27.2/shell/hush_test/hush-vars/param_expand_indicate_error.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-vars/param_expand_indicate_error.tests	2017-07-25 15:25:52.000000000 +0200
@@ -5,7 +5,7 @@
 "$THIS_SH" -c 'echo ${:?}'
 
 # then some funky ones
-# note: bash prints 1 - treats it as "length of $#"? We print 0
+# note: bash prints 1 - treats it as "length of $#"
 "$THIS_SH" -c 'echo ${#?}'
 # bash prints 0
 "$THIS_SH" -c 'echo ${#:?}'
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/param_expand_len1.right busybox-1.28.0/shell/hush_test/hush-vars/param_expand_len1.right
--- busybox-1.27.2/shell/hush_test/hush-vars/param_expand_len1.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-vars/param_expand_len1.right	2017-07-29 23:01:53.000000000 +0200
@@ -0,0 +1,11 @@
+One:1
+Two:2
+Three:3
+
+One:1
+Two:2
+Three:3
+
+Ok ${#$}: 0
+
+Ok ${#!}: 0
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/param_expand_len1.tests busybox-1.28.0/shell/hush_test/hush-vars/param_expand_len1.tests
--- busybox-1.27.2/shell/hush_test/hush-vars/param_expand_len1.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-vars/param_expand_len1.tests	2017-07-29 23:01:53.000000000 +0200
@@ -0,0 +1,31 @@
+# ${#c} for any single char c means "length of $c", including all special vars
+
+false
+echo One:${#?}
+(exit 10)
+echo Two:${#?}
+(exit 100)
+echo Three:${#?}
+
+echo
+echo One:${##}
+set -- 1 2 3 4 5 6 7 8 9 0
+echo Two:${##}
+set -- 1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0 \
+       1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0 \
+       1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0 \
+       1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0  1 2 3 4 5 6 7 8 9 0
+echo Three:${##}
+
+echo
+v=$$
+test "${#v}" = "${#$}"
+echo 'Ok ${#$}:' $?
+
+echo
+sleep 0 &
+v=$!
+test "${#v}" = "${#!}"
+echo 'Ok ${#!}:' $?
+
+# TODO: ${#-} ${#_}
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/readonly0.right busybox-1.28.0/shell/hush_test/hush-vars/readonly0.right
--- busybox-1.27.2/shell/hush_test/hush-vars/readonly0.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-vars/readonly0.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,20 @@
+readonly a=A
+readonly b=B
+Ok:0
+
+hush: a=A: readonly variable
+Fail:1
+hush: a=A: readonly variable
+Fail:1
+
+hush: a=Z: readonly variable
+Fail:1
+
+hush: a=Z: readonly variable
+b=B
+^^^a is not exported
+hush: a=Z: readonly variable
+Visible:42
+
+hush: a: readonly variable
+Fail:1
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/readonly0.tests busybox-1.28.0/shell/hush_test/hush-vars/readonly0.tests
--- busybox-1.27.2/shell/hush_test/hush-vars/readonly0.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-vars/readonly0.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,42 @@
+unset a b
+#
+readonly a=A
+b=B
+readonly b
+# readonly on already readonly var is harmless:
+readonly b a
+readonly | grep '^readonly [ab]='
+# this should work:
+export a b
+export -n a b
+echo Ok:$?
+env | grep -e^a= -e^b=  # shows nothing
+
+echo
+# these should all fail (despite the same value being assigned)
+# bash does not abort even in non-interactive more (in script)
+true; a=A
+echo Fail:$?
+true; readonly a=A
+echo Fail:$?
+
+echo
+# in bash, assignment in export fails, but export succeeds! :)
+# we don't mimic that!
+true; export a=Z
+echo Fail:$?
+#env | grep '^a='
+#echo "^^^a is exported"
+export -n a  # undo that bashism, if it happens
+
+echo
+export b
+# this fails to both set and export a:
+a=Z env | grep '^[ab]='
+echo "^^^a is not exported"
+# but external command does get executed, and $? is not mangled (stays 42):
+(exit 42); a=Z env echo Visible:$?
+
+echo
+true; unset a
+echo Fail:$?
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/readonly2.right busybox-1.28.0/shell/hush_test/hush-vars/readonly2.right
--- busybox-1.27.2/shell/hush_test/hush-vars/readonly2.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-vars/readonly2.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,5 @@
+hush: a=Z: readonly variable
+Visible:42
+
+hush: a=Z: readonly variable
+Visible:42
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/readonly2.tests busybox-1.28.0/shell/hush_test/hush-vars/readonly2.tests
--- busybox-1.27.2/shell/hush_test/hush-vars/readonly2.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-vars/readonly2.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,7 @@
+unset a
+readonly a=A
+
+# external commands and builtins should behave the same:
+(exit 42); a=Z echo "Visible:$?"
+echo
+(exit 42); a=Z env echo "Visible:$?"
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/unset.right busybox-1.28.0/shell/hush_test/hush-vars/unset.right
--- busybox-1.27.2/shell/hush_test/hush-vars/unset.right	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-vars/unset.right	2017-07-29 23:01:53.000000000 +0200
@@ -12,7 +12,7 @@ ___
 0 f g
 0
 ___
-hush: HUSH_VERSION: readonly variable
+hush: VAR_RO: readonly variable
 1 f g
-hush: HUSH_VERSION: readonly variable
+hush: VAR_RO: readonly variable
 1
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/unset.tests busybox-1.28.0/shell/hush_test/hush-vars/unset.tests
--- busybox-1.27.2/shell/hush_test/hush-vars/unset.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/hush-vars/unset.tests	2017-09-07 14:42:40.000000000 +0200
@@ -1,4 +1,7 @@
+(
+
 # check invalid options are rejected
+# bash: in posix mode, aborts if non-interactive
 unset -
 echo $?
 unset -m a b c
@@ -30,7 +33,13 @@ echo $? $f $g
 # check read only vars
 echo ___
 f=f g=g
-unset HUSH_VERSION
+VAR_RO=1
+readonly VAR_RO
+unset VAR_RO
 echo $? $f $g
-unset f HUSH_VERSION g
+unset f VAR_RO g
 echo $? $f $g
+
+) 2>&1 \
+| sed   -e 's/ unrecognized option: / invalid option -- /' \
+        -e 's/ illegal option -- / invalid option -- /' \
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/var-utf8-length.right busybox-1.28.0/shell/hush_test/hush-vars/var-utf8-length.right
--- busybox-1.27.2/shell/hush_test/hush-vars/var-utf8-length.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-vars/var-utf8-length.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1 @@
+26
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/var-utf8-length.tests busybox-1.28.0/shell/hush_test/hush-vars/var-utf8-length.tests
--- busybox-1.27.2/shell/hush_test/hush-vars/var-utf8-length.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-vars/var-utf8-length.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,4 @@
+LANG=en_US.UTF-8
+LC_ALL=en_US.UTF-8
+X=abcdÉfghÍjklmnÓpqrstÚvwcyz
+echo ${#X}
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/var_bash1a.right busybox-1.28.0/shell/hush_test/hush-vars/var_bash1a.right
--- busybox-1.27.2/shell/hush_test/hush-vars/var_bash1a.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-vars/var_bash1a.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,6 @@
+parameter     'abcdef'
+varoffset2    'cdef'
+varoffset-2   'ef'
+literal '2'   'cdef'
+literal '-2'  'abcdef'
+literal ' -2' 'ef'
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/var_bash1a.tests busybox-1.28.0/shell/hush_test/hush-vars/var_bash1a.tests
--- busybox-1.27.2/shell/hush_test/hush-vars/var_bash1a.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-vars/var_bash1a.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,11 @@
+parameter=abcdef
+offset=2
+noffset=-2
+echo "parameter     '${parameter}'"
+echo "varoffset2    '${parameter:${offset}}'"
+echo "varoffset-2   '${parameter:${noffset}}'"
+echo "literal '2'   '${parameter:2}'"
+# This is not interpreted as ${VAR:POS{:LEN}},
+# but as ${VAR:=WORD} - if VAR is unset or null, substitute WORD
+echo "literal '-2'  '${parameter:-2}'"
+echo "literal ' -2' '${parameter: -2}'"
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/var_bash1b.right busybox-1.28.0/shell/hush_test/hush-vars/var_bash1b.right
--- busybox-1.27.2/shell/hush_test/hush-vars/var_bash1b.right	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-vars/var_bash1b.right	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,23 @@
+all    |0123456
+4:     |456
+4:2    |45
+4:-1   |45
+4:-2   |4
+4:-3   |
+-4:    |3456
+-4:2   |34
+-4:-1  |345
+-4:-2  |34
+-4:-3  |3
+-4:-4  |
+-4:i=2 |34
+-4:i=-2|34
+-4:i=-3|3
+-4:i=-4|
+-5:    |23456
+-6:    |123456
+-7:    |0123456
+-8:    |
+-9:    |
+-9:-99 |
+Ok:0
diff -urpN busybox-1.27.2/shell/hush_test/hush-vars/var_bash1b.tests busybox-1.28.0/shell/hush_test/hush-vars/var_bash1b.tests
--- busybox-1.27.2/shell/hush_test/hush-vars/var_bash1b.tests	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/shell/hush_test/hush-vars/var_bash1b.tests	2017-07-18 19:13:20.000000000 +0200
@@ -0,0 +1,24 @@
+set -- 0123456
+	echo "all    |"$1
+	echo "4:     |"${1:4}
+	echo "4:2    |"${1:4:2}
+	echo "4:-1   |"${1:4:-1}
+	echo "4:-2   |"${1:4:-2}
+	echo "4:-3   |"${1:4:-3}
+	echo "-4:    |"${1: -4}
+	echo "-4:2   |"${1: -4:2}
+	echo "-4:-1  |"${1: -4:-1}
+	echo "-4:-2  |"${1: -4:-2}
+	echo "-4:-3  |"${1: -4:-3}
+	echo "-4:-4  |"${1: -4:-4}
+i=2;	echo "-4:i=2 |"${1: -4:i}
+i=-2;	echo "-4:i=-2|"${1: -4:i}
+i=-3;	echo "-4:i=-3|"${1: -4:i}
+i=-4;	echo "-4:i=-4|"${1: -4:i}
+	echo "-5:    |"${1: -5}
+	echo "-6:    |"${1: -6}
+	echo "-7:    |"${1: -7}
+	echo "-8:    |"${1: -8}
+	echo "-9:    |"${1: -9}
+	echo "-9:-99 |"${1: -9:-99}
+echo Ok:$?
diff -urpN busybox-1.27.2/shell/hush_test/run-all busybox-1.28.0/shell/hush_test/run-all
--- busybox-1.27.2/shell/hush_test/run-all	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/shell/hush_test/run-all	2017-08-08 14:08:06.000000000 +0200
@@ -9,6 +9,8 @@ unset LC_NUMERIC
 unset LC_TIME
 unset LC_ALL
 
+TOPDIR=`pwd`
+
 if test ! -x hush; then
 	if test ! -x ../../busybox; then
 		echo "Can't run tests. Put hush binary into this directory (`pwd`)"
@@ -38,6 +40,8 @@ do_test()
 	test -d "$1" || return 0
 	d=${d%/}
 #	echo Running tests in directory "$1"
+	# $1 but with / replaced by # so that it can be used as filename part
+	noslash=`echo "$1" | sed 's:/:#:g'`
 	(
 	tret=0
 	cd "$1" || { echo "cannot cd $1!"; exit 1; }
@@ -49,34 +53,35 @@ do_test()
 			#*) echo $x ; sh $x ;;
 			*)
 			echo -n "$1/$x:"
-			sh "$x" >"../$1-$x.fail" 2>&1 && \
-			{ { echo " ok"; rm "../$1-$x.fail"; } || echo " fail"; }
+			sh "$x" >"$TOPDIR/$noslash-$x.fail" 2>&1 && \
+			{ { echo " ok"; rm "$TOPDIR/$noslash-$x.fail"; } || echo " fail"; }
 			;;
 		esac
 	done
 	# Many bash run-XXX scripts just do this,
 	# no point in duplication it all over the place
 	for x in *.tests; do
-	test -x "$x" || continue
-	name="${x%%.tests}"
-	test -f "$name.right" || continue
-#	echo Running test: "$x"
-	echo -n "$1/$x:"
-	(
-		"$THIS_SH" "./$x" >"$name.xx" 2>&1
-		r=$?
-		# filter C library differences
-		sed -i \
-			-e "/: invalid option /s:'::g" \
-			"$name.xx"
-		test $r -eq 77 && rm -f "../$1-$x.fail" && exit 77
-		diff -u "$name.xx" "$name.right" >"../$1-$x.fail" && rm -f "$name.xx" "../$1-$x.fail"
-	)
-	case $? in
-		0)  echo " ok";;
-		77) echo " skip (feature disabled)";;
-		*)  echo " fail"; tret=1;;
-	esac
+		test -x "$x" || continue
+		name="${x%%.tests}"
+		test -f "$name.right" || continue
+#		echo Running test: "$x"
+		echo -n "$1/$x:"
+		(
+			"$THIS_SH" "./$x" >"$name.xx" 2>&1
+			r=$?
+			# filter C library differences
+			sed -i \
+				-e "/: invalid option /s:'::g" \
+				"$name.xx"
+			test $r -eq 77 && rm -f "$TOPDIR/$noslash-$x.fail" && exit 77
+			diff -u "$name.xx" "$name.right" >"$TOPDIR/$noslash-$x.fail" \
+			&& rm -f "$name.xx" "$TOPDIR/$noslash-$x.fail"
+		)
+		case $? in
+			0)  echo " ok";;
+			77) echo " skip (feature disabled)";;
+			*)  echo " fail ($?)"; tret=1;;
+		esac
 	done
 	exit ${tret}
 	)
@@ -92,7 +97,7 @@ if [ $# -lt 1 ]; then
 	modules=`ls -d hush-*`
 
 	for module in $modules; do
-	do_test $module || ret=1
+		do_test $module || ret=1
 	done
 else
 	while [ $# -ge 1 ]; do
diff -urpN busybox-1.27.2/shell/math.c busybox-1.28.0/shell/math.c
--- busybox-1.27.2/shell/math.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/math.c	2017-08-03 17:53:10.000000000 +0200
@@ -743,7 +743,7 @@ arith(arith_state_t *math_state, const c
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
diff -urpN busybox-1.27.2/shell/shell_common.c busybox-1.28.0/shell/shell_common.c
--- busybox-1.27.2/shell/shell_common.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/shell/shell_common.c	2017-09-07 14:42:40.000000000 +0200
@@ -54,15 +54,18 @@ shell_builtin_read(void FAST_FUNC (*setv
 	const char *opt_n,
 	const char *opt_p,
 	const char *opt_t,
-	const char *opt_u
+	const char *opt_u,
+	const char *opt_d
 )
 {
+	struct pollfd pfd[1];
+#define fd (pfd[0].fd) /* -u FD */
 	unsigned err;
 	unsigned end_ms; /* -t TIMEOUT */
-	int fd; /* -u FD */
 	int nchars; /* -n NUM */
 	char **pp;
 	char *buffer;
+	char delim;
 	struct termios tty, old_tty;
 	const char *retval;
 	int bufpos; /* need to be able to hold -1 */
@@ -88,38 +91,43 @@ shell_builtin_read(void FAST_FUNC (*setv
 			return "invalid count";
 		/* note: "-n 0": off (bash 3.2 does this too) */
 	}
+
 	end_ms = 0;
-	if (opt_t) {
+	if (opt_t && !ENABLE_FEATURE_SH_READ_FRAC) {
 		end_ms = bb_strtou(opt_t, NULL, 10);
-		if (errno || end_ms > UINT_MAX / 2048)
+		if (errno)
 			return "invalid timeout";
+		if (end_ms > UINT_MAX / 2048) /* be safely away from overflow */
+			end_ms = UINT_MAX / 2048;
 		end_ms *= 1000;
-#if 0 /* even bash has no -t N.NNN support */
-		ts.tv_sec = bb_strtou(opt_t, &p, 10);
-		ts.tv_usec = 0;
-		/* EINVAL means number is ok, but not terminated by NUL */
-		if (*p == '.' && errno == EINVAL) {
-			char *p2;
-			if (*++p) {
-				int scale;
-				ts.tv_usec = bb_strtou(p, &p2, 10);
-				if (errno)
-					return "invalid timeout";
-				scale = p2 - p;
-				/* normalize to usec */
-				if (scale > 6)
+	}
+	if (opt_t && ENABLE_FEATURE_SH_READ_FRAC) {
+		/* bash 4.3 (maybe earlier) supports -t N.NNNNNN */
+		char *p;
+		/* Eat up to three fractional digits */
+		int frac_digits = 3 + 1;
+
+		end_ms = bb_strtou(opt_t, &p, 10);
+		if (end_ms > UINT_MAX / 2048) /* be safely away from overflow */
+			end_ms = UINT_MAX / 2048;
+
+		if (errno) {
+			/* EINVAL = number is ok, but not NUL terminated */
+			if (errno != EINVAL || *p != '.')
+				return "invalid timeout";
+			/* Do not check the rest: bash allows "0.123456xyz" */
+			while (*++p && --frac_digits) {
+				end_ms *= 10;
+				end_ms += (*p - '0');
+				if ((unsigned char)(*p - '0') > 9)
 					return "invalid timeout";
-				while (scale++ < 6)
-					ts.tv_usec *= 10;
 			}
-		} else if (ts.tv_sec < 0 || errno) {
-			return "invalid timeout";
 		}
-		if (!(ts.tv_sec | ts.tv_usec)) { /* both are 0? */
-			return "invalid timeout";
+		while (--frac_digits > 0) {
+			end_ms *= 10;
 		}
-#endif /* if 0 */
 	}
+
 	fd = STDIN_FILENO;
 	if (opt_u) {
 		fd = bb_strtou(opt_u, NULL, 10);
@@ -127,6 +135,19 @@ shell_builtin_read(void FAST_FUNC (*setv
 			return "invalid file descriptor";
 	}
 
+	if (opt_t && end_ms == 0) {
+		/* "If timeout is 0, read returns immediately, without trying
+		 * to read any data. The exit status is 0 if input is available
+		 * on the specified file descriptor, non-zero otherwise."
+		 * bash seems to ignore -p PROMPT for this use case.
+		 */
+		int r;
+		pfd[0].events = POLLIN;
+		r = poll(pfd, 1, /*timeout:*/ 0);
+		/* Return 0 only if poll returns 1 ("one fd ready"), else return 1: */
+		return (const char *)(uintptr_t)(r <= 0);
+	}
+
 	if (opt_p && isatty(fd)) {
 		fputs(opt_p, stderr);
 		fflush_all();
@@ -161,21 +182,25 @@ shell_builtin_read(void FAST_FUNC (*setv
 	retval = (const char *)(uintptr_t)0;
 	startword = 1;
 	backslash = 0;
-	if (end_ms) /* NB: end_ms stays nonzero: */
-		end_ms = ((unsigned)monotonic_ms() + end_ms) | 1;
+	if (opt_t)
+		end_ms += (unsigned)monotonic_ms();
 	buffer = NULL;
 	bufpos = 0;
+	delim = opt_d ? *opt_d : '\n';
 	do {
 		char c;
-		struct pollfd pfd[1];
 		int timeout;
 
 		if ((bufpos & 0xff) == 0)
 			buffer = xrealloc(buffer, bufpos + 0x101);
 
 		timeout = -1;
-		if (end_ms) {
+		if (opt_t) {
 			timeout = end_ms - (unsigned)monotonic_ms();
+			/* ^^^^^^^^^^^^^ all values are unsigned,
+			 * wrapping math is used here, good even if
+			 * 32-bit unix time wrapped (year 2038+).
+			 */
 			if (timeout <= 0) { /* already late? */
 				retval = (const char *)(uintptr_t)1;
 				goto ret;
@@ -187,9 +212,8 @@ shell_builtin_read(void FAST_FUNC (*setv
 		 * regardless of SA_RESTART-ness of that signal!
 		 */
 		errno = 0;
-		pfd[0].fd = fd;
 		pfd[0].events = POLLIN;
-		if (poll(pfd, 1, timeout) != 1) {
+		if (poll(pfd, 1, timeout) <= 0) {
 			/* timed out, or EINTR */
 			err = errno;
 			retval = (const char *)(uintptr_t)1;
@@ -216,14 +240,14 @@ shell_builtin_read(void FAST_FUNC (*setv
 				continue;
 			}
 		}
-		if (c == '\n')
+		if (c == delim) /* '\n' or -d CHAR */
 			break;
 
 		/* $IFS splitting. NOT done if we run "read"
 		 * without variable names (bash compat).
 		 * Thus, "read" and "read REPLY" are not the same.
 		 */
-		if (argv[0]) {
+		if (!opt_d && argv[0]) {
 /* http://www.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#tag_18_06_05 */
 			const char *is_ifs = strchr(ifs, c);
 			if (startword && is_ifs) {
@@ -272,6 +296,7 @@ shell_builtin_read(void FAST_FUNC (*setv
 
 	errno = err;
 	return retval;
+#undef fd
 }
 
 /* ulimit builtin */
@@ -400,8 +425,8 @@ shell_builtin_ulimit(char **argv)
 	 * ulimit 123 -c2 -l 456
 	 */
 
-	/* In case getopt was already called:
-	 * reset the libc getopt() function, which keeps internal state.
+	/* In case getopt() was already called:
+	 * reset libc getopt() internal state.
 	 */
 	GETOPT_RESET();
 
diff -urpN busybox-1.27.2/shell/shell_common.h busybox-1.28.0/shell/shell_common.h
--- busybox-1.27.2/shell/shell_common.h	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/shell/shell_common.h	2017-08-17 13:50:45.000000000 +0200
@@ -34,6 +34,11 @@ enum {
 	BUILTIN_READ_SILENT = 1 << 0,
 	BUILTIN_READ_RAW    = 1 << 1,
 };
+//TODO? do not provide bashisms if not asked for:
+//#if !ENABLE_HUSH_BASH_COMPAT && !ENABLE_ASH_BASH_COMPAT
+//#define shell_builtin_read(setvar,argv,ifs,read_flags,n,p,t,u,d)
+//	shell_builtin_read(setvar,argv,ifs,read_flags)
+//#endif
 const char* FAST_FUNC
 shell_builtin_read(void FAST_FUNC (*setvar)(const char *name, const char *val),
 	char       **argv,
@@ -42,7 +47,8 @@ shell_builtin_read(void FAST_FUNC (*setv
 	const char *opt_n,
 	const char *opt_p,
 	const char *opt_t,
-	const char *opt_u
+	const char *opt_u,
+	const char *opt_d
 );
 
 int FAST_FUNC
diff -urpN busybox-1.27.2/size_single_applets.sh busybox-1.28.0/size_single_applets.sh
--- busybox-1.27.2/size_single_applets.sh	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/size_single_applets.sh	2017-07-24 18:57:10.000000000 +0200
@@ -0,0 +1,76 @@
+#!/bin/bash
+# The list of all applet config symbols
+test -f include/applets.h || { echo "No include/applets.h file"; exit 1; }
+apps="`
+grep ^IF_ include/applets.h \
+| grep -v ^IF_FEATURE_ \
+| sed 's/IF_\([A-Z0-9._-]*\)(.*/\1/' \
+| sort | uniq
+`"
+
+test $# = 0 && set -- $apps
+
+mintext=999999999
+for app; do
+	b="busybox_${app}"
+	test -f "$b" || continue
+	text=`size "$b" | tail -1 | sed -e's/\t/ /g' -e's/^ *//' -e's/ .*//'`
+	#echo "text from $app: $text"
+	test x"${text//[0123456789]/}" = x"" || {
+		echo "Can't get: size $b"
+		exit 1
+	}
+	test $mintext -gt $text && {
+		mintext=$text
+		echo "New mintext from $app: $mintext"
+	}
+	eval "text_${app}=$text"
+done
+
+for app; do
+	b="busybox_${app}"
+	test -f "$b" || continue
+	eval "text=\$text_${app}"
+	echo "$app adds $((text-mintext))"
+done
+
+grep ^IF_ include/applets.h \
+| grep -v ^IF_FEATURE_ \
+| sed 's/, .*//' \
+| sed 's/\t//g' \
+| sed 's/ //g' \
+| sed 's/(APPLET(/(/' \
+| sed 's/(APPLET_[A-Z]*(/(/' \
+| sed 's/(IF_[A-Z_]*(/(/' \
+| sed 's/IF_\([A-Z0-9._-]*\)(\(.*\)/\1 \2/' \
+| sort | uniq \
+| while read app name; do
+	b="busybox_${app}"
+	test -f "$b" || continue
+
+	file=`grep -lF "bool \"$name" $(find -name '*.c') | xargs`
+	# so far all such items are in .c files; if need to check Config.* files:
+	#test "$file" || file=`grep -lF "bool \"$name" $(find -name 'Config.*') |  xargs`
+	test "$file" || continue
+	#echo "FILE:'$file'"
+
+	eval "text=\$text_${app}"
+	sz=$((text-mintext))
+	sz_kb=$((sz/1000))
+	sz_frac=$(( (sz - sz_kb*1000) ))
+	sz_f=$((sz_frac / 100))
+
+	echo -n "sed 's/bool \"$name *(*[0-9tinykbytes .]*)*\"/"
+	if test "$sz_kb" -ge 10; then
+		echo -n "bool \"$name (${sz_kb} kb)\""
+	elif test "$sz_kb" -gt 0 -a "$sz_f" = 0; then
+		echo -n "bool \"$name (${sz_kb} kb)\""
+	elif test "$sz_kb" -gt 0; then
+		echo -n "bool \"$name ($sz_kb.${sz_f} kb)\""
+	elif test "$sz" -ge 200; then
+		echo -n "bool \"$name ($sz bytes)\""
+	else
+		echo -n "bool \"$name (tiny)\""
+	fi
+	echo "/' -i $file"
+done
diff -urpN busybox-1.27.2/sysklogd/klogd.c busybox-1.28.0/sysklogd/klogd.c
--- busybox-1.27.2/sysklogd/klogd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/sysklogd/klogd.c	2017-07-24 18:57:10.000000000 +0200
@@ -17,14 +17,14 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config KLOGD
-//config:	bool "klogd"
+//config:	bool "klogd (5.5 kb)"
 //config:	default y
 //config:	help
-//config:	  klogd is a utility which intercepts and logs all
-//config:	  messages from the Linux kernel and sends the messages
-//config:	  out to the 'syslogd' utility so they can be logged. If
-//config:	  you wish to record the messages produced by the kernel,
-//config:	  you should enable this option.
+//config:	klogd is a utility which intercepts and logs all
+//config:	messages from the Linux kernel and sends the messages
+//config:	out to the 'syslogd' utility so they can be logged. If
+//config:	you wish to record the messages produced by the kernel,
+//config:	you should enable this option.
 //config:
 //config:comment "klogd should not be used together with syslog to kernel printk buffer"
 //config:	depends on KLOGD && FEATURE_KMSG_SYSLOG
@@ -35,16 +35,16 @@
 //config:	depends on KLOGD
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  The klogd applet supports two interfaces for reading
-//config:	  kernel messages. Linux provides the klogctl() interface
-//config:	  which allows reading messages from the kernel ring buffer
-//config:	  independently from the file system.
+//config:	The klogd applet supports two interfaces for reading
+//config:	kernel messages. Linux provides the klogctl() interface
+//config:	which allows reading messages from the kernel ring buffer
+//config:	independently from the file system.
 //config:
-//config:	  If you answer 'N' here, klogd will use the more portable
-//config:	  approach of reading them from /proc or a device node.
-//config:	  However, this method requires the file to be available.
+//config:	If you answer 'N' here, klogd will use the more portable
+//config:	approach of reading them from /proc or a device node.
+//config:	However, this method requires the file to be available.
 //config:
-//config:	  If in doubt, say 'Y'.
+//config:	If in doubt, say 'Y'.
 
 //applet:IF_KLOGD(APPLET(klogd, BB_DIR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/sysklogd/logger.c busybox-1.28.0/sysklogd/logger.c
--- busybox-1.27.2/sysklogd/logger.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/sysklogd/logger.c	2017-08-17 13:50:45.000000000 +0200
@@ -7,14 +7,14 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config LOGGER
-//config:	bool "logger"
+//config:	bool "logger (6.4 kb)"
 //config:	default y
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	    The logger utility allows you to send arbitrary text
-//config:	    messages to the system log (i.e. the 'syslogd' utility) so
-//config:	    they can be logged. This is generally used to help locate
-//config:	    problems that occur within programs and scripts.
+//config:	The logger utility allows you to send arbitrary text
+//config:	messages to the system log (i.e. the 'syslogd' utility) so
+//config:	they can be logged. This is generally used to help locate
+//config:	problems that occur within programs and scripts.
 
 //applet:IF_LOGGER(APPLET(logger, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -77,14 +77,14 @@ static int pencode(char *s)
 		;
 	if (*s) {
 		*s = '\0';
-		fac = decode(save, facilitynames);
+		fac = decode(save, bb_facilitynames);
 		if (fac < 0)
 			bb_error_msg_and_die("unknown %s name: %s", "facility", save);
 		*s++ = '.';
 	} else {
 		s = save;
 	}
-	lev = decode(s, prioritynames);
+	lev = decode(s, bb_prioritynames);
 	if (lev < 0)
 		bb_error_msg_and_die("unknown %s name: %s", "priority", save);
 	return ((lev & LOG_PRIMASK) | (fac & LOG_FACMASK));
@@ -167,7 +167,7 @@ int logger_main(int argc UNUSED_PARAM, c
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
diff -urpN busybox-1.27.2/sysklogd/logread.c busybox-1.28.0/sysklogd/logread.c
--- busybox-1.27.2/sysklogd/logread.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/sysklogd/logread.c	2017-07-24 18:57:10.000000000 +0200
@@ -9,26 +9,26 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config LOGREAD
-//config:	bool "logread"
+//config:	bool "logread (6 kb)"
 //config:	default y
 //WRONG: it should be compilable without SYSLOG=y:
 //WRONG:	depends on FEATURE_IPC_SYSLOG
 //config:	help
-//config:	  If you enabled Circular Buffer support, you almost
-//config:	  certainly want to enable this feature as well. This
-//config:	  utility will allow you to read the messages that are
-//config:	  stored in the syslogd circular buffer.
+//config:	If you enabled Circular Buffer support, you almost
+//config:	certainly want to enable this feature as well. This
+//config:	utility will allow you to read the messages that are
+//config:	stored in the syslogd circular buffer.
 //config:
 //config:config FEATURE_LOGREAD_REDUCED_LOCKING
 //config:	bool "Double buffering"
 //config:	default y
 //config:	depends on LOGREAD
 //config:	help
-//config:	  'logread' output to slow serial terminals can have
-//config:	  side effects on syslog because of the semaphore.
-//config:	  This option make logread to double buffer copy
-//config:	  from circular buffer, minimizing semaphore
-//config:	  contention at some minor memory expense.
+//config:	'logread' output to slow serial terminals can have
+//config:	side effects on syslog because of the semaphore.
+//config:	This option make logread to double buffer copy
+//config:	from circular buffer, minimizing semaphore
+//config:	contention at some minor memory expense.
 //config:
 
 //applet:IF_LOGREAD(APPLET(logread, BB_DIR_SBIN, BB_SUID_DROP))
diff -urpN busybox-1.27.2/sysklogd/syslogd.c busybox-1.28.0/sysklogd/syslogd.c
--- busybox-1.27.2/sysklogd/syslogd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/sysklogd/syslogd.c	2017-08-17 13:50:45.000000000 +0200
@@ -13,56 +13,56 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config SYSLOGD
-//config:	bool "syslogd"
+//config:	bool "syslogd (12 kb)"
 //config:	default y
 //config:	help
-//config:	  The syslogd utility is used to record logs of all the
-//config:	  significant events that occur on a system. Every
-//config:	  message that is logged records the date and time of the
-//config:	  event, and will generally also record the name of the
-//config:	  application that generated the message. When used in
-//config:	  conjunction with klogd, messages from the Linux kernel
-//config:	  can also be recorded. This is terribly useful,
-//config:	  especially for finding what happened when something goes
-//config:	  wrong. And something almost always will go wrong if
-//config:	  you wait long enough....
+//config:	The syslogd utility is used to record logs of all the
+//config:	significant events that occur on a system. Every
+//config:	message that is logged records the date and time of the
+//config:	event, and will generally also record the name of the
+//config:	application that generated the message. When used in
+//config:	conjunction with klogd, messages from the Linux kernel
+//config:	can also be recorded. This is terribly useful,
+//config:	especially for finding what happened when something goes
+//config:	wrong. And something almost always will go wrong if
+//config:	you wait long enough....
 //config:
 //config:config FEATURE_ROTATE_LOGFILE
 //config:	bool "Rotate message files"
 //config:	default y
 //config:	depends on SYSLOGD
 //config:	help
-//config:	  This enables syslogd to rotate the message files
-//config:	  on his own. No need to use an external rotate script.
+//config:	This enables syslogd to rotate the message files
+//config:	on his own. No need to use an external rotate script.
 //config:
 //config:config FEATURE_REMOTE_LOG
 //config:	bool "Remote Log support"
 //config:	default y
 //config:	depends on SYSLOGD
 //config:	help
-//config:	  When you enable this feature, the syslogd utility can
-//config:	  be used to send system log messages to another system
-//config:	  connected via a network. This allows the remote
-//config:	  machine to log all the system messages, which can be
-//config:	  terribly useful for reducing the number of serial
-//config:	  cables you use. It can also be a very good security
-//config:	  measure to prevent system logs from being tampered with
-//config:	  by an intruder.
+//config:	When you enable this feature, the syslogd utility can
+//config:	be used to send system log messages to another system
+//config:	connected via a network. This allows the remote
+//config:	machine to log all the system messages, which can be
+//config:	terribly useful for reducing the number of serial
+//config:	cables you use. It can also be a very good security
+//config:	measure to prevent system logs from being tampered with
+//config:	by an intruder.
 //config:
 //config:config FEATURE_SYSLOGD_DUP
 //config:	bool "Support -D (drop dups) option"
 //config:	default y
 //config:	depends on SYSLOGD
 //config:	help
-//config:	  Option -D instructs syslogd to drop consecutive messages
-//config:	  which are totally the same.
+//config:	Option -D instructs syslogd to drop consecutive messages
+//config:	which are totally the same.
 //config:
 //config:config FEATURE_SYSLOGD_CFG
 //config:	bool "Support syslog.conf"
 //config:	default y
 //config:	depends on SYSLOGD
 //config:	help
-//config:	  Supports restricted syslogd config. See docs/syslog.conf.txt
+//config:	Supports restricted syslogd config. See docs/syslog.conf.txt
 //config:
 //config:config FEATURE_SYSLOGD_READ_BUFFER_SIZE
 //config:	int "Read buffer size in bytes"
@@ -70,23 +70,23 @@
 //config:	range 256 20000
 //config:	depends on SYSLOGD
 //config:	help
-//config:	  This option sets the size of the syslog read buffer.
-//config:	  Actual memory usage increases around five times the
-//config:	  change done here.
+//config:	This option sets the size of the syslog read buffer.
+//config:	Actual memory usage increases around five times the
+//config:	change done here.
 //config:
 //config:config FEATURE_IPC_SYSLOG
 //config:	bool "Circular Buffer support"
 //config:	default y
 //config:	depends on SYSLOGD
 //config:	help
-//config:	  When you enable this feature, the syslogd utility will
-//config:	  use a circular buffer to record system log messages.
-//config:	  When the buffer is filled it will continue to overwrite
-//config:	  the oldest messages. This can be very useful for
-//config:	  systems with little or no permanent storage, since
-//config:	  otherwise system logs can eventually fill up your
-//config:	  entire filesystem, which may cause your system to
-//config:	  break badly.
+//config:	When you enable this feature, the syslogd utility will
+//config:	use a circular buffer to record system log messages.
+//config:	When the buffer is filled it will continue to overwrite
+//config:	the oldest messages. This can be very useful for
+//config:	systems with little or no permanent storage, since
+//config:	otherwise system logs can eventually fill up your
+//config:	entire filesystem, which may cause your system to
+//config:	break badly.
 //config:
 //config:config FEATURE_IPC_SYSLOG_BUFFER_SIZE
 //config:	int "Circular buffer size in Kbytes (minimum 4KB)"
@@ -94,8 +94,8 @@
 //config:	range 4 2147483647
 //config:	depends on FEATURE_IPC_SYSLOG
 //config:	help
-//config:	  This option sets the size of the circular buffer
-//config:	  used to record system log messages.
+//config:	This option sets the size of the circular buffer
+//config:	used to record system log messages.
 //config:
 //config:config FEATURE_KMSG_SYSLOG
 //config:	bool "Linux kernel printk buffer support"
@@ -103,12 +103,12 @@
 //config:	depends on SYSLOGD
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  When you enable this feature, the syslogd utility will
-//config:	  write system log message to the Linux kernel's printk buffer.
-//config:	  This can be used as a smaller alternative to the syslogd IPC
-//config:	  support, as klogd and logread aren't needed.
+//config:	When you enable this feature, the syslogd utility will
+//config:	write system log message to the Linux kernel's printk buffer.
+//config:	This can be used as a smaller alternative to the syslogd IPC
+//config:	support, as klogd and logread aren't needed.
 //config:
-//config:	  NOTICE: Syslog facilities in log entries needs kernel 3.5+.
+//config:	NOTICE: Syslog facilities in log entries needs kernel 3.5+.
 
 //applet:IF_SYSLOGD(APPLET(syslogd, BB_DIR_SBIN, BB_SUID_DROP))
 
@@ -447,7 +447,7 @@ static void parse_syslogdcfg(const char
 				primap = 0xff; /* all 8 log levels enabled */
 			else {
 				uint8_t priority;
-				code = find_by_name(t, prioritynames);
+				code = find_by_name(t, bb_prioritynames);
 				if (!code)
 					goto cfgerr;
 				primap = 0;
@@ -480,7 +480,7 @@ static void parse_syslogdcfg(const char
 					next_facility = strchr(t, ',');
 					if (next_facility)
 						*next_facility++ = '\0';
-					code = find_by_name(t, facilitynames);
+					code = find_by_name(t, bb_facilitynames);
 					if (!code)
 						goto cfgerr;
 					/* "mark" is not a real facility, skip it */
@@ -797,9 +797,9 @@ static void parse_fac_prio_20(int pri, c
 {
 	const CODE *c_pri, *c_fac;
 
-	c_fac = find_by_val(LOG_FAC(pri) << 3, facilitynames);
+	c_fac = find_by_val(LOG_FAC(pri) << 3, bb_facilitynames);
 	if (c_fac) {
-		c_pri = find_by_val(LOG_PRI(pri), prioritynames);
+		c_pri = find_by_val(LOG_PRI(pri), bb_prioritynames);
 		if (c_pri) {
 			snprintf(res20, 20, "%s.%s", c_fac->c_name, c_pri->c_name);
 			return;
@@ -1109,8 +1109,7 @@ int syslogd_main(int argc UNUSED_PARAM,
 	INIT_G();
 
 	/* No non-option params */
-	opt_complementary = "=0";
-	opts = getopt32(argv, OPTION_STR, OPTION_PARAM);
+	opts = getopt32(argv, "^"OPTION_STR"\0""=0", OPTION_PARAM);
 #if ENABLE_FEATURE_REMOTE_LOG
 	while (remoteAddrList) {
 		remoteHost_t *rh = xzalloc(sizeof(*rh));
diff -urpN busybox-1.27.2/sysklogd/syslogd_and_logger.c busybox-1.28.0/sysklogd/syslogd_and_logger.c
--- busybox-1.27.2/sysklogd/syslogd_and_logger.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/sysklogd/syslogd_and_logger.c	2017-10-20 10:36:58.000000000 +0200
@@ -6,7 +6,6 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 #include "libbb.h"
 #include "common_bufsiz.h"
 #define SYSLOG_NAMES
@@ -43,6 +42,17 @@ typedef struct _code {
  */
 #endif
 
+/* musl decided to be funny and it implements these as giant defines
+ * of the form: ((CODE *)(const CODE []){ ... })
+ * Which works, but causes _every_ function using them
+ * to have a copy on stack (at least with gcc-6.3.0).
+ * If we reference them just once, this saves 150 bytes.
+ * The pointers themselves are optimized out
+ * (no size change on uclibc).
+ */
+static const CODE *const bb_prioritynames = prioritynames;
+static const CODE *const bb_facilitynames = facilitynames;
+
 #if ENABLE_SYSLOGD
 #include "syslogd.c"
 #endif
diff -urpN busybox-1.27.2/testsuite/mdev.tests busybox-1.28.0/testsuite/mdev.tests
--- busybox-1.27.2/testsuite/mdev.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/testsuite/mdev.tests	2017-08-08 14:08:06.000000000 +0200
@@ -168,7 +168,7 @@ SKIP=
 # continuing to use directory structure from prev test
 rm -rf mdev.testdir/dev/*
 echo "sda 0:0 644 @echo @echo TEST" >mdev.testdir/etc/mdev.conf
-optional STATIC FEATURE_MDEV_CONF FEATURE_MDEV_EXEC FEATURE_LS_RECURSIVE FEATURE_LS_TIMESTAMPS FEATURE_LS_USERNAME FEATURE_SH_IS_ASH ASH_ECHO
+optional STATIC FEATURE_MDEV_CONF FEATURE_MDEV_EXEC FEATURE_LS_RECURSIVE FEATURE_LS_TIMESTAMPS FEATURE_LS_USERNAME SH_IS_ASH ASH_ECHO
 testing "mdev command" \
 	"env - PATH=$PATH ACTION=add DEVPATH=/block/sda chroot mdev.testdir /mdev 2>&1;
 	ls -lnR mdev.testdir/dev | $FILTER_LS" \
@@ -183,7 +183,7 @@ SKIP=
 # continuing to use directory structure from prev test
 rm -rf mdev.testdir/dev/*
 echo "sda 0:0 644 =block/ @echo @echo TEST:\$MDEV" >mdev.testdir/etc/mdev.conf
-optional STATIC FEATURE_MDEV_CONF FEATURE_MDEV_RENAME FEATURE_MDEV_EXEC FEATURE_LS_RECURSIVE FEATURE_LS_TIMESTAMPS FEATURE_LS_USERNAME FEATURE_SH_IS_ASH
+optional STATIC FEATURE_MDEV_CONF FEATURE_MDEV_RENAME FEATURE_MDEV_EXEC FEATURE_LS_RECURSIVE FEATURE_LS_TIMESTAMPS FEATURE_LS_USERNAME SH_IS_ASH
 testing "mdev move and command" \
 	"env - PATH=$PATH ACTION=add DEVPATH=/block/sda chroot mdev.testdir /mdev 2>&1;
 	ls -lnR mdev.testdir/dev | $FILTER_LS2" \
diff -urpN busybox-1.27.2/testsuite/msh/msh-supports-underscores-in-variable-names busybox-1.28.0/testsuite/msh/msh-supports-underscores-in-variable-names
--- busybox-1.27.2/testsuite/msh/msh-supports-underscores-in-variable-names	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/testsuite/msh/msh-supports-underscores-in-variable-names	1970-01-01 01:00:00.000000000 +0100
@@ -1 +0,0 @@
-test "`busybox msh -c 'FOO_BAR=foo; echo $FOO_BAR'`" = foo
diff -urpN busybox-1.27.2/testsuite/od.tests busybox-1.28.0/testsuite/od.tests
--- busybox-1.27.2/testsuite/od.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/testsuite/od.tests	2017-07-24 18:57:10.000000000 +0200
@@ -16,6 +16,16 @@ testing "od -b" \
 	"" "HELLO"
 SKIP=
 
+optional DESKTOP
+testing "od -f" \
+	"od -f" \
+"\
+0000000   0.0000000e+00   0.0000000e+00
+0000010
+" \
+	"" "\x00\x00\x00\x00\x00\x00\x00\x00"
+SKIP=
+
 optional DESKTOP LONG_OPTS
 testing "od -b --traditional" \
 	"od -b --traditional" \
diff -urpN busybox-1.27.2/testsuite/parse.tests busybox-1.28.0/testsuite/parse.tests
--- busybox-1.27.2/testsuite/parse.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/testsuite/parse.tests	2017-08-08 14:08:06.000000000 +0200
@@ -5,13 +5,13 @@
 
 . ./testing.sh
 
-COLLAPSE=$(( 0x00010000))
-TRIM=$((     0x00020000))
-GREEDY=$((   0x00040000))
-MIN_DIE=$((  0x00100000))
-KEEP_COPY=$((0x00200000))
-ESCAPE=$((   0x00400000))
-NORMAL=$((   COLLAPSE | TRIM | GREEDY))
+COLLAPSE=$((    0x00010000))
+TRIM=$((        0x00020000))
+GREEDY=$((      0x00040000))
+MIN_DIE=$((     0x00100000))
+KEEP_COPY=$((   0x00200000))
+EOL_COMMENTS=$((0x00400000))
+NORMAL=$((   COLLAPSE | TRIM | GREEDY | EOL_COMMENTS))
 
 # testing "description" "command" "result" "infile" "stdin"
 
@@ -27,6 +27,34 @@ testing "parse notrim" \
 	"-" \
 	" sda 0:0 644 @echo @echo TEST \n"
 
+testing "parse comments" \
+	"parse -n 4 -m 3 -f $((NORMAL - EOL_COMMENTS)) -" \
+	"[sda][0:0][644][@echo @echo TEST #this is not eaten]\n" \
+	"-" \
+	"\
+# sda 0:0 644 @echo @echo TEST - this gets eaten
+ sda 0:0 644 @echo @echo TEST #this is not eaten
+"
+
+testing "parse bad comment" \
+	"parse -n 2 -m 2 -d '#=' -f $((GREEDY)) - 2>&1" \
+	"\
+[var][val]
+parse: bad line 3: 1 tokens found, 2 needed
+[  #this][ok]
+[  #this][=ok]
+[  #this][=ok=ok=ok=]
+" \
+	"-" \
+	"\
+# this gets eaten
+var=val
+  #this causes error msg
+  #this=ok
+  #this==ok
+  #this==ok=ok=ok=
+"
+
 FILE=__parse
 cat >$FILE <<EOF
 #
@@ -96,6 +124,8 @@ cat >$FILE.res <<EOF
 [option][dns][129.219.13.81]
 [option][domain][local]
 [option][lease][864000]
+[option][msstaticroutes][10.0.0.0/8][10.127.0.1]
+[option][staticroutes][10.0.0.0/8][10.127.0.1,][10.11.12.0/24][10.11.12.1]
 [option][0x08][01020304]
 EOF
 
diff -urpN busybox-1.27.2/testsuite/sed.tests busybox-1.28.0/testsuite/sed.tests
--- busybox-1.27.2/testsuite/sed.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/testsuite/sed.tests	2017-09-07 14:42:40.000000000 +0200
@@ -387,6 +387,12 @@ testing "sed 's///w FILE'" \
 	"" \
 	"123\nqwe\nasd\n"
 
+testing "sed uses previous regexp" \
+	"sed '/w/p;//q'" \
+	"q\nw\nw\n" \
+	"" \
+	"q\nw\ne\nr\n"
+
 # testing "description" "commands" "result" "infile" "stdin"
 
 exit $FAILCOUNT
diff -urpN busybox-1.27.2/testsuite/tar.tests busybox-1.28.0/testsuite/tar.tests
--- busybox-1.27.2/testsuite/tar.tests	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/testsuite/tar.tests	2017-08-17 13:50:45.000000000 +0200
@@ -10,9 +10,6 @@ unset LC_COLLATE
 unset LC_ALL
 umask 022
 
-rm -rf tar.tempdir 2>/dev/null
-mkdir tar.tempdir && cd tar.tempdir || exit 1
-
 # testing "test name" "script" "expected result" "file input" "stdin"
 
 testing "Empty file is not a tarball" '\
@@ -53,6 +50,7 @@ dd if=/dev/zero bs=512 count=20 2>/dev/n
 "" ""
 SKIP=
 
+mkdir tar.tempdir && cd tar.tempdir || exit 1
 # "tar cf test.tar input input_dir/ input_hard1 input_hard2 input_hard1 input_dir/ input":
 # GNU tar 1.26 records as hardlinks:
 #  input_hard2 -> input_hard1
@@ -64,7 +62,6 @@ SKIP=
 # We also don't use "hrw-r--r--" notation for hardlinks in "tar tv" listing.
 optional FEATURE_TAR_CREATE FEATURE_LS_SORTFILES
 testing "tar hardlinks and repeated files" '\
-rm -rf input_* test.tar 2>/dev/null
 >input_hard1
 ln input_hard1 input_hard2
 mkdir input_dir
@@ -95,10 +92,11 @@ drwxr-xr-x input_dir
 " \
 "" ""
 SKIP=
+cd .. || exit 1; rm -rf tar.tempdir 2>/dev/null
 
+mkdir tar.tempdir && cd tar.tempdir || exit 1
 optional FEATURE_TAR_CREATE FEATURE_LS_SORTFILES
 testing "tar hardlinks mode" '\
-rm -rf input_* test.tar 2>/dev/null
 >input_hard1
 chmod 741 input_hard1
 ln input_hard1 input_hard2
@@ -128,10 +126,11 @@ Ok: 0
 " \
 "" ""
 SKIP=
+cd .. || exit 1; rm -rf tar.tempdir 2>/dev/null
 
+mkdir tar.tempdir && cd tar.tempdir || exit 1
 optional FEATURE_TAR_CREATE FEATURE_LS_SORTFILES
 testing "tar symlinks mode" '\
-rm -rf input_* test.tar 2>/dev/null
 >input_file
 chmod 741 input_file
 ln -s input_file input_soft
@@ -159,10 +158,11 @@ lrwxrwxrwx input_file
 " \
 "" ""
 SKIP=
+cd .. || exit 1; rm -rf tar.tempdir 2>/dev/null
 
+mkdir tar.tempdir && cd tar.tempdir || exit 1
 optional FEATURE_TAR_CREATE FEATURE_TAR_LONG_OPTIONS
 testing "tar --overwrite" "\
-rm -rf input_* test.tar 2>/dev/null
 ln input input_hard
 tar cf test.tar input_hard
 echo WRONG >input
@@ -174,12 +174,13 @@ Ok
 " \
 "Ok\n" ""
 SKIP=
+cd .. || exit 1; rm -rf tar.tempdir 2>/dev/null
 
+mkdir tar.tempdir && cd tar.tempdir || exit 1
 test x"$SKIP_KNOWN_BUGS" = x"" && {
 # Needs to be run under non-root for meaningful test
 optional FEATURE_TAR_CREATE
 testing "tar writing into read-only dir" '\
-rm -rf input_* test.tar 2>/dev/null
 mkdir input_dir
 >input_dir/input_file
 chmod 550 input_dir
@@ -201,7 +202,9 @@ dr-xr-x--- input_dir
 "" ""
 SKIP=
 }
+cd .. || exit 1; rm -rf tar.tempdir 2>/dev/null
 
+mkdir tar.tempdir && cd tar.tempdir || exit 1
 # Had a bug where on extract autodetect first "switched off" -z
 # and then failed to recognize .tgz extension
 optional FEATURE_TAR_CREATE FEATURE_SEAMLESS_GZ GUNZIP
@@ -217,7 +220,9 @@ Ok
 " \
 "" ""
 SKIP=
+cd .. || exit 1; rm -rf tar.tempdir 2>/dev/null
 
+mkdir tar.tempdir && cd tar.tempdir || exit 1
 # Do we detect XZ-compressed data (even w/o .tar.xz or txz extension)?
 # (the uuencoded hello_world.txz contains one empty file named "hello_world")
 optional UUDECODE FEATURE_TAR_AUTODETECT FEATURE_SEAMLESS_XZ
@@ -236,7 +241,9 @@ AAAEWVo=
 ====
 "
 SKIP=
+cd .. || exit 1; rm -rf tar.tempdir 2>/dev/null
 
+mkdir tar.tempdir && cd tar.tempdir || exit 1
 # On extract, everything up to and including last ".." component is stripped
 optional FEATURE_TAR_CREATE
 testing "tar strips /../ on extract" "\
@@ -255,7 +262,9 @@ Ok
 " \
 "" ""
 SKIP=
+cd .. || exit 1; rm -rf tar.tempdir 2>/dev/null
 
+mkdir tar.tempdir && cd tar.tempdir || exit 1
 # attack.tar.bz2 has symlink pointing to a system file
 # followed by a regular file with the same name
 # containing "root::0:0::/root:/bin/sh":
@@ -270,6 +279,7 @@ optional UUDECODE FEATURE_TAR_AUTODETECT
 testing "tar does not extract into symlinks" "\
 >>/tmp/passwd && uudecode -o input && tar xf input 2>&1 && rm passwd; cat /tmp/passwd; echo \$?
 " "\
+tar: skipping unsafe symlink to '/tmp/passwd' in archive, set EXTRACT_UNSAFE_SYMLINKS=1 to extract
 0
 " \
 "" "\
@@ -281,12 +291,15 @@ l4/V8LDoe90yiWJhOJvIypgEfxdyRThQkBVn/bI=
 ====
 "
 SKIP=
+cd .. || exit 1; rm -rf tar.tempdir 2>/dev/null
+
+mkdir tar.tempdir && cd tar.tempdir || exit 1
 # And same with -k
 optional UUDECODE FEATURE_TAR_AUTODETECT FEATURE_SEAMLESS_BZ2
 testing "tar -k does not extract into symlinks" "\
 >>/tmp/passwd && uudecode -o input && tar xf input -k 2>&1 && rm passwd; cat /tmp/passwd; echo \$?
 " "\
-tar: can't open 'passwd': File exists
+tar: skipping unsafe symlink to '/tmp/passwd' in archive, set EXTRACT_UNSAFE_SYMLINKS=1 to extract
 0
 " \
 "" "\
@@ -298,7 +311,9 @@ l4/V8LDoe90yiWJhOJvIypgEfxdyRThQkBVn/bI=
 ====
 "
 SKIP=
+cd .. || exit 1; rm -rf tar.tempdir 2>/dev/null
 
+mkdir tar.tempdir && cd tar.tempdir || exit 1
 optional UNICODE_SUPPORT FEATURE_TAR_GNU_EXTENSIONS FEATURE_SEAMLESS_BZ2 FEATURE_TAR_AUTODETECT
 testing "Pax-encoded UTF8 names and symlinks" '\
 tar xvf ../tar.utf8.tar.bz2 2>&1; echo $?
@@ -309,17 +324,45 @@ rm -rf etc usr
 ' "\
 etc/ssl/certs/3b2716e5.0
 etc/ssl/certs/EBG_Elektronik_Sertifika_Hizmet_Sağlayıcısı.pem
+tar: skipping unsafe symlink to '/usr/share/ca-certificates/mozilla/EBG_Elektronik_Sertifika_Hizmet_Sağlayıcısı.crt' in archive, set EXTRACT_UNSAFE_SYMLINKS=1 to extract
 etc/ssl/certs/f80cc7f6.0
 usr/share/ca-certificates/mozilla/EBG_Elektronik_Sertifika_Hizmet_Sağlayıcısı.crt
 0
 etc/ssl/certs/3b2716e5.0 -> EBG_Elektronik_Sertifika_Hizmet_Sağlayıcısı.pem
-etc/ssl/certs/EBG_Elektronik_Sertifika_Hizmet_Sağlayıcısı.pem -> /usr/share/ca-certificates/mozilla/EBG_Elektronik_Sertifika_Hizmet_Sağlayıcısı.crt
 etc/ssl/certs/f80cc7f6.0 -> EBG_Elektronik_Sertifika_Hizmet_Sağlayıcısı.pem
 " \
 "" ""
 SKIP=
+cd .. || exit 1; rm -rf tar.tempdir 2>/dev/null
 
-
-cd .. && rm -rf tar.tempdir || exit 1
+mkdir tar.tempdir && cd tar.tempdir || exit 1
+optional FEATURE_SEAMLESS_BZ2 FEATURE_TAR_AUTODETECT
+testing "Symlink attack: create symlink and then write through it" '\
+exec 2>&1
+uudecode -o input && tar xvf input; echo $?
+ls /tmp/bb_test_evilfile
+ls bb_test_evilfile
+ls symlink/bb_test_evilfile
+' "\
+anything.txt
+symlink
+tar: skipping unsafe symlink to '/tmp' in archive, set EXTRACT_UNSAFE_SYMLINKS=1 to extract
+symlink/bb_test_evilfile
+0
+ls: /tmp/bb_test_evilfile: No such file or directory
+ls: bb_test_evilfile: No such file or directory
+symlink/bb_test_evilfile
+" \
+"" "\
+begin-base64 644 tar_symlink_attack.tar.bz2
+QlpoOTFBWSZTWZgs7bQAALT/hMmQAFBAAf+AEMAGJPPv32AAAIAIMAC5thlR
+omAjAmCMADQT1BqNE0AEwAAjAEwElTKeo9NTR6h6gaeoA0DQNLVdwZZ5iNTk
+AQwCAV6S00QFJYhrlfFkVCEDEGtgNVqYrI0uK3ggnt30gqk4e1TTQm5QIAKa
+SJqzRGSFLMmOloHSAcvLiFxxRiQtQZF+qPxbo173ZDISOAoNoPN4PQPhBhKS
+n8fYaKlioCTzL2oXYczyUUIP4u5IpwoSEwWdtoA=
+====
+"
+SKIP=
+cd .. || exit 1; rm -rf tar.tempdir 2>/dev/null
 
 exit $FAILCOUNT
diff -urpN busybox-1.27.2/util-linux/Config.src busybox-1.28.0/util-linux/Config.src
--- busybox-1.27.2/util-linux/Config.src	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/Config.src	2017-07-24 18:57:10.000000000 +0200
@@ -15,29 +15,29 @@ config FEATURE_MOUNT_LOOP
 	default y
 	depends on MOUNT || UMOUNT
 	help
-	  Enabling this feature allows automatic mounting of files (containing
-	  filesystem images) via the linux kernel's loopback devices.
-	  The mount command will detect you are trying to mount a file instead
-	  of a block device, and transparently associate the file with a
-	  loopback device. The umount command will also free that loopback
-	  device.
-
-	  You can still use the 'losetup' utility (to manually associate files
-	  with loop devices) if you need to do something advanced, such as
-	  specify an offset or cryptographic options to the loopback device.
-	  (If you don't want umount to free the loop device, use "umount -D".)
+	Enabling this feature allows automatic mounting of files (containing
+	filesystem images) via the linux kernel's loopback devices.
+	The mount command will detect you are trying to mount a file instead
+	of a block device, and transparently associate the file with a
+	loopback device. The umount command will also free that loopback
+	device.
+
+	You can still use the 'losetup' utility (to manually associate files
+	with loop devices) if you need to do something advanced, such as
+	specify an offset or cryptographic options to the loopback device.
+	(If you don't want umount to free the loop device, use "umount -D".)
 
 config FEATURE_MOUNT_LOOP_CREATE
 	bool "Create new loopback devices if needed"
 	default y
 	depends on FEATURE_MOUNT_LOOP
 	help
-	  Linux kernels >= 2.6.24 support unlimited loopback devices. They are
-	  allocated for use when trying to use a loop device. The loop device
-	  must however exist.
+	Linux kernels >= 2.6.24 support unlimited loopback devices. They are
+	allocated for use when trying to use a loop device. The loop device
+	must however exist.
 
-	  This feature lets mount to try to create next /dev/loopN device
-	  if it does not find a free one.
+	This feature lets mount to try to create next /dev/loopN device
+	if it does not find a free one.
 
 config FEATURE_MTAB_SUPPORT
 	bool "Support old /etc/mtab file"
@@ -45,23 +45,23 @@ config FEATURE_MTAB_SUPPORT
 	depends on MOUNT || UMOUNT
 	select FEATURE_MOUNT_FAKE
 	help
-	  Historically, Unix systems kept track of the currently mounted
-	  partitions in the file "/etc/mtab". These days, the kernel exports
-	  the list of currently mounted partitions in "/proc/mounts", rendering
-	  the old mtab file obsolete. (In modern systems, /etc/mtab should be
-	  a symlink to /proc/mounts.)
-
-	  The only reason to have mount maintain an /etc/mtab file itself is if
-	  your stripped-down embedded system does not have a /proc directory.
-	  If you must use this, keep in mind it's inherently brittle (for
-	  example a mount under chroot won't update it), can't handle modern
-	  features like separate per-process filesystem namespaces, requires
-	  that your /etc directory be writable, tends to get easily confused
-	  by --bind or --move mounts, won't update if you rename a directory
-	  that contains a mount point, and so on. (In brief: avoid.)
+	Historically, Unix systems kept track of the currently mounted
+	partitions in the file "/etc/mtab". These days, the kernel exports
+	the list of currently mounted partitions in "/proc/mounts", rendering
+	the old mtab file obsolete. (In modern systems, /etc/mtab should be
+	a symlink to /proc/mounts.)
+
+	The only reason to have mount maintain an /etc/mtab file itself is if
+	your stripped-down embedded system does not have a /proc directory.
+	If you must use this, keep in mind it's inherently brittle (for
+	example a mount under chroot won't update it), can't handle modern
+	features like separate per-process filesystem namespaces, requires
+	that your /etc directory be writable, tends to get easily confused
+	by --bind or --move mounts, won't update if you rename a directory
+	that contains a mount point, and so on. (In brief: avoid.)
 
-	  About the only reason to use this is if you've removed /proc from
-	  your kernel.
+	About the only reason to use this is if you've removed /proc from
+	your kernel.
 
 source util-linux/volume_id/Config.in
 
diff -urpN busybox-1.27.2/util-linux/acpid.c busybox-1.28.0/util-linux/acpid.c
--- busybox-1.27.2/util-linux/acpid.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/acpid.c	2017-08-17 13:50:45.000000000 +0200
@@ -7,27 +7,27 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config ACPID
-//config:	bool "acpid"
+//config:	bool "acpid (8.7 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  acpid listens to ACPI events coming either in textual form from
-//config:	  /proc/acpi/event (though it is marked deprecated it is still widely
-//config:	  used and _is_ a standard) or in binary form from specified evdevs
-//config:	  (just use /dev/input/event*).
+//config:	acpid listens to ACPI events coming either in textual form from
+//config:	/proc/acpi/event (though it is marked deprecated it is still widely
+//config:	used and _is_ a standard) or in binary form from specified evdevs
+//config:	(just use /dev/input/event*).
 //config:
-//config:	  It parses the event to retrieve ACTION and a possible PARAMETER.
-//config:	  It then spawns /etc/acpi/<ACTION>[/<PARAMETER>] either via run-parts
-//config:	  (if the resulting path is a directory) or directly as an executable.
+//config:	It parses the event to retrieve ACTION and a possible PARAMETER.
+//config:	It then spawns /etc/acpi/<ACTION>[/<PARAMETER>] either via run-parts
+//config:	(if the resulting path is a directory) or directly as an executable.
 //config:
-//config:	  N.B. acpid relies on run-parts so have the latter installed.
+//config:	N.B. acpid relies on run-parts so have the latter installed.
 //config:
 //config:config FEATURE_ACPID_COMPAT
 //config:	bool "Accept and ignore redundant options"
 //config:	default y
 //config:	depends on ACPID
 //config:	help
-//config:	  Accept and ignore compatibility options -g -m -s -S -v.
+//config:	Accept and ignore compatibility options -g -m -s -S -v.
 
 //applet:IF_ACPID(APPLET(acpid, BB_DIR_SBIN, BB_SUID_DROP))
 
@@ -264,8 +264,12 @@ int acpid_main(int argc UNUSED_PARAM, ch
 
 	INIT_G();
 
-	opt_complementary = "df:e--e";
-	opts = getopt32(argv, "c:de:fl:a:M:" IF_FEATURE_PIDFILE("p:") IF_FEATURE_ACPID_COMPAT("g:m:s:S:v"),
+	opts = getopt32(argv, "^"
+		"c:de:fl:a:M:"
+		IF_FEATURE_PIDFILE("p:")
+		IF_FEATURE_ACPID_COMPAT("g:m:s:S:v")
+		"\0"
+		"df:e--e",
 		&opt_dir, &opt_input, &opt_logfile, &opt_action, &opt_map
 		IF_FEATURE_PIDFILE(, &opt_pidfile)
 		IF_FEATURE_ACPID_COMPAT(, NULL, NULL, NULL, NULL)
diff -urpN busybox-1.27.2/util-linux/blkdiscard.c busybox-1.28.0/util-linux/blkdiscard.c
--- busybox-1.27.2/util-linux/blkdiscard.c	2017-07-18 19:14:50.000000000 +0200
+++ busybox-1.28.0/util-linux/blkdiscard.c	2017-12-04 16:07:47.000000000 +0100
@@ -6,13 +6,15 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config BLKDISCARD
-//config:	bool "blkdiscard"
+//config:	bool "blkdiscard (5.3 kb)"
 //config:	default y
+//config:	select PLATFORM_LINUX
 //config:	help
-//config:	  blkdiscard discards sectors on a given device.
+//config:	blkdiscard discards sectors on a given device.
+
+//applet:IF_BLKDISCARD(APPLET_NOEXEC(blkdiscard, blkdiscard, BB_DIR_USR_BIN, BB_SUID_DROP, blkdiscard))
 
 //kbuild:lib-$(CONFIG_BLKDISCARD) += blkdiscard.o
-//applet:IF_BLKDISCARD(APPLET(blkdiscard, BB_DIR_USR_BIN, BB_SUID_DROP))
 
 //usage:#define blkdiscard_trivial_usage
 //usage:       "[-o OFS] [-l LEN] [-s] DEVICE"
@@ -28,6 +30,13 @@
 #include "libbb.h"
 #include <linux/fs.h>
 
+#ifndef BLKDISCARD
+#define BLKDISCARD 0x1277
+#endif
+#ifndef BLKSECDISCARD
+#define BLKSECDISCARD 0x127d
+#endif
+
 int blkdiscard_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int blkdiscard_main(int argc UNUSED_PARAM, char **argv)
 {
@@ -37,7 +46,6 @@ int blkdiscard_main(int argc UNUSED_PARA
 	uint64_t offset; /* Leaving these two variables out does not  */
 	uint64_t length; /* shrink code size and hampers readability. */
 	uint64_t range[2];
-//	struct stat st;
 	int fd;
 
 	enum {
@@ -46,8 +54,7 @@ int blkdiscard_main(int argc UNUSED_PARA
 		OPT_SECURE = (1 << 2),
 	};
 
-	opt_complementary = "=1";
-	opts = getopt32(argv, "o:l:s", &offset_str, &length_str);
+	opts = getopt32(argv, "^" "o:l:s" "\0" "=1", &offset_str, &length_str);
 	argv += optind;
 
 	fd = xopen(argv[0], O_RDWR|O_EXCL);
diff -urpN busybox-1.27.2/util-linux/blkid.c busybox-1.28.0/util-linux/blkid.c
--- busybox-1.27.2/util-linux/blkid.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/blkid.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,23 +7,21 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config BLKID
-//config:	bool "blkid"
+//config:	bool "blkid (11 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	select VOLUMEID
 //config:	help
-//config:	  Lists labels and UUIDs of all filesystems.
-//config:	  WARNING:
-//config:	  With all submodules selected, it will add ~8k to busybox.
+//config:	Lists labels and UUIDs of all filesystems.
 //config:
 //config:config FEATURE_BLKID_TYPE
 //config:	bool "Print filesystem type"
-//config:	default n
+//config:	default y
 //config:	depends on BLKID
 //config:	help
-//config:	  Show TYPE="filesystem type"
+//config:	Show TYPE="filesystem type"
 
-//applet:IF_BLKID(APPLET(blkid, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_BLKID(APPLET_NOEXEC(blkid, blkid, BB_DIR_SBIN, BB_SUID_DROP, blkid))
 
 //kbuild:lib-$(CONFIG_BLKID) += blkid.o
 
diff -urpN busybox-1.27.2/util-linux/blockdev.c busybox-1.28.0/util-linux/blockdev.c
--- busybox-1.27.2/util-linux/blockdev.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/blockdev.c	2017-08-08 14:08:06.000000000 +0200
@@ -6,12 +6,12 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config BLOCKDEV
-//config:	bool "blockdev"
+//config:	bool "blockdev (2.4 kb)"
 //config:	default y
 //config:	help
-//config:	  Performs some ioctls with block devices.
+//config:	Performs some ioctls with block devices.
 
-//applet:IF_BLOCKDEV(APPLET(blockdev, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_BLOCKDEV(APPLET_NOEXEC(blockdev, blockdev, BB_DIR_SBIN, BB_SUID_DROP, blockdev))
 
 //kbuild:lib-$(CONFIG_BLOCKDEV) += blockdev.o
 
diff -urpN busybox-1.27.2/util-linux/cal.c busybox-1.28.0/util-linux/cal.c
--- busybox-1.27.2/util-linux/cal.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/cal.c	2017-08-03 17:53:10.000000000 +0200
@@ -11,10 +11,10 @@
  * Major size reduction... over 50% (>1.5k) on i386.
  */
 //config:config CAL
-//config:	bool "cal"
+//config:	bool "cal (6.5 kb)"
 //config:	default y
 //config:	help
-//config:	  cal is used to display a monthly calendar.
+//config:	cal is used to display a monthly calendar.
 
 //applet:IF_CAL(APPLET(cal, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -376,7 +376,7 @@ static char *build_row(char *p, unsigned
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
diff -urpN busybox-1.27.2/util-linux/chrt.c busybox-1.28.0/util-linux/chrt.c
--- busybox-1.27.2/util-linux/chrt.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/chrt.c	2017-08-17 13:50:45.000000000 +0200
@@ -6,13 +6,13 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config CHRT
-//config:	bool "chrt"
+//config:	bool "chrt (4.4 kb)"
 //config:	default y
 //config:	help
-//config:	  manipulate real-time attributes of a process.
-//config:	  This requires sched_{g,s}etparam support in your libc.
+//config:	manipulate real-time attributes of a process.
+//config:	This requires sched_{g,s}etparam support in your libc.
 
-//applet:IF_CHRT(APPLET(chrt, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_CHRT(APPLET_NOEXEC(chrt, chrt, BB_DIR_USR_BIN, BB_SUID_DROP, chrt))
 
 //kbuild:lib-$(CONFIG_CHRT) += chrt.o
 
@@ -77,8 +77,7 @@ int chrt_main(int argc UNUSED_PARAM, cha
 	int policy = SCHED_RR;
 
 	/* only one policy accepted */
-	opt_complementary = "r--fo:f--ro:o--rf";
-	opt = getopt32(argv, "+mprfo");
+	opt = getopt32(argv, "^+" "mprfo" "\0" "r--fo:f--ro:o--rf");
 	if (opt & OPT_m) { /* print min/max and exit */
 		show_min_max(SCHED_FIFO);
 		show_min_max(SCHED_RR);
diff -urpN busybox-1.27.2/util-linux/dmesg.c busybox-1.28.0/util-linux/dmesg.c
--- busybox-1.27.2/util-linux/dmesg.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/dmesg.c	2017-07-24 18:57:10.000000000 +0200
@@ -9,38 +9,38 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config DMESG
-//config:	bool "dmesg"
+//config:	bool "dmesg (3.5 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  dmesg is used to examine or control the kernel ring buffer. When the
-//config:	  Linux kernel prints messages to the system log, they are stored in
-//config:	  the kernel ring buffer. You can use dmesg to print the kernel's ring
-//config:	  buffer, clear the kernel ring buffer, change the size of the kernel
-//config:	  ring buffer, and change the priority level at which kernel messages
-//config:	  are also logged to the system console. Enable this option if you
-//config:	  wish to enable the 'dmesg' utility.
+//config:	dmesg is used to examine or control the kernel ring buffer. When the
+//config:	Linux kernel prints messages to the system log, they are stored in
+//config:	the kernel ring buffer. You can use dmesg to print the kernel's ring
+//config:	buffer, clear the kernel ring buffer, change the size of the kernel
+//config:	ring buffer, and change the priority level at which kernel messages
+//config:	are also logged to the system console. Enable this option if you
+//config:	wish to enable the 'dmesg' utility.
 //config:
 //config:config FEATURE_DMESG_PRETTY
 //config:	bool "Pretty output"
 //config:	default y
 //config:	depends on DMESG
 //config:	help
-//config:	  If you wish to scrub the syslog level from the output, say 'Y' here.
-//config:	  The syslog level is a string prefixed to every line with the form
-//config:	  "<#>".
+//config:	If you wish to scrub the syslog level from the output, say 'Y' here.
+//config:	The syslog level is a string prefixed to every line with the form
+//config:	"<#>".
 //config:
-//config:	  With this option you will see:
-//config:	    # dmesg
-//config:	    Linux version 2.6.17.4 .....
-//config:	    BIOS-provided physical RAM map:
-//config:	     BIOS-e820: 0000000000000000 - 000000000009f000 (usable)
+//config:	With this option you will see:
+//config:		# dmesg
+//config:		Linux version 2.6.17.4 .....
+//config:		BIOS-provided physical RAM map:
+//config:		 BIOS-e820: 0000000000000000 - 000000000009f000 (usable)
 //config:
-//config:	  Without this option you will see:
-//config:	    # dmesg
-//config:	    <5>Linux version 2.6.17.4 .....
-//config:	    <6>BIOS-provided physical RAM map:
-//config:	    <6> BIOS-e820: 0000000000000000 - 000000000009f000 (usable)
+//config:	Without this option you will see:
+//config:		# dmesg
+//config:		<5>Linux version 2.6.17.4 .....
+//config:		<6>BIOS-provided physical RAM map:
+//config:		<6> BIOS-e820: 0000000000000000 - 000000000009f000 (usable)
 
 //applet:IF_DMESG(APPLET(dmesg, BB_DIR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/util-linux/eject.c busybox-1.28.0/util-linux/eject.c
--- busybox-1.27.2/util-linux/eject.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/eject.c	2017-08-17 13:50:45.000000000 +0200
@@ -13,19 +13,19 @@
  * Most of the dirty work blatantly ripped off from cat.c =)
  */
 //config:config EJECT
-//config:	bool "eject"
+//config:	bool "eject (4.1 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Used to eject cdroms. (defaults to /dev/cdrom)
+//config:	Used to eject cdroms. (defaults to /dev/cdrom)
 //config:
 //config:config FEATURE_EJECT_SCSI
 //config:	bool "SCSI support"
 //config:	default y
 //config:	depends on EJECT
 //config:	help
-//config:	  Add the -s option to eject, this allows to eject SCSI-Devices and
-//config:	  usb-storage devices.
+//config:	Add the -s option to eject, this allows to eject SCSI-Devices and
+//config:	usb-storage devices.
 
 //applet:IF_EJECT(APPLET(eject, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -124,8 +124,9 @@ int eject_main(int argc UNUSED_PARAM, ch
 	unsigned flags;
 	const char *device;
 
-	opt_complementary = "?1:t--T:T--t";
-	flags = getopt32(argv, "tT" IF_FEATURE_EJECT_SCSI("s"));
+	flags = getopt32(argv, "^" "tT"IF_FEATURE_EJECT_SCSI("s")
+			"\0" "?1:t--T:T--t"
+	);
 	device = argv[optind] ? argv[optind] : "/dev/cdrom";
 
 	/* We used to do "umount <device>" here, but it was buggy
diff -urpN busybox-1.27.2/util-linux/fallocate.c busybox-1.28.0/util-linux/fallocate.c
--- busybox-1.27.2/util-linux/fallocate.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/fallocate.c	2017-10-05 11:53:08.000000000 +0200
@@ -4,12 +4,11 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 //config:config FALLOCATE
-//config:	bool "fallocate"
+//config:	bool "fallocate (5 kb)"
 //config:	default y
 //config:	help
-//config:	  Preallocate space for files.
+//config:	Preallocate space for files.
 
 //applet:IF_FALLOCATE(APPLET(fallocate, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -82,8 +81,7 @@ int fallocate_main(int argc UNUSED_PARAM
 	int fd;
 
 	/* exactly one non-option arg */
-	opt_complementary = "=1";
-	opts = getopt32(argv, "l:o:", &str_l, &str_o);
+	opts = getopt32(argv, "^" "l:o:" "\0" "=1", &str_l, &str_o);
 	if (!(opts & 1))
 		bb_show_usage();
 
diff -urpN busybox-1.27.2/util-linux/fatattr.c busybox-1.28.0/util-linux/fatattr.c
--- busybox-1.27.2/util-linux/fatattr.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/fatattr.c	2017-08-08 14:08:06.000000000 +0200
@@ -9,13 +9,13 @@
  * Public License
  */
 //config:config FATATTR
-//config:	bool "fatattr"
+//config:	bool "fatattr (1.9 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  fatattr lists or changes the file attributes on a fat file system.
+//config:	fatattr lists or changes the file attributes on a fat file system.
 
-//applet:IF_FATATTR(APPLET(fatattr, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_FATATTR(APPLET_NOEXEC(fatattr, fatattr, BB_DIR_BIN, BB_SUID_DROP, fatattr))
 
 //kbuild:lib-$(CONFIG_FATATTR) += fatattr.o
 
diff -urpN busybox-1.27.2/util-linux/fbset.c busybox-1.28.0/util-linux/fbset.c
--- busybox-1.27.2/util-linux/fbset.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/fbset.c	2017-07-24 18:57:10.000000000 +0200
@@ -12,33 +12,33 @@
  *     Geert Uytterhoeven (Geert.Uytterhoeven@cs.kuleuven.ac.be)
  */
 //config:config FBSET
-//config:	bool "fbset"
+//config:	bool "fbset (5.8 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  fbset is used to show or change the settings of a Linux frame buffer
-//config:	  device. The frame buffer device provides a simple and unique
-//config:	  interface to access a graphics display. Enable this option
-//config:	  if you wish to enable the 'fbset' utility.
+//config:	fbset is used to show or change the settings of a Linux frame buffer
+//config:	device. The frame buffer device provides a simple and unique
+//config:	interface to access a graphics display. Enable this option
+//config:	if you wish to enable the 'fbset' utility.
 //config:
 //config:config FEATURE_FBSET_FANCY
 //config:	bool "Enable extra options"
 //config:	default y
 //config:	depends on FBSET
 //config:	help
-//config:	  This option enables extended fbset options, allowing one to set the
-//config:	  framebuffer size, color depth, etc. interface to access a graphics
-//config:	  display. Enable this option if you wish to enable extended fbset
-//config:	  options.
+//config:	This option enables extended fbset options, allowing one to set the
+//config:	framebuffer size, color depth, etc. interface to access a graphics
+//config:	display. Enable this option if you wish to enable extended fbset
+//config:	options.
 //config:
 //config:config FEATURE_FBSET_READMODE
 //config:	bool "Enable readmode support"
 //config:	default y
 //config:	depends on FBSET
 //config:	help
-//config:	  This option allows fbset to read the video mode database stored by
-//config:	  default as /etc/fb.modes, which can be used to set frame buffer
-//config:	  device to pre-defined video modes.
+//config:	This option allows fbset to read the video mode database stored by
+//config:	default as /etc/fb.modes, which can be used to set frame buffer
+//config:	device to pre-defined video modes.
 
 //applet:IF_FBSET(APPLET(fbset, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/util-linux/fdformat.c busybox-1.28.0/util-linux/fdformat.c
--- busybox-1.27.2/util-linux/fdformat.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/fdformat.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,15 +1,16 @@
 /* vi: set sw=4 ts=4: */
-/* fdformat.c  -  Low-level formats a floppy disk - Werner Almesberger
+/*
+ * fdformat.c  -  Low-level formats a floppy disk - Werner Almesberger
  * 5 July 2003 -- modified for Busybox by Erik Andersen
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config FDFORMAT
-//config:	bool "fdformat"
+//config:	bool "fdformat (4.5 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  fdformat is used to low-level format a floppy disk.
+//config:	fdformat is used to low-level format a floppy disk.
 
 //applet:IF_FDFORMAT(APPLET(fdformat, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -66,8 +67,7 @@ int fdformat_main(int argc UNUSED_PARAM,
 	struct floppy_struct param;
 	struct format_descr descr;
 
-	opt_complementary = "=1"; /* must have 1 param */
-	verify = !getopt32(argv, "n");
+	verify = !getopt32(argv, "^" "n" "\0" "=1");
 	argv += optind;
 
 	xstat(*argv, &st);
diff -urpN busybox-1.27.2/util-linux/fdisk.c busybox-1.28.0/util-linux/fdisk.c
--- busybox-1.27.2/util-linux/fdisk.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/util-linux/fdisk.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,5 +1,6 @@
 /* vi: set sw=4 ts=4: */
-/* fdisk.c -- Partition table manipulator for Linux.
+/*
+ * fdisk.c -- Partition table manipulator for Linux.
  *
  * Copyright (C) 1992  A. V. Le Blanc (LeBlanc@mcc.ac.uk)
  * Copyright (C) 2001,2002 Vladimir Oleynik <dzo@simtreas.ru> (initial bb port)
@@ -7,14 +8,14 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config FDISK
-//config:	bool "fdisk"
+//config:	bool "fdisk (41 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  The fdisk utility is used to divide hard disks into one or more
-//config:	  logical disks, which are generally called partitions. This utility
-//config:	  can be used to list and edit the set of partitions or BSD style
-//config:	  'disk slices' that are defined on a hard drive.
+//config:	The fdisk utility is used to divide hard disks into one or more
+//config:	logical disks, which are generally called partitions. This utility
+//config:	can be used to list and edit the set of partitions or BSD style
+//config:	'disk slices' that are defined on a hard drive.
 //config:
 //config:config FDISK_SUPPORT_LARGE_DISKS
 //config:	bool "Support over 4GB disks"
@@ -27,59 +28,59 @@
 //config:	default y
 //config:	depends on FDISK
 //config:	help
-//config:	  Enabling this option allows you to create or change a partition table
-//config:	  and write those changes out to disk. If you leave this option
-//config:	  disabled, you will only be able to view the partition table.
+//config:	Enabling this option allows you to create or change a partition table
+//config:	and write those changes out to disk. If you leave this option
+//config:	disabled, you will only be able to view the partition table.
 //config:
 //config:config FEATURE_AIX_LABEL
 //config:	bool "Support AIX disklabels"
 //config:	default n
 //config:	depends on FDISK && FEATURE_FDISK_WRITABLE
 //config:	help
-//config:	  Enabling this option allows you to create or change AIX disklabels.
-//config:	  Most people can safely leave this option disabled.
+//config:	Enabling this option allows you to create or change AIX disklabels.
+//config:	Most people can safely leave this option disabled.
 //config:
 //config:config FEATURE_SGI_LABEL
 //config:	bool "Support SGI disklabels"
 //config:	default n
 //config:	depends on FDISK && FEATURE_FDISK_WRITABLE
 //config:	help
-//config:	  Enabling this option allows you to create or change SGI disklabels.
-//config:	  Most people can safely leave this option disabled.
+//config:	Enabling this option allows you to create or change SGI disklabels.
+//config:	Most people can safely leave this option disabled.
 //config:
 //config:config FEATURE_SUN_LABEL
 //config:	bool "Support SUN disklabels"
 //config:	default n
 //config:	depends on FDISK && FEATURE_FDISK_WRITABLE
 //config:	help
-//config:	  Enabling this option allows you to create or change SUN disklabels.
-//config:	  Most people can safely leave this option disabled.
+//config:	Enabling this option allows you to create or change SUN disklabels.
+//config:	Most people can safely leave this option disabled.
 //config:
 //config:config FEATURE_OSF_LABEL
 //config:	bool "Support BSD disklabels"
 //config:	default n
 //config:	depends on FDISK && FEATURE_FDISK_WRITABLE
 //config:	help
-//config:	  Enabling this option allows you to create or change BSD disklabels
-//config:	  and define and edit BSD disk slices.
+//config:	Enabling this option allows you to create or change BSD disklabels
+//config:	and define and edit BSD disk slices.
 //config:
 //config:config FEATURE_GPT_LABEL
 //config:	bool "Support GPT disklabels"
 //config:	default n
 //config:	depends on FDISK && FEATURE_FDISK_WRITABLE
 //config:	help
-//config:	  Enabling this option allows you to view GUID Partition Table
-//config:	  disklabels.
+//config:	Enabling this option allows you to view GUID Partition Table
+//config:	disklabels.
 //config:
 //config:config FEATURE_FDISK_ADVANCED
 //config:	bool "Support expert mode"
 //config:	default y
 //config:	depends on FDISK && FEATURE_FDISK_WRITABLE
 //config:	help
-//config:	  Enabling this option allows you to do terribly unsafe things like
-//config:	  define arbitrary drive geometry, move the beginning of data in a
-//config:	  partition, and similarly evil things. Unless you have a very good
-//config:	  reason you would be wise to leave this disabled.
+//config:	Enabling this option allows you to do terribly unsafe things like
+//config:	define arbitrary drive geometry, move the beginning of data in a
+//config:	partition, and similarly evil things. Unless you have a very good
+//config:	reason you would be wise to leave this disabled.
 
 //applet:IF_FDISK(APPLET(fdisk, BB_DIR_SBIN, BB_SUID_DROP))
 
@@ -644,7 +645,7 @@ read_line(const char *prompt)
 {
 	int sz;
 
-	sz = read_line_input(NULL, prompt, line_buffer, sizeof(line_buffer), /*timeout*/ -1);
+	sz = read_line_input(NULL, prompt, line_buffer, sizeof(line_buffer));
 	if (sz <= 0)
 		exit(EXIT_SUCCESS); /* Ctrl-D or Ctrl-C */
 
@@ -2848,7 +2849,7 @@ xselect(void)
 			if (dos_compatible_flag) {
 				sector_offset = g_sectors;
 				puts("Warning: setting sector offset for DOS "
-					"compatiblity");
+					"compatibility");
 			}
 			update_units();
 			break;
diff -urpN busybox-1.27.2/util-linux/fdisk_osf.c busybox-1.28.0/util-linux/fdisk_osf.c
--- busybox-1.27.2/util-linux/fdisk_osf.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/fdisk_osf.c	2017-12-04 16:07:47.000000000 +0100
@@ -18,7 +18,7 @@
  *    may be used to endorse or promote products derived from this software
  *    without specific prior written permission.
  *
- * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
+ * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ''AS IS'' AND
  * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
@@ -709,6 +709,9 @@ sync_disks(void)
 static void
 xbsd_write_bootstrap(void)
 {
+#ifndef MAXPATHLEN
+# define MAXPATHLEN 1024
+#endif
 	char path[MAXPATHLEN];
 	const char *bootdir = BSD_LINUX_BOOTDIR;
 	const char *dkbasename;
diff -urpN busybox-1.27.2/util-linux/findfs.c busybox-1.28.0/util-linux/findfs.c
--- busybox-1.27.2/util-linux/findfs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/findfs.c	2017-07-29 23:01:53.000000000 +0200
@@ -8,14 +8,12 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config FINDFS
-//config:	bool "findfs"
+//config:	bool "findfs (11 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	select VOLUMEID
 //config:	help
-//config:	  Prints the name of a filesystem with given label or UUID.
-//config:	  WARNING:
-//config:	  With all submodules selected, it will add ~8k to busybox.
+//config:	Prints the name of a filesystem with given label or UUID.
 
 /* Benefits from suid root: better access to /dev/BLOCKDEVs: */
 //applet:IF_FINDFS(APPLET(findfs, BB_DIR_SBIN, BB_SUID_MAYBE))
diff -urpN busybox-1.27.2/util-linux/flock.c busybox-1.28.0/util-linux/flock.c
--- busybox-1.27.2/util-linux/flock.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/flock.c	2017-08-17 13:50:45.000000000 +0200
@@ -4,10 +4,10 @@
  * This is free software, licensed under the GNU General Public License v2.
  */
 //config:config FLOCK
-//config:	bool "flock"
+//config:	bool "flock (6.1 kb)"
 //config:	default y
 //config:	help
-//config:	  Manage locks from shell scripts
+//config:	Manage locks from shell scripts
 
 //applet:IF_FLOCK(APPLET(flock, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -38,17 +38,15 @@ int flock_main(int argc UNUSED_PARAM, ch
 	};
 
 #if ENABLE_LONG_OPTS
-	static const char getopt_longopts[] ALIGN1 =
+	static const char flock_longopts[] ALIGN1 =
 		"shared\0"      No_argument       "s"
 		"exclusive\0"   No_argument       "x"
 		"unlock\0"      No_argument       "u"
 		"nonblock\0"    No_argument       "n"
 		;
-	applet_long_options = getopt_longopts;
 #endif
-	opt_complementary = "-1";
 
-	opt = getopt32(argv, "+sxnu");
+	opt = getopt32long(argv, "^+" "sxnu" "\0" "-1", flock_longopts);
 	argv += optind;
 
 	if (argv[1]) {
diff -urpN busybox-1.27.2/util-linux/freeramdisk.c busybox-1.28.0/util-linux/freeramdisk.c
--- busybox-1.27.2/util-linux/freeramdisk.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/freeramdisk.c	2017-08-08 14:08:06.000000000 +0200
@@ -9,33 +9,33 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config FDFLUSH
-//config:	bool "fdflush"
+//config:	bool "fdflush (1.4 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  fdflush is only needed when changing media on slightly-broken
-//config:	  removable media drives. It is used to make Linux believe that a
-//config:	  hardware disk-change switch has been actuated, which causes Linux to
-//config:	  forget anything it has cached from the previous media. If you have
-//config:	  such a slightly-broken drive, you will need to run fdflush every time
-//config:	  you change a disk. Most people have working hardware and can safely
-//config:	  leave this disabled.
+//config:	fdflush is only needed when changing media on slightly-broken
+//config:	removable media drives. It is used to make Linux believe that a
+//config:	hardware disk-change switch has been actuated, which causes Linux to
+//config:	forget anything it has cached from the previous media. If you have
+//config:	such a slightly-broken drive, you will need to run fdflush every time
+//config:	you change a disk. Most people have working hardware and can safely
+//config:	leave this disabled.
 //config:
 //config:config FREERAMDISK
-//config:	bool "freeramdisk"
+//config:	bool "freeramdisk (1.4 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Linux allows you to create ramdisks. This utility allows you to
-//config:	  delete them and completely free all memory that was used for the
-//config:	  ramdisk. For example, if you boot Linux into a ramdisk and later
-//config:	  pivot_root, you may want to free the memory that is allocated to the
-//config:	  ramdisk. If you have no use for freeing memory from a ramdisk, leave
-//config:	  this disabled.
-
-//                  APPLET_ODDNAME:name     main         location    suid_type     help
-//applet:IF_FDFLUSH(APPLET_ODDNAME(fdflush, freeramdisk, BB_DIR_BIN, BB_SUID_DROP, fdflush))
-//applet:IF_FREERAMDISK(APPLET(freeramdisk, BB_DIR_SBIN, BB_SUID_DROP))
+//config:	Linux allows you to create ramdisks. This utility allows you to
+//config:	delete them and completely free all memory that was used for the
+//config:	ramdisk. For example, if you boot Linux into a ramdisk and later
+//config:	pivot_root, you may want to free the memory that is allocated to the
+//config:	ramdisk. If you have no use for freeing memory from a ramdisk, leave
+//config:	this disabled.
+
+//                     APPLET_ODDNAME:name         main         location     suid_type     help
+//applet:IF_FDFLUSH(   APPLET_ODDNAME(fdflush,     freeramdisk, BB_DIR_BIN,  BB_SUID_DROP, fdflush    ))
+//applet:IF_FREERAMDISK(APPLET_NOEXEC(freeramdisk, freeramdisk, BB_DIR_SBIN, BB_SUID_DROP, freeramdisk))
 
 //kbuild:lib-$(CONFIG_FDFLUSH) += freeramdisk.o
 //kbuild:lib-$(CONFIG_FREERAMDISK) += freeramdisk.o
@@ -67,8 +67,12 @@ int freeramdisk_main(int argc UNUSED_PAR
 	fd = xopen(single_argv(argv), O_RDWR);
 
 	// Act like freeramdisk, fdflush, or both depending on configuration.
-	ioctl_or_perror_and_die(fd, (ENABLE_FREERAMDISK && applet_name[1] == 'r')
-			|| !ENABLE_FDFLUSH ? BLKFLSBUF : FDFLUSH, NULL, "%s", argv[1]);
+	ioctl_or_perror_and_die(fd,
+		((ENABLE_FREERAMDISK && applet_name[1] == 'r') || !ENABLE_FDFLUSH)
+				? BLKFLSBUF
+				: FDFLUSH,
+		NULL, "%s", argv[1]
+	);
 
 	if (ENABLE_FEATURE_CLEAN_UP) close(fd);
 
diff -urpN busybox-1.27.2/util-linux/fsck_minix.c busybox-1.28.0/util-linux/fsck_minix.c
--- busybox-1.27.2/util-linux/fsck_minix.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/fsck_minix.c	2017-08-17 13:50:45.000000000 +0200
@@ -89,12 +89,12 @@
 //config:	bool "fsck_minix"
 //config:	default y
 //config:	help
-//config:	  The minix filesystem is a nice, small, compact, read-write filesystem
-//config:	  with little overhead. It is not a journaling filesystem however and
-//config:	  can experience corruption if it is not properly unmounted or if the
-//config:	  power goes off in the middle of a write. This utility allows you to
-//config:	  check for and attempt to repair any corruption that occurs to a minix
-//config:	  filesystem.
+//config:	The minix filesystem is a nice, small, compact, read-write filesystem
+//config:	with little overhead. It is not a journaling filesystem however and
+//config:	can experience corruption if it is not properly unmounted or if the
+//config:	power goes off in the middle of a write. This utility allows you to
+//config:	check for and attempt to repair any corruption that occurs to a minix
+//config:	filesystem.
 
 //applet:IF_FSCK_MINIX(APPLET_ODDNAME(fsck.minix, fsck_minix, BB_DIR_SBIN, BB_SUID_DROP, fsck_minix))
 
@@ -173,7 +173,10 @@ struct globals {
 
 	/* Bigger stuff */
 	struct termios sv_termios;
-	char superblock_buffer[BLOCK_SIZE];
+	union {
+		char superblock_buffer[BLOCK_SIZE];
+		struct minix_superblock Super;
+	} u;
 	char add_zone_ind_blk[BLOCK_SIZE];
 	char add_zone_dind_blk[BLOCK_SIZE];
 	IF_FEATURE_MINIX2(char add_zone_tind_blk[BLOCK_SIZE];)
@@ -207,7 +210,7 @@ struct globals {
 #define name_depth         (G.name_depth         )
 #define name_component     (G.name_component     )
 #define sv_termios         (G.sv_termios         )
-#define superblock_buffer  (G.superblock_buffer )
+#define superblock_buffer  (G.u.superblock_buffer)
 #define add_zone_ind_blk   (G.add_zone_ind_blk   )
 #define add_zone_dind_blk  (G.add_zone_dind_blk  )
 #define add_zone_tind_blk  (G.add_zone_tind_blk  )
@@ -247,7 +250,7 @@ enum {
 #define Inode1 (((struct minix1_inode *) inode_buffer)-1)
 #define Inode2 (((struct minix2_inode *) inode_buffer)-1)
 
-#define Super (*(struct minix_superblock *)(superblock_buffer))
+#define Super (G.u.Super)
 
 #if ENABLE_FEATURE_MINIX2
 # define ZONES    ((unsigned)(version2 ? Super.s_zones : Super.s_nzones))
@@ -1232,8 +1235,7 @@ int fsck_minix_main(int argc UNUSED_PARA
 
 	INIT_G();
 
-	opt_complementary = "=1:ar"; /* one argument; -a assumes -r */
-	getopt32(argv, OPTION_STR);
+	getopt32(argv, "^" OPTION_STR "\0" "=1:ar" /* one arg; -a assumes -r */);
 	argv += optind;
 	device_name = argv[0];
 
diff -urpN busybox-1.27.2/util-linux/fsfreeze.c busybox-1.28.0/util-linux/fsfreeze.c
--- busybox-1.27.2/util-linux/fsfreeze.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/fsfreeze.c	2017-10-05 11:53:08.000000000 +0200
@@ -4,16 +4,15 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 //config:config FSFREEZE
-//config:	bool "fsfreeze"
+//config:	bool "fsfreeze (3.6 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	select LONG_OPTS
 //config:	help
-//config:	  Halt new accesses and flush writes on a mounted filesystem.
+//config:	Halt new accesses and flush writes on a mounted filesystem.
 
-//applet:IF_FSFREEZE(APPLET(fsfreeze, BB_DIR_USR_SBIN, BB_SUID_DROP))
+//applet:IF_FSFREEZE(APPLET_NOEXEC(fsfreeze, fsfreeze, BB_DIR_USR_SBIN, BB_SUID_DROP, fsfreeze))
 
 //kbuild:lib-$(CONFIG_FSFREEZE) += fsfreeze.o
 
@@ -36,15 +35,15 @@ int fsfreeze_main(int argc UNUSED_PARAM,
 	unsigned opts;
 	int fd;
 
-	applet_long_options =
-		"freeze\0"   No_argument "\xff"
-		"unfreeze\0" No_argument "\xfe"
-	;
 	/* exactly one non-option arg: the mountpoint */
 	/* one of opts is required */
 	/* opts are mutually exclusive */
-	opt_complementary = "=1:""\xff:\xfe:""\xff--\xfe:\xfe--\xff";
-	opts = getopt32(argv, "");
+	opts = getopt32long(argv, "^"
+		"" /* no opts */
+		"\0" "=1:""\xff:\xfe:""\xff--\xfe:\xfe--\xff",
+		"freeze\0"   No_argument "\xff"
+		"unfreeze\0" No_argument "\xfe"
+	);
 
 	fd = xopen(argv[optind], O_RDONLY);
 	/* Works with NULL arg on linux-4.8.0 */
diff -urpN busybox-1.27.2/util-linux/fstrim.c busybox-1.28.0/util-linux/fstrim.c
--- busybox-1.27.2/util-linux/fstrim.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/fstrim.c	2017-10-05 11:53:08.000000000 +0200
@@ -7,15 +7,14 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config FSTRIM
-//config:	bool "fstrim"
+//config:	bool "fstrim (5.5 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Discard unused blocks on a mounted filesystem.
+//config:	Discard unused blocks on a mounted filesystem.
 
-//applet:IF_FSTRIM(APPLET(fstrim, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_FSTRIM(APPLET_NOEXEC(fstrim, fstrim, BB_DIR_SBIN, BB_SUID_DROP, fstrim))
 
 //kbuild:lib-$(CONFIG_FSTRIM) += fstrim.o
 
@@ -63,17 +62,17 @@ int fstrim_main(int argc UNUSED_PARAM, c
 	};
 
 #if ENABLE_LONG_OPTS
-	static const char getopt_longopts[] ALIGN1 =
+	static const char fstrim_longopts[] ALIGN1 =
 		"offset\0"    Required_argument    "o"
 		"length\0"    Required_argument    "l"
 		"minimum\0"   Required_argument    "m"
 		"verbose\0"   No_argument          "v"
 		;
-	applet_long_options = getopt_longopts;
 #endif
 
-	opt_complementary = "=1"; /* exactly one non-option arg: the mountpoint */
-	opts = getopt32(argv, "o:l:m:v", &arg_o, &arg_l, &arg_m);
+	opts = getopt32long(argv, "^" "o:l:m:v" "\0" "=1", fstrim_longopts,
+			&arg_o, &arg_l, &arg_m
+	);
 
 	memset(&range, 0, sizeof(range));
 	range.len = ULLONG_MAX;
diff -urpN busybox-1.27.2/util-linux/getopt.c busybox-1.28.0/util-linux/getopt.c
--- busybox-1.27.2/util-linux/getopt.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/getopt.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,11 +1,10 @@
 /* vi: set sw=4 ts=4: */
 /*
  * getopt.c - Enhanced implementation of BSD getopt(1)
- *   Copyright (c) 1997, 1998, 1999, 2000  Frodo Looijaard <frodol@dds.nl>
+ * Copyright (c) 1997, 1998, 1999, 2000  Frodo Looijaard <frodol@dds.nl>
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 /*
  * Version 1.0-b4: Tue Sep 23 1997. First public release.
  * Version 1.0: Wed Nov 19 1997.
@@ -30,44 +29,30 @@
  *  Replaced our_malloc with xmalloc and our_realloc with xrealloc
  */
 //config:config GETOPT
-//config:	bool "getopt"
+//config:	bool "getopt (5.6 kb)"
 //config:	default y
 //config:	help
-//config:	  The getopt utility is used to break up (parse) options in command
-//config:	  lines to make it easy to write complex shell scripts that also check
-//config:	  for legal (and illegal) options. If you want to write horribly
-//config:	  complex shell scripts, or use some horribly complex shell script
-//config:	  written by others, this utility may be for you. Most people will
-//config:	  wisely leave this disabled.
+//config:	The getopt utility is used to break up (parse) options in command
+//config:	lines to make it easy to write complex shell scripts that also check
+//config:	for legal (and illegal) options. If you want to write horribly
+//config:	complex shell scripts, or use some horribly complex shell script
+//config:	written by others, this utility may be for you. Most people will
+//config:	wisely leave this disabled.
 //config:
 //config:config FEATURE_GETOPT_LONG
-//config:	bool "Support option -l"
-//config:	default y if LONG_OPTS
-//config:	depends on GETOPT
+//config:	bool "Support -l LONGOPTs"
+//config:	default y
+//config:	depends on GETOPT && LONG_OPTS
 //config:	help
-//config:	  Enable support for long options (option -l).
+//config:	Enable support for long options (option -l).
 
-//applet:IF_GETOPT(APPLET(getopt, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_GETOPT(APPLET_NOEXEC(getopt, getopt, BB_DIR_BIN, BB_SUID_DROP, getopt))
 
 //kbuild:lib-$(CONFIG_GETOPT) += getopt.o
 
 //usage:#define getopt_trivial_usage
 //usage:       "[OPTIONS] [--] OPTSTRING PARAMS"
 //usage:#define getopt_full_usage "\n\n"
-//usage:	IF_LONG_OPTS(
-//usage:	IF_FEATURE_GETOPT_LONG(
-//usage:       "	-a,--alternative		Allow long options starting with single -\n"
-//usage:       "	-l,--longoptions LOPT[,...]	Long options to recognize\n"
-//usage:	)
-//usage:       "	-n,--name PROGNAME		The name under which errors are reported"
-//usage:     "\n	-o,--options OPTSTRING		Short options to recognize"
-//usage:     "\n	-q,--quiet			No error messages on unrecognized options"
-//usage:     "\n	-Q,--quiet-output		No normal output"
-//usage:     "\n	-s,--shell SHELL		Set shell quoting conventions"
-//usage:     "\n	-T,--test			Version test (exits with 4)"
-//usage:     "\n	-u,--unquoted			Don't quote output"
-//usage:	)
-//usage:	IF_NOT_LONG_OPTS(
 //usage:	IF_FEATURE_GETOPT_LONG(
 //usage:       "	-a		Allow long options starting with single -\n"
 //usage:       "	-l LOPT[,...]	Long options to recognize\n"
@@ -79,7 +64,6 @@
 //usage:     "\n	-s SHELL	Set shell quoting conventions"
 //usage:     "\n	-T		Version test (exits with 4)"
 //usage:     "\n	-u		Don't quote output"
-//usage:	)
 //usage:	IF_FEATURE_GETOPT_LONG( /* example uses -l, needs FEATURE_GETOPT_LONG */
 //usage:     "\n"
 //usage:     "\nExample:"
@@ -411,8 +395,7 @@ int getopt_main(int argc, char **argv)
 #if !ENABLE_FEATURE_GETOPT_LONG
 	opt = getopt32(argv, "+o:n:qQs:Tu", &optstr, &name, &s_arg);
 #else
-	applet_long_options = getopt_longopts;
-	opt = getopt32(argv, "+o:n:qQs:Tual:*",
+	opt = getopt32long(argv, "+o:n:qQs:Tual:*", getopt_longopts,
 					&optstr, &name, &s_arg, &l_arg);
 	/* Effectuate the read options for the applet itself */
 	while (l_arg) {
diff -urpN busybox-1.27.2/util-linux/hexdump.c busybox-1.28.0/util-linux/hexdump.c
--- busybox-1.27.2/util-linux/hexdump.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/hexdump.c	2017-07-24 18:57:10.000000000 +0200
@@ -9,27 +9,27 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config HEXDUMP
-//config:	bool "hexdump"
+//config:	bool "hexdump (8.8 kb)"
 //config:	default y
 //config:	help
-//config:	  The hexdump utility is used to display binary data in a readable
-//config:	  way that is comparable to the output from most hex editors.
+//config:	The hexdump utility is used to display binary data in a readable
+//config:	way that is comparable to the output from most hex editors.
 //config:
 //config:config FEATURE_HEXDUMP_REVERSE
 //config:	bool "Support -R, reverse of 'hexdump -Cv'"
 //config:	default y
 //config:	depends on HEXDUMP
 //config:	help
-//config:	  The hexdump utility is used to display binary data in an ascii
-//config:	  readable way. This option creates binary data from an ascii input.
-//config:	  NB: this option is non-standard. It's unwise to use it in scripts
-//config:	  aimed to be portable.
+//config:	The hexdump utility is used to display binary data in an ascii
+//config:	readable way. This option creates binary data from an ascii input.
+//config:	NB: this option is non-standard. It's unwise to use it in scripts
+//config:	aimed to be portable.
 //config:
 //config:config HD
-//config:	bool "hd"
+//config:	bool "hd (8 kb)"
 //config:	default y
 //config:	help
-//config:	  hd is an alias to hexdump -C.
+//config:	hd is an alias to hexdump -C.
 
 //applet:IF_HEXDUMP(APPLET_NOEXEC(hexdump, hexdump, BB_DIR_USR_BIN, BB_SUID_DROP, hexdump))
 //applet:IF_HD(APPLET_NOEXEC(hd, hexdump, BB_DIR_USR_BIN, BB_SUID_DROP, hd))
diff -urpN busybox-1.27.2/util-linux/hexdump_xxd.c busybox-1.28.0/util-linux/hexdump_xxd.c
--- busybox-1.27.2/util-linux/hexdump_xxd.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/hexdump_xxd.c	2017-08-17 13:50:45.000000000 +0200
@@ -7,11 +7,11 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config XXD
-//config:	bool "xxd"
+//config:	bool "xxd (8.9 kb)"
 //config:	default y
 //config:	help
-//config:	  The xxd utility is used to display binary data in a readable
-//config:	  way that is comparable to the output from most hex editors.
+//config:	The xxd utility is used to display binary data in a readable
+//config:	way that is comparable to the output from most hex editors.
 
 //applet:IF_XXD(APPLET_NOEXEC(xxd, xxd, BB_DIR_USR_BIN, BB_SUID_DROP, xxd))
 
@@ -73,8 +73,9 @@ int xxd_main(int argc UNUSED_PARAM, char
 #define OPT_s (1 << 1)
 #define OPT_a (1 << 2)
 #define OPT_p (1 << 3)
-	opt_complementary = "?1"; /* 1 argument max */
-	opt = getopt32(argv, "l:s:apg:+c:+", &opt_l, &opt_s, &bytes, &cols);
+	opt = getopt32(argv, "^" "l:s:apg:+c:+" "\0" "?1" /* 1 argument max */,
+			&opt_l, &opt_s, &bytes, &cols
+	);
 	argv += optind;
 
 	dumper->dump_vflag = ALL;
diff -urpN busybox-1.27.2/util-linux/hwclock.c busybox-1.28.0/util-linux/hwclock.c
--- busybox-1.27.2/util-linux/hwclock.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/hwclock.c	2017-08-17 13:50:45.000000000 +0200
@@ -7,31 +7,26 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config HWCLOCK
-//config:	bool "hwclock"
+//config:	bool "hwclock (5.8 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  The hwclock utility is used to read and set the hardware clock
-//config:	  on a system. This is primarily used to set the current time on
-//config:	  shutdown in the hardware clock, so the hardware will keep the
-//config:	  correct time when Linux is _not_ running.
-//config:
-//config:config FEATURE_HWCLOCK_LONG_OPTIONS
-//config:	bool "Support long options (--hctosys,...)"
-//config:	default y
-//config:	depends on HWCLOCK && LONG_OPTS
+//config:	The hwclock utility is used to read and set the hardware clock
+//config:	on a system. This is primarily used to set the current time on
+//config:	shutdown in the hardware clock, so the hardware will keep the
+//config:	correct time when Linux is _not_ running.
 //config:
 //config:config FEATURE_HWCLOCK_ADJTIME_FHS
 //config:	bool "Use FHS /var/lib/hwclock/adjtime"
 //config:	default n  # util-linux-ng in Fedora 13 still uses /etc/adjtime
 //config:	depends on HWCLOCK
 //config:	help
-//config:	  Starting with FHS 2.3, the adjtime state file is supposed to exist
-//config:	  at /var/lib/hwclock/adjtime instead of /etc/adjtime. If you wish
-//config:	  to use the FHS behavior, answer Y here, otherwise answer N for the
-//config:	  classic /etc/adjtime path.
+//config:	Starting with FHS 2.3, the adjtime state file is supposed to exist
+//config:	at /var/lib/hwclock/adjtime instead of /etc/adjtime. If you wish
+//config:	to use the FHS behavior, answer Y here, otherwise answer N for the
+//config:	classic /etc/adjtime path.
 //config:
-//config:	  pathname.com/fhs/pub/fhs-2.3.html#VARLIBHWCLOCKSTATEDIRECTORYFORHWCLO
+//config:	pathname.com/fhs/pub/fhs-2.3.html#VARLIBHWCLOCKSTATEDIRECTORYFORHWCLO
 
 //applet:IF_HWCLOCK(APPLET(hwclock, BB_DIR_SBIN, BB_SUID_DROP))
 
@@ -293,12 +288,12 @@ static void set_system_clock_timezone(in
 }
 
 //usage:#define hwclock_trivial_usage
-//usage:	IF_FEATURE_HWCLOCK_LONG_OPTIONS(
-//usage:       "[-r|--show] [-s|--hctosys] [-w|--systohc] [-t|--systz]"
-//usage:       " [-l|--localtime] [-u|--utc]"
+//usage:	IF_LONG_OPTS(
+//usage:       "[-r|--show] [-s|--hctosys] [-w|--systohc] [--systz]"
+//usage:       " [--localtime] [-u|--utc]"
 //usage:       " [-f|--rtc FILE]"
 //usage:	)
-//usage:	IF_NOT_FEATURE_HWCLOCK_LONG_OPTIONS(
+//usage:	IF_NOT_LONG_OPTS(
 //usage:       "[-r] [-s] [-w] [-t] [-l] [-u] [-f FILE]"
 //usage:	)
 //usage:#define hwclock_full_usage "\n\n"
@@ -306,12 +301,18 @@ static void set_system_clock_timezone(in
 //usage:     "\n	-r	Show hardware clock time"
 //usage:     "\n	-s	Set system time from hardware clock"
 //usage:     "\n	-w	Set hardware clock from system time"
-//usage:     "\n	-t	Set in-kernel timezone, correct system time"
+//usage:	IF_LONG_OPTS(
+//usage:     "\n	--systz	Set in-kernel timezone, correct system time"
+//usage:	)
 //usage:     "\n		if hardware clock is in local time"
 //usage:     "\n	-u	Assume hardware clock is kept in UTC"
-//usage:     "\n	-l	Assume hardware clock is kept in local time"
+//usage:	IF_LONG_OPTS(
+//usage:     "\n	--localtime	Assume hardware clock is kept in local time"
+//usage:	)
 //usage:     "\n	-f FILE	Use specified device (e.g. /dev/rtc2)"
 
+//TODO: get rid of incompatible -t and -l aliases to --systz and --localtime
+
 #define HWCLOCK_OPT_LOCALTIME   0x01
 #define HWCLOCK_OPT_UTC         0x02
 #define HWCLOCK_OPT_SHOW        0x04
@@ -327,7 +328,7 @@ int hwclock_main(int argc UNUSED_PARAM,
 	unsigned opt;
 	int utc;
 
-#if ENABLE_FEATURE_HWCLOCK_LONG_OPTIONS
+#if ENABLE_LONG_OPTS
 	static const char hwclock_longopts[] ALIGN1 =
 		"localtime\0" No_argument "l" /* short opt is non-standard */
 		"utc\0"       No_argument "u"
@@ -337,14 +338,16 @@ int hwclock_main(int argc UNUSED_PARAM,
 		"systz\0"     No_argument "t" /* short opt is non-standard */
 		"rtc\0"       Required_argument "f"
 		;
-	applet_long_options = hwclock_longopts;
 #endif
 
 	/* Initialize "timezone" (libc global variable) */
 	tzset();
 
-	opt_complementary = "r--wst:w--rst:s--wrt:t--rsw:l--u:u--l";
-	opt = getopt32(argv, "lurswtf:", &rtcname);
+	opt = getopt32long(argv,
+		"^lurswtf:" "\0" "r--wst:w--rst:s--wrt:t--rsw:l--u:u--l",
+		hwclock_longopts,
+		&rtcname
+	);
 
 	/* If -u or -l wasn't given check if we are using utc */
 	if (opt & (HWCLOCK_OPT_UTC | HWCLOCK_OPT_LOCALTIME))
diff -urpN busybox-1.27.2/util-linux/ionice.c busybox-1.28.0/util-linux/ionice.c
--- busybox-1.27.2/util-linux/ionice.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/ionice.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,14 +7,14 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config IONICE
-//config:	bool "ionice"
+//config:	bool "ionice (3.6 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Set/set program io scheduling class and priority
-//config:	  Requires kernel >= 2.6.13
+//config:	Set/set program io scheduling class and priority
+//config:	Requires kernel >= 2.6.13
 
-//applet:IF_IONICE(APPLET(ionice, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_IONICE(APPLET_NOEXEC(ionice, ionice, BB_DIR_BIN, BB_SUID_DROP, ionice))
 
 //kbuild:lib-$(CONFIG_IONICE) += ionice.o
 
diff -urpN busybox-1.27.2/util-linux/ipcrm.c busybox-1.28.0/util-linux/ipcrm.c
--- busybox-1.27.2/util-linux/ipcrm.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/ipcrm.c	2017-08-17 13:50:45.000000000 +0200
@@ -8,26 +8,17 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config IPCRM
-//config:	bool "ipcrm"
+//config:	bool "ipcrm (2.9 kb)"
 //config:	default y
 //config:	help
-//config:	  The ipcrm utility allows the removal of System V interprocess
-//config:	  communication (IPC) objects and the associated data structures
-//config:	  from the system.
+//config:	The ipcrm utility allows the removal of System V interprocess
+//config:	communication (IPC) objects and the associated data structures
+//config:	from the system.
 
-//applet:IF_IPCRM(APPLET(ipcrm, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_IPCRM(APPLET_NOEXEC(ipcrm, ipcrm, BB_DIR_USR_BIN, BB_SUID_DROP, ipcrm))
 
 //kbuild:lib-$(CONFIG_IPCRM) += ipcrm.o
 
-//usage:#define ipcrm_trivial_usage
-//usage:       "[-MQS key] [-mqs id]"
-//usage:#define ipcrm_full_usage "\n\n"
-//usage:       "Upper-case options MQS remove an object by shmkey value.\n"
-//usage:       "Lower-case options remove an object by shmid value.\n"
-//usage:     "\n	-mM	Remove memory segment after last detach"
-//usage:     "\n	-qQ	Remove message queue"
-//usage:     "\n	-sS	Remove semaphore"
-
 #include "libbb.h"
 
 /* X/OPEN tells us to use <sys/{types,ipc,sem}.h> for semctl() */
@@ -94,6 +85,14 @@ static int remove_ids(type_id type, char
 }
 #endif /* IPCRM_LEGACY */
 
+//usage:#define ipcrm_trivial_usage
+//usage:       "[-MQS key] [-mqs id]"
+//usage:#define ipcrm_full_usage "\n\n"
+//usage:       "Upper-case options MQS remove an object by shmkey value.\n"
+//usage:       "Lower-case options remove an object by shmid value.\n"
+//usage:     "\n	-mM	Remove memory segment after last detach"
+//usage:     "\n	-qQ	Remove message queue"
+//usage:     "\n	-sS	Remove semaphore"
 
 int ipcrm_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int ipcrm_main(int argc, char **argv)
@@ -137,28 +136,20 @@ int ipcrm_main(int argc, char **argv)
 #endif /* IPCRM_LEGACY */
 
 	/* process new syntax to conform with SYSV ipcrm */
-	while ((c = getopt(argc, argv, "q:m:s:Q:M:S:h?")) != -1) {
+	while ((c = getopt(argc, argv, "q:m:s:Q:M:S:")) != -1) {
 		int result;
-		int id = 0;
-		int iskey = isupper(c);
-
+		int id;
+		int iskey;
 		/* needed to delete semaphores */
 		union semun arg;
 
-		arg.val = 0;
-
-		if ((c == '?') || (c == 'h')) {
+		if (c == '?') /* option not in the string */
 			bb_show_usage();
-		}
-
-		/* we don't need case information any more */
-		c = tolower(c);
 
-		/* make sure the option is in range: allowed are q, m, s */
-		if (c != 'q' && c != 'm' && c != 's') {
-			bb_show_usage();
-		}
+		id = 0;
+		arg.val = 0;
 
+		iskey = !(c & 0x20); /* uppercase? */
 		if (iskey) {
 			/* keys are in hex or decimal */
 			key_t key = xstrtoul(optarg, 0);
@@ -169,6 +160,7 @@ int ipcrm_main(int argc, char **argv)
 				continue;
 			}
 
+			c |= 0x20; /* lowercase. c is 'q', 'm' or 's' now */
 			/* convert key to id */
 			id = ((c == 'q') ? msgget(key, 0) :
 				(c == 'm') ? shmget(key, 0, 0) : semget(key, 0, 0));
diff -urpN busybox-1.27.2/util-linux/ipcs.c busybox-1.28.0/util-linux/ipcs.c
--- busybox-1.27.2/util-linux/ipcs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/ipcs.c	2017-08-17 13:50:45.000000000 +0200
@@ -8,33 +8,17 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config IPCS
-//config:	bool "ipcs"
+//config:	bool "ipcs (11 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  The ipcs utility is used to provide information on the currently
-//config:	  allocated System V interprocess (IPC) objects in the system.
+//config:	The ipcs utility is used to provide information on the currently
+//config:	allocated System V interprocess (IPC) objects in the system.
 
-//applet:IF_IPCS(APPLET(ipcs, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_IPCS(APPLET_NOEXEC(ipcs, ipcs, BB_DIR_USR_BIN, BB_SUID_DROP, ipcs))
 
 //kbuild:lib-$(CONFIG_IPCS) += ipcs.o
 
-//usage:#define ipcs_trivial_usage
-//usage:       "[[-smq] -i shmid] | [[-asmq] [-tcplu]]"
-//usage:#define ipcs_full_usage "\n\n"
-//usage:       "	-i	Show specific resource"
-//usage:     "\nResource specification:"
-//usage:     "\n	-m	Shared memory segments"
-//usage:     "\n	-q	Message queues"
-//usage:     "\n	-s	Semaphore arrays"
-//usage:     "\n	-a	All (default)"
-//usage:     "\nOutput format:"
-//usage:     "\n	-t	Time"
-//usage:     "\n	-c	Creator"
-//usage:     "\n	-p	Pid"
-//usage:     "\n	-l	Limits"
-//usage:     "\n	-u	Summary"
-
 /* X/OPEN tells us to use <sys/{types,ipc,sem}.h> for semctl() */
 /* X/OPEN tells us to use <sys/{types,ipc,msg}.h> for msgctl() */
 /* X/OPEN tells us to use <sys/{types,ipc,shm}.h> for shmctl() */
@@ -585,6 +569,22 @@ static void print_sem(int semid)
 	bb_putchar('\n');
 }
 
+//usage:#define ipcs_trivial_usage
+//usage:       "[[-smq] -i shmid] | [[-asmq] [-tcplu]]"
+//usage:#define ipcs_full_usage "\n\n"
+//usage:       "	-i	Show specific resource"
+//usage:     "\nResource specification:"
+//usage:     "\n	-m	Shared memory segments"
+//usage:     "\n	-q	Message queues"
+//usage:     "\n	-s	Semaphore arrays"
+//usage:     "\n	-a	All (default)"
+//usage:     "\nOutput format:"
+//usage:     "\n	-t	Time"
+//usage:     "\n	-c	Creator"
+//usage:     "\n	-p	Pid"
+//usage:     "\n	-l	Limits"
+//usage:     "\n	-u	Summary"
+
 int ipcs_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int ipcs_main(int argc UNUSED_PARAM, char **argv)
 {
@@ -632,6 +632,10 @@ int ipcs_main(int argc UNUSED_PARAM, cha
 		flags |= flag_msg | flag_shm | flag_sem;
 	bb_putchar('\n');
 
+	if (flags & flag_msg) {
+		do_msg();
+		bb_putchar('\n');
+	}
 	if (flags & flag_shm) {
 		do_shm();
 		bb_putchar('\n');
@@ -640,9 +644,5 @@ int ipcs_main(int argc UNUSED_PARAM, cha
 		do_sem();
 		bb_putchar('\n');
 	}
-	if (flags & flag_msg) {
-		do_msg();
-		bb_putchar('\n');
-	}
 	fflush_stdout_and_exit(EXIT_SUCCESS);
 }
diff -urpN busybox-1.27.2/util-linux/last.c busybox-1.28.0/util-linux/last.c
--- busybox-1.27.2/util-linux/last.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/last.c	2017-07-24 18:57:10.000000000 +0200
@@ -7,19 +7,19 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config LAST
-//config:	bool "last"
+//config:	bool "last (6.2 kb)"
 //config:	default y
 //config:	depends on FEATURE_WTMP
 //config:	help
-//config:	  'last' displays a list of the last users that logged into the system.
+//config:	'last' displays a list of the last users that logged into the system.
 //config:
 //config:config FEATURE_LAST_FANCY
 //config:	bool "Output extra information"
 //config:	default y
 //config:	depends on LAST
 //config:	help
-//config:	  'last' displays detailed information about the last users that
-//config:	  logged into the system (mimics sysvinit last). +900 bytes.
+//config:	'last' displays detailed information about the last users that
+//config:	logged into the system (mimics sysvinit last). +900 bytes.
 
 //applet:IF_LAST(APPLET(last, BB_DIR_USR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/util-linux/losetup.c busybox-1.28.0/util-linux/losetup.c
--- busybox-1.27.2/util-linux/losetup.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/losetup.c	2017-08-17 13:50:45.000000000 +0200
@@ -7,17 +7,17 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config LOSETUP
-//config:	bool "losetup"
+//config:	bool "losetup (5.4 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  losetup is used to associate or detach a loop device with a regular
-//config:	  file or block device, and to query the status of a loop device. This
-//config:	  version does not currently support enabling data encryption.
+//config:	losetup is used to associate or detach a loop device with a regular
+//config:	file or block device, and to query the status of a loop device. This
+//config:	version does not currently support enabling data encryption.
 
-//kbuild:lib-$(CONFIG_LOSETUP) += losetup.o
+//applet:IF_LOSETUP(APPLET_NOEXEC(losetup, losetup, BB_DIR_SBIN, BB_SUID_DROP, losetup))
 
-//applet:IF_LOSETUP(APPLET(losetup, BB_DIR_SBIN, BB_SUID_DROP))
+//kbuild:lib-$(CONFIG_LOSETUP) += losetup.o
 
 //usage:#define losetup_trivial_usage
 //usage:       "[-r] [-o OFS] {-f|LOOPDEV} FILE - associate loop devices\n"
@@ -57,8 +57,7 @@ int losetup_main(int argc UNUSED_PARAM,
 		OPT_r = (1 << 4), /* must be last */
 	};
 
-	opt_complementary = "?2:d--ofar:a--ofr";
-	opt = getopt32(argv, "do:far", &opt_o);
+	opt = getopt32(argv, "^" "do:far" "\0" "?2:d--ofar:a--ofr", &opt_o);
 	argv += optind;
 
 	/* LOOPDEV */
diff -urpN busybox-1.27.2/util-linux/lspci.c busybox-1.28.0/util-linux/lspci.c
--- busybox-1.27.2/util-linux/lspci.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/lspci.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,16 +7,16 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config LSPCI
-//config:	bool "lspci"
+//config:	bool "lspci (5.7 kb)"
 //config:	default y
 //config:	#select PLATFORM_LINUX
 //config:	help
-//config:	  lspci is a utility for displaying information about PCI buses in the
-//config:	  system and devices connected to them.
+//config:	lspci is a utility for displaying information about PCI buses in the
+//config:	system and devices connected to them.
 //config:
-//config:	  This version uses sysfs (/sys/bus/pci/devices) only.
+//config:	This version uses sysfs (/sys/bus/pci/devices) only.
 
-//applet:IF_LSPCI(APPLET(lspci, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_LSPCI(APPLET_NOEXEC(lspci, lspci, BB_DIR_USR_BIN, BB_SUID_DROP, lspci))
 
 //kbuild:lib-$(CONFIG_LSPCI) += lspci.o
 
diff -urpN busybox-1.27.2/util-linux/lsusb.c busybox-1.28.0/util-linux/lsusb.c
--- busybox-1.27.2/util-linux/lsusb.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/lsusb.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,16 +7,16 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config LSUSB
-//config:	bool "lsusb"
+//config:	bool "lsusb (3.5 kb)"
 //config:	default y
 //config:	#select PLATFORM_LINUX
 //config:	help
-//config:	  lsusb is a utility for displaying information about USB buses in the
-//config:	  system and devices connected to them.
+//config:	lsusb is a utility for displaying information about USB buses in the
+//config:	system and devices connected to them.
 //config:
-//config:	  This version uses sysfs (/sys/bus/usb/devices) only.
+//config:	This version uses sysfs (/sys/bus/usb/devices) only.
 
-//applet:IF_LSUSB(APPLET(lsusb, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_LSUSB(APPLET_NOEXEC(lsusb, lsusb, BB_DIR_USR_BIN, BB_SUID_DROP, lsusb))
 
 //kbuild:lib-$(CONFIG_LSUSB) += lsusb.o
 
diff -urpN busybox-1.27.2/util-linux/mdev.c busybox-1.28.0/util-linux/mdev.c
--- busybox-1.27.2/util-linux/mdev.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/mdev.c	2017-10-05 11:53:08.000000000 +0200
@@ -7,64 +7,63 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
 //config:config MDEV
-//config:	bool "mdev"
+//config:	bool "mdev (16 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  mdev is a mini-udev implementation for dynamically creating device
-//config:	  nodes in the /dev directory.
+//config:	mdev is a mini-udev implementation for dynamically creating device
+//config:	nodes in the /dev directory.
 //config:
-//config:	  For more information, please see docs/mdev.txt
+//config:	For more information, please see docs/mdev.txt
 //config:
 //config:config FEATURE_MDEV_CONF
 //config:	bool "Support /etc/mdev.conf"
 //config:	default y
 //config:	depends on MDEV
 //config:	help
-//config:	  Add support for the mdev config file to control ownership and
-//config:	  permissions of the device nodes.
+//config:	Add support for the mdev config file to control ownership and
+//config:	permissions of the device nodes.
 //config:
-//config:	  For more information, please see docs/mdev.txt
+//config:	For more information, please see docs/mdev.txt
 //config:
 //config:config FEATURE_MDEV_RENAME
 //config:	bool "Support subdirs/symlinks"
 //config:	default y
 //config:	depends on FEATURE_MDEV_CONF
 //config:	help
-//config:	  Add support for renaming devices and creating symlinks.
+//config:	Add support for renaming devices and creating symlinks.
 //config:
-//config:	  For more information, please see docs/mdev.txt
+//config:	For more information, please see docs/mdev.txt
 //config:
 //config:config FEATURE_MDEV_RENAME_REGEXP
 //config:	bool "Support regular expressions substitutions when renaming device"
 //config:	default y
 //config:	depends on FEATURE_MDEV_RENAME
 //config:	help
-//config:	  Add support for regular expressions substitutions when renaming
-//config:	  device.
+//config:	Add support for regular expressions substitutions when renaming
+//config:	device.
 //config:
 //config:config FEATURE_MDEV_EXEC
 //config:	bool "Support command execution at device addition/removal"
 //config:	default y
 //config:	depends on FEATURE_MDEV_CONF
 //config:	help
-//config:	  This adds support for an optional field to /etc/mdev.conf for
-//config:	  executing commands when devices are created/removed.
+//config:	This adds support for an optional field to /etc/mdev.conf for
+//config:	executing commands when devices are created/removed.
 //config:
-//config:	  For more information, please see docs/mdev.txt
+//config:	For more information, please see docs/mdev.txt
 //config:
 //config:config FEATURE_MDEV_LOAD_FIRMWARE
-//config:	bool "Support loading of firmwares"
+//config:	bool "Support loading of firmware"
 //config:	default y
 //config:	depends on MDEV
 //config:	help
-//config:	  Some devices need to load firmware before they can be usable.
+//config:	Some devices need to load firmware before they can be usable.
 //config:
-//config:	  These devices will request userspace look up the files in
-//config:	  /lib/firmware/ and if it exists, send it to the kernel for
-//config:	  loading into the hardware.
+//config:	These devices will request userspace look up the files in
+//config:	/lib/firmware/ and if it exists, send it to the kernel for
+//config:	loading into the hardware.
 
 //applet:IF_MDEV(APPLET(mdev, BB_DIR_SBIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/util-linux/mesg.c busybox-1.28.0/util-linux/mesg.c
--- busybox-1.27.2/util-linux/mesg.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/mesg.c	2017-10-05 11:53:08.000000000 +0200
@@ -6,27 +6,26 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config MESG
-//config:	bool "mesg"
+//config:	bool "mesg (1.2 kb)"
 //config:	default y
 //config:	help
-//config:	  Mesg controls access to your terminal by others. It is typically
-//config:	  used to allow or disallow other users to write to your terminal
+//config:	Mesg controls access to your terminal by others. It is typically
+//config:	used to allow or disallow other users to write to your terminal
 //config:
 //config:config FEATURE_MESG_ENABLE_ONLY_GROUP
 //config:	bool "Enable writing to tty only by group, not by everybody"
 //config:	default y
 //config:	depends on MESG
 //config:	help
-//config:	  Usually, ttys are owned by group "tty", and "write" tool is
-//config:	  setgid to this group. This way, "mesg y" only needs to enable
-//config:	  "write by owning group" bit in tty mode.
+//config:	Usually, ttys are owned by group "tty", and "write" tool is
+//config:	setgid to this group. This way, "mesg y" only needs to enable
+//config:	"write by owning group" bit in tty mode.
 //config:
-//config:	  If you set this option to N, "mesg y" will enable writing
-//config:	  by anybody at all. This is not recommended.
+//config:	If you set this option to N, "mesg y" will enable writing
+//config:	by anybody at all. This is not recommended.
 
-//applet:IF_MESG(APPLET(mesg, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_MESG(APPLET_NOFORK(mesg, mesg, BB_DIR_USR_BIN, BB_SUID_DROP, mesg))
 
 //kbuild:lib-$(CONFIG_MESG) += mesg.o
 
@@ -60,10 +59,15 @@ int mesg_main(int argc UNUSED_PARAM, cha
 		bb_show_usage();
 	}
 
+	/* We are a NOFORK applet.
+	 * (Not that it's very useful, but code is trivially NOFORK-safe).
+	 * Play nice. Do not leak anything.
+	 */
+
 	if (!isatty(STDIN_FILENO))
 		bb_error_msg_and_die("not a tty");
 
-	xfstat(STDIN_FILENO, &sb, "stderr");
+	xfstat(STDIN_FILENO, &sb, "stdin");
 	if (c == 0) {
 		puts((sb.st_mode & (S_IWGRP|S_IWOTH)) ? "is y" : "is n");
 		return EXIT_SUCCESS;
diff -urpN busybox-1.27.2/util-linux/mkfs_ext2.c busybox-1.28.0/util-linux/mkfs_ext2.c
--- busybox-1.27.2/util-linux/mkfs_ext2.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/mkfs_ext2.c	2017-07-24 18:57:10.000000000 +0200
@@ -8,18 +8,18 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config MKE2FS
-//config:	bool "mke2fs"
+//config:	bool "mke2fs (9.7 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Utility to create EXT2 filesystems.
+//config:	Utility to create EXT2 filesystems.
 //config:
 //config:config MKFS_EXT2
-//config:	bool "mkfs.ext2"
+//config:	bool "mkfs.ext2 (9.8 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Alias to "mke2fs".
+//config:	Alias to "mke2fs".
 
 //                    APPLET_ODDNAME:name       main       location     suid_type     help
 //applet:IF_MKE2FS(   APPLET_ODDNAME(mke2fs,    mkfs_ext2, BB_DIR_SBIN, BB_SUID_DROP, mkfs_ext2))
diff -urpN busybox-1.27.2/util-linux/mkfs_minix.c busybox-1.28.0/util-linux/mkfs_minix.c
--- busybox-1.27.2/util-linux/mkfs_minix.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/mkfs_minix.c	2017-08-17 13:50:45.000000000 +0200
@@ -67,18 +67,18 @@
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  The minix filesystem is a nice, small, compact, read-write filesystem
-//config:	  with little overhead. If you wish to be able to create minix
-//config:	  filesystems this utility will do the job for you.
+//config:	The minix filesystem is a nice, small, compact, read-write filesystem
+//config:	with little overhead. If you wish to be able to create minix
+//config:	filesystems this utility will do the job for you.
 //config:
 //config:config FEATURE_MINIX2
 //config:	bool "Support Minix fs v2 (fsck_minix/mkfs_minix)"
 //config:	default y
 //config:	depends on FSCK_MINIX || MKFS_MINIX
 //config:	help
-//config:	  If you wish to be able to create version 2 minix filesystems, enable
-//config:	  this. If you enabled 'mkfs_minix' then you almost certainly want to
-//config:	  be using the version 2 filesystem support.
+//config:	If you wish to be able to create version 2 minix filesystems, enable
+//config:	this. If you enabled 'mkfs_minix' then you almost certainly want to
+//config:	be using the version 2 filesystem support.
 
 //                     APPLET_ODDNAME:name        main        location     suid_type     help
 //applet:IF_MKFS_MINIX(APPLET_ODDNAME(mkfs.minix, mkfs_minix, BB_DIR_SBIN, BB_SUID_DROP, mkfs_minix))
@@ -142,7 +142,10 @@ struct globals {
 	unsigned currently_testing;
 
 	char root_block[BLOCK_SIZE];
-	char superblock_buffer[BLOCK_SIZE];
+	union {
+		char superblock_buffer[BLOCK_SIZE];
+		struct minix_superblock SB;
+	} u;
 	char boot_block_buffer[512];
 	unsigned short good_blocks_table[MAX_GOOD_BLOCKS];
 	/* check_blocks(): buffer[] was the biggest static in entire bbox */
@@ -166,7 +169,7 @@ static ALWAYS_INLINE unsigned div_roundu
 #define INODE_BUF1              (((struct minix1_inode*)G.inode_buffer) - 1)
 #define INODE_BUF2              (((struct minix2_inode*)G.inode_buffer) - 1)
 
-#define SB                      (*(struct minix_superblock*)G.superblock_buffer)
+#define SB                      (G.u.SB)
 
 #define SB_INODES               (SB.s_ninodes)
 #define SB_IMAPS                (SB.s_imap_blocks)
@@ -234,7 +237,7 @@ static void write_tables(void)
 	xlseek(dev_fd, BLOCK_SIZE, SEEK_SET);
 
 	msg_eol = "can't write superblock";
-	xwrite(dev_fd, G.superblock_buffer, BLOCK_SIZE);
+	xwrite(dev_fd, G.u.superblock_buffer, BLOCK_SIZE);
 
 	msg_eol = "can't write inode map";
 	xwrite(dev_fd, G.inode_map, SB_IMAPS * BLOCK_SIZE);
@@ -541,7 +544,7 @@ static void setup_tables(void)
 	unsigned sb_zmaps;
 	unsigned i;
 
-	/* memset(G.superblock_buffer, 0, BLOCK_SIZE); */
+	/* memset(G.u.superblock_buffer, 0, BLOCK_SIZE); */
 	/* memset(G.boot_block_buffer, 0, 512); */
 	SB_MAGIC = G.magic;
 	SB_ZONE_SIZE = 0;
diff -urpN busybox-1.27.2/util-linux/mkfs_reiser.c busybox-1.28.0/util-linux/mkfs_reiser.c
--- busybox-1.27.2/util-linux/mkfs_reiser.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/mkfs_reiser.c	2017-08-17 13:50:45.000000000 +0200
@@ -11,8 +11,8 @@
 //config:	default n
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Utility to create ReiserFS filesystems.
-//config:	  Note: this applet needs a lot of testing and polishing.
+//config:	Utility to create ReiserFS filesystems.
+//config:	Note: this applet needs a lot of testing and polishing.
 
 //applet:IF_MKFS_REISER(APPLET_ODDNAME(mkfs.reiser, mkfs_reiser, BB_DIR_SBIN, BB_SUID_DROP, mkfs_reiser))
 
@@ -180,8 +180,7 @@ int mkfs_reiser_main(int argc UNUSED_PAR
 
 	// using global "option_mask32" instead of local "opts":
 	// we are register starved here
-	opt_complementary = "-1";
-	/*opts =*/ getopt32(argv, "b:+j:s:o:t:B:h:u:l:fqd",
+	/*opts =*/ getopt32(argv, "^" "b:+j:s:o:t:B:h:u:l:fqd" "\0" "-1",
 		NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, &label);
 	argv += optind; // argv[0] -- device
 
diff -urpN busybox-1.27.2/util-linux/mkfs_vfat.c busybox-1.28.0/util-linux/mkfs_vfat.c
--- busybox-1.27.2/util-linux/mkfs_vfat.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/mkfs_vfat.c	2017-08-17 13:50:45.000000000 +0200
@@ -8,18 +8,18 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config MKDOSFS
-//config:	bool "mkdosfs"
+//config:	bool "mkdosfs (6.8 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Utility to create FAT32 filesystems.
+//config:	Utility to create FAT32 filesystems.
 //config:
 //config:config MKFS_VFAT
-//config:	bool "mkfs.vfat"
+//config:	bool "mkfs.vfat (6.8 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Alias to "mkdosfs".
+//config:	Alias to "mkdosfs".
 
 //                    APPLET_ODDNAME:name       main       location     suid_type     help
 //applet:IF_MKDOSFS(  APPLET_ODDNAME(mkdosfs,   mkfs_vfat, BB_DIR_SBIN, BB_SUID_DROP, mkfs_vfat))
@@ -269,8 +269,9 @@ int mkfs_vfat_main(int argc UNUSED_PARAM
 		OPT_v = 1 << 16, // verbose
 	};
 
-	opt_complementary = "-1";//:b+:f+:F+:h+:r+:R+:s+:S+:vv:c--l:l--c";
-	opts = getopt32(argv, "Ab:cCf:F:h:Ii:l:m:n:r:R:s:S:v",
+	opts = getopt32(argv, "^"
+		"Ab:cCf:F:h:Ii:l:m:n:r:R:s:S:v"
+		"\0" "-1", //:b+:f+:F+:h+:r+:R+:s+:S+:vv:c--l:l--c
 		NULL, NULL, NULL, NULL, NULL,
 		NULL, NULL, &volume_label, NULL, NULL, NULL, NULL);
 	argv += optind;
diff -urpN busybox-1.27.2/util-linux/mkswap.c busybox-1.28.0/util-linux/mkswap.c
--- busybox-1.27.2/util-linux/mkswap.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/mkswap.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,29 +1,30 @@
 /* vi: set sw=4 ts=4: */
-/* mkswap.c - format swap device (Linux v1 only)
+/*
+ * mkswap.c - format swap device (Linux v1 only)
  *
  * Copyright 2006 Rob Landley <rob@landley.net>
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config MKSWAP
-//config:	bool "mkswap"
+//config:	bool "mkswap (5.8 kb)"
 //config:	default y
 //config:	help
-//config:	  The mkswap utility is used to configure a file or disk partition as
-//config:	  Linux swap space. This allows Linux to use the entire file or
-//config:	  partition as if it were additional RAM, which can greatly increase
-//config:	  the capability of low-memory machines. This additional memory is
-//config:	  much slower than real RAM, but can be very helpful at preventing your
-//config:	  applications being killed by the Linux out of memory (OOM) killer.
-//config:	  Once you have created swap space using 'mkswap' you need to enable
-//config:	  the swap space using the 'swapon' utility.
+//config:	The mkswap utility is used to configure a file or disk partition as
+//config:	Linux swap space. This allows Linux to use the entire file or
+//config:	partition as if it were additional RAM, which can greatly increase
+//config:	the capability of low-memory machines. This additional memory is
+//config:	much slower than real RAM, but can be very helpful at preventing your
+//config:	applications being killed by the Linux out of memory (OOM) killer.
+//config:	Once you have created swap space using 'mkswap' you need to enable
+//config:	the swap space using the 'swapon' utility.
 //config:
 //config:config FEATURE_MKSWAP_UUID
 //config:	bool "UUID support"
 //config:	default y
 //config:	depends on MKSWAP
 //config:	help
-//config:	  Generate swap spaces with universally unique identifiers.
+//config:	Generate swap spaces with universally unique identifiers.
 
 //applet:IF_MKSWAP(APPLET(mkswap, BB_DIR_SBIN, BB_SUID_DROP))
 
@@ -119,9 +120,8 @@ int mkswap_main(int argc UNUSED_PARAM, c
 
 	INIT_G();
 
-	opt_complementary = "-1"; /* at least one param */
 	/* TODO: -p PAGESZ, -U UUID */
-	getopt32(argv, "L:", &label);
+	getopt32(argv, "^" "L:" "\0" "-1"/*at least one arg*/, &label);
 	argv += optind;
 
 	fd = xopen(argv[0], O_WRONLY);
diff -urpN busybox-1.27.2/util-linux/more.c busybox-1.28.0/util-linux/more.c
--- busybox-1.27.2/util-linux/more.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/more.c	2017-07-24 18:57:10.000000000 +0200
@@ -14,14 +14,14 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config MORE
-//config:	bool "more"
+//config:	bool "more (6.7 kb)"
 //config:	default y
 //config:	help
-//config:	  more is a simple utility which allows you to read text one screen
-//config:	  sized page at a time. If you want to read text that is larger than
-//config:	  the screen, and you are using anything faster than a 300 baud modem,
-//config:	  you will probably find this utility very helpful. If you don't have
-//config:	  any need to reading text files, you can leave this disabled.
+//config:	more is a simple utility which allows you to read text one screen
+//config:	sized page at a time. If you want to read text that is larger than
+//config:	the screen, and you are using anything faster than a 300 baud modem,
+//config:	you will probably find this utility very helpful. If you don't have
+//config:	any need to reading text files, you can leave this disabled.
 
 //applet:IF_MORE(APPLET(more, BB_DIR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/util-linux/mount.c busybox-1.28.0/util-linux/mount.c
--- busybox-1.27.2/util-linux/mount.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/util-linux/mount.c	2017-08-17 13:50:45.000000000 +0200
@@ -18,44 +18,43 @@
 //
 
 //config:config MOUNT
-//config:	bool "mount"
+//config:	bool "mount (30 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  All files and filesystems in Unix are arranged into one big directory
-//config:	  tree. The 'mount' utility is used to graft a filesystem onto a
-//config:	  particular part of the tree. A filesystem can either live on a block
-//config:	  device, or it can be accessible over the network, as is the case with
-//config:	  NFS filesystems. Most people using BusyBox will also want to enable
-//config:	  the 'mount' utility.
+//config:	All files and filesystems in Unix are arranged into one big directory
+//config:	tree. The 'mount' utility is used to graft a filesystem onto a
+//config:	particular part of the tree. A filesystem can either live on a block
+//config:	device, or it can be accessible over the network, as is the case with
+//config:	NFS filesystems.
 //config:
 //config:config FEATURE_MOUNT_FAKE
-//config:	bool "Support option -f"
+//config:	bool "Support -f (fake mount)"
 //config:	default y
 //config:	depends on MOUNT
 //config:	help
-//config:	  Enable support for faking a file system mount.
+//config:	Enable support for faking a file system mount.
 //config:
 //config:config FEATURE_MOUNT_VERBOSE
-//config:	bool "Support option -v"
+//config:	bool "Support -v (verbose)"
 //config:	default y
 //config:	depends on MOUNT
 //config:	help
-//config:	  Enable multi-level -v[vv...] verbose messages. Useful if you
-//config:	  debug mount problems and want to see what is exactly passed
-//config:	  to the kernel.
+//config:	Enable multi-level -v[vv...] verbose messages. Useful if you
+//config:	debug mount problems and want to see what is exactly passed
+//config:	to the kernel.
 //config:
 //config:config FEATURE_MOUNT_HELPERS
 //config:	bool "Support mount helpers"
 //config:	default n
 //config:	depends on MOUNT
 //config:	help
-//config:	  Enable mounting of virtual file systems via external helpers.
-//config:	  E.g. "mount obexfs#-b00.11.22.33.44.55 /mnt" will in effect call
-//config:	  "obexfs -b00.11.22.33.44.55 /mnt"
-//config:	  Also "mount -t sometype [-o opts] fs /mnt" will try
-//config:	  "sometype [-o opts] fs /mnt" if simple mount syscall fails.
-//config:	  The idea is to use such virtual filesystems in /etc/fstab.
+//config:	Enable mounting of virtual file systems via external helpers.
+//config:	E.g. "mount obexfs#-b00.11.22.33.44.55 /mnt" will in effect call
+//config:	"obexfs -b00.11.22.33.44.55 /mnt"
+//config:	Also "mount -t sometype [-o opts] fs /mnt" will try
+//config:	"sometype [-o opts] fs /mnt" if simple mount syscall fails.
+//config:	The idea is to use such virtual filesystems in /etc/fstab.
 //config:
 //config:config FEATURE_MOUNT_LABEL
 //config:	bool "Support specifying devices by label or UUID"
@@ -63,54 +62,52 @@
 //config:	depends on MOUNT
 //config:	select VOLUMEID
 //config:	help
-//config:	  This allows for specifying a device by label or uuid, rather than by
-//config:	  name. This feature utilizes the same functionality as blkid/findfs.
-//config:	  This also enables label or uuid support for swapon.
+//config:	This allows for specifying a device by label or uuid, rather than by
+//config:	name. This feature utilizes the same functionality as blkid/findfs.
 //config:
 //config:config FEATURE_MOUNT_NFS
 //config:	bool "Support mounting NFS file systems on Linux < 2.6.23"
 //config:	default n
 //config:	depends on MOUNT
-//config:	select FEATURE_HAVE_RPC
 //config:	select FEATURE_SYSLOG
 //config:	help
-//config:	  Enable mounting of NFS file systems on Linux kernels prior
-//config:	  to version 2.6.23. Note that in this case mounting of NFS
-//config:	  over IPv6 will not be possible.
+//config:	Enable mounting of NFS file systems on Linux kernels prior
+//config:	to version 2.6.23. Note that in this case mounting of NFS
+//config:	over IPv6 will not be possible.
 //config:
-//config:	  Note that this option links in RPC support from libc,
-//config:	  which is rather large (~10 kbytes on uclibc).
+//config:	Note that this option links in RPC support from libc,
+//config:	which is rather large (~10 kbytes on uclibc).
 //config:
 //config:config FEATURE_MOUNT_CIFS
 //config:	bool "Support mounting CIFS/SMB file systems"
 //config:	default y
 //config:	depends on MOUNT
 //config:	help
-//config:	  Enable support for samba mounts.
+//config:	Enable support for samba mounts.
 //config:
 //config:config FEATURE_MOUNT_FLAGS
 //config:	depends on MOUNT
 //config:	bool "Support lots of -o flags"
 //config:	default y
 //config:	help
-//config:	  Without this, mount only supports ro/rw/remount. With this, it
-//config:	  supports nosuid, suid, dev, nodev, exec, noexec, sync, async, atime,
-//config:	  noatime, diratime, nodiratime, loud, bind, move, shared, slave,
-//config:	  private, unbindable, rshared, rslave, rprivate, and runbindable.
+//config:	Without this, mount only supports ro/rw/remount. With this, it
+//config:	supports nosuid, suid, dev, nodev, exec, noexec, sync, async, atime,
+//config:	noatime, diratime, nodiratime, loud, bind, move, shared, slave,
+//config:	private, unbindable, rshared, rslave, rprivate, and runbindable.
 //config:
 //config:config FEATURE_MOUNT_FSTAB
 //config:	depends on MOUNT
-//config:	bool "Support /etc/fstab and -a"
+//config:	bool "Support /etc/fstab and -a (mount all)"
 //config:	default y
 //config:	help
-//config:	  Support mount all and looking for files in /etc/fstab.
+//config:	Support mount all and looking for files in /etc/fstab.
 //config:
 //config:config FEATURE_MOUNT_OTHERTAB
 //config:	depends on FEATURE_MOUNT_FSTAB
 //config:	bool "Support -T <alt_fstab>"
 //config:	default y
 //config:	help
-//config:	  Support mount -T (specifying an alternate fstab)
+//config:	Support mount -T (specifying an alternate fstab)
 
 /* On full-blown systems, requires suid for user mounts.
  * But it's not unthinkable to have it available in non-suid flavor on some systems,
@@ -2207,10 +2204,14 @@ int mount_main(int argc UNUSED_PARAM, ch
 
 	// Parse remaining options
 	// Max 2 params; -o is a list, -v is a counter
-	opt_complementary = "?2" IF_FEATURE_MOUNT_VERBOSE("vv");
-	opt = getopt32(argv, OPTION_STR, &lst_o, &fstype, &O_optmatch
-			IF_FEATURE_MOUNT_OTHERTAB(, &fstabname)
-			IF_FEATURE_MOUNT_VERBOSE(, &verbose));
+	opt = getopt32(argv, "^"
+		OPTION_STR
+		"\0" "?2"IF_FEATURE_MOUNT_VERBOSE("vv"),
+		&lst_o, &fstype, &O_optmatch
+		IF_FEATURE_MOUNT_OTHERTAB(, &fstabname)
+		IF_FEATURE_MOUNT_VERBOSE(, &verbose)
+	);
+
 	while (lst_o) append_mount_options(&cmdopts, llist_pop(&lst_o)); // -o
 	if (opt & OPT_r) append_mount_options(&cmdopts, "ro"); // -r
 	if (opt & OPT_w) append_mount_options(&cmdopts, "rw"); // -w
diff -urpN busybox-1.27.2/util-linux/mountpoint.c busybox-1.28.0/util-linux/mountpoint.c
--- busybox-1.27.2/util-linux/mountpoint.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/mountpoint.c	2017-08-17 13:50:45.000000000 +0200
@@ -9,12 +9,12 @@
  * Based on sysvinit's mountpoint
  */
 //config:config MOUNTPOINT
-//config:	bool "mountpoint"
+//config:	bool "mountpoint (4.5 kb)"
 //config:	default y
 //config:	help
-//config:	  mountpoint checks if the directory is a mountpoint.
+//config:	mountpoint checks if the directory is a mountpoint.
 
-//applet:IF_MOUNTPOINT(APPLET(mountpoint, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_MOUNTPOINT(APPLET_NOEXEC(mountpoint, mountpoint, BB_DIR_BIN, BB_SUID_DROP, mountpoint))
 
 //kbuild:lib-$(CONFIG_MOUNTPOINT) += mountpoint.o
 
@@ -43,8 +43,7 @@ int mountpoint_main(int argc UNUSED_PARA
 	char *arg;
 	int rc, opt;
 
-	opt_complementary = "=1"; /* must have one argument */
-	opt = getopt32(argv, "qdxn");
+	opt = getopt32(argv, "^" "qdxn" "\0" "=1");
 #define OPT_q (1)
 #define OPT_d (2)
 #define OPT_x (4)
diff -urpN busybox-1.27.2/util-linux/nsenter.c busybox-1.28.0/util-linux/nsenter.c
--- busybox-1.27.2/util-linux/nsenter.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/nsenter.c	2017-10-05 11:53:08.000000000 +0200
@@ -6,21 +6,12 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config NSENTER
-//config:	bool "nsenter"
+//config:	bool "nsenter (8.6 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Run program with namespaces of other processes.
-//config:
-//config:config FEATURE_NSENTER_LONG_OPTS
-//config:	bool "Enable long options"
-//config:	default y
-//config:	depends on NSENTER && LONG_OPTS
-//config:	help
-//config:	  Support long options for the nsenter applet. This makes
-//config:	  the busybox implementation more compatible with upstream.
+//config:	Run program with namespaces of other processes.
 
 //applet:IF_NSENTER(APPLET(nsenter, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -28,22 +19,6 @@
 
 //usage:#define nsenter_trivial_usage
 //usage:       "[OPTIONS] [PROG [ARGS]]"
-//usage:#if ENABLE_FEATURE_NSENTER_LONG_OPTS
-//usage:#define nsenter_full_usage "\n"
-//usage:     "\n	-t,--target PID		Target process to get namespaces from"
-//usage:     "\n	-m,--mount[=FILE]	Enter mount namespace"
-//usage:     "\n	-u,--uts[=FILE]		Enter UTS namespace (hostname etc)"
-//usage:     "\n	-i,--ipc[=FILE]		Enter System V IPC namespace"
-//usage:     "\n	-n,--net[=FILE]		Enter network namespace"
-//usage:     "\n	-p,--pid[=FILE]		Enter pid namespace"
-//usage:     "\n	-U,--user[=FILE]	Enter user namespace"
-//usage:     "\n	-S,--setuid UID		Set uid in entered namespace"
-//usage:     "\n	-G,--setgid GID		Set gid in entered namespace"
-//usage:     "\n	--preserve-credentials	Don't touch uids or gids"
-//usage:     "\n	-r,--root[=DIR]		Set root directory"
-//usage:     "\n	-w,--wd[=DIR]		Set working directory"
-//usage:     "\n	-F,--no-fork		Don't fork before exec'ing PROG"
-//usage:#else
 //usage:#define nsenter_full_usage "\n"
 //usage:     "\n	-t PID		Target process to get namespaces from"
 //usage:     "\n	-m[FILE]	Enter mount namespace"
@@ -54,10 +29,12 @@
 //usage:     "\n	-U[FILE]	Enter user namespace"
 //usage:     "\n	-S UID		Set uid in entered namespace"
 //usage:     "\n	-G GID		Set gid in entered namespace"
+//usage:	IF_LONG_OPTS(
+//usage:     "\n	--preserve-credentials	Don't touch uids or gids"
+//usage:	)
 //usage:     "\n	-r[DIR]		Set root directory"
 //usage:     "\n	-w[DIR]		Set working directory"
 //usage:     "\n	-F		Don't fork before exec'ing PROG"
-//usage:#endif
 
 #include <sched.h>
 #ifndef CLONE_NEWUTS
@@ -101,7 +78,7 @@ enum {
 	OPT_root	= 1 << 9,
 	OPT_wd		= 1 << 10,
 	OPT_nofork	= 1 << 11,
-	OPT_prescred	= (1 << 12) * ENABLE_FEATURE_NSENTER_LONG_OPTS,
+	OPT_prescred	= (1 << 12) * ENABLE_LONG_OPTS,
 };
 enum {
 	NS_USR_POS = 0,
@@ -130,7 +107,7 @@ static const struct namespace_descr ns_l
  */
 static const char opt_str[] ALIGN1 = "U::i::u::n::p::m::""t+S+G+r::w::F";
 
-#if ENABLE_FEATURE_NSENTER_LONG_OPTS
+#if ENABLE_LONG_OPTS
 static const char nsenter_longopts[] ALIGN1 =
 	"user\0"			Optional_argument	"U"
 	"ipc\0"				Optional_argument	"i"
@@ -190,8 +167,7 @@ int nsenter_main(int argc UNUSED_PARAM,
 
 	memset(ns_ctx_list, 0, sizeof(ns_ctx_list));
 
-	IF_FEATURE_NSENTER_LONG_OPTS(applet_long_options = nsenter_longopts);
-	opts = getopt32(argv, opt_str,
+	opts = getopt32long(argv, opt_str, nsenter_longopts,
 			&ns_ctx_list[NS_USR_POS].path,
 			&ns_ctx_list[NS_IPC_POS].path,
 			&ns_ctx_list[NS_UTS_POS].path,
diff -urpN busybox-1.27.2/util-linux/pivot_root.c busybox-1.28.0/util-linux/pivot_root.c
--- busybox-1.27.2/util-linux/pivot_root.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/pivot_root.c	2017-08-08 14:08:06.000000000 +0200
@@ -9,19 +9,19 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config PIVOT_ROOT
-//config:	bool "pivot_root"
+//config:	bool "pivot_root (898 bytes)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  The pivot_root utility swaps the mount points for the root filesystem
-//config:	  with some other mounted filesystem. This allows you to do all sorts
-//config:	  of wild and crazy things with your Linux system and is far more
-//config:	  powerful than 'chroot'.
+//config:	The pivot_root utility swaps the mount points for the root filesystem
+//config:	with some other mounted filesystem. This allows you to do all sorts
+//config:	of wild and crazy things with your Linux system and is far more
+//config:	powerful than 'chroot'.
 //config:
-//config:	  Note: This is for initrd in linux 2.4. Under initramfs (introduced
-//config:	  in linux 2.6) use switch_root instead.
+//config:	Note: This is for initrd in linux 2.4. Under initramfs (introduced
+//config:	in linux 2.6) use switch_root instead.
 
-//applet:IF_PIVOT_ROOT(APPLET(pivot_root, BB_DIR_SBIN, BB_SUID_DROP))
+//applet:IF_PIVOT_ROOT(APPLET_NOFORK(pivot_root, pivot_root, BB_DIR_SBIN, BB_SUID_DROP, pivot_root))
 
 //kbuild:lib-$(CONFIG_PIVOT_ROOT) += pivot_root.o
 
@@ -33,7 +33,7 @@
 
 #include "libbb.h"
 
-extern int pivot_root(const char * new_root,const char * put_old);
+extern int pivot_root(const char *new_root, const char *put_old);
 
 int pivot_root_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int pivot_root_main(int argc, char **argv)
@@ -41,6 +41,8 @@ int pivot_root_main(int argc, char **arg
 	if (argc != 3)
 		bb_show_usage();
 
+	/* NOFORK applet. Hardly matters wrt performance, but code is trivial */
+
 	if (pivot_root(argv[1], argv[2]) < 0) {
 		/* prints "pivot_root: <strerror text>" */
 		bb_perror_nomsg_and_die();
diff -urpN busybox-1.27.2/util-linux/rdate.c busybox-1.28.0/util-linux/rdate.c
--- busybox-1.27.2/util-linux/rdate.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/rdate.c	2017-08-17 13:50:45.000000000 +0200
@@ -8,13 +8,13 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config RDATE
-//config:	bool "rdate"
+//config:	bool "rdate (6 kb)"
 //config:	default y
 //config:	help
-//config:	  The rdate utility allows you to synchronize the date and time of your
-//config:	  system clock with the date and time of a remote networked system using
-//config:	  the RFC868 protocol, which is built into the inetd daemon on most
-//config:	  systems.
+//config:	The rdate utility allows you to synchronize the date and time of your
+//config:	system clock with the date and time of a remote networked system using
+//config:	the RFC868 protocol, which is built into the inetd daemon on most
+//config:	systems.
 
 //applet:IF_RDATE(APPLET(rdate, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -41,7 +41,7 @@ static time_t askremotedate(const char *
 	uint32_t nett;
 	int fd;
 
-	/* Add a timeout for dead or inaccessible servers */
+	/* Timeout for dead or inaccessible servers */
 	alarm(10);
 	signal(SIGALRM, socket_timeout);
 
@@ -53,9 +53,8 @@ static time_t askremotedate(const char *
 		close(fd);
 
 	/* Convert from network byte order to local byte order.
-	 * RFC 868 time is the number of seconds
-	 * since 00:00 (midnight) 1 January 1900 GMT
-	 * the RFC 868 time 2,208,988,800 corresponds to 00:00  1 Jan 1970 GMT
+	 * RFC 868 time is seconds since 1900-01-01 00:00 GMT.
+	 * RFC 868 time 2,208,988,800 corresponds to 1970-01-01 00:00 GMT.
 	 * Subtract the RFC 868 time to get Linux epoch.
 	 */
 	nett = ntohl(nett) - RFC_868_BIAS;
@@ -66,7 +65,7 @@ static time_t askremotedate(const char *
 		 * current time  cur = 0x123ffffffff.
 		 * Assuming our time is not some 40 years off,
 		 * remote time must be 0x12400000001.
-		 * Need to adjust out time by (int32_t)(nett - cur).
+		 * Need to adjust our time by (int32_t)(nett - cur).
 		 */
 		time_t cur = time(NULL);
 		int32_t adjust = (int32_t)(nett - (uint32_t)cur);
@@ -82,8 +81,7 @@ int rdate_main(int argc UNUSED_PARAM, ch
 	time_t remote_time;
 	unsigned flags;
 
-	opt_complementary = "-1";
-	flags = getopt32(argv, "sp");
+	flags = getopt32(argv, "^" "sp" "\0" "-1");
 
 	remote_time = askremotedate(argv[optind]);
 
diff -urpN busybox-1.27.2/util-linux/rdev.c busybox-1.28.0/util-linux/rdev.c
--- busybox-1.27.2/util-linux/rdev.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/rdev.c	2017-10-05 11:53:08.000000000 +0200
@@ -6,15 +6,14 @@
  *   Grant Erickson <gerickson@nuovations.com>
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
- *
  */
 //config:config RDEV
-//config:	bool "rdev"
+//config:	bool "rdev (1.4 kb)"
 //config:	default y
 //config:	help
-//config:	  Print the device node associated with the filesystem mounted at '/'.
+//config:	Print the device node associated with the filesystem mounted at '/'.
 
-//applet:IF_RDEV(APPLET(rdev, BB_DIR_USR_SBIN, BB_SUID_DROP))
+//applet:IF_RDEV(APPLET_NOEXEC(rdev, rdev, BB_DIR_USR_SBIN, BB_SUID_DROP, rdev))
 
 //kbuild:lib-$(CONFIG_RDEV) += rdev.o
 
diff -urpN busybox-1.27.2/util-linux/readprofile.c busybox-1.28.0/util-linux/readprofile.c
--- busybox-1.27.2/util-linux/readprofile.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/readprofile.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,8 +1,8 @@
 /* vi: set sw=4 ts=4: */
 /*
- *  readprofile.c - used to read /proc/profile
+ * readprofile.c - used to read /proc/profile
  *
- *  Copyright (C) 1994,1996 Alessandro Rubini (rubini@ipvvis.unipv.it)
+ * Copyright (C) 1994,1996 Alessandro Rubini (rubini@ipvvis.unipv.it)
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
@@ -32,11 +32,11 @@
  * Paul Mundt <lethal@linux-sh.org>.
  */
 //config:config READPROFILE
-//config:	bool "readprofile"
+//config:	bool "readprofile (7.2 kb)"
 //config:	default y
 //config:	#select PLATFORM_LINUX
 //config:	help
-//config:	  This allows you to parse /proc/profile for basic profiling.
+//config:	This allows you to parse /proc/profile for basic profiling.
 
 //applet:IF_READPROFILE(APPLET(readprofile, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -266,8 +266,10 @@ int readprofile_main(int argc UNUSED_PAR
 		printf("%6u %-40s %8.4f\n",
 			total, "total", total/(double)(fn_add-add0));
 
-	fclose(map);
-	free(buf);
+	if (ENABLE_FEATURE_CLEAN_UP) {
+		fclose(map);
+		free(buf);
+	}
 
 	return EXIT_SUCCESS;
 }
diff -urpN busybox-1.27.2/util-linux/renice.c busybox-1.28.0/util-linux/renice.c
--- busybox-1.27.2/util-linux/renice.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/renice.c	2017-08-08 14:08:06.000000000 +0200
@@ -19,13 +19,13 @@
  *   following IDs (if any).  Multiple switches are allowed.
  */
 //config:config RENICE
-//config:	bool "renice"
+//config:	bool "renice (3.8 kb)"
 //config:	default y
 //config:	help
-//config:	  Renice alters the scheduling priority of one or more running
-//config:	  processes.
+//config:	Renice alters the scheduling priority of one or more running
+//config:	processes.
 
-//applet:IF_RENICE(APPLET(renice, BB_DIR_USR_BIN, BB_SUID_DROP))
+//applet:IF_RENICE(APPLET_NOEXEC(renice, renice, BB_DIR_USR_BIN, BB_SUID_DROP, renice))
 
 //kbuild:lib-$(CONFIG_RENICE) += renice.o
 
diff -urpN busybox-1.27.2/util-linux/rev.c busybox-1.28.0/util-linux/rev.c
--- busybox-1.27.2/util-linux/rev.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/rev.c	2017-07-24 18:57:10.000000000 +0200
@@ -6,10 +6,10 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config REV
-//config:	bool "rev"
+//config:	bool "rev (4.5 kb)"
 //config:	default y
 //config:	help
-//config:	  Reverse lines of a file or files.
+//config:	Reverse lines of a file or files.
 
 //applet:IF_REV(APPLET(rev, BB_DIR_BIN, BB_SUID_DROP))
 
diff -urpN busybox-1.27.2/util-linux/rtcwake.c busybox-1.28.0/util-linux/rtcwake.c
--- busybox-1.27.2/util-linux/rtcwake.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/rtcwake.c	2017-08-17 13:50:45.000000000 +0200
@@ -23,11 +23,11 @@
  * That flag should not be needed on systems with adjtime support.
  */
 //config:config RTCWAKE
-//config:	bool "rtcwake"
+//config:	bool "rtcwake (6.4 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Enter a system sleep state until specified wakeup time.
+//config:	Enter a system sleep state until specified wakeup time.
 
 //applet:IF_RTCWAKE(APPLET(rtcwake, BB_DIR_USR_SBIN, BB_SUID_DROP))
 
@@ -154,11 +154,11 @@ int rtcwake_main(int argc UNUSED_PARAM,
 		"seconds\0" Required_argument "s"
 		"time\0"    Required_argument "t"
 		;
-	applet_long_options = rtcwake_longopts;
 #endif
-	/* Must have -s or -t, exclusive */
-	opt_complementary = "s:t:s--t:t--s";
-	opt = getopt32(argv, "alud:m:s:t:", &rtcname, &suspend, &opt_seconds, &opt_time);
+	opt = getopt32long(argv,
+			/* Must have -s or -t, exclusive */
+			"^alud:m:s:t:" "\0" "s:t:s--t:t--s", rtcwake_longopts,
+			&rtcname, &suspend, &opt_seconds, &opt_time);
 
 	/* this is the default
 	if (opt & RTCWAKE_OPT_AUTO)
diff -urpN busybox-1.27.2/util-linux/script.c busybox-1.28.0/util-linux/script.c
--- busybox-1.27.2/util-linux/script.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/script.c	2017-08-17 13:50:45.000000000 +0200
@@ -11,25 +11,35 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config SCRIPT
-//config:	bool "script"
+//config:	bool "script (8 kb)"
 //config:	default y
 //config:	help
-//config:	  The script makes typescript of terminal session.
+//config:	The script makes typescript of terminal session.
 
 //applet:IF_SCRIPT(APPLET(script, BB_DIR_USR_BIN, BB_SUID_DROP))
 
 //kbuild:lib-$(CONFIG_SCRIPT) += script.o
 
 //usage:#define script_trivial_usage
-//usage:       "[-afq" IF_SCRIPTREPLAY("t") "] [-c PROG] [OUTFILE]"
+//usage:       "[-afq] [-t[FILE]] [-c PROG] [OUTFILE]"
 //usage:#define script_full_usage "\n\n"
-//usage:       "	-a	Append output"
+//usage:       "Default OUTFILE is 'typescript'"
+//usage:     "\n"
+//usage:     "\n	-a	Append output"
 //usage:     "\n	-c PROG	Run PROG, not shell"
-//usage:     "\n	-f	Flush output after each write"
+/* Accepted but has no effect (we never buffer output) */
+/*//usage:     "\n	-f	Flush output after each write"*/
 //usage:     "\n	-q	Quiet"
-//usage:	IF_SCRIPTREPLAY(
-//usage:     "\n	-t	Send timing to stderr"
-//usage:	)
+//usage:     "\n	-t[FILE] Send timing to stderr or FILE"
+
+//util-linux-2.28:
+//-e: return exit code of the child
+
+//FYI (reported as bbox bug #2749):
+// > script -q -c 'echo -e -n "1\n2\n3\n"' /dev/null </dev/null >123.txt
+// > The output file on full-blown ubuntu system contains 6 bytes.
+// > Output on Busybox system (arm-linux) contains extra '\r' byte in each line.
+//however, in my test, "script" from util-linux-2.28 seems to also add '\r' bytes.
 
 #include "libbb.h"
 #include "common_bufsiz.h"
@@ -46,6 +56,8 @@ int script_main(int argc UNUSED_PARAM, c
 	char pty_line[GETPTY_BUFSIZE];
 	struct termios tt, rtt;
 	struct winsize win;
+	FILE *timing_fp;
+	const char *str_t = NULL;
 	const char *fname = "typescript";
 	const char *shell;
 	char shell_opt[] = "-i";
@@ -59,19 +71,19 @@ int script_main(int argc UNUSED_PARAM, c
 	};
 
 #if ENABLE_LONG_OPTS
-	static const char getopt_longopts[] ALIGN1 =
+	static const char script_longopts[] ALIGN1 =
 		"append\0"  No_argument       "a"
 		"command\0" Required_argument "c"
 		"flush\0"   No_argument       "f"
 		"quiet\0"   No_argument       "q"
-		IF_SCRIPTREPLAY("timing\0" No_argument "t")
+		"timing\0"  Optional_argument "t"
 		;
-
-	applet_long_options = getopt_longopts;
 #endif
 
-	opt_complementary = "?1"; /* max one arg */
-	opt = getopt32(argv, "ac:fq" IF_SCRIPTREPLAY("t") , &shell_arg);
+	opt = getopt32long(argv, "^" "ac:fqt::" "\0" "?1"/* max one arg */,
+				script_longopts,
+				&shell_arg, &str_t
+	);
 	//argc -= optind;
 	argv += optind;
 	if (argv[0]) {
@@ -87,6 +99,10 @@ int script_main(int argc UNUSED_PARAM, c
 	if (!(opt & OPT_q)) {
 		printf("Script started, file is %s\n", fname);
 	}
+	timing_fp = stderr;
+	if (str_t) {
+		timing_fp = xfopen_for_write(str_t);
+	}
 
 	shell = get_shell_name();
 
@@ -120,8 +136,9 @@ int script_main(int argc UNUSED_PARAM, c
 		/* parent */
 		struct pollfd pfd[2];
 		int outfd, count, loop;
-		double oldtime = ENABLE_SCRIPTREPLAY ? time(NULL) : 0;
+		double oldtime = time(NULL);
 		smallint fd_count = 2;
+
 #define buf bb_common_bufsiz1
 		setup_common_bufsiz();
 
@@ -151,20 +168,21 @@ int script_main(int argc UNUSED_PARAM, c
 					goto restore;
 				}
 				if (count > 0) {
-					if (ENABLE_SCRIPTREPLAY && (opt & OPT_t)) {
+					if (opt & OPT_t) {
 						struct timeval tv;
 						double newtime;
 
 						gettimeofday(&tv, NULL);
 						newtime = tv.tv_sec + (double) tv.tv_usec / 1000000;
-						fprintf(stderr, "%f %u\n", newtime - oldtime, count);
+						fprintf(timing_fp, "%f %u\n", newtime - oldtime, count);
 						oldtime = newtime;
 					}
 					full_write(STDOUT_FILENO, buf, count);
 					full_write(outfd, buf, count);
-					if (opt & OPT_f) {
-						fsync(outfd);
-					}
+					// If we'd be using (buffered) FILE i/o, we'd need this:
+					//if (opt & OPT_f) {
+					//	fflush(outfd);
+					//}
 				}
 			}
 			if (pfd[1].revents) {
diff -urpN busybox-1.27.2/util-linux/scriptreplay.c busybox-1.28.0/util-linux/scriptreplay.c
--- busybox-1.27.2/util-linux/scriptreplay.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/scriptreplay.c	2017-08-08 14:08:06.000000000 +0200
@@ -5,21 +5,20 @@
  * pascal.bellard@ads-lu.com
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
- *
  */
 //config:config SCRIPTREPLAY
-//config:	bool "scriptreplay"
+//config:	bool "scriptreplay (2.6 kb)"
 //config:	default y
 //config:	help
-//config:	  This program replays a typescript, using timing information
-//config:	  given by script -t.
+//config:	This program replays a typescript, using timing information
+//config:	given by script -t.
 
 //applet:IF_SCRIPTREPLAY(APPLET(scriptreplay, BB_DIR_BIN, BB_SUID_DROP))
 
 //kbuild:lib-$(CONFIG_SCRIPTREPLAY) += scriptreplay.o
 
 //usage:#define scriptreplay_trivial_usage
-//usage:       "timingfile [typescript [divisor]]"
+//usage:       "TIMINGFILE [TYPESCRIPT [DIVISOR]]"
 //usage:#define scriptreplay_full_usage "\n\n"
 //usage:       "Play back typescripts, using timing information"
 
diff -urpN busybox-1.27.2/util-linux/setarch.c busybox-1.28.0/util-linux/setarch.c
--- busybox-1.27.2/util-linux/setarch.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/setarch.c	2017-08-08 14:08:06.000000000 +0200
@@ -7,33 +7,33 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config SETARCH
-//config:	bool "setarch"
+//config:	bool "setarch (3.4 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  The linux32 utility is used to create a 32bit environment for the
-//config:	  specified program (usually a shell). It only makes sense to have
-//config:	  this util on a system that supports both 64bit and 32bit userland
-//config:	  (like amd64/x86, ppc64/ppc, sparc64/sparc, etc...).
+//config:	The linux32 utility is used to create a 32bit environment for the
+//config:	specified program (usually a shell). It only makes sense to have
+//config:	this util on a system that supports both 64bit and 32bit userland
+//config:	(like amd64/x86, ppc64/ppc, sparc64/sparc, etc...).
 //config:
 //config:config LINUX32
-//config:	bool "linux32"
+//config:	bool "linux32 (3.2 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Alias to "setarch linux32".
+//config:	Alias to "setarch linux32".
 //config:
 //config:config LINUX64
-//config:	bool "linux64"
+//config:	bool "linux64 (3.2 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  Alias to "setarch linux64".
+//config:	Alias to "setarch linux64".
 
-//applet:IF_SETARCH(APPLET(setarch, BB_DIR_BIN, BB_SUID_DROP))
-//                  APPLET_ODDNAME:name     main     location    suid_type     help
-//applet:IF_LINUX32(APPLET_ODDNAME(linux32, setarch, BB_DIR_BIN, BB_SUID_DROP, linux32))
-//applet:IF_LINUX64(APPLET_ODDNAME(linux64, setarch, BB_DIR_BIN, BB_SUID_DROP, linux64))
+//applet:IF_SETARCH(APPLET_NOEXEC(setarch, setarch, BB_DIR_BIN, BB_SUID_DROP, setarch))
+//                  APPLET_NOEXEC:name     main     location    suid_type     help
+//applet:IF_LINUX32(APPLET_NOEXEC(linux32, setarch, BB_DIR_BIN, BB_SUID_DROP, linux32))
+//applet:IF_LINUX64(APPLET_NOEXEC(linux64, setarch, BB_DIR_BIN, BB_SUID_DROP, linux64))
 
 //kbuild:lib-$(CONFIG_SETARCH) += setarch.o
 //kbuild:lib-$(CONFIG_LINUX32) += setarch.o
diff -urpN busybox-1.27.2/util-linux/setpriv.c busybox-1.28.0/util-linux/setpriv.c
--- busybox-1.27.2/util-linux/setpriv.c	2017-07-18 19:20:58.000000000 +0200
+++ busybox-1.28.0/util-linux/setpriv.c	2017-09-07 14:42:40.000000000 +0200
@@ -5,16 +5,43 @@
  * Copyright (C) 2017 by  <assafgordon@gmail.com>
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
- *
  */
 //config:config SETPRIV
-//config:	bool "setpriv"
+//config:	bool "setpriv (3.4 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	select LONG_OPTS
 //config:	help
-//config:	  Run a program with different Linux privilege settings.
-//config:	  Requires kernel >= 3.5
+//config:	Run a program with different Linux privilege settings.
+//config:	Requires kernel >= 3.5
+//config:
+//config:config FEATURE_SETPRIV_DUMP
+//config:	bool "Support dumping current privilege state"
+//config:	default y
+//config:	depends on SETPRIV
+//config:	help
+//config:	Enables the "--dump" switch to print out the current privilege
+//config:	state. This is helpful for diagnosing problems.
+//config:
+//config:config FEATURE_SETPRIV_CAPABILITIES
+//config:	bool "Support capabilities"
+//config:	default y
+//config:	depends on SETPRIV
+//config:	help
+//config:	Capabilities can be used to grant processes additional rights
+//config:	without the necessity to always execute as the root user.
+//config:	Enabling this option enables "--dump" to show information on
+//config:	capabilities.
+//config:
+//config:config FEATURE_SETPRIV_CAPABILITY_NAMES
+//config:	bool "Support capability names"
+//config:	default y
+//config:	depends on SETPRIV && FEATURE_SETPRIV_CAPABILITIES
+//config:	help
+//config:	Capabilities can be either referenced via a human-readble name,
+//config:	e.g. "net_admin", or using their index, e.g. "cap_12". Enabling
+//config:	this option allows using the human-readable names in addition to
+//config:	the index-based names.
 
 //applet:IF_SETPRIV(APPLET(setpriv, BB_DIR_BIN, BB_SUID_DROP))
 
@@ -24,7 +51,14 @@
 //usage:	"[OPTIONS] PROG [ARGS]"
 //usage:#define setpriv_full_usage "\n\n"
 //usage:       "Run PROG with different privilege settings\n"
+//usage:	IF_FEATURE_SETPRIV_DUMP(
+//usage:     "\n-d,--dump		Show current capabilities"
+//usage:	)
 //usage:     "\n--nnp,--no-new-privs	Ignore setuid/setgid bits and file capabilities"
+//usage:	IF_FEATURE_SETPRIV_CAPABILITIES(
+//usage:     "\n--inh-caps CAP,CAP	Set inheritable capabilities"
+//usage:     "\n--ambient-caps CAP,CAP	Set ambient capabilities"
+//usage:	)
 
 //setpriv from util-linux 2.28:
 // -d, --dump               show current state (and do not exec anything)
@@ -44,31 +78,258 @@
 // --selinux-label <label>  set SELinux label
 // --apparmor-profile <pr>  set AppArmor profile
 
+#if ENABLE_FEATURE_SETPRIV_CAPABILITIES
+#include <linux/capability.h>
+// #include <sys/capability.h>
+// This header is in libcap, but the functions are in libc.
+// Comment in the header says this above capset/capget:
+/* system calls - look to libc for function to system call mapping */
+extern int capset(cap_user_header_t header, cap_user_data_t data);
+extern int capget(cap_user_header_t header, const cap_user_data_t data);
+// so for bbox, let's just repeat the declarations.
+// This way, libcap needs not be installed in build environment.
+#endif
 #include <sys/prctl.h>
 #include "libbb.h"
 
+#ifndef PR_CAPBSET_READ
+#define PR_CAPBSET_READ 23
+#endif
+
 #ifndef PR_SET_NO_NEW_PRIVS
 #define PR_SET_NO_NEW_PRIVS 38
 #endif
 
+#ifndef PR_GET_NO_NEW_PRIVS
+#define PR_GET_NO_NEW_PRIVS 39
+#endif
+
+#ifndef PR_CAP_AMBIENT
+#define PR_CAP_AMBIENT 47
+#define PR_CAP_AMBIENT_IS_SET 1
+#define PR_CAP_AMBIENT_RAISE 2
+#define PR_CAP_AMBIENT_LOWER 3
+#endif
+
+enum {
+	IF_FEATURE_SETPRIV_DUMP(OPTBIT_DUMP,)
+	IF_FEATURE_SETPRIV_CAPABILITIES(OPTBIT_INH,)
+	IF_FEATURE_SETPRIV_CAPABILITIES(OPTBIT_AMB,)
+	OPTBIT_NNP,
+
+	IF_FEATURE_SETPRIV_DUMP(OPT_DUMP = (1 << OPTBIT_DUMP),)
+	IF_FEATURE_SETPRIV_CAPABILITIES(OPT_INH  = (1 << OPTBIT_INH),)
+	IF_FEATURE_SETPRIV_CAPABILITIES(OPT_AMB  = (1 << OPTBIT_AMB),)
+	OPT_NNP  = (1 << OPTBIT_NNP),
+};
+
+#if ENABLE_FEATURE_SETPRIV_CAPABILITIES
+DEFINE_STRUCT_CAPS;
+
+static unsigned parse_cap(const char *cap)
+{
+	switch (cap[0]) {
+	case '-':
+		break;
+	case '+':
+		break;
+	default:
+		bb_error_msg_and_die("invalid capability '%s'", cap);
+		break;
+	}
+
+	cap++;
+	return cap_name_to_number(cap);
+}
+
+static void set_inh_caps(char *capstring)
+{
+	struct caps caps;
+
+	getcaps(&caps);
+
+	capstring = strtok(capstring, ",");
+	while (capstring) {
+		unsigned cap;
+
+		cap = parse_cap(capstring);
+		if (CAP_TO_INDEX(cap) >= caps.u32s)
+			bb_error_msg_and_die("invalid capability '%s'", capstring);
+
+		if (capstring[0] == '+')
+			caps.data[CAP_TO_INDEX(cap)].inheritable |= CAP_TO_MASK(cap);
+		else
+			caps.data[CAP_TO_INDEX(cap)].inheritable &= ~CAP_TO_MASK(cap);
+		capstring = strtok(NULL, ",");
+	}
+
+	if (capset(&caps.header, caps.data) != 0)
+		bb_perror_msg_and_die("capset");
+}
+
+static void set_ambient_caps(char *string)
+{
+	char *cap;
+
+	cap = strtok(string, ",");
+	while (cap) {
+		unsigned idx;
+
+		idx = parse_cap(cap);
+		if (cap[0] == '+') {
+			if (prctl(PR_CAP_AMBIENT, PR_CAP_AMBIENT_RAISE, idx, 0, 0) < 0)
+				bb_perror_msg("cap_ambient_raise");
+		} else {
+			if (prctl(PR_CAP_AMBIENT, PR_CAP_AMBIENT_LOWER, idx, 0, 0) < 0)
+				bb_perror_msg("cap_ambient_lower");
+		}
+		cap = strtok(NULL, ",");
+	}
+}
+#endif /* FEATURE_SETPRIV_CAPABILITIES */
+
+#if ENABLE_FEATURE_SETPRIV_DUMP
+# if !ENABLE_FEATURE_SETPRIV_CAPABILITY_NAMES
+#  define printf_cap(pfx, cap_no) printf("%scap_%u", (pfx), (cap_no))
+# endif
+
+static int dump(void)
+{
+	IF_FEATURE_SETPRIV_CAPABILITIES(struct caps caps;)
+	const char *fmt;
+	uid_t ruid, euid, suid;
+	gid_t rgid, egid, sgid;
+	gid_t *gids;
+	int i, ngids, nnp;
+
+	getresuid(&ruid, &euid, &suid); /* never fails in Linux */
+	getresgid(&rgid, &egid, &sgid); /* never fails in Linux */
+	ngids = 0;
+	gids = bb_getgroups(&ngids, NULL); /* never fails in Linux */
+
+	nnp = prctl(PR_GET_NO_NEW_PRIVS, 0, 0, 0, 0);
+	if (nnp < 0)
+		bb_perror_msg_and_die("prctl: %s", "GET_NO_NEW_PRIVS");
+
+	printf("uid: %u\n", (unsigned)ruid);
+	printf("euid: %u\n", (unsigned)euid);
+	printf("gid: %u\n", (unsigned)rgid);
+	printf("egid: %u\n", (unsigned)egid);
+
+	printf("Supplementary groups: ");
+	if (ngids == 0) {
+		printf("[none]");
+	} else {
+		fmt = ",%u" + 1;
+		for (i = 0; i < ngids; i++) {
+			printf(fmt, (unsigned)gids[i]);
+			fmt = ",%u";
+		}
+	}
+	printf("\nno_new_privs: %d\n", nnp);
+
+# if ENABLE_FEATURE_SETPRIV_CAPABILITIES
+	getcaps(&caps);
+	printf("Inheritable capabilities: ");
+	fmt = "";
+	for (i = 0; cap_valid(i); i++) {
+		unsigned idx = CAP_TO_INDEX(i);
+		if (idx >= caps.u32s) {
+			printf("\nindex: %u u32s: %u capability: %u\n", idx, caps.u32s, i);
+			bb_error_msg_and_die("unsupported capability");
+		}
+		if (caps.data[idx].inheritable & CAP_TO_MASK(i)) {
+			printf_cap(fmt, i);
+			fmt = ",";
+		}
+	}
+	if (!fmt[0])
+		printf("[none]");
+
+	printf("\nAmbient capabilities: ");
+	fmt = "";
+	for (i = 0; cap_valid(i); i++) {
+		int ret = prctl(PR_CAP_AMBIENT, PR_CAP_AMBIENT_IS_SET, (unsigned long) i, 0UL, 0UL);
+		if (ret < 0)
+			bb_perror_msg_and_die("prctl: %s", "CAP_AMBIENT_IS_SET");
+		if (ret) {
+			printf_cap(fmt, i);
+			fmt = ",";
+		}
+	}
+	if (i == 0)
+		printf("[unsupported]");
+	else if (!fmt[0])
+		printf("[none]");
+
+	printf("\nCapability bounding set: ");
+	fmt = "";
+	for (i = 0; cap_valid(i); i++) {
+		int ret = prctl(PR_CAPBSET_READ, (unsigned long) i, 0UL, 0UL, 0UL);
+		if (ret < 0)
+			bb_perror_msg_and_die("prctl: %s", "CAPBSET_READ");
+		if (ret) {
+			printf_cap(fmt, i);
+			fmt = ",";
+		}
+	}
+	if (!fmt[0])
+		printf("[none]");
+	bb_putchar('\n');
+# endif
+
+	if (ENABLE_FEATURE_CLEAN_UP)
+		free(gids);
+
+	return EXIT_SUCCESS;
+}
+#endif /* FEATURE_SETPRIV_DUMP */
+
 int setpriv_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int setpriv_main(int argc UNUSED_PARAM, char **argv)
 {
 	static const char setpriv_longopts[] ALIGN1 =
-		"nnp\0"          No_argument	"\xff"
-		"no-new-privs\0" No_argument	"\xff"
+		IF_FEATURE_SETPRIV_DUMP(
+		"dump\0"         No_argument		"d"
+		)
+		"nnp\0"          No_argument		"\xff"
+		"no-new-privs\0" No_argument		"\xff"
+		IF_FEATURE_SETPRIV_CAPABILITIES(
+		"inh-caps\0"     Required_argument	"\xfe"
+		"ambient-caps\0" Required_argument	"\xfd"
+		)
 		;
 	int opts;
+	IF_FEATURE_SETPRIV_CAPABILITIES(char *inh_caps, *ambient_caps;)
 
-	opt_complementary = "-1";
-	applet_long_options = setpriv_longopts;
-	opts = getopt32(argv, "+");
+	opts = getopt32long(argv, "+"
+		IF_FEATURE_SETPRIV_DUMP("d")
+		IF_FEATURE_SETPRIV_CAPABILITIES("\xfe:\xfd:"),
+		setpriv_longopts
+		IF_FEATURE_SETPRIV_CAPABILITIES(, &inh_caps, &ambient_caps)
+	);
+	argv += optind;
 
-	if (opts) {
+#if ENABLE_FEATURE_SETPRIV_DUMP
+	if (opts & OPT_DUMP) {
+		if (argv[0] || (opts - OPT_DUMP) != 0)
+			bb_show_usage();
+		return dump();
+	}
+#endif
+	if (opts & OPT_NNP) {
 		if (prctl(PR_SET_NO_NEW_PRIVS, 1, 0, 0, 0))
-			bb_simple_perror_msg_and_die("prctl: NO_NEW_PRIVS");
+			bb_perror_msg_and_die("prctl: %s", "SET_NO_NEW_PRIVS");
 	}
 
-	argv += optind;
+#if ENABLE_FEATURE_SETPRIV_CAPABILITIES
+	if (opts & OPT_INH)
+		set_inh_caps(inh_caps);
+	if (opts & OPT_AMB)
+		set_ambient_caps(ambient_caps);
+#endif
+
+	if (!argv[0])
+		bb_show_usage();
 	BB_EXECVP_or_die(argv);
 }
diff -urpN busybox-1.27.2/util-linux/setsid.c busybox-1.28.0/util-linux/setsid.c
--- busybox-1.27.2/util-linux/setsid.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/setsid.c	2017-08-17 13:50:45.000000000 +0200
@@ -14,10 +14,10 @@
  * - busyboxed
  */
 //config:config SETSID
-//config:	bool "setsid"
+//config:	bool "setsid (3.9 kb)"
 //config:	default y
 //config:	help
-//config:	  setsid runs a program in a new session
+//config:	setsid runs a program in a new session
 
 //applet:IF_SETSID(APPLET(setsid, BB_DIR_USR_BIN, BB_SUID_DROP))
 
@@ -37,8 +37,8 @@ int setsid_main(int argc UNUSED_PARAM, c
 {
 	unsigned opt;
 
-	opt_complementary = "-1"; /* at least one arg */
-	opt = getopt32(argv, "+c"); /* +: stop on first non-opt */
+	/* +: stop on first non-opt */
+	opt = getopt32(argv, "^+" "c" "\0" "-1"/* at least one arg */);
 	argv += optind;
 
 	/* setsid() is allowed only when we are not a process group leader.
diff -urpN busybox-1.27.2/util-linux/swaponoff.c busybox-1.28.0/util-linux/swaponoff.c
--- busybox-1.27.2/util-linux/swaponoff.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/swaponoff.c	2017-07-29 23:01:53.000000000 +0200
@@ -7,39 +7,45 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config SWAPON
-//config:	bool "swapon"
+//config:	bool "swapon (4.9 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  This option enables the 'swapon' utility.
-//config:	  Once you have created some swap space using 'mkswap', you also need
-//config:	  to enable your swap space with the 'swapon' utility. The 'swapoff'
-//config:	  utility is used, typically at system shutdown, to disable any swap
-//config:	  space. If you are not using any swap space, you can leave this
-//config:	  option disabled.
+//config:	Once you have created some swap space using 'mkswap', you also need
+//config:	to enable your swap space with the 'swapon' utility. The 'swapoff'
+//config:	utility is used, typically at system shutdown, to disable any swap
+//config:	space. If you are not using any swap space, you can leave this
+//config:	option disabled.
 //config:
 //config:config FEATURE_SWAPON_DISCARD
 //config:	bool "Support discard option -d"
 //config:	default y
 //config:	depends on SWAPON
 //config:	help
-//config:	  Enable support for discarding swap area blocks at swapon and/or as
-//config:	  the kernel frees them. This option enables both the -d option on
-//config:	  'swapon' and the 'discard' option for swap entries in /etc/fstab.
+//config:	Enable support for discarding swap area blocks at swapon and/or as
+//config:	the kernel frees them. This option enables both the -d option on
+//config:	'swapon' and the 'discard' option for swap entries in /etc/fstab.
 //config:
 //config:config FEATURE_SWAPON_PRI
 //config:	bool "Support priority option -p"
 //config:	default y
 //config:	depends on SWAPON
 //config:	help
-//config:	  Enable support for setting swap device priority in swapon.
+//config:	Enable support for setting swap device priority in swapon.
 //config:
 //config:config SWAPOFF
-//config:	bool "swapoff"
+//config:	bool "swapoff (4.3 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
+//config:
+//config:config FEATURE_SWAPONOFF_LABEL
+//config:	bool "Support specifying devices by label or UUID"
+//config:	default y
+//config:	depends on SWAPON || SWAPOFF
+//config:	select VOLUMEID
 //config:	help
-//config:	  This option enables the 'swapoff' utility.
+//config:	This allows for specifying a device by label or uuid, rather than by
+//config:	name. This feature utilizes the same functionality as blkid/findfs.
 
 //                  APPLET_ODDNAME:name     main         location     suid_type     help
 //applet:IF_SWAPON( APPLET_ODDNAME(swapon,  swap_on_off, BB_DIR_SBIN, BB_SUID_DROP, swapon))
@@ -75,7 +81,7 @@
 # include <sys/swap.h>
 #endif
 
-#if ENABLE_FEATURE_MOUNT_LABEL
+#if ENABLE_FEATURE_SWAPONOFF_LABEL
 # include "volume_id.h"
 #else
 # define resolve_mount_spec(fsname) ((void)0)
diff -urpN busybox-1.27.2/util-linux/switch_root.c busybox-1.28.0/util-linux/switch_root.c
--- busybox-1.27.2/util-linux/switch_root.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/switch_root.c	2017-10-20 10:36:58.000000000 +0200
@@ -1,45 +1,57 @@
 /* vi: set sw=4 ts=4: */
-/* Copyright 2005 Rob Landley <rob@landley.net>
+/*
+ * Copyright 2005 Rob Landley <rob@landley.net>
  *
  * Switch from rootfs to another filesystem as the root of the mount tree.
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config SWITCH_ROOT
-//config:	bool "switch_root"
+//config:	bool "switch_root (5.2 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  The switch_root utility is used from initramfs to select a new
-//config:	  root device. Under initramfs, you have to use this instead of
-//config:	  pivot_root. (Stop reading here if you don't care why.)
+//config:	The switch_root utility is used from initramfs to select a new
+//config:	root device. Under initramfs, you have to use this instead of
+//config:	pivot_root. (Stop reading here if you don't care why.)
 //config:
-//config:	  Booting with initramfs extracts a gzipped cpio archive into rootfs
-//config:	  (which is a variant of ramfs/tmpfs). Because rootfs can't be moved
-//config:	  or unmounted*, pivot_root will not work from initramfs. Instead,
-//config:	  switch_root deletes everything out of rootfs (including itself),
-//config:	  does a mount --move that overmounts rootfs with the new root, and
-//config:	  then execs the specified init program.
+//config:	Booting with initramfs extracts a gzipped cpio archive into rootfs
+//config:	(which is a variant of ramfs/tmpfs). Because rootfs can't be moved
+//config:	or unmounted*, pivot_root will not work from initramfs. Instead,
+//config:	switch_root deletes everything out of rootfs (including itself),
+//config:	does a mount --move that overmounts rootfs with the new root, and
+//config:	then execs the specified init program.
 //config:
-//config:	  * Because the Linux kernel uses rootfs internally as the starting
-//config:	  and ending point for searching through the kernel's doubly linked
-//config:	  list of active mount points. That's why.
+//config:	* Because the Linux kernel uses rootfs internally as the starting
+//config:	and ending point for searching through the kernel's doubly linked
+//config:	list of active mount points. That's why.
+//config:
+// RUN_INIT config item is in klibc-utils
 
 //applet:IF_SWITCH_ROOT(APPLET(switch_root, BB_DIR_SBIN, BB_SUID_DROP))
+//                      APPLET_ODDNAME:name      main         location     suid_type     help
+//applet:IF_RUN_INIT(   APPLET_ODDNAME(run-init, switch_root, BB_DIR_SBIN, BB_SUID_DROP, run_init))
 
 //kbuild:lib-$(CONFIG_SWITCH_ROOT) += switch_root.o
-
-//usage:#define switch_root_trivial_usage
-//usage:       "[-c /dev/console] NEW_ROOT NEW_INIT [ARGS]"
-//usage:#define switch_root_full_usage "\n\n"
-//usage:       "Free initramfs and switch to another root fs:\n"
-//usage:       "chroot to NEW_ROOT, delete all in /, move NEW_ROOT to /,\n"
-//usage:       "execute NEW_INIT. PID must be 1. NEW_ROOT must be a mountpoint.\n"
-//usage:     "\n	-c DEV	Reopen stdio to DEV after switch"
+//kbuild:lib-$(CONFIG_RUN_INIT)    += switch_root.o
 
 #include <sys/vfs.h>
 #include <sys/mount.h>
+#if ENABLE_RUN_INIT
+# include <sys/prctl.h>
+# include <linux/capability.h>
+// #include <sys/capability.h>
+// This header is in libcap, but the functions are in libc.
+// Comment in the header says this above capset/capget:
+/* system calls - look to libc for function to system call mapping */
+extern int capset(cap_user_header_t header, cap_user_data_t data);
+extern int capget(cap_user_header_t header, const cap_user_data_t data);
+// so for bbox, let's just repeat the declarations.
+// This way, libcap needs not be installed in build environment.
+#endif
+
 #include "libbb.h"
+
 // Make up for header deficiencies
 #ifndef RAMFS_MAGIC
 # define RAMFS_MAGIC ((unsigned)0x858458f6)
@@ -89,17 +101,125 @@ static void delete_contents(const char *
 	}
 }
 
+#if ENABLE_RUN_INIT
+DEFINE_STRUCT_CAPS;
+
+static void drop_capset(int cap_idx)
+{
+	struct caps caps;
+
+	getcaps(&caps);
+	caps.data[CAP_TO_INDEX(cap_idx)].inheritable &= ~CAP_TO_MASK(cap_idx);
+	if (capset(&caps.header, caps.data) != 0)
+		bb_perror_msg_and_die("capset");
+}
+
+static void drop_bounding_set(int cap_idx)
+{
+	int ret;
+
+	ret = prctl(PR_CAPBSET_READ, cap_idx, 0, 0, 0);
+	if (ret < 0)
+		bb_perror_msg_and_die("prctl: %s", "PR_CAPBSET_READ");
+
+	if (ret == 1) {
+		ret = prctl(PR_CAPBSET_DROP, cap_idx, 0, 0, 0);
+		if (ret != 0)
+			bb_perror_msg_and_die("prctl: %s", "PR_CAPBSET_DROP");
+	}
+}
+
+static void drop_usermodehelper(const char *filename, int cap_idx)
+{
+	unsigned lo, hi;
+	char buf[sizeof(int)*3 * 2 + 8];
+	int fd;
+	int ret;
+
+	ret = open_read_close(filename, buf, sizeof(buf) - 1);
+	if (ret < 0)
+		return; /* assuming files do not exist */
+
+	buf[ret] = '\0';
+	ret = sscanf(buf, "%u %u", &lo, &hi);
+	if (ret != 2)
+		bb_perror_msg_and_die("can't parse file '%s'", filename);
+
+	if (cap_idx < 32)
+		lo &= ~(1 << cap_idx);
+	else
+		hi &= ~(1 << (cap_idx - 32));
+
+	fd = xopen(filename, O_WRONLY);
+	fdprintf(fd, "%u %u", lo, hi);
+	close(fd);
+}
+
+static void drop_capabilities(char *string)
+{
+	char *cap;
+
+	cap = strtok(string, ",");
+	while (cap) {
+		unsigned cap_idx;
+
+		cap_idx = cap_name_to_number(cap);
+		drop_usermodehelper("/proc/sys/kernel/usermodehelper/bset", cap_idx);
+		drop_usermodehelper("/proc/sys/kernel/usermodehelper/inheritable", cap_idx);
+		drop_bounding_set(cap_idx);
+		drop_capset(cap_idx);
+		bb_error_msg("dropped capability: %s", cap);
+		cap = strtok(NULL, ",");
+	}
+}
+#endif
+
 int switch_root_main(int argc, char **argv) MAIN_EXTERNALLY_VISIBLE;
 int switch_root_main(int argc UNUSED_PARAM, char **argv)
 {
 	char *newroot, *console = NULL;
 	struct stat st;
 	struct statfs stfs;
+	unsigned dry_run = 0;
 	dev_t rootdev;
 
-	// Parse args (-c console)
-	opt_complementary = "-2"; // minimum 2 params
-	getopt32(argv, "+c:", &console); // '+': stop at first non-option
+	// Parse args. '+': stop at first non-option
+	if (ENABLE_SWITCH_ROOT && (!ENABLE_RUN_INIT || applet_name[0] == 's')) {
+//usage:#define switch_root_trivial_usage
+//usage:       "[-c CONSOLE_DEV] NEW_ROOT NEW_INIT [ARGS]"
+//usage:#define switch_root_full_usage "\n\n"
+//usage:       "Free initramfs and switch to another root fs:\n"
+//usage:       "chroot to NEW_ROOT, delete all in /, move NEW_ROOT to /,\n"
+//usage:       "execute NEW_INIT. PID must be 1. NEW_ROOT must be a mountpoint.\n"
+//usage:     "\n	-c DEV	Reopen stdio to DEV after switch"
+		getopt32(argv, "^+"
+			"c:"
+			"\0" "-2" /* minimum 2 args */,
+			&console
+		);
+	} else {
+#if ENABLE_RUN_INIT
+//usage:#define run_init_trivial_usage
+//usage:       "[-d CAP,CAP...] [-n] [-c CONSOLE_DEV] NEW_ROOT NEW_INIT [ARGS]"
+//usage:#define run_init_full_usage "\n\n"
+//usage:       "Free initramfs and switch to another root fs:\n"
+//usage:       "chroot to NEW_ROOT, delete all in /, move NEW_ROOT to /,\n"
+//usage:       "execute NEW_INIT. PID must be 1. NEW_ROOT must be a mountpoint.\n"
+//usage:     "\n	-c DEV	Reopen stdio to DEV after switch"
+//usage:     "\n	-d CAPS	Drop capabilities"
+//usage:     "\n	-n	Dry run"
+		char *cap_list = NULL;
+		dry_run = getopt32(argv, "^+"
+			"c:d:n"
+			"\0" "-2" /* minimum 2 args */,
+			&console,
+			&cap_list
+		);
+		dry_run >>= 2; // -n
+		if (cap_list)
+			drop_capabilities(cap_list);
+#endif
+	}
 	argv += optind;
 	newroot = *argv++;
 
@@ -108,9 +228,12 @@ int switch_root_main(int argc UNUSED_PAR
 	xstat("/", &st);
 	rootdev = st.st_dev;
 	xstat(".", &st);
-	if (st.st_dev == rootdev || getpid() != 1) {
+	if (st.st_dev == rootdev) {
 		// Show usage, it says new root must be a mountpoint
-		// and we must be PID 1
+		bb_show_usage();
+	}
+	if (!dry_run && getpid() != 1) {
+		// Show usage, it says we must be PID 1
 		bb_show_usage();
 	}
 
@@ -118,7 +241,7 @@ int switch_root_main(int argc UNUSED_PAR
 	// we mean it. I could make this a CONFIG option, but I would get email
 	// from all the people who WILL destroy their filesystems.
 	if (stat("/init", &st) != 0 || !S_ISREG(st.st_mode)) {
-		bb_error_msg_and_die("/init is not a regular file");
+		bb_error_msg_and_die("'%s' is not a regular file", "/init");
 	}
 	statfs("/", &stfs); // this never fails
 	if ((unsigned)stfs.f_type != RAMFS_MAGIC
@@ -127,13 +250,15 @@ int switch_root_main(int argc UNUSED_PAR
 		bb_error_msg_and_die("root filesystem is not ramfs/tmpfs");
 	}
 
-	// Zap everything out of rootdev
-	delete_contents("/", rootdev);
-
-	// Overmount / with newdir and chroot into it
-	if (mount(".", "/", NULL, MS_MOVE, NULL)) {
-		// For example, fails when newroot is not a mountpoint
-		bb_perror_msg_and_die("error moving root");
+	if (!dry_run) {
+		// Zap everything out of rootdev
+		delete_contents("/", rootdev);
+
+		// Overmount / with newdir and chroot into it
+		if (mount(".", "/", NULL, MS_MOVE, NULL)) {
+			// For example, fails when newroot is not a mountpoint
+			bb_perror_msg_and_die("error moving root");
+		}
 	}
 	xchroot(".");
 	// The chdir is needed to recalculate "." and ".." links
@@ -149,8 +274,17 @@ int switch_root_main(int argc UNUSED_PAR
 		}
 	}
 
-	// Exec real init
-	execv(argv[0], argv);
+	if (dry_run) {
+		// Does NEW_INIT look like it can be executed?
+		//xstat(argv[0], &st);
+		//if (!S_ISREG(st.st_mode))
+		//	bb_perror_msg_and_die("'%s' is not a regular file", argv[0]);
+		if (access(argv[0], X_OK) == 0)
+			return 0;
+	} else {
+		// Exec NEW_INIT
+		execv(argv[0], argv);
+	}
 	bb_perror_msg_and_die("can't execute '%s'", argv[0]);
 }
 
diff -urpN busybox-1.27.2/util-linux/taskset.c busybox-1.28.0/util-linux/taskset.c
--- busybox-1.27.2/util-linux/taskset.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/taskset.c	2017-10-05 11:53:08.000000000 +0200
@@ -5,24 +5,24 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config TASKSET
-//config:	bool "taskset"
+//config:	bool "taskset (4.1 kb)"
 //config:	default y
 //config:	help
-//config:	  Retrieve or set a processes's CPU affinity.
-//config:	  This requires sched_{g,s}etaffinity support in your libc.
+//config:	Retrieve or set a processes's CPU affinity.
+//config:	This requires sched_{g,s}etaffinity support in your libc.
 //config:
 //config:config FEATURE_TASKSET_FANCY
 //config:	bool "Fancy output"
 //config:	default y
 //config:	depends on TASKSET
 //config:	help
-//config:	  Needed for machines with more than 32-64 CPUs:
-//config:	  affinity parameter 0xHHHHHHHHHHHHHHHHHHHH can be arbitrarily long
-//config:	  in this case. Otherwise, it is limited to sizeof(long).
+//config:	Needed for machines with more than 32-64 CPUs:
+//config:	affinity parameter 0xHHHHHHHHHHHHHHHHHHHH can be arbitrarily long
+//config:	in this case. Otherwise, it is limited to sizeof(long).
+
+//applet:IF_TASKSET(APPLET_NOEXEC(taskset, taskset, BB_DIR_USR_BIN, BB_SUID_DROP, taskset))
 
-//applet:IF_TASKSET(APPLET(taskset, BB_DIR_USR_BIN, BB_SUID_DROP))
 //kbuild:lib-$(CONFIG_TASKSET) += taskset.o
 
 //usage:#define taskset_trivial_usage
@@ -123,8 +123,7 @@ int taskset_main(int argc UNUSED_PARAM,
 	 * Indeed, util-linux-2.13-pre7 uses:
 	 * getopt_long(argc, argv, "+pchV", ...), not "...p:..." */
 
-	opt_complementary = "-1"; /* at least 1 arg */
-	opt_p = getopt32(argv, "+p");
+	opt_p = getopt32(argv, "^+" "p" "\0" "-1" /* at least 1 arg */);
 	argv += optind;
 
 	aff = *argv++;
diff -urpN busybox-1.27.2/util-linux/uevent.c busybox-1.28.0/util-linux/uevent.c
--- busybox-1.27.2/util-linux/uevent.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/uevent.c	2017-08-17 13:50:45.000000000 +0200
@@ -4,12 +4,12 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config UEVENT
-//config:	bool "uevent"
+//config:	bool "uevent (3.2 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  uevent is a netlink listener for kernel uevent notifications
-//config:	  sent via netlink. It is usually used for dynamic device creation.
+//config:	uevent is a netlink listener for kernel uevent notifications
+//config:	sent via netlink. It is usually used for dynamic device creation.
 
 //applet:IF_UEVENT(APPLET(uevent, BB_DIR_SBIN, BB_SUID_DROP))
 
@@ -32,7 +32,10 @@
 #define env ((char **)bb_common_bufsiz1)
 #define INIT_G() do { setup_common_bufsiz(); } while (0)
 enum {
-	MAX_ENV = COMMON_BUFSIZE / sizeof(env[0]) - 1,
+	MAX_ENV = COMMON_BUFSIZE / sizeof(char*) - 1,
+	/* sizeof(env[0]) instead of sizeof(char*)
+	 * makes gcc-6.3.0 emit "strict-aliasing" warning.
+	 */
 };
 
 #ifndef SO_RCVBUFFORCE
diff -urpN busybox-1.27.2/util-linux/umount.c busybox-1.28.0/util-linux/umount.c
--- busybox-1.27.2/util-linux/umount.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/umount.c	2017-08-08 14:08:06.000000000 +0200
@@ -8,23 +8,36 @@
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
 //config:config UMOUNT
-//config:	bool "umount"
+//config:	bool "umount (4.5 kb)"
 //config:	default y
 //config:	select PLATFORM_LINUX
 //config:	help
-//config:	  When you want to remove a mounted filesystem from its current mount
-//config:	  point, for example when you are shutting down the system, the
-//config:	  'umount' utility is the tool to use. If you enabled the 'mount'
-//config:	  utility, you almost certainly also want to enable 'umount'.
+//config:	When you want to remove a mounted filesystem from its current mount
+//config:	point, for example when you are shutting down the system, the
+//config:	'umount' utility is the tool to use. If you enabled the 'mount'
+//config:	utility, you almost certainly also want to enable 'umount'.
 //config:
 //config:config FEATURE_UMOUNT_ALL
-//config:	bool "Support option -a"
+//config:	bool "Support -a (unmount all)"
 //config:	default y
 //config:	depends on UMOUNT
 //config:	help
-//config:	  Support -a option to unmount all currently mounted filesystems.
+//config:	Support -a option to unmount all currently mounted filesystems.
 
-//applet:IF_UMOUNT(APPLET(umount, BB_DIR_BIN, BB_SUID_DROP))
+//applet:IF_UMOUNT(APPLET_NOEXEC(umount, umount, BB_DIR_BIN, BB_SUID_DROP, umount))
+/*
+ * On one hand, in some weird situations you'd want umount
+ * to not do anything surprising, to behave as a usual fork+execed executable.
+ *
+ * OTOH, there can be situations where execing would not succeed, or even hang
+ * (say, if executable is on a filesystem which is in trouble and accesses to it
+ * block in kernel).
+ * In this case, you might be actually happy if your standalone bbox shell
+ * does not fork+exec, but only forks and calls umount_main() which it already has!
+ * Let's go with NOEXEC.
+ *
+ * bb_common_bufsiz1 usage here is safe wrt NOEXEC: not expecting it to be zeroed.
+ */
 
 //kbuild:lib-$(CONFIG_UMOUNT) += umount.o
 
diff -urpN busybox-1.27.2/util-linux/unshare.c busybox-1.28.0/util-linux/unshare.c
--- busybox-1.27.2/util-linux/unshare.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/unshare.c	2017-12-04 16:07:47.000000000 +0100
@@ -7,13 +7,13 @@
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
 //config:config UNSHARE
-//config:	bool "unshare"
+//config:	bool "unshare (9.2 kb)"
 //config:	default y
 //config:	depends on !NOMMU
 //config:	select PLATFORM_LINUX
 //config:	select LONG_OPTS
 //config:	help
-//config:	  Run program with some namespaces unshared from parent.
+//config:	Run program with some namespaces unshared from parent.
 
 // needs LONG_OPTS: it is awkward to exclude code which handles --propagation
 // and --setgroups based on LONG_OPTS, so instead applet requires LONG_OPTS.
@@ -137,7 +137,7 @@ static const struct namespace_descr ns_l
  * we are forced to use "fake" letters for them.
  * '+': stop at first non-option.
  */
-static const char opt_str[] ALIGN1 = "+muinpU""fr""\xfd::""\xfe:""\xff:";
+#define OPT_STR "+muinpU""fr""\xfd::""\xfe:""\xff:"
 static const char unshare_longopts[] ALIGN1 =
 	"mount\0"		Optional_argument	"\xf0"
 	"uts\0"			Optional_argument	"\xf1"
@@ -210,25 +210,23 @@ int unshare_main(int argc UNUSED_PARAM,
 	prop_str = PRIVATE_STR;
 	setgrp_str = NULL;
 
-	opt_complementary =
+	opts = getopt32long(argv, "^" OPT_STR "\0"
 		"\xf0""m" /* long opts (via their "fake chars") imply short opts */
 		":\xf1""u"
 		":\xf2""i"
 		":\xf3""n"
 		":\xf4""p"
 		":\xf5""U"
-		":ru"	   /* --map-root-user or -r implies -u */
+		":rU"	   /* --map-root-user or -r implies -U */
 		":\xfd""m" /* --mount-proc implies -m */
-	;
-	applet_long_options = unshare_longopts;
-	opts = getopt32(argv, opt_str,
-			&proc_mnt_target, &prop_str, &setgrp_str,
-			&ns_ctx_list[NS_MNT_POS].path,
-			&ns_ctx_list[NS_UTS_POS].path,
-			&ns_ctx_list[NS_IPC_POS].path,
-			&ns_ctx_list[NS_NET_POS].path,
-			&ns_ctx_list[NS_PID_POS].path,
-			&ns_ctx_list[NS_USR_POS].path
+		, unshare_longopts,
+		&proc_mnt_target, &prop_str, &setgrp_str,
+		&ns_ctx_list[NS_MNT_POS].path,
+		&ns_ctx_list[NS_UTS_POS].path,
+		&ns_ctx_list[NS_IPC_POS].path,
+		&ns_ctx_list[NS_NET_POS].path,
+		&ns_ctx_list[NS_PID_POS].path,
+		&ns_ctx_list[NS_USR_POS].path
 	);
 	argv += optind;
 	//bb_error_msg("opts:0x%x", opts);
@@ -341,7 +339,7 @@ int unshare_main(int argc UNUSED_PARAM,
 	}
 
 	if (opts & OPT_map_root) {
-		char uidmap_buf[sizeof("%u 0 1") + sizeof(int)*3];
+		char uidmap_buf[sizeof("0 %u 1") + sizeof(int)*3];
 
 		/*
 		 * Since Linux 3.19 unprivileged writing of /proc/self/gid_map
@@ -350,9 +348,9 @@ int unshare_main(int argc UNUSED_PARAM,
 		 * in that user namespace.
 		 */
 		xopen_xwrite_close(PATH_PROC_SETGROUPS, "deny");
-		sprintf(uidmap_buf, "%u 0 1", (unsigned)reuid);
+		sprintf(uidmap_buf, "0 %u 1", (unsigned)reuid);
 		xopen_xwrite_close(PATH_PROC_UIDMAP, uidmap_buf);
-		sprintf(uidmap_buf, "%u 0 1", (unsigned)regid);
+		sprintf(uidmap_buf, "0 %u 1", (unsigned)regid);
 		xopen_xwrite_close(PATH_PROC_GIDMAP, uidmap_buf);
 	} else
 	if (setgrp_str) {
diff -urpN busybox-1.27.2/util-linux/volume_id/bcache.c busybox-1.28.0/util-linux/volume_id/bcache.c
--- busybox-1.27.2/util-linux/volume_id/bcache.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/bcache.c	2017-10-05 11:53:08.000000000 +0200
@@ -7,14 +7,13 @@
  * Based on code fragments from bcache-tools by Kent Overstreet:
  * http://evilpiepirate.org/git/bcache-tools.git
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_BCACHE) += bcache.o
-
 //config:config FEATURE_VOLUMEID_BCACHE
 //config:	bool "bcache filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_BCACHE) += bcache.o
+
 #include "volume_id_internal.h"
 
 #define SB_LABEL_SIZE      32
diff -urpN busybox-1.27.2/util-linux/volume_id/btrfs.c busybox-1.28.0/util-linux/volume_id/btrfs.c
--- busybox-1.27.2/util-linux/volume_id/btrfs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/btrfs.c	2017-10-05 11:53:08.000000000 +0200
@@ -18,14 +18,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_BTRFS) += btrfs.o
-
 //config:config FEATURE_VOLUMEID_BTRFS
 //config:	bool "btrfs filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_BTRFS) += btrfs.o
+
 #include "volume_id_internal.h"
 
 #define BTRFS_UUID_SIZE 16
diff -urpN busybox-1.27.2/util-linux/volume_id/cramfs.c busybox-1.28.0/util-linux/volume_id/cramfs.c
--- busybox-1.27.2/util-linux/volume_id/cramfs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/cramfs.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_CRAMFS) += cramfs.o
-
 //config:config FEATURE_VOLUMEID_CRAMFS
 //config:	bool "cramfs filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_CRAMFS) += cramfs.o
+
 #include "volume_id_internal.h"
 
 struct cramfs_super {
diff -urpN busybox-1.27.2/util-linux/volume_id/exfat.c busybox-1.28.0/util-linux/volume_id/exfat.c
--- busybox-1.27.2/util-linux/volume_id/exfat.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/exfat.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,17 +17,16 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_EXFAT) += exfat.o
-
 //config:config FEATURE_VOLUMEID_EXFAT
 //config:	bool "exFAT filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 //config:	help
-//config:	  exFAT (extended FAT) is a proprietary file system designed especially
-//config:	  for flash drives. It has many features from NTFS, but with less
-//config:	  overhead. exFAT is used on most SDXC cards for consumer electronics.
+//config:	exFAT (extended FAT) is a proprietary file system designed especially
+//config:	for flash drives. It has many features from NTFS, but with less
+//config:	overhead. exFAT is used on most SDXC cards for consumer electronics.
+
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_EXFAT) += exfat.o
 
 #include "volume_id_internal.h"
 
diff -urpN busybox-1.27.2/util-linux/volume_id/ext.c busybox-1.28.0/util-linux/volume_id/ext.c
--- busybox-1.27.2/util-linux/volume_id/ext.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/ext.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_EXT) += ext.o
-
 //config:config FEATURE_VOLUMEID_EXT
 //config:	bool "Ext filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_EXT) += ext.o
+
 #include "volume_id_internal.h"
 #include "bb_e2fs_defs.h"
 
diff -urpN busybox-1.27.2/util-linux/volume_id/f2fs.c busybox-1.28.0/util-linux/volume_id/f2fs.c
--- busybox-1.27.2/util-linux/volume_id/f2fs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/f2fs.c	2017-10-05 11:53:08.000000000 +0200
@@ -5,18 +5,17 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_F2FS) += f2fs.o
-
 //config:config FEATURE_VOLUMEID_F2FS
 //config:	bool "f2fs filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 //config:	help
-//config:	  F2FS (aka Flash-Friendly File System) is a log-structured file system,
-//config:	  which is adapted to newer forms of storage. F2FS also remedies some
-//config:	  known issues of the older log structured file systems, such as high
-//config:	  cleaning overhead.
+//config:	F2FS (aka Flash-Friendly File System) is a log-structured file system,
+//config:	which is adapted to newer forms of storage. F2FS also remedies some
+//config:	known issues of the older log structured file systems, such as high
+//config:	cleaning overhead.
+
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_F2FS) += f2fs.o
 
 #include "volume_id_internal.h"
 
diff -urpN busybox-1.27.2/util-linux/volume_id/fat.c busybox-1.28.0/util-linux/volume_id/fat.c
--- busybox-1.27.2/util-linux/volume_id/fat.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/fat.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_FAT) += fat.o
-
 //config:config FEATURE_VOLUMEID_FAT
 //config:	bool "fat filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_FAT) += fat.o
+
 #include "volume_id_internal.h"
 
 /* linux/msdos_fs.h says: */
diff -urpN busybox-1.27.2/util-linux/volume_id/get_devname.c busybox-1.28.0/util-linux/volume_id/get_devname.c
--- busybox-1.27.2/util-linux/volume_id/get_devname.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/get_devname.c	2017-07-29 23:01:53.000000000 +0200
@@ -11,6 +11,7 @@
 //kbuild:lib-$(CONFIG_BLKID) += get_devname.o
 //kbuild:lib-$(CONFIG_FINDFS) += get_devname.o
 //kbuild:lib-$(CONFIG_FEATURE_MOUNT_LABEL) += get_devname.o
+//kbuild:lib-$(CONFIG_FEATURE_SWAPONOFF_LABEL) += get_devname.o
 
 #include <sys/mount.h> /* BLKGETSIZE64 */
 #if !defined(BLKGETSIZE64)
diff -urpN busybox-1.27.2/util-linux/volume_id/hfs.c busybox-1.28.0/util-linux/volume_id/hfs.c
--- busybox-1.27.2/util-linux/volume_id/hfs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/hfs.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_HFS) += hfs.o
-
 //config:config FEATURE_VOLUMEID_HFS
 //config:	bool "hfs filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_HFS) += hfs.o
+
 #include "volume_id_internal.h"
 
 struct hfs_finder_info{
diff -urpN busybox-1.27.2/util-linux/volume_id/iso9660.c busybox-1.28.0/util-linux/volume_id/iso9660.c
--- busybox-1.27.2/util-linux/volume_id/iso9660.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/iso9660.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_ISO9660) += iso9660.o
-
 //config:config FEATURE_VOLUMEID_ISO9660
 //config:	bool "iso9660 filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_ISO9660) += iso9660.o
+
 #include "volume_id_internal.h"
 
 #define ISO_SUPERBLOCK_OFFSET		0x8000
diff -urpN busybox-1.27.2/util-linux/volume_id/jfs.c busybox-1.28.0/util-linux/volume_id/jfs.c
--- busybox-1.27.2/util-linux/volume_id/jfs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/jfs.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_JFS) += jfs.o
-
 //config:config FEATURE_VOLUMEID_JFS
 //config:	bool "jfs filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_JFS) += jfs.o
+
 #include "volume_id_internal.h"
 
 struct jfs_super_block {
diff -urpN busybox-1.27.2/util-linux/volume_id/linux_raid.c busybox-1.28.0/util-linux/volume_id/linux_raid.c
--- busybox-1.27.2/util-linux/volume_id/linux_raid.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/linux_raid.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_LINUXRAID) += linux_raid.o
-
 //config:config FEATURE_VOLUMEID_LINUXRAID
 //config:	bool "linuxraid"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_LINUXRAID) += linux_raid.o
+
 #include "volume_id_internal.h"
 
 struct mdp_super_block {
diff -urpN busybox-1.27.2/util-linux/volume_id/linux_swap.c busybox-1.28.0/util-linux/volume_id/linux_swap.c
--- busybox-1.27.2/util-linux/volume_id/linux_swap.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/linux_swap.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_LINUXSWAP) += linux_swap.o
-
 //config:config FEATURE_VOLUMEID_LINUXSWAP
 //config:	bool "linux swap filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_LINUXSWAP) += linux_swap.o
+
 #include "volume_id_internal.h"
 
 struct swap_header_v1_2 {
diff -urpN busybox-1.27.2/util-linux/volume_id/luks.c busybox-1.28.0/util-linux/volume_id/luks.c
--- busybox-1.27.2/util-linux/volume_id/luks.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/luks.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_LUKS) += luks.o
-
 //config:config FEATURE_VOLUMEID_LUKS
 //config:	bool "luks filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_LUKS) += luks.o
+
 #include "volume_id_internal.h"
 
 #define LUKS_MAGIC_L             6
diff -urpN busybox-1.27.2/util-linux/volume_id/minix.c busybox-1.28.0/util-linux/volume_id/minix.c
--- busybox-1.27.2/util-linux/volume_id/minix.c	1970-01-01 01:00:00.000000000 +0100
+++ busybox-1.28.0/util-linux/volume_id/minix.c	2017-07-25 15:25:52.000000000 +0200
@@ -0,0 +1,91 @@
+/*
+ * volume_id - reads filesystem label and uuid
+ *
+ * Copyright (C) 2005 Kay Sievers <kay.sievers@vrfy.org>
+ *
+ *	This library is free software; you can redistribute it and/or
+ *	modify it under the terms of the GNU Lesser General Public
+ *	License as published by the Free Software Foundation; either
+ *	version 2.1 of the License, or (at your option) any later version.
+ *
+ *	This library is distributed in the hope that it will be useful,
+ *	but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+ *	Lesser General Public License for more details.
+ *
+ *	You should have received a copy of the GNU Lesser General Public
+ *	License along with this library; if not, write to the Free Software
+ *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+ */
+//config:config FEATURE_VOLUMEID_MINIX
+//config:	bool "minix filesystem"
+//config:	default y
+//config:	depends on VOLUMEID
+
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_MINIX) += minix.o
+
+#include "volume_id_internal.h"
+
+struct minix_super_block {
+	uint16_t	s_ninodes;
+	uint16_t	s_nzones;
+	uint16_t	s_imap_blocks;
+	uint16_t	s_zmap_blocks;
+	uint16_t	s_firstdatazone;
+	uint16_t	s_log_zone_size;
+	uint32_t	s_max_size;
+	uint16_t	s_magic;
+	uint16_t	s_state;
+	uint32_t	s_zones;
+} PACKED;
+
+/* V3 minix super-block data on disk */
+struct minix3_super_block {
+	uint32_t	s_ninodes;
+	uint16_t	s_pad0;
+	uint16_t	s_imap_blocks;
+	uint16_t	s_zmap_blocks;
+	uint16_t	s_firstdatazone;
+	uint16_t	s_log_zone_size;
+	uint16_t	s_pad1;
+	uint32_t	s_max_size;
+	uint32_t	s_zones;
+	uint16_t	s_magic;
+	uint16_t	s_pad2;
+	uint16_t	s_blocksize;
+	uint8_t		s_disk_version;
+} PACKED;
+
+#define MINIX_SUPERBLOCK_OFFSET 0x400
+
+int FAST_FUNC volume_id_probe_minix(struct volume_id *id /*, uint64_t off*/)
+{
+#define off ((uint64_t)0)
+	struct minix_super_block *ms;
+	struct minix3_super_block *ms3;
+
+	dbg("probing at offset 0x%llx", (unsigned long long) off);
+
+	ms = volume_id_get_buffer(id, off + MINIX_SUPERBLOCK_OFFSET, 0x200);
+	if (ms == NULL)
+		return -1;
+	if (ms->s_magic == cpu_to_le16(0x137F)) /* minix V1 fs, 14 char names */
+		goto found;
+	if (ms->s_magic == cpu_to_le16(0x138F)) /* minix V1 fs, 30 char names */
+		goto found;
+	if (ms->s_magic == cpu_to_le16(0x2468)) /* minix V2 fs, 14 char names */
+		goto found;
+	if (ms->s_magic == cpu_to_le16(0x2478)) /* minix V2 fs, 30 char names */
+		goto found;
+
+	ms3 = (void*)ms;
+	if (ms3->s_magic == cpu_to_le16(0x4d5a)) /* minix V3 fs, 60 char names */
+		goto found;
+
+	return -1;
+
+ found:
+//	volume_id_set_usage(id, VOLUME_ID_FILESYSTEM);
+	IF_FEATURE_BLKID_TYPE(id->type = "minix";)
+	return 0;
+}
diff -urpN busybox-1.27.2/util-linux/volume_id/nilfs.c busybox-1.28.0/util-linux/volume_id/nilfs.c
--- busybox-1.27.2/util-linux/volume_id/nilfs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/nilfs.c	2017-10-05 11:53:08.000000000 +0200
@@ -18,24 +18,23 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_NILFS) += nilfs.o
-
 //config:config FEATURE_VOLUMEID_NILFS
 //config:	bool "nilfs filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 //config:	help
-//config:	  NILFS is a New Implementation of a Log-Structured File System (LFS)
-//config:	  that supports continuous snapshots. This provides features like
-//config:	  versioning of the entire filesystem, restoration of files that
-//config:	  were deleted a few minutes ago. NILFS keeps consistency like
-//config:	  conventional LFS, so it provides quick recovery after system crashes.
+//config:	NILFS is a New Implementation of a Log-Structured File System (LFS)
+//config:	that supports continuous snapshots. This provides features like
+//config:	versioning of the entire filesystem, restoration of files that
+//config:	were deleted a few minutes ago. NILFS keeps consistency like
+//config:	conventional LFS, so it provides quick recovery after system crashes.
 //config:
-//config:	  The possible use of NILFS includes versioning, tamper detection,
-//config:	  SOX compliance logging, and so forth. It can serve as an alternative
-//config:	  filesystem for Linux desktop environment, or as a basis of advanced
-//config:	  storage appliances.
+//config:	The possible use of NILFS includes versioning, tamper detection,
+//config:	SOX compliance logging, and so forth. It can serve as an alternative
+//config:	filesystem for Linux desktop environment, or as a basis of advanced
+//config:	storage appliances.
+
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_NILFS) += nilfs.o
 
 #include "volume_id_internal.h"
 
diff -urpN busybox-1.27.2/util-linux/volume_id/ntfs.c busybox-1.28.0/util-linux/volume_id/ntfs.c
--- busybox-1.27.2/util-linux/volume_id/ntfs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/ntfs.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_NTFS) += ntfs.o
-
 //config:config FEATURE_VOLUMEID_NTFS
 //config:	bool "ntfs filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_NTFS) += ntfs.o
+
 #include "volume_id_internal.h"
 
 struct ntfs_super_block {
diff -urpN busybox-1.27.2/util-linux/volume_id/ocfs2.c busybox-1.28.0/util-linux/volume_id/ocfs2.c
--- busybox-1.27.2/util-linux/volume_id/ocfs2.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/ocfs2.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_OCFS2) += ocfs2.o
-
 //config:config FEATURE_VOLUMEID_OCFS2
 //config:	bool "ocfs2 filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_OCFS2) += ocfs2.o
+
 #include "volume_id_internal.h"
 
 /* All these values are taken from ocfs2-tools's ocfs2_fs.h */
diff -urpN busybox-1.27.2/util-linux/volume_id/reiserfs.c busybox-1.28.0/util-linux/volume_id/reiserfs.c
--- busybox-1.27.2/util-linux/volume_id/reiserfs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/reiserfs.c	2017-10-05 11:53:08.000000000 +0200
@@ -18,14 +18,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_REISERFS) += reiserfs.o
-
 //config:config FEATURE_VOLUMEID_REISERFS
 //config:	bool "Reiser filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_REISERFS) += reiserfs.o
+
 #include "volume_id_internal.h"
 
 struct reiserfs_super_block {
diff -urpN busybox-1.27.2/util-linux/volume_id/romfs.c busybox-1.28.0/util-linux/volume_id/romfs.c
--- busybox-1.27.2/util-linux/volume_id/romfs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/romfs.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_ROMFS) += romfs.o
-
 //config:config FEATURE_VOLUMEID_ROMFS
 //config:	bool "romfs filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_ROMFS) += romfs.o
+
 #include "volume_id_internal.h"
 
 struct romfs_super {
diff -urpN busybox-1.27.2/util-linux/volume_id/squashfs.c busybox-1.28.0/util-linux/volume_id/squashfs.c
--- busybox-1.27.2/util-linux/volume_id/squashfs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/squashfs.c	2017-10-05 11:53:08.000000000 +0200
@@ -5,18 +5,17 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_SQUASHFS) += squashfs.o
-
 //config:config FEATURE_VOLUMEID_SQUASHFS
 //config:	bool "SquashFS filesystem"
 //config:	default y
 //config:	depends on VOLUMEID && FEATURE_BLKID_TYPE
 //config:	help
-//config:	  Squashfs is a compressed read-only filesystem for Linux. Squashfs is
-//config:	  intended for general read-only filesystem use and in constrained block
-//config:	  device/memory systems (e.g. embedded systems) where low overhead is
-//config:	  needed.
+//config:	Squashfs is a compressed read-only filesystem for Linux. Squashfs is
+//config:	intended for general read-only filesystem use and in constrained block
+//config:	device/memory systems (e.g. embedded systems) where low overhead is
+//config:	needed.
+
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_SQUASHFS) += squashfs.o
 
 #include "volume_id_internal.h"
 
diff -urpN busybox-1.27.2/util-linux/volume_id/sysv.c busybox-1.28.0/util-linux/volume_id/sysv.c
--- busybox-1.27.2/util-linux/volume_id/sysv.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/sysv.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_SYSV) += sysv.o
-
 //config:config FEATURE_VOLUMEID_SYSV
 //config:	bool "sysv filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_SYSV) += sysv.o
+
 #include "volume_id_internal.h"
 
 #define SYSV_NICINOD			100
diff -urpN busybox-1.27.2/util-linux/volume_id/ubifs.c busybox-1.28.0/util-linux/volume_id/ubifs.c
--- busybox-1.27.2/util-linux/volume_id/ubifs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/ubifs.c	2017-10-05 11:53:08.000000000 +0200
@@ -5,16 +5,15 @@
  *
  * Licensed under GPLv2, see file LICENSE in this source tree.
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_UBIFS) += ubifs.o
-
 //config:config FEATURE_VOLUMEID_UBIFS
 //config:	bool "UBIFS filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 //config:	help
-//config:	  UBIFS (Unsorted Block Image File System) is a file
-//config:	  system for use with raw flash memory media.
+//config:	UBIFS (Unsorted Block Image File System) is a file
+//config:	system for use with raw flash memory media.
+
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_UBIFS) += ubifs.o
 
 #include "volume_id_internal.h"
 
diff -urpN busybox-1.27.2/util-linux/volume_id/udf.c busybox-1.28.0/util-linux/volume_id/udf.c
--- busybox-1.27.2/util-linux/volume_id/udf.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/udf.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_UDF) += udf.o
-
 //config:config FEATURE_VOLUMEID_UDF
 //config:	bool "udf filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_UDF) += udf.o
+
 #include "volume_id_internal.h"
 
 struct volume_descriptor {
diff -urpN busybox-1.27.2/util-linux/volume_id/unused_highpoint.c busybox-1.28.0/util-linux/volume_id/unused_highpoint.c
--- busybox-1.27.2/util-linux/volume_id/unused_highpoint.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/unused_highpoint.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_HIGHPOINTRAID) += highpoint.o
-
 //config:### config FEATURE_VOLUMEID_HIGHPOINTRAID
 //config:###	bool "highpoint raid"
 //config:###	default y
 //config:###	depends on VOLUMEID
 
+//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_HIGHPOINTRAID) += highpoint.o
+
 #include "volume_id_internal.h"
 
 struct hpt37x_meta {
diff -urpN busybox-1.27.2/util-linux/volume_id/unused_hpfs.c busybox-1.28.0/util-linux/volume_id/unused_hpfs.c
--- busybox-1.27.2/util-linux/volume_id/unused_hpfs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/unused_hpfs.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_HPFS) += hpfs.o
-
 //config:### config FEATURE_VOLUMEID_HPFS
 //config:###	bool "hpfs filesystem"
 //config:###	default y
 //config:###	depends on VOLUMEID
 
+//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_HPFS) += hpfs.o
+
 #include "volume_id_internal.h"
 
 struct hpfs_super {
diff -urpN busybox-1.27.2/util-linux/volume_id/unused_isw_raid.c busybox-1.28.0/util-linux/volume_id/unused_isw_raid.c
--- busybox-1.27.2/util-linux/volume_id/unused_isw_raid.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/unused_isw_raid.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_ISWRAID) += isw_raid.o
-
 //config:### config FEATURE_VOLUMEID_ISWRAID
 //config:###	bool "intel raid"
 //config:###	default y
 //config:###	depends on VOLUMEID
 
+//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_ISWRAID) += isw_raid.o
+
 #include "volume_id_internal.h"
 
 struct isw_meta {
diff -urpN busybox-1.27.2/util-linux/volume_id/unused_lsi_raid.c busybox-1.28.0/util-linux/volume_id/unused_lsi_raid.c
--- busybox-1.27.2/util-linux/volume_id/unused_lsi_raid.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/unused_lsi_raid.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_LSIRAID) += lsi_raid.o
-
 //config:### config FEATURE_VOLUMEID_LSIRAID
 //config:###	bool "lsi raid"
 //config:###	default y
 //config:###	depends on VOLUMEID
 
+//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_LSIRAID) += lsi_raid.o
+
 #include "volume_id_internal.h"
 
 struct lsi_meta {
diff -urpN busybox-1.27.2/util-linux/volume_id/unused_lvm.c busybox-1.28.0/util-linux/volume_id/unused_lvm.c
--- busybox-1.27.2/util-linux/volume_id/unused_lvm.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/unused_lvm.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_LVM) += lvm.o
-
 //config:### config FEATURE_VOLUMEID_LVM
 //config:###	bool "lvm"
 //config:###	default y
 //config:###	depends on VOLUMEID
 
+//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_LVM) += lvm.o
+
 #include "volume_id_internal.h"
 
 struct lvm1_super_block {
diff -urpN busybox-1.27.2/util-linux/volume_id/unused_mac.c busybox-1.28.0/util-linux/volume_id/unused_mac.c
--- busybox-1.27.2/util-linux/volume_id/unused_mac.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/unused_mac.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_MAC) += mac.o
-
 //config:### config FEATURE_VOLUMEID_MAC
 //config:###	bool "mac filesystem"
 //config:###	default y
 //config:###	depends on VOLUMEID
 
+//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_MAC) += mac.o
+
 #include "volume_id_internal.h"
 
 struct mac_driver_desc {
diff -urpN busybox-1.27.2/util-linux/volume_id/unused_minix.c busybox-1.28.0/util-linux/volume_id/unused_minix.c
--- busybox-1.27.2/util-linux/volume_id/unused_minix.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/unused_minix.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,82 +0,0 @@
-/*
- * volume_id - reads filesystem label and uuid
- *
- * Copyright (C) 2005 Kay Sievers <kay.sievers@vrfy.org>
- *
- *	This library is free software; you can redistribute it and/or
- *	modify it under the terms of the GNU Lesser General Public
- *	License as published by the Free Software Foundation; either
- *	version 2.1 of the License, or (at your option) any later version.
- *
- *	This library is distributed in the hope that it will be useful,
- *	but WITHOUT ANY WARRANTY; without even the implied warranty of
- *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
- *	Lesser General Public License for more details.
- *
- *	You should have received a copy of the GNU Lesser General Public
- *	License along with this library; if not, write to the Free Software
- *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
- */
-
-//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_MINIX) += minix.o
-
-//config:### config FEATURE_VOLUMEID_MINIX
-//config:###	bool "minix filesystem"
-//config:###	default y
-//config:###	depends on VOLUMEID
-
-#include "volume_id_internal.h"
-
-struct minix_super_block {
-	uint16_t	s_ninodes;
-	uint16_t	s_nzones;
-	uint16_t	s_imap_blocks;
-	uint16_t	s_zmap_blocks;
-	uint16_t	s_firstdatazone;
-	uint16_t	s_log_zone_size;
-	uint32_t	s_max_size;
-	uint16_t	s_magic;
-	uint16_t	s_state;
-	uint32_t	s_zones;
-} PACKED;
-
-#define MINIX_SUPERBLOCK_OFFSET			0x400
-
-int FAST_FUNC volume_id_probe_minix(struct volume_id *id, uint64_t off)
-{
-	struct minix_super_block *ms;
-
-	dbg("probing at offset 0x%llx", (unsigned long long) off);
-
-	ms = volume_id_get_buffer(id, off + MINIX_SUPERBLOCK_OFFSET, 0x200);
-	if (ms == NULL)
-		return -1;
-
-	if (ms->s_magic == cpu_to_le16(0x137f)) {
-//		id->type_version[0] = '1';
-		goto found;
-	}
-
-	if (ms->s_magic == cpu_to_le16(0x1387)) {
-//		id->type_version[0] = '1';
-		goto found;
-	}
-
-	if (ms->s_magic == cpu_to_le16(0x2468)) {
-//		id->type_version[0] = '2';
-		goto found;
-	}
-
-	if (ms->s_magic == cpu_to_le16(0x2478)) {
-//		id->type_version[0] = '2';
-		goto found;
-	}
-
-	return -1;
-
- found:
-//	id->type_version[1] = '\0';
-//	volume_id_set_usage(id, VOLUME_ID_FILESYSTEM);
-//	id->type = "minix";
-	return 0;
-}
diff -urpN busybox-1.27.2/util-linux/volume_id/unused_msdos.c busybox-1.28.0/util-linux/volume_id/unused_msdos.c
--- busybox-1.27.2/util-linux/volume_id/unused_msdos.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/unused_msdos.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_MSDOS) += msdos.o
-
 //config:### config FEATURE_VOLUMEID_MSDOS
 //config:###	bool "msdos filesystem"
 //config:###	default y
 //config:###	depends on VOLUMEID
 
+//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_MSDOS) += msdos.o
+
 #include "volume_id_internal.h"
 
 struct msdos_partition_entry {
diff -urpN busybox-1.27.2/util-linux/volume_id/unused_nvidia_raid.c busybox-1.28.0/util-linux/volume_id/unused_nvidia_raid.c
--- busybox-1.27.2/util-linux/volume_id/unused_nvidia_raid.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/unused_nvidia_raid.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_NVIDIARAID) += nvidia_raid.o
-
 //config:### config FEATURE_VOLUMEID_NVIDIARAID
 //config:###	bool "nvidia raid"
 //config:###	default y
 //config:###	depends on VOLUMEID
 
+//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_NVIDIARAID) += nvidia_raid.o
+
 #include "volume_id_internal.h"
 
 struct nvidia_meta {
diff -urpN busybox-1.27.2/util-linux/volume_id/unused_promise_raid.c busybox-1.28.0/util-linux/volume_id/unused_promise_raid.c
--- busybox-1.27.2/util-linux/volume_id/unused_promise_raid.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/unused_promise_raid.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_PROMISERAID) += promise_raid.o
-
 //config:### config FEATURE_VOLUMEID_PROMISERAID
 //config:###	bool "promise raid"
 //config:###	default y
 //config:###	depends on VOLUMEID
 
+//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_PROMISERAID) += promise_raid.o
+
 #include "volume_id_internal.h"
 
 struct promise_meta {
diff -urpN busybox-1.27.2/util-linux/volume_id/unused_silicon_raid.c busybox-1.28.0/util-linux/volume_id/unused_silicon_raid.c
--- busybox-1.27.2/util-linux/volume_id/unused_silicon_raid.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/unused_silicon_raid.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_SILICONRAID) += silicon_raid.o
-
 //config:### config FEATURE_VOLUMEID_SILICONRAID
 //config:###	bool "silicon raid"
 //config:###	default y
 //config:###	depends on VOLUMEID
 
+//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_SILICONRAID) += silicon_raid.o
+
 #include "volume_id_internal.h"
 
 struct silicon_meta {
diff -urpN busybox-1.27.2/util-linux/volume_id/unused_ufs.c busybox-1.28.0/util-linux/volume_id/unused_ufs.c
--- busybox-1.27.2/util-linux/volume_id/unused_ufs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/unused_ufs.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_UFS) += ufs.o
-
 //config:### config FEATURE_VOLUMEID_UFS
 //config:###	bool "ufs filesystem"
 //config:###	default y
 //config:###	depends on VOLUMEID
 
+//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_UFS) += ufs.o
+
 #include "volume_id_internal.h"
 
 struct ufs_super_block {
diff -urpN busybox-1.27.2/util-linux/volume_id/unused_via_raid.c busybox-1.28.0/util-linux/volume_id/unused_via_raid.c
--- busybox-1.27.2/util-linux/volume_id/unused_via_raid.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/unused_via_raid.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_VIARAID) += via_raid.o
-
 //config:### config FEATURE_VOLUMEID_VIARAID
 //config:###	bool "via raid"
 //config:###	default y
 //config:###	depends on VOLUMEID
 
+//kbuild:### lib-$(CONFIG_FEATURE_VOLUMEID_VIARAID) += via_raid.o
+
 #include "volume_id_internal.h"
 
 struct via_meta {
diff -urpN busybox-1.27.2/util-linux/volume_id/volume_id.c busybox-1.28.0/util-linux/volume_id/volume_id.c
--- busybox-1.27.2/util-linux/volume_id/volume_id.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/volume_id.c	2017-07-25 15:25:52.000000000 +0200
@@ -42,7 +42,6 @@
 #define ENABLE_FEATURE_VOLUMEID_VIARAID       0
 
 /* These filesystems also have no label or uuid: */
-#define ENABLE_FEATURE_VOLUMEID_MINIX         0
 #define ENABLE_FEATURE_VOLUMEID_HPFS          0
 #define ENABLE_FEATURE_VOLUMEID_UFS           0
 
diff -urpN busybox-1.27.2/util-linux/volume_id/volume_id_internal.h busybox-1.28.0/util-linux/volume_id/volume_id_internal.h
--- busybox-1.27.2/util-linux/volume_id/volume_id_internal.h	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/volume_id_internal.h	2017-07-25 15:25:52.000000000 +0200
@@ -193,7 +193,7 @@ int FAST_FUNC volume_id_probe_luks(struc
 
 //int FAST_FUNC volume_id_probe_mac_partition_map(struct volume_id *id /*,uint64_t off*/);
 
-//int FAST_FUNC volume_id_probe_minix(struct volume_id *id /*,uint64_t off*/);
+int FAST_FUNC volume_id_probe_minix(struct volume_id *id /*, uint64_t off*/);
 
 //int FAST_FUNC volume_id_probe_msdos_part_table(struct volume_id *id /*,uint64_t off*/);
 
diff -urpN busybox-1.27.2/util-linux/volume_id/xfs.c busybox-1.28.0/util-linux/volume_id/xfs.c
--- busybox-1.27.2/util-linux/volume_id/xfs.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/volume_id/xfs.c	2017-10-05 11:53:08.000000000 +0200
@@ -17,14 +17,13 @@
  *	License along with this library; if not, write to the Free Software
  *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
  */
-
-//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_XFS) += xfs.o
-
 //config:config FEATURE_VOLUMEID_XFS
 //config:	bool "xfs filesystem"
 //config:	default y
 //config:	depends on VOLUMEID
 
+//kbuild:lib-$(CONFIG_FEATURE_VOLUMEID_XFS) += xfs.o
+
 #include "volume_id_internal.h"
 
 struct xfs_super_block {
diff -urpN busybox-1.27.2/util-linux/wall.c busybox-1.28.0/util-linux/wall.c
--- busybox-1.27.2/util-linux/wall.c	2017-07-06 17:14:57.000000000 +0200
+++ busybox-1.28.0/util-linux/wall.c	2017-10-05 11:53:08.000000000 +0200
@@ -5,13 +5,12 @@
  *
  * Licensed under GPLv2 or later, see file LICENSE in this source tree.
  */
-
 //config:config WALL
-//config:	bool "wall"
+//config:	bool "wall (2.5 kb)"
 //config:	default y
 //config:	depends on FEATURE_UTMP
 //config:	help
-//config:	  Write a message to all users that are logged in.
+//config:	Write a message to all users that are logged in.
 
 /* Needs to be run by root or be suid root - needs to write to /dev/TTY: */
 //applet:IF_WALL(APPLET(wall, BB_DIR_USR_BIN, BB_SUID_REQUIRE))
