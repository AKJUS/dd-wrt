diff -urpN php-8.3.8/.github/CODEOWNERS php-8.3.10/.github/CODEOWNERS
--- php-8.3.8/.github/CODEOWNERS	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/.github/CODEOWNERS	2024-07-30 20:44:37.000000000 +0700
@@ -38,25 +38,24 @@
 /ext/xsl @nielsdos
 /main @bukka
 /sapi/fpm @bukka
-/Zend @iluuu1994
-/Zend/Optimizer @dstogov
+/Zend/Optimizer @dstogov @iluuu1994
 /Zend/zend.* @dstogov
 /Zend/zend_alloc.* @dstogov
-/Zend/zend_API.* @dstogov
+/Zend/zend_API.* @dstogov @iluuu1994
 /Zend/zend_call_stack.* @arnaud-lb
 /Zend/zend_closures.* @dstogov
-/Zend/zend_execute.* @dstogov
-/Zend/zend_execute_API.c @dstogov
+/Zend/zend_execute.* @dstogov @iluuu1994
+/Zend/zend_execute_API.c @dstogov @iluuu1994
 /Zend/zend_gc.* @dstogov @arnaud-lb
 /Zend/zend_hash.* @dstogov
-/Zend/zend_inheritance.* @dstogov
+/Zend/zend_inheritance.* @dstogov @iluuu1994
 /Zend/zend_max_execution_timer.* @arnaud-lb
-/Zend/zend_object_handlers.* @dstogov
-/Zend/zend_objects.* @dstogov
-/Zend/zend_objects_API.* @dstogov
-/Zend/zend_opcode.* @dstogov
+/Zend/zend_object_handlers.* @dstogov @iluuu1994
+/Zend/zend_objects.* @dstogov @iluuu1994
+/Zend/zend_objects_API.* @dstogov @iluuu1994
+/Zend/zend_opcode.* @dstogov @iluuu1994
 /Zend/zend_string.* @dstogov
-/Zend/zend_type*.h @dstogov
+/Zend/zend_type*.h @dstogov @iluuu1994
 /Zend/zend_variables.* @dstogov
-/Zend/zend_vm* @dstogov
+/Zend/zend_vm* @dstogov @iluuu1994
 *.stub.php @kocsismate
diff -urpN php-8.3.8/.github/actions/test-linux/action.yml php-8.3.10/.github/actions/test-linux/action.yml
--- php-8.3.8/.github/actions/test-linux/action.yml	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/.github/actions/test-linux/action.yml	2024-07-30 20:44:37.000000000 +0700
@@ -1,8 +1,5 @@
 name: Test
 inputs:
-  testArtifacts:
-    default: null
-    required: false
   runTestsParameters:
     default: ''
     required: false
@@ -43,7 +40,6 @@ runs:
         export ODBC_TEST_DSN="Driver={ODBC Driver 17 for SQL Server};Server=127.0.0.1;Database=odbc;uid=$ODBC_TEST_USER;pwd=$ODBC_TEST_PASS"
         export PDO_ODBC_TEST_DSN="odbc:Driver={ODBC Driver 17 for SQL Server};Server=127.0.0.1;Database=pdo_odbc;uid=$ODBC_TEST_USER;pwd=$ODBC_TEST_PASS"
         export SKIP_IO_CAPTURE_TESTS=1
-        export TEST_PHP_JUNIT=junit.out.xml
         export STACK_LIMIT_DEFAULTS_CHECK=1
         sapi/cli/php run-tests.php -P -q ${{ inputs.runTestsParameters }} \
           -d opcache.jit=${{ inputs.jitType }} \
@@ -55,9 +51,3 @@ runs:
           --show-diff \
           --show-slow 1000 \
           --set-timeout 120
-    - uses: actions/upload-artifact@v4
-      if: always() && inputs.testArtifacts != null
-      with:
-        name: ${{ github.job }}_${{ inputs.testArtifacts }}
-        path: ${{ github.workspace }}/junit.out.xml
-        retention-days: 5
diff -urpN php-8.3.8/.github/actions/test-macos/action.yml php-8.3.10/.github/actions/test-macos/action.yml
--- php-8.3.8/.github/actions/test-macos/action.yml	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/.github/actions/test-macos/action.yml	2024-07-30 20:44:37.000000000 +0700
@@ -1,8 +1,5 @@
 name: Test
 inputs:
-  testArtifacts:
-    default: null
-    required: false
   runTestsParameters:
     default: ''
     required: false
@@ -17,7 +14,6 @@ runs:
         set -x
         export SKIP_IO_CAPTURE_TESTS=1
         export CI_NO_IPV6=1
-        export TEST_PHP_JUNIT=junit.out.xml
         export STACK_LIMIT_DEFAULTS_CHECK=1
         sapi/cli/php run-tests.php -P -q ${{ inputs.runTestsParameters }} \
           -d opcache.jit=${{ inputs.jitType }} \
@@ -29,9 +25,3 @@ runs:
           --show-diff \
           --show-slow 1000 \
           --set-timeout 120
-    - uses: actions/upload-artifact@v4
-      if: always() && inputs.testArtifacts != null
-      with:
-        name: ${{ github.job }}_${{ inputs.testArtifacts }}
-        path: ${{ github.workspace }}/junit.out.xml
-        retention-days: 5
diff -urpN php-8.3.8/.github/scripts/windows/test_task.bat php-8.3.10/.github/scripts/windows/test_task.bat
--- php-8.3.8/.github/scripts/windows/test_task.bat	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/.github/scripts/windows/test_task.bat	2024-07-30 20:44:37.000000000 +0700
@@ -133,8 +133,6 @@ set TEST_PHPDBG_EXECUTABLE=%PHP_BUILD_DI
 
 mkdir c:\tests_tmp
 
-set TEST_PHP_JUNIT=c:\junit.out.xml
-
 nmake test TESTS="%OPCACHE_OPTS% -g FAIL,BORK,LEAK,XLEAK --no-progress -q --offline --show-diff --show-slow 1000 --set-timeout 120 --temp-source c:\tests_tmp --temp-target c:\tests_tmp --bless %PARALLEL%"
 
 set EXIT_CODE=%errorlevel%
diff -urpN php-8.3.8/.github/workflows/nightly.yml php-8.3.10/.github/workflows/nightly.yml
--- php-8.3.8/.github/workflows/nightly.yml	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/.github/workflows/nightly.yml	2024-07-30 20:44:37.000000000 +0700
@@ -106,14 +106,12 @@ jobs:
       - name: Test
         uses: ./.github/actions/test-linux
         with:
-          testArtifacts: ${{ matrix.branch.name }}_${{ matrix.name }}_${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }}
           runTestsParameters: >-
             ${{ matrix.run_tests_parameters }}
           idleCpu: ${{ matrix.asan && 'true' || 'false' }}
       - name: Test Tracing JIT
         uses: ./.github/actions/test-linux
         with:
-          testArtifacts: ${{ matrix.branch.name }}_${{ matrix.name }}_${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }} Tracing JIT
           jitType: tracing
           runTestsParameters: >-
             ${{ matrix.run_tests_parameters }}
@@ -122,7 +120,6 @@ jobs:
       - name: Test OpCache
         uses: ./.github/actions/test-linux
         with:
-          testArtifacts: ${{ matrix.branch.name }}_${{ matrix.name }}_${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }} OpCache
           runTestsParameters: >-
             ${{ matrix.run_tests_parameters }}
             -d zend_extension=opcache.so
@@ -133,7 +130,6 @@ jobs:
         if: matrix.test_function_jit
         uses: ./.github/actions/test-linux
         with:
-          testArtifacts: ${{ matrix.branch.name }}_${{ matrix.name }}_${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }} Function JIT
           jitType: function
           runTestsParameters: >-
             ${{ matrix.run_tests_parameters }}
@@ -257,12 +253,9 @@ jobs:
         run: sudo make install
       - name: Test
         uses: ./.github/actions/test-macos
-        with:
-          testArtifacts: ${{ matrix.branch.name }}_${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }}
       - name: Test Tracing JIT
         uses: ./.github/actions/test-macos
         with:
-          testArtifacts: ${{ matrix.branch.name }}_${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }} Tracing JIT
           jitType: tracing
           runTestsParameters: >-
             -d zend_extension=opcache.so
@@ -271,7 +264,6 @@ jobs:
       - name: Test OpCache
         uses: ./.github/actions/test-macos
         with:
-          testArtifacts: ${{ matrix.branch.name }}_${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }} OpCache
           runTestsParameters: >-
             -d zend_extension=opcache.so
             -d opcache.enable_cli=1
@@ -279,7 +271,6 @@ jobs:
       - name: Test Function JIT
         uses: ./.github/actions/test-macos
         with:
-          testArtifacts: ${{ matrix.branch.name }}_${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }} Function JIT
           jitType: function
           runTestsParameters: >-
             -d zend_extension=opcache.so
@@ -454,7 +445,7 @@ jobs:
           # Test causes a heap-buffer-overflow but I cannot reproduce it locally...
           php -r '$c = file_get_contents("src/Symfony/Component/HtmlSanitizer/Tests/HtmlSanitizerCustomTest.php"); $c = str_replace("public function testSanitizeDeepNestedString()", "/** @group skip */\n    public function testSanitizeDeepNestedString()", $c); file_put_contents("src/Symfony/Component/HtmlSanitizer/Tests/HtmlSanitizerCustomTest.php", $c);'
           # Buggy FFI test in Symfony, see https://github.com/symfony/symfony/issues/47668
-          php -r '$c = file_get_contents("src/Symfony/Component/VarDumper/Tests/Caster/FFICasterTest.php"); $c = str_replace("*/\n    public function testCastNonTrailingCharPointer()", "* @group skip\n     */\n    public function testCastNonTrailingCharPointer()", $c); file_put_contents("src/Symfony/Component/VarDumper/Tests/Caster/FFICasterTest.php", $c);'
+          php -r '$c = file_get_contents("src/Symfony/Component/VarDumper/Tests/Caster/FFICasterTest.php"); $c = str_replace("public function testCastNonTrailingCharPointer()", "/** @group skip */\n    public function testCastNonTrailingCharPointer()", $c); file_put_contents("src/Symfony/Component/VarDumper/Tests/Caster/FFICasterTest.php", $c);'
           export ASAN_OPTIONS=exitcode=139
           export SYMFONY_DEPRECATIONS_HELPER=max[total]=999
           X=0
diff -urpN php-8.3.8/.github/workflows/push.yml php-8.3.10/.github/workflows/push.yml
--- php-8.3.8/.github/workflows/push.yml	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/.github/workflows/push.yml	2024-07-30 20:44:37.000000000 +0700
@@ -124,12 +124,9 @@ jobs:
       - name: Test
         if: matrix.asan == false
         uses: ./.github/actions/test-linux
-        with:
-          testArtifacts: ${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }}
       - name: Test ${{ matrix.asan && 'OpCache' || 'Tracing JIT' }}
         uses: ./.github/actions/test-linux
         with:
-          testArtifacts: ${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }}${{ matrix.asan && '_ASAN' || '' }}_${{ matrix.asan && 'OpCache' || 'Tracing JIT' }}
           jitType: ${{ matrix.asan && 'disable' || 'tracing' }}
           runTestsParameters: >-
             -d zend_extension=opcache.so
@@ -138,6 +135,51 @@ jobs:
       - name: Verify generated files are up to date
         if: ${{ !matrix.asan }}
         uses: ./.github/actions/verify-generated-files
+  LINUX_X32:
+    if: github.repository == 'php/php-src' || github.event_name == 'pull_request'
+    name: LINUX_X32_DEBUG_ZTS
+    runs-on: ubuntu-latest
+    container:
+      image: ubuntu:20.04
+    env:
+      MYSQL_TEST_HOST: mysql
+      PDO_MYSQL_TEST_DSN: mysql:host=mysql;dbname=test
+      PDO_MYSQL_TEST_HOST: mysql
+    services:
+      mysql:
+        image: mysql:8.3
+        ports:
+          - 3306:3306
+        env:
+          MYSQL_DATABASE: test
+          MYSQL_ROOT_PASSWORD: root
+    steps:
+      - name: git checkout
+        uses: actions/checkout@v3
+      - name: apt
+        uses: ./.github/actions/apt-x32
+      - name: ccache
+        uses: hendrikmuhs/ccache-action@v1.2
+        with:
+          key: "${{github.job}}-${{hashFiles('main/php_version.h')}}"
+          append-timestamp: false
+      - name: ./configure
+        uses: ./.github/actions/configure-x32
+        with:
+          configurationParameters: >-
+            --enable-debug
+            --enable-zts
+      - name: make
+        run: make -j$(/usr/bin/nproc) >/dev/null
+      - name: make install
+        uses: ./.github/actions/install-linux-x32
+      - name: Test Tracing JIT
+        uses: ./.github/actions/test-linux
+        with:
+          jitType: tracing
+          runTestsParameters: >-
+            -d zend_extension=opcache.so
+            -d opcache.enable_cli=1
   MACOS_DEBUG_NTS:
     if: github.repository == 'php/php-src' || github.event_name == 'pull_request'
     runs-on: macos-12
@@ -165,7 +207,6 @@ jobs:
       - name: Test Tracing JIT
         uses: ./.github/actions/test-macos
         with:
-          testArtifacts: ${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }} Tracing JIT
           jitType: tracing
           runTestsParameters: >-
             -d zend_extension=opcache.so
diff -urpN php-8.3.8/NEWS php-8.3.10/NEWS
--- php-8.3.8/NEWS	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/NEWS	2024-07-30 20:44:37.000000000 +0700
@@ -1,12 +1,166 @@
 PHP                                                                        NEWS
 |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
+01 Aug 2024, PHP 8.3.10
+
+- Core:
+  . Fixed bug GH-13922 (Fixed support for systems with
+    sysconf(_SC_GETPW_R_SIZE_MAX) == -1). (Arnaud)
+  . Fixed bug GH-14626 (Fix is_zend_ptr() for huge blocks). (Arnaud)
+  . Fixed bug GH-14590 (Memory leak in FPM test gh13563-conf-bool-env.phpt.
+    (nielsdos)
+  . Fixed OSS-Fuzz #69765. (nielsdos)
+  . Fixed bug GH-14741 (Segmentation fault in Zend/zend_types.h). (nielsdos)
+  . Fixed bug GH-14969 (Use-after-free in property coercion with __toString()).
+    (ilutov)
+
+- Dom:
+  . Fixed bug GH-14702 (DOMDocument::xinclude() crash). (nielsdos)
+
+- Fileinfo:
+  . Fixed bug GH-14888 (README.REDIST.BINS refers to non-existing LICENSE).
+    (cmb)
+
+- Gd:
+  . ext/gd/tests/gh10614.phpt: skip if no PNG support. (orlitzky)
+  . restored warning instead of fata error. (dryabov)
+
+- LibXML:
+  . Fixed bug GH-14563 (Build failure with libxml2 v2.13.0). (nielsdos)
+
+- Opcache:
+  . Fixed bug GH-14550 (No warning message when Zend DTrace is enabled that
+    opcache.jit is implictly disabled). (nielsdos)
+
+- Output:
+  . Fixed bug GH-14808 (Unexpected null pointer in Zend/zend_string.h with
+    empty output buffer). (nielsdos)
+
+- PDO:
+  . Fixed bug GH-14712 (Crash with PDORow access to null property).
+    (David Carlier)
+
+- Phar:
+  . Fixed bug GH-14603 (null string from zip entry).
+    (David Carlier)
+
+- PHPDBG:
+  . Fixed bug GH-14596 (crashes with ASAN and ZEND_RC_DEBUG=1).
+    (David Carlier)
+  . Fixed bug GH-14553 (echo output trimmed at NULL byte). (nielsdos)
+
+- Shmop:
+  . Fixed bug GH-14537 (shmop Windows 11 crashes the process). (nielsdos)
+
+- SPL:
+  . Fixed bug GH-14639 (Member access within null pointer in
+    ext/spl/spl_observer.c). (nielsdos)
+
+- Standard:
+  . Fixed bug GH-14775 (range function overflow with negative step argument).
+    (David Carlier)
+  . Fix 32-bit wordwrap test failures. (orlitzky)
+  . Fixed bug GH-14774 (time_sleep_until overflow). (David Carlier)
+
+- Streams:
+  . Fixed bug GH-14930 (Custom stream wrapper dir_readdir output truncated to
+    255 characters in PHP 8.3). (Joe Cai)
+
+- Tidy:
+  . Fix memory leak in tidy_repair_file(). (nielsdos)
+
+- Treewide:
+  . Fix compatibility with libxml2 2.13.2. (nielsdos)
+
+- XML:
+  . Move away from to-be-deprecated libxml fields. (nielsdos)
+  . Fixed bug GH-14834 (Error installing PHP when --with-pear is used).
+    (nielsdos)
+
+20 Jun 2024, PHP 8.3.9
+
+- Core:
+  . Fixed bug GH-14315 (Incompatible pointer type warnings). (Peter Kokot)
+  . Fixed bug GH-12814 (max_execution_time reached too early on MacOS 14
+    when running on Apple Silicon). (Manuel Kress)
+  . Fixed bug GH-14387 (Crash when stack walking in destructor of yielded from
+    values during Generator->throw()). (Bob)
+  . Fixed bug GH-14456 (Attempting to initialize class with private constructor
+    calls destructor). (Girgias)
+  . Fixed bug GH-14510 (memleak due to missing pthread_attr_destroy()-call).
+    (Florian Engelhardt)
+  . Fixed bug GH-14549 (Incompatible function pointer type for fclose).
+    (Ryan Carsten Schmidt)
+
+- BCMath:
+  . Fixed bug (bcpowmod() with mod = -1 returns 1 when it must be 0). (Girgias)
+
+- Curl:
+  . Fixed bug GH-14307 (Test curl_basic_024 fails with curl 8.8.0). (nielsdos)
+
+- DOM:
+  . Fixed bug GH-14343 (Memory leak in xml and dom). (nielsdos)
+
+- FPM:
+  . Fixed bug GH-14037 (PHP-FPM ping.path and ping.response config vars are
+    ignored in status pool). (Wilhansen Li, Pierrick Charron)
+
+- GD:
+  . Fix parameter numbers for imagecolorset(). (Giovanni Giacobbi)
+
+- Intl:
+  . Fix reference handling in SpoofChecker. (nielsdos)
+
+- MySQLnd:
+  . Partially fix bug GH-10599 (Apache crash on Windows when using a
+    self-referencing anonymous function inside a class with an active
+    mysqli connection). (nielsdos)
+
+- Opcache:
+  . Fixed bug GH-14267 (opcache.jit=off does not allow enabling JIT at runtime).
+    (ilutov)
+  . Fixed TLS access in JIT on FreeBSD/amd64. (Arnaud)
+  . Fixed bug GH-11188 (Error when building TSRM in ARM64). (nielsdos)
+
+- PDO ODBC:
+  . Fixed bug GH-14367 (incompatible SDWORD type with iODBC). (Calvin Buckley)
+
+- PHPDBG:
+  . Fixed bug GH-13681 (segfault on watchpoint addition failure). (David Carlier)
+
+- Soap:
+  . Fixed bug #47925 (PHPClient can't decompress response). (nielsdos)
+  . Fix missing error restore code. (nielsdos)
+  . Fix memory leak if calling SoapServer::setObject() twice. (nielsdos)
+  . Fix memory leak if calling SoapServer::setClass() twice. (nielsdos)
+  . Fix reading zlib ini settings in ext-soap. (nielsdos)
+  . Fix memory leaks with string function name lookups. (nielsdos)
+  . Fixed bug #69280 (SoapClient classmap doesn't support fully qualified class
+    name). (nielsdos)
+  . Fixed bug #76232 (SoapClient Cookie Header Semicolon). (nielsdos)
+  . Fixed memory leaks when calling SoapFault::__construct() twice. (Girgias)
+
+- Sodium:
+  . Fix memory leaks in ext/sodium on failure of some functions. (nielsdos)
+
+- SPL:
+  . Fixed bug GH-14290 (Member access within null pointer in extension spl).
+    (nielsdos)
+
+- Standard:
+  . Fixed bug GH-14483 (Fixed off-by-one error in checking length of abstract
+    namespace Unix sockets). (Derick)
+
+- Streams:
+  . Fixed bug GH-11078 (PHP Fatal error triggers pointer being freed was not
+    allocated and malloc: double free for ptr errors). (nielsdos)
+
 06 Jun 2024, PHP 8.3.8
 
 - CGI:
   . Fixed buffer limit on Windows, replacing read call usage by _read.
     (David Carlier)
   . Fixed bug GHSA-3qgc-jrrr-25jv (Bypass of CVE-2012-1823, Argument Injection
-    in PHP-CGI). (CVE-2024-4577) (nielsdos)    
+    in PHP-CGI). (CVE-2024-4577) (nielsdos)
 
 - CLI:
   . Fixed bug GH-14189 (PHP Interactive shell input state incorrectly handles
@@ -61,7 +215,7 @@ PHP
 
 - Standard:
   . Fixed bug GHSA-9fcc-425m-g385 (Bypass of CVE-2024-1874).
-    (CVE-2024-5585) (nielsdos)        
+    (CVE-2024-5585) (nielsdos)
 
 - XML:
   . Fixed bug GH-14124 (Segmentation fault with XML extension under certain
diff -urpN php-8.3.8/TSRM/TSRM.c php-8.3.10/TSRM/TSRM.c
--- php-8.3.8/TSRM/TSRM.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/TSRM/TSRM.c	2024-07-30 20:44:37.000000000 +0700
@@ -777,11 +777,20 @@ TSRM_API size_t tsrm_get_ls_cache_tcb_of
 	asm("adrp %0, #__tsrm_ls_cache@TLVPPAGE\n\t"
 	    "ldr %0, [%0, #__tsrm_ls_cache@TLVPPAGEOFF]"
 	     : "=r" (ret));
-# else
+# elif defined(TSRM_TLS_MODEL_DEFAULT)
+	/* Surplus Static TLS space isn't guaranteed. */
+	ret = 0;
+# elif defined(TSRM_TLS_MODEL_INITIAL_EXEC)
+	asm("adrp %0, :gottprel:_tsrm_ls_cache\n\t"
+		"ldr %0, [%0, #:gottprel_lo12:_tsrm_ls_cache]"
+		: "=r" (ret));
+# elif defined(TSRM_TLS_MODEL_LOCAL_EXEC)
 	asm("mov %0, xzr\n\t"
 	    "add %0, %0, #:tprel_hi12:_tsrm_ls_cache, lsl #12\n\t"
 	    "add %0, %0, #:tprel_lo12_nc:_tsrm_ls_cache"
 	     : "=r" (ret));
+# else
+#  error "TSRM TLS model not set"
 # endif
 	return ret;
 #else
diff -urpN php-8.3.8/TSRM/TSRM.h php-8.3.10/TSRM/TSRM.h
--- php-8.3.8/TSRM/TSRM.h	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/TSRM/TSRM.h	2024-07-30 20:44:37.000000000 +0700
@@ -151,10 +151,13 @@ TSRM_API bool tsrm_is_managed_thread(voi
 
 #if !__has_attribute(tls_model) || defined(__FreeBSD__) || defined(__MUSL__) || defined(__HAIKU__)
 # define TSRM_TLS_MODEL_ATTR
+# define TSRM_TLS_MODEL_DEFAULT
 #elif __PIC__
 # define TSRM_TLS_MODEL_ATTR __attribute__((tls_model("initial-exec")))
+# define TSRM_TLS_MODEL_INITIAL_EXEC
 #else
 # define TSRM_TLS_MODEL_ATTR __attribute__((tls_model("local-exec")))
+# define TSRM_TLS_MODEL_LOCAL_EXEC
 #endif
 
 #define TSRM_SHUFFLE_RSRC_ID(rsrc_id)		((rsrc_id)+1)
diff -urpN php-8.3.8/TSRM/tsrm_win32.c php-8.3.10/TSRM/tsrm_win32.c
--- php-8.3.8/TSRM/tsrm_win32.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/TSRM/tsrm_win32.c	2024-07-30 20:44:37.000000000 +0700
@@ -709,6 +709,7 @@ TSRM_API int shmget(key_t key, size_t si
 			CloseHandle(shm->segment);
 		}
 		UnmapViewOfFile(shm->descriptor);
+		shm->descriptor = NULL;
 		return -1;
 	}
 
@@ -744,8 +745,8 @@ TSRM_API int shmdt(const void *shmaddr)
 	shm->descriptor->shm_lpid  = getpid();
 	shm->descriptor->shm_nattch--;
 
-	ret = 1;
-	if (!ret  && shm->descriptor->shm_nattch <= 0) {
+	ret = 0;
+	if (shm->descriptor->shm_nattch <= 0) {
 		ret = UnmapViewOfFile(shm->descriptor) ? 0 : -1;
 		shm->descriptor = NULL;
 	}
diff -urpN php-8.3.8/Zend/tests/generators/gh14387.phpt php-8.3.10/Zend/tests/generators/gh14387.phpt
--- php-8.3.8/Zend/tests/generators/gh14387.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/Zend/tests/generators/gh14387.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,35 @@
+--TEST--
+GH-14387 (Crash when stack walking in destructor of yielded from values during Generator->throw())
+--FILE--
+<?php
+
+function prime(Generator $generator) {
+	$generator->valid();
+}
+
+$g = (function () {
+	yield from [null, new class {
+		function __destruct() {
+			// Trigger a stack walk, hitting a bad frame.
+			throw new Exception;
+		}
+	}];
+})();
+
+prime($g);
+
+$g->throw(new Error);
+
+?>
+--EXPECTF--
+Fatal error: Uncaught Error in %s:%d
+Stack trace:
+#0 {main}
+
+Next Exception in %s:%d
+Stack trace:
+#0 %s(%d): class@anonymous->__destruct()
+#1 [internal function]: {%s}()
+#2 %s(%d): Generator->throw(Object(Error))
+#3 {main}
+  thrown in %s on line %d
diff -urpN php-8.3.8/Zend/tests/gh14456.phpt php-8.3.10/Zend/tests/gh14456.phpt
--- php-8.3.8/Zend/tests/gh14456.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/Zend/tests/gh14456.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,20 @@
+--TEST--
+GH-14456: Attempting to initialize class with private constructor calls destructor
+--FILE--
+<?php
+
+class PrivateUser {
+    private function __construct() {}
+    public function __destruct() {
+        echo 'Destructor for ', __CLASS__, PHP_EOL;
+    }
+}
+
+try {
+    new PrivateUser();
+} catch (Throwable $e) {
+    echo $e::class, ': ', $e->getMessage(), PHP_EOL;
+}
+?>
+--EXPECT--
+Error: Call to private PrivateUser::__construct() from global scope
diff -urpN php-8.3.8/Zend/tests/gh14480.phpt php-8.3.10/Zend/tests/gh14480.phpt
--- php-8.3.8/Zend/tests/gh14480.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/Zend/tests/gh14480.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,60 @@
+--TEST--
+GH-14480: Method visibility issue
+--FILE--
+<?php
+trait PropertyHelperTrait
+{
+    protected function splitPropertyParts(): void
+    {
+	    echo "OK\n";
+    }
+}
+
+trait OrmPropertyHelperTrait
+{
+    abstract protected function splitPropertyParts(): void;
+    
+    protected function addJoinsForNestedProperty(): void
+    {
+        $this->splitPropertyParts();
+    }
+}
+
+trait SearchFilterTrait
+{
+    use PropertyHelperTrait;
+}
+
+abstract class AbstractFilter
+{
+    use OrmPropertyHelperTrait, PropertyHelperTrait;
+    
+    public function apply(): void
+    {
+        $this->filterProperty();
+    }
+    
+    abstract protected function filterProperty(): void;
+}
+
+class SearchFilter extends AbstractFilter
+{
+    use SearchFilterTrait;
+    protected function filterProperty(): void
+    {
+        $this->addJoinsForNestedProperty();
+    }
+}
+
+class FilterExtension
+{
+    public function applyToCollection(): void
+    {
+        (new SearchFilter())->apply();
+    }
+}
+
+(new FilterExtension)->applyToCollection();
+?>
+--EXPECT--
+OK
diff -urpN php-8.3.8/Zend/tests/gh14626.phpt php-8.3.10/Zend/tests/gh14626.phpt
--- php-8.3.8/Zend/tests/gh14626.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/Zend/tests/gh14626.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,18 @@
+--TEST--
+GH-14626: is_zend_ptr() may crash for non-zend ptrs when huge blocks exist
+--EXTENSIONS--
+zend_test
+--FILE--
+<?php
+
+// Ensure there is at least one huge_block
+$str = str_repeat('a', 2*1024*1024);
+
+// Check that is_zend_ptr() does not crash
+zend_test_is_zend_ptr(0);
+zend_test_is_zend_ptr(1<<30);
+
+?>
+==DONE==
+--EXPECT--
+==DONE==
diff -urpN php-8.3.8/Zend/tests/gh14969.phpt php-8.3.10/Zend/tests/gh14969.phpt
--- php-8.3.8/Zend/tests/gh14969.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/Zend/tests/gh14969.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,47 @@
+--TEST--
+GH-14969: Crash on coercion with throwing __toString()
+--FILE--
+<?php
+
+class C {
+    public function __toString() {
+        global $c;
+        $c = [];
+        throw new Exception(__METHOD__);
+    }
+}
+
+class D {
+    public string $prop;
+}
+
+$c = new C();
+$d = new D();
+try {
+    $d->prop = $c;
+} catch (Throwable $e) {
+    echo $e->getMessage(), "\n";
+}
+var_dump($d);
+
+$c = new C();
+$d->prop = 'foo';
+try {
+    $d->prop = $c;
+} catch (Throwable $e) {
+    echo $e->getMessage(), "\n";
+}
+var_dump($d);
+
+?>
+--EXPECTF--
+C::__toString
+object(D)#%d (0) {
+  ["prop"]=>
+  uninitialized(string)
+}
+C::__toString
+object(D)#2 (1) {
+  ["prop"]=>
+  string(3) "foo"
+}
diff -urpN php-8.3.8/Zend/tests/oss-fuzz-69765.phpt php-8.3.10/Zend/tests/oss-fuzz-69765.phpt
--- php-8.3.8/Zend/tests/oss-fuzz-69765.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/Zend/tests/oss-fuzz-69765.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,10 @@
+--TEST--
+OSS-Fuzz #69765: yield reference to nullsafe chain
+--FILE--
+<?php
+function &test($object) {
+    yield $object->y?->y;
+}
+?>
+--EXPECTF--
+Fatal error: Cannot take reference of a nullsafe chain in %s on line %d
diff -urpN php-8.3.8/Zend/zend.h php-8.3.10/Zend/zend.h
--- php-8.3.8/Zend/zend.h	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/Zend/zend.h	2024-07-30 20:44:37.000000000 +0700
@@ -20,7 +20,7 @@
 #ifndef ZEND_H
 #define ZEND_H
 
-#define ZEND_VERSION "4.3.8"
+#define ZEND_VERSION "4.3.10"
 
 #define ZEND_ENGINE_3
 
diff -urpN php-8.3.8/Zend/zend_alloc.c php-8.3.10/Zend/zend_alloc.c
--- php-8.3.8/Zend/zend_alloc.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/Zend/zend_alloc.c	2024-07-30 20:44:37.000000000 +0700
@@ -2469,17 +2469,15 @@ ZEND_API bool is_zend_ptr(const void *pt
 		} while (chunk != AG(mm_heap)->main_chunk);
 	}
 
-	if (AG(mm_heap)->huge_list) {
-		zend_mm_huge_list *block = AG(mm_heap)->huge_list;
-
-		do {
-			if (ptr >= (void*)block
-			 && ptr < (void*)((char*)block + block->size)) {
-				return 1;
-			}
-			block = block->next;
-		} while (block != AG(mm_heap)->huge_list);
+	zend_mm_huge_list *block = AG(mm_heap)->huge_list;
+	while (block) {
+		if (ptr >= (void*)block
+				&& ptr < (void*)((char*)block + block->size)) {
+			return 1;
+		}
+		block = block->next;
 	}
+
 	return 0;
 }
 
diff -urpN php-8.3.8/Zend/zend_call_stack.c php-8.3.10/Zend/zend_call_stack.c
--- php-8.3.8/Zend/zend_call_stack.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/Zend/zend_call_stack.c	2024-07-30 20:44:37.000000000 +0700
@@ -124,6 +124,7 @@ static bool zend_call_stack_get_linux_pt
 
 	error = pthread_attr_getstack(&attr, &addr, &max_size);
 	if (error) {
+		pthread_attr_destroy(&attr);
 		return false;
 	}
 
@@ -133,6 +134,7 @@ static bool zend_call_stack_get_linux_pt
 		/* In glibc prior to 2.8, addr and size include the guard pages */
 		error = pthread_attr_getguardsize(&attr, &guard_size);
 		if (error) {
+			pthread_attr_destroy(&attr);
 			return false;
 		}
 
@@ -144,6 +146,8 @@ static bool zend_call_stack_get_linux_pt
 	stack->base = (int8_t*)addr + max_size;
 	stack->max_size = max_size;
 
+	pthread_attr_destroy(&attr);
+
 	return true;
 }
 # else /* defined(HAVE_PTHREAD_GETATTR_NP) && defined(HAVE_PTHREAD_ATTR_GETSTACK) */
diff -urpN php-8.3.8/Zend/zend_compile.c php-8.3.10/Zend/zend_compile.c
--- php-8.3.8/Zend/zend_compile.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/Zend/zend_compile.c	2024-07-30 20:44:37.000000000 +0700
@@ -2438,6 +2438,13 @@ static bool zend_ast_is_short_circuited(
 	}
 }
 
+static void zend_assert_not_short_circuited(const zend_ast *ast)
+{
+	if (zend_ast_is_short_circuited(ast)) {
+		zend_error_noreturn(E_COMPILE_ERROR, "Cannot take reference of a nullsafe chain");
+	}
+}
+
 /* Mark nodes that are an inner part of a short-circuiting chain.
  * We should not perform a "commit" on them, as it will be performed by the outer-most node.
  * We do this to avoid passing down an argument in various compile functions. */
@@ -3426,9 +3433,8 @@ static void zend_compile_assign(znode *r
 				if (!zend_is_variable_or_call(expr_ast)) {
 					zend_error_noreturn(E_COMPILE_ERROR,
 						"Cannot assign reference to non referenceable value");
-				} else if (zend_ast_is_short_circuited(expr_ast)) {
-					zend_error_noreturn(E_COMPILE_ERROR,
-						"Cannot take reference of a nullsafe chain");
+				} else {
+					zend_assert_not_short_circuited(expr_ast);
 				}
 
 				zend_compile_var(&expr_node, expr_ast, BP_VAR_W, 1);
@@ -3470,9 +3476,7 @@ static void zend_compile_assign_ref(znod
 		zend_error_noreturn(E_COMPILE_ERROR, "Cannot re-assign $this");
 	}
 	zend_ensure_writable_variable(target_ast);
-	if (zend_ast_is_short_circuited(source_ast)) {
-		zend_error_noreturn(E_COMPILE_ERROR, "Cannot take reference of a nullsafe chain");
-	}
+	zend_assert_not_short_circuited(source_ast);
 	if (is_globals_fetch(source_ast)) {
 		zend_error_noreturn(E_COMPILE_ERROR, "Cannot acquire reference to $GLOBALS");
 	}
@@ -5173,10 +5177,7 @@ static void zend_compile_return(zend_ast
 		expr_node.op_type = IS_CONST;
 		ZVAL_NULL(&expr_node.u.constant);
 	} else if (by_ref && zend_is_variable(expr_ast)) {
-		if (zend_ast_is_short_circuited(expr_ast)) {
-			zend_error_noreturn(E_COMPILE_ERROR, "Cannot take reference of a nullsafe chain");
-		}
-
+		zend_assert_not_short_circuited(expr_ast);
 		zend_compile_var(&expr_node, expr_ast, BP_VAR_W, 1);
 	} else {
 		zend_compile_expr(&expr_node, expr_ast);
@@ -9512,6 +9513,7 @@ static void zend_compile_yield(znode *re
 
 	if (value_ast) {
 		if (returns_by_ref && zend_is_variable(value_ast)) {
+			zend_assert_not_short_circuited(value_ast);
 			zend_compile_var(&value_node, value_ast, BP_VAR_W, 1);
 		} else {
 			zend_compile_expr(&value_node, value_ast);
diff -urpN php-8.3.8/Zend/zend_execute.c php-8.3.10/Zend/zend_execute.c
--- php-8.3.8/Zend/zend_execute.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/Zend/zend_execute.c	2024-07-30 20:44:37.000000000 +0700
@@ -3234,6 +3234,9 @@ static zend_always_inline void zend_fetc
 		}
 	}
 
+	/* Pointer on property callback is required */
+	ZEND_ASSERT(zobj->handlers->get_property_ptr_ptr != NULL);
+
 	if (prop_op_type == IS_CONST) {
 		name = Z_STR_P(prop_ptr);
 	} else {
diff -urpN php-8.3.8/Zend/zend_execute_API.c php-8.3.10/Zend/zend_execute_API.c
--- php-8.3.8/Zend/zend_execute_API.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/Zend/zend_execute_API.c	2024-07-30 20:44:37.000000000 +0700
@@ -1555,7 +1555,9 @@ static void zend_set_timeout_ex(zend_lon
 			t_r.it_value.tv_sec = seconds;
 			t_r.it_value.tv_usec = t_r.it_interval.tv_sec = t_r.it_interval.tv_usec = 0;
 
-# if defined(__CYGWIN__) || defined(__PASE__)
+# if defined(__CYGWIN__) || defined(__PASE__) || (defined(__aarch64__) && defined(__APPLE__))
+			// ITIMER_PROF is broken in Apple Silicon system with MacOS >= 14
+			// See https://openradar.appspot.com/radar?id=5583058442911744.
 			setitimer(ITIMER_REAL, &t_r, NULL);
 		}
 		signo = SIGALRM;
@@ -1619,7 +1621,7 @@ void zend_unset_timeout(void) /* {{{ */
 
 		no_timeout.it_value.tv_sec = no_timeout.it_value.tv_usec = no_timeout.it_interval.tv_sec = no_timeout.it_interval.tv_usec = 0;
 
-# if defined(__CYGWIN__) || defined(__PASE__)
+# if defined(__CYGWIN__) || defined(__PASE__) || (defined(__aarch64__) && defined(__APPLE__))
 		setitimer(ITIMER_REAL, &no_timeout, NULL);
 # else
 		setitimer(ITIMER_PROF, &no_timeout, NULL);
diff -urpN php-8.3.8/Zend/zend_generators.c php-8.3.10/Zend/zend_generators.c
--- php-8.3.8/Zend/zend_generators.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/Zend/zend_generators.c	2024-07-30 20:44:37.000000000 +0700
@@ -458,6 +458,7 @@ static void zend_generator_throw_excepti
 	 * to pretend the exception happened during the YIELD opcode. */
 	EG(current_execute_data) = generator->execute_data;
 	generator->execute_data->opline--;
+	generator->execute_data->prev_execute_data = original_execute_data;
 
 	if (exception) {
 		zend_throw_exception_object(exception);
diff -urpN php-8.3.8/Zend/zend_inheritance.c php-8.3.10/Zend/zend_inheritance.c
--- php-8.3.8/Zend/zend_inheritance.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/Zend/zend_inheritance.c	2024-07-30 20:44:37.000000000 +0700
@@ -2018,12 +2018,14 @@ static void zend_add_trait_method(zend_c
 	if (check_inheritance) {
 		/* Inherited members are overridden by members inserted by traits.
 		 * Check whether the trait method fulfills the inheritance requirements. */
+		uint32_t flags = ZEND_INHERITANCE_CHECK_PROTO | ZEND_INHERITANCE_CHECK_VISIBILITY;
+		if (!(existing_fn->common.scope->ce_flags & ZEND_ACC_TRAIT)) {
+			flags |= ZEND_INHERITANCE_SET_CHILD_CHANGED |ZEND_INHERITANCE_SET_CHILD_PROTO |
+				ZEND_INHERITANCE_RESET_CHILD_OVERRIDE;
+		}
 		do_inheritance_check_on_method(
 			fn, fixup_trait_scope(fn, ce), existing_fn, fixup_trait_scope(existing_fn, ce),
-			ce, NULL,
-			ZEND_INHERITANCE_CHECK_PROTO | ZEND_INHERITANCE_CHECK_VISIBILITY |
-			ZEND_INHERITANCE_SET_CHILD_CHANGED| ZEND_INHERITANCE_SET_CHILD_PROTO |
-			ZEND_INHERITANCE_RESET_CHILD_OVERRIDE);
+			ce, NULL, flags);
 	}
 }
 /* }}} */
diff -urpN php-8.3.8/Zend/zend_ini_parser.c php-8.3.10/Zend/zend_ini_parser.c
--- php-8.3.8/Zend/zend_ini_parser.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/Zend/zend_ini_parser.c	2024-07-30 20:44:37.000000000 +0700
@@ -253,8 +253,10 @@ static void zend_ini_get_var(zval *resul
 	if ((curval = zend_get_configuration_directive(Z_STR_P(name))) != NULL) {
 		ZVAL_NEW_STR(result, zend_string_init(Z_STRVAL_P(curval), Z_STRLEN_P(curval), ZEND_SYSTEM_INI));
 	/* ..or if not found, try ENV */
-	} else if ((envvar = zend_getenv(Z_STRVAL_P(name), Z_STRLEN_P(name))) != NULL ||
-			   (envvar = getenv(Z_STRVAL_P(name))) != NULL) {
+	} else if ((envvar = zend_getenv(Z_STRVAL_P(name), Z_STRLEN_P(name))) != NULL) {
+		ZVAL_NEW_STR(result, zend_string_init(envvar, strlen(envvar), ZEND_SYSTEM_INI));
+		efree(envvar);
+	} else if ((envvar = getenv(Z_STRVAL_P(name))) != NULL) {
 		ZVAL_NEW_STR(result, zend_string_init(envvar, strlen(envvar), ZEND_SYSTEM_INI));
 	/* ..or if not defined, try fallback value */
 	} else if (fallback) {
@@ -870,12 +872,12 @@ static const yytype_int8 yytranslate[] =
 /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
 static const yytype_int16 yyrline[] =
 {
-       0,   359,   359,   360,   364,   371,   382,   391,   392,   396,
-     397,   401,   402,   403,   404,   405,   409,   410,   414,   415,
-     416,   420,   421,   422,   423,   424,   425,   429,   430,   431,
-     432,   433,   434,   438,   439,   440,   441,   442,   443,   444,
-     448,   449,   454,   455,   459,   460,   461,   462,   463,   467,
-     468,   469,   474,   475
+       0,   361,   361,   362,   366,   373,   384,   393,   394,   398,
+     399,   403,   404,   405,   406,   407,   411,   412,   416,   417,
+     418,   422,   423,   424,   425,   426,   427,   431,   432,   433,
+     434,   435,   436,   440,   441,   442,   443,   444,   445,   446,
+     450,   451,   456,   457,   461,   462,   463,   464,   465,   469,
+     470,   471,   476,   477
 };
 #endif
 
diff -urpN php-8.3.8/Zend/zend_ini_parser.y php-8.3.10/Zend/zend_ini_parser.y
--- php-8.3.8/Zend/zend_ini_parser.y	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/Zend/zend_ini_parser.y	2024-07-30 20:44:37.000000000 +0700
@@ -179,8 +179,10 @@ static void zend_ini_get_var(zval *resul
 	if ((curval = zend_get_configuration_directive(Z_STR_P(name))) != NULL) {
 		ZVAL_NEW_STR(result, zend_string_init(Z_STRVAL_P(curval), Z_STRLEN_P(curval), ZEND_SYSTEM_INI));
 	/* ..or if not found, try ENV */
-	} else if ((envvar = zend_getenv(Z_STRVAL_P(name), Z_STRLEN_P(name))) != NULL ||
-			   (envvar = getenv(Z_STRVAL_P(name))) != NULL) {
+	} else if ((envvar = zend_getenv(Z_STRVAL_P(name), Z_STRLEN_P(name))) != NULL) {
+		ZVAL_NEW_STR(result, zend_string_init(envvar, strlen(envvar), ZEND_SYSTEM_INI));
+		efree(envvar);
+	} else if ((envvar = getenv(Z_STRVAL_P(name))) != NULL) {
 		ZVAL_NEW_STR(result, zend_string_init(envvar, strlen(envvar), ZEND_SYSTEM_INI));
 	/* ..or if not defined, try fallback value */
 	} else if (fallback) {
diff -urpN php-8.3.8/Zend/zend_interfaces.c php-8.3.10/Zend/zend_interfaces.c
--- php-8.3.8/Zend/zend_interfaces.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/Zend/zend_interfaces.c	2024-07-30 20:44:37.000000000 +0700
@@ -667,6 +667,7 @@ ZEND_API void zend_register_interfaces(v
 
 	memcpy(&zend_internal_iterator_handlers, zend_get_std_object_handlers(),
 		sizeof(zend_object_handlers));
+	zend_internal_iterator_handlers.clone_obj = NULL;
 	zend_internal_iterator_handlers.free_obj = zend_internal_iterator_free;
 }
 /* }}} */
diff -urpN php-8.3.8/Zend/zend_object_handlers.c php-8.3.10/Zend/zend_object_handlers.c
--- php-8.3.8/Zend/zend_object_handlers.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/Zend/zend_object_handlers.c	2024-07-30 20:44:37.000000000 +0700
@@ -846,7 +846,7 @@ ZEND_API zval *zend_std_write_property(z
 					goto exit;
 				}
 				if (UNEXPECTED(!type_matched)) {
-					Z_TRY_DELREF_P(value);
+					zval_ptr_dtor(&tmp);
 					variable_ptr = &EG(error_zval);
 					goto exit;
 				}
@@ -949,7 +949,7 @@ write_std_property:
 					goto exit;
 				}
 				if (UNEXPECTED(!type_matched)) {
-					zval_ptr_dtor(value);
+					zval_ptr_dtor(&tmp);
 					goto exit;
 				}
 				value = &tmp;
@@ -1686,6 +1686,7 @@ ZEND_API zend_function *zend_std_get_con
 				if (UNEXPECTED(constructor->op_array.fn_flags & ZEND_ACC_PRIVATE)
 				 || UNEXPECTED(!zend_check_protected(zend_get_function_root_class(constructor), scope))) {
 					zend_bad_constructor_call(constructor, scope);
+					zend_object_store_ctor_failed(zobj);
 					constructor = NULL;
 				}
 			}
diff -urpN php-8.3.8/Zend/zend_vm_def.h php-8.3.10/Zend/zend_vm_def.h
--- php-8.3.8/Zend/zend_vm_def.h	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/Zend/zend_vm_def.h	2024-07-30 20:44:37.000000000 +0700
@@ -8024,7 +8024,7 @@ ZEND_VM_HANDLER(149, ZEND_HANDLE_EXCEPTI
 
 	/* Exception was thrown before executing any op */
 	if (UNEXPECTED(!throw_op)) {
-		ZEND_VM_DISPATCH_TO_HELPER(zend_dispatch_try_catch_finally_helper, try_catch_offset, -1, 0, 0);
+		ZEND_VM_DISPATCH_TO_HELPER(zend_dispatch_try_catch_finally_helper, try_catch_offset, -1, op_num, 0);
 	}
 
 	uint32_t throw_op_num = throw_op - EX(func)->op_array.opcodes;
diff -urpN php-8.3.8/build/gen_stub.php php-8.3.10/build/gen_stub.php
--- php-8.3.8/build/gen_stub.php	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/build/gen_stub.php	2024-07-30 20:44:37.000000000 +0700
@@ -999,7 +999,7 @@ class PropertyName implements VariableLi
         $this->property = $property;
     }
 
-    public function __toString()
+    public function __toString(): string
     {
         return $this->class->toString() . "::$" . $this->property;
     }
@@ -1690,7 +1690,7 @@ class EvaluatedValue
                     return null;
                 }
 
-                throw new Exception("Constant " . $originatingConstName->__toString() . " cannot be found");
+                throw new Exception("Constant " . $constName . " cannot be found");
             }
         );
 
diff -urpN php-8.3.8/build/php.m4 php-8.3.10/build/php.m4
--- php-8.3.8/build/php.m4	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/build/php.m4	2024-07-30 20:44:37.000000000 +0700
@@ -1260,33 +1260,21 @@ dnl
 dnl PHP_MISSING_TIME_R_DECL
 dnl
 AC_DEFUN([PHP_MISSING_TIME_R_DECL],[
-  AC_MSG_CHECKING([for missing declarations of reentrant functions])
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <time.h>]], [[struct tm *(*func)(void) = localtime_r]])],[
-    :
-  ],[
-    AC_DEFINE(MISSING_LOCALTIME_R_DECL,1,[Whether localtime_r is declared])
-  ])
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <time.h>]], [[struct tm *(*func)(void) = gmtime_r]])],[
-    :
-  ],[
-    AC_DEFINE(MISSING_GMTIME_R_DECL,1,[Whether gmtime_r is declared])
-  ])
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <time.h>]], [[char *(*func)(void) = asctime_r]])],[
-    :
-  ],[
-    AC_DEFINE(MISSING_ASCTIME_R_DECL,1,[Whether asctime_r is declared])
-  ])
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <time.h>]], [[char *(*func)(void) = ctime_r]])],[
-    :
-  ],[
-    AC_DEFINE(MISSING_CTIME_R_DECL,1,[Whether ctime_r is declared])
-  ])
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <string.h>]], [[char *(*func)(void) = strtok_r]])],[
-    :
-  ],[
-    AC_DEFINE(MISSING_STRTOK_R_DECL,1,[Whether strtok_r is declared])
-  ])
-  AC_MSG_RESULT([done])
+AC_CHECK_DECL([localtime_r],,
+  [AC_DEFINE([MISSING_LOCALTIME_R_DECL], [1], [Whether localtime_r is declared])],
+  [#include <time.h>])
+AC_CHECK_DECL([gmtime_r],,
+  [AC_DEFINE([MISSING_GMTIME_R_DECL], [1], [Whether gmtime_r is declared])],
+  [#include <time.h>])
+AC_CHECK_DECL([asctime_r],,
+  [AC_DEFINE([MISSING_ASCTIME_R_DECL], [1], [Whether asctime_r is declared])],
+  [#include <time.h>])
+AC_CHECK_DECL([ctime_r],,
+  [AC_DEFINE([MISSING_CTIME_R_DECL], [1], [Whether ctime_r is declared])],
+  [#include <time.h>])
+AC_CHECK_DECL([strtok_r],,
+  [AC_DEFINE([MISSING_STRTOK_R_DECL], [1], [Whether strtok_r is declared])],
+  [#include <string.h>])
 ])
 
 dnl
@@ -1315,7 +1303,7 @@ dnl See if we have broken header files l
 dnl
 AC_DEFUN([PHP_MISSING_FCLOSE_DECL],[
   AC_MSG_CHECKING([for fclose declaration])
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>]], [[int (*func)(void) = fclose]])],[
+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>]], [[int (*func)(FILE *) = fclose]])],[
     AC_DEFINE(MISSING_FCLOSE_DECL,0,[ ])
     AC_MSG_RESULT([ok])
   ],[
diff -urpN php-8.3.8/configure php-8.3.10/configure
--- php-8.3.8/configure	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/configure	2024-07-30 20:44:37.000000000 +0700
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.71 for PHP 8.3.8.
+# Generated by GNU Autoconf 2.71 for PHP 8.3.10.
 #
 # Report bugs to <https://github.com/php/php-src/issues>.
 #
@@ -763,8 +763,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='PHP'
 PACKAGE_TARNAME='php'
-PACKAGE_VERSION='8.3.8'
-PACKAGE_STRING='PHP 8.3.8'
+PACKAGE_VERSION='8.3.10'
+PACKAGE_STRING='PHP 8.3.10'
 PACKAGE_BUGREPORT='https://github.com/php/php-src/issues'
 PACKAGE_URL='https://www.php.net'
 
@@ -1807,7 +1807,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures PHP 8.3.8 to adapt to many kinds of systems.
+\`configure' configures PHP 8.3.10 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1879,7 +1879,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of PHP 8.3.8:";;
+     short | recursive ) echo "Configuration of PHP 8.3.10:";;
    esac
   cat <<\_ACEOF
 
@@ -2343,7 +2343,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-PHP configure 8.3.8
+PHP configure 8.3.10
 generated by GNU Autoconf 2.71
 
 Copyright (C) 2021 Free Software Foundation, Inc.
@@ -3077,7 +3077,7 @@ cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by PHP $as_me 8.3.8, which was
+It was created by PHP $as_me 8.3.10, which was
 generated by GNU Autoconf 2.71.  Invocation command line was
 
   $ $0$ac_configure_args_raw
@@ -4479,7 +4479,7 @@ ac_config_headers="$ac_config_headers ma
 
 
 ac_IFS=$IFS; IFS="."
-set $(echo 8.3.8 | "${SED}" 's/\([0-9\.]*\)\(.*\)/\1\.\2/')
+set $(echo 8.3.10 | "${SED}" 's/\([0-9\.]*\)\(.*\)/\1\.\2/')
 IFS=$ac_IFS
 PHP_MAJOR_VERSION=$1
 PHP_MINOR_VERSION=$2
@@ -16853,130 +16853,56 @@ fi
 
 
 
-  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for missing declarations of reentrant functions" >&5
-printf %s "checking for missing declarations of reentrant functions... " >&6; }
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <time.h>
-int
-main (void)
-{
-struct tm *(*func)(void) = localtime_r
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"
+ac_fn_check_decl "$LINENO" "localtime_r" "ac_cv_have_decl_localtime_r" "#include <time.h>
+" "$ac_c_undeclared_builtin_options" "CFLAGS"
+if test "x$ac_cv_have_decl_localtime_r" = xyes
 then :
 
-    :
-
 else $as_nop
 
-
 printf "%s\n" "#define MISSING_LOCALTIME_R_DECL 1" >>confdefs.h
 
-
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <time.h>
-int
-main (void)
-{
-struct tm *(*func)(void) = gmtime_r
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"
+ac_fn_check_decl "$LINENO" "gmtime_r" "ac_cv_have_decl_gmtime_r" "#include <time.h>
+" "$ac_c_undeclared_builtin_options" "CFLAGS"
+if test "x$ac_cv_have_decl_gmtime_r" = xyes
 then :
 
-    :
-
 else $as_nop
 
-
 printf "%s\n" "#define MISSING_GMTIME_R_DECL 1" >>confdefs.h
 
-
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <time.h>
-int
-main (void)
-{
-char *(*func)(void) = asctime_r
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"
+ac_fn_check_decl "$LINENO" "asctime_r" "ac_cv_have_decl_asctime_r" "#include <time.h>
+" "$ac_c_undeclared_builtin_options" "CFLAGS"
+if test "x$ac_cv_have_decl_asctime_r" = xyes
 then :
 
-    :
-
 else $as_nop
 
-
 printf "%s\n" "#define MISSING_ASCTIME_R_DECL 1" >>confdefs.h
 
-
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <time.h>
-int
-main (void)
-{
-char *(*func)(void) = ctime_r
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"
+ac_fn_check_decl "$LINENO" "ctime_r" "ac_cv_have_decl_ctime_r" "#include <time.h>
+" "$ac_c_undeclared_builtin_options" "CFLAGS"
+if test "x$ac_cv_have_decl_ctime_r" = xyes
 then :
 
-    :
-
 else $as_nop
 
-
 printf "%s\n" "#define MISSING_CTIME_R_DECL 1" >>confdefs.h
 
-
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <string.h>
-int
-main (void)
-{
-char *(*func)(void) = strtok_r
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"
+ac_fn_check_decl "$LINENO" "strtok_r" "ac_cv_have_decl_strtok_r" "#include <string.h>
+" "$ac_c_undeclared_builtin_options" "CFLAGS"
+if test "x$ac_cv_have_decl_strtok_r" = xyes
 then :
 
-    :
-
 else $as_nop
 
-
 printf "%s\n" "#define MISSING_STRTOK_R_DECL 1" >>confdefs.h
 
-
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.beam conftest.$ac_ext
-  { printf "%s\n" "$as_me:${as_lineno-$LINENO}: result: done" >&5
-printf "%s\n" "done" >&6; }
 
 
   { printf "%s\n" "$as_me:${as_lineno-$LINENO}: checking for fclose declaration" >&5
@@ -16987,7 +16913,7 @@ printf %s "checking for fclose declarati
 int
 main (void)
 {
-int (*func)(void) = fclose
+int (*func)(FILE *) = fclose
   ;
   return 0;
 }
@@ -88886,7 +88812,7 @@ else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<EOF
-#line 88889 "configure"
+#line 88815 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
@@ -91077,7 +91003,7 @@ ia64-*-hpux*)
   ;;
 *-*-irix6*)
   # Find out which ABI we are using.
-  echo '#line 91080 "configure"' > conftest.$ac_ext
+  echo '#line 91006 "configure"' > conftest.$ac_ext
   if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
   (eval $ac_compile) 2>&5
   ac_status=$?
@@ -92528,7 +92454,7 @@ else $as_nop
       LDFLAGS="$LDFLAGS -Wl,-exported_symbols_list,conftest.sym"
 
 cat > conftest.$ac_ext <<EOF
-#line 92531 "configure"
+#line 92457 "configure"
 #include "confdefs.h"
 int main(void) {
 ; return 0; }
@@ -92688,11 +92614,11 @@ else $as_nop
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"configure:92691: $lt_compile\"" >&5)
+   (eval echo "\"configure:92617: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "configure:92695: \$? = $ac_status" >&5
+   echo "configure:92621: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
@@ -92987,11 +92913,11 @@ else $as_nop
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"configure:92990: $lt_compile\"" >&5)
+   (eval echo "\"configure:92916: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "configure:92994: \$? = $ac_status" >&5
+   echo "configure:92920: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
@@ -93093,11 +93019,11 @@ else $as_nop
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"configure:93096: $lt_compile\"" >&5)
+   (eval echo "\"configure:93022: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "configure:93100: \$? = $ac_status" >&5
+   echo "configure:93026: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
@@ -93557,7 +93483,7 @@ _LT_EOF
        # Determine the default libpath from the value encoded in an empty executable.
 
 cat > conftest.$ac_ext <<EOF
-#line 93560 "configure"
+#line 93486 "configure"
 #include "confdefs.h"
 int main(void) {
 ; return 0; }
@@ -93599,7 +93525,7 @@ if test -z "$aix_libpath"; then aix_libp
 	 # Determine the default libpath from the value encoded in an empty executable.
 
 cat > conftest.$ac_ext <<EOF
-#line 93602 "configure"
+#line 93528 "configure"
 #include "confdefs.h"
 int main(void) {
 ; return 0; }
@@ -95132,7 +95058,7 @@ else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<EOF
-#line 95135 "configure"
+#line 95061 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
@@ -95230,7 +95156,7 @@ else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
   lt_status=$lt_dlunknown
   cat > conftest.$ac_ext <<EOF
-#line 95233 "configure"
+#line 95159 "configure"
 #include "confdefs.h"
 
 #if HAVE_DLFCN_H
@@ -96295,7 +96221,7 @@ case $host_os in
       # Determine the default libpath from the value encoded in an empty executable.
 
 cat > conftest.$ac_ext <<EOF
-#line 96298 "configure"
+#line 96224 "configure"
 #include "confdefs.h"
 int main(void) {
 ; return 0; }
@@ -96338,7 +96264,7 @@ if test -z "$aix_libpath"; then aix_libp
 	# Determine the default libpath from the value encoded in an empty executable.
 
 cat > conftest.$ac_ext <<EOF
-#line 96341 "configure"
+#line 96267 "configure"
 #include "confdefs.h"
 int main(void) {
 ; return 0; }
@@ -97591,11 +97517,11 @@ else $as_nop
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"configure:97594: $lt_compile\"" >&5)
+   (eval echo "\"configure:97520: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>conftest.err)
    ac_status=$?
    cat conftest.err >&5
-   echo "configure:97598: \$? = $ac_status" >&5
+   echo "configure:97524: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s "$ac_outfile"; then
      # The compiler can only warn and ignore the option if not recognized
      # So say no if there are warnings other than the usual output.
@@ -97697,11 +97623,11 @@ else $as_nop
    -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
    -e 's: [^ ]*conftest\.: $lt_compiler_flag&:; t' \
    -e 's:$: $lt_compiler_flag:'`
-   (eval echo "\"configure:97700: $lt_compile\"" >&5)
+   (eval echo "\"configure:97626: $lt_compile\"" >&5)
    (eval "$lt_compile" 2>out/conftest.err)
    ac_status=$?
    cat out/conftest.err >&5
-   echo "configure:97704: \$? = $ac_status" >&5
+   echo "configure:97630: \$? = $ac_status" >&5
    if (exit $ac_status) && test -s out/conftest2.$ac_objext
    then
      # The compiler can only warn and ignore the option if not recognized
@@ -99983,7 +99909,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_wri
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by PHP $as_me 8.3.8, which was
+This file was extended by PHP $as_me 8.3.10, which was
 generated by GNU Autoconf 2.71.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -100052,7 +99978,7 @@ ac_cs_config_escaped=`printf "%s\n" "$ac
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config='$ac_cs_config_escaped'
 ac_cs_version="\\
-PHP config.status 8.3.8
+PHP config.status 8.3.10
 configured by $0, generated by GNU Autoconf 2.71,
   with options \\"\$ac_cs_config\\"
 
diff -urpN php-8.3.8/configure.ac php-8.3.10/configure.ac
--- php-8.3.8/configure.ac	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/configure.ac	2024-07-30 20:44:37.000000000 +0700
@@ -17,7 +17,7 @@ dnl Basic autoconf initialization, gener
 dnl ----------------------------------------------------------------------------
 
 AC_PREREQ([2.68])
-AC_INIT([PHP],[8.3.8],[https://github.com/php/php-src/issues],[php],[https://www.php.net])
+AC_INIT([PHP],[8.3.10],[https://github.com/php/php-src/issues],[php],[https://www.php.net])
 AC_CONFIG_SRCDIR([main/php_version.h])
 AC_CONFIG_AUX_DIR([build])
 AC_PRESERVE_HELP_ORDER
diff -urpN php-8.3.8/ext/bcmath/libbcmath/src/raisemod.c php-8.3.10/ext/bcmath/libbcmath/src/raisemod.c
--- php-8.3.8/ext/bcmath/libbcmath/src/raisemod.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/bcmath/libbcmath/src/raisemod.c	2024-07-30 20:44:37.000000000 +0700
@@ -30,6 +30,7 @@
 *************************************************************************/
 
 #include "bcmath.h"
+#include "private.h"
 #include <stddef.h>
 
 /* Raise BASE to the EXPO power, reduced modulo MOD.  The result is placed in RESULT. */
@@ -67,7 +68,7 @@ raise_mod_status bc_raisemod(bc_num base
 
 	/* Do the calculation. */
 	rscale = MAX(scale, power->n_scale);
-	if (!bc_compare(modulus, BCG(_one_))) {
+	if (!_bc_do_compare(modulus, BCG(_one_), false, false)) {
 		bc_free_num (&temp);
 		temp = bc_new_num (1, scale);
 	} else {
diff -urpN php-8.3.8/ext/bcmath/tests/bcpowmod_with_mod_1.phpt php-8.3.10/ext/bcmath/tests/bcpowmod_with_mod_1.phpt
--- php-8.3.8/ext/bcmath/tests/bcpowmod_with_mod_1.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/bcmath/tests/bcpowmod_with_mod_1.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,16 @@
+--TEST--
+bcpowmod() must return 0 when mod is +1 or -1
+--EXTENSIONS--
+bcmath
+--FILE--
+<?php
+var_dump(bcpowmod(5, 0, 1));
+var_dump(bcpowmod(5, 0, 1, 3));
+var_dump(bcpowmod(5, 0, -1));
+var_dump(bcpowmod(5, 0, -1, 3));
+?>
+--EXPECT--
+string(1) "0"
+string(5) "0.000"
+string(1) "0"
+string(5) "0.000"
diff -urpN php-8.3.8/ext/curl/tests/curl_basic_008.phpt php-8.3.10/ext/curl/tests/curl_basic_008.phpt
--- php-8.3.8/ext/curl/tests/curl_basic_008.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/curl/tests/curl_basic_008.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -6,7 +6,7 @@ TestFest 2009 - AFUP - Perrick Penet <pe
 curl
 --SKIPIF--
 <?php
-    $addr = "www.".uniqid().".".uniqid();
+    $addr = "www.".uniqid().".invalid";
     if (gethostbyname($addr) != $addr) {
         print "skip catch all dns";
     }
@@ -14,7 +14,7 @@ curl
 --FILE--
 <?php
 
-$url = "http://www.".uniqid().".".uniqid();
+$url = "http://www.".uniqid().".invalid";
 $ch = curl_init();
 curl_setopt($ch, CURLOPT_URL, $url);
 
diff -urpN php-8.3.8/ext/curl/tests/curl_basic_024.phpt php-8.3.10/ext/curl/tests/curl_basic_024.phpt
--- php-8.3.8/ext/curl/tests/curl_basic_024.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/curl/tests/curl_basic_024.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -25,7 +25,7 @@ var_dump(0 === curl_getinfo($ch, CURLINF
 var_dump(curl_getinfo($ch, CURLINFO_SCHEME));
 curl_close($ch);
 ?>
---EXPECT--
+--EXPECTF--
 bool(true)
 bool(true)
-string(4) "HTTP"
+string(4) "%r(HTTP|http)%r"
diff -urpN php-8.3.8/ext/dba/tests/dba_handlers.phpt php-8.3.10/ext/dba/tests/dba_handlers.phpt
--- php-8.3.8/ext/dba/tests/dba_handlers.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/dba/tests/dba_handlers.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -2,6 +2,8 @@
 DBA Handler Test
 --EXTENSIONS--
 dba
+--CONFLICTS--
+dba
 --SKIPIF--
 <?php
 $handler="flatfile";
diff -urpN php-8.3.8/ext/dba/tests/dba_ndbm.phpt php-8.3.10/ext/dba/tests/dba_ndbm.phpt
--- php-8.3.8/ext/dba/tests/dba_ndbm.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/dba/tests/dba_ndbm.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -26,11 +26,11 @@ cleanup_standard_db($db_name);
 --EXPECT--
 === RUNNING WITH FILE LOCK ===
 
-Notice: dba_open(): Handler ndbm does locking internally in /home/girgias/Dev/php-src/ext/dba/tests/setup/setup_dba_tests.inc on line 40
+Notice: dba_open(): Handler ndbm does locking internally in %s on line %d
 
-Notice: dba_open(): Handler ndbm does locking internally in /home/girgias/Dev/php-src/ext/dba/tests/setup/setup_dba_tests.inc on line 40
+Notice: dba_open(): Handler ndbm does locking internally in %s on line %d
 
-Notice: dba_open(): Handler ndbm does locking internally in /home/girgias/Dev/php-src/ext/dba/tests/setup/setup_dba_tests.inc on line 82
+Notice: dba_open(): Handler ndbm does locking internally in %s on line %d
 Remove key 1 and 3
 bool(true)
 bool(true)
@@ -61,7 +61,7 @@ bool(true)
 Fetch "key2": Content 2 replaced 2nd time
 Fetch "key number 6": The 6th value
 
-Notice: dba_open(): Handler ndbm does locking internally in /home/girgias/Dev/php-src/ext/dba/tests/setup/setup_dba_tests.inc on line 149
+Notice: dba_open(): Handler ndbm does locking internally in %s on line %d
 array(6) {
   ["[key10]name10"]=>
   string(17) "Content String 10"
@@ -122,5 +122,5 @@ array(6) {
 }
 === RUNNING WITH NO LOCK ===
 
-Warning: dba_open(): Locking cannot be disabled for handler ndbm in /home/girgias/Dev/php-src/ext/dba/tests/setup/setup_dba_tests.inc on line 40
+Warning: dba_open(): Locking cannot be disabled for handler ndbm in %s on line %d
 Failed to create DB
diff -urpN php-8.3.8/ext/dom/document.c php-8.3.10/ext/dom/document.c
--- php-8.3.8/ext/dom/document.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/dom/document.c	2024-07-30 20:44:37.000000000 +0700
@@ -813,8 +813,13 @@ PHP_METHOD(DOMDocument, importNode)
 			if (nsptr == NULL || nsptr->prefix == NULL) {
 				int errorcode;
 				nsptr = dom_get_ns(root, (char *) nodep->ns->href, &errorcode, (char *) nodep->ns->prefix);
+
+				/* If there is no root, the namespace cannot be attached to it, so we have to attach it to the old list. */
+				if (nsptr != NULL && root == NULL) {
+					php_libxml_set_old_ns(nodep->doc, nsptr);
+				}
 			}
-			xmlSetNs(retnodep, nsptr);
+			retnodep->ns = nsptr;
 		}
 	}
 
@@ -1331,11 +1336,13 @@ static xmlDocPtr dom_document_parser(zva
 	if (keep_blanks == 0 && ! (options & XML_PARSE_NOBLANKS)) {
 		options |= XML_PARSE_NOBLANKS;
 	}
+	if (recover) {
+		options |= XML_PARSE_RECOVER;
+	}
 
 	php_libxml_sanitize_parse_ctxt_options(ctxt);
 	xmlCtxtUseOptions(ctxt, options);
 
-	ctxt->recovery = recover;
 	if (recover) {
 		old_error_reporting = EG(error_reporting);
 		EG(error_reporting) = old_error_reporting | E_WARNING;
@@ -1345,7 +1352,7 @@ static xmlDocPtr dom_document_parser(zva
 
 	if (ctxt->wellFormed || recover) {
 		ret = ctxt->myDoc;
-		if (ctxt->recovery) {
+		if (recover) {
 			EG(error_reporting) = old_error_reporting;
 		}
 		/* If loading from memory, set the base reference uri for the document */
@@ -1620,6 +1627,58 @@ static void php_dom_remove_xinclude_node
 }
 /* }}} */
 
+/* Backported from master branch xml_common.h */
+static zend_always_inline xmlNodePtr php_dom_next_in_tree_order(const xmlNode *nodep, const xmlNode *basep)
+{
+	if (nodep->type == XML_ELEMENT_NODE && nodep->children) {
+		return nodep->children;
+	}
+
+	if (nodep->next) {
+		return nodep->next;
+	} else {
+		/* Go upwards, until we find a parent node with a next sibling, or until we hit the base. */
+		do {
+			nodep = nodep->parent;
+			if (nodep == basep) {
+				return NULL;
+			}
+		} while (nodep->next == NULL);
+		return nodep->next;
+	}
+}
+
+static void dom_xinclude_strip_references(xmlNodePtr basep)
+{
+	php_libxml_node_free_resource(basep);
+
+	xmlNodePtr current = basep->children;
+
+	while (current) {
+		php_libxml_node_free_resource(current);
+		current = php_dom_next_in_tree_order(current, basep);
+	}
+}
+
+/* See GH-14702.
+ * We have to remove userland references to xinclude fallback nodes because libxml2 will make clones of these
+ * and remove the original nodes. If the originals are removed while there are still userland references
+ * this will cause memory corruption. */
+static void dom_xinclude_strip_fallback_references(const xmlNode *basep)
+{
+	xmlNodePtr current = basep->children;
+
+	while (current) {
+		if (current->type == XML_ELEMENT_NODE && current->ns != NULL && current->_private != NULL
+			&& xmlStrEqual(current->name, XINCLUDE_FALLBACK)
+			&& (xmlStrEqual(current->ns->href, XINCLUDE_NS) || xmlStrEqual(current->ns->href, XINCLUDE_OLD_NS))) {
+			dom_xinclude_strip_references(current);
+		}
+
+		current = php_dom_next_in_tree_order(current, basep);
+	}
+}
+
 /* {{{ Substitutues xincludes in a DomDocument */
 PHP_METHOD(DOMDocument, xinclude)
 {
@@ -1642,6 +1701,8 @@ PHP_METHOD(DOMDocument, xinclude)
 
 	DOM_GET_OBJ(docp, id, xmlDocPtr, intern);
 
+	dom_xinclude_strip_fallback_references((const xmlNode *) docp);
+
 	PHP_LIBXML_SANITIZE_GLOBALS(xinclude);
 	err = xmlXIncludeProcessFlags(docp, (int)flags);
 	PHP_LIBXML_RESTORE_GLOBALS(xinclude);
diff -urpN php-8.3.8/ext/dom/tests/DOMDocument_loadHTMLfile_error1.phpt php-8.3.10/ext/dom/tests/DOMDocument_loadHTMLfile_error1.phpt
--- php-8.3.8/ext/dom/tests/DOMDocument_loadHTMLfile_error1.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/dom/tests/DOMDocument_loadHTMLfile_error1.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -13,4 +13,4 @@ $result = $doc->loadHTMLFile(__DIR__ . "
 assert($result === false);
 ?>
 --EXPECTF--
-%r(PHP ){0,1}%rWarning: DOMDocument::loadHTMLFile(): I/O warning : failed to load external entity %s
+%r(PHP ){0,1}%rWarning: DOMDocument::loadHTMLFile(): I/O %s
diff -urpN php-8.3.8/ext/dom/tests/DOMDocument_loadXML_error2_gte2_12.phpt php-8.3.10/ext/dom/tests/DOMDocument_loadXML_error2_gte2_12.phpt
--- php-8.3.8/ext/dom/tests/DOMDocument_loadXML_error2_gte2_12.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/dom/tests/DOMDocument_loadXML_error2_gte2_12.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -23,7 +23,7 @@ domdocumentloadxml_test_method.inc
 --EXPECTF--
 Warning: DOMDocument::loadXML(): AttValue: " or ' expected in Entity, line: 4 in %s on line %d
 
-Warning: DOMDocument::loadXML(): internal error: xmlParseStartTag: problem parsing attributes in Entity, line: 4 in %s on line %d
+Warning: DOMDocument::loadXML():%sattributes%s
 
 Warning: DOMDocument::loadXML(): Couldn't find end of Start Tag book line 4 in Entity, line: 4 in %s on line %d
 
diff -urpN php-8.3.8/ext/dom/tests/DOMDocument_load_error2_gte2_12.phpt php-8.3.10/ext/dom/tests/DOMDocument_load_error2_gte2_12.phpt
--- php-8.3.8/ext/dom/tests/DOMDocument_load_error2_gte2_12.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/dom/tests/DOMDocument_load_error2_gte2_12.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -23,7 +23,7 @@ domdocumentload_test_method.inc
 --EXPECTF--
 Warning: DOMDocument::load(): AttValue: " or ' expected in %s on line %d
 
-Warning: DOMDocument::load(): internal error: xmlParseStartTag: problem parsing attributes in %s on line %d
+Warning: DOMDocument::load():%sattributes%s
 
 Warning: DOMDocument::load(): Couldn't find end of Start Tag book line 4 in %s on line %d
 
diff -urpN php-8.3.8/ext/dom/tests/DOMDocument_relaxNGValidate_error2.phpt php-8.3.10/ext/dom/tests/DOMDocument_relaxNGValidate_error2.phpt
--- php-8.3.8/ext/dom/tests/DOMDocument_relaxNGValidate_error2.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/dom/tests/DOMDocument_relaxNGValidate_error2.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -20,7 +20,7 @@ $result = $doc->relaxNGValidate($rng);
 var_dump($result);
 ?>
 --EXPECTF--
-Warning: DOMDocument::relaxNGValidate(): I/O warning : failed to load external entity "%s/foo.rng" in %s on line %d
+Warning: DOMDocument::relaxNGValidate(): I/O %s : failed to load %s
 
 Warning: DOMDocument::relaxNGValidate(): xmlRelaxNGParse: could not load %s/foo.rng in %s on line %d
 
diff -urpN php-8.3.8/ext/dom/tests/DOMDocument_saveHTMLFile_basic.phpt php-8.3.10/ext/dom/tests/DOMDocument_saveHTMLFile_basic.phpt
--- php-8.3.8/ext/dom/tests/DOMDocument_saveHTMLFile_basic.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/dom/tests/DOMDocument_saveHTMLFile_basic.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -5,6 +5,10 @@ Knut Urdalen <knut@php.net>
 #PHPTestFest2009 Norway 2009-06-09 \o/
 --EXTENSIONS--
 dom
+--SKIPIF--
+<?php
+if (LIBXML_VERSION >= 21300) die("skip see https://gitlab.gnome.org/GNOME/libxml2/-/issues/756");
+?>
 --FILE--
 <?php
 $filename = __DIR__."/DOMDocument_saveHTMLFile_basic.html";
diff -urpN php-8.3.8/ext/dom/tests/DOMDocument_saveHTMLFile_formatOutput.phpt php-8.3.10/ext/dom/tests/DOMDocument_saveHTMLFile_formatOutput.phpt
--- php-8.3.8/ext/dom/tests/DOMDocument_saveHTMLFile_formatOutput.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/dom/tests/DOMDocument_saveHTMLFile_formatOutput.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -5,6 +5,10 @@ Knut Urdalen <knut@php.net>
 #PHPTestFest2009 Norway 2009-06-09 \o/
 --EXTENSIONS--
 dom
+--SKIPIF--
+<?php
+if (LIBXML_VERSION >= 21300) die("skip see https://gitlab.gnome.org/GNOME/libxml2/-/issues/756");
+?>
 --FILE--
 <?php
 $filename = __DIR__."/DOMDocument_saveHTMLFile_formatOutput.html";
diff -urpN php-8.3.8/ext/dom/tests/DOMDocument_saveHTMLFile_formatOutput_gte_2_13.phpt php-8.3.10/ext/dom/tests/DOMDocument_saveHTMLFile_formatOutput_gte_2_13.phpt
--- php-8.3.8/ext/dom/tests/DOMDocument_saveHTMLFile_formatOutput_gte_2_13.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/dom/tests/DOMDocument_saveHTMLFile_formatOutput_gte_2_13.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,32 @@
+--TEST--
+DOMDocument::saveHTMLFile() should format output on demand
+--CREDITS--
+Knut Urdalen <knut@php.net>
+#PHPTestFest2009 Norway 2009-06-09 \o/
+--EXTENSIONS--
+dom
+--SKIPIF--
+<?php
+if (LIBXML_VERSION < 21300) die("skip see https://gitlab.gnome.org/GNOME/libxml2/-/issues/756");
+?>
+--FILE--
+<?php
+$filename = __DIR__."/DOMDocument_saveHTMLFile_formatOutput_gte_2_13.html";
+$doc = new DOMDocument('1.0');
+$doc->formatOutput = true;
+$root = $doc->createElement('html');
+$root = $doc->appendChild($root);
+$head = $doc->createElement('head');
+$head = $root->appendChild($head);
+$title = $doc->createElement('title');
+$title = $head->appendChild($title);
+$text = $doc->createTextNode('This is the title');
+$text = $title->appendChild($text);
+$bytes = $doc->saveHTMLFile($filename);
+var_dump($bytes);
+echo file_get_contents($filename);
+unlink($filename);
+?>
+--EXPECT--
+int(59)
+<html><head><title>This is the title</title></head></html>
diff -urpN php-8.3.8/ext/dom/tests/DOMDocument_saveHTML_basic_gte_2_13.phpt php-8.3.10/ext/dom/tests/DOMDocument_saveHTML_basic_gte_2_13.phpt
--- php-8.3.8/ext/dom/tests/DOMDocument_saveHTML_basic_gte_2_13.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/dom/tests/DOMDocument_saveHTML_basic_gte_2_13.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,31 @@
+--TEST--
+DOMDocument::saveHTMLFile() should dump the internal document into a file using HTML formatting
+--CREDITS--
+Knut Urdalen <knut@php.net>
+#PHPTestFest2009 Norway 2009-06-09 \o/
+--EXTENSIONS--
+dom
+--SKIPIF--
+<?php
+if (LIBXML_VERSION < 21300) die("skip see https://gitlab.gnome.org/GNOME/libxml2/-/issues/756");
+?>
+--FILE--
+<?php
+$filename = __DIR__."/DOMDocument_saveHTMLFile_basic_gte_2_13.html";
+$doc = new DOMDocument('1.0');
+$root = $doc->createElement('html');
+$root = $doc->appendChild($root);
+$head = $doc->createElement('head');
+$head = $root->appendChild($head);
+$title = $doc->createElement('title');
+$title = $head->appendChild($title);
+$text = $doc->createTextNode('This is the title');
+$text = $title->appendChild($text);
+$bytes = $doc->saveHTMLFile($filename);
+var_dump($bytes);
+echo file_get_contents($filename);
+unlink($filename);
+?>
+--EXPECT--
+int(59)
+<html><head><title>This is the title</title></head></html>
diff -urpN php-8.3.8/ext/dom/tests/DOMDocument_schemaValidate_error5.phpt php-8.3.10/ext/dom/tests/DOMDocument_schemaValidate_error5.phpt
--- php-8.3.8/ext/dom/tests/DOMDocument_schemaValidate_error5.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/dom/tests/DOMDocument_schemaValidate_error5.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -17,7 +17,7 @@ var_dump($result);
 
 ?>
 --EXPECTF--
-Warning: DOMDocument::schemaValidate(): I/O warning : failed to load external entity "%snon-existent-file" in %s.php on line %d
+Warning: DOMDocument::schemaValidate(): I/O %s : failed to load %s
 
 Warning: DOMDocument::schemaValidate(): Failed to locate the main schema resource at '%s/non-existent-file'. in %s.php on line %d
 
diff -urpN php-8.3.8/ext/dom/tests/DOMElement_insertAdjacentText.phpt php-8.3.10/ext/dom/tests/DOMElement_insertAdjacentText.phpt
--- php-8.3.8/ext/dom/tests/DOMElement_insertAdjacentText.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/dom/tests/DOMElement_insertAdjacentText.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -51,7 +51,6 @@ echo $dom->saveXML($empty), "\n";
 $AText = $empty->firstChild;
 $empty->insertAdjacentText("afterbegin", 'B');
 echo $dom->saveXML($empty), "\n";
-var_dump($AText->textContent);
 
 ?>
 --EXPECT--
@@ -78,4 +77,3 @@ Syntax Error
 --- Normal cases starting from empty element ---
 <empty>A</empty>
 <empty>BA</empty>
-string(2) "BA"
diff -urpN php-8.3.8/ext/dom/tests/DOMEntityReference_predefined_free.phpt php-8.3.10/ext/dom/tests/DOMEntityReference_predefined_free.phpt
--- php-8.3.8/ext/dom/tests/DOMEntityReference_predefined_free.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/dom/tests/DOMEntityReference_predefined_free.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -7,7 +7,7 @@ dom
 $ref = new DOMEntityReference("amp");
 var_dump($ref);
 ?>
---EXPECT--
+--EXPECTF--
 object(DOMEntityReference)#1 (17) {
   ["nodeName"]=>
   string(3) "amp"
@@ -42,5 +42,5 @@ object(DOMEntityReference)#1 (17) {
   ["baseURI"]=>
   NULL
   ["textContent"]=>
-  string(0) ""
+  string(%d) "%S"
 }
diff -urpN php-8.3.8/ext/dom/tests/dom_create_element.phpt php-8.3.10/ext/dom/tests/dom_create_element.phpt
--- php-8.3.8/ext/dom/tests/dom_create_element.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/dom/tests/dom_create_element.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -251,14 +251,10 @@ try {
     print $e->getMessage() . "\n";
 }
 
-/* This isn't because the xml namespace isn't there and we can't create it */
-print "29 DOMElement::__construct('xml:valid', '', 'http://www.w3.org/XML/1998/namespace')\n";
-try {
-    $element = new DomElement('xml:valid', '', 'http://www.w3.org/XML/1998/namespace');
-    print "valid\n";
-} catch (Exception $e) {
-    print $e->getMessage() . "\n";
-}
+/* There used to be a 29 here that tested DOMElement::__construct('xml:valid', '', 'http://www.w3.org/XML/1998/namespace').
+ * In libxml2 version 2.12 or prior this didn't work because the xml namespace isn't there and you can't create it without
+ * a document. Starting from libxml2 version 2.13 it does actually work because the XML namespace is statically defined.
+ * The behaviour from version 2.13 is actually the desired behaviour anyway. */
 
 
 /* the qualifiedName or its prefix is "xmlns" and the  namespaceURI is
@@ -378,8 +374,6 @@ Namespace Error
 Namespace Error
 28 DOMDocument::createElementNS('http://www.w3.org/XML/1998/namespace', 'xml:valid')
 valid
-29 DOMElement::__construct('xml:valid', '', 'http://www.w3.org/XML/1998/namespace')
-Namespace Error
 30 DOMDocument::createElementNS('http://wrong.namespaceURI.com', 'xmlns:valid')
 Namespace Error
 31 DOMElement::__construct('xmlns:valid', '', 'http://wrong.namespaceURI.com')
diff -urpN php-8.3.8/ext/dom/tests/gh14343.phpt php-8.3.10/ext/dom/tests/gh14343.phpt
--- php-8.3.8/ext/dom/tests/gh14343.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/dom/tests/gh14343.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,15 @@
+--TEST--
+GH-14343 (Memory leak in xml and dom)
+--EXTENSIONS--
+dom
+--FILE--
+<?php
+$aDOM = new DOMDocument();
+$fromdom = new DOMDocument();
+$fromdom->loadXML('<data xmlns:ai="http://test.org" ai:attr="namespaced" />');
+$attr= $fromdom->firstChild->attributes->item(0);
+$att = $aDOM->importNode($attr);
+echo $aDOM->saveXML($att);
+?>
+--EXPECT--
+ ai:attr="namespaced"
diff -urpN php-8.3.8/ext/dom/tests/gh14702.phpt php-8.3.10/ext/dom/tests/gh14702.phpt
--- php-8.3.8/ext/dom/tests/gh14702.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/dom/tests/gh14702.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,66 @@
+--TEST--
+GH-14702 (DOMDocument::xinclude() crash)
+--EXTENSIONS--
+dom
+--FILE--
+<?php
+$doc = new DOMDocument();
+$doc->loadXML(<<<XML
+<?xml version="1.0"?>
+<root>
+  <child/>
+  <include href="foo" xmlns="http://www.w3.org/2001/XInclude">
+    <fallback/>
+  </include>
+  <keep/>
+</root>
+XML);
+$xi = $doc->createElementNS('http://www.w3.org/2001/XInclude', 'xi:include');
+$xi->setAttribute('href', 'nonexistent');
+
+$fallback = $doc->createElementNS('http://www.w3.org/2001/XInclude', 'xi:fallback');
+$xi->appendChild($fallback);
+$child1 = $fallback->appendChild($doc->createElement('fallback-child1'));
+$child2 = $fallback->appendChild($doc->createElement('fallback-child2'));
+
+$xpath = new DOMXPath($doc);
+$toReplace = $xpath->query('//child')->item(0);
+$toReplace->parentNode->replaceChild($xi, $toReplace);
+
+$keep = $doc->documentElement->lastElementChild;
+
+var_dump(@$doc->xinclude());
+echo $doc->saveXML();
+
+var_dump($child1, $child2, $fallback, $keep->nodeName);
+
+$keep->textContent = 'still works';
+echo $doc->saveXML();
+?>
+--EXPECT--
+int(2)
+<?xml version="1.0"?>
+<root>
+  <fallback-child1/><fallback-child2/>
+  
+  <keep/>
+</root>
+object(DOMElement)#4 (1) {
+  ["schemaTypeInfo"]=>
+  NULL
+}
+object(DOMElement)#5 (1) {
+  ["schemaTypeInfo"]=>
+  NULL
+}
+object(DOMElement)#3 (1) {
+  ["schemaTypeInfo"]=>
+  NULL
+}
+string(4) "keep"
+<?xml version="1.0"?>
+<root>
+  <fallback-child1/><fallback-child2/>
+  
+  <keep>still works</keep>
+</root>
diff -urpN php-8.3.8/ext/ffi/tests/gh14626.phpt php-8.3.10/ext/ffi/tests/gh14626.phpt
--- php-8.3.8/ext/ffi/tests/gh14626.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/ffi/tests/gh14626.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,32 @@
+--TEST--
+GH-14626: FFI::free() may crash in is_zend_ptr() when at least one huge block exists and the ptr is non-zend
+--EXTENSIONS--
+ffi
+--SKIPIF--
+<?php
+if (substr(PHP_OS, 0, 3) == 'WIN') die("skip no malloc() on windows");
+?>
+--INI--
+ffi.enable=1
+--FILE--
+<?php
+
+// Ensure there is at least one huge_block
+$str = str_repeat('a', 2*1024*1024);
+
+$ffi = FFI::cdef(<<<C
+    void *malloc(size_t size);
+C);
+
+$ptr = $ffi->malloc(10);
+$addr = $ffi->cast("uintptr_t", $ffi->cast("char*", $ptr))->cdata;
+
+$ptr = FFI::cdef()->cast("char*", $addr);
+
+// Should not crash in is_zend_ptr()
+FFI::free($ptr);
+
+?>
+==DONE==
+--EXPECT--
+==DONE==
diff -urpN php-8.3.8/ext/fileinfo/libmagic/LICENSE php-8.3.10/ext/fileinfo/libmagic/LICENSE
--- php-8.3.8/ext/fileinfo/libmagic/LICENSE	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/fileinfo/libmagic/LICENSE	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,29 @@
+$File: COPYING,v 1.2 2018/09/09 20:33:28 christos Exp $
+Copyright (c) Ian F. Darwin 1986, 1987, 1989, 1990, 1991, 1992, 1994, 1995.
+Software written by Ian F. Darwin and others;
+maintained 1994- Christos Zoulas.
+
+This software is not subject to any export provision of the United States
+Department of Commerce, and may be exported to any country or planet.
+
+Redistribution and use in source and binary forms, with or without
+modification, are permitted provided that the following conditions
+are met:
+1. Redistributions of source code must retain the above copyright
+   notice immediately at the beginning of the file, without modification,
+   this list of conditions, and the following disclaimer.
+2. Redistributions in binary form must reproduce the above copyright
+   notice, this list of conditions and the following disclaimer in the
+   documentation and/or other materials provided with the distribution.
+
+THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
+ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
+IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
+ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR
+ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
+DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
+OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
+HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
+LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
+OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
+SUCH DAMAGE.
diff -urpN php-8.3.8/ext/gd/gd.c php-8.3.10/ext/gd/gd.c
--- php-8.3.8/ext/gd/gd.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/gd/gd.c	2024-07-30 20:44:37.000000000 +0700
@@ -2212,9 +2212,9 @@ PHP_FUNCTION(imagecolorset)
 
 	im = php_gd_libgdimageptr_from_zval_p(IM);
 
-	CHECK_RGBA_RANGE(red, Red, 2);
-	CHECK_RGBA_RANGE(green, Green, 3);
-	CHECK_RGBA_RANGE(blue, Blue, 4);
+	CHECK_RGBA_RANGE(red, Red, 3);
+	CHECK_RGBA_RANGE(green, Green, 4);
+	CHECK_RGBA_RANGE(blue, Blue, 5);
 
 	col = color;
 
diff -urpN php-8.3.8/ext/gd/libgd/gd_webp.c php-8.3.10/ext/gd/libgd/gd_webp.c
--- php-8.3.8/ext/gd/libgd/gd_webp.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/gd/libgd/gd_webp.c	2024-07-30 20:44:37.000000000 +0700
@@ -3,6 +3,7 @@
 #include <string.h>
 #include <stdlib.h>
 #include "gd.h"
+#include "gd_errors.h"
 #include "gdhelpers.h"
 
 #ifdef HAVE_LIBWEBP
@@ -56,7 +57,7 @@ gdImagePtr gdImageCreateFromWebpCtx (gdI
 			if (filedata) {
 				gdFree(filedata);
 			}
-			zend_error(E_ERROR, "WebP decode: realloc failed");
+			gd_error("WebP decode: realloc failed");
 			return NULL;
 		}
 
@@ -67,7 +68,7 @@ gdImagePtr gdImageCreateFromWebpCtx (gdI
 	} while (n>0 && n!=EOF);
 
 	if (WebPGetInfo(filedata,size, &width, &height) == 0) {
-		zend_error(E_ERROR, "gd-webp cannot get webp info");
+		gd_error("gd-webp cannot get webp info");
 		gdFree(filedata);
 		return NULL;
 	}
@@ -79,7 +80,7 @@ gdImagePtr gdImageCreateFromWebpCtx (gdI
 	}
 	argb = WebPDecodeARGB(filedata, size, &width, &height);
 	if (!argb) {
-		zend_error(E_ERROR, "gd-webp cannot allocate temporary buffer");
+		gd_error("gd-webp cannot allocate temporary buffer");
 		gdFree(filedata);
 		gdImageDestroy(im);
 		return NULL;
@@ -113,7 +114,7 @@ void gdImageWebpCtx (gdImagePtr im, gdIO
 	}
 
 	if (!gdImageTrueColor(im)) {
-		zend_error(E_ERROR, "Palette image not supported by webp");
+		gd_error("Palette image not supported by webp");
 		return;
 	}
 
@@ -159,7 +160,7 @@ void gdImageWebpCtx (gdImagePtr im, gdIO
 	}
 
 	if (out_size == 0) {
-		zend_error(E_ERROR, "gd-webp encoding failed");
+		gd_error("gd-webp encoding failed");
 		goto freeargb;
 	}
 	gdPutBuf(out, out_size, outfile);
diff -urpN php-8.3.8/ext/gd/tests/gh10614.phpt php-8.3.10/ext/gd/tests/gh10614.phpt
--- php-8.3.8/ext/gd/tests/gh10614.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/gd/tests/gh10614.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -5,6 +5,9 @@ gd
 --SKIPIF--
 <?php
 if (!GD_BUNDLED && version_compare(GD_VERSION, '2.3.4', '>=')) die("skip test requires GD 2.3.4 or older");
+if (!(imagetypes() & IMG_PNG)) {
+    die("skip No PNG support");
+}
 ?>
 --FILE--
 <?php
diff -urpN php-8.3.8/ext/gd/tests/gh13082.phpt php-8.3.10/ext/gd/tests/gh13082.phpt
--- php-8.3.8/ext/gd/tests/gh13082.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/gd/tests/gh13082.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -3,7 +3,7 @@ GH-13082 - imagefontwidth/height unexpec
 --EXTENSIONS--
 gd
 --SKIPIF--
-<?php if (getenv('TRAVIS')) die('skip Currently fails on Travis'); ?>
+<?php if (pack('i', 0x01020304) !== "\x04\x03\x02\x01") die('skip unsupported platform'); ?>
 --FILE--
 <?php
     $font = imageloadfont(__DIR__ . "/gh13082.gdf");
diff -urpN php-8.3.8/ext/gd/tests/gh13774.phpt php-8.3.10/ext/gd/tests/gh13774.phpt
--- php-8.3.8/ext/gd/tests/gh13774.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/gd/tests/gh13774.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,25 @@
+--TEST--
+GH-13774 (Restore Warning instead of Fatal Error in gd_webp.c)
+--EXTENSIONS--
+gd
+--SKIPIF--
+<?php
+$support = gd_info();
+if (!isset($support['WebP Support']) || $support['WebP Support'] === false) {
+    print 'skip webp support not available';
+}
+?>
+--FILE--
+<?php
+$empty_webp = __DIR__ . "/gh13774.webp";
+file_put_contents($empty_webp, "");
+$im = imagecreatefromwebp($empty_webp);
+var_dump($im);
+?>
+--CLEAN--
+<?php unlink(__DIR__ . "/gh13774.webp")?>
+--EXPECTF--
+Warning: imagecreatefromwebp(): gd-webp cannot get webp info in %s on line %d
+
+Warning: imagecreatefromwebp(): "%s" is not a valid WEBP file in %s on line %d
+bool(false)
diff -urpN php-8.3.8/ext/gd/tests/imagecolorset_error1.phpt php-8.3.10/ext/gd/tests/imagecolorset_error1.phpt
--- php-8.3.8/ext/gd/tests/imagecolorset_error1.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/gd/tests/imagecolorset_error1.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,26 @@
+--TEST--
+imagecolorset() parameters errors
+--EXTENSIONS--
+gd
+--FILE--
+<?php
+
+require __DIR__ . '/func.inc';
+
+$im = imagecreate(5, 5);
+
+$c = imagecolorallocatealpha($im, 3, 4, 5, 6);
+
+trycatch_dump(
+    fn() => imagecolorset($im, $c, -3, 4, 5, 6),
+    fn() => imagecolorset($im, $c, 3, -4, 5, 6),
+    fn() => imagecolorset($im, $c, 3, 4, -5, 6),
+    fn() => imagecolorset($im, $c, 3, 4, 5, -6),
+);
+
+?>
+--EXPECT--
+!! [ValueError] imagecolorset(): Argument #3 ($red) must be between 0 and 255 (inclusive)
+!! [ValueError] imagecolorset(): Argument #4 ($green) must be between 0 and 255 (inclusive)
+!! [ValueError] imagecolorset(): Argument #5 ($blue) must be between 0 and 255 (inclusive)
+NULL
diff -urpN php-8.3.8/ext/intl/spoofchecker/spoofchecker_main.c php-8.3.10/ext/intl/spoofchecker/spoofchecker_main.c
--- php-8.3.8/ext/intl/spoofchecker/spoofchecker_main.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/intl/spoofchecker/spoofchecker_main.c	2024-07-30 20:44:37.000000000 +0700
@@ -53,9 +53,7 @@ PHP_METHOD(Spoofchecker, isSuspicious)
 	}
 
 	if (error_code) {
-		zval_ptr_dtor(error_code);
-		ZVAL_LONG(Z_REFVAL_P(error_code), ret);
-		Z_TRY_ADDREF_P(error_code);
+		ZEND_TRY_ASSIGN_REF_LONG(error_code, ret);
 	}
 	RETVAL_BOOL(ret != 0);
 }
@@ -87,9 +85,7 @@ PHP_METHOD(Spoofchecker, areConfusable)
 	}
 
 	if (error_code) {
-		zval_ptr_dtor(error_code);
-		ZVAL_LONG(Z_REFVAL_P(error_code), ret);
-		Z_TRY_ADDREF_P(error_code);
+		ZEND_TRY_ASSIGN_REF_LONG(error_code, ret);
 	}
 	RETVAL_BOOL(ret != 0);
 }
diff -urpN php-8.3.8/ext/intl/tests/spoofchecker_self_references.phpt php-8.3.10/ext/intl/tests/spoofchecker_self_references.phpt
--- php-8.3.8/ext/intl/tests/spoofchecker_self_references.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/intl/tests/spoofchecker_self_references.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,18 @@
+--TEST--
+SpoofChecker with self references
+--EXTENSIONS--
+intl
+--FILE--
+<?php
+
+$checker = new Spoofchecker();
+$checker->isSuspicious("", $checker);
+
+$checker = new Spoofchecker();
+$checker->areConfusable("", "", $checker);
+
+echo "Done\n";
+
+?>
+--EXPECT--
+Done
diff -urpN php-8.3.8/ext/intl/tests/spoofchecker_typed_references.phpt php-8.3.10/ext/intl/tests/spoofchecker_typed_references.phpt
--- php-8.3.8/ext/intl/tests/spoofchecker_typed_references.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/intl/tests/spoofchecker_typed_references.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,35 @@
+--TEST--
+SpoofChecker with typed references
+--EXTENSIONS--
+intl
+--FILE--
+<?php
+
+class Test {
+    public string $x;
+}
+
+$test = new Test;
+$test->x = "";
+
+$checker = new Spoofchecker();
+$checker->isSuspicious("", $test->x);
+var_dump($test);
+
+$test = new Test;
+$test->x = "";
+
+$checker = new Spoofchecker();
+$checker->areConfusable("", "", $test->x);
+var_dump($test);
+
+?>
+--EXPECT--
+object(Test)#1 (1) {
+  ["x"]=>
+  string(1) "0"
+}
+object(Test)#3 (1) {
+  ["x"]=>
+  string(1) "1"
+}
diff -urpN php-8.3.8/ext/libxml/libxml.c php-8.3.10/ext/libxml/libxml.c
--- php-8.3.8/ext/libxml/libxml.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/libxml/libxml.c	2024-07-30 20:44:37.000000000 +0700
@@ -580,8 +580,10 @@ php_libxml_input_buffer_create_filename(
 static xmlOutputBufferPtr
 php_libxml_output_buffer_create_filename(const char *URI,
                               xmlCharEncodingHandlerPtr encoder,
-                              int compression ATTRIBUTE_UNUSED)
+                              int compression)
 {
+	ZEND_IGNORE_VALUE(compression);
+
 	xmlOutputBufferPtr ret;
 	xmlURIPtr puri;
 	void *context = NULL;
diff -urpN php-8.3.8/ext/libxml/php_libxml.h php-8.3.10/ext/libxml/php_libxml.h
--- php-8.3.8/ext/libxml/php_libxml.h	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/libxml/php_libxml.h	2024-07-30 20:44:37.000000000 +0700
@@ -197,6 +197,7 @@ ZEND_TSRMLS_CACHE_EXTERN()
  * Generally faster because no locking is involved, and this has the advantage that it sets the options to a known good value. */
 static zend_always_inline void php_libxml_sanitize_parse_ctxt_options(xmlParserCtxtPtr ctxt)
 {
+	PHP_LIBXML_IGNORE_DEPRECATIONS_START
 	ctxt->loadsubset = 0;
 	ctxt->validate = 0;
 	ctxt->pedantic = 0;
@@ -204,6 +205,7 @@ static zend_always_inline void php_libxm
 	ctxt->linenumbers = 0;
 	ctxt->keepBlanks = 1;
 	ctxt->options = 0;
+	PHP_LIBXML_IGNORE_DEPRECATIONS_END
 }
 
 #else /* HAVE_LIBXML */
diff -urpN php-8.3.8/ext/libxml/php_libxml2.def php-8.3.10/ext/libxml/php_libxml2.def
--- php-8.3.8/ext/libxml/php_libxml2.def	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/libxml/php_libxml2.def	2024-07-30 20:44:37.000000000 +0700
@@ -345,7 +345,6 @@ xmlElemDump
 xmlEncodeEntities
 xmlEncodeEntitiesReentrant
 xmlEncodeSpecialChars
-xmlErrMemory
 xmlFileClose
 xmlFileMatch
 xmlFileOpen
diff -urpN php-8.3.8/ext/mysqlnd/mysqlnd_vio.c php-8.3.10/ext/mysqlnd/mysqlnd_vio.c
--- php-8.3.8/ext/mysqlnd/mysqlnd_vio.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/mysqlnd/mysqlnd_vio.c	2024-07-30 20:44:37.000000000 +0700
@@ -112,6 +112,20 @@ MYSQLND_METHOD(mysqlnd_vio, network_writ
 }
 /* }}} */
 
+static void mysqlnd_fixup_regular_list(php_stream *net_stream)
+{
+	/*
+	  Streams are not meant for C extensions! Thus we need a hack. Every connected stream will
+	  be registered as resource (in EG(regular_list). So far, so good. However, it won't be
+	  unregistered until the script ends. So, we need to take care of that.
+	*/
+	dtor_func_t origin_dtor = EG(regular_list).pDestructor;
+	EG(regular_list).pDestructor = NULL;
+	zend_hash_index_del(&EG(regular_list), net_stream->res->handle);
+	EG(regular_list).pDestructor = origin_dtor;
+	efree(net_stream->res);
+	net_stream->res = NULL;
+}
 
 /* {{{ mysqlnd_vio::open_pipe */
 static php_stream *
@@ -119,7 +133,6 @@ MYSQLND_METHOD(mysqlnd_vio, open_pipe)(M
 									   MYSQLND_STATS * const conn_stats, MYSQLND_ERROR_INFO * const error_info)
 {
 	unsigned int streams_options = 0;
-	dtor_func_t origin_dtor;
 	php_stream * net_stream = NULL;
 
 	DBG_ENTER("mysqlnd_vio::open_pipe");
@@ -132,16 +145,34 @@ MYSQLND_METHOD(mysqlnd_vio, open_pipe)(M
 		SET_CLIENT_ERROR(error_info, CR_CONNECTION_ERROR, UNKNOWN_SQLSTATE, "Unknown error while connecting");
 		DBG_RETURN(NULL);
 	}
-	/*
-	  Streams are not meant for C extensions! Thus we need a hack. Every connected stream will
-	  be registered as resource (in EG(regular_list). So far, so good. However, it won't be
-	  unregistered until the script ends. So, we need to take care of that.
-	*/
-	origin_dtor = EG(regular_list).pDestructor;
-	EG(regular_list).pDestructor = NULL;
-	zend_hash_index_del(&EG(regular_list), net_stream->res->handle); /* ToDO: should it be res->handle, do streams register with addref ?*/
-	EG(regular_list).pDestructor = origin_dtor;
-	net_stream->res = NULL;
+
+	if (persistent) {
+		/* This is a similar hack as for mysqlnd_vio::open_tcp_or_unix.
+		 * The main difference here is that we have no access to the hashed key.
+		 * We can however perform a loop over the persistent resource list to find
+		 * which one corresponds to our newly allocated stream.
+		 * This loop is pretty cheap because it will normally either be the last entry or second to last entry
+		 * in the list, depending on whether the socket connection itself is persistent or not.
+		 * That's why we use a reverse loop. */
+		Bucket *bucket;
+		/* Use a bucket loop to make deletion cheap. */
+		ZEND_HASH_MAP_REVERSE_FOREACH_BUCKET(&EG(persistent_list), bucket) {
+			zend_resource *current_res = Z_RES(bucket->val);
+			if (current_res->ptr == net_stream) {
+				dtor_func_t origin_dtor = EG(persistent_list).pDestructor;
+				EG(persistent_list).pDestructor = NULL;
+				zend_hash_del_bucket(&EG(persistent_list), bucket);
+				EG(persistent_list).pDestructor = origin_dtor;
+				pefree(current_res, 1);
+				break;
+			}
+		} ZEND_HASH_FOREACH_END();
+#if ZEND_DEBUG
+		php_stream_auto_cleanup(net_stream);
+#endif
+	}
+
+	mysqlnd_fixup_regular_list(net_stream);
 
 	DBG_RETURN(net_stream);
 }
@@ -205,6 +236,7 @@ MYSQLND_METHOD(mysqlnd_vio, open_tcp_or_
 		zend_resource *le;
 
 		if ((le = zend_hash_str_find_ptr(&EG(persistent_list), hashed_details, hashed_details_len))) {
+			ZEND_ASSERT(le->ptr == net_stream);
 			origin_dtor = EG(persistent_list).pDestructor;
 			/*
 			  in_free will let streams code skip destructing - big HACK,
@@ -218,22 +250,12 @@ MYSQLND_METHOD(mysqlnd_vio, open_tcp_or_
 		}
 #if ZEND_DEBUG
 		/* Shut-up the streams, they don't know what they are doing */
-		net_stream->__exposed = 1;
+		php_stream_auto_cleanup(net_stream);
 #endif
 		mnd_sprintf_free(hashed_details);
 	}
 
-	/*
-	  Streams are not meant for C extensions! Thus we need a hack. Every connected stream will
-	  be registered as resource (in EG(regular_list). So far, so good. However, it won't be
-	  unregistered until the script ends. So, we need to take care of that.
-	*/
-	origin_dtor = EG(regular_list).pDestructor;
-	EG(regular_list).pDestructor = NULL;
-	zend_hash_index_del(&EG(regular_list), net_stream->res->handle); /* ToDO: should it be res->handle, do streams register with addref ?*/
-	efree(net_stream->res);
-	net_stream->res = NULL;
-	EG(regular_list).pDestructor = origin_dtor;
+	mysqlnd_fixup_regular_list(net_stream);
 	DBG_RETURN(net_stream);
 }
 /* }}} */
diff -urpN php-8.3.8/ext/opcache/jit/zend_jit.c php-8.3.10/ext/opcache/jit/zend_jit.c
--- php-8.3.8/ext/opcache/jit/zend_jit.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/opcache/jit/zend_jit.c	2024-07-30 20:44:37.000000000 +0700
@@ -4803,12 +4803,12 @@ ZEND_EXT_API int zend_jit_config(zend_st
 		return FAILURE;
 	}
 
-	if (ZSTR_LEN(jit) == 0
-	 || zend_string_equals_literal_ci(jit, "disable")) {
+	if (zend_string_equals_literal_ci(jit, "disable")) {
 		JIT_G(enabled) = 0;
 		JIT_G(on) = 0;
 		return SUCCESS;
-	} else if (zend_string_equals_literal_ci(jit, "0")
+	} else if (ZSTR_LEN(jit) == 0
+			|| zend_string_equals_literal_ci(jit, "0")
 			|| zend_string_equals_literal_ci(jit, "off")
 			|| zend_string_equals_literal_ci(jit, "no")
 			|| zend_string_equals_literal_ci(jit, "false")) {
@@ -4895,7 +4895,9 @@ ZEND_EXT_API int zend_jit_check_support(
 	}
 
 	if (zend_execute_ex != execute_ex) {
-		if (strcmp(sapi_module.name, "phpdbg") != 0) {
+		if (zend_dtrace_enabled) {
+			zend_error(E_WARNING, "JIT is incompatible with DTrace. JIT disabled.");
+		} else if (strcmp(sapi_module.name, "phpdbg") != 0) {
 			zend_error(E_WARNING, "JIT is incompatible with third party extensions that override zend_execute_ex(). JIT disabled.");
 		}
 		JIT_G(enabled) = 0;
diff -urpN php-8.3.8/ext/opcache/jit/zend_jit_arm64.dasc php-8.3.10/ext/opcache/jit/zend_jit_arm64.dasc
--- php-8.3.8/ext/opcache/jit/zend_jit_arm64.dasc	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/opcache/jit/zend_jit_arm64.dasc	2024-07-30 20:44:37.000000000 +0700
@@ -110,6 +110,8 @@ static void* dasm_labels[zend_lb_MAX];
 
 #if ZTS
 static size_t tsrm_ls_cache_tcb_offset = 0;
+static size_t tsrm_tls_index = 0;
+static size_t tsrm_tls_offset = 0;
 # ifdef __APPLE__
 struct TLVDescriptor {
 	void*       (*thunk)(struct TLVDescriptor*);
@@ -117,6 +119,13 @@ struct TLVDescriptor {
 	uint64_t    offset;
 };
 typedef struct TLVDescriptor TLVDescriptor;
+# elif defined(__FreeBSD__)
+/* https://github.com/freebsd/freebsd-src/blob/c52ca7dd09066648b1cc40f758289404d68ab886/libexec/rtld-elf/aarch64/reloc.c#L180-L184 */
+typedef struct TLSDescriptor {
+	void*   thunk;
+	int     index;
+	size_t  offset;
+} TLSDescriptor;
 # endif
 #endif
 
@@ -494,8 +503,14 @@ static bool logical_immediate_p(uint64_t
 |	MEM_ACCESS_64_WITH_UOFFSET_64 ldr, reg, TMP3, (((TLVDescriptor*)tsrm_ls_cache_tcb_offset)->offset), TMP1
 ||#else
 |	.long 0xd53bd051 // TODO: hard-coded: mrs TMP3, tpidr_el0
-||	ZEND_ASSERT(tsrm_ls_cache_tcb_offset <= LDR_STR_PIMM64);
-|	ldr reg, [TMP3, #tsrm_ls_cache_tcb_offset]
+||	if (tsrm_ls_cache_tcb_offset == 0) {
+|		ldr TMP3, [TMP3, #0]
+|		MEM_ACCESS_64_WITH_UOFFSET_64 ldr, TMP3, TMP3, tsrm_tls_index, TMP1
+|		MEM_ACCESS_64_WITH_UOFFSET_64 ldr, reg, TMP3, tsrm_tls_offset, TMP1
+||	} else {
+||		ZEND_ASSERT(tsrm_ls_cache_tcb_offset <= LDR_STR_PIMM64);
+|		ldr reg, [TMP3, #tsrm_ls_cache_tcb_offset]
+||	}
 ||#endif
 |.endmacro
 
@@ -2754,7 +2769,27 @@ static int zend_jit_setup(void)
 
 #if ZTS
 	tsrm_ls_cache_tcb_offset = tsrm_get_ls_cache_tcb_offset();
+# if defined(__FreeBSD__)
+	if (tsrm_ls_cache_tcb_offset == 0) {
+		TLSDescriptor **where;
+
+		__asm__(
+			"adrp %0, :tlsdesc:_tsrm_ls_cache\n"
+			"add %0, %0, :tlsdesc_lo12:_tsrm_ls_cache\n"
+			: "=r" (where));
+		/* See https://github.com/ARM-software/abi-aa/blob/2a70c42d62e9c3eb5887fa50b71257f20daca6f9/aaelf64/aaelf64.rst
+		 * section "Relocations for thread-local storage".
+		 * The first entry holds a pointer to the variable's TLS descriptor resolver function and the second entry holds
+		 * a platform-specific offset or pointer. */
+		TLSDescriptor *tlsdesc = where[1];
+
+		tsrm_tls_offset = tlsdesc->offset;
+		/* Index is offset by 1 on FreeBSD (https://github.com/freebsd/freebsd-src/blob/22ca6db50f4e6bd75a141f57cf953d8de6531a06/lib/libc/gen/tls.c#L88) */
+		tsrm_tls_index = (tlsdesc->index + 1) * 8;
+	}
+# else
 	ZEND_ASSERT(tsrm_ls_cache_tcb_offset != 0);
+# endif
 #endif
 
     memset(sp_adj, 0, sizeof(sp_adj));
diff -urpN php-8.3.8/ext/opcache/jit/zend_jit_trace.c php-8.3.10/ext/opcache/jit/zend_jit_trace.c
--- php-8.3.8/ext/opcache/jit/zend_jit_trace.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/opcache/jit/zend_jit_trace.c	2024-07-30 20:44:37.000000000 +0700
@@ -2209,7 +2209,7 @@ propagate_arg:
 					assert(0);
 				}
 				if (opline->opcode == ZEND_ASSIGN_DIM_OP
-				 && ssa_ops[idx].op1_def > 0
+				 && ssa_ops[idx].op1_def >= 0
 				 && op1_type == IS_ARRAY
 				 && (orig_op1_type & IS_TRACE_PACKED)
 				 && val_type != IS_UNKNOWN
@@ -5037,7 +5037,7 @@ static const void *zend_jit_trace(zend_j
 								zend_may_throw_ex(opline, ssa_op, op_array, ssa, op1_info, op2_info))) {
 							goto jit_failure;
 						}
-						if (ssa_op->op2_def > 0
+						if (ssa_op->op2_def >= 0
 						 && Z_MODE(op2_addr) == IS_REG
 						 && ssa->vars[ssa_op->op2_def].no_val) {
 							uint8_t type = (op2_info & MAY_BE_LONG) ? IS_LONG : IS_DOUBLE;
@@ -5087,7 +5087,7 @@ static const void *zend_jit_trace(zend_j
 								res_use_info, res_info, res_addr)) {
 							goto jit_failure;
 						}
-						if (ssa_op->op1_def > 0
+						if (ssa_op->op1_def >= 0
 						 && Z_MODE(op1_addr) == IS_REG
 						 && ssa->vars[ssa_op->op1_def].no_val) {
 							uint8_t type = (op1_info & MAY_BE_LONG) ? IS_LONG : IS_DOUBLE;
@@ -5184,7 +5184,7 @@ static const void *zend_jit_trace(zend_j
 								op1_info, op1_addr, op1_def_addr)) {
 							goto jit_failure;
 						}
-						if (ssa_op->op1_def > 0
+						if (ssa_op->op1_def >= 0
 						 && Z_MODE(op1_addr) == IS_REG
 						 && ssa->vars[ssa_op->op1_def].no_val) {
 							uint8_t type = (op1_info & MAY_BE_LONG) ? IS_LONG : IS_DOUBLE;
@@ -5734,7 +5734,7 @@ static const void *zend_jit_trace(zend_j
 								op1_info, op1_addr, op2_info, RES_REG_ADDR(), val_type)) {
 							goto jit_failure;
 						}
-						if (ssa_op->result_def > 0
+						if (ssa_op->result_def >= 0
 						 && (opline->opcode == ZEND_FETCH_DIM_W || opline->opcode == ZEND_FETCH_LIST_W)
 						 && !(op1_info & (MAY_BE_FALSE|MAY_BE_TRUE|MAY_BE_LONG|MAY_BE_DOUBLE|MAY_BE_STRING|MAY_BE_OBJECT|MAY_BE_RESOURCE|MAY_BE_REF))
 						 && !(op2_info & (MAY_BE_UNDEF|MAY_BE_RESOURCE|MAY_BE_ARRAY|MAY_BE_OBJECT))) {
@@ -8329,7 +8329,20 @@ int ZEND_FASTCALL zend_jit_trace_exit(ui
 		if (!(ZEND_OP_TRACE_INFO(t->opline, jit_extension->offset)->trace_flags & (ZEND_JIT_TRACE_JITED|ZEND_JIT_TRACE_BLACKLISTED))) {
 			/* skip: not JIT-ed nor blacklisted */
 		} else if (ZEND_JIT_TRACE_NUM >= JIT_G(max_root_traces)) {
-			/* skip: too many root traces */
+			/* too many root traces, blacklist the root trace */
+			if (!(ZEND_OP_TRACE_INFO(t->opline, jit_extension->offset)->trace_flags & ZEND_JIT_TRACE_BLACKLISTED)) {
+				SHM_UNPROTECT();
+				zend_jit_unprotect();
+
+				((zend_op*)opline)->handler =
+					ZEND_OP_TRACE_INFO(t->opline, jit_extension->offset)->orig_handler;
+
+				ZEND_OP_TRACE_INFO(t->opline, jit_extension->offset)->trace_flags &= ~ZEND_JIT_TRACE_JITED;
+				ZEND_OP_TRACE_INFO(t->opline, jit_extension->offset)->trace_flags |= ZEND_JIT_TRACE_BLACKLISTED;
+
+				zend_jit_protect();
+				SHM_PROTECT();
+			}
 		} else {
 			SHM_UNPROTECT();
 			zend_jit_unprotect();
diff -urpN php-8.3.8/ext/opcache/jit/zend_jit_x86.dasc php-8.3.10/ext/opcache/jit/zend_jit_x86.dasc
--- php-8.3.8/ext/opcache/jit/zend_jit_x86.dasc	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/opcache/jit/zend_jit_x86.dasc	2024-07-30 20:44:37.000000000 +0700
@@ -2910,6 +2910,15 @@ static int zend_jit_setup(void)
 			: "=a" (ti));
 		tsrm_tls_offset = ti[1];
 		tsrm_tls_index = ti[0] * 8;
+#elif defined(__FreeBSD__)
+		size_t *ti;
+
+		__asm__(
+			"leaq _tsrm_ls_cache@tlsgd(%%rip), %0\n"
+			: "=a" (ti));
+		tsrm_tls_offset = ti[1];
+		/* Index is offset by 1 on FreeBSD (https://github.com/freebsd/freebsd-src/blob/bf56e8b9c8639ac4447d223b83cdc128107cc3cd/libexec/rtld-elf/rtld.c#L5260) */
+		tsrm_tls_index = (ti[0] + 1) * 8;
 #else
 		size_t *ti;
 
diff -urpN php-8.3.8/ext/opcache/tests/jit/gh14267_001.phpt php-8.3.10/ext/opcache/tests/jit/gh14267_001.phpt
--- php-8.3.8/ext/opcache/tests/jit/gh14267_001.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/opcache/tests/jit/gh14267_001.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,16 @@
+--TEST--
+GH-14267: JIT cannot be enabled at runtime
+--INI--
+opcache.enable=1
+opcache.enable_cli=1
+opcache.jit=off
+opcache.jit_buffer_size=32M
+--EXTENSIONS--
+opcache
+--FILE--
+<?php
+ini_set('opcache.jit', 'tracing');
+?>
+===DONE===
+--EXPECT--
+===DONE===
diff -urpN php-8.3.8/ext/opcache/tests/jit/gh14267_002.phpt php-8.3.10/ext/opcache/tests/jit/gh14267_002.phpt
--- php-8.3.8/ext/opcache/tests/jit/gh14267_002.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/opcache/tests/jit/gh14267_002.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,19 @@
+--TEST--
+GH-14267: JIT cannot be enabled at runtime
+--INI--
+opcache.enable=1
+opcache.enable_cli=1
+opcache.jit=disable
+opcache.jit_buffer_size=32M
+--EXTENSIONS--
+opcache
+--SKIPIF--
+<?php
+if (ini_get('opcache.jit') === false) die('skip PHP is compiled without JIT');
+?>
+--FILE--
+<?php
+ini_set('opcache.jit', 'tracing');
+?>
+--EXPECTF--
+Warning: Cannot change opcache.jit setting at run-time (JIT is disabled) in %s on line %d
diff -urpN php-8.3.8/ext/openssl/tests/bug74341.phpt php-8.3.10/ext/openssl/tests/bug74341.phpt
--- php-8.3.8/ext/openssl/tests/bug74341.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/openssl/tests/bug74341.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -2,6 +2,10 @@
 Bug #74341 (openssl_x509_parse fails to parse ASN.1 UTCTime without seconds)
 --EXTENSIONS--
 openssl
+--SKIPIF--
+<?php
+if (OPENSSL_VERSION_NUMBER >= 0x30300000) die('skip For OpenSSL < 3.3');
+?>
 --FILE--
 <?php
 
diff -urpN php-8.3.8/ext/openssl/tests/gh13860.phpt php-8.3.10/ext/openssl/tests/gh13860.phpt
--- php-8.3.8/ext/openssl/tests/gh13860.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/openssl/tests/gh13860.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -18,8 +18,8 @@ $serverCode = <<<'CODE'
 
     $client = @stream_socket_accept($server);
     if ($client) {
-        fwrite($client, "xx");
         phpt_wait();
+        fwrite($client, "xx");
         fclose($client);
         phpt_notify();
     }
diff -urpN php-8.3.8/ext/pdo/pdo_stmt.c php-8.3.10/ext/pdo/pdo_stmt.c
--- php-8.3.8/ext/pdo/pdo_stmt.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/pdo/pdo_stmt.c	2024-07-30 20:44:37.000000000 +0700
@@ -2450,6 +2450,16 @@ static zend_function *row_get_ctor(zend_
 	return NULL;
 }
 
+static zval *pdo_row_get_property_ptr_ptr(zend_object *object, zend_string *name, int type, void **cache_slot)
+{
+	ZEND_IGNORE_VALUE(object);
+	ZEND_IGNORE_VALUE(name);
+	ZEND_IGNORE_VALUE(type);
+	ZEND_IGNORE_VALUE(cache_slot);
+
+	return NULL;
+}
+
 void pdo_row_free_storage(zend_object *std)
 {
 	pdo_row_t *row = (pdo_row_t *)std;
@@ -2490,7 +2500,7 @@ void pdo_stmt_init(void)
 	memcpy(&pdo_row_object_handlers, &std_object_handlers, sizeof(zend_object_handlers));
 	pdo_row_object_handlers.free_obj = pdo_row_free_storage;
 	pdo_row_object_handlers.clone_obj = NULL;
-	pdo_row_object_handlers.get_property_ptr_ptr = NULL;
+	pdo_row_object_handlers.get_property_ptr_ptr = pdo_row_get_property_ptr_ptr;
 	pdo_row_object_handlers.read_property = row_prop_read;
 	pdo_row_object_handlers.write_property = row_prop_write;
 	pdo_row_object_handlers.has_property = row_prop_exists;
diff -urpN php-8.3.8/ext/pdo_odbc/odbc_stmt.c php-8.3.10/ext/pdo_odbc/odbc_stmt.c
--- php-8.3.8/ext/pdo_odbc/odbc_stmt.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/pdo_odbc/odbc_stmt.c	2024-07-30 20:44:37.000000000 +0700
@@ -32,7 +32,7 @@ enum pdo_odbc_conv_result {
 	PDO_ODBC_CONV_FAIL
 };
 
-static int pdo_odbc_sqltype_is_unicode(pdo_odbc_stmt *S, SWORD sqltype)
+static int pdo_odbc_sqltype_is_unicode(pdo_odbc_stmt *S, SQLSMALLINT sqltype)
 {
 	if (!S->assume_utf8) return 0;
 	switch (sqltype) {
@@ -287,7 +287,7 @@ static int odbc_stmt_param_hook(pdo_stmt
 {
 	pdo_odbc_stmt *S = (pdo_odbc_stmt*)stmt->driver_data;
 	RETCODE rc;
-	SWORD sqltype = 0, ctype = 0, scale = 0, nullable = 0;
+	SQLSMALLINT sqltype = 0, ctype = 0, scale = 0, nullable = 0;
 	SQLULEN precision = 0;
 	pdo_odbc_param *P;
 	zval *parameter;
@@ -563,7 +563,7 @@ static int odbc_stmt_describe(pdo_stmt_t
 	pdo_odbc_stmt *S = (pdo_odbc_stmt*)stmt->driver_data;
 	struct pdo_column_data *col = &stmt->columns[colno];
 	RETCODE rc;
-	SWORD	colnamelen;
+	SQLSMALLINT colnamelen;
 	SQLULEN	colsize;
 	SQLLEN displaysize = 0;
 
diff -urpN php-8.3.8/ext/pdo_odbc/php_pdo_odbc_int.h php-8.3.10/ext/pdo_odbc/php_pdo_odbc_int.h
--- php-8.3.8/ext/pdo_odbc/php_pdo_odbc_int.h	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/pdo_odbc/php_pdo_odbc_int.h	2024-07-30 20:44:37.000000000 +0700
@@ -116,7 +116,7 @@
 typedef struct {
 	char last_state[6];
 	char last_err_msg[SQL_MAX_MESSAGE_LENGTH];
-	SDWORD last_error;
+	SQLINTEGER last_error;
 	const char *file, *what;
 	int line;
 } pdo_odbc_errinfo;
@@ -133,7 +133,7 @@ typedef struct {
 	char *data;
 	zend_ulong datalen;
 	SQLLEN fetched_len;
-	SWORD	coltype;
+	SQLSMALLINT coltype;
 	char colname[128];
 	unsigned is_long;
 	unsigned is_unicode:1;
diff -urpN php-8.3.8/ext/pdo_sqlite/tests/gh14712.phpt php-8.3.10/ext/pdo_sqlite/tests/gh14712.phpt
--- php-8.3.8/ext/pdo_sqlite/tests/gh14712.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/pdo_sqlite/tests/gh14712.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,18 @@
+--TEST--
+GH-14712: segfault on PDORow
+--EXTENSIONS--
+pdo_sqlite
+--CREDITS--
+YuanchengJiang
+--FILE--
+<?php
+$db = new PDO('sqlite::memory:');
+
+try {
+	$db->query("select 1 as queryStringxx")->fetch(PDO::FETCH_LAZY)->documentElement->firstChild->nextElementSibling->textContent = "Ã©";
+} catch (Error $e) {
+	echo $e->getMessage();
+}
+?>
+--EXPECT--
+Attempt to modify property "firstChild" on null
Binary files php-8.3.8/ext/phar/tests/gh14603.phpt and php-8.3.10/ext/phar/tests/gh14603.phpt differ
diff -urpN php-8.3.8/ext/phar/zip.c php-8.3.10/ext/phar/zip.c
--- php-8.3.8/ext/phar/zip.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/phar/zip.c	2024-07-30 20:44:37.000000000 +0700
@@ -770,7 +770,7 @@ foundit:
 				}
 			}
 
-			zend_hash_str_add_ptr(&(PHAR_G(phar_alias_map)), actual_alias, mydata->alias_len, mydata);
+			zend_hash_str_add_ptr(&(PHAR_G(phar_alias_map)), alias, alias_len, mydata);
 			mydata->alias = pestrndup(alias, alias_len, mydata->is_persistent);
 			mydata->alias_len = alias_len;
 		} else {
diff -urpN php-8.3.8/ext/session/tests/gh13856.phpt php-8.3.10/ext/session/tests/gh13856.phpt
--- php-8.3.8/ext/session/tests/gh13856.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/session/tests/gh13856.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -6,6 +6,7 @@ session
 session.save_handler=files
 open_basedir=.
 error_reporting=E_ALL
+session.save_path=
 --FILE--
 <?php
 session_set_save_handler(new \SessionHandler(), true);
diff -urpN php-8.3.8/ext/shmop/tests/gh14537.phpt php-8.3.10/ext/shmop/tests/gh14537.phpt
--- php-8.3.8/ext/shmop/tests/gh14537.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/shmop/tests/gh14537.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,27 @@
+--TEST--
+GH-14537: shmop Windows 11 crashes the process
+--EXTENSIONS--
+shmop
+--SKIPIF--
+<?php
+if (PHP_OS_FAMILY !== 'Windows') die('skip only for Windows');
+?>
+--FILE--
+<?php
+$str = 'Hello World';
+
+$shm_key = ftok(__FILE__, 'p');
+
+$shm_id1 = shmop_open($shm_key, 'c', 0644, strlen($str));
+shmop_delete($shm_id1);
+var_dump($shm_id1);
+
+$shm_id2 = shmop_open($shm_key, 'c', 0644, strlen($str) + 10);
+var_dump($shm_id2);
+?>
+--EXPECTF--
+object(Shmop)#1 (0) {
+}
+
+Warning: shmop_open(): Unable to attach or create shared memory segment "No error" in %s on line %d
+bool(false)
diff -urpN php-8.3.8/ext/simplexml/simplexml.c php-8.3.10/ext/simplexml/simplexml.c
--- php-8.3.8/ext/simplexml/simplexml.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/simplexml/simplexml.c	2024-07-30 20:44:37.000000000 +0700
@@ -1493,6 +1493,35 @@ static void sxe_add_namespaces(php_sxe_o
 	}
 } /* }}} */
 
+static inline void sxe_object_free_iterxpath(php_sxe_object *sxe)
+{
+	if (!Z_ISUNDEF(sxe->iter.data)) {
+		zval_ptr_dtor(&sxe->iter.data);
+		ZVAL_UNDEF(&sxe->iter.data);
+	}
+
+	if (sxe->iter.name) {
+		efree(sxe->iter.name);
+		sxe->iter.name = NULL;
+	}
+	if (sxe->iter.nsprefix) {
+		efree(sxe->iter.nsprefix);
+		sxe->iter.nsprefix = NULL;
+	}
+	if (!Z_ISUNDEF(sxe->tmp)) {
+		zval_ptr_dtor(&sxe->tmp);
+		ZVAL_UNDEF(&sxe->tmp);
+	}
+
+	php_libxml_node_decrement_resource((php_libxml_node_object *)sxe);
+
+	if (sxe->xpath) {
+		xmlXPathFreeContext(sxe->xpath);
+		sxe->xpath = NULL;
+	}
+}
+
+
 /* {{{ Return all namespaces in use */
 PHP_METHOD(SimpleXMLElement, getNamespaces)
 {
@@ -2149,29 +2178,7 @@ static void sxe_object_free_storage(zend
 
 	zend_object_std_dtor(&sxe->zo);
 
-	if (!Z_ISUNDEF(sxe->iter.data)) {
-		zval_ptr_dtor(&sxe->iter.data);
-		ZVAL_UNDEF(&sxe->iter.data);
-	}
-
-	if (sxe->iter.name) {
-		efree(sxe->iter.name);
-		sxe->iter.name = NULL;
-	}
-	if (sxe->iter.nsprefix) {
-		efree(sxe->iter.nsprefix);
-		sxe->iter.nsprefix = NULL;
-	}
-	if (!Z_ISUNDEF(sxe->tmp)) {
-		zval_ptr_dtor(&sxe->tmp);
-		ZVAL_UNDEF(&sxe->tmp);
-	}
-
-	php_libxml_node_decrement_resource((php_libxml_node_object *)sxe);
-
-	if (sxe->xpath) {
-		xmlXPathFreeContext(sxe->xpath);
-	}
+	sxe_object_free_iterxpath(sxe);
 
 	if (sxe->properties) {
 		zend_hash_destroy(sxe->properties);
@@ -2371,11 +2378,12 @@ PHP_METHOD(SimpleXMLElement, __construct
 	PHP_LIBXML_RESTORE_GLOBALS(read_file_or_memory);
 
 	if (!docp) {
-		((php_libxml_node_object *)sxe)->document = NULL;
 		zend_throw_exception(zend_ce_exception, "String could not be parsed as XML", 0);
 		RETURN_THROWS();
 	}
 
+	sxe_object_free_iterxpath(sxe);
+
 	sxe->iter.nsprefix = ns_len ? (xmlChar*)estrdup(ns) : NULL;
 	sxe->iter.isprefix = isprefix;
 	php_libxml_increment_doc_ref((php_libxml_node_object *)sxe, docp);
diff -urpN php-8.3.8/ext/simplexml/tests/bug79971_1.phpt php-8.3.10/ext/simplexml/tests/bug79971_1.phpt
--- php-8.3.8/ext/simplexml/tests/bug79971_1.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/simplexml/tests/bug79971_1.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -22,7 +22,7 @@ var_dump($sxe->asXML("$uri.out%00foo"));
 --EXPECTF--
 Warning: simplexml_load_file(): URI must not contain percent-encoded NUL bytes in %s on line %d
 
-Warning: simplexml_load_file(): I/O warning : failed to load external entity "%s/bug79971_1.xml%%r00%rfoo" in %s on line %d
+Warning: simplexml_load_file(): I/O warning : failed to load %s
 bool(false)
 
 Warning: SimpleXMLElement::asXML(): URI must not contain percent-encoded NUL bytes in %s on line %d
diff -urpN php-8.3.8/ext/simplexml/tests/gh14638.phpt php-8.3.10/ext/simplexml/tests/gh14638.phpt
--- php-8.3.8/ext/simplexml/tests/gh14638.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/simplexml/tests/gh14638.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,25 @@
+--TEST--
+GH-14638: null pointer dereference on object cast __toString after failed XML parsing
+--EXTENSIONS--
+simplexml
+--CREDITS--
+YuanchengJiang
+--FILE--
+<?php
+$xml = '<?xml version="1.0" encoding="utf-8" ?>
+<test>
+</test>';
+$root = simplexml_load_string($xml);
+try {
+    $root->__construct("malformed");
+} catch (Exception $e) {
+    // Intentionally empty
+}
+echo $root;
+?>
+--EXPECTF--
+Warning: SimpleXMLElement::__construct(): Entity: line 1: parser error : Start tag expected, '<' not found in %s on line %d
+
+Warning: SimpleXMLElement::__construct(): malformed in %s on line %d
+
+Warning: SimpleXMLElement::__construct(): ^ in %s on line %d
diff -urpN php-8.3.8/ext/soap/php_encoding.c php-8.3.10/ext/soap/php_encoding.c
--- php-8.3.8/ext/soap/php_encoding.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/soap/php_encoding.c	2024-07-30 20:44:37.000000000 +0700
@@ -449,11 +449,8 @@ static xmlNodePtr master_to_xml_int(enco
 			zend_string *type_name;
 
 			ZEND_HASH_MAP_FOREACH_STR_KEY_VAL(SOAP_GLOBAL(class_map), type_name, tmp) {
-				ZVAL_DEREF(tmp);
-				if (Z_TYPE_P(tmp) == IS_STRING &&
-				    ZSTR_LEN(ce->name) == Z_STRLEN_P(tmp) &&
-				    zend_binary_strncasecmp(ZSTR_VAL(ce->name), ZSTR_LEN(ce->name), Z_STRVAL_P(tmp), ZSTR_LEN(ce->name), ZSTR_LEN(ce->name)) == 0 &&
-				    type_name) {
+				if (ZSTR_LEN(ce->name) == Z_STRLEN_P(tmp) &&
+				    zend_binary_strncasecmp(ZSTR_VAL(ce->name), ZSTR_LEN(ce->name), Z_STRVAL_P(tmp), ZSTR_LEN(ce->name), ZSTR_LEN(ce->name)) == 0) {
 
 					/* TODO: namespace isn't stored */
 					encodePtr enc = NULL;
@@ -1382,7 +1379,6 @@ static zval *to_zval_object_ex(zval *ret
 		zend_class_entry  *tmp;
 
 		if ((classname = zend_hash_str_find_deref(SOAP_GLOBAL(class_map), type->type_str, strlen(type->type_str))) != NULL &&
-		    Z_TYPE_P(classname) == IS_STRING &&
 		    (tmp = zend_fetch_class(Z_STR_P(classname), ZEND_FETCH_CLASS_AUTO)) != NULL) {
 			ce = tmp;
 		}
@@ -3385,7 +3381,6 @@ xmlNsPtr encode_add_ns(xmlNodePtr node,
 		} else {
 			smart_str prefix = {0};
 			int num = ++SOAP_GLOBAL(cur_uniq_ns);
-			xmlChar *enc_ns;
 
 			while (1) {
 				smart_str_appendl(&prefix, "ns", 2);
@@ -3399,9 +3394,15 @@ xmlNsPtr encode_add_ns(xmlNodePtr node,
 				num = ++SOAP_GLOBAL(cur_uniq_ns);
 			}
 
-			enc_ns = xmlEncodeSpecialChars(node->doc, BAD_CAST(ns));
+			/* Starting with libxml 2.13, we don't have to do this workaround anymore, otherwise we get double-encoded
+			 * entities. See libxml2 commit f506ec66547ef9bac97a2bf306d368ecea8c0c9e. */
+#if LIBXML_VERSION < 21300
+			xmlChar *enc_ns = xmlEncodeSpecialChars(node->doc, BAD_CAST(ns));
 			xmlns = xmlNewNs(node->doc->children, enc_ns, BAD_CAST(prefix.s ? ZSTR_VAL(prefix.s) : ""));
 			xmlFree(enc_ns);
+#else
+			xmlns = xmlNewNs(node->doc->children, BAD_CAST(ns), BAD_CAST(prefix.s ? ZSTR_VAL(prefix.s) : ""));
+#endif
 			smart_str_free(&prefix);
 		}
 	}
@@ -3636,3 +3637,48 @@ void delete_encoder_persistent(zval *zv)
 	assert(t->details.map == NULL);
 	free(t);
 }
+
+/* Normalize leading backslash similarly to how the engine strips it away. */
+static inline zend_string *drop_leading_backslash(zend_string *str) {
+	if (ZSTR_VAL(str)[0] == '\\') {
+		return zend_string_init(ZSTR_VAL(str) + 1, ZSTR_LEN(str) - 1, false);
+	} else {
+		return zend_string_copy(str);
+	}
+}
+
+static HashTable *create_normalized_classmap_copy(HashTable *class_map)
+{
+	HashTable *normalized = zend_new_array(zend_hash_num_elements(class_map));
+
+	zend_string *key;
+	zval *value;
+	ZEND_HASH_FOREACH_STR_KEY_VAL(class_map, key, value) {
+		ZVAL_DEREF(value);
+
+		if (key != NULL && Z_TYPE_P(value) == IS_STRING) {
+			zval zv;
+			ZVAL_STR(&zv, drop_leading_backslash(Z_STR_P(value)));
+			zend_hash_add_new(normalized, key, &zv);
+		}
+	} ZEND_HASH_FOREACH_END();
+
+	return normalized;
+}
+
+void create_normalized_classmap(zval *return_value, zval *class_map)
+{
+	/* Check if we need to make a copy. */
+	zend_string *key;
+	zval *value;
+	ZEND_HASH_FOREACH_STR_KEY_VAL(Z_ARR_P(class_map), key, value) {
+		if (key == NULL || Z_TYPE_P(value) != IS_STRING || ZSTR_VAL(Z_STR_P(value))[0] == '\\') {
+			/* TODO: should probably throw in some of these cases to indicate programmer error,
+			 * e.g. in the case where a non-string (after dereferencing) is provided. */
+			RETURN_ARR(create_normalized_classmap_copy(Z_ARR_P(class_map)));
+		}
+	} ZEND_HASH_FOREACH_END();
+
+	/* We didn't have to make an actual copy, just increment the refcount. */
+	RETURN_COPY(class_map);
+}
diff -urpN php-8.3.8/ext/soap/php_encoding.h php-8.3.10/ext/soap/php_encoding.h
--- php-8.3.8/ext/soap/php_encoding.h	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/soap/php_encoding.h	2024-07-30 20:44:37.000000000 +0700
@@ -214,6 +214,8 @@ encodePtr get_conversion(int encode);
 void delete_encoder(zval *zv);
 void delete_encoder_persistent(zval *zv);
 
+void create_normalized_classmap(zval *return_value, zval *class_map);
+
 extern const encode defaultEncoding[];
 extern int numDefaultEncodings;
 
diff -urpN php-8.3.8/ext/soap/php_http.c php-8.3.10/ext/soap/php_http.c
--- php-8.3.8/ext/soap/php_http.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/soap/php_http.c	2024-07-30 20:44:37.000000000 +0700
@@ -833,6 +833,7 @@ try_again:
 			zval *data;
 			zend_string *key;
 			has_cookies = 1;
+			bool first_cookie = true;
 			smart_str_append_const(&soap_headers, "Cookie: ");
 			ZEND_HASH_MAP_FOREACH_STR_KEY_VAL(Z_ARRVAL_P(cookies), key, data) {
 				if (key && Z_TYPE_P(data) == IS_ARRAY) {
@@ -848,10 +849,13 @@ try_again:
 						   Z_TYPE_P(tmp) != IS_STRING ||
 						   in_domain(ZSTR_VAL(phpurl->host),Z_STRVAL_P(tmp))) &&
 						  (use_ssl || (tmp = zend_hash_index_find(Z_ARRVAL_P(data), 3)) == NULL)) {
+							if (!first_cookie) {
+								smart_str_appends(&soap_headers, "; ");
+							}
+							first_cookie = false;
 							smart_str_append(&soap_headers, key);
 							smart_str_appendc(&soap_headers, '=');
 							smart_str_append(&soap_headers, Z_STR_P(value));
-							smart_str_appendc(&soap_headers, ';');
 						}
 					}
 				}
@@ -1256,11 +1260,13 @@ try_again:
 		zval retval;
 		zval params[1];
 
+		/* Warning: the zlib function names are chosen in an unfortunate manner.
+		 * Check zlib.c to see how a function corresponds with a particular format. */
 		if ((strcmp(content_encoding,"gzip") == 0 ||
 		     strcmp(content_encoding,"x-gzip") == 0) &&
-		     zend_hash_str_exists(EG(function_table), "gzinflate", sizeof("gzinflate")-1)) {
-			ZVAL_STRING(&func, "gzinflate");
-			ZVAL_STRINGL(&params[0], http_body->val+10, http_body->len-10);
+		     zend_hash_str_exists(EG(function_table), "gzdecode", sizeof("gzdecode")-1)) {
+			ZVAL_STRING(&func, "gzdecode");
+			ZVAL_STR_COPY(&params[0], http_body);
 		} else if (strcmp(content_encoding,"deflate") == 0 &&
 		           zend_hash_str_exists(EG(function_table), "gzuncompress", sizeof("gzuncompress")-1)) {
 			ZVAL_STRING(&func, "gzuncompress");
diff -urpN php-8.3.8/ext/soap/php_soap.h php-8.3.10/ext/soap/php_soap.h
--- php-8.3.8/ext/soap/php_soap.h	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/soap/php_soap.h	2024-07-30 20:44:37.000000000 +0700
@@ -98,7 +98,7 @@ struct _soapService {
 	char      *actor;
 	char      *uri;
 	xmlCharEncodingHandlerPtr encoding;
-	HashTable *class_map;
+	zval       class_map;
 	int        features;
 	struct _soapHeader **soap_headers_ptr;
 	int send_errors;
diff -urpN php-8.3.8/ext/soap/php_xml.c php-8.3.10/ext/soap/php_xml.c
--- php-8.3.8/ext/soap/php_xml.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/soap/php_xml.c	2024-07-30 20:44:37.000000000 +0700
@@ -92,13 +92,16 @@ xmlDocPtr soap_xmlParseFile(const char *
 		bool old;
 
 		php_libxml_sanitize_parse_ctxt_options(ctxt);
+		/* TODO: In libxml2 2.14.0 change this to the new options API so we don't rely on deprecated APIs. */
+		PHP_LIBXML_IGNORE_DEPRECATIONS_START
 		ctxt->keepBlanks = 0;
+		ctxt->options |= XML_PARSE_HUGE;
+		PHP_LIBXML_IGNORE_DEPRECATIONS_END
 		ctxt->sax->ignorableWhitespace = soap_ignorableWhitespace;
 		ctxt->sax->comment = soap_Comment;
 		ctxt->sax->warning = NULL;
 		ctxt->sax->error = NULL;
 		/*ctxt->sax->fatalError = NULL;*/
-		ctxt->options |= XML_PARSE_HUGE;
 		old = php_libxml_disable_entity_loader(1);
 		xmlParseDocument(ctxt);
 		php_libxml_disable_entity_loader(old);
@@ -146,7 +149,10 @@ xmlDocPtr soap_xmlParseMemory(const void
 		ctxt->sax->warning = NULL;
 		ctxt->sax->error = NULL;
 		/*ctxt->sax->fatalError = NULL;*/
+		/* TODO: In libxml2 2.14.0 change this to the new options API so we don't rely on deprecated APIs. */
+		PHP_LIBXML_IGNORE_DEPRECATIONS_START
 		ctxt->options |= XML_PARSE_HUGE;
+		PHP_LIBXML_IGNORE_DEPRECATIONS_END
 		old = php_libxml_disable_entity_loader(1);
 		xmlParseDocument(ctxt);
 		php_libxml_disable_entity_loader(old);
diff -urpN php-8.3.8/ext/soap/soap.c php-8.3.10/ext/soap/soap.c
--- php-8.3.8/ext/soap/soap.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/soap/soap.c	2024-07-30 20:44:37.000000000 +0700
@@ -66,6 +66,7 @@ static xmlNodePtr serialize_zval(zval *v
 static void delete_service(void *service);
 static void delete_url(void *handle);
 static void delete_hashtable(void *hashtable);
+static void delete_argv(struct _soap_class *class);
 
 static void soap_error_handler(int error_num, zend_string *error_filename, const uint32_t error_lineno, zend_string *message);
 
@@ -519,6 +520,17 @@ PHP_METHOD(SoapHeader, __construct)
 }
 /* }}} */
 
+static void soap_fault_dtor_properties(zval *obj)
+{
+	zval_ptr_dtor(Z_FAULT_STRING_P(obj));
+	zval_ptr_dtor(Z_FAULT_CODE_P(obj));
+	zval_ptr_dtor(Z_FAULT_CODENS_P(obj));
+	zval_ptr_dtor(Z_FAULT_ACTOR_P(obj));
+	zval_ptr_dtor(Z_FAULT_DETAIL_P(obj));
+	zval_ptr_dtor(Z_FAULT_NAME_P(obj));
+	zval_ptr_dtor(Z_FAULT_HEADERFAULT_P(obj));
+}
+
 /* {{{ SoapFault constructor */
 PHP_METHOD(SoapFault, __construct)
 {
@@ -538,6 +550,9 @@ PHP_METHOD(SoapFault, __construct)
 		Z_PARAM_ZVAL_OR_NULL(headerfault)
 	ZEND_PARSE_PARAMETERS_END();
 
+	/* Delete previously set properties */
+	soap_fault_dtor_properties(ZEND_THIS);
+
 	if (code_str) {
 		fault_code = ZSTR_VAL(code_str);
 		fault_code_len = ZSTR_LEN(code_str);
@@ -815,7 +830,7 @@ PHP_METHOD(SoapServer, __construct)
 
 		if ((tmp = zend_hash_str_find(ht, "classmap", sizeof("classmap")-1)) != NULL &&
 			Z_TYPE_P(tmp) == IS_ARRAY) {
-			service->class_map = zend_array_dup(Z_ARRVAL_P(tmp));
+			create_normalized_classmap(&service->class_map, tmp);
 		}
 
 		if ((tmp = zend_hash_str_find(ht, "typemap", sizeof("typemap")-1)) != NULL &&
@@ -899,11 +914,9 @@ PHP_METHOD(SoapServer, setPersistence)
 			zend_argument_value_error(
 				1, "must be either SOAP_PERSISTENCE_SESSION or SOAP_PERSISTENCE_REQUEST when the SOAP server is used in class mode"
 			);
-			RETURN_THROWS();
 		}
 	} else {
 		zend_throw_error(NULL, "SoapServer::setPersistence(): Persistence cannot be set when the SOAP server is used in function mode");
-		RETURN_THROWS();
 	}
 
 	SOAP_SERVER_END_CODE();
@@ -930,6 +943,8 @@ PHP_METHOD(SoapServer, setClass)
 	service->type = SOAP_CLASS;
 	service->soap_class.ce = ce;
 
+	delete_argv(&service->soap_class);
+
 	service->soap_class.persistence = SOAP_PERSISTENCE_REQUEST;
 	service->soap_class.argc = num_args;
 	if (service->soap_class.argc > 0) {
@@ -961,6 +976,7 @@ PHP_METHOD(SoapServer, setObject)
 
 	service->type = SOAP_OBJECT;
 
+	zval_ptr_dtor(&service->soap_object);
 	ZVAL_OBJ_COPY(&service->soap_object, Z_OBJ_P(obj));
 
 	SOAP_SERVER_END_CODE();
@@ -1042,13 +1058,16 @@ PHP_METHOD(SoapServer, addFunction)
 
 				if (Z_TYPE_P(tmp_function) != IS_STRING) {
 					zend_argument_type_error(1, "must contain only strings");
+					SOAP_SERVER_END_CODE();
 					RETURN_THROWS();
 				}
 
 				key = zend_string_tolower(Z_STR_P(tmp_function));
 
 				if ((f = zend_hash_find_ptr(EG(function_table), key)) == NULL) {
+					zend_string_release_ex(key, false);
 					zend_type_error("SoapServer::addFunction(): Function \"%s\" not found", Z_STRVAL_P(tmp_function));
+					SOAP_SERVER_END_CODE();
 					RETURN_THROWS();
 				}
 
@@ -1065,7 +1084,9 @@ PHP_METHOD(SoapServer, addFunction)
 		key = zend_string_tolower(Z_STR_P(function_name));
 
 		if ((f = zend_hash_find_ptr(EG(function_table), key)) == NULL) {
+			zend_string_release_ex(key, false);
 			zend_argument_type_error(1, "must be a valid function name, function \"%s\" not found", Z_STRVAL_P(function_name));
+			SOAP_SERVER_END_CODE();
 			RETURN_THROWS();
 		}
 		if (service->soap_functions.ft == NULL) {
@@ -1086,11 +1107,9 @@ PHP_METHOD(SoapServer, addFunction)
 			service->soap_functions.functions_all = TRUE;
 		} else {
 			zend_argument_value_error(1, "must be SOAP_FUNCTIONS_ALL when an integer is passed");
-			RETURN_THROWS();
 		}
 	} else {
 		zend_argument_type_error(1, "must be of type array|string|int, %s given", zend_zval_value_name(function_name));
-		RETURN_THROWS();
 	}
 
 	SOAP_SERVER_END_CODE();
@@ -1150,6 +1169,7 @@ PHP_METHOD(SoapServer, handle)
 
 	if (arg && ZEND_SIZE_T_INT_OVFL(arg_len)) {
 		soap_server_fault("Server", "Input string is too long", NULL, NULL, NULL);
+		SOAP_SERVER_END_CODE();
 		return;
 	}
 
@@ -1231,10 +1251,12 @@ PHP_METHOD(SoapServer, handle)
 						php_stream_filter_append(&SG(request_info).request_body->readfilters, zf);
 					} else {
 						php_error_docref(NULL, E_WARNING,"Can't uncompress compressed request");
+						SOAP_SERVER_END_CODE();
 						return;
 					}
 				} else {
 					php_error_docref(NULL, E_WARNING,"Request is compressed with unknown compression '%s'",Z_STRVAL_P(encoding));
+					SOAP_SERVER_END_CODE();
 					return;
 				}
 			}
@@ -1246,6 +1268,7 @@ PHP_METHOD(SoapServer, handle)
 			}
 		} else {
 			zval_ptr_dtor(&retval);
+			SOAP_SERVER_END_CODE();
 			return;
 		}
 	} else {
@@ -1273,7 +1296,7 @@ PHP_METHOD(SoapServer, handle)
 	old_encoding = SOAP_GLOBAL(encoding);
 	SOAP_GLOBAL(encoding) = service->encoding;
 	old_class_map = SOAP_GLOBAL(class_map);
-	SOAP_GLOBAL(class_map) = service->class_map;
+	SOAP_GLOBAL(class_map) = Z_ARR(service->class_map);
 	old_typemap = SOAP_GLOBAL(typemap);
 	SOAP_GLOBAL(typemap) = service->typemap;
 	old_features = SOAP_GLOBAL(features);
@@ -1388,8 +1411,7 @@ PHP_METHOD(SoapServer, handle)
 				}
 			}
 #endif
-			zend_string *fn_name = zend_string_tolower(Z_STR(h->function_name));
-			if (zend_hash_exists(function_table, fn_name) ||
+			if (zend_hash_find_ptr_lc(function_table, Z_STR(h->function_name)) != NULL ||
 			    ((service->type == SOAP_CLASS || service->type == SOAP_OBJECT) &&
 			     zend_hash_str_exists(function_table, ZEND_CALL_FUNC_NAME, sizeof(ZEND_CALL_FUNC_NAME)-1))) {
 				if (service->type == SOAP_CLASS || service->type == SOAP_OBJECT) {
@@ -1405,25 +1427,21 @@ PHP_METHOD(SoapServer, handle)
 				    instanceof_function(Z_OBJCE(h->retval), soap_fault_class_entry)) {
 					php_output_discard();
 					soap_server_fault_ex(function, &h->retval, h);
-					zend_string_release(fn_name);
 					if (service->type == SOAP_CLASS && soap_obj) {zval_ptr_dtor(soap_obj);}
 					goto fail;
 				} else if (EG(exception)) {
 					php_output_discard();
 					_soap_server_exception(service, function, ZEND_THIS);
-					zend_string_release(fn_name);
 					if (service->type == SOAP_CLASS && soap_obj) {zval_ptr_dtor(soap_obj);}
 					goto fail;
 				}
 			} else if (h->mustUnderstand) {
 				soap_server_fault("MustUnderstand","Header not understood", NULL, NULL, NULL);
 			}
-			zend_string_release(fn_name);
 		}
 	}
 
-	zend_string *fn_name = zend_string_tolower(Z_STR(function_name));
-	if (zend_hash_exists(function_table, fn_name) ||
+	if (zend_hash_find_ptr_lc(function_table, Z_STR(function_name)) != NULL ||
 	    ((service->type == SOAP_CLASS || service->type == SOAP_OBJECT) &&
 	     zend_hash_str_exists(function_table, ZEND_CALL_FUNC_NAME, sizeof(ZEND_CALL_FUNC_NAME)-1))) {
 		if (service->type == SOAP_CLASS || service->type == SOAP_OBJECT) {
@@ -1445,7 +1463,6 @@ PHP_METHOD(SoapServer, handle)
 	} else {
 		php_error(E_ERROR, "Function '%s' doesn't exist", Z_STRVAL(function_name));
 	}
-	zend_string_release(fn_name);
 
 	if (EG(exception)) {
 		if (!zend_is_unwind_exit(EG(exception))) {
@@ -1520,7 +1537,7 @@ PHP_METHOD(SoapServer, handle)
 			sapi_add_header("Content-Type: text/xml; charset=utf-8", sizeof("Content-Type: text/xml; charset=utf-8")-1, 1);
 		}
 
-		if (zend_ini_long("zlib.output_compression", sizeof("zlib.output_compression"), 0)) {
+		if (INI_INT("zlib.output_compression")) {
 			sapi_add_header("Connection: close", sizeof("Connection: close")-1, 1);
 		} else {
 			snprintf(cont_len, sizeof(cont_len), "Content-Length: %d", size);
@@ -1622,6 +1639,7 @@ PHP_METHOD(SoapServer, addSoapHeader)
 
 	if (!service || !service->soap_headers_ptr) {
 		zend_throw_error(NULL, "SoapServer::addSoapHeader() may be called only during SOAP request processing");
+		SOAP_SERVER_END_CODE();
 		RETURN_THROWS();
 	}
 
@@ -1668,7 +1686,7 @@ static void soap_server_fault_ex(sdlFunc
 	if (use_http_error_status) {
 		sapi_add_header("HTTP/1.1 500 Internal Server Error", sizeof("HTTP/1.1 500 Internal Server Error")-1, 1);
 	}
-	if (zend_ini_long("zlib.output_compression", sizeof("zlib.output_compression"), 0)) {
+	if (INI_INT("zlib.output_compression")) {
 		sapi_add_header("Connection: close", sizeof("Connection: close")-1, 1);
 	} else {
 		snprintf(cont_len, sizeof(cont_len), "Content-Length: %d", size);
@@ -1978,7 +1996,7 @@ PHP_METHOD(SoapClient, __construct)
 		}
 		if ((tmp = zend_hash_str_find(ht, "classmap", sizeof("classmap")-1)) != NULL &&
 			Z_TYPE_P(tmp) == IS_ARRAY) {
-			ZVAL_COPY(Z_CLIENT_CLASSMAP_P(this_ptr), tmp);
+			create_normalized_classmap(Z_CLIENT_CLASSMAP_P(this_ptr), tmp);
 		}
 
 		if ((tmp = zend_hash_str_find(ht, "typemap", sizeof("typemap")-1)) != NULL &&
@@ -4342,6 +4360,16 @@ static void delete_url(void *handle) /*
 }
 /* }}} */
 
+static void delete_argv(struct _soap_class *class)
+{
+	if (class->argc) {
+		for (int i = 0; i < class->argc; i++) {
+			zval_ptr_dtor(&class->argv[i]);
+		}
+		efree(class->argv);
+	}
+}
+
 static void delete_service(void *data) /* {{{ */
 {
 	soapServicePtr service = (soapServicePtr)data;
@@ -4356,13 +4384,7 @@ static void delete_service(void *data) /
 		efree(service->typemap);
 	}
 
-	if (service->soap_class.argc) {
-		int i;
-		for (i = 0; i < service->soap_class.argc;i++) {
-			zval_ptr_dtor(&service->soap_class.argv[i]);
-		}
-		efree(service->soap_class.argv);
-	}
+	delete_argv(&service->soap_class);
 
 	if (service->actor) {
 		efree(service->actor);
@@ -4376,10 +4398,7 @@ static void delete_service(void *data) /
 	if (service->encoding) {
 		xmlCharEncCloseFunc(service->encoding);
 	}
-	if (service->class_map) {
-		zend_hash_destroy(service->class_map);
-		FREE_HASHTABLE(service->class_map);
-	}
+	zval_ptr_dtor(&service->class_map);
 	zval_ptr_dtor(&service->soap_object);
 	efree(service);
 }
diff -urpN php-8.3.8/ext/soap/tests/SoapFault/gh14586.phpt php-8.3.10/ext/soap/tests/SoapFault/gh14586.phpt
--- php-8.3.8/ext/soap/tests/SoapFault/gh14586.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/soap/tests/SoapFault/gh14586.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,12 @@
+--TEST--
+GH-14586: SoapFault::__construct() leaks memory if called twice
+--EXTENSIONS--
+soap
+--FILE--
+<?php
+$sf = new SoapFault(null, "x");
+$sf->__construct(null, "x");
+?>
+DONE
+--EXPECT--
+DONE
diff -urpN php-8.3.8/ext/soap/tests/bug69280.phpt php-8.3.10/ext/soap/tests/bug69280.phpt
--- php-8.3.8/ext/soap/tests/bug69280.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/soap/tests/bug69280.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,44 @@
+--TEST--
+Bug #69280 (SoapClient classmap doesn't support fully qualified class name)
+--EXTENSIONS--
+soap
+--INI--
+soap.wsdl_cache_enabled=0
+--CREDITS--
+champetier dot etienne at gmail dot com
+--FILE--
+<?php
+abstract class AbstractClass {
+	public $prop;
+}
+
+class RealClass1 extends AbstractClass {
+	public $prop1;
+}
+
+class TestWS extends \SoapClient {
+	public function TestMethod($parameters) {
+		return $this->__soapCall('TestMethod', [$parameters], [
+				'uri' => 'http://tempuri.org/',
+				'soapaction' => ''
+			]
+		);
+	}
+
+	public function __doRequest(string $request, string $location, string $action, int $version, bool $oneWay = false): ?string {
+		die($request);
+	}
+}
+
+$a = new TestWS(__DIR__ . '/bug69280.wsdl', ['classmap' => [
+	'AbstractClass' => '\AbstractClass',
+	'RealClass1' => '\RealClass1',
+]]);
+$r1 = new \RealClass1();
+$r1->prop = "prop";
+$r1->prop1 = "prop1";
+$a->TestMethod($r1);
+?>
+--EXPECT--
+<?xml version="1.0" encoding="UTF-8"?>
+<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://tempuri.org/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><SOAP-ENV:Body><parameters xsi:type="ns1:RealClass1"><ns1:prop>prop</ns1:prop><ns1:prop1>prop1</ns1:prop1></parameters></SOAP-ENV:Body></SOAP-ENV:Envelope>
diff -urpN php-8.3.8/ext/soap/tests/bug69280.wsdl php-8.3.10/ext/soap/tests/bug69280.wsdl
--- php-8.3.8/ext/soap/tests/bug69280.wsdl	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/soap/tests/bug69280.wsdl	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="utf-8"?>
+<definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:s0="http://tempuri.org/" name="TestWS" targetNamespace="http://tempuri.org/" xmlns="http://schemas.xmlsoap.org/wsdl/">
+	<types>
+		<xs:schema elementFormDefault="qualified" targetNamespace="http://tempuri.org/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
+			<xs:complexType name="AbstractClass">
+				<xs:sequence>
+					<xs:element minOccurs="0" maxOccurs="1" name="prop" type="xs:string" />
+				</xs:sequence>
+			</xs:complexType>
+			<xs:complexType name="RealClass1">
+				<xs:complexContent mixed="false">
+					<xs:extension base="s0:AbstractClass">
+						<xs:sequence>
+							<xs:element minOccurs="0" maxOccurs="1" name="prop1" type="xs:string" />
+						</xs:sequence>
+					</xs:extension>
+				</xs:complexContent>
+			</xs:complexType>
+		</xs:schema>
+	</types>
+	<message name="TestMethodSoapIn">
+		<part name="parameters" element="RealClass1" />
+	</message>
+	<portType name="TestWSSoap">
+		<operation name="TestMethod">
+			<input message="s0:TestMethodSoapIn" />
+		</operation>
+	</portType>
+	<binding name="TestWSSoap" type="s0:TestWSSoap">
+		<soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
+		<operation name="TestMethod">
+			<soap:operation soapAction="http://tempuri.org/TestMethod" style="document" />
+			<input>
+				<soap:body use="literal" />
+			</input>
+			<output>
+				<soap:body use="literal" />
+			</output>
+		</operation>
+	</binding>
+	<service name="TestWS">
+		<port name="TestWSSoap" binding="s0:TestWSSoap">
+			<soap:address location="http://tempuri.org/" />
+		</port>
+	</service>
+</definitions>
diff -urpN php-8.3.8/ext/soap/tests/bugs/bug42151.phpt php-8.3.10/ext/soap/tests/bugs/bug42151.phpt
--- php-8.3.8/ext/soap/tests/bugs/bug42151.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/soap/tests/bugs/bug42151.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -25,8 +25,8 @@ try {
 }
 echo "ok\n";
 ?>
---EXPECT--
-SOAP-ERROR: Parsing WSDL: Couldn't load from 'httpx://' : failed to load external entity "httpx://"
+--EXPECTF--
+SOAP-ERROR: Parsing WSDL: Couldn't load from 'httpx://' : failed to load %s
 
 ok
 I don't get executed either.
diff -urpN php-8.3.8/ext/soap/tests/bugs/bug47925.phpt php-8.3.10/ext/soap/tests/bugs/bug47925.phpt
--- php-8.3.8/ext/soap/tests/bugs/bug47925.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/soap/tests/bugs/bug47925.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,40 @@
+--TEST--
+Bug #47925 (PHPClient can't decompress response (transposed uncompress methods?))
+--EXTENSIONS--
+soap
+zlib
+--SKIPIF--
+<?php
+if (@!include __DIR__."/../../../standard/tests/http/server.inc") die('skip server.inc not available');
+http_server_skipif();
+?>
+--FILE--
+<?php
+require __DIR__."/../../../standard/tests/http/server.inc";
+
+$plain_response = <<<XML
+<?xml version="1.0" encoding="UTF-8"?>
+<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:ns1="http://testuri.org" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
+    <SOAP-ENV:Body>
+        <ns1:AddResponse>
+            <return xsi:type="xsd:int">7</return>
+        </ns1:AddResponse>
+    </SOAP-ENV:Body>
+</SOAP-ENV:Envelope>
+XML;
+
+function test($compressed_response, $compression_name) {
+    $length = strlen($compressed_response);
+    $server_response = "data://text/xml;base64," . base64_encode("HTTP/1.1 200 OK\r\nConnection: close\r\nContent-Encoding: $compression_name\r\nContent-Length: $length\r\n\r\n$compressed_response");
+    ['pid' => $pid, 'uri' => $uri] = http_server([$server_response]);
+    $client = new SoapClient(NULL, ['location' => $uri, 'uri' => $uri]);
+    var_dump($client->Add(3, 4));
+    http_server_kill($pid);
+}
+
+test(gzencode($plain_response), "gzip");
+test(gzcompress($plain_response), "deflate");
+?>
+--EXPECT--
+int(7)
+int(7)
diff -urpN php-8.3.8/ext/soap/tests/bugs/bug76232.phpt php-8.3.10/ext/soap/tests/bugs/bug76232.phpt
--- php-8.3.8/ext/soap/tests/bugs/bug76232.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/soap/tests/bugs/bug76232.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,67 @@
+--TEST--
+Bug #76232 (SoapClient Cookie Header Semicolon)
+--EXTENSIONS--
+soap
+--SKIPIF--
+<?php
+    if (!file_exists(__DIR__ . "/../../../../sapi/cli/tests/php_cli_server.inc")) {
+        echo "skip sapi/cli/tests/php_cli_server.inc required but not found";
+    }
+?>
+--FILE--
+<?php
+
+include __DIR__ . "/../../../../sapi/cli/tests/php_cli_server.inc";
+
+$args = ["-d", "extension_dir=" . ini_get("extension_dir"), "-d", "extension=" . (substr(PHP_OS, 0, 3) == "WIN" ? "php_" : "") . "soap." . PHP_SHLIB_SUFFIX];
+if (php_ini_loaded_file()) {
+  // Necessary such that it works from a development directory in which case extension_dir might not be the real extension dir
+  $args[] = "-c";
+  $args[] = php_ini_loaded_file();
+}
+$code = <<<'PHP'
+/* Receive */
+$content = trim(file_get_contents("php://input")) . PHP_EOL;
+PHP;
+
+php_cli_server_start($code, null, $args);
+
+$client = new soapclient(NULL, [
+  'location' => 'http://' . PHP_CLI_SERVER_ADDRESS,
+  'uri' => 'misc-uri',
+  'trace' => true,
+]);
+
+echo "=== Request with one cookie ===\n";
+
+$client->__setCookie('testcookie1', 'true');
+$client->__soapCall("foo", []);
+echo $client->__getLastRequestHeaders();
+
+echo "=== Request with two cookies ===\n";
+
+$client->__setCookie('testcookie2', 'true');
+$client->__soapCall("foo", []);
+
+echo $client->__getLastRequestHeaders();
+?>
+--EXPECTF--
+=== Request with one cookie ===
+POST / HTTP/1.1
+Host: %s
+Connection: Keep-Alive
+User-Agent: PHP-SOAP/%s
+Content-Type: text/xml; charset=utf-8
+SOAPAction: "misc-uri#foo"
+Content-Length: %d
+Cookie: testcookie1=true
+
+=== Request with two cookies ===
+POST / HTTP/1.1
+Host: %s
+Connection: Keep-Alive
+User-Agent: PHP-SOAP/%s
+Content-Type: text/xml; charset=utf-8
+SOAPAction: "misc-uri#foo"
+Content-Length: %d
+Cookie: testcookie1=true; testcookie2=true
diff -urpN php-8.3.8/ext/soap/tests/bugs/setClass_twice.phpt php-8.3.10/ext/soap/tests/bugs/setClass_twice.phpt
--- php-8.3.8/ext/soap/tests/bugs/setClass_twice.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/soap/tests/bugs/setClass_twice.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,20 @@
+--TEST--
+SOAP Server: SoapServer::setClass() twice
+--EXTENSIONS--
+soap
+--FILE--
+<?php
+class Foo {
+  function test() {
+    return "Hello World";
+  }
+}
+
+$server = new SoapServer(null,array('uri'=>"http://testuri.org"));
+$server->setClass(Foo::class, new stdClass, []);
+$server->setClass(Foo::class, new stdClass, []);
+
+echo "Done\n";
+?>
+--EXPECT--
+Done
diff -urpN php-8.3.8/ext/soap/tests/bugs/setObject_twice.phpt php-8.3.10/ext/soap/tests/bugs/setObject_twice.phpt
--- php-8.3.8/ext/soap/tests/bugs/setObject_twice.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/soap/tests/bugs/setObject_twice.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,14 @@
+--TEST--
+SOAP Server: SoapServer::setObject twice
+--EXTENSIONS--
+soap
+--FILE--
+<?php
+$foo = new stdClass();
+$server = new SoapServer(null,array('uri'=>"http://testuri.org"));
+$server->setObject($foo);
+$server->setObject($foo);
+echo "Done\n";
+?>
+--EXPECT--
+Done
diff -urpN php-8.3.8/ext/sodium/libsodium.c php-8.3.10/ext/sodium/libsodium.c
--- php-8.3.8/ext/sodium/libsodium.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/sodium/libsodium.c	2024-07-30 20:44:37.000000000 +0700
@@ -992,6 +992,7 @@ PHP_FUNCTION(sodium_crypto_sign_publicke
 
 	if (crypto_sign_ed25519_sk_to_pk((unsigned char *) ZSTR_VAL(publickey),
 									 (const unsigned char *) secretkey) != 0) {
+		zend_string_efree(publickey);
 		zend_throw_exception(sodium_exception_ce,
 				   "internal error", 0);
 		RETURN_THROWS();
@@ -2475,6 +2476,7 @@ PHP_FUNCTION(sodium_crypto_kx_seed_keypa
 	crypto_generichash(sk, crypto_kx_SECRETKEYBYTES,
 					   seed, crypto_kx_SEEDBYTES, NULL, 0);
 	if (crypto_scalarmult_base(pk, sk) != 0) {
+		zend_string_efree(keypair);
 		zend_throw_exception(sodium_exception_ce, "internal error", 0);
 		RETURN_THROWS();
 	}
@@ -2496,6 +2498,7 @@ PHP_FUNCTION(sodium_crypto_kx_keypair)
 	pk = sk + crypto_kx_SECRETKEYBYTES;
 	randombytes_buf(sk, crypto_kx_SECRETKEYBYTES);
 	if (crypto_scalarmult_base(pk, sk) != 0) {
+		zend_string_efree(keypair);
 		zend_throw_exception(sodium_exception_ce, "internal error", 0);
 		RETURN_THROWS();
 	}
@@ -2672,6 +2675,7 @@ PHP_FUNCTION(sodium_crypto_auth)
 	if (crypto_auth((unsigned char *) ZSTR_VAL(mac),
 					(const unsigned char *) msg, msg_len,
 					(const unsigned char *) key) != 0) {
+		zend_string_efree(mac);
 		zend_throw_exception(sodium_exception_ce, "internal error", 0);
 		RETURN_THROWS();
 	}
@@ -2731,6 +2735,7 @@ PHP_FUNCTION(sodium_crypto_sign_ed25519_
 
 	if (crypto_sign_ed25519_sk_to_curve25519((unsigned char *) ZSTR_VAL(ecdhkey),
 											 (const unsigned char *) eddsakey) != 0) {
+		zend_string_efree(ecdhkey);
 		zend_throw_exception(sodium_exception_ce, "conversion failed", 0);
 		RETURN_THROWS();
 	}
@@ -2758,6 +2763,7 @@ PHP_FUNCTION(sodium_crypto_sign_ed25519_
 
 	if (crypto_sign_ed25519_pk_to_curve25519((unsigned char *) ZSTR_VAL(ecdhkey),
 											 (const unsigned char *) eddsakey) != 0) {
+		zend_string_efree(ecdhkey);
 		zend_throw_exception(sodium_exception_ce, "conversion failed", 0);
 		RETURN_THROWS();
 	}
@@ -3036,6 +3042,7 @@ PHP_FUNCTION(sodium_pad)
 #if SODIUM_LIBRARY_VERSION_MAJOR > 9 || (SODIUM_LIBRARY_VERSION_MAJOR == 9 && SODIUM_LIBRARY_VERSION_MINOR >= 6)
 	if (sodium_pad(NULL, (unsigned char *) ZSTR_VAL(padded), unpadded_len,
 				   (size_t) blocksize, xpadded_len + 1U) != 0) {
+		zend_string_efree(padded);
 		zend_throw_exception(sodium_exception_ce, "internal error", 0);
 		RETURN_THROWS();
 	}
diff -urpN php-8.3.8/ext/sodium/tests/sodium_crypto_sign_ed25519_pk_to_curve25519_failure_leak.phpt php-8.3.10/ext/sodium/tests/sodium_crypto_sign_ed25519_pk_to_curve25519_failure_leak.phpt
--- php-8.3.8/ext/sodium/tests/sodium_crypto_sign_ed25519_pk_to_curve25519_failure_leak.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/sodium/tests/sodium_crypto_sign_ed25519_pk_to_curve25519_failure_leak.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,16 @@
+--TEST--
+Memory leak on sodium_crypto_sign_ed25519_pk_to_curve25519() failure
+--EXTENSIONS--
+sodium
+--FILE--
+<?php
+
+try {
+    sodium_crypto_sign_ed25519_pk_to_curve25519(str_repeat("\x00", SODIUM_CRYPTO_SIGN_PUBLICKEYBYTES));
+} catch (SodiumException $e) {
+    echo $e->getMessage();
+}
+
+?>
+--EXPECT--
+conversion failed
diff -urpN php-8.3.8/ext/spl/spl_iterators.c php-8.3.10/ext/spl/spl_iterators.c
--- php-8.3.8/ext/spl/spl_iterators.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/spl/spl_iterators.c	2024-07-30 20:44:37.000000000 +0700
@@ -1898,12 +1898,17 @@ PHP_METHOD(RegexIterator, accept)
 			zval *replacement = zend_read_property(intern->std.ce, Z_OBJ_P(ZEND_THIS), "replacement", sizeof("replacement")-1, 1, &rv);
 			zend_string *replacement_str = zval_try_get_string(replacement);
 
-			if (UNEXPECTED(!replacement_str)) {
-				RETURN_THROWS();
-			}
+			/* Property type is ?string, so this should always succeed. */
+			ZEND_ASSERT(replacement_str != NULL);
 
 			result = php_pcre_replace_impl(intern->u.regex.pce, subject, ZSTR_VAL(subject), ZSTR_LEN(subject), replacement_str, -1, &count);
 
+			if (UNEXPECTED(!result)) {
+				zend_string_release(replacement_str);
+				zend_string_release_ex(subject, false);
+				RETURN_FALSE;
+			}
+
 			if (intern->u.regex.flags & REGIT_USE_KEY) {
 				zval_ptr_dtor(&intern->current.key);
 				ZVAL_STR(&intern->current.key, result);
@@ -1920,7 +1925,7 @@ PHP_METHOD(RegexIterator, accept)
 	if (intern->u.regex.flags & REGIT_INVERTED) {
 		RETVAL_BOOL(Z_TYPE_P(return_value) != IS_TRUE);
 	}
-	zend_string_release_ex(subject, 0);
+	zend_string_release_ex(subject, false);
 } /* }}} */
 
 /* {{{ Returns current regular expression */
diff -urpN php-8.3.8/ext/spl/spl_observer.c php-8.3.10/ext/spl/spl_observer.c
--- php-8.3.8/ext/spl/spl_observer.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/spl/spl_observer.c	2024-07-30 20:44:37.000000000 +0700
@@ -118,9 +118,11 @@ static void spl_object_storage_free_hash
 static void spl_object_storage_dtor(zval *element) /* {{{ */
 {
 	spl_SplObjectStorageElement *el = Z_PTR_P(element);
-	zend_object_release(el->obj);
-	zval_ptr_dtor(&el->inf);
-	efree(el);
+	if (el) {
+		zend_object_release(el->obj);
+		zval_ptr_dtor(&el->inf);
+		efree(el);
+	}
 } /* }}} */
 
 static spl_SplObjectStorageElement* spl_object_storage_get(spl_SplObjectStorage *intern, zend_hash_key *key) /* {{{ */
@@ -168,8 +170,10 @@ static spl_SplObjectStorageElement *spl_
 		return pelement;
 	}
 
+	/* NULL initialization necessary because `spl_object_storage_create_element` could bail out due to OOM. */
+	ZVAL_PTR(entry_zv, NULL);
 	pelement = spl_object_storage_create_element(obj, inf);
-	ZVAL_PTR(entry_zv, pelement);
+	Z_PTR_P(entry_zv) = pelement;
 	return pelement;
 } /* }}} */
 
diff -urpN php-8.3.8/ext/spl/tests/gh14290.phpt php-8.3.10/ext/spl/tests/gh14290.phpt
--- php-8.3.8/ext/spl/tests/gh14290.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/spl/tests/gh14290.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,16 @@
+--TEST--
+GH-14290 (Member access within null pointer in extension spl)
+--INI--
+pcre.backtrack_limit=2
+pcre.jit=0
+--FILE--
+<?php
+$h = new ArrayIterator(['test' => 'test1']);
+$i = new RegexIterator($h, '/^test(.*)/', RegexIterator::REPLACE);
+foreach ($i as $name => $value) {
+    var_dump($name, $value);
+}
+echo "Done\n";
+?>
+--EXPECT--
+Done
diff -urpN php-8.3.8/ext/spl/tests/gh14639.phpt php-8.3.10/ext/spl/tests/gh14639.phpt
--- php-8.3.8/ext/spl/tests/gh14639.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/spl/tests/gh14639.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,21 @@
+--TEST--
+GH-14639 (Member access within null pointer in ext/spl/spl_observer.c)
+--INI--
+memory_limit=2M
+--SKIPIF--
+<?php
+if (getenv("USE_ZEND_ALLOC") === "0") {
+    die("skip Zend MM disabled");
+}
+?>
+--FILE--
+<?php
+$b = new SplObjectStorage();
+for ($i = 10000; $i > 0; $i--) {
+    $object = new StdClass();
+    $object->a = str_repeat("a", 2);
+    $b->attach($object);
+}
+?>
+--EXPECTF--
+Fatal error: Allowed memory size of %d bytes exhausted%s(tried to allocate %d bytes) in %s on line %d
diff -urpN php-8.3.8/ext/standard/array.c php-8.3.10/ext/standard/array.c
--- php-8.3.8/ext/standard/array.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/standard/array.c	2024-07-30 20:44:37.000000000 +0700
@@ -2887,6 +2887,10 @@ PHP_FUNCTION(range)
 			step = Z_LVAL_P(user_step);
 			/* We only want positive step values. */
 			if (step < 0) {
+				if (UNEXPECTED(step == ZEND_LONG_MIN)) {
+					zend_argument_value_error(3, "must be greater than " ZEND_LONG_FMT, step);
+					RETURN_THROWS();
+				}
 				is_step_negative = true;
 				step *= -1;
 			}
diff -urpN php-8.3.8/ext/standard/basic_functions.c php-8.3.10/ext/standard/basic_functions.c
--- php-8.3.8/ext/standard/basic_functions.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/standard/basic_functions.c	2024-07-30 20:44:37.000000000 +0700
@@ -1220,6 +1220,7 @@ PHP_FUNCTION(time_sleep_until)
 	struct timespec php_req, php_rem;
 	uint64_t current_ns, target_ns, diff_ns;
 	const uint64_t ns_per_sec = 1000000000;
+	const double top_target_sec = (double)(UINT64_MAX / ns_per_sec);
 
 	ZEND_PARSE_PARAMETERS_START(1, 1)
 		Z_PARAM_DOUBLE(target_secs)
@@ -1229,6 +1230,11 @@ PHP_FUNCTION(time_sleep_until)
 		RETURN_FALSE;
 	}
 
+	if (UNEXPECTED(!(target_secs >= 0 && target_secs <= top_target_sec))) {
+		zend_argument_value_error(1, "must be between 0 and %" PRIu64, (uint64_t)top_target_sec);
+		RETURN_THROWS();
+	}
+
 	target_ns = (uint64_t) (target_secs * ns_per_sec);
 	current_ns = ((uint64_t) tm.tv_sec) * ns_per_sec + ((uint64_t) tm.tv_usec) * 1000;
 	if (target_ns < current_ns) {
diff -urpN php-8.3.8/ext/standard/filestat.c php-8.3.10/ext/standard/filestat.c
--- php-8.3.8/ext/standard/filestat.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/standard/filestat.c	2024-07-30 20:44:37.000000000 +0700
@@ -279,13 +279,25 @@ PHPAPI zend_result php_get_gid_by_name(c
 		struct group *retgrptr;
 		long grbuflen = sysconf(_SC_GETGR_R_SIZE_MAX);
 		char *grbuf;
+		int err;
 
 		if (grbuflen < 1) {
-			return FAILURE;
+			grbuflen = 1024;
 		}
-
+# if ZEND_DEBUG
+		/* Test retry logic */
+		grbuflen = 1;
+# endif
 		grbuf = emalloc(grbuflen);
-		if (getgrnam_r(name, &gr, grbuf, grbuflen, &retgrptr) != 0 || retgrptr == NULL) {
+
+try_again:
+		err = getgrnam_r(name, &gr, grbuf, grbuflen, &retgrptr);
+		if (err != 0 || retgrptr == NULL) {
+			if (err == ERANGE) {
+				grbuflen *= 2;
+				grbuf = erealloc(grbuf, grbuflen);
+				goto try_again;
+			}
 			efree(grbuf);
 			return FAILURE;
 		}
@@ -405,13 +417,25 @@ PHPAPI zend_result php_get_uid_by_name(c
 		struct passwd *retpwptr = NULL;
 		long pwbuflen = sysconf(_SC_GETPW_R_SIZE_MAX);
 		char *pwbuf;
+		int err;
 
 		if (pwbuflen < 1) {
-			return FAILURE;
+			pwbuflen = 1024;
 		}
-
+# if ZEND_DEBUG
+		/* Test retry logic */
+		pwbuflen = 1;
+# endif
 		pwbuf = emalloc(pwbuflen);
-		if (getpwnam_r(name, &pw, pwbuf, pwbuflen, &retpwptr) != 0 || retpwptr == NULL) {
+
+try_again:
+		err = getpwnam_r(name, &pw, pwbuf, pwbuflen, &retpwptr);
+		if (err != 0 || retpwptr == NULL) {
+			if (err == EAGAIN) {
+				pwbuflen *= 2;
+				pwbuf = erealloc(pwbuf, pwbuflen);
+				goto try_again;
+			}
 			efree(pwbuf);
 			return FAILURE;
 		}
diff -urpN php-8.3.8/ext/standard/image.c php-8.3.10/ext/standard/image.c
--- php-8.3.8/ext/standard/image.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/standard/image.c	2024-07-30 20:44:37.000000000 +0700
@@ -749,10 +749,10 @@ static signed short php_ifd_get16s(void
 static int php_ifd_get32s(void *Long, int motorola_intel)
 {
 	if (motorola_intel) {
-		return  ((unsigned)((( char *)Long)[0]) << 24) | (((unsigned char *)Long)[1] << 16)
-		      | ((( char *)Long)[2] << 8 ) | (((unsigned char *)Long)[3] << 0 );
+		return  ((unsigned)(((unsigned char *)Long)[0]) << 24) | (((unsigned char *)Long)[1] << 16)
+		      | (((unsigned char *)Long)[2] << 8 ) | (((unsigned char *)Long)[3] << 0 );
 	} else {
-		return  ((unsigned)((( char *)Long)[3]) << 24) | (((unsigned char *)Long)[2] << 16)
+		return  ((unsigned)(((unsigned char *)Long)[3]) << 24) | (((unsigned char *)Long)[2] << 16)
 		      | (((unsigned char *)Long)[1] << 8 ) | (((unsigned char *)Long)[0] << 0 );
 	}
 }
diff -urpN php-8.3.8/ext/standard/string.c php-8.3.10/ext/standard/string.c
--- php-8.3.8/ext/standard/string.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/standard/string.c	2024-07-30 20:44:37.000000000 +0700
@@ -3224,7 +3224,7 @@ PHP_FUNCTION(strtr)
 								/* case_sensitive */ true,
 								NULL));
 				} else {
-					zend_long dummy;
+					zend_long dummy = 0;
 					RETVAL_STR(php_str_to_str_ex(str,
 								ZSTR_VAL(str_key), ZSTR_LEN(str_key),
 								ZSTR_VAL(replace), ZSTR_LEN(replace), &dummy));
diff -urpN php-8.3.8/ext/standard/tests/array/gh14775.phpt php-8.3.10/ext/standard/tests/array/gh14775.phpt
--- php-8.3.8/ext/standard/tests/array/gh14775.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/standard/tests/array/gh14775.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,12 @@
+--TEST--
+GH-14775: Range negative step overflow
+--FILE--
+<?php
+$var = -PHP_INT_MAX - 1;
+try {
+	range($var,1,$var);
+} catch (\ValueError $e) {
+	echo $e->getMessage() . PHP_EOL;
+}
+--EXPECTF--
+range(): Argument #3 ($step) must be greater than %s
diff -urpN php-8.3.8/ext/standard/tests/file/rename_variation-win32.phpt php-8.3.10/ext/standard/tests/file/rename_variation-win32.phpt
--- php-8.3.8/ext/standard/tests/file/rename_variation-win32.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/standard/tests/file/rename_variation-win32.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -12,19 +12,19 @@ require __DIR__.'/file.inc';
 
 /* create directory */
 $file_path = __DIR__;
-mkdir("$file_path/rename_variation");
+mkdir("$file_path/rename_variation-win32");
 
 /* rename files across directories */
 echo "*** Testing rename() : rename files across directories ***\n";
 $src_filenames = array(
-  "$file_path/rename_variation/rename_variation.tmp",
+  "$file_path/rename_variation-win32/rename_variation.tmp",
 
   /* Testing a file trailing slash */
-  "$file_path/rename_variation/rename_variation.tmp/",
+  "$file_path/rename_variation-win32/rename_variation.tmp/",
 
   /* Testing file with double slashes */
-  "$file_path/rename_variation//rename_variation.tmp",
-  "$file_path//rename_variation//rename_variation.tmp",
+  "$file_path/rename_variation-win32//rename_variation.tmp",
+  "$file_path//rename_variation-win32//rename_variation.tmp",
 );
 
 $counter = 1;
@@ -32,7 +32,7 @@ $counter = 1;
 /* loop through each $file and rename it to rename_variation2.tmp */
 foreach($src_filenames as $src_filename) {
   echo "-- Iteration $counter --\n";
-  $fp = fopen("$file_path/rename_variation/rename_variation.tmp", "w");
+  $fp = fopen("$file_path/rename_variation-win32/rename_variation.tmp", "w");
   fclose($fp);
   $dest_filename = "$file_path/rename_variation2.tmp";
   var_dump( rename($src_filename, $dest_filename) );
@@ -51,7 +51,7 @@ echo "Done\n";
 --CLEAN--
 <?php
 $file_path = __DIR__;
-rmdir($file_path."/rename_variation");
+rmdir($file_path."/rename_variation-win32");
 ?>
 --EXPECTF--
 *** Testing rename() : rename files across directories ***
@@ -61,7 +61,7 @@ bool(false)
 bool(true)
 -- Iteration 2 --
 
-Warning: rename(%s/rename_variation/rename_variation.tmp/,%s/rename_variation2.tmp): The filename, directory name, or volume label syntax is incorrect (code: 123) in %s on line %d
+Warning: rename(%s/rename_variation-win32/rename_variation.tmp/,%s/rename_variation2.tmp): The filename, directory name, or volume label syntax is incorrect (code: 123) in %s on line %d
 bool(false)
 bool(false)
 bool(false)
diff -urpN php-8.3.8/ext/standard/tests/file/rename_variation1-win32.phpt php-8.3.10/ext/standard/tests/file/rename_variation1-win32.phpt
--- php-8.3.8/ext/standard/tests/file/rename_variation1-win32.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/standard/tests/file/rename_variation1-win32.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -17,16 +17,16 @@ $file_path = __DIR__;
 echo "\n*** Testing rename() : renaming directory across directories ***\n";
 $src_dirs = array (
   /* Testing simple directory tree */
-  "$file_path/rename_variation/",
+  "$file_path/rename_variation1-win32/",
 
   /* Testing a dir with trailing slash */
-  "$file_path/rename_variation/",
+  "$file_path/rename_variation1-win32/",
 
   /* Testing dir with double trailing slashes */
-  "$file_path//rename_variation//",
+  "$file_path//rename_variation1-win32//",
 );
 
-$dest_dir = "$file_path/rename_variation_dir";
+$dest_dir = "$file_path/rename_variation1-win32_dir";
 
 // create the $dest_dir
 mkdir($dest_dir);
@@ -38,7 +38,7 @@ foreach($src_dirs as $src_dir) {
   echo "-- Iteration $counter --\n";
 
   // create the src dir
-  mkdir("$file_path/rename_variation/");
+  mkdir("$file_path/rename_variation1-win32/");
   // rename the src dir to a new dir in dest dir
   var_dump( rename($src_dir, $dest_dir."/new_dir") );
   // ensure that dir was renamed
@@ -55,7 +55,7 @@ echo "Done\n";
 --CLEAN--
 <?php
 $file_path = __DIR__;
-rmdir($file_path."/rename_variation_dir");
+rmdir($file_path."/rename_variation1-win32_dir");
 ?>
 --EXPECT--
 *** Testing rename() : renaming directory across directories ***
diff -urpN php-8.3.8/ext/standard/tests/filters/stream_filter_remove_basic.phpt php-8.3.10/ext/standard/tests/filters/stream_filter_remove_basic.phpt
--- php-8.3.8/ext/standard/tests/filters/stream_filter_remove_basic.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/standard/tests/filters/stream_filter_remove_basic.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -9,7 +9,7 @@ if(! in_array( "string.rot13", $filters
 <?php
 echo "*** Testing stream_filter_remove() : basic functionality ***\n";
 
-$file = __DIR__ . DIRECTORY_SEPARATOR . 'streamfilterTest.txt';
+$file = __DIR__ . DIRECTORY_SEPARATOR . 'streamfilterTestBasics.txt';
 touch( $file );
 
 $fp = fopen( $file, 'w+' );
@@ -27,10 +27,8 @@ fclose( $fp );
 ?>
 --CLEAN--
 <?php
-
-$file = __DIR__ . DIRECTORY_SEPARATOR . 'streamfilterTest.txt';
-unlink( $file );
-
+$file = __DIR__ . DIRECTORY_SEPARATOR . 'streamfilterTestBasics.txt';
+@unlink($file);
 ?>
 --EXPECT--
 *** Testing stream_filter_remove() : basic functionality ***
diff -urpN php-8.3.8/ext/standard/tests/filters/stream_filter_remove_error.phpt php-8.3.10/ext/standard/tests/filters/stream_filter_remove_error.phpt
--- php-8.3.8/ext/standard/tests/filters/stream_filter_remove_error.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/standard/tests/filters/stream_filter_remove_error.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -7,7 +7,7 @@ if(! in_array( "string.rot13", $filters
 ?>
 --FILE--
 <?php
-$file = __DIR__ . DIRECTORY_SEPARATOR . 'streamfilterTest.txt';
+$file = __DIR__ . DIRECTORY_SEPARATOR . 'streamfilterTestErrors.txt';
 touch( $file );
 $fp = fopen( $file, 'w+' );
 $filter = stream_filter_append( $fp, "string.rot13", STREAM_FILTER_WRITE );
@@ -35,10 +35,8 @@ fclose( $fp );
 ?>
 --CLEAN--
 <?php
-
-$file = __DIR__ . DIRECTORY_SEPARATOR . 'streamfilterTest.txt';
-unlink( $file );
-
+$file = __DIR__ . DIRECTORY_SEPARATOR . 'streamfilterTestErrors.txt';
+@unlink($file);
 ?>
 --EXPECT--
 *** Testing stream_filter_remove() : error conditions ***
diff -urpN php-8.3.8/ext/standard/tests/misc/gh14774.phpt php-8.3.10/ext/standard/tests/misc/gh14774.phpt
--- php-8.3.8/ext/standard/tests/misc/gh14774.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/standard/tests/misc/gh14774.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,23 @@
+--TEST--
+GH-14774 time_sleep_until overflow
+--SKIPIF--
+<?php
+if (PHP_INT_SIZE != 8) die("skip this test is for 64bit platform only");
+?>
+--FILE--
+<?php
+foreach([INF, -INF, 10e300, -10e300, NAN, -NAN] as $var) {
+	try {
+		time_sleep_until($var);
+	} catch (\ValueError $e) {
+		echo $e->getMessage() . PHP_EOL;
+	}
+}
+?>
+--EXPECTF--
+time_sleep_until(): Argument #1 ($timestamp) must be between 0 and %d
+time_sleep_until(): Argument #1 ($timestamp) must be between 0 and %d
+time_sleep_until(): Argument #1 ($timestamp) must be between 0 and %d
+time_sleep_until(): Argument #1 ($timestamp) must be between 0 and %d
+time_sleep_until(): Argument #1 ($timestamp) must be between 0 and %d
+time_sleep_until(): Argument #1 ($timestamp) must be between 0 and %d
diff -urpN php-8.3.8/ext/standard/tests/streams/bug60106-001.phpt php-8.3.10/ext/standard/tests/streams/bug60106-001.phpt
--- php-8.3.8/ext/standard/tests/streams/bug60106-001.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/standard/tests/streams/bug60106-001.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,23 @@
+--TEST--
+Bug #60106 (stream_socket_server silently truncates long unix socket paths)
+--SKIPIF--
+<?php
+if( substr(PHP_OS, 0, 3) == "WIN" )
+  die("skip. Do not run on Windows");
+?>
+--FILE--
+<?php
+error_reporting(E_ALL | E_NOTICE);
+$socket_file = "/tmp/" . str_repeat("a", 512);
+function get_truncated_socket_filename($errno, $errmsg, $file, $line) {
+    global $socket_file;
+    echo $errmsg, "\n";
+    preg_match("#maximum allowed length of (\d+) bytes#", $errmsg, $matches);
+    $socket_file = substr($socket_file, 0, intval($matches[1]));
+}
+set_error_handler("get_truncated_socket_filename", E_NOTICE);
+stream_socket_server("unix://" . $socket_file);
+unlink($socket_file);
+?>
+--EXPECTF--
+stream_socket_server(): socket path exceeded the maximum allowed length of %d bytes and was truncated
diff -urpN php-8.3.8/ext/standard/tests/streams/bug60106-002.phpt php-8.3.10/ext/standard/tests/streams/bug60106-002.phpt
--- php-8.3.8/ext/standard/tests/streams/bug60106-002.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/standard/tests/streams/bug60106-002.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,40 @@
+--TEST--
+Bug #60106 (stream_socket_server with abstract unix socket paths)
+--SKIPIF--
+<?php
+if (PHP_OS != "Linux") die("skip Only for Linux systems");
+?>
+--FILE--
+<?php
+error_reporting(E_ALL | E_NOTICE);
+
+/* This figures out the max length for normal sockets */
+$socket_file = "/tmp/" . str_repeat("a", 512);
+function get_truncated_socket_filename($errno, $errmsg, $file, $line) {
+    global $socket_file, $max_normal_length;
+    echo $errmsg, "\n";
+    preg_match("#maximum allowed length of (\d+) bytes#", $errmsg, $matches);
+    $max_normal_length = intval($matches[1]);
+    $socket_file = substr($socket_file, 0, $max_normal_length);
+}
+set_error_handler("get_truncated_socket_filename", E_NOTICE);
+
+stream_socket_server("unix://" . $socket_file);
+unlink($socket_file);
+
+/* No we create an abstract one, prefixed with \0 so this should now work */
+$abstract_socket = "\0" . $socket_file;
+stream_socket_server("unix://" . $abstract_socket);
+
+$old_max_length = $max_normal_length;
+
+/* And now one longer, which should fail again */
+$abstract_socket_long = "\0" . $abstract_socket . 'X';
+stream_socket_server("unix://" . $abstract_socket_long);
+
+echo "Allowed length is now one more: ", $max_normal_length == $old_max_length + 1 ? "yes" : "no", "\n";
+?>
+--EXPECTF--
+stream_socket_server(): socket path exceeded the maximum allowed length of %d bytes and was truncated
+stream_socket_server(): socket path exceeded the maximum allowed length of %d bytes and was truncated
+Allowed length is now one more: yes
diff -urpN php-8.3.8/ext/standard/tests/streams/bug60106.phpt php-8.3.10/ext/standard/tests/streams/bug60106.phpt
--- php-8.3.8/ext/standard/tests/streams/bug60106.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/standard/tests/streams/bug60106.phpt	1970-01-01 07:00:00.000000000 +0700
@@ -1,23 +0,0 @@
---TEST--
-Bug#60106 (stream_socket_server silently truncates long unix socket paths)
---SKIPIF--
-<?php
-if( substr(PHP_OS, 0, 3) == "WIN" )
-  die("skip. Do not run on Windows");
-?>
---FILE--
-<?php
-error_reporting(E_ALL | E_NOTICE);
-$socket_file = "/tmp/" . str_repeat("a", 512);
-function get_truncated_socket_filename($errno, $errmsg, $file, $line) {
-    global $socket_file;
-    print_r ($errmsg);
-    preg_match("#maximum allowed length of (\d+) bytes#", $errmsg, $matches);
-    $socket_file = substr($socket_file, 0, intval($matches[1]) - 1);
-}
-set_error_handler("get_truncated_socket_filename", E_NOTICE);
-stream_socket_server("unix://" . $socket_file);
-unlink($socket_file);
-?>
---EXPECTF--
-stream_socket_server(): socket path exceeded the maximum allowed length of %d bytes and was truncated
diff -urpN php-8.3.8/ext/standard/tests/streams/bug74090.phpt php-8.3.10/ext/standard/tests/streams/bug74090.phpt
--- php-8.3.8/ext/standard/tests/streams/bug74090.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/standard/tests/streams/bug74090.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -21,8 +21,14 @@ $data = base64_decode("1oIBAAABAAAAAAAAB
 $fd = stream_socket_client("udp://localhost:$port", $errno, $errstr, 0, STREAM_CLIENT_CONNECT | STREAM_CLIENT_ASYNC_CONNECT);
 stream_set_blocking($fd, 0);
 stream_socket_sendto($fd, $data);
+$read = array($server);
+$write = null;
+$exc = null;
+if (stream_select($read, $write, $exc, 0, 250000) === false) die ("stream_select timeout");
 stream_socket_recvfrom($server, 1, 0, $peer);
 stream_socket_sendto($server, $data, 0, $peer);
+$read = array($fd);
+if (stream_select($read, $write, $exc, 0, 250000) === false) die ("stream_select timeout");
 $ret = stream_get_contents($fd, 65565);
 var_dump(strlen($ret) > 0);
 stream_socket_shutdown($fd, STREAM_SHUT_RDWR);
diff -urpN php-8.3.8/ext/standard/tests/streams/gh14930.phpt php-8.3.10/ext/standard/tests/streams/gh14930.phpt
--- php-8.3.8/ext/standard/tests/streams/gh14930.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/standard/tests/streams/gh14930.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,27 @@
+--TEST--
+GH-14930: Custom stream wrapper dir_readdir output truncated to 255 characters in PHP 8.3
+--FILE--
+<?php
+
+class DummyWrapper
+{
+    public $context;
+
+    public function dir_opendir($url, $options)
+    {
+        return true;
+    }
+
+    public function dir_readdir()
+    {
+        return 'very-long-filename-ieNoquiaC6ijeiy9beejaiphoriejo2cheehooGou8uhoh7eh0gefahyuQuohd7eec9auso9eeFah2Maedohsemi1eetoo5fo5biePh5eephai7SiuguipouLeemequ2oope9aigoQu5efak2aLeri9ithaiJ9eew3dianaiHoo1aexaighiitee6geghiequ5nohhiikahwee8ohk2Soip2Aikeithohdeitiedeiku7DiTh2eep3deitiedeiku7DiTh2ee.txt';
+    }
+}
+
+stream_wrapper_register('dummy', DummyWrapper::class);
+
+$dh = opendir('dummy://', stream_context_create());
+var_dump(readdir($dh));
+?>
+--EXPECT--
+string(288) "very-long-filename-ieNoquiaC6ijeiy9beejaiphoriejo2cheehooGou8uhoh7eh0gefahyuQuohd7eec9auso9eeFah2Maedohsemi1eetoo5fo5biePh5eephai7SiuguipouLeemequ2oope9aigoQu5efak2aLeri9ithaiJ9eew3dianaiHoo1aexaighiitee6geghiequ5nohhiikahwee8ohk2Soip2Aikeithohdeitiedeiku7DiTh2eep3deitiedeiku7DiTh2ee.txt"
diff -urpN php-8.3.8/ext/standard/tests/strings/chunk_split_variation1_32bit.phpt php-8.3.10/ext/standard/tests/strings/chunk_split_variation1_32bit.phpt
--- php-8.3.8/ext/standard/tests/strings/chunk_split_variation1_32bit.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/standard/tests/strings/chunk_split_variation1_32bit.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -17,4 +17,4 @@ var_dump(chunk_split($a,$b,$c));
 --EXPECTF--
 *** Testing chunk_split() : unexpected large 'end' string argument variation 1 ***
 
-Fatal error: %rAllowed memory size of %d bytes exhausted%s\(tried to allocate %d bytes\)|Possible integer overflow in memory allocation \(4294901777 \+ 2097152\)%r in %s on line %d
+Fatal error: %rAllowed memory size of %d bytes exhausted%s\(tried to allocate %d bytes\)|Possible integer overflow in memory allocation \(4294901777 \+ %d\)%r in %s on line %d
diff -urpN php-8.3.8/ext/standard/tests/strings/wordwrap_memory_limit.phpt php-8.3.10/ext/standard/tests/strings/wordwrap_memory_limit.phpt
--- php-8.3.8/ext/standard/tests/strings/wordwrap_memory_limit.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/standard/tests/strings/wordwrap_memory_limit.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -2,7 +2,7 @@
 No overflow should occur during the memory_limit check for wordwrap()
 --SKIPIF--
 <?php
-if (substr(PHP_OS, 0, 3) == 'WIN' && PHP_INT_SIZE == 4) die("skip this test is not for 32bit Windows platforms");
+if (PHP_INT_SIZE == 4) die("skip this test is not for 32bit platforms");
 if (getenv("USE_ZEND_ALLOC") === "0") die("skip Zend MM disabled");
 ?>
 --INI--
diff -urpN php-8.3.8/ext/standard/tests/strings/wordwrap_memory_limit_32bit.phpt php-8.3.10/ext/standard/tests/strings/wordwrap_memory_limit_32bit.phpt
--- php-8.3.8/ext/standard/tests/strings/wordwrap_memory_limit_32bit.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/standard/tests/strings/wordwrap_memory_limit_32bit.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,19 @@
+--TEST--
+No overflow should occur during the memory_limit check for wordwrap()
+--SKIPIF--
+<?php
+if (PHP_INT_SIZE != 4) die("skip this test is for 32bit platforms only");
+if (getenv("USE_ZEND_ALLOC") === "0") die("skip Zend MM disabled");
+?>
+--INI--
+memory_limit=128M
+--FILE--
+<?php
+
+$str = str_repeat('x', 65534);
+$str2 = str_repeat('x', 65535);
+wordwrap($str, 1, $str2);
+
+?>
+--EXPECTF--
+Fatal error: %rAllowed memory size of %d bytes exhausted%s\(tried to allocate %d bytes\)|Possible integer overflow in memory allocation \(4294901777 \+ %d\)%r in %s on line %d
diff -urpN php-8.3.8/ext/standard/tests/strings/wordwrap_memory_limit_win32.phpt php-8.3.10/ext/standard/tests/strings/wordwrap_memory_limit_win32.phpt
--- php-8.3.8/ext/standard/tests/strings/wordwrap_memory_limit_win32.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/standard/tests/strings/wordwrap_memory_limit_win32.phpt	1970-01-01 07:00:00.000000000 +0700
@@ -1,19 +0,0 @@
---TEST--
-No overflow should occur during the memory_limit check for wordwrap()
---SKIPIF--
-<?php
-if (substr(PHP_OS, 0, 3) != 'WIN' || PHP_INT_SIZE != 4) die("skip this test is for 32bit Windows platforms only");
-if (getenv("USE_ZEND_ALLOC") === "0") die("skip Zend MM disabled");
-?>
---INI--
-memory_limit=128M
---FILE--
-<?php
-
-$str = str_repeat('x', 65534);
-$str2 = str_repeat('x', 65535);
-wordwrap($str, 1, $str2);
-
-?>
---EXPECTF--
-Fatal error: Possible integer overflow in memory allocation (4294901777 + %d) in %s on line %d
diff -urpN php-8.3.8/ext/tidy/tests/parsing_file_too_large.phpt php-8.3.10/ext/tidy/tests/parsing_file_too_large.phpt
--- php-8.3.8/ext/tidy/tests/parsing_file_too_large.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/tidy/tests/parsing_file_too_large.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -47,6 +47,12 @@ try {
 } catch (\Throwable $e) {
     echo $e::class, ': ', $e->getMessage(), PHP_EOL;
 }
+
+try {
+    tidy_repair_file($path);
+} catch (\Throwable $e) {
+    echo $e::class, ': ', $e->getMessage(), PHP_EOL;
+}
 ?>
 --CLEAN--
 <?php
@@ -58,3 +64,4 @@ int(0)
 ValueError: Input string is too long
 ValueError: Input string is too long
 ValueError: Input string is too long
+ValueError: tidy_repair_file(): Argument #1 ($filename) Input string is too long
diff -urpN php-8.3.8/ext/tidy/tidy.c php-8.3.10/ext/tidy/tidy.c
--- php-8.3.8/ext/tidy/tidy.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/tidy/tidy.c	2024-07-30 20:44:37.000000000 +0700
@@ -304,7 +304,12 @@ static void php_tidy_quick_repair(INTERN
 	}
 
 	if (ZEND_SIZE_T_UINT_OVFL(ZSTR_LEN(data))) {
-		zend_argument_value_error(1, "is too long");
+		if (is_file) {
+			zend_string_release_ex(data, false);
+			zend_argument_value_error(1, "Input string is too long");
+		} else {
+			zend_argument_value_error(1, "is too long");
+		}
 		RETURN_THROWS();
 	}
 
diff -urpN php-8.3.8/ext/xml/compat.c php-8.3.10/ext/xml/compat.c
--- php-8.3.8/ext/xml/compat.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/xml/compat.c	2024-07-30 20:44:37.000000000 +0700
@@ -375,7 +375,7 @@ _get_entity(void *user, const xmlChar *n
 		if (ret == NULL)
 			ret = xmlGetDocEntity(parser->parser->myDoc, name);
 
-		if (ret == NULL || (parser->parser->instate != XML_PARSER_ENTITY_VALUE && parser->parser->instate != XML_PARSER_ATTRIBUTE_VALUE)) {
+		if (ret == NULL || parser->parser->instate == XML_PARSER_CONTENT) {
 			if (ret == NULL || ret->etype == XML_INTERNAL_GENERAL_ENTITY || ret->etype == XML_INTERNAL_PARAMETER_ENTITY || ret->etype == XML_INTERNAL_PREDEFINED_ENTITY) {
 				/* Predefined entities will expand unless no cdata handler is present */
 				if (parser->h_default && ! (ret && ret->etype == XML_INTERNAL_PREDEFINED_ENTITY && parser->h_cdata)) {
@@ -471,13 +471,13 @@ XML_ParserCreate_MM(const XML_Char *enco
 	}
 
 	php_libxml_sanitize_parse_ctxt_options(parser->parser);
-	xmlCtxtUseOptions(parser->parser, XML_PARSE_OLDSAX);
+	xmlCtxtUseOptions(parser->parser, XML_PARSE_OLDSAX | XML_PARSE_NOENT);
 
-	parser->parser->replaceEntities = 1;
 	parser->parser->wellFormed = 0;
 	if (sep != NULL) {
+		/* Note: sax2 flag will be set due to the magic number in `initialized` in php_xml_compat_handlers */
+		ZEND_ASSERT(parser->parser->sax->initialized == XML_SAX2_MAGIC);
 		parser->use_namespace = 1;
-		parser->parser->sax2 = 1;
 		parser->_ns_separator = xmlStrdup(sep);
 	} else {
 		/* Reset flag as XML_SAX2_MAGIC is needed for xmlCreatePushParserCtxt
@@ -563,10 +563,14 @@ XML_SetEndNamespaceDeclHandler(XML_Parse
 PHP_XML_API int
 XML_Parse(XML_Parser parser, const XML_Char *data, int data_len, int is_final)
 {
-	int error;
+	int error = xmlParseChunk(parser->parser, (char *) data, data_len, is_final);
 
-	error = xmlParseChunk(parser->parser, (char *) data, data_len, is_final);
-	return !error && parser->parser->lastError.level <= XML_ERR_WARNING;
+	if (!error) {
+		const xmlError *error_data = xmlCtxtGetLastError(parser->parser);
+		return !error_data || error_data->level <= XML_ERR_WARNING;
+	}
+
+	return 0;
 }
 
 PHP_XML_API int
@@ -705,8 +709,21 @@ XML_GetCurrentColumnNumber(XML_Parser pa
 PHP_XML_API int
 XML_GetCurrentByteIndex(XML_Parser parser)
 {
-	return parser->parser->input->consumed +
-			(parser->parser->input->cur - parser->parser->input->base);
+	/* We have to temporarily disable the encoder to satisfy the note from the manual:
+	 * "This function returns byte index according to UTF-8 encoded text disregarding if input is in another encoding."
+	 * Although that should probably be corrected at one point? (TODO) */
+	xmlCharEncodingHandlerPtr encoder = NULL;
+	xmlParserInputPtr input = parser->parser->input;
+	if (input->buf) {
+		encoder = input->buf->encoder;
+		input->buf->encoder = NULL;
+	}
+	long result = xmlByteConsumed(parser->parser);
+	if (encoder) {
+		input->buf->encoder = encoder;
+	}
+	/* TODO: at one point this should return long probably to make sure that files greater than 2 GiB are handled correctly. */
+	return (int) result;
 }
 
 PHP_XML_API int
@@ -714,8 +731,7 @@ XML_GetCurrentByteCount(XML_Parser parse
 {
 	/* WARNING: this is identical to ByteIndex; it should probably
 	 * be different */
-	return parser->parser->input->consumed +
-			(parser->parser->input->cur - parser->parser->input->base);
+	return XML_GetCurrentByteIndex(parser);
 }
 
 PHP_XML_API const XML_Char *XML_ExpatVersion(void)
diff -urpN php-8.3.8/ext/xml/tests/gh14834.phpt php-8.3.10/ext/xml/tests/gh14834.phpt
--- php-8.3.8/ext/xml/tests/gh14834.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/xml/tests/gh14834.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,34 @@
+--TEST--
+GH-14834 (Error installing PHP when --with-pear is used)
+--EXTENSIONS--
+xml
+--SKIPIF--
+<?php
+require __DIR__ . '/libxml_expat_skipif.inc';
+skipif(want_expat: false);
+?>
+--FILE--
+<?php
+$xml = <<<XML
+<?xml version="1.0" encoding="UTF-8"?>
+<!DOCTYPE root [
+    <!ENTITY foo "ent">
+]>
+<root>
+  <element hint="hello&apos;world">&foo;<![CDATA[ &amp; ]]><?x &amp; ?></element>
+</root>
+XML;
+
+$parser = xml_parser_create();
+xml_set_character_data_handler($parser, function($_, $data) {
+    var_dump($data);
+});
+xml_parse($parser, $xml, true);
+?>
+--EXPECT--
+string(3) "
+  "
+string(3) "ent"
+string(7) " &amp; "
+string(1) "
+"
diff -urpN php-8.3.8/ext/xmlwriter/php_xmlwriter.c php-8.3.10/ext/xmlwriter/php_xmlwriter.c
--- php-8.3.8/ext/xmlwriter/php_xmlwriter.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/xmlwriter/php_xmlwriter.c	2024-07-30 20:44:37.000000000 +0700
@@ -900,7 +900,8 @@ static void php_xmlwriter_flush(INTERNAL
 	}
 	output_bytes = xmlTextWriterFlush(ptr);
 	if (buffer) {
-		RETVAL_STRING((char *) buffer->content);
+		const xmlChar *content = xmlBufferContent(buffer);
+		RETVAL_STRING((const char *) content);
 		if (empty) {
 			xmlBufferEmpty(buffer);
 		}
diff -urpN php-8.3.8/ext/xsl/tests/skip_upstream_issue113.inc php-8.3.10/ext/xsl/tests/skip_upstream_issue113.inc
--- php-8.3.8/ext/xsl/tests/skip_upstream_issue113.inc	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/xsl/tests/skip_upstream_issue113.inc	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,5 @@
+<?php
+if ((LIBXSLT_VERSION === 10140 || LIBXSLT_VERSION === 10141)
+    && LIBXML_VERSION < 21300) {
+    die('skip upstream regression https://gitlab.gnome.org/GNOME/libxslt/-/issues/113');
+}
diff -urpN php-8.3.8/ext/xsl/tests/xslt010_gt10129.phpt php-8.3.10/ext/xsl/tests/xslt010_gt10129.phpt
--- php-8.3.8/ext/xsl/tests/xslt010_gt10129.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/xsl/tests/xslt010_gt10129.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -7,6 +7,7 @@ xsl
 $proc = new xsltprocessor;
 if (!$proc->hasExsltSupport()) die('skip EXSLT support not available');
 if (LIBXSLT_VERSION < 10130) die('skip too old libxsl');
+require __DIR__.'/skip_upstream_issue113.inc';
 ?>
 --FILE--
 <?php
diff -urpN php-8.3.8/ext/zend_test/test.c php-8.3.10/ext/zend_test/test.c
--- php-8.3.8/ext/zend_test/test.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/zend_test/test.c	2024-07-30 20:44:37.000000000 +0700
@@ -750,6 +750,49 @@ static ZEND_FUNCTION(zend_test_set_fmode
 }
 #endif
 
+static ZEND_FUNCTION(zend_test_cast_fread)
+{
+	zval *stream_zv;
+	php_stream *stream;
+	FILE *fp;
+
+	ZEND_PARSE_PARAMETERS_START(1, 1)
+		Z_PARAM_RESOURCE(stream_zv);
+	ZEND_PARSE_PARAMETERS_END();
+
+	php_stream_from_zval(stream, stream_zv);
+
+	if (php_stream_cast(stream, PHP_STREAM_AS_STDIO, (void *) &fp, REPORT_ERRORS) == FAILURE) {
+		return;
+	}
+
+	size_t size = 10240; /* Must be large enough to trigger the issue */
+	char *buf = malloc(size);
+	bool bail = false;
+	zend_try {
+		(void) !fread(buf, 1, size, fp);
+	} zend_catch {
+		bail = true;
+	} zend_end_try();
+
+	free(buf);
+
+	if (bail) {
+		zend_bailout();
+	}
+}
+
+static ZEND_FUNCTION(zend_test_is_zend_ptr)
+{
+	zend_long addr;
+
+	ZEND_PARSE_PARAMETERS_START(1, 1)
+		Z_PARAM_LONG(addr);
+	ZEND_PARSE_PARAMETERS_END();
+
+	RETURN_BOOL(is_zend_ptr((void*)addr));
+}
+
 static zend_object *zend_test_class_new(zend_class_entry *class_type)
 {
 	zend_object *obj = zend_objects_new(class_type);
diff -urpN php-8.3.8/ext/zend_test/test.stub.php php-8.3.10/ext/zend_test/test.stub.php
--- php-8.3.8/ext/zend_test/test.stub.php	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/zend_test/test.stub.php	2024-07-30 20:44:37.000000000 +0700
@@ -250,6 +250,11 @@ function zend_test_override_libxml_globa
 #if defined(PHP_WIN32)
     function zend_test_set_fmode(bool $binary): void {}
 #endif
+
+    /** @param resource $stream */
+    function zend_test_cast_fread($stream): void {}
+
+    function zend_test_is_zend_ptr(int $addr): bool {}
 }
 
 namespace ZendTestNS {
diff -urpN php-8.3.8/ext/zend_test/test_arginfo.h php-8.3.10/ext/zend_test/test_arginfo.h
--- php-8.3.8/ext/zend_test/test_arginfo.h	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/zend_test/test_arginfo.h	2024-07-30 20:44:37.000000000 +0700
@@ -1,5 +1,5 @@
 /* This is a generated file, edit the .stub.php file instead.
- * Stub hash: 4d9128205072443957f6229e09153a04c59cce74 */
+ * Stub hash: 127c7004a014495353135df6d0b6658446ae040b */
 
 ZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_zend_test_array_return, 0, 0, IS_ARRAY, 0)
 ZEND_END_ARG_INFO()
@@ -150,6 +150,14 @@ ZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(
 ZEND_END_ARG_INFO()
 #endif
 
+ZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_zend_test_cast_fread, 0, 1, IS_VOID, 0)
+	ZEND_ARG_INFO(0, stream)
+ZEND_END_ARG_INFO()
+
+ZEND_BEGIN_ARG_WITH_RETURN_TYPE_INFO_EX(arginfo_zend_test_is_zend_ptr, 0, 1, _IS_BOOL, 0)
+	ZEND_ARG_TYPE_INFO(0, addr, IS_LONG, 0)
+ZEND_END_ARG_INFO()
+
 #define arginfo_ZendTestNS2_namespaced_func arginfo_zend_test_is_pcre_bundled
 
 #define arginfo_ZendTestNS2_namespaced_deprecated_func arginfo_zend_test_void_return
@@ -275,6 +283,8 @@ static ZEND_FUNCTION(zend_test_is_pcre_b
 #if defined(PHP_WIN32)
 static ZEND_FUNCTION(zend_test_set_fmode);
 #endif
+static ZEND_FUNCTION(zend_test_cast_fread);
+static ZEND_FUNCTION(zend_test_is_zend_ptr);
 static ZEND_FUNCTION(ZendTestNS2_namespaced_func);
 static ZEND_FUNCTION(ZendTestNS2_namespaced_deprecated_func);
 static ZEND_FUNCTION(ZendTestNS2_ZendSubNS_namespaced_func);
@@ -351,6 +361,8 @@ static const zend_function_entry ext_fun
 #if defined(PHP_WIN32)
 	ZEND_FE(zend_test_set_fmode, arginfo_zend_test_set_fmode)
 #endif
+	ZEND_FE(zend_test_cast_fread, arginfo_zend_test_cast_fread)
+	ZEND_FE(zend_test_is_zend_ptr, arginfo_zend_test_is_zend_ptr)
 	ZEND_NS_FALIAS("ZendTestNS2", namespaced_func, ZendTestNS2_namespaced_func, arginfo_ZendTestNS2_namespaced_func)
 	ZEND_NS_DEP_FALIAS("ZendTestNS2", namespaced_deprecated_func, ZendTestNS2_namespaced_deprecated_func, arginfo_ZendTestNS2_namespaced_deprecated_func)
 	ZEND_NS_FALIAS("ZendTestNS2", namespaced_aliased_func, zend_test_void_return, arginfo_ZendTestNS2_namespaced_aliased_func)
diff -urpN php-8.3.8/ext/zend_test/tests/gh11078.phpt php-8.3.10/ext/zend_test/tests/gh11078.phpt
--- php-8.3.8/ext/zend_test/tests/gh11078.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/zend_test/tests/gh11078.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,34 @@
+--TEST--
+GH-11078 (PHP Fatal error triggers pointer being freed was not allocated and malloc: double free for ptr errors)
+--EXTENSIONS--
+zend_test
+--SKIPIF--
+<?php
+if (getenv('USE_ZEND_ALLOC') === '0') die('skip Zend MM disabled');
+if (PHP_OS_FAMILY === 'Windows') die('skip Windows does not support generic stream casting');
+?>
+--FILE--
+<?php
+
+const MEM = 32 * 1024 * 1024;
+ini_set('memory_limit', MEM);
+
+class CrashingFifo {
+    public $context;
+
+    function stream_open($path, $mode, $options, &$opened_path): bool {
+        return true;
+    }
+
+    function stream_read(int $count): false|string|null {
+        return str_repeat('x', MEM);
+    }
+}
+
+stream_register_wrapper('fifo', CrashingFifo::class);
+$readStream = fopen('fifo://1', 'r');
+zend_test_cast_fread($readStream);
+
+?>
+--EXPECTF--
+Fatal error: Allowed memory size of %d bytes exhausted %s
diff -urpN php-8.3.8/ext/zend_test/tests/gh14741.phpt php-8.3.10/ext/zend_test/tests/gh14741.phpt
--- php-8.3.8/ext/zend_test/tests/gh14741.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/ext/zend_test/tests/gh14741.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,17 @@
+--TEST--
+GH-14741 (Segmentation fault in Zend/zend_types.h)
+--EXTENSIONS--
+zend_test
+--FILE--
+<?php
+$subject = new \ZendTest\Iterators\TraversableTest();
+$it = $subject->getIterator();
+try {
+    clone $it;
+} catch (Error $e) {
+    echo $e->getMessage(), "\n";
+}
+?>
+--EXPECT--
+Trying to clone an uncloneable object of class InternalIterator
+TraversableTest::drop
diff -urpN php-8.3.8/ext/zlib/tests/gzfile_basic2.phpt php-8.3.10/ext/zlib/tests/gzfile_basic2.phpt
--- php-8.3.8/ext/zlib/tests/gzfile_basic2.phpt	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/ext/zlib/tests/gzfile_basic2.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -9,7 +9,7 @@ hello world
 is a very common test
 for all languages
 EOT;
-$dirname = 'gzfile_temp';
+$dirname = 'gzfile_temp2';
 $filename = $dirname.'/gzfile_basic2.txt';
 mkdir($dirname);
 $h = fopen($filename, 'w');
diff -urpN php-8.3.8/main/fopen_wrappers.c php-8.3.10/main/fopen_wrappers.c
--- php-8.3.8/main/fopen_wrappers.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/main/fopen_wrappers.c	2024-07-30 20:44:37.000000000 +0700
@@ -374,26 +374,38 @@ PHPAPI int php_fopen_primary_script(zend
 
 		if (s) {			/* if there is no path name after the file, do not bother */
 			char user[32];			/* to try open the directory */
+
+			length = s - (path_info + 2);
+			if (length > sizeof(user) - 1) {
+				length = sizeof(user) - 1;
+			}
+			memcpy(user, path_info + 2, length);
+			user[length] = '\0';
+
 			struct passwd *pw;
 #if defined(ZTS) && defined(HAVE_GETPWNAM_R) && defined(_SC_GETPW_R_SIZE_MAX)
 			struct passwd pwstruc;
 			long pwbuflen = sysconf(_SC_GETPW_R_SIZE_MAX);
 			char *pwbuf;
+			int err;
 
 			if (pwbuflen < 1) {
-				return FAILURE;
+				pwbuflen = 1024;
 			}
-
+# if ZEND_DEBUG
+			/* Test retry logic */
+			pwbuflen = 1;
+# endif
 			pwbuf = emalloc(pwbuflen);
-#endif
-			length = s - (path_info + 2);
-			if (length > sizeof(user) - 1) {
-				length = sizeof(user) - 1;
-			}
-			memcpy(user, path_info + 2, length);
-			user[length] = '\0';
-#if defined(ZTS) && defined(HAVE_GETPWNAM_R) && defined(_SC_GETPW_R_SIZE_MAX)
-			if (getpwnam_r(user, &pwstruc, pwbuf, pwbuflen, &pw)) {
+
+try_again:
+			err = getpwnam_r(user, &pwstruc, pwbuf, pwbuflen, &pw);
+			if (err) {
+				if (err == ERANGE) {
+					pwbuflen *= 2;
+					pwbuf = erealloc(pwbuf, pwbuflen);
+					goto try_again;
+				}
 				efree(pwbuf);
 				return FAILURE;
 			}
diff -urpN php-8.3.8/main/main.c php-8.3.10/main/main.c
--- php-8.3.8/main/main.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/main/main.c	2024-07-30 20:44:37.000000000 +0700
@@ -1471,12 +1471,25 @@ PHPAPI char *php_get_current_user(void)
 		struct passwd *retpwptr = NULL;
 		int pwbuflen = sysconf(_SC_GETPW_R_SIZE_MAX);
 		char *pwbuf;
+		int err;
 
 		if (pwbuflen < 1) {
-			return "";
+			pwbuflen = 1024;
 		}
+# if ZEND_DEBUG
+		/* Test retry logic */
+		pwbuflen = 1;
+# endif
 		pwbuf = emalloc(pwbuflen);
-		if (getpwuid_r(pstat->st_uid, &_pw, pwbuf, pwbuflen, &retpwptr) != 0) {
+
+try_again:
+		err = getpwuid_r(pstat->st_uid, &_pw, pwbuf, pwbuflen, &retpwptr);
+		if (err != 0) {
+			if (err == ERANGE) {
+				pwbuflen *= 2;
+				pwbuf = erealloc(pwbuf, pwbuflen);
+				goto try_again;
+			}
 			efree(pwbuf);
 			return "";
 		}
diff -urpN php-8.3.8/main/output.c php-8.3.10/main/output.c
--- php-8.3.8/main/output.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/main/output.c	2024-07-30 20:44:37.000000000 +0700
@@ -360,7 +360,11 @@ PHPAPI int php_output_get_level(void)
 PHPAPI int php_output_get_contents(zval *p)
 {
 	if (OG(active)) {
-		ZVAL_STRINGL(p, OG(active)->buffer.data, OG(active)->buffer.used);
+		if (OG(active)->buffer.used) {
+			ZVAL_STRINGL(p, OG(active)->buffer.data, OG(active)->buffer.used);
+		} else {
+			ZVAL_EMPTY_STRING(p);
+		}
 		return SUCCESS;
 	} else {
 		ZVAL_NULL(p);
diff -urpN php-8.3.8/main/php_streams.h php-8.3.10/main/php_streams.h
--- php-8.3.8/main/php_streams.h	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/main/php_streams.h	2024-07-30 20:44:37.000000000 +0700
@@ -107,11 +107,7 @@ typedef struct _php_stream_statbuf {
 } php_stream_statbuf;
 
 typedef struct _php_stream_dirent {
-#ifdef NAME_MAX
-	char d_name[NAME_MAX + 1];
-#else
 	char d_name[MAXPATHLEN];
-#endif
 	unsigned char d_type;
 } php_stream_dirent;
 
diff -urpN php-8.3.8/main/php_version.h php-8.3.10/main/php_version.h
--- php-8.3.8/main/php_version.h	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/main/php_version.h	2024-07-30 20:44:37.000000000 +0700
@@ -2,7 +2,7 @@
 /* edit configure.ac to change version number */
 #define PHP_MAJOR_VERSION 8
 #define PHP_MINOR_VERSION 3
-#define PHP_RELEASE_VERSION 8
+#define PHP_RELEASE_VERSION 10
 #define PHP_EXTRA_VERSION ""
-#define PHP_VERSION "8.3.8"
-#define PHP_VERSION_ID 80308
+#define PHP_VERSION "8.3.10"
+#define PHP_VERSION_ID 80310
diff -urpN php-8.3.8/main/rfc1867.c php-8.3.10/main/rfc1867.c
--- php-8.3.8/main/rfc1867.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/main/rfc1867.c	2024-07-30 20:44:37.000000000 +0700
@@ -174,6 +174,7 @@ PHPAPI void destroy_uploaded_files_hash(
 	} ZEND_HASH_FOREACH_END();
 	zend_hash_destroy(SG(rfc1867_uploaded_files));
 	FREE_HASHTABLE(SG(rfc1867_uploaded_files));
+	SG(rfc1867_uploaded_files) = NULL;
 }
 /* }}} */
 
@@ -1134,7 +1135,7 @@ SAPI_API SAPI_POST_HANDLER_FUNC(rfc1867_
 			register_http_post_files_variable(lbuf, s, &PG(http_globals)[TRACK_VARS_FILES], 0);
 			s = NULL;
 
-			/* Add full path of supplied file for folder uploads via 
+			/* Add full path of supplied file for folder uploads via
 			 * <input type="file" name="files" multiple webkitdirectory>
 			 */
 			/* Add $foo[full_path] */
diff -urpN php-8.3.8/main/streams/cast.c php-8.3.10/main/streams/cast.c
--- php-8.3.8/main/streams/cast.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/main/streams/cast.c	2024-07-30 20:44:37.000000000 +0700
@@ -46,7 +46,14 @@ typedef struct {
 
 FILE *fopencookie(void *cookie, const char *mode, COOKIE_IO_FUNCTIONS_T *funcs)
 {
-	return funopen(cookie, funcs->reader, funcs->writer, funcs->seeker, funcs->closer);
+	FILE *file = funopen(cookie, funcs->reader, funcs->writer, funcs->seeker, funcs->closer);
+	if (file) {
+		/* Buffering of FILE handles is stateful.
+		 * A bailout during these can corrupt the state of the FILE handle
+		 * and cause memory corruption errors. See GH-11078. */
+		setvbuf(file, NULL, _IONBF, 0);
+	}
+	return file;
 }
 # define HAVE_FOPENCOOKIE 1
 # define PHP_EMULATE_FOPENCOOKIE 1
diff -urpN php-8.3.8/main/streams/xp_socket.c php-8.3.10/main/streams/xp_socket.c
--- php-8.3.8/main/streams/xp_socket.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/main/streams/xp_socket.c	2024-07-30 20:44:37.000000000 +0700
@@ -586,18 +586,23 @@ static inline int parse_unix_address(php
 	memset(unix_addr, 0, sizeof(*unix_addr));
 	unix_addr->sun_family = AF_UNIX;
 
+	/* Abstract namespace does not need to be NUL-terminated, while path-based
+	 * sockets should be. */
+	bool is_abstract_ns = xparam->inputs.namelen > 0 && xparam->inputs.name[0] == '\0';
+	unsigned long max_length = is_abstract_ns ? sizeof(unix_addr->sun_path) : sizeof(unix_addr->sun_path) - 1;
+
 	/* we need to be binary safe on systems that support an abstract
 	 * namespace */
-	if (xparam->inputs.namelen >= sizeof(unix_addr->sun_path)) {
+	if (xparam->inputs.namelen > max_length) {
 		/* On linux, when the path begins with a NUL byte we are
 		 * referring to an abstract namespace.  In theory we should
 		 * allow an extra byte below, since we don't need the NULL.
 		 * BUT, to get into this branch of code, the name is too long,
 		 * so we don't care. */
-		xparam->inputs.namelen = sizeof(unix_addr->sun_path) - 1;
+		xparam->inputs.namelen = max_length;
 		php_error_docref(NULL, E_NOTICE,
 			"socket path exceeded the maximum allowed length of %lu bytes "
-			"and was truncated", (unsigned long)sizeof(unix_addr->sun_path));
+			"and was truncated", max_length);
 	}
 
 	memcpy(unix_addr->sun_path, xparam->inputs.name, xparam->inputs.namelen);
diff -urpN php-8.3.8/sapi/fpm/fpm/fpm_conf.c php-8.3.10/sapi/fpm/fpm/fpm_conf.c
--- php-8.3.8/sapi/fpm/fpm/fpm_conf.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/sapi/fpm/fpm/fpm_conf.c	2024-07-30 20:44:37.000000000 +0700
@@ -763,6 +763,8 @@ static int fpm_worker_pool_shared_status
 	FPM_WPC_STR_CP(config, shared_config, user);
 	FPM_WPC_STR_CP(config, shared_config, group);
 	FPM_WPC_STR_CP(config, shared_config, pm_status_path);
+	FPM_WPC_STR_CP(config, shared_config, ping_path);
+	FPM_WPC_STR_CP(config, shared_config, ping_response);
 
 	fpm_conf_apply_kv_array_to_kv_array(shared_config->php_values, (char *)config + WPO(php_values));
 	fpm_conf_apply_kv_array_to_kv_array(shared_config->php_admin_values, (char *)config + WPO(php_admin_values));
diff -urpN php-8.3.8/sapi/fpm/tests/status-ping.phpt php-8.3.10/sapi/fpm/tests/status-ping.phpt
--- php-8.3.8/sapi/fpm/tests/status-ping.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/sapi/fpm/tests/status-ping.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,40 @@
+--TEST--
+FPM: Ping on the status invisible pool
+--SKIPIF--
+<?php include "skipif.inc"; ?>
+--FILE--
+<?php
+
+require_once "tester.inc";
+
+$cfg = <<<EOT
+[global]
+error_log = {{FILE:LOG}}
+[unconfined]
+listen = {{ADDR}}
+pm = static
+pm.max_children = 1
+pm.status_listen = {{ADDR[status]}}
+pm.status_path = /status
+ping.path = /ping
+ping.response = pong
+EOT;
+
+$tester = new FPM\Tester($cfg);
+$tester->start();
+$tester->expectLogStartNotices();
+$tester->ping('{{ADDR[status]}}');
+usleep(100000);
+$tester->terminate();
+$tester->expectLogTerminatingNotices();
+$tester->close();
+
+?>
+Done
+--EXPECT--
+Done
+--CLEAN--
+<?php
+require_once "tester.inc";
+FPM\Tester::clean();
+?>
diff -urpN php-8.3.8/sapi/phpdbg/phpdbg.c php-8.3.10/sapi/phpdbg/phpdbg.c
--- php-8.3.8/sapi/phpdbg/phpdbg.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/sapi/phpdbg/phpdbg.c	2024-07-30 20:44:37.000000000 +0700
@@ -229,13 +229,13 @@ static PHP_RINIT_FUNCTION(phpdbg) /* {{{
 
 	if (zend_vm_kind() != ZEND_VM_KIND_HYBRID) {
 		/* phpdbg cannot work JIT-ed code */
-		zend_string *key = zend_string_init(ZEND_STRL("opcache.jit"), 1);
-		zend_string *value = zend_string_init(ZEND_STRL("off"), 1);
+		zend_string *key = zend_string_init(ZEND_STRL("opcache.jit"), false);
+		zend_string *value = zend_string_init(ZEND_STRL("off"), false);
 
-		zend_alter_ini_entry(key, value, ZEND_INI_SYSTEM, ZEND_INI_STAGE_STARTUP);
+		zend_alter_ini_entry_ex(key, value, ZEND_INI_SYSTEM, ZEND_INI_STAGE_STARTUP, false);
 
-		zend_string_release(key);
-		zend_string_release(value);
+		zend_string_release_ex(key, false);
+		zend_string_release_ex(value, false);
 	}
 
 	return SUCCESS;
@@ -845,7 +845,7 @@ static void php_sapi_phpdbg_register_var
 
 static inline size_t php_sapi_phpdbg_ub_write(const char *message, size_t length) /* {{{ */
 {
-	return phpdbg_script(P_STDOUT, "%.*s", (int) length, message);
+	return phpdbg_process_print(PHPDBG_G(io)[PHPDBG_STDOUT].fd, P_STDOUT, message, (int) length);
 } /* }}} */
 
 /* beginning of struct, see main/streams/plain_wrapper.c line 111 */
diff -urpN php-8.3.8/sapi/phpdbg/phpdbg_out.c php-8.3.10/sapi/phpdbg/phpdbg_out.c
--- php-8.3.8/sapi/phpdbg/phpdbg_out.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/sapi/phpdbg/phpdbg_out.c	2024-07-30 20:44:37.000000000 +0700
@@ -40,7 +40,7 @@ PHPDBG_API int _phpdbg_asprintf(char **b
 	return ret;
 }
 
-static int phpdbg_process_print(int fd, int type, const char *msg, int msglen) {
+int phpdbg_process_print(int fd, int type, const char *msg, int msglen) {
 	char *msgout = NULL;
 	int msgoutlen = FAILURE;
 
diff -urpN php-8.3.8/sapi/phpdbg/phpdbg_out.h php-8.3.10/sapi/phpdbg/phpdbg_out.h
--- php-8.3.8/sapi/phpdbg/phpdbg_out.h	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/sapi/phpdbg/phpdbg_out.h	2024-07-30 20:44:37.000000000 +0700
@@ -59,6 +59,8 @@ PHPDBG_API void phpdbg_free_err_buf(void
 PHPDBG_API void phpdbg_activate_err_buf(bool active);
 PHPDBG_API int phpdbg_output_err_buf(const char *strfmt, ...);
 
+int phpdbg_process_print(int fd, int type, const char *msg, int msglen);
+
 
 /* {{{ For separation */
 #define SEPARATE "------------------------------------------------" /* }}} */
diff -urpN php-8.3.8/sapi/phpdbg/phpdbg_watch.c php-8.3.10/sapi/phpdbg/phpdbg_watch.c
--- php-8.3.8/sapi/phpdbg/phpdbg_watch.c	2024-06-04 21:53:17.000000000 +0700
+++ php-8.3.10/sapi/phpdbg/phpdbg_watch.c	2024-07-30 20:44:37.000000000 +0700
@@ -315,7 +315,7 @@ void *phpdbg_watchpoint_userfaultfd_thre
 
 	struct uffd_msg fault_msg = {0};
 	while (read(globals->watch_userfaultfd, &fault_msg, sizeof(fault_msg)) == sizeof(fault_msg)) {
-    	void *page = phpdbg_get_page_boundary((char *)(uintptr_t) fault_msg.arg.pagefault.address);
+		void *page = phpdbg_get_page_boundary((char *)(uintptr_t) fault_msg.arg.pagefault.address);
 		zend_hash_index_add_empty_element(globals->watchlist_mem, (zend_ulong) page);
 		struct uffdio_writeprotect unprotect = {
 			.mode = 0,
@@ -668,7 +668,7 @@ void phpdbg_watch_parent_ht(phpdbg_watch
 }
 
 void phpdbg_unwatch_parent_ht(phpdbg_watch_element *element) {
-	if (element->watch->type == WATCH_ON_BUCKET) {
+	if (element->watch && element->watch->type == WATCH_ON_BUCKET) {
 		phpdbg_btree_result *res = phpdbg_btree_find(&PHPDBG_G(watch_HashTables), (zend_ulong) element->parent_container);
 		ZEND_ASSERT(element->parent_container);
 		if (res) {
@@ -969,11 +969,14 @@ void phpdbg_remove_watchpoint(phpdbg_wat
 }
 
 void phpdbg_clean_watch_element(phpdbg_watch_element *element) {
-	HashTable *elements = &element->watch->elements;
 	phpdbg_unwatch_parent_ht(element);
-	zend_hash_del(elements, element->str);
-	if (zend_hash_num_elements(elements) == 0) {
-		phpdbg_remove_watchpoint(element->watch);
+
+	if (element->watch) {
+		HashTable *elements = &element->watch->elements;
+		zend_hash_del(elements, element->str);
+		if (zend_hash_num_elements(elements) == 0) {
+			phpdbg_remove_watchpoint(element->watch);
+		}
 	}
 }
 
Binary files php-8.3.8/sapi/phpdbg/tests/gh10715.phpt and php-8.3.10/sapi/phpdbg/tests/gh10715.phpt differ
diff -urpN php-8.3.8/sapi/phpdbg/tests/gh13681.phpt php-8.3.10/sapi/phpdbg/tests/gh13681.phpt
--- php-8.3.8/sapi/phpdbg/tests/gh13681.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/sapi/phpdbg/tests/gh13681.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,39 @@
+--TEST--
+phpdbg_watch null pointer access
+--CREDITS--
+Yuancheng Jiang
+--SKIPIF--
+<?php
+if (getenv('SKIP_ASAN')) {
+    die("skip intentionally causes segfaults");
+}
+?>
+--FILE--
+<?php
+echo "*** Testing array_multisort() : Testing with anonymous arguments ***\n";
+var_dump(array_multisort(array(1,3,2,4)));
+$xconnect=$GLOBALS[array_rand($GLOBALS)];
+echo "Done\n";
+$a = [];
+$a[0] = 1;
+$a[0] = 2;
+$a = [0 => 3, 1 => 4];
+?>
+--PHPDBG--
+b 6
+r
+w a $a
+c
+q
+--EXPECTF--
+[Successful compilation of %s]
+prompt> [Breakpoint #0 added at %s:%d]
+prompt> *** Testing array_multisort() : Testing with anonymous arguments ***
+bool(true)
+Done
+[Breakpoint #0 at %s:%d, hits: 1]
+>00006: $a = [];
+ 00007: $a[0] = 1;
+ 00008: $a[0] = 2;
+prompt> prompt> [Script ended normally]
+prompt>
diff -urpN php-8.3.8/sapi/phpdbg/tests/gh14553.phpt php-8.3.10/sapi/phpdbg/tests/gh14553.phpt
--- php-8.3.8/sapi/phpdbg/tests/gh14553.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/sapi/phpdbg/tests/gh14553.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,14 @@
+--TEST--
+GH-14553 (Bug in phpdbg8.3 (also 8.1 and 8.2) echo output - trimmed at NULL byte (?))
+--PHPDBG--
+r
+q
+--FILE--
+<?php
+echo "hello\0world";
+?>
+--EXPECTF--
+[Successful compilation of %s]
+prompt> hello%0world
+[Script ended normally]
+prompt>
diff -urpN php-8.3.8/tests/output/gh14808.phpt php-8.3.10/tests/output/gh14808.phpt
--- php-8.3.8/tests/output/gh14808.phpt	1970-01-01 07:00:00.000000000 +0700
+++ php-8.3.10/tests/output/gh14808.phpt	2024-07-30 20:44:37.000000000 +0700
@@ -0,0 +1,15 @@
+--TEST--
+GH-14808 (Unexpected null pointer in Zend/zend_string.h with empty output buffer)
+--EXTENSIONS--
+iconv
+--FILE--
+<?php
+var_dump($args);
+ob_start('ob_iconv_handler');
+ob_clean();
+var_dump(ob_get_contents());
+?>
+--EXPECTF--
+Warning: Undefined variable $args in %s on line %d
+NULL
+string(0) ""
