commit 112421c8fa4840acd73502f2ab6a674fc025de37
Author: peter15914 <48548636+peter15914@users.noreply.github.com>
Date:   Sun Dec 29 18:49:06 2024 +0500

    Fix potential NULL dereference in evdns_cache_lookup()
    
    evutil_new_addrinfo_() returns NULL in some cases, and its return value is always checked for NULL.

commit 1759485e9a59147a47a674f5132fcfe764e7748c
Author: Hennadii Stepanov <32963518+hebasto@users.noreply.github.com>
Date:   Fri Dec 20 15:56:10 2024 +0000

    Improve portability on NetBSD
    
    According to GCC documentation, "the various `-std` options disable
    certain keywords".
    This change adheres to GCC's recommendation by replacing the `typeof`
    keyword with its alternative, `__typeof__`.

commit c4ea8028e08a63db5541344aacd1f18011026101
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Sat Feb 1 14:09:10 2025 +0000

    build(deps): bump the github-actions group across 1 directory with 2 updates
    
    Bumps the github-actions group with 2 updates in the / directory: [coverallsapp/github-action](https://github.com/coverallsapp/github-action) and [github/codeql-action](https://github.com/github/codeql-action).
    
    
    Updates `coverallsapp/github-action` from 2.3.4 to 2.3.6
    - [Release notes](https://github.com/coverallsapp/github-action/releases)
    - [Commits](https://github.com/coverallsapp/github-action/compare/cfd0633edbd2411b532b808ba7a8b5e04f76d2c8...648a8eb78e6d50909eff900e4ec85cab4524a45b)
    
    Updates `github/codeql-action` from 3.27.5 to 3.28.8
    - [Release notes](https://github.com/github/codeql-action/releases)
    - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/github/codeql-action/compare/f09c1c0a94de965c15400f5634aa42fac8fb8f88...dd746615b3b9d728a6a37ca2045b68ca76d4841a)
    
    ---
    updated-dependencies:
    - dependency-name: coverallsapp/github-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
      dependency-group: github-actions
    - dependency-name: github/codeql-action
      dependency-type: direct:production
      update-type: version-update:semver-minor
      dependency-group: github-actions
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

commit 9a6a799e7002aae09d5e7cb244bdb913eed75a04
Author: Hennadii Stepanov <32963518+hebasto@users.noreply.github.com>
Date:   Mon Dec 2 17:28:02 2024 +0000

    ci: Test Autotools build on FreeBSD 14.1
    
    CMake builds are already tested on FreeBSD 13.4 and 14.1.
    This change extends testing with Autotools to include FreeBSD 14.1.

commit 5bfb2ae81a055a624283b8e3b2002ea2bbe0c384
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Sun Dec 1 14:47:11 2024 +0000

    build(deps): bump github/codeql-action in the github-actions group
    
    Bumps the github-actions group with 1 update: [github/codeql-action](https://github.com/github/codeql-action).
    
    
    Updates `github/codeql-action` from 3.27.0 to 3.27.5
    - [Release notes](https://github.com/github/codeql-action/releases)
    - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/github/codeql-action/compare/662472033e021d55d94146f66f6058822b0b39fd...f09c1c0a94de965c15400f5634aa42fac8fb8f88)
    
    ---
    updated-dependencies:
    - dependency-name: github/codeql-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
      dependency-group: github-actions
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

commit a2ed23b176634a8bc2e0385d79aa1f3a8684e5c5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 24 23:32:04 2024 +0100

    Replace deprecated find_package(PythonInterp) with Python2/Python3
    
    Fixes: #1751

commit cf5571132bce345809f73c7457937e54b65994af
Merge: 78eb3059 e36398f1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 25 01:22:24 2024 +0300

    Merge pull request #1752 from hebasto/241116-cmake-version
    
    cmake: Update minimum required version

commit e36398f137d566b3acdcc00a7069c23d4c41c384
Author: Hennadii Stepanov <32963518+hebasto@users.noreply.github.com>
Date:   Sat Nov 16 21:35:53 2024 +0000

    cmake: Remove redundant policy settings
    
    The `cmake_minimum_required(VERSION 3.10)` command implicitly sets the
    following policies to NEW by default:
    - CMP0042 (introduced in CMake 3.0)
    - CMP0054 (introduced in CMake 3.1)
    - CMP0068 (introduced in CMake 3.9)

commit 2d7a3b9b6a7c7ef0d651d866b4ab11fb1ea24664
Author: Hennadii Stepanov <32963518+hebasto@users.noreply.github.com>
Date:   Sat Nov 16 21:26:55 2024 +0000

    cmake: Update minimum required version
    
    Compatibility with versions of CMake older than 3.10 is now deprecated
    and will be removed from a future version.
    
    See: https://cmake.org/cmake/help/v3.31/release/3.31.html

commit 78eb305975ed68d8bc159e46e6164afff1a74747
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 2 21:41:32 2024 +0100

    Fix unlikely (for libevent) UB in HT_GROW()
    
    The reason it is not possible for libevent is that:
    a) it is unlikely to have 1610612741 elements
    b) growing is done incrementally (i.e. only internally by HT_INSERT) and
       in this case the UB is not possible
    
    Fixes: https://github.com/libevent/libevent/issues/1312

commit 98b7ca30b2daec33fb98e7d16ee8891b36d32f50
Author: Kirill Rd <theoden8@tutamail.com>
Date:   Sat Nov 2 21:39:57 2024 +0000

    http: allow passing in pre-existing connection bev (#1722)
    
    This patch adds functionality to pass a pre-existing connection
    as a bufferevent to `evhttp_connection_base_bufferevent_reuse_new`.
    
    When the bufferevent has an existing fd, the evcon starts
    in state `EVCON_IDLE` so that requests can be made immediately.
    
    Signed-off-by: Kirill Rodriguez <theoden8@tutamail.com>
    Signed-off-by: Kirill Rodriguez <theoden8@tutamail.com>
    Co-authored-by: Wladimir J. van der Laan <laanwj@gmail.com>
    Co-authored-by: Azat Khuzhin <a3at.mail@gmail.com>

commit 6b7fb78c99d0b34c4ea64ed0b20fefe6216f8231
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 2 18:22:02 2024 +0100

    Make scope of the timeval structure cleaner in event_base_loop()
    
    Fixes: https://github.com/libevent/libevent/issues/1741

commit d6dbd7f8188ca8e09072711a020bd95f715f36a4
Author: CXD <374530430@qq.com>
Date:   Sun Nov 3 01:26:59 2024 +0800

    Windows platform supports reading IPv6 addresses for DNS server. (#1701)
    
    When using libevent on the Windows platform in an IPv6 environment, I found that libevent could not read the DNS server address for IPv6 addresses during DNS initialization, resulting in constant DNS resolution failures. Then, on MSDN, I discovered that the GetNetworkParams interface does not support obtaining IPv6 addresses, and they provided another interface, GetAdaptersAddresses, to obtain both IPv4 and IPv6 addresses. Therefore, I replaced the GetNetworkParams interface with the GetAdaptersAddresses interface. Please review whether this modification can be merged into the master branch.
    
    Reference MSDN documentation:
    https://learn.microsoft.com/en-us/windows/win32/api/iphlpapi/nf-iphlpapi-getnetworkparams
    https://learn.microsoft.com/en-us/windows/win32/api/iphlpapi/nf-iphlpapi-getadaptersaddresses
    
    Co-authored-by: alphacheng <alphacheng@tencent.com>
    Co-authored-by: Azat Khuzhin <azat@libevent.org>
    Co-authored-by: Azat Khuzhin <a3at.mail@gmail.com>

commit ffe913b9f9f4561b3e366159ce7cdd7cd17cd542
Merge: 269946b1 cdef74fd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 2 20:04:49 2024 +0300

    Merge pull request #1735 from theoden8/minor-improvements
    
    various minor fixes and improvements

commit 269946b1a7e57ee110eb2a39d0610f3262b02354
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Fri Nov 1 14:05:06 2024 +0000

    build(deps): bump the github-actions group with 2 updates
    
    Bumps the github-actions group with 2 updates: [coverallsapp/github-action](https://github.com/coverallsapp/github-action) and [github/codeql-action](https://github.com/github/codeql-action).
    
    
    Updates `coverallsapp/github-action` from 2.3.0 to 2.3.4
    - [Release notes](https://github.com/coverallsapp/github-action/releases)
    - [Commits](https://github.com/coverallsapp/github-action/compare/643bc377ffa44ace6394b2b5d0d3950076de9f63...cfd0633edbd2411b532b808ba7a8b5e04f76d2c8)
    
    Updates `github/codeql-action` from 3.26.6 to 3.27.0
    - [Release notes](https://github.com/github/codeql-action/releases)
    - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/github/codeql-action/compare/4dd16135b69a43b6c8efb853346f8437d92d3c93...662472033e021d55d94146f66f6058822b0b39fd)
    
    ---
    updated-dependencies:
    - dependency-name: coverallsapp/github-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
      dependency-group: github-actions
    - dependency-name: github/codeql-action
      dependency-type: direct:production
      update-type: version-update:semver-minor
      dependency-group: github-actions
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

commit cdef74fdff0b421da5c3c1f0f0b676d8705f2d71
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Fri Nov 1 00:10:57 2024 +0000

    remove old issue reference
    
    Signed-off-by: Kirill Rodriguez <theoden8@gmail.com>

commit 23839cb09696452f0006a68a2301e4153b45cd47
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Fri Nov 1 00:25:02 2024 +0000

    mm_strdup instead of strdup
    
    Signed-off-by: Kirill Rodriguez <theoden8@gmail.com>

commit 6313a61d50e4ee4a266e29313b64d2aa7a183b61
Merge: 3c8d89b9 e9559cd1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Nov 1 01:37:19 2024 +0300

    Ignore Proxy-Connection in request header (#1736)
    
    * don't strip Proxy-Connection
    * remove Proxy-Connection
    * remove proxy-connection from http-connect
    * moved EVHTTP_ flags to http.c
    * fix flags definition placements in http.c
    * fix unused variable
    
    Co-authored-by: Greg Hazel <ghazel@gmail.com>

commit 3c8d89b9b2f870614a3c4c95ef3fa93de72ae7a6
Merge: f01879d5 25fa9c77
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Nov 1 01:30:58 2024 +0300

    Merge pull request #1737 from libevent/signal-tests
    
    Retry tests with SIGALRM on OSX (and fix some related stuff)

commit 6f35d4dfe8fe8a6ee3869984a32e5dd5eaf555cd
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Thu Oct 31 14:52:44 2024 +0000

    probably platform caching at work too, let's make different nodenames
    
    Signed-off-by: Kirill Rodriguez <theoden8@gmail.com>

commit d2facdae42e57906acad7d96557ee107f61aa322
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Thu Oct 31 10:18:22 2024 +0000

    hitting cache makes cancel stress test unreliable
    
    Signed-off-by: Kirill Rodriguez <theoden8@gmail.com>

commit e219dd4a6ed5c1447fcee1aa317187237d4510f8
Author: Kirill Rodriguez <theoden8@gmail.com>
Date:   Sat Nov 2 00:53:31 2024 +0000

    return EAI_ADDRFAMILY instead of NULL (propagate to caller)
    
    Signed-off-by: Kirill Rodriguez <theoden8@gmail.com>

commit e9559cd173c4869c78d9bc171c28d5cb88cc667e
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Tue Oct 29 15:20:08 2024 +0000

    fix unused variable

commit c35d406d10f18b9f72ca203c11a362f1f3f2a48f
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Tue Oct 29 11:43:02 2024 +0000

    fix flags definition placements in http.c

commit a92ce7e11146b0b57456c505c6d23e225d712e64
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Tue Oct 29 11:26:35 2024 +0000

    moved EVHTTP_ flags to http.c

commit a8cd11f90f56482051049a5ef5941dbeb8f55175
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Tue Oct 29 11:18:48 2024 +0000

    remove proxy-connection from http-connect

commit f01879d5a6fd60dba068a9eacf8bad55e809b235
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 21 09:58:26 2024 +0200

    Align ELF sections to 16K boundaries (-Wl,-z,max-page-size=16384)
    
    Even though the initial request was about Android, it is not only about
    it, but it could be the case for Linux as well (so as Apple M1/...
    chips)
    
    And this should not affect anything, since this is just ELFs
    
    Fixes: https://github.com/libevent/libevent/issues/1708

commit 25fa9c7732b8a2c0ab0ae786eb8f288a7909e8de
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 28 22:20:10 2024 +0100

    test: retry signal tests with SIGALRM no OSX
    
    By some reason even after first ALRM signal received and event loop
    returned it is possible to recieve an ALRM one more time (at least one):
    
        % yes signal/simple_signal.. | head -n 1000 | xargs -I{} -P10 sh -c 'EVENT_DEBUG_LOGGING_ALL= bin/regress --timeout 0 --verbose {} >& /tmp/test.$SECONDS.$RANDOM.log'
        % cat /tmp/test.0.18384.log
        signal/simple_signal: [forking] [debug] event_add: event: 0x16d70f368 (fd 14),     call 0x102704ae8
        [debug] evsig_ensure_saved_: evsignal (14) >= sh_old_max (0), resizing
    
                 OK /Users/ec2-user/libevent/test/regress.c:1086: assert(setitimer(ITIMER_REAL, &itv, NULL) == 0): 0 vs 0[debug] kq_dispatch: kevent reports 1
        [debug] event_active: 0x16d70f368 (fd 14), res 8, callback 0x102704ae8
        [debug] event_process_active: event: 0x16d70f368,    call 0x102704ae8
        [debug] event_del: 0x16d70f368 (fd 14), callback 0x102704ae8
        [debug] event_base_loop: no events registered.
    
          FAIL /Users/ec2-user/libevent/test/regress.c:1062: ALRM received not from event loop![debug] event_del: 0x16d70f368 (fd 14), callback 0x102704ae8
        [debug] event_base_free_: 0 events freed
        signal/simple_signal: exited with 0 (0)
    
          [FAILED signal/simple_signal (0 retries)]
        signal/simple_signal_re_order: [forking] [debug] event_add: event: 0x16d70f368 (fd 14),     call 0x102704ae8
        [debug] evsig_ensure_saved_: evsignal (14) >= sh_old_max (0), resizing
        [debug] event_del: 0x16d70f368 (fd 14), callback 0x102704ae8
        [debug] event_add: event: 0x16d70f368 (fd 14),     call 0x102704ae8
    
                 OK /Users/ec2-user/libevent/test/regress.c:1086: assert(setitimer(ITIMER_REAL, &itv, NULL) == 0): 0 vs 0[debug] kq_dispatch: kevent reports 1
        [debug] event_active: 0x16d70f368 (fd 14), res 8, callback 0x102704ae8
        [debug] event_process_active: event: 0x16d70f368,    call 0x102704ae8
        [debug] event_del: 0x16d70f368 (fd 14), callback 0x102704ae8
        [debug] event_base_loop: no events registered.
        [debug] event_del: 0x16d70f368 (fd 14), callback 0x102704ae8
        [debug] event_base_free_: 0 events freed
        signal/simple_signal_re_order: exited with 0 (0)
    
        1/2 TESTS FAILED. (0 skipped)
    
    Also note, that the problem not only when I run two tests, but only one
    as well:
    
        % bin/regress --timeout 0 --repeat 1000 --verbose --no-fork signal/simple_signal >/tmp/test2.log 2>&1
        signal/simple_signal:
                 OK /Users/ec2-user/libevent/test/regress.c:1086: assert(setitimer(ITIMER_REAL, &itv, NULL) == 0): 0 vs 0
        signal/simple_signal:
                 OK /Users/ec2-user/libevent/test/regress.c:1086: assert(setitimer(ITIMER_REAL, &itv, NULL) == 0): 0 vs 0
          FAIL /Users/ec2-user/libevent/test/regress.c:1062: ALRM received not from event loop!
    
    I've tried to run under "ktrace trace -Ss -f C4,S0x010c -c" but of
    course it does not fails under it (dtruss by some reason did not work
    for me).
    
    P.S. Also remove one TT_RETRIABLE for one test, since only setitimer()
    causes this.

commit 29a3eee5cafb3b2be002090ddcc1da3199f6abf5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 28 22:06:29 2024 +0100

    test: add --repeat option into tinytest

commit 7b14bc16f2cb5c203e0f84c8b1272d97ee01ce4d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 28 10:06:45 2024 +0100

    test: add fallback for SIGALRM

commit c94b382577b80b414a36b045a5759f4d2ad7e979
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 28 10:03:17 2024 +0100

    test: do not ignore setitimer() failures

commit ca163ff1e172bcc6eccb9092a30c59ea437973fe
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 28 08:34:12 2024 +0100

    test: fix retries of signal tests on apple

commit 5e427ad98b7ec18f577118ed4bfc76a4d4735858
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 28 08:23:48 2024 +0100

    test: rename signal tests (simple_signal and simple_signal_re_order)

commit f84896d37f9650dd7286025db0dbef93eb4ac85a
Author: David Goulet <37544951+dgoulet-tor@users.noreply.github.com>
Date:   Mon Oct 28 20:50:29 2024 +0000

    dns: Return DNS query type on error (#1220)
    
    When calling the user callback after a DNS resolution on error, make
    sure to send back the query type (A, AAAA, PTR).
    
    Closes #1219
    
    Signed-off-by: David Goulet <dgoulet@torproject.org>
    Signed-off-by: David Goulet <dgoulet@ev0ke.net>
    Co-authored-by: Azat Khuzhin <azat@libevent.org>

commit 342a0faa50a8e1ae6f992d6c27022cd118698c31
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 27 16:41:12 2024 +0100

    Avoid loosing previously active events in case of EV_TIMEOUT
    
    Previously all the existing events was lost if the timeout had been
    triggered on that event.
    
    Fixes: #1530

commit 528fbed18426cbf0810e085cce7b80ab4654bce0
Author: Andy Pan <i@andypan.me>
Date:   Sun May 19 17:42:19 2024 +0800

    kqueue: make changelist and eventlist of kevent share the same array
    
    The array used by the changelist of the kevent() can be reused by the eventlist,
    We should make use of this feature to eliminate the extra overhead of array allocation.
    
    https://man.freebsd.org/cgi/man.cgi?kqueue
    https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/kqueue.2.html
    https://leaf.dragonflybsd.org/cgi/web-man?command=kqueue&section=2
    https://man.netbsd.org/kqueue.2
    https://man.openbsd.org/kqueue.2
    
    ---------
    
    Signed-off-by: Andy Pan <i@andypan.me>

commit afb7f48344a8646d87b0998d53a856a90a16f425
Author: Loganaden Velvindron <loganaden@gmail.com>
Date:   Sun Oct 27 20:30:44 2024 +0400

    arc4: drop 4096 bytes of the early keystream (#1586)
    
    It might be safer to drop 4096 bytes to be on the safe side.
    
    See: twitter.com/nugxperience/status/1773906926503591970

commit ba0442bacc4b5622b203226f7c96f3dff7a90977
Author: Cœur <coeur@gmx.fr>
Date:   Sun May 5 02:03:35 2024 +0800

    Improve hashsocket() (for win32) to avoid collisions
    
    Fixes: 91e3ead
    Refs: https://gist.github.com/azat/8a0a94e4de2d95af8f729b709589ce12

commit b456e4bd8268c39198065b88084bf72170018e59
Author: Cœur <coeur@gmx.fr>
Date:   Sat Oct 26 20:46:41 2024 +0200

    Use arc4random_stir over deprecated arc4random_addrandom (#1631)
    
    Co-authored-by: Azat Khuzhin <azat@libevent.org>

commit e30b215f3410794243ea47ea9d1edccafbf4a6cf
Author: Kirill Rd <theoden8@tutamail.com>
Date:   Thu Oct 24 06:28:53 2024 +0000

    Add caching for evdns (#1717)
    
    No evdns will do caching by default (with respect to TTL), to disable this set EVDNS_BASE_NO_CACHE
    
    There are also helpers for manually manage the cache:
    - evdns_cache_write()
    - evdns_cache_lookup()
    
    Initial PR: #571
    Fixes: #1715
    
    Co-authored-by: Greg Hazel <ghazel@gmail.com>
    Co-authored-by: Keith Moore <kmoore@clostra.com>

commit 267e808eb71dd6deffb9b558facd6f606331766d
Author: James <james.barford-evans@arm.com>
Date:   Wed Oct 23 21:54:31 2024 +0100

    Updated documentation for bufferevent_setcb() (#1733)
    
    Co-authored-by: Azat Khuzhin <a3at.mail@gmail.com>

commit 2a1ec766ed9b602b0d6a0863b88b48341b1b859d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 21 21:53:44 2024 +0200

    ci/openbsd: bump autoconf version to 2.72

commit b2192269825b09bbb4496cc843938108eeb1bdfb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 20 23:52:33 2024 +0200

    Fix notifying the base in a different thread after removing active timer event
    
    The base should be notified in case of timer removal if that was the
    minimal timer in the base.
    
    Reported-by: @moihn (who is also provided the reproducer on which this
    test is based on)
    Fixes: https://github.com/libevent/libevent/issues/1727

commit 970a258bc6ee08abf4cf81540570f0b8eca79449
Merge: 468be957 ae635d4b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 21 10:02:33 2024 +0300

    CI and tests fixes (#1719)

commit 468be957cd199ada8cec93b2a002d46b841ce726
Merge: f6e426c2 dc37edc4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 21 09:58:38 2024 +0300

    tests: add a test for event_free() from signal callback handler (#1729)

commit ae635d4b5b837ec8c74fe2e604ef133179250d64
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Sun Oct 20 21:47:17 2024 +0100

    add explicit check for linux

commit c923a184c695043b934e6ddc26f3a1ad34cb216f
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Tue Oct 15 21:02:53 2024 +0100

    getaddrinfo with localhost does not necessarily read files

commit 096c5fe58423e4939b48cf2a2c892e4d63af5787
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Tue Oct 15 15:38:53 2024 +0100

    update openbsd pkg names to 7.6

commit 5755befda6d10669859ceb2d47cd96e49123b2c8
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Tue Oct 15 12:44:09 2024 +0100

    fix a Werror error

commit 370d99244da1a384bcf97189037a6d16dab72c5f
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Tue Oct 15 12:33:52 2024 +0100

    mbedtls3 does not support tls<1.3, and tls<1.3 does not support renegotiations. therefore, disable

commit 87c921f9fcd58975c5430169337f5518448b5bc3
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Fri Oct 11 12:29:50 2024 +0100

    make sure cmake cache misses when configuration files change

commit dc37edc4ea130914fd0009ab688281ebce3daf52
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 20 21:59:13 2024 +0200

    Add a comment about handling event_free() for signals in event_signal_closure()

commit 77fed7609950723e4e74fb8c1528239f427f6c5e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 20 21:57:02 2024 +0200

    tests: add a test for event_free() from callback handler for signals
    
    Refs: https://github.com/libevent/libevent/issues/1287

commit 2321506d41a600acabf827ff44790b7b95b5d7dd
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Thu Oct 3 12:45:06 2024 +0100

    replace mbedtls@2 with mbedtls

commit f6e426c299acd80e85fef24c426fea45d36ace8d
Merge: 8f1e4bd9 e23924c2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Oct 4 06:45:52 2024 +0300

    Move find_dependency() directly to LibeventConfig.cmake (#1726)

commit e23924c293027d8d911c224980f8dce5843687a9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Oct 3 21:31:12 2024 +0200

    Fix LibeventConfig.cmake in case of no OpenSSL
    
    Previously it fails with, due to empty OPENSSL_FOUND:
    
        CMake Error at /home/runner/work/libevent/libevent/build/LibeventConfig.cmake:64 (if):
          if given arguments:
    
            "3.30.3" "VERSION_LESS" "3.15.0" "AND" "1" "AND" "AND" "TRUE"
    
          Unknown arguments specified

commit 68e18761aebf4d0d3696df12e4852eb0e6fdc2db
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Oct 3 09:20:52 2024 +0200

    Move find_dependency() directly to LibeventConfig.cmake
    
    Patch-by: @ahuj9
    Fixes: https://github.com/libevent/libevent/issues/1711
    Follow-up for: https://github.com/libevent/libevent/pull/1544 (cc @kurtlau)

commit 8f1e4bd937008a0026bd9c371e0f75f2aa86388a
Author: Wu, Zhenyu <wuzhenyu@ustc.edu>
Date:   Sun Sep 29 03:49:15 2024 +0800

    fix typo: bufferevent_set_callbacks should be bufferevent_setcb

commit d681a0d4f9026dc22a5d8a83f9a4adac21808e69
Author: Kirill Rd <theoden8@tutamail.com>
Date:   Thu Oct 3 07:09:21 2024 +0000

    CI fixes for openbsd/android/freebsd (#1721)
    
    the following changes are introduced:
    
    * openbsd CI fails with "too many open files", fixed with `ulimit -n` (now it fails for a more test-specific reasons)
    * android CI fails with `pipe2` method not found, fixed by removing cache
    * bumped freebsd to 13.4 (and 14.1) as they [reached EOL](https://www.freebsd.org/releases/)

commit cd68743eebfc71c58a71dc8305d75b7497300da1
Author: Kirill Rd <theoden8@tutamail.com>
Date:   Mon Sep 23 08:12:10 2024 +0000

    add android CI cmake builds (#1716)
    
    * trying android-ci workflow
    
    * focus on android
    
    * fix workflow file
    
    * another fix attempt
    
    * update java
    
    * added host targets
    
    * added clause for skipping CI
    
    * revert focus on android
    
    * set push CI back to master branch
    
    * fix CI cache key for android

commit ccb18f5b0cd3b767753f2c0d359cb02649e44e2a
Author: Kirill Rodriguez <theoden8@tutamail.com>
Date:   Fri Sep 20 20:56:14 2024 +0300

    fix cmake build error for android: threads not found

commit aa04ba93415da019b9d85abc6698dae4f8034cb8
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Sun Sep 1 14:27:50 2024 +0000

    build(deps): bump github/codeql-action in the github-actions group
    
    Bumps the github-actions group with 1 update: [github/codeql-action](https://github.com/github/codeql-action).
    
    
    Updates `github/codeql-action` from 3.25.15 to 3.26.6
    - [Release notes](https://github.com/github/codeql-action/releases)
    - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/github/codeql-action/compare/afb54ba388a7dca6ecae48f608c4ff05ff4cc77a...4dd16135b69a43b6c8efb853346f8437d92d3c93)
    
    ---
    updated-dependencies:
    - dependency-name: github/codeql-action
      dependency-type: direct:production
      update-type: version-update:semver-minor
      dependency-group: github-actions
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

commit bb0d473bbba9e2364be66712fd7f3b413d502607
Author: Orian <92054730+zmochi@users.noreply.github.com>
Date:   Tue Sep 10 21:53:27 2024 +0300

    Add small note to event_active() documentation

commit 628f39bb908a032bc12ec5361723b1592022186e
Author: icy17 <1061499390@qq.com>
Date:   Mon Aug 12 10:00:44 2024 +0200

    ws: fix potential NULL pointer dereference

commit d1a90d09dc84398f1c1863f0f9d843c6ca27fff7
Author: icy17 <1061499390@qq.com>
Date:   Wed Aug 7 17:20:46 2024 +0800

    tests: Fix potential NULL pointer dereference

commit d3f6c78e3ac92048058784298564407fef7d63ae
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Thu Aug 1 14:13:30 2024 +0000

    build(deps): bump the github-actions group with 2 updates
    
    Bumps the github-actions group with 2 updates: [ossf/scorecard-action](https://github.com/ossf/scorecard-action) and [github/codeql-action](https://github.com/github/codeql-action).
    
    
    Updates `ossf/scorecard-action` from 2.3.3 to 2.4.0
    - [Release notes](https://github.com/ossf/scorecard-action/releases)
    - [Changelog](https://github.com/ossf/scorecard-action/blob/main/RELEASE.md)
    - [Commits](https://github.com/ossf/scorecard-action/compare/dc50aa9510b46c811795eb24b2f1ba02a914e534...62b2cac7ed8198b15735ed49ab1e5cf35480ba46)
    
    Updates `github/codeql-action` from 3.25.11 to 3.25.15
    - [Release notes](https://github.com/github/codeql-action/releases)
    - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/github/codeql-action/compare/b611370bb5703a7efb587f9d136a52ea24c5c38c...afb54ba388a7dca6ecae48f608c4ff05ff4cc77a)
    
    ---
    updated-dependencies:
    - dependency-name: ossf/scorecard-action
      dependency-type: direct:production
      update-type: version-update:semver-minor
      dependency-group: github-actions
    - dependency-name: github/codeql-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
      dependency-group: github-actions
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

commit 0499c5175369783aa5517007ff3607c80e94b339
Author: icy17 <39425646+icy17@users.noreply.github.com>
Date:   Mon Aug 5 05:23:43 2024 +0800

    Document non-NULL parameters in public API (#1705)

commit 00c94beaf0d73457e15f55170ab088db337b7435
Author: Dmitry Ilyin <dima@doty.ru>
Date:   Mon Jul 22 21:47:53 2024 +0300

    ws: allow Upgrade in Connection header anywhere
    
    This will make it work for Firefox, which uses "Connection: keep-alive, Upgrade"
    Reimplemented our own evutil_ascii_strcasestr function (same as
    non-portable strcasestr)

commit 9848df54ccd819e3614667bbb97103ed701b0434
Author: Cœur <coeur@gmx.fr>
Date:   Fri Jul 26 22:53:30 2024 +0200

    http: disallow empty header names (#1690)
    
    In theory, we could be more strict, since there is only a subset of allowed characters:
    > ```
    > tchar          = "!" / "#" / "$" / "%" / "&" / "'" / "*"
    >                 / "+" / "-" / "." / "^" / "_" / "`" / "|" / "~"
    >                 / DIGIT / ALPHA
    >                 ; any VCHAR, except delimiters
    > ```
    
    But I'd skip such verification, unless there is a legitimate interest (versus performances).
    
    Fixes: #1686

commit 7f23b5b5aa61f5496627c2651fd6d8185f34ffde
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jul 10 06:14:50 2024 +0200

    Add instruction for release tarballs validation with GPG keys
    
    Fixes: https://github.com/libevent/libevent/issues/1691

commit 9d735b4beaee8c020b51b4a3f459431f7696f7e8
Merge: 30d169b1 25f4439d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jul 9 23:34:00 2024 +0300

    Better error handling in event-read-fifo.c (#1673)

commit 25f4439dbdc1ca9695452873e0194fc4c0549e8b
Author: icy17 <1061499390@qq.com>
Date:   Mon Apr 22 15:11:15 2024 +0800

    sample/event-read-fifo: add proper exit path
    
    Co-authored-by: Azat Khuzhin <azat@libevent.org>

commit 09738283d9cfc62f7a1de44f1d10c4e20ee50d43
Author: icy17 <1061499390@qq.com>
Date:   Wed Apr 10 18:21:47 2024 +0800

    Fix potential Null pointer dereference in event-read-fifo.c

commit 30d169b133035f878da651ebb0ce2dcdd9b89e91
Merge: 66428fb9 5485887c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jul 8 23:20:26 2024 +0300

    Better error path in test-changelist.c and EVUTIL_INVALID_SOCKET (#1679)

commit 5485887c4793cb73579f069fe0181ccfbb0db87c
Author: Cœur <coeur@gmx.fr>
Date:   Mon Jun 24 14:19:12 2024 +0800

    Check against EVUTIL_INVALID_SOCKET

commit 3f799ab6753c52bd2e221c17e79ac418330cccd4
Author: icy17 <1061499390@qq.com>
Date:   Mon Apr 22 15:31:10 2024 +0800

    test/test-changelist: add proper exit path

commit 6f9f2f3a0946a96035bad9e851157b547840e7b1
Author: icy17 <1061499390@qq.com>
Date:   Wed Apr 10 17:25:54 2024 +0800

    test/test-changelist.c: fix potential NULL pointer dereference

commit 66428fb969cf62a4127e8471f038788aa8ac4a2f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jul 8 10:15:29 2024 +0200

    test-closed: fix -Werror=maybe-uninitialized
    
    Follow-up for: https://github.com/libevent/libevent/pull/1680

commit 272bd7ddf02661cb40ee2865085dd83f74d6d4cf
Author: Cœur <coeur@gmx.fr>
Date:   Mon Jul 8 10:13:08 2024 +0200

    Fix potential Null pointer dereference in test-closed.c (#1680)
    
    * Fix potential Null pointer dereference in test-closed.c
    
    * add err path
    
    * code review: goto err after evutil_socketpair failure
    
    * code review: goto err for event_config_new failure
    
    ---------
    
    Co-authored-by: icy17 <1061499390@qq.com>

commit 49d6b4b099551c632763c687a29ea686bf36a7ca
Author: Cœur <coeur@gmx.fr>
Date:   Mon Jul 8 10:10:42 2024 +0200

    samples: use evutil_socket_t instead  and handle 64 bit Windows (#1682)
    
    * Use evutil_socket_t instead in http server sample and handle 64 bit Windows
    
    * Update http-server.c
    
    * consistently using EV_SOCK_FMT for Windows compatibility
    
    * code review: fix missing symbol strsignal
    
    * Add evutil_strsignal() helper instead of strsignal() macro
    
    ---------
    
    Co-authored-by: Hernan Martinez <hernan.c.martinez@gmail.com>
    Co-authored-by: Azat Khuzhin <azat@libevent.org>

commit 2bc831c889cf204088566d5d42920fca25d5d6ef
Author: Cœur <coeur@gmx.fr>
Date:   Mon Jul 8 10:08:58 2024 +0200

    Fix potential Null pointer dereference in test-time.c (#1681)
    
    * Fix potential Null pointer dereference in test-time.c
    
    * add err path
    
    * code review: free events before base
    
    ---------
    
    Co-authored-by: icy17 <1061499390@qq.com>

commit 0bbaee61105fa351d949dc3a7523683b4d4459bd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 6 09:13:41 2024 +0200

    Disable persist-credentials for actions/checkout to improve security

commit 7331c66b4d369fee1d9a87ea3883facd3a9df575
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 6 08:59:19 2024 +0200

    ci: limit artifacts
    
    Refs: https://github.com/libevent/libevent/security/advisories/GHSA-f4cg-pcr2-495m

commit 7c20c2196738d3e9ea91bec4339afdf80e58d37f
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Mon Jul 1 14:07:35 2024 +0000

    Bump github/codeql-action in the github-actions group
    
    Bumps the github-actions group with 1 update: [github/codeql-action](https://github.com/github/codeql-action).
    
    
    Updates `github/codeql-action` from 3.25.10 to 3.25.11
    - [Release notes](https://github.com/github/codeql-action/releases)
    - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/github/codeql-action/compare/23acc5c183826b7a8a97bce3cecc52db901f8251...b611370bb5703a7efb587f9d136a52ea24c5c38c)
    
    ---
    updated-dependencies:
    - dependency-name: github/codeql-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
      dependency-group: github-actions
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

commit 96c259f1d96c36ff6c19f349a7296d6ae349d3e7
Author: Andy Pan <i@andypan.me>
Date:   Wed Jun 26 12:10:00 2024 +0800

    tcpkeepalive: distinguish OS versions and use proper time units (#1669)
    
    DragonFly BSD changed the time unit for TCP keep-alive from milliseconds to seconds since v5.8 and Solaris 11.4 added `TCP_KEEPIDLE`, `TCP_KEEPINTVL`, and `TCP_KEEPCNT` with time units in second while Solaris <11.4 still use `TCP_KEEPALIVE_THRESHOLD` and `TCP_KEEPALIVE_ABORT_THRESHOLD` with time units in millisecond.
    
    Currently, we don't differentiate among DragonFly BSD versions but set the keepalive options with seconds, which will result in unexpected behaviors on DragonFlyBSD <5.8. This PR intends to fix the wrong usage of time units of TCP keepalive options on DragonFly BSD <5.8 and consolidate the logic of time units conversion for TCP keepalive across platforms.
    
    In addition, this PR introduces a new custom macro for determining Solaris 11.4. This macro is expected to help us implement some new features for `libuv` using some abilities that only exist on Solaris 11.4 and other mainstream platforms in the future, considering that Oracle developed and released Solaris 11.4 to replenish plenty of features on Solaris that have already been implemented on other UNIX-like OSs but missing from Solaris <11.4, also bring a good deal of new features.
    ### References
    
    - [Change tcp keepalive options from ms to seconds (DISRUPTIVE)](https://lists.dragonflybsd.org/pipermail/commits/2019-July/719125.html)
    - [DragonFly BSD 5.8 release notes](https://www.dragonflybsd.org/release58/)
    - [DragonFly TCP](https://man.dragonflybsd.org/?command=tcp&section=4)
    - [Solaris 11.3 TCP](https://docs.oracle.com/cd/E86824_01/html/E54777/tcp-7p.html)
    - [Solaris 11.4 TCP](https://docs.oracle.com/cd/E88353_01/html/E37851/tcp-4p.html)
    - [Solaris 11.4 release notes](https://docs.oracle.com/cd/E37838_01/html/E60973/)
    
    Signed-off-by: Andy Pan <i@andypan.me>

commit 90b9520f3ca04dd1278c831e61a82859e3be090e
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Sun Jun 23 19:20:02 2024 +0000

    Bump the github-actions group across 1 directory with 3 updates
    
    Bumps the github-actions group with 3 updates in the / directory: [coverallsapp/github-action](https://github.com/coverallsapp/github-action), [ossf/scorecard-action](https://github.com/ossf/scorecard-action) and [github/codeql-action](https://github.com/github/codeql-action).
    
    
    Updates `coverallsapp/github-action` from 2.2.3 to 2.3.0
    - [Release notes](https://github.com/coverallsapp/github-action/releases)
    - [Commits](https://github.com/coverallsapp/github-action/compare/3dfc5567390f6fa9267c0ee9c251e4c8c3f18949...643bc377ffa44ace6394b2b5d0d3950076de9f63)
    
    Updates `ossf/scorecard-action` from 2.3.1 to 2.3.3
    - [Release notes](https://github.com/ossf/scorecard-action/releases)
    - [Changelog](https://github.com/ossf/scorecard-action/blob/main/RELEASE.md)
    - [Commits](https://github.com/ossf/scorecard-action/compare/0864cf19026789058feabb7e87baa5f140aac736...dc50aa9510b46c811795eb24b2f1ba02a914e534)
    
    Updates `github/codeql-action` from 3.25.3 to 3.25.10
    - [Release notes](https://github.com/github/codeql-action/releases)
    - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/github/codeql-action/compare/d39d31e687223d841ef683f52467bd88e9b21c14...23acc5c183826b7a8a97bce3cecc52db901f8251)
    
    ---
    updated-dependencies:
    - dependency-name: coverallsapp/github-action
      dependency-type: direct:production
      update-type: version-update:semver-minor
      dependency-group: github-actions
    - dependency-name: ossf/scorecard-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
      dependency-group: github-actions
    - dependency-name: github/codeql-action
      dependency-type: direct:production
      update-type: version-update:semver-patch
      dependency-group: github-actions
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

commit 78d29804db4582b5f358840279a7f6f91230ffcb
Author: Cœur <coeur@gmx.fr>
Date:   Mon Jun 24 15:58:46 2024 +0800

    gitignore cleanup (#1672)

commit e0d53cbcd5a5bdb0132198939998b6cdcc07ba4a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jun 23 21:21:22 2024 +0200

    ci: ignore lukka/run-vcpkg for updates by dependabot
    
    Follow-up for: https://github.com/libevent/libevent/pull/1657

commit e5181b153e155b1f1d626f2bb3903cadcc1b38aa
Author: Cœur <coeur@gmx.fr>
Date:   Mon Jun 24 03:37:49 2024 +0800

    Cleanup EVENT_HAVE_ macros (#1645)

commit 8dd92069d660d1df2fa2e2358152e466f7968949
Author: Cœur <coeur@gmx.fr>
Date:   Mon Jun 24 03:15:23 2024 +0800

    Fix potential Null pointer dereference in bench_httpclient.c (#1676)
    
    Co-authored-by: icy17 <1061499390@qq.com>

commit 5d830362dd71a788b0b064c68223c9f689750932
Author: Cœur <coeur@gmx.fr>
Date:   Mon Jun 24 03:12:39 2024 +0800

    Fix potential Null pointer dereference in regress_dns.c (#1675)
    
    Co-authored-by: icy17 <1061499390@qq.com>

commit dabf4e132d2ec23c46619c4bb642e534062521c7
Author: Cœur <coeur@gmx.fr>
Date:   Mon Jun 24 03:10:56 2024 +0800

    Fix potential Null pointer dereference in ws-chat-server.c (#1674)
    
    Co-authored-by: icy17 <1061499390@qq.com>

commit 6d8c38afe7c887c381abf2f174ca0815b42c56cc
Author: Cœur <coeur@gmx.fr>
Date:   Sun Jun 2 10:31:11 2024 +0800

    Reducing the number of mingw warnings

commit a0fc31bfe3f99ad2f3ec11126349a129d893dc4a
Author: Cœur <coeur@gmx.fr>
Date:   Sat Jun 1 18:52:39 2024 +0200

    Sort symbols to check in cmake/autotools lexicographically

commit 13678f370c4b4d37d4f3e58c51836905853a9dce
Merge: 3d853625 fef2a867
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jun 2 00:53:58 2024 +0300

    gcc: fix some compiler errors from the new GCC (#1658)
    
    gcc: fix some compiler errors from the new GCC

commit 3d85362557294c134bbc193461f73ea8413ff859
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jun 1 18:13:52 2024 +0200

    ci: secure github.event.repository.owner.name
    
    Even though this should not be a problem, let's do this anyway.
    
    Reported-by: Francesco Garofalo

commit f5b61043198bcd74b4c333488869969e926fe285
Author: fanquake <fanquake@gmail.com>
Date:   Mon May 20 11:53:24 2024 +0100

    test: use evutil_timerclear over timerclear

commit b202a72be44021c902045eef61b91cb3f68f7e14
Author: Cœur <coeur@gmx.fr>
Date:   Fri May 24 05:31:27 2024 +0200

    temp size assert for #1632

commit 5fbc00a3cc2fe2f08008ad10383cf356b963c23d
Author: Cœur <coeur@gmx.fr>
Date:   Thu May 23 14:53:13 2024 +0200

    event_warn mmap format

commit fef2a8678be304b3b7f9d9a2e50cc47a99f44504
Author: Andy Pan <i@andypan.me>
Date:   Tue May 21 11:05:23 2024 +0800

    Fix -Wcast-function-type errors
    
    ---------
    
    Signed-off-by: Andy Pan <i@andypan.me>

commit e58f1fa61511afd9ca8dae4e6e4129dc57833031
Author: Andy Pan <i@andypan.me>
Date:   Mon May 20 09:27:52 2024 +0800

    Fix the -Wint-conversion
    
    ---------
    
    Signed-off-by: Andy Pan <i@andypan.me>

commit ee4fa05dfe864a7175afb5942e3735b962fc374f
Author: Andy Pan <i@andypan.me>
Date:   Sun May 19 16:10:02 2024 +0800

    Fix the compiler errors in sample/http-server.c
    
    ---------
    
    Signed-off-by: Andy Pan <i@andypan.me>

commit ceb6551fa2005c9e10568e8aaf7378d3f309c507
Author: Andy Pan <i@andypan.me>
Date:   Sun May 19 00:18:48 2024 +0800

    gcc: fix the -Wincompatible-pointer-types errors
    
    ---------
    
    Signed-off-by: Andy Pan <i@andypan.me>

commit 9e89a407481fb7bdd5f568466a6b2da9a370a6b6
Author: Cœur <coeur@gmx.fr>
Date:   Fri May 24 05:33:13 2024 +0200

    Fix Windows format warning in newer Visual Studio

commit 525f5d0a14c9c103be750f2ca175328c25505ea4
Author: Hennadii Stepanov <32963518+hebasto@users.noreply.github.com>
Date:   Fri May 10 20:00:37 2024 +0100

    ci: Switch `lukka/run-vcpkg` back to v7
    
    Newer versions expect a vcpkg manifest.

commit ab338ab1dc400b36c9f57233437923e9a8aa909c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 20 09:19:28 2024 +0200

    ci: fix typo in matrix

commit 7a9458c09b16c71e4de30e59b725af653a4c2c20
Author: Andy Pan <i@andypan.me>
Date:   Mon May 20 17:17:45 2024 +0800

    Don't try to set SO_REUSEADDR and SO_REUSEPORT on Unix sockets (#1625)

commit 66ee086bf1650713933e8f8a53c188bd8a7af7a5
Author: Cœur <coeur@gmx.fr>
Date:   Mon May 6 23:32:00 2024 +0800

    Fix conversion loses precision ssize_t to int in evthread_notify_base_default()

commit 7afbdcf25e1def97481605c1455ba45e68dda3ee
Author: Cœur <coeur@gmx.fr>
Date:   Mon May 6 23:31:27 2024 +0800

    Ensure that event had been removed in event_process_active_single_queue()
    
    It should not be possible, since only EVLIST_ACTIVE should be triggered
    from event_process_active_single_queue, but adding assert will not hurt.

commit 8976100a44be6ef96ba457d3637ae6a8b842e836
Author: Andy Pan <i@andypan.me>
Date:   Fri May 17 17:06:49 2024 +0800

    unix: fail the operation when SO_REUSEPORT has no load balancing
    
    ---------
    
    Signed-off-by: Andy Pan <i@andypan.me>

commit 832f52692e4818aa96e1c1995caa87c4a18320b1
Author: Andy Pan <i@andypan.me>
Date:   Fri May 17 16:54:22 2024 +0800

    aix: enable SO_REUSEPORT on AIX
    
    AIX 7.2.5 added the feature that would add the capability
    to distribute incoming connections across all listening ports.
    
    https://www.ibm.com/support/pages/how-get-better-listening-performance-multiple-listening-sockets-using-same-port-number-soreuseport
    
    ---------
    
    Signed-off-by: Andy Pan <i@andypan.me>

commit a41453ab51745810fbe24e3af6c5f46653c7a512
Author: Andy Pan <i@andypan.me>
Date:   Thu May 9 17:34:15 2024 +0800

    Eliminate the redundant ev_uint64_t for eventfd
    
    ---------
    
    Signed-off-by: Andy Pan <i@andypan.me>

commit fc9bfd210d289d1565cf03e3d9d2e85f50f5b144
Merge: 6d125f54 85a0ec9b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 7 22:15:40 2024 +0300

    Merge pull request #1649 from azat/be/BSD-connect-failures
    
    Fix tests failures due to incorrect handling of ECONNREFUSED on BSD

commit 6d125f548691b3013641d3d8488c9e001e7d05fa
Author: Cœur <coeur@gmx.fr>
Date:   Mon May 6 15:28:48 2024 +0800

    Fix evbuffer_file_segment_new 64-bit support on Win32 (#1637)
    
    This fixes the problematic #define fstat _fstat which would only support files up to 2 GB.
    
    Also refactored it as evutil_fd_filesize to avoid exposing stat when not necessary.

commit af31823fb2bd03ffc90167304d677ec492bc9757
Author: Cœur <coeur@gmx.fr>
Date:   Sun May 5 16:43:23 2024 +0800

    Fix potential Null pointer dereference in bufferevent_openssl.c

commit 85a0ec9b2dcbfdb2c4ea95fc8a8f79e60a46ea62
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 6 08:50:36 2024 +0200

    be: make the code in bufferevent_socket_connect() more reliable
    
    There is one icky in case for windows:
    
            if (sa) {
     #ifdef _WIN32
                    if (bufferevent_async_can_connect_(bev)) {
                            bufferevent_setfd(bev, fd);
                            r = bufferevent_async_connect_(bev, fd, sa, socklen);
                            if (r < 0)
                                    goto freesock;
                            bufev_p->connecting = 1;
                            result = 0;
                            goto done;
    -               } else
    +               } else {
     #endif
                    r = evutil_socket_connect_(&fd, sa, socklen);
                    if (r < 0) // Previosly this line was executed
                               // regardless of bufferevent_async_can_connect_(), but the case under
                               // bufferevent_async_can_connect_() always does goto, so it is 100% the
                               // same code, but just to make it more cleaner
                            goto freesock;
    +#ifdef _WIN32
    +               }
    +#endif
            }

commit 3201009b3f755b56d548109c3d5c983c4e3b543d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 6 08:38:53 2024 +0200

    Revert "Remove dead code from bufferevent_socket_connect"
    
    That wasn't the dead code, since the `r` could be `2` in case of
    `ECONNREFUSED`, and it should trigger errorcb not the writecb.
    
    This is actually questionable should be call errorcb at all in case of
    connect() returns an error immediately, but I guess the reason was to
    make it compatible with others, ECONNREFUSED can be returned only for
    specific cases and only on BSD (AFAIK). While for instance EHOSTUNREACH
    is not.
    
    And after this change now all tests are passed on FreeBSD. Well,
    sometimes few tests fails due to timing issues, but in general looks
    good. Since even all tests in parallel passed:
    
        $ rm -f /tmp/libevent*log; bin/regress --list-tests | awk '/^    / { print $1 }' | xargs -I{} -P100 bash -c 'n={}; bin/regress --no-fork --verbose $n |& tee /tmp/libevent-test-${n//\//_}.log' |& grep -F '  [FAILED' |& tee /tmp/libevent-tests.log
    
    And having green CI is crucial for libevent, not only because it is
    a rule of thumb for all projects, but also because in case of failures
    it will retry on and on, which will cause CI stuck.
    
    Fixes: bufferevent/bufferevent_connect_fail
    Fixes: bufferevent/bufferevent_connect_fail_eventcb
    Fixes: bufferevent/bufferevent_connect_fail_eventcb_defer
    
    This reverts commit 56e121310954cbee2310c5eb2a3000115186563d.
    Refs: https://github.com/libevent/libevent/pull/1100

commit 3f7c1cba5b4e9f18be585e26bcad419e59416181
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 5 21:03:21 2024 +0200

    be: add a comment for handling ECONNREFUSED in bufferevent_readcb()
    
    Fixes: 3189eb000b6d8751223061930a019f85c284f985 ("be_sock: handle readv() returns ECONNREFUSED (freebsd 9.2)")

commit c6a74ee04fc5904fe443302d37798ac82a2016b3
Merge: 6bb41ed0 0f51ba66
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 6 09:13:15 2024 +0200

    Merge branch 'test/fixes' -- more small fixes
    
    * test/fixes:
      test: mark http/timeout_read_server as retriable
      test: reset some static vars to avoid affecting other tests
      test: fix printing number of retries for FAILED message
      test: add debugging for bufferevent/bufferevent_connect_fail_eventcb*
      test: suppress logging for buffer/add_file_leak1

commit 0f51ba669a2686c3189141829b2de850d4c3f411
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 6 09:10:15 2024 +0200

    test: mark http/timeout_read_server as retriable

commit ba97d94738a03d9d23618577644f7da9feefb389
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 5 21:35:46 2024 +0200

    test: reset some static vars to avoid affecting other tests

commit 479b5ed6f417c452b3da519d2b168f6424d3ecae
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 5 21:30:01 2024 +0200

    test: fix printing number of retries for FAILED message

commit d538f41f0a5e1b60549fae766eda1bdc965d6a44
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 5 21:12:14 2024 +0200

    test: add debugging for bufferevent/bufferevent_connect_fail_eventcb*

commit 2d4d1747e94fdf1b314b75d70cedc0d14882e9f5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 5 22:15:56 2024 +0200

    test: suppress logging for buffer/add_file_leak1
    
    Warnings from this test should be ignored:
    
        [warn] evbuffer_file_segment_materialize: mmap(5, 0, 0) failed: Invalid argument

commit 6bb41ed0bbac9c27f97e80cfd4e52a9b1d610d38
Merge: 5d45f4d9 93a76aa2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 5 20:22:43 2024 +0200

    Merge branch 'test/fix-reports'
    
    * test/fix-reports:
      test: add proper message in case of test failure
      test: fix RETRYING message (add missing group prefix)

commit 93a76aa27526b3f1a54f9ceba14664624fd84249
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 5 20:20:27 2024 +0200

    test: add proper message in case of test failure
    
    Right now it is impossible to understand what had been failed, but
    after:
    
        $ regress thread/conditions_simple
        thread/conditions_simple: [forking]
          FAIL /src/le/libevent/test/regress_thread.c:385: assert(n_signal == 0): 1 vs 0
          [RETRYING thread/conditions_simple (attempts left 2, delay 1 sec)]
        thread/conditions_simple: [forking]
          FAIL /src/le/libevent/test/regress_thread.c:385: assert(n_signal == 0): 1 vs 0
          [RETRYING thread/conditions_simple (attempts left 1, delay 1 sec)]
        thread/conditions_simple: [forking]
          FAIL /src/le/libevent/test/regress_thread.c:385: assert(n_signal == 0): 1 vs 0
          [RETRYING thread/conditions_simple (attempts left 0, delay 1 sec)]
        thread/conditions_simple: [forking]
          FAIL /src/le/libevent/test/regress_thread.c:385: assert(n_signal == 0): 1 vs 0
          [conditions_simple FAILED]
    
          [FAILED thread/conditions_simple (attempts made -1)]
        1/1 TESTS FAILED. (0 skipped)

commit d5745413ccaf6bea881a7ce6efa600e12ee2cdec
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 5 20:15:22 2024 +0200

    test: fix RETRYING message (add missing group prefix)
    
    Before:
    
        $ regress thread/conditions_simple
        thread/conditions_simple: [forking]
          FAIL /src/le/libevent/test/regress_thread.c:385: assert(n_signal == 0): 1 vs 0
          [RETRYING conditions_simple (attempts left 2, delay 1 sec)]
    
    After:
    
        $ regress thread/conditions_simple
        thread/conditions_simple: [forking]
          FAIL /src/le/libevent/test/regress_thread.c:385: assert(n_signal == 0): 1 vs 0
          [RETRYING thread/conditions_simple (attempts left 2, delay 1 sec)]

commit 5d45f4d9ff6e4f716504f6e06fc83614c46a6bfb
Author: Cœur <coeur@gmx.fr>
Date:   Sat May 4 18:25:17 2024 +0800

    Simplifying apple-cmake-job

commit ccf4c74d393caafd8ed80c10c7bccc2c2bc8d7fe
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 4 12:40:36 2024 +0200

    Add ChangeLog-2.1/ChangeLog (aka 2.2) into dist package

commit d241fcabd6e9dcfa06212b7a70dbcaabc1cd203a
Author: Cœur <coeur@gmx.fr>
Date:   Sat May 4 20:33:18 2024 +0800

    Add Privacy Manifest for App Store submissions
    Doc: https://developer.apple.com/documentation/bundleresources/privacy_manifest_files/describing_use_of_required_reason_api
    From the API list, the libevent library only uses:
    - mach_absolute_time, but that one is avoided with HAVE_POSIX_MONOTONIC (default) instead of HAVE_MACH_MONOTONIC
    - fstat and stat in evbuffer_file_segment_new, which is covered by third-party SDK usage (0A2A.1)
    - fstat and stat in evutil_read_file_, which is used to read the "/etc/resolv.conf" and "/etc/hosts" files, for which there are no available supporting reasons

commit 7ede5af692e1cd1899439436288a9ba145fdf1eb
Author: Cœur <coeur@gmx.fr>
Date:   Sat May 4 18:04:14 2024 +0800

    Updating deprecated GitHub actions (#1629)
    
    * Updating deprecated GitHub actions
    
    * code review: use commit hash for actions

commit ac96656c2f917e633f13604199a03c552c475ffb
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Wed May 1 14:33:53 2024 +0000

    Bump github/codeql-action in the github-actions group
    
    Bumps the github-actions group with 1 update: [github/codeql-action](https://github.com/github/codeql-action).
    
    
    Updates `github/codeql-action` from 3.24.10 to 3.25.3
    - [Release notes](https://github.com/github/codeql-action/releases)
    - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/github/codeql-action/compare/4355270be187e1b672a7a1c7c7bae5afdc1ab94a...d39d31e687223d841ef683f52467bd88e9b21c14)
    
    ---
    updated-dependencies:
    - dependency-name: github/codeql-action
      dependency-type: direct:production
      update-type: version-update:semver-minor
      dependency-group: github-actions
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

commit 534da76d44e68efb25813ccd0ed8cc555d311f4a
Merge: f516e399 71108830
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 4 12:48:57 2024 +0300

    Merge pull request #1641 from Coeur/coeur/apple-cmake-job
    
    Adding apple-cmake-job for an iOS/tvOS/visionOS/watchOS build

commit f516e399b437cc17ce3c4774b2e58092f35109b1
Author: Cœur <coeur@gmx.fr>
Date:   Sat May 4 17:42:26 2024 +0800

    Fix brew path on Apple Silicon (#1633)
    
    * Fix brew path on Apple Silicon
    
    * code review: `brew --prefix openssl`
    
    * code review: correct mbedtls path
    
    * code review: cmake does support autodetection of OPENSSL_ROOT_DIR

commit 3c744ceed0f545e845e2dec6b3e03c377f12e799
Author: Cœur <coeur@gmx.fr>
Date:   Wed May 1 14:55:29 2024 +0800

    fix linux retrying cmake

commit 0428771acb483e80f81f5e1faf109d686e8b931f
Author: hunterx008 <jzg435248419@126.com>
Date:   Wed May 1 23:17:54 2024 +0800

    Remove redundant condition in function:event_base_once

commit 71108830f60cf203e0fc868b2f531c218def3971
Author: Cœur <coeur@gmx.fr>
Date:   Thu May 2 13:16:04 2024 +0800

    using xcode-version: latest-stable for xros support

commit b7fb04e88e1696051305d10b7073f6b739a705ce
Author: Cœur <coeur@gmx.fr>
Date:   Thu May 2 12:57:55 2024 +0800

    Adding apple-cmake-job for an iOS/tvOS/watchOS build

commit eec47a67100f5520e91057b68b4ff24b02913257
Author: Cœur <coeur@gmx.fr>
Date:   Tue Apr 30 15:59:58 2024 +0800

    Fix typos (#1634)

commit 64decd48e20f6d20d6f510aa75ab05861fd3d51c
Author: icy17 <39425646+icy17@users.noreply.github.com>
Date:   Mon Apr 29 13:51:22 2024 +0800

    Fix potential Null pointer dereference in dns-example.c (#1601)

commit a584efaa0e8a19d265b020a35224f828e1543243
Author: icy17 <1061499390@qq.com>
Date:   Mon Apr 22 14:47:34 2024 +0800

    Fix potential Null pointer dereference in time-test.c

commit aef201a9fc69fb61e5c1a87c423ff56b2f480f6e
Author: Andy Pan <i@andypan.me>
Date:   Mon Apr 29 13:35:33 2024 +0800

    Change ident for EVFILT_USER to 0 and add a test (#1582)
    
    Conventionally, ident for EVFILT_USER is set to 0 to avoid
    collision of file descriptors, which is what other renowned
    networking frameworks like netty(java), mio(rust), gnet(go),
    swift-nio(swift), etc. do currently.
    
    Co-authored-by: Azat Khuzhin <azat@libevent.org>

commit cbbf209c0832c0cee8d73fb2635f2171d65f0526
Author: Andy Pan <i@andypan.me>
Date:   Mon Apr 29 13:31:34 2024 +0800

    Support SO_REUSEPORT on FreeBSD, DragonFly and Solaris (#1624)
    
    ## References
    
    - [The SO_REUSEPORT socket option on Linux](https://lwn.net/Articles/542629/)
    - [DragonFly Release 3.6](https://www.dragonflybsd.org/release36/)
    - [FreeBSD 12.0-RELEASE Release Notes](https://www.freebsd.org/releases/12.0R/relnotes/)
    - [SO_REUSEPORT on Solaris 11.4](https://docs.oracle.com/cd/E88353_01/html/E37843/setsockopt-3c.html)
    
    Co-authored-by: Azat Khuzhin <azat@libevent.org>

commit a9426941555ec52b25c3641ebb8af72d7d91ebf8
Author: Cœur <coeur@gmx.fr>
Date:   Sun Apr 28 13:16:54 2024 +0800

    Fix CMake Deprecation Warning

commit 73c0349ed434d93d86e57eb6887c6fe870f3fcd2
Author: Cœur <coeur@gmx.fr>
Date:   Mon Apr 29 13:16:58 2024 +0800

    Fix evutil_parse_sockaddr_port documentation (#1628)
    
    In some IDE like Xcode, the list is interpreted as markdown instead of plain text

commit 71d41cdf373f97f7c70a3dabd25faac919b1b63e
Author: Hennadii Stepanov <32963518+hebasto@users.noreply.github.com>
Date:   Mon Apr 22 06:39:35 2024 +0100

    build: Add `Iphlpapi` to `Libs.private` in `*.pc` files on Windows
    
    It has been required since https://github.com/libevent/libevent/pull/923
    at least for the `if_nametoindex` call.

commit 1e6c0e726b099f0758fa7e46e299ac908dc3467c
Author: Emil Engler <me@emilengler.com>
Date:   Fri Apr 12 21:36:38 2024 +0200

    Do not set TCP keepalive on Unix sockets
    
    This commit disables the property of TCP keepalive on Unix domain
    sockets, because they essentially serve no purpose here, except for
    causing problems on Windows and macOS systems.
    
    Fixes #1615

commit 147298a2d1d6f16d3b4f6e5c04947c6b629e85cc
Author: dockercui <dockercui@aliyun.com>
Date:   Wed Apr 24 11:14:47 2024 +0800

    Fix some comments
    
    Signed-off-by: dockercui <dockercui@aliyun.com>

commit 6074d558229684901693c6107e760fcff47a2d44
Author: Andy Pan <i@andypan.me>
Date:   Wed Apr 17 10:36:47 2024 +0000

    Avoid calling read(2) on eventfd on each event-loop wakeup
    
    Register the eventfd with EPOLLET to enable edge-triggered notification
    where we don't need to read the data from the eventfd for every wakeup
    event.
    
    When the eventfd counter reaches the maximum value of the unsigned 64-bit,
    we rewind the counter and retry again. This optimization saves one system
    call on each event-loop wakeup, which eliminates the extra latency for epoll
    as the EVFILT_USER filter does for the kqueue.

commit e0a4574ba2cbcdb64bb2b593e72be7f7f4010746
Author: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>
Date:   Mon Apr 15 07:41:48 2024 +0000

    Bump the github-actions group with 5 updates
    
    Bumps the github-actions group with 5 updates:
    
    | Package | From | To |
    | --- | --- | --- |
    | [actions/cache](https://github.com/actions/cache) | `3` | `4` |
    | [nick-fields/retry](https://github.com/nick-fields/retry) | `2` | `3` |
    | [coverallsapp/github-action](https://github.com/coverallsapp/github-action) | `1.2.5` | `2.2.3` |
    | [ossf/scorecard-action](https://github.com/ossf/scorecard-action) | `2.1.2` | `2.3.1` |
    | [github/codeql-action](https://github.com/github/codeql-action) | `2.2.4` | `3.24.10` |
    
    
    Updates `actions/cache` from 3 to 4
    - [Release notes](https://github.com/actions/cache/releases)
    - [Commits](https://github.com/actions/cache/compare/v3...v4)
    
    Updates `nick-fields/retry` from 2 to 3
    - [Release notes](https://github.com/nick-fields/retry/releases)
    - [Changelog](https://github.com/nick-fields/retry/blob/master/.releaserc.js)
    - [Commits](https://github.com/nick-fields/retry/compare/v2...v3)
    
    Updates `coverallsapp/github-action` from 1.2.5 to 2.2.3
    - [Release notes](https://github.com/coverallsapp/github-action/releases)
    - [Upgrade guide](https://github.com/coverallsapp/github-action/blob/main/UPGRADE.md)
    - [Commits](https://github.com/coverallsapp/github-action/compare/09b709cf6a16e30b0808ba050c7a6e8a5ef13f8d...3dfc5567390f6fa9267c0ee9c251e4c8c3f18949)
    
    Updates `ossf/scorecard-action` from 2.1.2 to 2.3.1
    - [Release notes](https://github.com/ossf/scorecard-action/releases)
    - [Changelog](https://github.com/ossf/scorecard-action/blob/main/RELEASE.md)
    - [Commits](https://github.com/ossf/scorecard-action/compare/e38b1902ae4f44df626f11ba0734b14fb91f8f86...0864cf19026789058feabb7e87baa5f140aac736)
    
    Updates `github/codeql-action` from 2.2.4 to 3.24.10
    - [Release notes](https://github.com/github/codeql-action/releases)
    - [Changelog](https://github.com/github/codeql-action/blob/main/CHANGELOG.md)
    - [Commits](https://github.com/github/codeql-action/compare/17573ee1cc1b9d061760f3a006fc4aac4f944fd5...4355270be187e1b672a7a1c7c7bae5afdc1ab94a)
    
    ---
    updated-dependencies:
    - dependency-name: actions/cache
      dependency-type: direct:production
      update-type: version-update:semver-major
      dependency-group: github-actions
    - dependency-name: nick-fields/retry
      dependency-type: direct:production
      update-type: version-update:semver-major
      dependency-group: github-actions
    - dependency-name: coverallsapp/github-action
      dependency-type: direct:production
      update-type: version-update:semver-major
      dependency-group: github-actions
    - dependency-name: ossf/scorecard-action
      dependency-type: direct:production
      update-type: version-update:semver-minor
      dependency-group: github-actions
    - dependency-name: github/codeql-action
      dependency-type: direct:production
      update-type: version-update:semver-major
      dependency-group: github-actions
    ...
    
    Signed-off-by: dependabot[bot] <support@github.com>

commit 80e25c02ff2b7b3e5a9221f0c533b84c9cdb16d0
Author: Diogo Teles Sant'Anna <diogoteles@google.com>
Date:   Tue Apr 9 11:57:42 2024 -0300

    Enable dependabot for github actions

commit a4ec4cbe5121143b202124e1f2aa201bb8ee9985
Author: Diogo Teles Sant'Anna <diogoteles@google.com>
Date:   Tue Apr 9 11:55:37 2024 -0300

    Hashpin workflows that use sensitive permisisons

commit 9de85b5834211b53be56d97822e5769e81cc1dae
Author: williammuji <williammuji@gmail.com>
Date:   Fri Apr 5 20:42:37 2024 +0800

    fix WSOptions enum value and extended payload length bug

commit 6e390911d0a670bdd4cad70b71cc18822ca69cd5
Author: icy17 <1061499390@qq.com>
Date:   Wed Apr 10 17:42:01 2024 +0800

    Fix potential Null pointer dereference in regress_buffer.c

commit 74217832a8ee6275433aa79be860c020578ac5f1
Author: icy17 <1061499390@qq.com>
Date:   Wed Apr 10 15:47:57 2024 +0800

    Fix potential Null pointer dereference in regress.c

commit d6e8835256c5a64a49a8c38deceb16635b57d931
Author: icy17 <1061499390@qq.com>
Date:   Wed Apr 10 17:45:03 2024 +0800

    Fix potential Null pointer dereference in regress_et.c

commit d45dca437387b0563fa37d6241588fa5cb2a6369
Author: icy17 <1061499390@qq.com>
Date:   Wed Apr 10 17:39:36 2024 +0800

    Fix potential Null pointer dereference in regress_thread.c

commit 2bdf17370c0f0353918e5c8dfaf2913fceb9d4dc
Author: icy17 <1061499390@qq.com>
Date:   Wed Apr 10 16:18:27 2024 +0800

    Fix potential Null pointer dereference in regress_finalize.c

commit 17796a2d8a6422395e0ec56564835ddc1fcff3e2
Author: icy17 <1061499390@qq.com>
Date:   Wed Apr 10 15:32:54 2024 +0800

    Fix potential Null pointer dereference in regress_http.c

commit f9526e13ceeb5ad65feb8329bd7b3c2199ecd29b
Author: icy17 <1061499390@qq.com>
Date:   Wed Apr 10 15:16:21 2024 +0800

    Fix potential NULL pointer dereference in regress_bufferevent.c

commit fc48803db49df1e6387770732cf71779486973b2
Author: icy17 <39425646+icy17@users.noreply.github.com>
Date:   Mon Apr 15 15:02:27 2024 +0800

    Fix potential Null pointer dereference in regress_zlib.c (#1597)
    
    Co-authored-by: Azat Khuzhin <a3at.mail@gmail.com>

commit c6e8f17541b99e8c3a089a1c6f70119d6f95db9d
Author: emma-coronado <emma.dz.coronado@gmail.com>
Date:   Sun Apr 7 19:37:55 2024 -0400

    Edit logo path to match new website directory

commit 39073df8318364fc868ab6d90a345ea4fc66e864
Author: Liu Dongmiao <liudongmiao@gmail.com>
Date:   Sat Mar 30 21:44:50 2024 +0800

    evutil: don't call memset before memcpy
    
    In `evutil_parse_sockaddr_port`, it would `memset` the `out` to zero,
    however, the `memset` is unnecessary before `memcpy`, and may cause
    undefined behavior if the `outlen` is invalid.
    
    This should close #1573.

commit 4fd07f0ee82eb89337b4e369864e9cedae8a116c
Author: neil <github@neilpang.com>
Date:   Tue Mar 12 21:56:35 2024 +0100

    Upgrade vmactions to use linux runners (#1570)
    
    Co-authored-by: neil <neilgit@neilpang.com>

commit 539f73e319cb8760164ff1e0bac0df3895310f91
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Feb 20 09:30:22 2024 +0100

    Fix leak in evbuffer_add_file() on empty files
    
    Found by oss-fuzz, after coverage had been improved in google/oss-fuzz#11257
    v2: adjust test
    v3: fix for windows (_get_osfhandle() crashes when called on closed fd)
    v4: fix for EVENT__DISABLE_MM_REPLACEMENT

commit b9e1fe74e724a3f1524904b4658b9a4acdea50f5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 11 21:00:18 2024 +0100

    ci: disable netbsd and freebsd due to lack of runners
    
    For example for openbsd-cmake-job (7.2, NONE)
    
        This request was automatically failed because there were no enabled runners online to process the request for more than 1 days.
    
    And maybe this will fix the macos builds.

commit 0054b9aadb0da4a8bcebf2bc28a85aefc64107b8
Author: Andy Pan <panjf2000@gmail.com>
Date:   Mon Mar 11 17:12:14 2024 +0800

    Enable the full TCP KeepAlive mechanism on Windows (#1568)
    
    #1532 implemented the full support of TCP Keep-Alives on UNIX-like OS's while leaving a `TODO` for Windows. This PR intends to resolve that `TODO`.
    
    ## References
    
    - [SIO_KEEPALIVE_VALS Control Code](https://learn.microsoft.com/en-us/windows/win32/winsock/sio-keepalive-vals)
    - [IPPROTO_TCP socket options](https://learn.microsoft.com/en-us/windows/win32/winsock/ipproto-tcp-socket-options)
    - [TCP_KEEPINVTL and TCP_KEEPIDLE - Socket Keep Alives not working](https://cygwin.com/pipermail/cygwin/2020-June/245436.html)
    - [Cygwin: tcp: Support TCP_KEEPIDLE, TCP_KEEPCNT, TCP_KEEPINTVL](https://sourceware.org/pipermail/cygwin-cvs/2020q3/014473.html)
    - [Add cross-platform support for keep-alive socket options](https://github.com/dotnet/corefx/pull/29963/files)

commit 9c8860ec6c38655d4698a038ba95064bbea96ff2
Author: tgolang <seekseat@aliyun.com>
Date:   Mon Mar 11 15:50:43 2024 +0800

    chore: remove repetitive words
    
    Signed-off-by: tgolang <seekseat@aliyun.com>

commit e66df92cfc23b4d2822989987af87fd488ce4f68
Author: Andy Pan <panjf2000@gmail.com>
Date:   Thu Mar 7 16:19:11 2024 +0800

    Accept SOCK_NONBLOCK/SOCK_CLOEXEC in type argument of socketpair (#1567)
    
    Setting `SOCK_NONBLOCK` and `SOCK_CLOEXEC` in the `type` argument of `socketpair()` is widely supported across UNIX-like OS: Linux, *BSD, Solaris, etc., as is the `socket()`. This will conserve several extra system calls, we should use it where available.
    
    ### References
    
    - [socketpair(2) on Linux](https://man7.org/linux/man-pages/man2/socketpair.2.html#HISTORY)
    - [socketpair(2) on FreeBSD](https://man.freebsd.org/cgi/man.cgi?query=socketpair&sektion=2#DESCRIPTION)
    - [socketpair(2) on DragonFly](https://man.dragonflybsd.org/?command=socketpair&section=2)
    - [socketpair(2) on NetBSD](https://man.netbsd.org/socketpair.2#DESCRIPTION)
    - [socketpair(2) on OpenBSD](https://man.openbsd.org/socketpair.2)
    - [socketpair(3C) on Solaris](https://docs.oracle.com/cd/E88353_01/html/E37843/socketpair-3c.html)
    
    Changelog:
    - Set SOCK_NONBLOCK and SOCK_CLOEXEC in the type argument of socketpair
    - Avoid EPROTOTYPE on macOS and OpenBSD
    - Eliminate the warnings about unused variables
    - Add some comments

commit f2b3ce6b5587efb206bc74298d7a835372ce2caf
Merge: 15e643d0 e4b87327
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 3 23:10:48 2024 +0100

    Merge pull request #1558 from azat/ratelimit-fixes
    
    Fix few issues found by oss-fuzz in bufferevent ratelimits

commit e4b873270138b5c10d4903980d765d0f6fe0b58c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Feb 20 08:58:04 2024 +0100

    Fix integer-overflow in ev_token_bucket_cfg_new
    
    Found by oss-fuzz, after coverage had been improved in https://github.com/google/oss-fuzz/pull/11257
    
    v2: better check (found by CI for windows)

commit 15e643d0ca4eced47d71dc84d5a287c9168e77a6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 3 14:49:34 2024 +0100

    Fix pread detection for cmake builds
    
    Otherwise it will use lseek()+read() - suboptimal

commit 921097477e00fe8f33aa6b75f7dd6f9db9cac271
Author: Andy Pan <panjf2000@gmail.com>
Date:   Sat Mar 2 10:45:49 2024 +0800

    Simplify TCP_KEEPALIVE_ABORT_THRESHOLD settings on Solaris

commit c4fb0f7603ed5fa8382eef5609f50426eba475b8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Feb 20 08:58:04 2024 +0100

    Fix divide-by-zero in ev_token_bucket_get_tick_
    
    Found by oss-fuzz, after coverage had been improved in https://github.com/google/oss-fuzz/pull/11257

commit ec8d7a5a7bd02369d4e776c41413a1acb9c41c42
Merge: 0dbd3eb3 7eddd526
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Feb 20 08:54:14 2024 +0100

    ci: fix ABI check (#1510)

commit 7eddd5262a768729267ef9a112fe9e024d9abd5b
Author: Pierce Lopez <pierce.lopez@gmail.com>
Date:   Tue Feb 20 07:56:24 2024 +0100

    Patch abi-compliance-checker to avoid endless loop

commit 798547ac20fa89c8893a66a578a40917118b3131
Author: Pierce Lopez <pierce.lopez@gmail.com>
Date:   Tue Feb 20 07:51:37 2024 +0100

    Force abi-check to use DWARF 3

commit e486962561c6d59748fc40ca0e91840a7cbad26f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Feb 20 08:01:23 2024 +0100

    Fix abi_check.sh by excluding .abi-check from cp
    
        cp: cannot copy a directory, './.abi-check', into itself, '/le/src/.abi-check/work/abi-check/src/libevent/current/.abi-check'

commit 5bdfab767908f4944a46f57913a0e91cfc937e07
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 21:36:30 2024 +0100

    Debug abi check

commit f37c667cba4db80ea05c7e68804449f0e9d07c01
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 20:28:49 2024 +0100

    Add ABI check without deploy for PRs

commit 551df0b2f15191e883e703acf00dcbaf9d5f0f99
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 3 08:15:07 2023 +0200

    ci: try to fix ABI check by using newer version of ubuntu
    
    Looks like after upgrading ubuntu from 18.04 (that has 1.9 version of
    lvc abi tools) to 20.04 (that has 1.11) the abi-check started to
    timeout (works longer then 6 hours, while usually few minutes, and
    sometimes even faster was enough).
    
    Unlikely upgrading ubuntu will help, since 22.04 and 20.04 has the same
    version, but still, let's try.
    
    Refs: #1463

commit 0dbd3eb3c924cfa135fd888d120fefc35cc014a0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 16:06:28 2024 +0100

    tests: add test for EV_SIGNAL with timeout
    
    Refs: https://github.com/libevent/libevent-book/issues/12

commit 5cec3417bfa82064bd8d8d1f7157613b45817ccc
Merge: ed35b30f 3cf996f0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 19 08:21:11 2024 +0100

    Make Infer static analyzer happy (#1554)

commit ed35b30feb427e3b81d845113d58cece86bfc4ba
Author: Ramon Ortega de Voor <Ramon.Ortega@devolo.de>
Date:   Mon Oct 23 16:52:19 2023 +0200

    Fix two compiler errors for unused variable and undefined function
    
    In buffer.c a variable "flags" and a label "done" are defined but
    never used if "EVENT__HAVEMMAP" is not defined.
    
    The code does not work on platforms which do not provide
    the function `socketpair()`. Introduce EVENT__HAVE_SOCKETPAIR flag
    which determines if `socketpair()` or `evutil_ersatz_socketpair()`
    is used.

commit 95ed33e37a9cd346066fad48a6db562af0ab6b57
Merge: f9939490 8feed7f1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 22:08:54 2024 +0100

    Follow up for HTTP chunk size check (#1552)

commit f9939490ebdba403462b6839d29fdc6837d8a0ec
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 21:19:41 2024 +0100

    Fix leak in evconnlistener_new_async()
    
    Fixes: https://github.com/libevent/libevent/issues/414

commit 317911a1a02ee13b759042a778adf55592a7d233
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 20:39:12 2024 +0100

    Fix util/monotonic_prc_fallback under FreeBSD
    
    Looks like there was garbage, since evutil_configure_monotonic_time_()
    does not reset evutil_monotonic_timer structure, while in case of
    fallback it uses two fields from it:
    - last_time
    - adjust_monotonic_clock
    
    Fixes: https://github.com/libevent/libevent/issues/1495

commit 3cf996f0ed5f4cecf4c7a7fb4cf025baf22bc629
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 19:53:58 2024 +0100

    evutil: add a comment why no NULL check in evutil_inet_pton_scope()

commit 5412b2c30d7ee228db1da4cfe2f5176ce4e29706
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 19:40:00 2024 +0100

    bufferevent_ssl: fix freeing ctx in case of error in bufferevent_ssl_new_impl

commit c9793baa87c8425fc8dd6fb40901bc364f65cd9e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 19:39:50 2024 +0100

    bufferevent_ssl: proper NULL checks

commit 6e4ea6c3f104f7777af7715266de8358aa9486b4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 19:31:12 2024 +0100

    evthread: fix NULL dereference in evthread_setup_global_lock_()

commit 2f27523e44499686ec010f00f7ebc3f5c7598b54
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 18:22:21 2024 +0100

    bufferevent_ssl: do not return NULL from upcast
    
        /src/le/libevent/bufferevent_ssl.c:863: error: Null Dereference
          pointer `bev_ssl` last assigned on line 855 could be null and is dereferenced at line 863, column 6.
          861.          r2 = start_writing(bev_ssl);
          862.
          863.  if (bev_ssl->underlying) {
                    ^
          864.          if (events & EV_READ)
          865.                  BEV_RESET_GENERIC_READ_TIMEOUT(bev);

commit 53034936707727f8f06ba1a7ae5c6967e13cee91
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 18:16:38 2024 +0100

    bufferevent_filter: do not allow upcast() to return NULL (fixes infer warning)
    
        /src/le/libevent/bufferevent_filter.c:234: error: Null Dereference
          pointer `bevf` last assigned on line 231 could be null and is dereferenced at line 234, column 6.
          232.  EVUTIL_ASSERT(bevf);
          233.
          234.  if (bevf->bev.options & BEV_OPT_CLOSE_ON_FREE) {
                    ^
          235.          /* Yes, there is also a decref in bufferevent_decref_.
          236.           * That decref corresponds to the incref when we set

commit d9b5fe318acdc329f8a549917d48f8376b8b5ba1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 18:03:38 2024 +0100

    evrpc: proper NULL checks (API function return value added)
    
    Note, that in order to do this evrpc_hook_add_meta() should have return
    value, so this is a minor ABI change, which should not affect C ABI, but
    still worth to mention.
    
    Anyway this will be done in 2.2 release and unlikely RPC subsystem is
    popular.

commit 05ed7c8c7e89eb31f9b350a2a1361b22b61b0b8a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 18:00:57 2024 +0100

    bufferevent_pair: fix infer warnings due to upcast() return NULL
    
    The only user that is care about this is bufferevent_pair_get_partner(),
    so let's move the check there.

commit 8feed7f165a77cdde63bac78be3be89cae0d7f6b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 19:26:47 2024 +0100

    http: forbid chunks size with 0X prefix
    
    Co-authored-by: Ben Kallus <49924171+kenballus@users.noreply.github.com>

commit 87cdcc1868fc015665100c31cd66ca59baa15c7a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 15:24:58 2024 +0100

    http: change error for corrupted requests to 400 Bad Request
    
    Previously it was 413 Request Entity Too Large, which was odd.

commit f1632e59097000f35d269d4a117b059e6aaa3b03
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 15:24:33 2024 +0100

    http: check first byte of the chunk for 0x as well

commit e60d039ddfc8022f7fc2893cf943cccad8ef51f3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 15:02:59 2024 +0100

    tests: add a test for malformed chunks
    
    v2: fix test for win32 (and it more correct in general)

commit 92ea8476b4749b75d866cec6f5f59ffb6a89b594
Author: Ben Kallus <49924171+kenballus@users.noreply.github.com>
Date:   Sun Feb 18 08:56:46 2024 -0500

    Forbid 0x/+/-/whitespace prefixes on HTTP chunk sizes (#1542)
    
    Currently, libevent's HTTP parser accepts and ignores 0x, +, and whitespace prefixes on chunk sizes. It also ignores - prefixes on chunk sizes of 0. This patch fixes that.
    
    There is a potential danger in the current behavior, which is that there exist HTTP implementations that interpret chunk sizes as their longest valid prefix. For those implementations, 0xa (for example) is equivalent to 0, and this may present a request smuggling risk when those implementations are used in conjunction with libevent. However, as far I'm aware, there is no HTTP proxy that both interprets 0xa as 0 and forwards it verbatim, so I think this is a low-risk bug that is acceptable to report in public.

commit da3c7b50271bf1200b0b04d3fa49a06619a9f4cb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 18 12:07:07 2024 +0100

    Update link to the github package registry usage from github actions
    
    Ugh, old link even don't have any redirect, what is a pitty.
    
    [skip ci]

commit 7870e85ecbfa09d79c66d382301ecd0a1e441c19
Author: kurtliu <kurtliu@tencent.com>
Date:   Wed Jan 24 13:19:23 2024 +0800

    install DESTINATION use CMAKE_INSTALL_<dir>

commit b698e6c4b0edaf0f6bdb00544a0b8315c2bb1bde
Author: kurtlau <kurtlau.me@gmail.com>
Date:   Tue Jan 23 04:29:04 2024 +0800

    Make MbedTLS and OpenSSL dependencies configurable (#1544)
    
    As acfac7a#r124469888 mentioned, LibeventConfig.cmake is looking for MBedTLS package, even if libevent is not configured to use MBedTLS.
    
    This PR makes MbedTLS and OpenSSL dependencies configurable.
    
    Fixes: #1543

commit 665d79f17677a8f670733656d0f574c9ab7fabb5
Author: Ben Kallus <49924171+kenballus@users.noreply.github.com>
Date:   Thu Jan 18 16:42:52 2024 -0500

    Fix integer overflow in HTTP version (#1541)
    
    Currently, when libevent parses requests with version `HTTP/4294967295.255`, you end up with `req->major == req->minor == (char)-1`. (At least on linux-gnu-x86_64, where `char` is signed.)
    
    This is sort of weird.
    
    This patch changes the version parser to match the grammar in RFCs 7230 and 9112. (i.e. `HTTP/[0-9].[0-9]`)
    
    EDIT: Technically, a little stronger than the RFC requires, since this patch continues to block major versions greater than 1, which was already what libevent was doing.

commit 55899c2fcb4c9b62f1f7b6dffed8ff961dcad546
Author: Andy Pan <panjf2000@gmail.com>
Date:   Sun Jan 14 21:24:37 2024 +0800

    Use read/write instead of readv/writev for single buffer
    
    The `readv`/`writev` functions are designed for scattered I/O optimally,
    their logic in the kernel is more sophisticated, compared to read/write,
    which includes extra on-stack `iovec` in the kernel space, importing `iovec`
    array from user space to kernel space, reading/writing with `iov_iter`, etc.
    As a result, using `readv`/`writev` on single-segment `iovec` will fall into
    the special branch in the kernel where it is imported as `ITER_UBUF` differed
    from `ITER_IOVEC` for multiple-segments `iovec`.
    
    Thus, it is just not worth calling `readv`/`writev` for single-segment `iovec`,
    we should use `read`/`write` instead, to save it from going through the
    sophisticated yet unnecessary kernel code path, circumvent a waste of
    kernel on-stack memory, copying `iovec` between user space and kernel space, etc.

commit 3f508af6e202e306a84ecc8ab7e456d999f05552
Author: Andy Pan <panjf2000@gmail.com>
Date:   Sun Jan 14 13:40:35 2024 +0800

    Ignore the project files from IDE or editors
    
    I sometimes browse and edit C/C++ code with VSCode,
    and it would generate some project files in .vscode
    which could easily be added and even pushed to a git repo by accident.
    
    It's sort of annoying for programmers who work with VS/VSCode,
    IntelliJ/Clion, or other widely-used IDE or editors to prevent
    themself from using git command like `git add .` in lib event project.
    
    Therefore, I propose leaving the project files generated by VS/VSCode
    and IntelliJ/Clion untracked for libevent project. Hopefully, this can be accepted.

commit 23cdd61063902e3360ba0460549e17836aba67e0
Author: Andy Pan <panjf2000@gmail.com>
Date:   Mon Jan 15 12:26:58 2024 +0800

    Use evutil_set_tcp_keepalive for sample/becat.c
    
    Since #1532 introduced the util function for consolidating TPC keep-alive settings,
    there is no need to write other handmade functions elsewhere.

commit cffb7c03f1965b4706435315dd3456061d53a102
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jan 13 15:54:49 2024 +0300

    ci: disable ABI check temporary (I hope that "temporary")
    
    Refs: https://github.com/libevent/libevent/issues/1463

commit 9d4853b363e3bd94c957163253de11b2a08b7c2f
Author: Andy Pan <panjf2000@gmail.com>
Date:   Sat Jan 13 20:51:49 2024 +0800

    Optimize preprocessor directives on Solaris for evutil_set_tcp_keepalive (#1536)
    
    Changes:
    - Optimize preprocessor directives on Solaris for evutil_set_tcp_keepalive
    - Reduce the amount of code being compiled and trim trailing whitespace in passing.
    - Move comments for Solaris under its macro
    - Refactor the control flow

commit 76460fbe662610ff45ca542d73da371188653b2a
Merge: 7658b788 3e01178b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jan 6 14:29:22 2024 +0100

    Fix windows CI (#1533)
    
    But note, that there is still issues with MbedTLS and ZLIB:
    
        CMake Error at C:/Program Files/CMake/share/cmake-3.27/Modules/FindPackageHandleStandardArgs.cmake:230 (message):
        Error:   Could NOT find MbedTLS (missing: MBEDTLS_INCLUDE_DIR MBEDTLS_LIBRARY
          MBEDTLS_CRYPTO_LIBRARY MBEDTLS_X509_LIBRARY MBEDTLS_LIBRARIES
          MBEDTLS_VERSION)
        Call Stack (most recent call first):
          C:/Program Files/CMake/share/cmake-3.27/Modules/FindPackageHandleStandardArgs.cmake:600 (_FPHSA_FAILURE_MESSAGE)
          D:/a/libevent/libevent/cmake/FindMbedTLS.cmake:142 (find_package_handle_standard_args)
          D:/a/libevent/vcpkg/scripts/buildsystems/vcpkg.cmake:859 (_find_package)
          C:/Program Files/CMake/share/cmake-3.27/Modules/CMakeFindDependencyMacro.cmake:76 (find_package)
          D:/a/libevent/libevent/build/LibeventConfig.cmake:43 (find_dependency)
          D:/a/libevent/vcpkg/scripts/buildsystems/vcpkg.cmake:859 (_find_package)
          CMakeLists.txt:11 (find_package)
    
    But by some reason it is not a fatal error on some builds:
    
        -- OpenSSL lib: optimized;C:/Program Files/OpenSSL/lib/VC/libssl64MD.lib;debug;C:/Program Files/OpenSSL/lib/VC/libssl64MDd.lib;optimized;C:/Program Files/OpenSSL/lib/VC/libcrypto64MD.lib;debug;C:/Program Files/OpenSSL/lib/VC/libcrypto64MDd.lib
        -- Could NOT find MbedTLS (missing: MBEDTLS_INCLUDE_DIR MBEDTLS_LIBRARY MBEDTLS_CRYPTO_LIBRARY MBEDTLS_X509_LIBRARY MBEDTLS_LIBRARIES MBEDTLS_VERSION)
        -- Could NOT find ZLIB (missing: ZLIB_LIBRARY) (found version "1.2.11")
    
    This will be fixed separatelly - #1534, partially worked CI better then
    fully broken anyway.
    
    * ci/windows:
      Update vcpkg to fix windows CI
      Switch to windows-latest (just in case)

commit 3e01178b1b9d88026278e1442053e0452b1879b8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jan 6 13:53:32 2024 +0100

    Update vcpkg to fix windows CI
    
    Previusly it got lots of 404 errors during downloading packages, this
    was due to too old repository had been used.

commit 85c09bbfa6e245bd4ed008ad8b9e19dec9a2765a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jan 6 13:15:58 2024 +0100

    Switch to windows-latest (just in case)

commit 7658b78853e65612989332b8f25384f97352eac4
Author: Andy Pan <panjf2000@gmail.com>
Date:   Sat Jan 6 00:52:43 2024 +0800

    Implement full support of TCP Keep-Alives across most Unix-like OS's (#1532)
    
    Default settings of TCP keep-alive are not always feasible,
    take Linux for example, the duration a connection needs to be
    idle before sending out the first keep-alive probe is two hours,
    which makes detecting dead connections extremely deferred. Thus,
    enabling TCP keep-alive will be to little avail.
    
    This sets TCP_KEEPIDLE, TCP_KEEPINTVL, and TCP_KEEPCNT when enabling TCP
    keep-alive mechanism to make it practicable.

commit 0c54433c120309ff14c90de40567b214d5335306
Author: Hemanth Nandish <hemanthluvsfifa@gmail.com>
Date:   Sun Nov 26 14:53:23 2023 -0600

    time-test: use event_new for compatibility with future libevent (#1525)

commit 4c38de8cb334bf3094c9a1266ddbb9c1b6cffab7
Author: Sam James <sam@cmpct.info>
Date:   Sun Nov 26 20:52:32 2023 +0000

    Fix -Walloc-size (#1526)
    
    Co-authored-by: Azat Khuzhin <azat@libevent.org>

commit 4881b5928e56b5c51244520ffd2ac21464a23c29
Merge: 7f5b8f19 15b9b6f0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 25 19:13:35 2023 +0100

    Merge pull request #1519 from cculianu/ws_c_fixes

commit 7f5b8f1909c9cecf26eb631ce2627a9c109dd273
Author: Faraz Vahedi <kfv@kfv.io>
Date:   Sat Nov 18 15:55:14 2023 +0330

    Fix documentation inconsistency in evhttp callbacks
    
    This commit addresses a minor inconsistency identified in the
    documentation of multiple `evhttp` callback functions within
    the `event2/http.h` header file. It was observed that the word
    "additional" was presumably missing in the description of the
    `arg` parameter for several functions. This oversight led to
    an incorrect phrasing: "an context argument for the callback."
    
    The documentation for the following functions has been updated
    to rectify this issue:
    
      - `evhttp_set_gencb`
      - `evhttp_set_bevcb`
      - `evhttp_set_newreqcb`
      - `evhttp_set_errorcb`
    
    This commit solely improves the readability of the function
    descriptions without altering any functional aspects of the
    code.

commit cfb2b89a1d0642abd6389913e237f49c662502e4
Author: Ramon Ortega de Voor <Ramon.Ortega@devolo.de>
Date:   Mon Oct 23 17:15:34 2023 +0200

    fix ERR macro geting redefined
    
    In evutil.c a macro ERR gets defined,
    this is a very generic name in case that
    in a included header file ERR is used too,
    the compiler will fail complaining
    about the redefinition of the macro ERR.
    To fix this make sure ERR is undefined,
    before defining it in evutil.c

commit a579b1d77ca70fe6016cd08ad05fea53d6f66d4c
Author: Ramon Ortega de Voor <Ramon.Ortega@devolo.de>
Date:   Fri Oct 20 15:36:07 2023 +0200

    Fix compile error in evbuffer_read()
    
    The variable chainp is only used if USE_IOVEC_IMPL is defined.
    This makes a strict compiler complain about unused variables,
    since chainp is declared outside of an USE_IOVEC_IMPL block.

commit 15b9b6f0193e6f7f050d4bf104e8720441c7ef3c
Author: Calin Culianu <calin.culianu@gmail.com>
Date:   Tue Oct 17 12:45:33 2023 +0300

    Apply suggestions from code review
    
    Co-authored-by: Azat Khuzhin <a3at.mail@gmail.com>

commit b828c4ab41f6357eb7c401518a3c531f0b1612f4
Author: Calin Culianu <calin.culianu@gmail.com>
Date:   Mon Oct 16 15:25:12 2023 +0300

    Added 10MiB recv limit for WS frames, also a small nit
    
    - Added WS_MAX_RECV_FRAME_SZ, if a received frame exceeds this limit (10
      MiB), error out. This is a DoS prevention measure.
    - Also redid the unmasking code in get_ws_frame(), to avoid assumptions
      about the size of an unsigned int and some casting, and avoid
      memcpy(), just use the mask bytes from the buffer that are already there
      to unmask.

commit 7fbbe86ff3b4ae8c843d23ad4a32f874eb2216d7
Author: Calin Culianu <calin.culianu@gmail.com>
Date:   Sat Oct 14 23:53:36 2023 +0300

    Fix unaligned access + missing frame length
    
    get_ws_frame:
      - had potentially unaligned access; fixed.
      - was not reading the full 8 bytes in the 64-bit case (was using the
        incorrect htons); fixed.
    make_ws_frame:
      - wasn't writing the length in the 8-byte case.
    
    Also switched both functions to use size_t rather than int where
    appropriate.

commit c9af024585e743f0eb1521b69165cab783982def
Author: binarycraft007 <elliot.huang.signed@gmail.com>
Date:   Thu Oct 12 10:22:04 2023 +0800

    wepoll api: fix definition of EPOLLONESHOT to match Linux

commit 23685cfbd116ce83ec45dadf88a093eeb54f5f93
Author: Gordon Bergling <gbe@FreeBSD.org>
Date:   Thu Sep 28 11:18:10 2023 +0200

    Fix some typos (#1515)

commit d30ad0a7fd05a3f00eea7e2ea8ad7735193c47d1
Merge: c15ba75d 9e4693ed
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Sep 22 10:21:15 2023 +0200

    Merge branch 'becat-fixes-v2'
    
    * becat-fixes-v2:
      becat: change -R to -b (since it is more of a buffer size)
      becat: add ability to set TCP keepalive

commit 9e4693ed07b09e49a58cb6bbbb647abdd31c69f5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Sep 22 10:21:06 2023 +0200

    becat: change -R to -b (since it is more of a buffer size)

commit 617cf5efa8c3a094c48e6d6b1296a8a716c2a7c6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Sep 22 10:21:06 2023 +0200

    becat: add ability to set TCP keepalive

commit c15ba75d184df2dadc14dc12e7498e108cd6963a
Merge: d9780cf9 c2a935b5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Sep 22 09:35:42 2023 +0200

    Merge branch 'evbuffer_add_reference_with_offset' - #1513
    
    * evbuffer_add_reference_with_offset:
      Add a comment for evbuffer_ref_cleanup_cb
      tests: simplify test_evbuffer_add_reference_with_offset
      Add function evbuffer_add_reference_with_offset()

commit c2a935b5c75984e6c715f5ec6868eb7967619fb9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Sep 22 09:34:59 2023 +0200

    Add a comment for evbuffer_ref_cleanup_cb

commit d9780cf96a9d6d12ba90bb25a34a56d4e140b624
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Sep 21 22:04:17 2023 +0200

    Fix -Wsingle-bit-bitfield-constant-conversion warning in clang 16
    
    report:
    
        /src/le/libevent/sample/becat.c:304:29: warning: implicit truncation from 'int' to a one-bit wide bit-field changes value from 1 to -1 [-Wsingle-bit-bitfield-constant-conversion]
                                case 'k': o.extra.keep   = 1; break;

commit cc3a92007391b78be6d16452c9fe70add2e9878f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Sep 21 22:02:48 2023 +0200

    tests: simplify test_evbuffer_add_reference_with_offset

commit 648ec50e11c4c84ba2427111251dc857aa571cf9
Author: MBeanwenshengming <wenshengming80@gmail.com>
Date:   Thu Sep 21 15:13:31 2023 +0800

    Add function evbuffer_add_reference_with_offset()
    
    This is the same as evbuffer_add_reference(), but allows to specify
    offset in the @data
    
    v2: rename evbuffer_add_reference_misalign() to evbuffer_add_reference_with_offset()

commit 8728c983117fdb072986811893e89ebe12cc3d7c
Author: Gordon Bergling <gbe@FreeBSD.org>
Date:   Wed Aug 2 10:56:35 2023 +0200

    evthread: Fix typos in error messages
    
    - s/probaby/probably/

commit 0797e207839f7cfe1333474dac1745a0973b7a2f
Author: DmiTriy Fedchenko <xFEDCh@gmail.com>
Date:   Wed Aug 2 18:37:42 2023 +0400

    Fixed misaligned address access

commit f39ad1c4943dda3bb73dbc7c4834de2e639f8cf8
Author: Dmitry Ilyin <dima@doty.ru>
Date:   Thu Aug 31 22:38:41 2023 +0300

    ws: replace evws_send with evws_send_text/evws_send_binary (ABI breakage) (#1500)
    
    Replace evws_send with evws_send_text, and introduce new API -
    evws_send_binary, that can be used to send binary frames.
    
    But note, that this commit breaks the ABI compatibility, but it should be OK,
    since there was only alpha release with evws_send, and nobody should rely on
    this, and I hope nobody does (we decided to go this way to avoid supporting
    deprecated API).

commit 21d2f5a415129a4f4465bb14339a1e677da4c9ca
Author: Michael Davidsaver <mdavidsaver@gmail.com>
Date:   Fri Aug 18 07:51:02 2023 -0700

    Fixes #include of winsock.h before winsock2.h

commit c9ec6aafb6a025f03636ae2ae7c18a2d4b8a7ed8
Author: Michael Davidsaver <mdavidsaver@gmail.com>
Date:   Tue Aug 1 14:02:34 2023 -0700

    Update cmake policy wrt. RPATH on OSX
    
    Previous settings caused install outside CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES
    to use install_name "lib/" in place of the expected (and useful) "@rpath/".

commit 3c29a81b8bf561436f34949006b42d8533ed3460
Author: Michael Davidsaver <mdavidsaver@gmail.com>
Date:   Sun Jul 30 07:44:53 2023 -0700

    fixup RPATH computation
    
    Handle cases where ${CMAKE_INSTALL_LIBDIR} is not ${CMAKE_INSTALL_PREFIX}/lib .
    Also, preserve user provided ${CMAKE_INSTALL_RPATH} .
    
    fixup for 41a7393f3ecd1e9f58331df4653dac2e6739304e

commit 66b3904b306ca0ea530b3671ec91c26aee0537f8
Merge: 6db587de f76bd641
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 29 22:27:31 2023 +0200

    Merge pull request #1498 from mdavidsaver/cleanup-_WIN32_WINNT

commit f76bd641f2b2a5d662afd21df0569f38b00e46fc
Author: Michael Davidsaver <mdavidsaver@gmail.com>
Date:   Sat Jul 29 08:12:26 2023 -0700

    increment _WIN32_WINNT in evutil.c

commit 126523f9ce9e9e9ce59efeec493ccb6a1efa44b3
Author: Michael Davidsaver <mdavidsaver@gmail.com>
Date:   Tue Jul 25 11:01:32 2023 -0700

    fix prototype of evutil_check_working_afunix_()
    
    mingw w/ gcc 12 defaults to -Wstrict-prototype which complains
    about K&R style argument lists.

commit a14ff91254f40cf36e0fee199e26fb11260fab49
Author: Michael Davidsaver <mdavidsaver@gmail.com>
Date:   Tue Jul 25 10:52:10 2023 -0700

    move _WIN32_WINNT defintions before first #include
    
    _WIN32_WINNT and WIN32_LEAN_AND_MEAN need to be defined
    before the windows.h is included for the first time.
    Avoid the confusion of indirect #include by defining
    before any.

commit 6db587dedb8197804e0ab760a4d86786450c7488
Merge: 7b302e7d e26e0647
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 16 15:23:14 2023 +0200

    Merge branch 'scorecard-action' (#1494)
    
    * scorecard-action:
      docs(readme): add scorecard badge
      Enable Scorecard GitHub Action

commit e26e064762303b15a595c2e84853f243677f1c07
Author: Diogo Teles Sant'Anna <diogoteles@google.com>
Date:   Fri Jul 14 14:09:52 2023 -0300

    docs(readme): add scorecard badge

commit 613581bbcfdc9e2d2035879db26ee13acf299dd5
Author: Diogo Teles Sant'Anna <diogoteles@google.com>
Date:   Fri Jul 14 13:38:04 2023 -0300

    Enable Scorecard GitHub Action

commit 7b302e7dbe045c18497743a429af0e981d495c9f
Merge: 227510d5 3d1d7548
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jul 13 21:21:58 2023 +0200

    Merge branch 'disable-signalfd'
    
    * disable-signalfd:
      Increase timeout for tests
      Disable signalfd by default

commit 3d1d7548cd70699dbf539d6bdf49a3d05973701b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jul 11 21:29:37 2023 +0200

    Increase timeout for tests
    
    Now, it 20min for sequential runs is not enough already, I've tested it
    on t3.medium manually and got the same:
    
        Total Test time (real) = 1275.03 sec
    
    And also if I run tests in parallel then I had few failures:
    
        bufferevent/bufferevent_connect_fail:
          FAIL /root/libevent/test/regress_bufferevent.c:865: didn't fail? what 128
          FAIL /root/libevent/test/regress_bufferevent.c:906: assert(test_ok == 1): 0 vs 1
          FAIL /root/libevent/test/regress_bufferevent.c:839: assert(n_events_invoked == 1): 2 vs 1bufferevent/bufferevent_connect_fail_eventcb_defer:
          FAIL /root/libevent/test/regress_bufferevent.c:839: assert(n_events_invoked == 1): 2 vs 1bufferevent/bufferevent_connect_fail_eventcb: 3/386 TESTS FAILED. (45 skipped)
    
    v2: Increase timeout more (for netbsd)

commit 57d9eec6418f66cb143f45197cef1b55b55afc0f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jul 10 10:40:49 2023 +0200

    Disable signalfd by default
    
    signalfd may behave differently to sigaction/signal, so to avoid
    breaking libevent users (like [1], [2]) disable it by default.
    
      [1]: https://github.com/tmux/tmux/pull/3621
      [2]: https://github.com/tmux/tmux/pull/3626
    
    Also signalfd is not that perfect:
    - you need to SIG_BLOCK the signal before
      - blocked signals are not reset on exec
      - blocked signals are allowed to coalesce - so in case of multiple
        signals sent you may get the signal only once (ok for most of the
        signals, but may be a problem for SIGCHLD, though you may call
        waitpid() in a loop or use pidfd)
    - and also one implementation problem -
      sigprocmask is unspecified in a multithreaded process
    
    Refs:
    - https://lwn.net/Articles/415684/
    - https://ldpreload.com/blog/signalfd-is-useless
    
    Refs: https://github.com/libevent/libevent/issues/1460
    Refs: #1342 (cc @dmantipov)

commit 227510d5770f7e568a2d434885ed7abd1c43d1a1
Author: Vladislav Gusev <gysevvlad@gmail.com>
Date:   Thu Jul 13 22:20:33 2023 +0300

    Fix EVDNS_BASE_DISABLE_WHEN_INACTIVE (#1493)
    
    I faced with strange problem: event loop doesn't exit after dns resolving with
    `EVDNS_BASE_DISABLE_WHEN_INACTIVE`.
    
    Stand:
    - Ubuntu 22;
    - libevent release-2.1.12-stable
    - `resolve.conf` contains 2 nameservers;
    - I use `evdns_base_new` with `EVDNS_BASE_DISABLE_WHEN_INACTIVE | EVDNS_BASE_INITIALIZE_NAMESERVERS` to avoid OS specific code.
    
    After small investigation, look like events related with dns sockets added to
    event_base before `evdns->disable_when_inactive` was initialized. `libevent`
    did epoll_ctl(DEL) after resolving completed on the first socket, but the
    second socket remained in the `epoll` interest list.

commit 36ad1006c994a04473658be41c013c879ab9cd06
Author: mareksm <46475431+mareksm@users.noreply.github.com>
Date:   Mon Jun 26 11:13:58 2023 +0300

    #1479: GCC12 error for EVUTIL_FALLTHROUGH

commit 5ab24bddbe4cdf7fa55d3abcdcef24bbcbdd8671
Merge: be4eb97d 2b729238
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jun 28 21:33:47 2023 +0200

    Merge branch 'becat-fixes'
    
    * becat-fixes:
      becat: fix handling positional arguments
      becat: handle -T correctly

commit 2b729238e5a6ce1e10b70bf6a2c46d65b1282d6e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jun 28 21:33:41 2023 +0200

    becat: fix handling positional arguments

commit 687124d0184b68499a71bd2a5b7aaaed9e8e8f92
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jun 28 21:33:41 2023 +0200

    becat: handle -T correctly

commit be4eb97dc2ade55b7f091d373f9ff672cb76d3ae
Merge: b30c0d04 2e312772
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jun 21 22:26:51 2023 +0300

    Disable lazy gettimeofday/clock_gettime comparison (#1474)

commit 2e31277207f5f256e9cb31c26b2341d353878009
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jun 20 22:18:41 2023 +0200

    Disable lazy gettimeofday/clock_gettime comparison
    
    The benefit of this optimization is questionable for the following
    reasons:
    - libevent uses CLOCK_MONOTONIC_COARSE which is fast enough (on my
      desktop CLOCK_MONOTONIC/CLOCK_MONOTONIC_RAW works 40/50 millions of
      ops per second, and CLOCK_MONOTONIC_COARSE is faster)
    - libevent has caching of time (EVENT_BASE_FLAG_NO_CACHE_TIME)
    
    So I don't see any reason for using one more caching - lazy comparsion
    (whatever you call it).

commit 13366d2711361d5c58afd792d2df4220718bcaba
Author: Krzysztof Dynowski <krzydyn@arista.com>
Date:   Tue Jun 13 07:23:10 2023 -0700

    Test timer - synchronize clock before tv_timeout calculation.

commit 4f993028bef5e98bb278108786b20df34e11e4f2
Author: Krzysztof Dynowski <krzydyn@arista.com>
Date:   Tue Jun 13 07:23:10 2023 -0700

    Synchronize clock before tv_timeout calculation.

commit b30c0d0466f221924021cadf8e9769824ccc6ef9
Author: FreeCipher <admin@freecipher.com>
Date:   Wed Jun 21 03:55:00 2023 +0800

    Use mm_* functions in evutil_inet_pton_scope (#1476)

commit 242f76768460fffca5cf1bbea288f25b1f0f1d8d
Author: Dave Hart <davehart@gmail.com>
Date:   Sat Jun 17 00:16:41 2023 +0000

    Enable containing package CFLAGS etc.
    
    Add AC_SUBST of LIBEVENT_FLAGS, LIBEVENT_CPPFLAGS, and LIBEVENT_LDFLAGS so they are relayed from the configure command line to the Makefile

commit 57bb630ce3360db6e573c6cca1a859238d341e8b
Author: Q_uan <quan_qixian@163.com>
Date:   Tue Jun 20 13:49:37 2023 +0800

    Add __cplusplus in ws.h to fix compilation errors when using c++ compiler

commit b0194392fbeeca4b13ecf8a6a76bd54d111d2e63
Author: Alex <43925172+SunnyPaprika@users.noreply.github.com>
Date:   Thu Jun 8 23:25:22 2023 +0200

    wepoll: replace default malloc/free with libevent mm_ variants (#1472)
    
    This replaces malloc and free in wepoll.c with mm_malloc and mm_free. I'm using event-internal.h instead of mm-internal.h. Using only mm-internal.h in wepoll.c can cause errors regarding the export symbol macros.

commit 45e24185f5791ecc94566e2d81d6bcaba455327b
Merge: bca26524 7cd51ae1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jun 7 22:39:46 2023 +0200

    Merge pull request #1470 from mdavidsaver/auto-detect-ssl
    
    Both cmake and autoconf are capable of automatically detecting the presence of OpenSSL and MbedTLS.  However, the present build time logic doesn't do this.
    
    With cmake, my starting point is to preserve the reversed logic of `EVENT__DISABLE_OPENSSL` and `EVENT__DISABLE_MBEDTLS`, adding a third option `AUTO` as the new default.  I'm following the pattern of this [post on the cmake list](https://cmake.org/pipermail/cmake/2016-October/064342.html).  `OFF` and `ON` should continue with their present behaviors.
    
    With autoconf, I've tried to implement what I understand to be conventional behavior.  eg. `--enable-openssl` and `--disable-openssl` should continue to have the same effect.  The default if neither is passed is equivalent to the new `--enable-openssl=auto`.
    
    I've also added another commit removing what I think is an unnecessary `break` in `m4/libevent_mbedtls.m4`, which I suspect is leftover from some copy+paste from `m4/libevent_openssl.m4`.  Surprisingly to me, a `break` outside of any loop does not seem to be treated as an error.

commit 7cd51ae1ddf9362ab9906c365f890e12542b5e90
Author: Michael Davidsaver <mdavidsaver@gmail.com>
Date:   Tue Jun 6 12:43:02 2023 -0700

    Add CI tests which require SSL libraries

commit 9ce6ae78af0b2efcaec72288094e1816b3923fb8
Author: Michael Davidsaver <mdavidsaver@gmail.com>
Date:   Mon Jun 5 18:38:22 2023 -0700

    Add option to auto-detect OpenSSL and MbedTLS

commit 71848a237e0d76f9a2af0182f03d9c820ce02833
Author: Michael Davidsaver <mdavidsaver@gmail.com>
Date:   Tue Jun 6 12:34:08 2023 -0700

    libevent_mbedtls.m4 remove extraneous break
    
    Maybe a leftover or copy+paste from a for loop
    in libevent_openssl.m4 ?

commit bca26524fc4cd7a9e79d210c1079baaa7d29835d
Author: Diogo Teles Sant'Anna <diogoteles@google.com>
Date:   Thu May 25 02:05:28 2023 -0300

    Create Security Policy (#1462)
    
    I've created the SECURITY.md file following a GitHub's template and considering the report vulnerability through security advisory, which is a handy new GitHub feature (but it's still in beta and has to be enabled).
    
    Closes #1461
    Co-authored-by: Azat Khuzhin <a3at.mail@gmail.com>

commit 1418e793ad294f506640feed387a647ec26969cf
Author: Leo Zhang <nguzcf@gmail.com>
Date:   Thu May 25 10:37:24 2023 +0800

    build: fix some new warnings
    
    /opensource/libevent/sample/ws-chat-server.c:253:1: warning: control reaches end of non-void function [-Wreturn-type]
     }
     ^

commit 283a371f518301245a2ecf548ae55cf23698922c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 23 21:46:14 2023 +0200

    cmake: log when CMAKE_DEBUG_POSTFIX/CMAKE_BUILD_TYPE is changed

commit 2112c3969a63703662fa90796723ba50754f11c9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 22 08:21:01 2023 +0200

    autotools: fix generating pkg-config files (by substituting CMAKE_DEBUG_POSTFIX)
    
    Fixes: #1459

commit 4effaee523badcd37acc3c04dc953693c539140b
Author: Daniel Engberg <daniel.engberg.lists@pyret.net>
Date:   Mon May 22 00:01:17 2023 +0200

    cmake: Fix .pc files when building in Release mode
    
    Don't define CMAKE_DEBUG_POSTFIX as this breaks Release builds, only apply when doing debug builds.

commit abc114e3c8b57f071ea07e06d3a3e6f35ad5b6be
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 21 12:49:34 2023 +0200

    Bump default version when git tag is incorrect
    
    Fixes: #1457

commit 1c06b68fee9971e98bd340e17df39eab97f4c557
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 21 10:09:50 2023 +0200

    Add a note about the last number in NUMERIC_VERSION

commit fe9dc8f614db0520027e8e2adb95769193d4f0a3
Merge: 13ce3045 8d1388a3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 21 08:54:07 2023 +0200

    Merge branch 'release-2.2-pull' - 2.2.1-alpha (#1380)
    
    * release-2.2-pull:
      Bump version to 2.2.1
      Update ChangeLog and whatsnew for 2.2.1
      Update contributors (for 2.2 release)

commit 8d1388a37232e1f8ea7f8688e4834ccb785e6101
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 21 08:40:48 2023 +0200

    Bump version to 2.2.1

commit 4e19e8b4553f1b88d3c3c3c50477c9d3ae30916d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 20 16:28:28 2023 +0200

    Update ChangeLog and whatsnew for 2.2.1

commit 6ce568c38c93e2516f953640ccfde7761f6f771c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 20 23:15:29 2022 +0100

    Update contributors (for 2.2 release)

commit 13ce3045c71c1c3bd38614b58018ed726b00895b
Merge: 2c2ffb8d 1fb3e6d7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 20 18:19:04 2023 +0200

    Merge branch 'changelog-improvements'
    
    * changelog-improvements:
      Generate changelog in a reverse order
      Add PR number into the changelog
      Use authors of the real patches instead of merge commits
      Cleanup changelog.py

commit 1fb3e6d79eed1539d3221fa6304d8c063eab991e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 20 17:40:01 2023 +0200

    Generate changelog in a reverse order

commit 8b87ad48cbf58f6cc5837ae5a5ddae9ddb14a4d3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 20 17:36:58 2023 +0200

    Add PR number into the changelog

commit fb2e1a691944287f9e1f69eebd0059ea31c3bee0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 20 16:34:55 2023 +0200

    Use authors of the real patches instead of merge commits

commit c2e917d301ca0d213e3b020b18e7e6ef57a68b34
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 20 16:29:22 2023 +0200

    Cleanup changelog.py
    
    - Use positional argument for revision range
    - Remove unused import
    - Add some todos

commit 2c2ffb8d6e27d8e24ca92d407ce950a6402e1c5a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 20 16:00:09 2023 +0200

    Revert "cmake: Only use relative paths for install DESTINATION option (#1405)"
    
    After rebasing I broke the initial intention of this patch, so it simply
    should be reverted.
    
    This reverts commit 81c6b8823c1b58d7837e827bb1098aa5f9e5956b.

commit 5324e482d04b0851f0c5ef4f11f1d0ef877c3380
Merge: acfac7ae 49a7ae4c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 16 21:21:48 2023 +0200

    Merge branch 'ssl-read-pull' - #1454
    
    * ssl-read-pull:
      ssl: add some comments for lack of notify_close
      Drop unused le_ssl_ops::err_is_ok
      More SSL_read() to fill big buffer
      Make bufferevent_set_max_single_read() effect

commit 49a7ae4c5668ebad7b6c4618664224c1a0bc5079
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 16 21:14:34 2023 +0200

    ssl: add some comments for lack of notify_close

commit e5941b2ce963a9175e918029cb6973a7265976e2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 16 21:16:33 2023 +0200

    Drop unused le_ssl_ops::err_is_ok
    
    It is not used anymore since errors are ignored if some progress had
    been done.

commit ef51444f439b922c8fb00c7ef3f8482b6400b6ea
Author: Thuan Tran <thuan.tran@edgeware.tv>
Date:   Mon May 15 10:18:38 2023 +0700

    More SSL_read() to fill big buffer
    
    Once SSL_read() only get max 16K bytes (one TLS record).
    In case of big buffer, should more SSL_read() to fill the buffer.
    
    Using sample https-client to measure max income MBit/s via nload tool.
    Note: set bufferevent_set_max_single_read() by 32K and add the chunk
    callback to read out each piece of data.
    
    The client sample do https request a data 900KB (the server don't use
    Transfer-Encoding: chunked)
    - With origin/master: max income is 2.26 MBit/s
      The chunk callback never get a piece of data > 16K.
    - With this PR: max income is 2.44 MBit/s
      The chunk callback can get some piece of data 32K or more.

commit 4ab3242da1b5ae5d99ff2086df935057880ca9ff
Author: Thuan Tran <thuan.tran@edgeware.tv>
Date:   Mon May 15 19:57:38 2023 +0700

    Make bufferevent_set_max_single_read() effect

commit acfac7ae4a3edbbb7ce4ceee7208b4245a6e203e
Author: Ingo Bauersachs <ingo.bauersachs@xovis.com>
Date:   Thu Dec 1 18:39:52 2022 +0100

    Make dependency paths relocatable
    
    The generated configurations for both CMake and pkg-config included
    absolute paths to dependencies (OpenSSL, MbedTLS). This is contrary
    to the general CMake advise to create relocatable packages [1].
    
    Additionally, when building both mbedtls and libevent via CMake's
    FetchContent in the same project, loading the project would fail with
    
      INTERFACE_INCLUDE_DIRECTORIES property contains path:
        "/home/user/project/cmake-build/_deps/mbedtls-build/include"
      which is prefixed in the source directory.
    
    The required changes include:
    - Adding the outer includes only to the BUILD_INTERFACE solves the
      makes the CMake paths relocatable and thus solves the FetchContent
      problem.
    - Updates to libevent_*.pc.in fixes the relocatable issues for
      pkg-config and properly declares currently missing dependencies.
    - Using components for linking to OpenSSL (requiring CMake 3.4)
      and MbedTLS. The new MbedTLS target names now match the component
      names of the MbedTLS' CMake project.
    - Use the Threads CMake library reference instead of a direct
      reference to support both built-in pthread and -lpthread.
    
    v2 (azat): get back CMAKE_REQUIRED_LIBRARIES
    
    [1] https://cmake.org/cmake/help/v3.25/manual/cmake-packages.7.html#creating-relocatable-packages

commit 81c6b8823c1b58d7837e827bb1098aa5f9e5956b
Author: Jeremy W. Murphy <jeremy.william.murphy@gmail.com>
Date:   Tue May 16 05:07:36 2023 +1000

    cmake: Only use relative paths for install DESTINATION option (#1405)
    
    As described in #1404, the explicit use of CMAKE_INSTALL_PREFIX conflicts with using command-line --prefix.
    
    This simply removes all explicit use of CMAKE_INSTALL_PREFIX.
    
    Otherwise this path will be duplicated:
    
        $ cmake -DCMAKE_BUILD_TYPE=debug -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_INSTALL_PREFIX=inst ..
        $ DESTDIR=inst ninja install
        ...
        -- Installing: inst/src/le/libevent/.cmake-debug/inst/include/event2/util.h
        -- Installing: inst/src/le/libevent/.cmake-debug/inst/include/event2/ws.h
        ...
    
    Fixes: #1404
    Co-authored-by: Jeremy Murphy <jeremymu@blackmagicdesign.com>

commit 4dee61c02cc777c306227cd8378767ad544ce8bf
Merge: fe610f2c 16be768d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 14 22:56:02 2023 +0200

    Merge remote-tracking branch 'upstream/pr/1397' - #1397
    
    * upstream/pr/1397:
      Make sure exported include dirs are correct
      Fix Configure_RPATH()
      Install LibeventConfig.cmake similar to other cmake files
      Use GNUInstallDirs for mapping installation directories

commit 16be768dac438efafbafb6395066f262410459ca
Author: Tobias Mayer <tobim@fastmail.fm>
Date:   Sun Jan 15 07:49:19 2023 +0100

    Make sure exported include dirs are correct
    
    CMake config files don't need any logic to detect the location of
    installed headers or DSOs, because these locations are already
    determined at project configuration time. They also don't need
    to distinguish between build and install trees, because that is
    already handled by the generated `LibeventTargets-*.cmake` files.

commit 41a7393f3ecd1e9f58331df4653dac2e6739304e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 10 13:48:53 2022 +0300

    Fix Configure_RPATH()

commit be03bf385b0dccec189af71af71e0af0b402ebdb
Author: Jonathan Ringer <jonringer117@gmail.com>
Date:   Mon Nov 8 06:47:25 2021 -0800

    Install LibeventConfig.cmake similar to other cmake files
    
    - Don't destroy cmake file between test case invocations

commit 1f1593ff27bdf51c3e1c45b92cfb0ac931960298
Author: Jonathan Ringer <jonringer117@gmail.com>
Date:   Wed Oct 27 16:40:10 2021 -0700

    Use GNUInstallDirs for mapping installation directories

commit fe610f2cdcca98402ec6d104ab6b565699dcc3e6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 14 22:35:53 2023 +0200

    Fix util/mm_calloc_enomem under FreeBSD
    
    It looks like the compiler optimizes this call out with tt_assert():
    
        (gdb) disas /m test_event_calloc_enomem
        Dump of assembler code for function test_event_calloc_enomem:
           0x0000000000293bb0 <+0>:     push   %rbp
           0x0000000000293bb1 <+1>:     mov    %rsp,%rbp
           0x0000000000293bb4 <+4>:     call   0x29f510 <__error@plt>
           0x0000000000293bb9 <+9>:     movl   $0x0,(%rax)
           0x0000000000293bbf <+15>:    call   0x2990e0 <tinytest_set_test_failed_>
           0x0000000000293bc4 <+20>:    mov    $0x2168e4,%edi
           0x0000000000293bc9 <+25>:    mov    $0x220582,%esi
           0x0000000000293bce <+30>:    mov    $0x20d893,%edx
           0x0000000000293bd3 <+35>:    mov    $0x53a,%ecx
           0x0000000000293bd8 <+40>:    xor    %eax,%eax
           0x0000000000293bda <+42>:    call   0x29f3b0 <printf@plt>
           0x0000000000293bdf <+47>:    mov    $0x20da72,%edi
           0x0000000000293be4 <+52>:    mov    $0x20f731,%esi
           0x0000000000293be9 <+57>:    xor    %eax,%eax
           0x0000000000293beb <+59>:    pop    %rbp
           0x0000000000293bec <+60>:    jmp    0x29f3b0 <printf@plt>
    
    While with tt_ptr_op() it does not:
    
        (gdb) disas /m test_event_calloc_enomem
        Dump of assembler code for function test_event_calloc_enomem:
           0x0000000000293bd0 <+0>:     push   %rbp
           0x0000000000293bd1 <+1>:     mov    %rsp,%rbp
           0x0000000000293bd4 <+4>:     push   %rbx
           0x0000000000293bd5 <+5>:     push   %rax
           0x0000000000293bd6 <+6>:     call   0x29f610 <__error@plt>
           0x0000000000293bdb <+11>:    movl   $0x0,(%rax)
           0x0000000000293be1 <+17>:    mov    $0xffffffffffffffff,%rdi
           0x0000000000293be8 <+24>:    mov    $0xffffffffffffffff,%rsi
           0x0000000000293bef <+31>:    call   0x2a01c0 <calloc@plt>
           0x0000000000293bf4 <+36>:    test   %rax,%rax
           0x0000000000293bf7 <+39>:    je     0x293c2b <test_event_calloc_enomem+91>

commit 13f5552336f3b38f8bf9c7c33f28e785946565f5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 14 22:29:12 2023 +0200

    test: add missing include of arpa/inet.h for ntohs in regress_ws.c
    
    This will fix one warning in FreeBSD

commit 1f006637ecb23b09f36246e08986b3cb8fbfa562
Merge: d1969098 6eba967e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 14 22:03:26 2023 +0200

    Merge branch 'build/osx-fixes'
    
    * build/osx-fixes:
      Suppress -Wmacro-redefined for htonll/ntohll in OSX
      Fix -Wtautological-constant-out-of-range-compare in regress_http under OSX

commit 6eba967e1c3aa7a43ef900d8f2e68f2d7867c1e2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 14 22:00:19 2023 +0200

    Suppress -Wmacro-redefined for htonll/ntohll in OSX
    
    OSX:
    
        test/regress_ws.c:61:9: warning: 'htonll' macro redefined [-Wmacro-redefined]
        #define htonll(x)    \
                ^
        /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_endian.h:141:9: note: previous definition is here
        #define htonll(x)       __DARWIN_OSSwapInt64(x)
                ^
        test/regress_ws.c:65:9: warning: 'ntohll' macro redefined [-Wmacro-redefined]
        #define ntohll(x) htonll(x)
                ^
        /Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/usr/include/sys/_endian.h:140:9: note: previous definition is here
        #define ntohll(x)       __DARWIN_OSSwapInt64(x)
                ^

commit 5f1fc92b13a964e883091dae7c3701c662dfdc96
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 14 21:55:43 2023 +0200

    Fix -Wtautological-constant-out-of-range-compare in regress_http under OSX
    
    compiler warning:
    
        test/regress_http.c:968:38: warning: result of comparison of constant 65536 with expression of type 'enum evhttp_cmd_type' is always true [-Wtautological-constant-out-of-range-compare]
                if (evhttp_request_get_command(req) != EVHTTP_REQ_CUSTOM) {
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~

commit d19690980d4b04f39327f4c1036c776a5081be0c
Author: Dmitry Antipov <dantipov@cloudlinux.com>
Date:   Fri Dec 9 13:09:44 2022 +0300

    Silence weird GCC warning about an uninitialized variable
    
    For the CMake release build with -DEVENT__ENABLE_GCC_WARNINGS=ON
    and -DEVENT__DISABLE_MM_REPLACEMENT=ON, GCC version 11 and 12 may
    complain about possibly uninitialized variable:
    
    In function ‘event_debug_assert_not_added_’,
        inlined from ‘event_assign’ at event.c:2184:2,
        inlined from ‘event_new’ at event.c:2276:6:
    cc1: error: ‘ev’ may be used uninitialized [-Werror=maybe-uninitialized]
    event.c: In function ‘event_new’:
    event.c:361:13: note: by argument 1 of type ‘const struct event *’ to  event_debug_assert_not_added_.part.0’ declared here
      361 | static void event_debug_assert_not_added_(const struct event *ev)
          |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    
    This warning is most likely a false positive and can be silenced
    by explicitly disabling inlining for 'event_assign()'.
    
    Signed-off-by: Dmitry Antipov <dantipov@cloudlinux.com>

commit 73037f88f9986163d09ecddff757d85b5478c425
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 14 20:32:50 2023 +0200

    Ignore any archives (since you may use separate build dir for 'make dist')

commit e8cbe7b6e12a7b43dde726dfe08922c300fd9430
Merge: d06e573c 7652cf40
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 14 20:04:34 2023 +0200

    Merge branch 'ssl/fix-partial-read' - #1451
    
    * ssl/fix-partial-read:
      ssl: do not triger EOF if some data had been successfully read
      ssl: rename err_is_ok to handshake_is_ok (internal API)

commit 7652cf4068f77905a56b9165455ec7e90917ec31
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 14 16:53:13 2023 +0200

    ssl: do not triger EOF if some data had been successfully read
    
    Previously in case when evbuffer_reserve_space() returns > 1, but
    it was able to read only 1 IO vector, it will try to read the next one,
    got 0 (EOF for mbedTLS or SSL_ERROR_ZERO_RETURN for OpenSSL) and will
    trigger EOF, while instead, it should trigger EV_READ w/o EOF and only
    after EOF.

commit 6375dcb46db4bb05c9c19c980f3ed6d0ff9b1065
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 14 16:45:14 2023 +0200

    ssl: rename err_is_ok to handshake_is_ok (internal API)

commit d06e573c600c46d1c4585be78f4329b300fb4a65
Author: liaotonglang <liaotonglang@gmail.com>
Date:   Fri May 5 15:13:05 2023 +0800

    style fix: use tab for indent

commit bdb343e1801a0ced6e79fdd20f063323389c771c
Author: fanquake <fanquake@gmail.com>
Date:   Thu May 4 09:49:28 2023 +0100

    ci: use newer actions/x versions for master jobs
    
    Now that the jobs are running again, a number of deprecation warnings
    have surfaced
    https://github.com/libevent/libevent/actions/runs/4876367881:
    ```bash
    Node.js 12 actions are deprecated. Please update the following actions to use Node.js 16: actions/checkout@v2.0.0.
    ```
    
    Looks like the most straightforward thing todo here is just use the
    newer version of the checkout action.
    
    Also move to the v1 tag for the coveralls job, rather than a pinned,
    much older version (the latest release is 1.2.5, https://github.com/coverallsapp/github-action/releases).
    
    Same again for actions/cache.

commit 211736697bb88d1bf8977decafbe66b6bb7923cd
Author: fanquake <fanquake@gmail.com>
Date:   Thu May 4 09:38:56 2023 +0100

    ci: use OpenBSD 7.2 over 7.1
    
    In the most recent CI run, all the OpenBSD CI jobs failed, i.e
    https://github.com/libevent/libevent/actions/runs/4876367885/jobs/8699759831,
    this seems to be due to the fact that packages for 7.1 have been removed
    from https://cdn.openbsd.org/pub/OpenBSD/ (only has 7.2 & 7.3):
    ```bash
      Config file: openbsd-7.1.conf
      https://cdn.openbsd.org/pub/OpenBSD/7.1/packages/amd64/: no such dir
      Can't find rsync-3.2.3p0
      Couldn't install rsync-3.2.3p0
      exec shell: bash run.sh showDebugInfo
    ```
    
    Switch to using 7.2, which is available, so that the CI will run.

commit 60ad22d47d9f2701d7a19f6cfb3a73d8beca0408
Author: fanquake <fanquake@gmail.com>
Date:   Wed May 3 16:28:58 2023 +0100

    actions: use supported version of Ubuntu
    
    It looks like these jobs are failing to run, because support for
    ubuntu-18.04 has been removed entirely, see:
    https://github.com/actions/runner-images/issues/6002.
    
    Migrate to ubuntu-20.04.

commit 75208132d5b7a8fff59ca3bf47253179ec314951
Author: fanquake <fanquake@gmail.com>
Date:   Fri Apr 21 04:33:22 2023 +0800

    doc: minor cleanups following #1441 (#1442)
    
    Also fixes 1 broken link (apologies).

commit 612a74c7666a5f66a494c81b4c06be8e01aef757
Merge: 4c993a0e ac69410e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Apr 17 21:19:58 2023 +0200

    Merge pull request #1441 from fanquake/autoconf_doc_updates
    
    doc: minor autoconf/formatting improvements

commit ac69410e1b21e9d9b2300737e8c960aaf4431661
Author: fanquake <fanquake@gmail.com>
Date:   Mon Apr 17 14:28:43 2023 +0100

    doc: mark Autotools as deprecated in building.md
    
    Re-arrange so CMake is mentioned first.
    Formatting improvements.

commit 2470b37bd1ea03da11c4a564b5ea6e0d7d071c10
Author: fanquake <fanquake@gmail.com>
Date:   Mon Apr 17 14:22:30 2023 +0100

    doc: move autoconf link in readme to autoconf section.

commit 4c993a0e7bcd47b8a56514fb2958203f39f1d906
Author: lilinjie <102012657+uniontech-lilinjie@users.noreply.github.com>
Date:   Tue Apr 11 04:44:37 2023 +0000

    Fix typo in changelog (#1438)

commit f747a7b93b0017a635dc5dffb84687e8f46e18ab
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Apr 4 22:19:07 2023 +0200

    Prohibit VLA in autotools too

commit f04d90b1219c392309671f3b477c80dea146a2fd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Apr 4 22:15:35 2023 +0200

    Fix building with -Wstack-protector due to VLA and fobid them
    
    It is not a thankless task to fix such issues on and on, let's just
    prohibit this cases, and our build with -Werror on CI will show new
    issues from now on.
    
    Fixes: #1434

commit 1878232bd5b09bd43b65d48aa55db8de73dbc9cc
Author: fanquake <fanquake@gmail.com>
Date:   Mon Feb 13 15:57:55 2023 +0000

    build: split kqueue warning message into cross-compile and apple
    
    This is output when compiling (natively) on macOS systems, which is
    confusing, because no cross-compilation is involved.
    
    Split the message into separate cases.

commit fc568ff045e6a8956221c3f095ed8e7200fa5f74
Author: zhenhaonong <zhenhaonong@tencent.com>
Date:   Fri Mar 17 19:53:50 2023 +0800

    Deal with partial writes on SSL write
    
    SSL write may do partial writes in some cases. For example, document
    of mbedtls_ssl_write says:
      If the return value is non-negative but less than length, the function
      must be called again with updated arguments: buf + ret, len - ret
      (if ret is the return value) until it returns a value equal to the
      last 'len' argument.
    
    In case of partial writes, we should continue writing the same chain of
    buffer, not the next chain.

commit 9203d98ff8f8f0a37d4d06d986ce75c299ed6444
Author: Liao Tonglang <liaotonglang@gmail.com>
Date:   Mon Mar 27 04:35:00 2023 +0800

    http: style fix: use space between arguments list (#1435)

commit 6e1826dd7730330536e1838824bddd0d4d8adb0d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Mar 8 21:34:37 2023 +0100

    ci: fix typo in yaml for cifuzz
    
    Follow-up for: #1431

commit 606056d6e736a7adc9aff07c49c1f61866a393bd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 6 21:22:10 2023 +0100

    ci: switch to ubuntu 20.04
    
    github action reports "internal error" for builds on ubuntu 18.04:
    
        linux-cmake-job (ubuntu-18.04, COMPILER_CLANG)
        This is a scheduled Ubuntu-18.04 brownout. The Ubuntu-18.04 environment is deprecated and will be removed on April 1st, 2023. For more details, see https://github.com/actions/runner-images/issues/6002
    
        linux-cmake-job (ubuntu-18.04, COMPILER_CLANG)
        GitHub Actions has encountered an internal error when running your job.

commit 99a4b1a7865fdfb965868901701463b1a0ee7174
Author: Diogo Teles Sant'Anna <diogoteles@google.com>
Date:   Mon Mar 6 14:26:11 2023 +0000

    ci: set minimal permissions on GitHub Actions
    
    Change made by setting top-level read-only permisisons, and any
    other necessary permissions set as job-level.
    
    Closes #1421
    
    Signed-off-by: Diogo Teles Sant'Anna <diogoteles@google.com>

commit 6bfa58055919a12acec070cdecef1bfb69f4e4d2
Author: Liao Tonglang <liaotonglang@gmail.com>
Date:   Sun Mar 5 23:59:21 2023 +0800

    http: Reduce times of checking if response has body (#1395)
    
    Use a variable 'need_body' to store the result of
    evhttp_response_needs_body(), then use the variable instead of call the function again.

commit 185e2f009bbffff9bfa2f4d633ddbea777ab111b
Author: Michael Ford <fanquake@gmail.com>
Date:   Sun Mar 5 23:58:22 2023 +0800

    build: improve mbedtls searching on macOS with brew for cmake (#1419)
    
    This just copies the same logic used to find OpenSSL on macOS using homebrew, for finding mbedtls via brew. Without it, the build will fail out the box with a brew installed mbedtls.

commit 4e6375e84c5215c4f67b1698fc9cd666a5163525
Author: Kurt Roeckx <kurt@roeckx.be>
Date:   Sun Mar 5 16:56:56 2023 +0100

    Always have evutil_secure_rng_add_bytes available (#1427)
    
    When libevent doesn't provide random the arc4 function, but they come from libc, there is no need to call this function, so make it do nothing.
    
    Fixes: #1393

commit 3a0cf34ba5d18ce64f59513d2f34f1c7cd439325
Author: Zhipeng Xue <543984341@qq.com>
Date:   Sat Mar 4 22:29:09 2023 +0800

    ws-chat-server: fix potential resource leak

commit bac9d10a6d67ea8440b00b58b328114438586664
Author: Zhipeng Xue <543984341@qq.com>
Date:   Sun Mar 5 05:13:54 2023 +0800

    Fix potential null dereference in http-server (#1430)
    
    Co-authored-by: Azat Khuzhin <a3at.mail@gmail.com>

commit fa05966d74810ed1bc5c3f0ace83ba31b9225735
Author: Zhipeng Xue <543984341@qq.com>
Date:   Sun Mar 5 05:12:04 2023 +0800

    test: fix potential null dereference in https_bind_ssl_bevcb (#1428)
    
    Co-authored-by: Azat Khuzhin <a3at.mail@gmail.com>

commit 557990cad33f1b06a1e2a416231d79590237dd2e
Author: Cœur <coeur@gmx.fr>
Date:   Thu Mar 2 12:41:11 2023 +0800

    Optimize arc4random_uniform() (by syncing with OpenBSD implementation)
    
    1. In d4de062, in Feb 2010, libevent adopted OpenBSD implementation of
       arc4random_uniform.
    2. In
       https://github.com/openbsd/src/commit/728918cba93e0418bea2a73c9784f6b80c2a9dbd,
       in Jun 2012, OpenBSD improved their implementation to be faster, by
       changing arc4random_uniform() to calculate ``2**32 % upper_bound'' as
       ``-upper_bound % upper_bound''.
    
    Alternatively we can simply remove arc4random_uniform() since it is not
    used by libevent anyway, but let's just sync the header for now.

commit e96e98aea5ed9f69641e74b39153747218990bdc
Author: Cœur <coeur@gmx.fr>
Date:   Thu Mar 2 13:43:54 2023 +0800

    evdns: fix "Branch condition evaluates to a garbage value" in reply_parse

commit 3bcc92cf59cf9bd20d54f13d3a5f0fe51d029e81
Author: Cœur <coeur@gmx.fr>
Date:   Thu Mar 2 13:59:32 2023 +0800

    Fix the value is never actually read from 'argument' in evhttp_parse_query_impl()
    
    Although the value stored to 'argument' is used in the enclosing
    expression, the value is never actually read from 'argument'

commit b84fee24abdeccf70748f6387a056057ec6ce882
Author: Cœur <coeur@gmx.fr>
Date:   Thu Mar 2 14:07:44 2023 +0800

    Fix "Value stored to 'a' is never read" in SHA1Transform()
    
    Using same fix as used in android [1].
    
      [1]: android.googlesource.com/platform/dalvik/+/android-4.4.2_r2/libdex/sha1.cpp#193

commit bcefdbc67a4b18c5dce4420dfa3e83b3dfa16f6f
Merge: 28c28f07 e89ddd40
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Feb 14 09:56:03 2023 +0100

    Merge pull request #1418 from fanquake/use_fortify_source_3
    
    build: use FORTIFY_SOURCE=3 in hardening option

commit e89ddd405be109b2b604f14e8a59e82d74532138
Author: fanquake <fanquake@gmail.com>
Date:   Mon Feb 13 16:06:29 2023 +0000

    build: use FORTIFY_SOURCE=3 in autotools build

commit 38cd76f09cad586993fd42ec0a0236e97eb4e2d6
Author: fanquake <fanquake@gmail.com>
Date:   Mon Feb 13 16:05:58 2023 +0000

    build: use FORTIFY_SOURCE=3 in CMake build

commit 28c28f075b51dee137d934317b275caa63b65f81
Merge: 1df2a5a6 c437b84a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 13 08:09:21 2023 +0100

    Merge pull request #1414 from azat/build/deprecate-autotools
    
    Deprecate autotools build

commit 1df2a5a69efc7f9653c8867f81259ade957ad030
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 17:05:20 2023 +0100

    test: enable allocator_may_return_null=1 for calloc with ENOMEM test

commit 207ea62bf95e9868fc6d982305da98678fbc4507
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 16:46:40 2023 +0100

    test: handle -v as --verbose for regress

commit 0ea20582520e25659586afa460ec15de0e590725
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 21:39:04 2023 +0100

    test: add del_wait/del_notify tests for windows
    
    Test manually, since CI is too slow

commit c437b84adb79df7b52f5355297baa54050234213
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 15:24:06 2023 +0100

    Remove extra builds for autotools on CI
    
    We have almost the same matrix for cmake and autotools, but autotools is
    considered to be deprecated from now on, plus our CI takes too much
    time, especially non-linux, since we are using public infrastucture.
    
    So let's remove extra builds.

commit f7e39d2e9b0f8eecac34bdf1528c67721d7ba09b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 16:29:45 2023 +0100

    ci: bump cache and checkout plugins

commit b5a6940df2ba7d7ea0c5beb1dc1578a7d4a4648d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 16:11:02 2023 +0100

    ci: fix paths-ignore

commit 7e6d9b0b17d0a063d89e9243a58a35d6c498bfc2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 15:20:30 2023 +0100

    .github/workflows/build.yml: remove trailing whitespaces

commit 866b751b7192fd002a31f330a1540f14cb446818
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 15:19:51 2023 +0100

    Deprecate autotools build

commit 765fb4108d06726b43a30afda8a6e3b55b5e91b3
Author: Edoardo Lolletti <edoardo762@gmail.com>
Date:   Sun Feb 12 16:19:35 2023 +0100

    Fix compilation on non recent windows SDKs (#1399)
    
    In commit f8bb9d8 the header stringapiset.h was included, very likely because the user who made the change saw that the funciton WideCharToMultiByte is "declared" in there.
    That header tho is a recent addition to the windows headers added in the last years in an attempt from microsoft to split the windows.h header in multiple files, so the inclusion fails when the library is not built with the latest visual studio using the latest windows 10 sdk.
    That inclusion can be safely removed as in any case the function WideCharToMultiByte was already included by the windows.h header that is included few lines below.

commit 61de8a07c5b4c9d58a8c4acf42b58fb3fecba30a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 15:47:16 2023 +0100

    test: fix leaks in bufferevent_pair_release_lock (#1413)

commit a82b77bbc7c81959e1beda76b378dc5a2da43f5f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 09:56:54 2023 +0100

    Remove suppression for test_ok under TSan
    
    There is no such tests yet.

commit b5a5fbb81d3dbe961d36fbc29f5bf44f9c3518d0
Merge: f9134df7 b99106f3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 08:50:05 2023 +0100

    Merge branch 'tests-fixes'
    
    * tests-fixes:
      Add more ignore rules
      test: fix debug locks in case new lock gots old address
      test: suppress logs from the tests that produce them under normal circumstances
      test: fix TT_* flags values
      Suppress data race for test_ok variable
      Suppress data race for event_debug_created_threadable_ctx_ variable

commit b99106f3fdfc49f7fee68f70188f6138ea65f2cd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 08:36:16 2023 +0100

    Add more ignore rules
    
    - for clangd
    - and compile_commands.json for it

commit c257e16f5bf48ad947b00f4eb59ace34f9b136d1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 08:34:52 2023 +0100

    test: fix debug locks in case new lock gots old address
    
    Refs: #1407

commit fb900a284f23fe6317b7ad6f8992f4f584364be5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 08:12:20 2023 +0100

    test: suppress logs from the tests that produce them under normal circumstances

commit 1201bb852986f108afff9fa375c63531562f3a0c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 07:59:17 2023 +0100

    test: fix TT_* flags values

commit f0cb4b7f57fbb163e7f26ad904b32a0ed119f097
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 07:58:55 2023 +0100

    Suppress data race for test_ok variable

commit 39be38ff7973610f9124e8166609547689bf5eeb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 12 07:58:29 2023 +0100

    Suppress data race for event_debug_created_threadable_ctx_ variable

commit f9134df7d07a9214d00cb0d18d7fd820fa7eb781
Author: Edoardo Lolletti <edoardo762@gmail.com>
Date:   Sat Feb 4 15:00:48 2023 +0100

    Add LEV_OPT_BIND_IPV4_AND_IPV6 flag (#1400)
    
    Libevent introduced the LEV_OPT_BIND_IPV6ONLY to pass to evconnlistener_new_bind to make it automatically set the underlying socket as accepting ipv6 requests. This works fine on posix compliant platforms as by the standard every new AF_INET6 socket is created as both supporting ipv6 and ipv4 connections. But on windows the default is the opposite, with the flag IPV6_V6ONLY  being always enabled by default.
    
    This makes creating a listener to supports both protocols a bit more tricky as winsock doesn't allow changing this flag after evconnlistener_new_bind does all the initial setup because as stated in the docs, you can't change it after the sonnect connected, so one would have to manually create the socket beforehand and set the flag and then call evconnlistener_new with the socket itself.
    
    It would be nice to have libevent keep a consistent behaviour across the platforms in this scenario, maybe or by making it always set IPV6_V6ONLY  to false unless LEV_OPT_BIND_IPV6ONLY is passed, in which case it's set to true, or add another flag to forcefully set it to false and keep the system dependent behaviour as default.
    
    So this patch add new option for libevent listeners to bind to both - LEV_OPT_BIND_IPV4_AND_IPV6

commit a5b0ded3c93ca5e21fc0644e3222d9f4a177dfd3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Feb 4 14:56:53 2023 +0100

    Add config for vim/nvim

commit 4d85d28acdbb83bb60e500e9345bab757b64d6d1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jan 28 13:28:52 2023 +0100

    Fix pthread detection for regress tests on Android
    
    Fixes: #1403

commit 35375101e741d78bf49642c6929c1eb69a7c3d79
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jan 27 08:57:33 2023 +0100

    Fixes some new warnings under clang-15
    
    - -Wdeprecated-non-prototype
    
      /src/le/libevent/strlcpy.c:48:1: warning: a function definition without a prototype is deprecated in all versions of C and is not supported in C2x [-Wdeprecated-non-prototype]
      event_strlcpy_(dst, src, siz)
    
    - -Wstrict-prototypes
    
      /src/le/libevent/evthread.c:82:70: warning: a function declaration without a prototype is deprecated in all versions of C [-Wstrict-prototypes]
      struct evthread_condition_callbacks *evthread_get_condition_callbacks()
    
    - -Wunused-but-set-variable
    
      /src/le/libevent/test/regress_buffer.c:130:6: warning: variable 'n' set but not used [-Wunused-but-set-variable]
              int n = 0;
                                                                         ^

commit 3d138bda115e5a81dc9fbc5ae98aa30774d1bfaf
Merge: c01cb1d6 ebd7e8d7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jan 27 08:51:56 2023 +0100

    Allow evdns_base_new to succeed with no nameservers configured (#1389)
    
    * evdns-no-ns:
      Allow evdns_base_new to succeed with no nameservers configured
      Replace magic numbers with consts for evdns_base_resolv_conf_parse() errors

commit ebd7e8d7930df0ef9f11a23309c59cded735e7c4
Author: Daniel Kempenich <dan.kempenich@gmail.com>
Date:   Fri Jan 27 08:44:41 2023 +0100

    Allow evdns_base_new to succeed with no nameservers configured
    
    If resolv.conf has no nameservers, evdns_base_new can still succeed with
    the default of using the name server from localhost matching the man
    page documentation for resolv.conf.

commit a7fffb5c0f95bffb37ff1854841c3fcf4d1a5f9c
Author: Daniel Kempenich <dan.kempenich@gmail.com>
Date:   Tue Jan 17 23:02:56 2023 -0600

    Replace magic numbers with consts for evdns_base_resolv_conf_parse() errors

commit c01cb1d685b70bc9ef102e08eba6ea3e928ae59c
Author: liaotonglang <liaotonglang@gmail.com>
Date:   Tue Jan 10 11:20:24 2023 +0800

    Fix ignoring return value of arc4random() warning (with _FORTIFY_SOURCE defined)
    
    arc4random() defines with __wur (warn-unused-return) macro in glibc, but
    the problem pops up only for gentoo, since only it really define __wur
    to __attribute__ ((__warn_unused_result__)), because it defines
    _FORTIFY_SOURCE unconditionally [1].
    
      [1]: https://gitweb.gentoo.org/proj/gcc-patches.git/tree/9.4.0/gentoo/01_all_default-fortify-source.patch?id=7f7f80a650607c3090ae0790b8daef88434da681
    
    And hence you get this error:
    
    ```sh
    docker run -v $PWD:/src:ro --rm --name le -w /src -it gentoo/stage3 bash -c 'mkdir /build && cd /build && /src/configure --enable-gcc-warnings=yes --disable-samples && make -j && echo OK'
    /src/evutil_rand.c: In function 'evutil_secure_rng_init':
    /src/evutil_rand.c:56:16: error: ignoring return value of 'arc4random' declared with attribute 'warn_unused_result' [-Werror=unused-result]
       56 |         (void) arc4random();
          |                ^~~~~~~~~~~~
    cc1: all warnings being treated as errors
    make[1]: *** [Makefile:2056: evutil_rand.lo] Error 1
    make[1]: *** Waiting for unfinished jobs....
    make[1]: Leaving directory '/build'
    make: *** [Makefile:1523: all] Error 2
    ```
    
    Also it seems that GCC works as expected here [2], and will not change
    the behavior.
    
      [2]: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=66425

commit 94cc08fde2c04cde3df2291f02631a26ccf27ee0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 15 20:56:56 2023 +0100

    Add CTestCostData.txt to gitignore

commit 0b79a0024fcc53a322bf63f6e2301173de7dc9de
Author: Dmitry Antipov <dantipov@cloudlinux.com>
Date:   Mon Jan 2 17:06:48 2023 +0300

    buffer: use pread() for evbuffer_file_segment_materialize()
    
    If pread(2) is available, prefer it over double lseek(2)
    and read(2) in evbuffer_file_segment_materialize().
    
    Signed-off-by: Dmitry Antipov <dantipov@cloudlinux.com>

commit 1fe626c4da14fef6cf45b95e48a438e0f93a499e
Author: mdavidsaver <mdavidsaver@gmail.com>
Date:   Fri Dec 16 00:34:25 2022 -0800

    Allow CLI override of CMAKE_DEBUG_POSTFIX (#1391)
    
    Allows cmake -DCMAKE_BUILD_TYPE=DEBUG -DCMAKE_DEBUG_POSTFIX= for a debug build with the regular library names.

commit d8ecb88f124965d36b8bc444beed2e5d596cbef6
Author: DavidKorczynski <david@adalogics.com>
Date:   Sat Nov 26 19:40:02 2022 +0000

    ci: add CIFuzz Github action (#1382)
    
    Signed-off-by: David Korczynski <david@adalogics.com>
    Co-authored-by: Azat Khuzhin <a3at.mail@gmail.com>

commit dfbb004a4ae0bbf225173854ca71ec0ea761cd9c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 20 23:11:00 2022 +0100

    Fix script for updating contributors

commit 82af0ea4eeb61466fabcd04dfcedee06a1ce3204
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 20 22:18:37 2022 +0100

    cmake: remove redundant _GNU_SOURCE definition
    
    As reported by @francoisk:
    
        `_GNU_SOURCE` is defined in the private config header but also on the
        compiler command-line for every object.
    
    Fixes: #1333

commit 097af7b7565688f8f982f6b118ac228166a56c5f
Merge: e28b3bef d179ae92
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 20 21:52:49 2022 +0100

    Merge branch 'release-2.2-changelog-prepare'
    
    * release-2.2-changelog-prepare:
      Changelog skeleton
      Start new changelog for 2.2

commit d179ae923c13de4135ff817e7f8fd0ed5b22700a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 20 21:52:12 2022 +0100

    Changelog skeleton

commit f40642eeb5ddff7bde089d2b310651beb4327e8a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 13 22:09:12 2022 +0100

    Start new changelog for 2.2

commit e28b3befa13910b0aaabcc1238aad396c721b38d
Merge: 650d8619 acd4cc63
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 20 21:50:40 2022 +0100

    Merge branch 'release-scripts'
    
    * release-scripts:
      Add a script to generate changelog
      Add a script to add new contributors
      Rellocate some text in CONTRIBUTORS.md

commit acd4cc63e855300691f244c09e67ca02fc2d31fc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 13 21:53:17 2022 +0100

    Add a script to generate changelog

commit 7c8b3e99679ef5853f266ac31f26bf49fb06d852
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 13 21:44:10 2022 +0100

    Add a script to add new contributors

commit d130d9f9182b45838e8aeedfa0e2ef80c24dc363
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 13 21:32:44 2022 +0100

    Rellocate some text in CONTRIBUTORS.md

commit 650d8619698d041fc1e5d003e2863b8232932855
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 20 14:51:36 2022 +0100

    cmake: do influence CMAKE_DEBUG_POSTFIX of the outer project (if any)
    
    Consider the following example:
    
        $ touch lib.c
        $ cat > CMakeLists.txt <<EOL
        add_subdirectory(/src/le/libevent libevent EXCLUDE_FROM_ALL)
        add_library(lib lib.c)
        EOL
        $ mkdir .cmake
        $ cmake -DCMAKE_BUILD_TYPE=debug -G Ninja ..
        $ ninja
        $ ls *.a
        liblibd.a
    
    So now outer project also has "d" prefix for libraries.
    
    Let's avoid this by setting non-cached variable.
    
    Fixes: #1371

commit ed079c9fe76922bfc179255d41a485e483da0b44
Author: Dmitry Ilyin <dima@doty.ru>
Date:   Wed Nov 16 22:06:06 2022 +0300

    Add ws-chat-server to gitignore (#1376)

commit 7a18af8c8e5cbb8cfd8739a0eb8fca9157808ab8
Author: Srivatsan Iyer <supersaiyanmode@users.noreply.github.com>
Date:   Tue Nov 15 12:38:41 2022 +0530

    Exclude arc4random_buf implementation if it's already present in the platform (#1375)
    
    This patch excludes definition of arc4random_buf on systems where it is already present. When the symbol is found, the macro EVENT__HAVE_ARC4RANDOM_BUF is set via CMake's configure_file(..).
    
    Co-authored-by: Azat Khuzhin <a3at.mail@gmail.com>

commit cdeb3242264285335e80e5fe7dc16789505ca1fc
Merge: 8800b17a 3d82675e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 13 14:05:43 2022 +0100

    Various documentation improvements (#842)
    
    * doc-pull:
      doc: add build prerequisites
      doc: add MSVC and GNUC options
    
    Fixes: #843

commit 3d82675e37463045fe113c7ebe43adc3bf00af69
Author: yuangongji <yuangongji@foxmail.com>
Date:   Sat Jun 22 00:03:36 2019 +0800

    doc: add build prerequisites
    
    [ci skip]

commit a3973a5a5344bb2fa71adccd01d17c4218644667
Author: yuangongji <yuangongji@foxmail.com>
Date:   Wed Jun 19 22:27:39 2019 +0800

    doc: add MSVC and GNUC options

commit 8800b17a3d37a764027874e8f89796e7539b7ae1
Author: mkm <mkm@nabto.com>
Date:   Tue Nov 1 14:26:11 2022 +0100

    evdns: integrate deferred_response_callback into evdns_request
    
    the allocation of the struct deferred_reply_callback can fail. If that
    happens a program waiting for a callback never gets a callback. The
    program would asume that it either gets an error or a callback when e.g.
    calling evdns_base_resolve_ipv6.
    
    I did an analysis of the evdns.c code and concluded that struct
    evdns_request would live until the callback is executed. Based on that
    conclusion I removed the struct deferred_reply_callback and moved the
    neccessary fields for data which should be copied from struct request
    into struct evdns_request.
    
    The fields evdns_callback_type user_callback and void *user_pointer are
    moved into struct evdns_request as it is a more natural place for them
    to live than struct request.

commit 45c66e48795485407646e231b1f106412ce7b1ee
Author: neil <github@neilpang.com>
Date:   Sun Nov 13 20:39:17 2022 +0800

    Add CI checks for OpenBSD (#1326)
    
    Initially 6.9 and 7.1 had been added, however due to some issues (you can read
    about them below) 6.9 had been disabled.
    
    netbsd 6.9 does not have correct library namings for autotools:
    
        2022-08-17T04:59:58.8339420Z libtool: link: (cd ".libs" && rm -f "libevent.so.1.0" && ln -s "libevent-2.2.so.1.0" "libevent.so.1.0")
    
        $ grep ^library_names= libevent.la·
        library_names='libevent-2.2.so.1.0 libevent.so.1.0'
    
        # And this is wrong, it should be:
        libtool: link: (cd ".libs" && rm -f "libevent-2.2.so.1" && ln -s "libevent-2.2.so.1.0.0" "libevent-2.2.so.1")
        libtool: link: (cd ".libs" && rm -f "libevent.so" && ln -s "libevent-2.2.so.1.0.0" "libevent.so")
        library_names='libevent-2.2.so.1.0.0 libevent-2.2.so.1 libevent.so'
    
    **And I think that 7.1 should also fail, however it has system-wide libevent installed with evdns in the libevent.so**
    
    Also there are some issues with `TEST_EXPORT_SHARED` test, because of libraries naming:
    
        2022-09-13T06:38:29.2150790Z [test-export] test for install tree(in system-wide path)
        2022-09-13T06:38:29.2151500Z [test-export] fail: link core and run core expects success but gets failure.
        2022-09-13T06:38:29.2063870Z /usr/bin/cc CMakeFiles/test-export.dir/test-export.c.o -o test-export   -L/usr/local/lib  -Wl,-z,origin,-rpath,/usr/local/lib -levent_core-2.2 -lpthread -Wl,-rpath-link,/usr/X11R6/lib:/usr/local/lib·
        2022-09-13T06:38:29.2152190Z ld: error: unable to find library -levent_core-2.2
    
        2022-09-13T06:38:28.3915680Z -- Install configuration: "Release"
        2022-09-13T06:38:28.3916700Z -- Up-to-date: /usr/local/lib/libevent_core-2.2.so.1.0.0
        2022-09-13T06:38:28.3917110Z -- Up-to-date: /usr/local/lib/libevent_core-2.2.so.1
        2022-09-13T06:38:28.3917480Z -- Up-to-date: /usr/local/lib/libevent_core.so
        # no libevent_core-2.2.so
    
    So I have to disable it too.
    
    Co-authored-by: Azat Khuzhin <azat@libevent.org>

commit 1af745d033678333752afcd8724f5d6351561b4e
Author: Dmitry Antipov <dantipov@cloudlinux.com>
Date:   Tue Oct 25 11:30:34 2022 +0300

    signal: new signal handling backend based on signalfd
    
    Linux-specific signal handling backend based on signalfd(2)
    system call, and public function event_base_get_signal_method()
    to obtain an underlying kernel signal handling mechanism.
    
    Signed-off-by: Dmitry Antipov <dantipov@cloudlinux.com>

commit 9e346936d47a3a461f8ebaedabb2975bef3babf5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 12 18:56:25 2022 +0100

    Ignore unknown pragmas
    
    Since new compilers has new checks (like -Wdangling-pointer), and so to
    avoid extra checks in cmake/autotools, simply suppress if the pragma is
    unknown.

commit 72a4fe76fc3c0d541905cda765ec531e0d515d01
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 12 18:59:41 2022 +0100

    ws-chat-server: fix session name initialization (using of uninitialized data)

commit c8c730c8dcf29c7c3c0733457942033600e275fe
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 12 18:56:03 2022 +0100

    cmake: tiny cleanup

commit 56d380b9b6d07839b688dd1355828182a021b03e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 12 18:45:13 2022 +0100

    ws: ignore case while comparing values of Upgrade/Connection headers
    
    Cc: @widgetii
    Fixes: #1373

commit 8482e227a8903e70cd1f13f437e5f2b4d3450688
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 12 18:44:44 2022 +0100

    ws-chat-server: avoid SIGSEGV in case of evws_new_session() failure

commit dda05f45e7642275c41884c59b5cd562c9f28796
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 12 18:11:08 2022 +0100

    sample/ws-chat.html: allow to open it via file:// protocol

commit 2dfad6c339a68c42e98049e7e3d60db6d500a1ac
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 12 18:06:09 2022 +0100

    Suppress -Wdangling-pointer in event_signal_closure()
    
    gcc 12 complains:
    
        [34/46] Building C object CMakeFiles/event_static.dir/event.c.o
        /src/le/libevent/event.c: In function ‘event_signal_closure’:
        /src/le/libevent/event.c:1384:32: warning: storing the address of local variable ‘ncalls’ in ‘*ev.ev_.ev_signal.ev_pncalls’ [-Wdangling-pointer=]
         1384 |                 ev->ev_pncalls = &ncalls;
              |                 ~~~~~~~~~~~~~~~^~~~~~~~~
        /src/le/libevent/event.c:1378:15: note: ‘ncalls’ declared here
         1378 |         short ncalls;
              |               ^~~~~~
        /src/le/libevent/event.c:1378:15: note: ‘ev’ declared here

commit e1d7d3e40a7fd50348d849046fbfd9bf976e643c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 12 17:56:51 2022 +0100

    sha1: ignore -Wstringop-overread warning
    
    Fixes the following:
    
        [4/38] Building C object CMakeFiles/event_shared.dir/sha1.c.o
        In function ‘SHA1Update’,
            inlined from ‘SHA1Final’ at /src/le/libevent/sha1.c:274:5,
            inlined from ‘builtin_SHA1’ at /src/le/libevent/sha1.c:292:5:
        /src/le/libevent/sha1.c:228:13: warning: ‘SHA1Transform’ reading 64 bytes from a region of size 7 [-Wstringop-overread]
          228 |             SHA1Transform(context->state, *(const unsigned char (*)[64])&data[i]);
              |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
        /src/le/libevent/sha1.c:228:13: note: referencing argument 2 of type ‘const unsigned char[64]’
        /src/le/libevent/sha1.c: In function ‘builtin_SHA1’:
        /src/le/libevent/sha1.c:80:13: note: in a call to function ‘SHA1Transform’
           80 | static void SHA1Transform(uint32_t state[5], const unsigned char buffer[64]) {
              |             ^~~~~~~~~~~~~

commit 23a01aa22778eba44afd0f5dfeef9bf48a971793
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 12 16:41:55 2022 +0100

    sha1: hide SHA1_CTX

commit ef8f8caab6e77f98df0fc43523c64ed53b9d2e89
Author: OgreTransporter <OgreTransporter@users.noreply.github.com>
Date:   Fri Nov 4 23:52:01 2022 +0100

    Fix syntax error (#1369)

commit ff99f67a1ab7b7e9a0c82dd987317bb1df38bdb7
Author: Michael Madsen <mkm85@users.noreply.github.com>
Date:   Fri Nov 4 01:59:17 2022 -0700

    fixed missing check for null after strdup in evutil_inet_pton_scope (#1366)

commit 3ec3b469b8d091837a1d1309ac0cdffa6a76e1d4
Author: Leon George <leon@georgemail.eu>
Date:   Sun Oct 23 13:47:23 2022 +0200

    ws: fix compile error on centos 7 - very old compiler (#1359)
    
    * http: fix typo
    
    * ws: fix comile error
    
    On CentOS:
    
      CC       ws.lo
    ws.c: In function 'get_ws_frame':
    ws.c:244:3: error: 'for' loop initial declarations are only allowed in C99 mode
       for (int i = 0; i < payload_len; i++) {
       ^
    ws.c:244:3: note: use option -std=c99 or -std=gnu99 to compile your code

commit f04a70f0fc5e3561538b0eff302defef9046c617
Merge: 8f47d8de e8f5a61d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 22 22:23:52 2022 +0200

    Fix data-race in ws code (#1360)
    
    @widgetii:
    
      "
      =================================================================
      ==985==ERROR: AddressSanitizer: heap-use-after-free on address 0xb24323e5 at pc 0xb6a06f1c bp 0x9fffc694 sp 0x9fffc260
      WRITE of size 2 at 0xb24323e5 thread T22
          #0 0xb6a06f1b in __interceptor_memcpy.part.43 (/usr/lib/libasan.so.5+0x41f1b)
    
      0xb24323e5 is located 229 bytes inside of 512-byte region [0xb2432300,0xb2432500)
      freed by thread T0 (app) here:
          #0 0xb6a849df in free (/usr/lib/libasan.so.5+0xbf9df)
          #1 0xb64b6e07 in evbuffer_drain (/usr/lib/libevent_core-2.2.so.1+0x9e07)
    
      previously allocated by thread T22 here:
          #0 0xb6a84d17 in __interceptor_malloc (/usr/lib/libasan.so.5+0xbfd17)
          #1 0xb64b3d1b  (/usr/lib/libevent_core-2.2.so.1+0x6d1b)
          #2 0x61223 in onIceCandidateHandler /home/dima/git/app/src/webrtc/local.c:116
          #3 0x19296f in onNewIceLocalCandidate /home/dima/git/webrtc-c/src/source/PeerConnection/PeerConnection.c:471
      "
    
    * upstream/pr/1360:
      Remove bad copy-paste
      Add locks for server WS, fixes #1357

commit e8f5a61d6d08169adcb7ee73f50963b97d433ed5
Author: Dmitry Ilyin <dima@doty.ru>
Date:   Wed Oct 12 22:15:21 2022 +0300

    Remove bad copy-paste

commit c2ecb4acb52c9f9b2e77af86a38a9b36ee7d51e6
Author: Dmitry Ilyin <dima@doty.ru>
Date:   Wed Oct 12 14:13:44 2022 +0300

    Add locks for server WS, fixes #1357

commit 8f47d8de281b877450474734594fdc0a60ee35d1
Author: Ryan Pavlik <ryan.pavlik@collabora.com>
Date:   Mon Oct 3 09:31:10 2022 -0500

    cmake: Fix Android build.
    
    Android/Bionic C library needs no special flags to have threading support.
    Found when trying to build with vcpkg.

commit 285fc7cc6ddd123b2610e9a782faa8c4f1432b70
Merge: b5b4c7fe aa163a4f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 8 19:26:24 2022 +0300

    Use heap-bases contexts for MbedTLS handles (#1355)
    
    @widgetii:
    
    "Recently after studying [https-client.c code](https://github.com/libevent/libevent/blob/master/sample/https-client.c#L532) I found that I cannot use MbedTLS with `bufferevent_mbedtls_socket_new` same way as for OpenSSL in other than hello-world code. In mentioned sample code, ssl context is created by `SSL_new()` (as heap-based pointer), but for MbedTLS stack value is used. The issue is in different semantics because OpenSSL is responsible for memory allocation and release for its context, but for MbedTLS it turns out user should do the same manually.
    
    I expect that in both cases, setting option `BEV_OPT_CLOSE_ON_FREE` will free all linked resources, but in case of MbedTLS I have memory leak after connection is closed.
    
    My proposal is:
    1. Provide new `mbedtls_ssl_new` helper-function for end-user that do the same job as `SSL_new()` and use it and example in sample:
    
    ```c
    mbedtls_ssl_context *mbedtls_ssl_new(const mbedtls_ssl_config *conf) {
      mbedtls_ssl_context *ssl = calloc(1, sizeof(*ssl));
      mbedtls_ssl_init(ssl);
      mbedtls_ssl_setup(ssl, conf);
      return ssl;
    }
    ```
    
    2. Add `free(ctx->ssl)` right after https://github.com/libevent/libevent/blob/master/bufferevent_mbedtls.c#L68"
    
    Fixes: #1354

commit aa163a4f296d00bd729b48f803685b54bf70ea81
Author: Dmitry Ilyin <dima@doty.ru>
Date:   Tue Oct 4 21:42:30 2022 +0300

    Fix memleak in regress tests

commit 10ed1f1c287b17f8c547ec1bb55ca34806964b8e
Author: Dmitry Ilyin <dima@doty.ru>
Date:   Tue Oct 4 17:57:01 2022 +0300

    Change code for samples

commit 88317a4ef8aacec4f477cfc07d084024da80be0b
Author: Dmitry Ilyin <dima@doty.ru>
Date:   Tue Oct 4 17:49:22 2022 +0300

    Add helpers and all regress tests are passed

commit b5b4c7fed589aef04f6b5add5f0f0d9c2f1fd2f5
Author: jackerli(李剑) <jackerli@tencent.com>
Date:   Wed Sep 28 16:41:59 2022 +0800

    fix: arc4_getword integer overflow, detected by -fsanitize=undefined

commit 117ee9a03fc74617e378f755c6b25005ac0e954f
Author: Dmitry Antipov <dantipov@cloudlinux.com>
Date:   Thu Sep 15 14:06:50 2022 +0300

    epoll: use epoll_pwait2() if available
    
    On GNU/Linux with epoll backend, prefer epoll_pwait2() if available,
    which is useful to support the timeout with microsecond precision.

commit f8bb9d84845be12b3ffb709bf9a26df4f40f898f
Author: zhenhaonong <zhenhaonong@tencent.com>
Date:   Fri Sep 16 15:55:56 2022 +0800

    Fix socketpair failure when temporary directory has non-latin character

commit 211c6653ae78e6cf79bfdb30cbbcdd0376345751
Author: Dmitry Ilyin <dima@doty.ru>
Date:   Mon Sep 26 11:54:14 2022 +0300

    Add manual CMAKE_C_BYTE_ORDER set for old CMake

commit ceb6bcd68a2267c5c22ba0d54c452e1fe2ca2143
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 14 22:14:28 2022 +0200

    ci: disable freebsd 13.0 builds (due to issues in the image)
    
    Before it fails with:
    
       exec ssh: pkg install -y  mbedtls cmake python3
        /bin/bash /Users/runner/work/_actions/vmactions/freebsd-vm/v0/run.sh execSSH
        Config file: freebsd-13.0.conf
        Pseudo-terminal will not be allocated because stdin is not a terminal.
        Warning: no access to tty (Bad file descriptor).
        Thus no job control in this shell.
        Installing pkg-1.18.3...
        Newer FreeBSD version for package pkg:
        To ignore this error set IGNORE_OSVERSION=yes
        - package: 1301000
        - running kernel: 1300139
        Ignore the mismatch and continue? [y/N]:
        Failed to install the following 1 package(s): /tmp//pkg.txz.18yvwm
        Bootstrapping pkg from pkg+http://pkg.FreeBSD.org/FreeBSD:13:amd64/quarterly, please wait...
        Verifying signature with trusted certificate pkg.freebsd.org.2013102301... done
        Error: The process '/bin/bash' failed with exit code 1
    
    And now with:
      ld-elf.so.1: /lib/libc.so.7: version FBSD_1.7 required by /usr/local/lib/libpython3.9.so.1.0 not found
    
    Commenting for now, anyway we do not need such huge CI matrix, because
    we have only public workers, and they are pretty busy.
    
    Cc: @Neilpang

commit 9174ba92429c4bf4b99e29ccdf7ac9d4ba751e8d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 14 22:13:12 2022 +0200

    .github/workflows/build.yml: Cleanup trailing whitespaces

commit 53f9c42095a61e8466c940fb7447f526f3de1c79
Author: Dmitry Ilyin <dima@doty.ru>
Date:   Wed Sep 14 13:33:13 2022 +0300

    Fix conflict with SHA1 function from openssl

commit e8313084f9e8b064433cb10eb9a79bf87407fab6
Author: Dmitry Ilyin <dima@doty.ru>
Date:   Mon Sep 12 22:16:56 2022 +0300

    Add minimal WebSocket server implementation for evhttp (#1322)
    
    This adds few functions to use evhttp-based webserver to handle incoming
    WebSockets connections. We've tried to use both libevent and libwebsockets in
    our application, but found that we need to have different ports at the same
    time to handle standard HTTP and WebSockets traffic. This change can help to
    stick only with libevent library.
    
    Implementation was inspired by modified Libevent source code in ipush project
    [1].
    
      [1]: https://github.com/sqfasd/ipush/tree/master/deps/libevent-2.0.21-stable
    
    Also, WebSocket-based chat server was added as a sample.

commit bb41229ff4dbd62084994c6b0b2052a321fd0ccf
Author: Keelan Cannoo <96436249+Keelan10@users.noreply.github.com>
Date:   Mon Sep 12 23:12:47 2022 +0400

    Make rekey interval less predictable (#1331)

commit 039e8d96a476a93874576d808242157698496f04
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 11 22:08:32 2022 +0200

    Add openssl-compat.h into HDR_PRIVATE
    
    Fixes: #1334

commit b19af675c7601a7867f26c33072cda7ea125adb2
Author: mareksm <46475431+mareksm@users.noreply.github.com>
Date:   Sun Aug 28 15:27:04 2022 +0300

    Fix non-std printf %p arguments (#1327)
    
    * Fix non-std printf %p arguments when running with -Werror -pedantic-errors
    
    Co-authored-by: Mareks Malnacs <mareks.malnacs>

commit 7d0836c2b84697e1b452f2b2970479f9174f6c9d
Author: Greg Hazel <ghazel@gmail.com>
Date:   Sun Aug 14 14:02:48 2022 -0700

    handle empty answers as EAI_ADDRFAMILY
    
    Signed-off-by: Kirill Rodriguez <theoden8@gmail.com>

commit bb57cea387ba4ebac077c71753e391225adfc81f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Aug 14 09:56:50 2022 +0200

    test: fix util/getaddrinfo for netbsd (v2)
    
    Fixes: c198b0ce ("test: fix util/getaddrinfo for netbsd")
    Fixes: #1316

commit 77a9b60e479fd09ce9cece0ebec1863ba3e69273
Merge: c198b0ce 1bdc9135
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Aug 14 00:46:48 2022 +0200

    Merge pull request #1315 from yogo1212/http_per_socket_bebcb
    
    In it's current form, libevent requires multiple struct evhttp objects to be created in order to enable listening on sockets with more than one type of encryption.
    
    This change allows specifying per-socket how the associated bufferevents should be created.
    Thus, it becomes possible to have multiple listening sockets with different encryption parameters using only one evttp.

commit c198b0ceb349d8b1154d4b2f7b2ee373d6fd21c4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Aug 13 20:48:00 2022 +0200

    test: fix util/getaddrinfo for netbsd
    
    Fixes: #1316

commit 86b5d2e951eaa88cb5fed2be23fa5af85facad4a
Author: Borys Smejda <borys.smejda@gmail.com>
Date:   Sat Aug 13 19:10:10 2022 +0200

    Fixed CMake configuration failure (libevent#1321)
    
    Deleted usage of CMake feature 'file(REAL_PATH'
    which is available from version 3.19
    with an old 'get_filename_component' so that
    older version of CMake can still be used
    to configure the project.

commit 1bdc91350ee30d3aa51fe809fd719c2c3183b445
Author: Leon M. George <leon@georgemail.eu>
Date:   Mon Aug 1 10:16:18 2022 +0200

    http: allow setting bevcb per socket
    
    Co-authored-by: Azat Khuzhin <azat@libevent.org>
    v2: remove handling of HTTP_BIND_IPV6

commit a4cdc3c5e864c3ee4b836c78f92e07229be39c0f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Aug 13 19:51:02 2022 +0200

    test: allow to run init_ssl() multiple times

commit 4ca417afa4dde0895707e2cf6faf1e8ac2d101e1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Aug 13 19:51:45 2022 +0200

    test: add a comment for init_ssl() about suppressions for LSan

commit 99fd68abde4a59b90148db733fc51a7256cbd320
Author: Dmitry Ilyin <dima@doty.ru>
Date:   Sun Aug 7 13:51:48 2022 +0300

    Add check of mmap64 function and use it when available rather that mmap
    
    There can be issues on 32-bit architectures to mmap 2+GiB file, and to
    make this portable between different version of glibc, mmap64 was
    prefered over _FILE_OFFSET_BITS

commit b2aca3bc31f46e7ea2fe2ac826ce2d3e6235f513
Author: neil <github@neilpang.com>
Date:   Sun Aug 7 19:37:32 2022 +0800

    fix freebsd checks

commit c08ee39969fc936666d27ec70d75454a1a9877c3
Author: neil <github@neilpang.com>
Date:   Sun Aug 7 19:23:04 2022 +0800

    fix freebsd checks

commit 4f662d662ee4331c7829604804b5a91be92afd74
Author: neil <github@neilpang.com>
Date:   Sun Aug 7 18:56:00 2022 +0800

    Add freebsd CI checks
    ci/linux skip
    ci/macos skip
    ci/windows skip
    ci/mingw skip

commit 80c1e0b7450594520a11655d1b24200e8cad34bd
Author: Haowei Hsu <71438617+hwhsu1231@users.noreply.github.com>
Date:   Fri Jul 29 20:58:27 2022 +0800

    Search library name of Debug for find_event_lib.

commit dd610b778146f1425cd6ee0ad51d4b7916cff873
Author: Haowei Hsu <71438617+hwhsu1231@users.noreply.github.com>
Date:   Fri Jul 29 20:49:35 2022 +0800

    Add postfix for Debug configuration.

commit 05a03d4a15eb149cb70b3767638f8523ecae1e2d
Author: Dmitry Ilyin <dima@doty.ru>
Date:   Sat Aug 6 14:23:53 2022 +0300

    Add more HTTP_ response codes

commit 3e7a73809ebfd0e111856eb0b395d6a0735b6c8b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jul 12 21:57:41 2022 +0300

    ci: increase number of attempts to 5

commit bfa526cefa4d495cf643616956ab940b5b9e94ff
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jul 12 21:08:00 2022 +0300

    ci: add retries
    
    Right now it is possible for some tests to fail, because of lack of CPU
    time.
    And it is better to have green CI even if this will take longer.

commit d32649493aab608733d884c65304b46bf74d5d80
Merge: 213a822a 33fb0e35
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jul 12 10:07:04 2022 +0300

    ci: use ubuntu 22.04 with clang 11 for sanitizers build (#1306)
    
    * ci-tsan-recent:
      test: fix unused variable in rand test (catched by newer clang)
      ci: use ubuntu 22.04 with clang 11 for sanitizers build

commit 33fb0e358a7ae293379d5ecd17d551c8dbef8da2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jul 12 09:54:14 2022 +0300

    test: fix unused variable in rand test (catched by newer clang)

commit 87c016a09e09924ac0c3c516cc6b3196c46ca9f3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jul 12 08:03:36 2022 +0300

    ci: use ubuntu 22.04 with clang 11 for sanitizers build
    
    There are periodically some heap-use-after-free reported in ratelim
    tests by TSan, which I cannot reproduce locally and even on CI it is
    flaky.
    
    Let's try to use recent clang, maybe it fixes some issues in sanitizers.
    
    Refs: #1206

commit 213a822aa71ebbda348a2dd4fd80083ee200799b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jul 11 22:52:57 2022 +0300

    test: increase timeout significantly in dns/getaddrinfo_cancel_stress (for TSan)
    
    Fixes: #1304

commit 15780dd240f9ba54f55f4a3e1e238cc03d7b87ec
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jul 11 03:45:32 2022 +0300

    ci: disable broken mingw cmake builds (#1207)

commit c90acbb6fc27836b1c2407d71145c297efcc43a3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jul 11 03:51:31 2022 +0300

    Slightly adjust badges markdown in README

commit a3572af704501cad686ce1653b8754fc84a8791b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jul 11 03:50:16 2022 +0300

    ci: fix master/upstream workflow (syntax error)

commit 9b7b549ba04c9349193e14af516d9d5887f605c6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jul 11 03:47:45 2022 +0300

    Update CI status badge

commit 587f26fb0c6384f52d579452f28f621962404aac
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 10 16:49:53 2022 +0300

    Rework CI to keep everything in one workflow (by using reusable workflow)
    
    Right now because we have separate workflows there is no one page with
    all the jobs, instead we have separate page for each workflow (linux,
    windows, ...)
    
    This is pretty inconvenient, so let's make it cleaner, and now we will
    have only two:
    
    - for pull requests
    - for upstream/master

commit 5ff98dc1f327d811cb76ceb88d35f5efd1384dfd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 10 17:33:15 2022 +0300

    evdns: accept domains up to 254 long (previosly only 63 long was accepted)
    
    Previously evdns was using HOST_NAME_MAX, and define it to 255 *only* if
    it not set, however it does set on linux:
    
        $ egrep -r define.*HOST_NAME_MAX /usr/include/bits
        /usr/include/bits/local_lim.h:#define HOST_NAME_MAX             64
        /usr/include/bits/posix1_lim.h:#define _POSIX_HOST_NAME_MAX     255
        /usr/include/bits/confname.h:#define _SC_HOST_NAME_MAX          _SC_HOST_NAME_MAX
    
    But 64 should be the limit of the host component, not for the whole
    hostname, as also noted by @ploxiln
    
    So use our own EVDNS_NAME_MAX const, which is set to 255.
    
    Fixes: #1280

commit 1933f6aaddd190167b180da7138a5df4c51517bb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 10 16:31:57 2022 +0300

    test: make dns/getaddrinfo_cancel_stress more deterministic
    
    Fixes: #1271
    Follow-up for: 90bcf2d660b9b43cb8e747421d4938f08f935bd7

commit 4872734277579e85cbecd91390e3f26e3fc44e70
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 10 16:18:08 2022 +0300

    Add a note that IOCP is experimental feature
    
    Refs: #1228

commit 63ef005a26175ca1a4fed90dd78c9d642f9b618e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 10 15:47:00 2022 +0300

    ci: drop processing "ci skip" message in commit in favor of official skip
    
    Since [1] github actions official support skipping workflows based on
    the message.
    
      [1]: https://github.blog/changelog/2021-02-08-github-actions-skip-pull-request-and-push-workflows-with-skip-ci/

commit fc24a2990d922c1b40e7e0a1705c528d7f509341
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 10 15:10:20 2022 +0300

    ci: add ability skip specific workflow
    
    Public CI workers has pretty high load, and sometimes you need to test
    only specific workflow, i.e. windows.
    
    So let's add ability to limit which workflow should be run.

commit 69e9f7ee5d21141cd6bd7f89acad5db5778f4c09
Merge: 20977eae 54078b30
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 10 13:55:32 2022 +0300

    Initial OpenSSL 3.0 support (#1288)
    
    * openssl-3:
      ci: use ubuntu 22.04 with OpenSSl 3.0 instead of building OpenSSL from sources
      ci: set LD_LIBRARY_PATH for openssl 3.0 build
      test: suppress warning for already defined SSL_get_peer_certificate
      autotools: print $OPENSSL_LIBS/$OPENSSL_INCS
      Suppress -Wunused-value for BIO_set_close()
      Use OPENSSL_VERSION_NUMBER over OPENSSL_VERSION_MAJOR (for compatibility)
      Attempt to add OpenSSL 3 to the Linux build matrix
      Initial OpenSSL 3.0 support

commit 54078b30cbb92f19621c494b3255ef65e7a61a4c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 10 13:11:13 2022 +0300

    ci: use ubuntu 22.04 with OpenSSl 3.0 instead of building OpenSSL from sources

commit fb5490066d4fd7031665bd75c170d926352ad08c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 10 12:24:42 2022 +0300

    ci: set LD_LIBRARY_PATH for openssl 3.0 build
    
    Fixes:
    
        /home/runner/work/libevent/libevent/build/test/.libs/regress: error while loading shared libraries: libssl.so.3: cannot open shared object file: No such file or directory

commit d84c88519df7e45b1aaec28269dedbd00e28479a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 10 09:59:14 2022 +0300

    test: suppress warning for already defined SSL_get_peer_certificate
    
    build report:
    
        [1/2] Building C object CMakeFiles/regress.dir/test/regress_mbedtls.c.o
        /src/le/libevent/test/regress_mbedtls.c:50: warning: "SSL_get_peer_certificate" redefined
           50 | #define SSL_get_peer_certificate mbedtls_ssl_get_peer_cert
              |
        In file included from /src/le/libevent/test/regress.h:139,
                         from /src/le/libevent/test/regress_mbedtls.c:35:
        /src/oss/openssl/include/openssl/ssl.h:1799: note: this is the location of the previous definition
         1799 | #   define SSL_get_peer_certificate SSL_get1_peer_certificate
              |
        [2/2] Linking C executable bin/regress
    
    But this should be cleaned up.

commit a0087e2c7ae13325aa1900a3dd3813658bc3f6f7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 10 09:29:21 2022 +0300

    autotools: print $OPENSSL_LIBS/$OPENSSL_INCS

commit e67085e56e8e8c413c2f383383a7002e07269822
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 10 09:26:16 2022 +0300

    Suppress -Wunused-value for BIO_set_close()

commit c22f2757449f47ce661b3cdbb8a105d7721b4a5a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 23:27:23 2022 +0300

    Use OPENSSL_VERSION_NUMBER over OPENSSL_VERSION_MAJOR (for compatibility)
    
    Since OpenSSL 3.0 there is new OPENSSL_VERSION_MAJOR, but previous
    releases does not have it.
    
    So let's use plain old OPENSSL_VERSION_NUMBER to avoid more preprocessor
    macros.

commit a29570a1e2d1164f5286bbfe1c6a18e5e87ffc1e
Author: William Marlow <william.marlow@ibm.com>
Date:   Sun Jun 19 10:45:57 2022 +0100

    Attempt to add OpenSSL 3 to the Linux build matrix
    
    v2: fix echo messages
    v3: fix autotools build (wrong path to pkg config)

commit 29c420c418aeb497e5e8b7abd45dee39194ca5fc
Author: William Marlow <william.marlow@ibm.com>
Date:   Sat Jun 18 21:43:31 2022 +0100

    Initial OpenSSL 3.0 support
    
    * Don't use deprecated functions when building against OpenSSL 3.0.
    * Recognise that OpenSSL 3.0 can signal a dirty shutdown as a protocol.
      error in addition to the expected IO error produced by OpenSSL 1.1.1
    * Update regress_mbedtls.c for compatibility with OpenSSL 3

commit 20977eae0d67f3b4f02aca2b891391517749b121
Merge: acb7ef98 6e310e3c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 23:22:00 2022 +0300

    Merge branch 'mbedtls-3'
    
    * mbedtls-3:
      sample/ssl-client-mbedtls.c: fix for MbedTLS 3
      sample/ssl-client-mbedtls.c: break the loop on EOF
      sample/ssl-client-mbedtls.c: fix printing response in readcb
      Initial Mbed-TLS 3 support to get the GitHub Actions working again
      Support build dir of the MbedTLS

commit acb7ef9819c3fe8b3c52e01c2c89b47fbc38b25d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 21:17:06 2022 +0300

    ci/macos: remove separate openssl 1.1 from build matrix
    
    @ploxiln:
    
        On current homebrew, openssl@1.1 is the only openssl:
    
        [pierce@plo-mbp15 libevent]$ brew --prefix openssl
        /usr/local/opt/openssl@1.1
        [pierce@plo-mbp15 libevent]$ brew info openssl
        openssl@1.1: stable 1.1.1g (bottled) [keg-only]
        Cryptography and SSL/TLS Toolkit
    
    @fanquake
    
        Indeed. OpenSSL 1.0 was removed from homebew in Homebrew/homebrew-core#46876. Related discussion also in Homebrew/homebrew-core#46454.

commit 8bcbec77dd7e5f6d6958130752e099931002b6a5
Merge: d881d062 a9441ed6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 21:14:16 2022 +0300

    Merge branch 'fix-brew-autodetection'
    
    * fix-brew-autodetection:
      ci: fix cmake build w/o OPENSSL_ROOT_DIR
      ci: remove separate build for BREW_AUTODETECT_OPENSSL (use it by default)
      autotools: fix autodetection of openssl location via brew

commit 6e310e3c6c25a3ecef0aaa19565ffb3baf8aca91
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 20:05:35 2022 +0300

    sample/ssl-client-mbedtls.c: fix for MbedTLS 3
    
    - use build_info.h over version.h
    - provide own certs
    
    P.S. since it is simpler then adding detection of the library version
    into autotools.

commit ce20356a3271210a9becba2ed335ca51f4a39041
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 21:07:36 2022 +0300

    sample/ssl-client-mbedtls.c: break the loop on EOF

commit fcf85e4822ef4fd012b32b6eec0e6d7aaa544568
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 21:03:36 2022 +0300

    sample/ssl-client-mbedtls.c: fix printing response in readcb

commit 384c52e6be5463e68662581dc94247fb40a18aa0
Author: William Marlow <william.marlow@ibm.com>
Date:   Thu Jun 23 23:06:14 2022 +0100

    Initial Mbed-TLS 3 support to get the GitHub Actions working again
    
    mingw has upgraded to Mbed-TLS 3.1.0, so all the mingw tests that need
    Mbed-TLS currently don't work.
    
    v2: add missing mbedtls/version.h into test/regress_mbedtls.c
    v3: suppress #warning "Including compat-2.x.h is deprecated" for mbedtls/compat-2.x.h

commit 35e12a817530b665f508ebc832d944b7b0b2b63c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 20:40:52 2022 +0300

    Support build dir of the MbedTLS

commit d881d062605abbd4d06462dd029584de557b219d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 20:28:18 2022 +0300

    configure: fix AC_CHECK_FUNCS should use literals
    
    Error
    
        configure.ac:291: warning: AC_CHECK_FUNCS(getnameinfo
        ): you should use literals
        ../autoconf-2.71/lib/autoconf/functions.m4:117: AC_CHECK_FUNCS is expanded from...
        ../autoconf-2.71/lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
        ../autoconf-2.71/lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
        configure.ac:291: the top level
        configure.ac:291: warning: AC_CHECK_FUNCS(getprotobynumber
        ): you should use literals
        ../autoconf-2.71/lib/autoconf/functions.m4:117: AC_CHECK_FUNCS is expanded from...
        ../autoconf-2.71/lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
        ../autoconf-2.71/lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
        configure.ac:291: the top level
        configure.ac:291: warning: AC_CHECK_FUNCS(getservbyname
        ): you should use literals
        ../autoconf-2.71/lib/autoconf/functions.m4:117: AC_CHECK_FUNCS is expanded from...
        ../autoconf-2.71/lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
        ../autoconf-2.71/lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
        configure.ac:291: the top level
        configure.ac:291: warning: AC_CHECK_FUNCS(inet_ntop
        ): you should use literals
        ../autoconf-2.71/lib/autoconf/functions.m4:117: AC_CHECK_FUNCS is expanded from...
        ../autoconf-2.71/lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
        ../autoconf-2.71/lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
        configure.ac:291: the top level
        configure.ac:291: warning: AC_CHECK_FUNCS(inet_pton
        ): you should use literals
        ../autoconf-2.71/lib/autoconf/functions.m4:117: AC_CHECK_FUNCS is expanded from...
        ../autoconf-2.71/lib/m4sugar/m4sh.m4:692: _AS_IF_ELSE is expanded from...
        ../autoconf-2.71/lib/m4sugar/m4sh.m4:699: AS_IF is expanded from...
        configure.ac:291: the top level

commit d96457e13269330fabb477a9bf130dfd2e30b36a
Author: kenping <kenpingliu@users.noreply.github.com>
Date:   Thu Apr 21 15:59:28 2022 +0800

    listener: Preserve last error in evconnlistener_new_bind() before close
    
    In function evconnlistener_new_bind() after go to "err:", The
    evutil_closesocket() would clear the error code( I found this under
    Windows ). User can not use EVUTIL_SOCKET_ERROR() to get the
    evconnlistener_new_bind()'s failing error.
    
    I add a err_code variable to store and restore the last error code.
    
    v2: rebased by azat to make the patch simpler

commit a9441ed6465fbf5da5c01219d84def832240cd85
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 18:43:29 2022 +0300

    ci: fix cmake build w/o OPENSSL_ROOT_DIR
    
    cmake build rules does not have detection of OPENSSL_ROOT_DIR via brew,
    so we cannot run such builds on CI.
    
    Always set OPENSSL_ROOT_DIR for cmake.

commit 4954b27bc0f3a48e04a1856b5f4c28a1496dcb01
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 18:41:39 2022 +0300

    ci: remove separate build for BREW_AUTODETECT_OPENSSL (use it by default)

commit 8bad28d607c4ba12f279c5d27bd4ac3014e2a95f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 18:40:35 2022 +0300

    autotools: fix autodetection of openssl location via brew

commit 7aeecb60c406aec421cf9d8c8e5453806550dd8b
Merge: 1bc62ce1 89332176
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 18:12:07 2022 +0300

    Merge branch 'Werror'
    
    * Werror:
      test: ignore -Walloc-size-larger-than error for calloc() returns ENOMEM
      Fix EVBASE_ACQUIRE_LOCK/EVBASE_RELEASE_LOCK for EVENT__DISABLE_THREAD_SUPPORT
      http: suppress "flags may be used uninitialized in this function" error
      Detech -Wno-unused-functions for GCC too
      cmake: add compiler version to the status message
      Fix BEV_LOCK/BEV_UNLOCK macros for EVENT__DISABLE_THREAD_SUPPORT
      Run builds with -Werror on CI for linux
      Fix -Werror for autotools
      Add -Wundef for cmake and fix EVENT__SIZEOF_TIME_T usage

commit 89332176982b50f6469a0e760d05625f859099ef
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 17:14:12 2022 +0300

    test: ignore -Walloc-size-larger-than error for calloc() returns ENOMEM
    
    Compiler report:
    
        /home/runner/work/libevent/libevent/test/regress_util.c: In function ‘test_event_calloc’:
        /home/runner/work/libevent/libevent/test/regress_util.c:1318:4: error: argument 2 value ‘9223372036854775815’ exceeds maximum object size 9223372036854775807 [-Werror=alloc-size-larger-than=]
          p = mm_calloc(EV_SIZE_MAX/2, EV_SIZE_MAX/2 + 8);
        In file included from /home/runner/work/libevent/libevent/test/../util-internal.h:37:0,
                         from /home/runner/work/libevent/libevent/test/regress_util.c:30:
        /usr/include/stdlib.h:541:14: note: in a call to allocation function ‘calloc’ declared here
         extern void *calloc (size_t __nmemb, size_t __size)
    
    v2: clang on CI does not have this option

commit 648af99afa490bcccbba64dc01af2b27002e96e5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 17:20:26 2022 +0300

    Fix EVBASE_ACQUIRE_LOCK/EVBASE_RELEASE_LOCK for EVENT__DISABLE_THREAD_SUPPORT

commit c8501afc0cde1a1d8f95daf293ea9fc7feff6e59
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 17:17:38 2022 +0300

    http: suppress "flags may be used uninitialized in this function" error
    
    Some GCC reports [1]:
    
        /home/runner/work/libevent/libevent/http.c: In function ‘evhttp_make_header’:
        /home/runner/work/libevent/libevent/http.c:503:14: error: ‘flags’ may be used uninitialized in this function [-Werror=maybe-uninitialized]
          ev_uint16_t flags;
                      ^~~~~
        /home/runner/work/libevent/libevent/http.c: In function ‘evhttp_get_body’:
        /home/runner/work/libevent/libevent/http.c:2354:14: error: ‘flags’ may be used uninitialized in this function [-Werror=maybe-uninitialized]
          ev_uint16_t flags;
                      ^~~~~
      [1]: https://github.com/libevent/libevent/runs/7263518338?check_suite_focus=true#logs

commit 3960449374595248577fa916dc1a40f49badd03f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 17:08:21 2022 +0300

    Detech -Wno-unused-functions for GCC too
    
    Otherwise build fails [1]:
    
        /home/runner/work/libevent/libevent/dist/libevent-2.2.0-alpha-dev/minheap-internal.h:64:6: error: ‘min_heap_ctor_’ defined but not used [-Werror=unused-function]
         void min_heap_ctor_(min_heap_t* s) { s->p = 0; s->n = 0; s->a = 0; }
              ^~~~~~~~~~~~~~
        In file included from /home/runner/work/libevent/libevent/dist/libevent-2.2.0-alpha-dev/buffer.c:91:0:
        /home/runner/work/libevent/libevent/dist/libevent-2.2.0-alpha-dev/bufferevent-internal.h:414:1: error: ‘bufferevent_trigger_nolock_’ defined but not used [-Werror=unused-function]
         bufferevent_trigger_nolock_(struct bufferevent *bufev, short iotype, int options)
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~
        In file included from /home/runner/work/libevent/libevent/dist/libevent-2.2.0-alpha-dev/buffer.c:89:0:
        /home/runner/work/libevent/libevent/dist/libevent-2.2.0-alpha-dev/evthread-internal.h:140:1: error: ‘EVLOCK_TRY_LOCK_’ defined but not used [-Werror=unused-function]
         EVLOCK_TRY_LOCK_(void *lock)
    
      [1]: https://github.com/libevent/libevent/runs/7263518180?check_suite_focus=true

commit 92b73c7d555a57f4143027ad7faf10b3125bb002
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 15:45:34 2022 +0300

    cmake: add compiler version to the status message

commit 09550714707028fcfdce9a13f6b12d22b3421f9b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 15:38:56 2022 +0300

    Fix BEV_LOCK/BEV_UNLOCK macros for EVENT__DISABLE_THREAD_SUPPORT

commit 1915b564f3de2dd9ea1852e629e56a38e19603dc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 14:47:12 2022 +0300

    Run builds with -Werror on CI for linux

commit 039458892b7469edef82bd863331f3a94af0b7e9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 14:43:39 2022 +0300

    Fix -Werror for autotools

commit f5ad737d73ed18b95ce63f1d8e933a89a26653e9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 14:22:38 2022 +0300

    Add -Wundef for cmake and fix EVENT__SIZEOF_TIME_T usage
    
    Note, autotools already supports it.

commit 1bc62ce1718c720fd64e6e2db408bfb07d04b88e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 14:13:57 2022 +0300

    https-client: fix strndup() for mingw build
    
    Right now it still reports [1]:
    
        2022-07-09T10:53:05.4152800Z ../sample/https-client.c:558:43: warning: implicit declaration of function 'strndup' [-Wimplicit-function-declaration]
        2022-07-09T10:53:05.4153300Z   558 |                         char *host_ipv6 = strndup(&host[1], strlen(&host[1]) - 1);
        2022-07-09T10:53:05.4153651Z       |                                           ^~~~~~~
        2022-07-09T10:53:05.4154095Z ../sample/https-client.c:558:43: warning: incompatible implicit declaration of built-in function 'strndup' [-Wbuiltin-declaration-
    
      [1]: https://github.com/libevent/libevent/runs/7263194178?check_suite_focus=true

commit 29032da661369160f1cfe1019ceecae124d0d8c9
Merge: e43376df 187f6b91
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 9 13:35:54 2022 +0300

    Fix some OpenSSL 3 test issues (#1291)
    
    These are updates to help with OpenSSL 3 compilation. I found
    https://github.com/libevent/libevent/pull/1288 after I started this, but
    these seem independent, and fix a different set of problems:
    
    - First off, OpenSSL 3 does not by default allow signing with SHA1
      digests - moving this to SHA256 universally at this point seems a
      better idea than continuing to use the insecure SHA1 for older OpenSSL
      versions. This fixes X509_sign failing in regress_openssl for a number
      of tests, eg:
    
      ```
       regress: http/https_openssl_basic:
        FAIL ../test/regress_openssl.c:106: assert(0 != X509_sign(x509, key, EVP_sha1()))[Lost connection!] http/https_openssl_filter_basic:
        FAIL ../test/regress_openssl.c:106: assert(0 != X509_sign(x509, key, EVP_sha1()))[Lost connection!] http/https_openssl_simple:
      ...
      ```
    
    - Secondly, when using TLS 1.3, there's no support for renegotiation, so
      for the renegotiation tests, we need to disable TLS v1.3, and expect
      to negotiate TLS 1.1 or 1.2
    
    Fixes: #661
    
    * upstream/pr/1291:
      OpenSSL 3 fixes: Disable TLS 1.3 when testing renegotiation support
      OpenSSL 3 fixes: use SHA256 instead of SHA1

commit e43376df2a4d01230f3d07b22eb2dd34e2c70806
Author: William Marlow <william.marlow@ibm.com>
Date:   Sat Jun 18 21:43:31 2022 +0100

    Add missing strndup function on Windows to fix build on MSVC 2022
    
    v2: Only define strndup on non-Mingw32 Windows

commit bf3ce77f6cf113839defa70b30e183d471a0dab5
Author: fanquake <fanquake@gmail.com>
Date:   Thu Jun 23 13:38:14 2022 +0100

    build: only try silence options if they exist
    
    Otherwise GCC will warn. i.e:
    ```bash
      CCLD     libevent_openssl.la
    cc1: note: unrecognized command-line option ‘-Wno-void-pointer-to-enum-cast’
            may have been intended to silence earlier diagnostics
      CCLD     libevent_mbedtls.la
    ```

commit 187f6b913b38a0cd5a0d9775f794fdf02c105953
Author: Peter Edwards <peadar@arista.com>
Date:   Mon Jun 27 22:41:47 2022 +0100

    OpenSSL 3 fixes: Disable TLS 1.3 when testing renegotiation support
    
    TLS 1.3 does not support renegotation - it has been removed from the
    protocol. Disable TLS 1.3 when testing this, so we negotiate an older
    protocol version

commit e563c9b20616c40b7cd57165eb91171b6619346b
Author: Peter Edwards <peadar@arista.com>
Date:   Mon Jun 27 22:00:05 2022 +0100

    OpenSSL 3 fixes: use SHA256 instead of SHA1
    
    OpenSSL 3.x does not support signing certificates with SHA1 by default.
    Use SHA256 instead.

commit 1c204d55640170b77ed2f7e8cc07f9417e1844cc
Author: cui fliter <imcusg@gmail.com>
Date:   Mon Jun 13 04:58:50 2022 +0800

    Fix some typos (#1284)
    
    Signed-off-by: cuishuang <imcusg@gmail.com>

commit 41239c9dac70ed90187fb287f214e1b106f52c83
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu May 12 07:37:19 2022 +0300

    https-client: fix connect to ipv6 address with square brackets
    
    getaddrinfo() cannot process addresses like "[::1]", only "::1"
    
    Fixes: #1275

commit 5cc2ff8897dade8eb4d5426884490fae0e2f160b
Author: zhongzedu <zhongze-dzz@outlook.com>
Date:   Mon May 9 16:33:36 2022 +0800

    fix grammar in comment

commit e339880f556f87c70371c562843096b3a32df43d
Author: Syedh30 <syed.h@ext.firstlight.ai>
Date:   Fri Apr 29 19:40:29 2022 +0530

    include/event.h: include <event2/util.h> over deprecatd <evutil.h>
    
    Fixes: #1263

commit 21e2862689edc59b6265998c4a1a2729552ab0b1
Author: Igor Klemenski <igklemen@microsoft.com>
Date:   Wed Apr 6 14:35:00 2022 -0700

    Fix mingw pipeline (by using correct PATH to msys64)
    
    I found the correct path by looking at the _Disable Key Refresh_ step in
    _mingw::autotools::set up msys2_ task
    (https://github.com/rectified95/libevent/runs/5858227589?check_suite_focus=true)
    
        C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe "((Get-Content -path **D:\a\_temp\msys64**\etc\post-install\07-pacman-key.post -Raw) ...

commit 097ff9a433b3a6f21dcfdf84890ac0dc33ad9cb8
Author: Igor Klemenski <igklemen@microsoft.com>
Date:   Wed Apr 6 13:44:27 2022 -0700

    Fix windows pipeline (by updating vcpkg version to latest)
    
    The Windows CI is failing at the prepare vcpkg step while installing zlib
    Changing the vcpkg commit hash to point to latest release
    https://github.com/microsoft/vcpkg/releases/tag/2022.03.10 as opposed to
    sometime in 2019 to see if that fixes it.

commit 822502d72d245635f45248f9146d3cf3ecfd9d99
Author: Greg Hazel <ghazel@gmail.com>
Date:   Thu Mar 31 15:29:32 2022 -0700

    evdns fix NULL res clearing the cache entry
    
    Signed-off-by: Kirill Rodriguez <theoden8@tutamail.com>
    Signed-off-by: Kirill Rodriguez <theoden8@gmail.com>

commit 66861f8891ef8dee453fb5500376d2e0b6ff8092
Author: moonlightsh <85744700@qq.com>
Date:   Thu Mar 10 23:58:36 2022 +0300

    Require libevent_core not libevent for pkg-config
    
    libevent library itself had been deprecated long time ago.
    
    Fixes: #1213

commit 6349e94a0a4fe361ad78921ff84bfe3be94b2028
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 10 23:11:14 2022 +0300

    Do not install RPATH for install tree by default
    
    In ce8be2385b5fee16859a630fca0c98ad290c8e21 ("cmake: set rpath for
    libraries on linux") RPATH was first instroduced.
    
    Later in 6d09efe8686de824adf3d8810bbe0d5c386643e4 ("Set RPATH only if
    installation is done into non system directory") it was set only if it
    was installed to non system directory.
    
    But absolute RPATH not a good default, let's change this.
    
    Fixes: #920

commit 3da71856a73a28e05c18f9f2d4bf7fcc6e46f4ce
Author: Jay Freeman (saurik) <saurik@saurik.com>
Date:   Sat Feb 12 22:53:11 2022 +0300

    Fix build w/o OpenSSL by w/ MbedTLS
    
    In 78fa3971be892194aa168c04fc34bf5f2cd99b99 from
    https://github.com/libevent/libevent/pull/1241#commitcomment-63865496 a
    new "if MBEDTLS" block was added to include/include.am. This is not
    parsed by automake as it isn't on the first column, resulting in a
    subsequent error in the build.
    
    From [1]:
    
    > The if, else, and endif statements should not be indented, i.e., start on column one.
    
      [1]: https://www.gnu.org/software/automake/manual/html_node/Usage-of-Conditionals.html
    
    Fixes: #1251
    Fixes: google/oss-fuzz#7149

commit 6d09efe8686de824adf3d8810bbe0d5c386643e4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jan 15 22:06:58 2022 +0300

    Set RPATH only if installation is done into non system directory
    
    v2: use CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES
    
    Fixes: #1245

commit 78fa3971be892194aa168c04fc34bf5f2cd99b99
Author: Dmitry Ilyin <dima@doty.ru>
Date:   Sat Jan 15 08:30:26 2022 +0300

    Fix make install failed when Automake used and both OpenSSL and MbedTLS are activated
    
    Issue:
    https://github.com/libevent/libevent/pull/1241#commitcomment-63865496

commit a9595ccd7d1d6c02836d2facda0ba10bf4b66a79
Author: Jessica Clarke <jrtc27@jrtc27.com>
Date:   Tue Dec 21 13:15:58 2021 +0000

    regress_ssl: Use intptr_t when shoving an int into a void *
    
    Currently the code uses long, but long does not always have the same
    representation as a pointer, such as on 64-bit Windows where long is
    only 32-bit due to its unususal LLP64 ABI, but also on CHERI, and thus
    Arm's prototype Morello architecture, where C language pointers are
    represented as hardware capabilities, which have bounds, permissions and
    other metadata to enforce spatial memory safety. Both of these cases
    warn when casting a long to a pointer (Windows due to long being shorter
    and thus it being likely you've truncated the address, and CHERI due to
    long not having any capability metadata like pointers and thus it being
    likely you've stripped the metadata, with the resulting "null-derived"
    capability destined to trap if dereferenced), and in both cases casting
    to intptr_t as the intermediate type instead will get rid of those
    warnings.

commit 09e9fed2bd6b8123d5f1e886b0bd9a9c21cec0c9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 21 08:47:00 2021 +0300

    test: fix leak in http/cancel_*server_timeout tests
    
    Fixes: #1242

commit 2db55e43cffd2fb6a34b5c997f2b8d043ca0ece5
Author: Dmitry Ilyin <dima@doty.ru>
Date:   Wed Dec 15 21:27:21 2021 +0300

    Install bufferevent_ssl.h with MbedTLS support also

commit cd6a41ecdddc7b2a99a81401858dd2dc6cdc80bb
Author: Yongsheng Xu <chuxdesign@hotmail.com>
Date:   Fri Dec 10 11:05:13 2021 +0800

    feat: add `evdns_base_get_nameserver_fd` method
    
    To get underlying udp socket fd.

commit 12cedc8a4f3f01dd25d3eaf3b1d602d691233446
Author: moonlightsh <85744700@qq.com>
Date:   Wed Nov 17 08:40:40 2021 +0800

    Fix deadlock in case of evconnlistener_disable() in parallel with callback
    
    I've got an issue when stop evconnlistener not in the event_base_loop()
    thread. evconnlistener_disable() acquired lev->lock, if the same time,
    user callbacks is runing, the event thread released lock, after callback
    finished, it try to aquire the lock again, I think this makes conflict:
    
    Here is backtraces:
    
    thread 1:
        0  __lll_lock_wait (futex=futex@entry=0x555555559a60, private=0) at lowlevellock.c:52
        1  0x00007ffff7f2a131 in __GI___pthread_mutex_lock (mutex=0x555555559a60) at ../nptl/pthread_mutex_lock.c:115
        2  0x00007ffff7f424c9 in evthread_posix_lock (mode=0, lock_=0x555555559a60) at evthread_pthread.c:79
        3  0x00007ffff7f7dc12 in listener_read_cb (fd=7, what=2, p=0x5555555599a0) at listener.c:439
        4  0x00007ffff7f6d758 in event_persist_closure (base=0x555555559370, ev=0x5555555599d8) at event.c:1645
        5  0x00007ffff7f6da60 in event_process_active_single_queue (base=0x555555559370, activeq=0x5555555597e0,
           max_to_process=2147483647, endtime=0x0) at event.c:1704
        6  0x00007ffff7f6e018 in event_process_active (base=0x555555559370) at event.c:1805
        7  0x00007ffff7f6e92a in event_base_loop (base=0x555555559370, flags=0) at event.c:2047
        8  0x0000555555555449 in main () at test_listen.c:67
    
    thread 2:
        0  futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555555559858) at ../sysdeps/nptl/futex-internal.h:183
        1  __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x555555559800, cond=0x555555559830) at pthread_cond_wait.c:508
        2  __pthread_cond_wait (cond=0x555555559830, mutex=0x555555559800) at pthread_cond_wait.c:638
        3  0x00007ffff7f426f3 in evthread_posix_cond_wait (cond_=0x555555559830, lock_=0x555555559800, tv=0x0) at evthread_pthread.c:162
        4  0x00007ffff7f70bc5 in event_del_nolock_ (ev=0x5555555599d8, blocking=2) at event.c:2934
        5  0x00007ffff7f70748 in event_del_ (ev=0x5555555599d8, blocking=2) at event.c:2821
        6  0x00007ffff7f707a1 in event_del (ev=0x5555555599d8) at event.c:2830
        7  0x00007ffff7f7d76e in event_listener_disable (lev=0x5555555599a0) at listener.c:343
        8  0x00007ffff7f7d6e5 in evconnlistener_disable (lev=0x5555555599a0) at listener.c:325
        9  0x00005555555552c3 in disable_thread (arg=0x5555555599a0) at test_listen.c:27
        10 0x00007ffff7f27609 in start_thread (arg=<optimized out>) at pthread_create.c:477
        11 0x00007ffff7e4e293 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95

commit e1ecc6fa0d3ea1cc9d290f5b460e02d1708b0391
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Dec 2 10:27:16 2021 +0300

    Switch coverage to ubuntu 18.04
    
    It seems that there is no 16.04 image anymore, since github actions was
    not able to find it for 24 hours [1].
    
      [1]: https://github.com/libevent/libevent/actions/runs/1522612189

commit 9aa4eb0991416a6b8f62c2575144102ee16df0cc
Author: fanquake <fanquake@gmail.com>
Date:   Wed Nov 24 08:44:03 2021 +0800

    build: use modern ax_pthread macro
    
    acx_pthread became ax_pthread in 2009 and the macro has seen lots of updates
    since then. This change switches to using the latest version.

commit d076d2df843bc5fbdfbd90548971caa1436940b3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 30 22:41:05 2021 +0300

    Revert "evdns: do not check server_req twice"
    
    That was wrong assumption.
    
    This reverts commit 991f0ed3d86ffca0c017ab83cd239289912bdaad.
    
    Fixes: #1231

commit 3b9c7dd6d64efef323e3971d1d72c069b507d617
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 30 22:37:32 2021 +0300

    ci: remove deprecated windows-2016 image
    
    Refs: https://github.blog/changelog/2021-10-19-github-actions-the-windows-2016-runner-image-will-be-removed-from-github-hosted-runners-on-march-15-2022

commit 883630f76cbf512003b81de25cd96cb75c6cf0f9
Author: Theo Buehler <tb@openbsd.org>
Date:   Sun Nov 21 21:38:20 2021 +0100

    Don't define BIO_get_init() for LibreSSL 3.5+
    
    BIO_get_init() is available in LibreSSL 3.5 and later. The BIO type
    will become opaque, so the existing macro will break the build.

commit f64f60a223215b9c38d1f04dbdc6246fa8513f7a
Merge: 0c217f4f 80f3ab01
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 30 22:22:43 2021 +0300

    Merge #1230 -- build: remove inconsistently used x-prefix comparisons
    
    * upstream/pr/1230:
      build: fix typos in ax_check_funcs_ex.m4
      build: remove inconsistently used x-prefix comparisons

commit 80f3ab014e6b571df55eddd9c2377094aeb82ec7
Author: fanquake <fanquake@gmail.com>
Date:   Wed Nov 24 14:44:48 2021 +0800

    build: fix typos in ax_check_funcs_ex.m4

commit 082941edf204a0f154f0cf33ce36ab9cf7356f2a
Author: fanquake <fanquake@gmail.com>
Date:   Wed Nov 24 14:41:33 2021 +0800

    build: remove inconsistently used x-prefix comparisons
    
    Given that these are already used inconsistently with `test` checks, it
    makes sense to consolidate to not use the x-prefix comparisons at all.
    In any case, it would be nice to think we no longer have to work around
    a problem that existed in shells many, many years ago.
    
    More info:
    https://github.com/koalaman/shellcheck/wiki/SC2268
    https://www.vidarholen.net/contents/blog/?p=1035

commit 0c217f4fe1af6efdb99321401da6f4048398065f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 22 00:05:27 2021 +0300

    Fix comment for evdns_base_new()

commit 89505f8513b8590e7a7700d481c20562d0726d54
Author: Christopher Chavez <chrischavez@gmx.us>
Date:   Thu Nov 11 20:12:14 2021 -0600

    CheckWorkingKqueue.cmake: fix missing headers
    
    Avoid implicitly declaring functions memset() and exit()
    as it is considered an error by some compilers
    (e.g. Xcode clang 12 and later)

commit 9a38bc5f73823ac72d6c6b74de7b3ac592a8c7f2
Author: Tomas Gonzalez <tomas@fuel7.com>
Date:   Mon Nov 1 10:01:06 2021 -0700

    evutil: Fix evutil_freeaddrinfo
    
    During testing on win32, util/getaddrinfo failed with NULL hint info
    
         r = evutil_getaddrinfo("www.google.com", NULL, NULL, &ai);
    
    throwing a critical heap exception when evutil_freeaddrinfo is called.
    This is because of improper use of freeaddrinfo when nodes within the
    ai structure are allocated using mm_malloc or mm_calloc
    (EVUTIL_AI_LIBEVENT_ALLOCATED)
    
    This adds the flag in apply_socktype_protocol_hack and walks the linked
    list in evutil_freeaddrinfo removing linked list nodes that are custom
    allocated before calling freeaddrinfo.

commit 3daebf308a01b4b2d3fb867be3d6631f7b5a2dbb
Author: Thomas Perrot <thomas.perrot@bootlin.com>
Date:   Wed Sep 29 13:50:35 2021 +0200

    test: retriable tests are marked failed only when all attempts have failed
    
    Signed-off-by: Thomas Perrot <thomas.perrot@bootlin.com>

commit 048907a501e2ee106cd9dabf6686697f3b73b562
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 15:52:02 2021 +0300

    github/workflows/macos.yml: fix test step name

commit 357dca4f706cea9e9c4e0999ae42f75ce13b51fd
Merge: 39dcd52b 90846c30
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 15:59:57 2021 +0300

    Merge branch 'skip-tests' -- fix/skip some tests to avoid complete check failures
    
    * skip-tests:
      test: add --retries-delay (and set to 1 second by default)
      test: add --retries argument
      Add -Wno-void-pointer-to-enum-cast (we use this hack in tests)
      test/regress_http: mark data_length_constraints as retriable
      github/workflows/mingw: use ctest --output-on-failure
      test/dns: mark TCP tests as retriable
      test/regress: retry some signal rlated tests in darwin
      test/regress_util: mark monotonic_prc as retriable
      test/regress_http: fix unix_socket test
      test/regress_http: disable max_connections/data_length_constraints under windows
      Add EV_WINDOWS macro

commit 90846c30ff0313a3c81074ea8b8a1250195103cc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 13:18:40 2021 +0300

    test: add --retries-delay (and set to 1 second by default)
    
    In attemp to address failures of dns/tcp_* tests under windows [1].
    
      [1]: https://github.com/azat/libevent/runs/3644218468?check_suite_focus=true

commit d7d6af7578f85a0c090e2ba4d4936c169db6a731
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 13:15:02 2021 +0300

    test: add --retries argument

commit 7179ceddf0fdb18c8175c80cae651c1795c3e355
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 13:36:15 2021 +0300

    Add -Wno-void-pointer-to-enum-cast (we use this hack in tests)
    
    Refs: https://reviews.llvm.org/D75758

commit 29492364a2b063d6ae83f8bc3a6f7016bb5ddc19
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 12:56:24 2021 +0300

    test/regress_http: mark data_length_constraints as retriable
    
    CI: https://github.com/libevent/libevent/runs/3643914024?check_suite_focus=true

commit 12e6d6ebaf511572266a14ca4358d3873d2cafc8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 12:33:44 2021 +0300

    github/workflows/mingw: use ctest --output-on-failure
    
    Otherwise it is hard to understand the problem [1].
    
      [1]: https://github.com/azat/libevent/runs/3643912284

commit 7855900c013bad589d12f00b6faa1bb5b4784ee3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 12:24:50 2021 +0300

    test/dns: mark TCP tests as retriable
    
    CI: https://github.com/azat/libevent/runs/3643912296 # tcp_resolve_many_clients
    CI: https://github.com/azat/libevent/runs/3643912192 # tcp_timeout
    CI: https://github.com/azat/libevent/runs/3643912336 # tcp_resolve
    CI: https://github.com/azat/libevent/runs/3643912174 # tcp_resolve_pipeline

commit 6ad6afb64605c90088044489813941f256d8b19e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 12:23:48 2021 +0300

    test/regress: retry some signal rlated tests in darwin
    
    CI: https://github.com/azat/libevent/runs/3643912290 # simplestsignal
    CI: https://github.com/azat/libevent/runs/3643912296 # simplesignal
    CI: https://github.com/azat/libevent/runs/3643912228 # multiplesignal

commit 58606a62e23bc83ea2c3e40566c9790e2043ef81
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 12:21:39 2021 +0300

    test/regress_util: mark monotonic_prc as retriable
    
    CI: https://github.com/azat/libevent/runs/3643966877

commit de53da2e3cf887752e7448f55c0dbb13abcf591c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 11:07:55 2021 +0300

    test/regress_http: fix unix_socket test

commit 95eadf0426315149cc7e97c6b67bbc70b399f9cc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 10:54:27 2021 +0300

    test/regress_http: disable max_connections/data_length_constraints under windows
    
    CI: https://github.com/libevent/libevent/runs/3643554394

commit a35d2d01ff55555c4a954809349d2a0312f5bcb9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 10:54:08 2021 +0300

    Add EV_WINDOWS macro

commit 39dcd52b94db5f7cc5081ab0c14d4bf24e305c52
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 10 22:04:43 2021 +0300

    ci: split build and test into separate jobs

commit f1e9e4dad38434fadbce63ff05d82f310b0f563b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 01:47:42 2021 +0300

    test: cleanup stalled socket after running http/unix_sock
    
    Otherwise it breaks upload-artifacts:
    
        Run actions/upload-artifact@v1
        Uploading artifact 'ubuntu-18.04-cmake-NONE-build' from '/home/runner/work/libevent/libevent/build' for run #346
        Uploading 1095 files
        File error 'No such device or address' when uploading file '/home/runner/work/libevent/libevent/build/foo'.
        ...
        Error: No such device or address
        Error: Exit code 1 returned from process: file name '/home/runner/runners/2.282.1/bin/Runner.PluginHost', arguments 'action "GitHub.Runner.Plugins.Artifact.PublishArtifact, Runner.Plugins"'.

commit f89e86123c447ad7d3235b7bf7b853449bd1a401
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 01:23:07 2021 +0300

    test: check return value of write()/send() in bufferevent_read_failed
    
    This will also suppress:
    
        ../test/regress_bufferevent.c: In function ‘test_bufferevent_read_failed’: 1102
        ../test/regress_bufferevent.c:1395:2: warning: ignoring return value of ‘write’, declared with attribute warn_unused_result [-Wunused-result] 1103
          write(data->pair[0], buf, strlen(buf));

commit 04fcd7c6df158bb65261867de4b9ec8439696934
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 00:57:31 2021 +0300

    test: mark util/monotonic_prc_fallback as retriable
    
    Refs: #1193

commit 41b5ab0f495b084e8cf25371642eb23f22bcf028
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 00:39:30 2021 +0300

    bufferevent_ssl: check return value of the evbuffer_drain()
    
    Refs: #1163

commit b926af26250bfd6efb287d37ad15f17042f7b2c6
Merge: 74af13d5 fd0ce993
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 00:27:53 2021 +0300

    Merge remote-tracking branch 'upstream/pr/1203'
    
    @ploxiln:
    
      "It seems like a bit of refactoring might be able to clean this code
    up a bit, but it's a bit tricky because of the varied tricky usage of
    chain structs, so this initial version has minimal changes ... "
    
    * upstream/pr/1203:
      buffer: do not round up allocation for reference-type chain objects

commit 74af13d5eb7aa05219390913da12f41951b73c51
Merge: fabbf3b3 5303feff
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 19 00:23:10 2021 +0300

    Merge !1204 -- tests: fix macOS CI runs
    
    * upstream/pr/1204:
      test: http_unix_socket_test: fix url could be freed uninitialized
      test: regress_http: skip unix socket parsing tests in windows
      test: fix regress_http evhttp_bind_unixsocket() on macOS
      ci: fix macOS mbedtls version/search

commit 5303feff991fb002855cfb6f876ce7579c3916dd
Author: Pierce Lopez <pierce.lopez@gmail.com>
Date:   Fri Sep 17 04:47:34 2021 -0400

    test: http_unix_socket_test: fix url could be freed uninitialized
    
    > regress_http.c:2279:2: warning: variable 'uri' is used uninitialized
    >     whenever 'if' condition is true

commit 4f73bf3a468b71e5f4f55442a99086feb863d1b0
Author: Pierce Lopez <pierce.lopez@gmail.com>
Date:   Fri Sep 17 01:56:56 2021 -0400

    test: regress_http: skip unix socket parsing tests in windows
    
    windows doesn't do unix sockets

commit 58d4e50d3c673af49da1e087cbd66991b710df22
Author: Pierce Lopez <pierce.lopez@gmail.com>
Date:   Fri Sep 17 01:39:46 2021 -0400

    test: fix regress_http evhttp_bind_unixsocket() on macOS
    
    needs to use evutil socket helper for SOCK_NONBLOCK / SOCK_CLOEXEC

commit bceab045ea8f4b421d1e3767f11d2b034153d96d
Author: Pierce Lopez <pierce.lopez@gmail.com>
Date:   Fri Sep 17 01:37:19 2021 -0400

    ci: fix macOS mbedtls version/search
    
    mbedtls just updated to version 3.0, install mbedtls@2 variant,
    which needs more help being located since it's no longer the
    default and no longer linked into the typical /usr/local dirs
    
    also gitignore mbedtls sample program binaries

commit fd0ce993e92e581023f640f37ecaa2a10c75059b
Author: Pierce Lopez <pierce.lopez@gmail.com>
Date:   Thu Sep 16 23:21:26 2021 -0400

    buffer: do not round up allocation for reference-type chain objects
    
    Skip rounding up memory allocations for:
      * evbuffer_add_reference()
      * evbuffer_add_buffer_reference()
      * evbuffer_add_file_segment()
    
    These chain objects only store small structs with references to
    other things, and these small structs do not themselves grow, so
    bumping up the allocation to MIN_BUFFER_SIZE (512 bytes) is wasteful.

commit fabbf3b31074ed74b9f0657299836fe40e4e365a
Author: Pierce Lopez <pierce.lopez@gmail.com>
Date:   Tue Sep 14 01:19:36 2021 -0400

    test: skip dns_initialize_nameservers if missing /etc/resolv.conf
    
    some build systems run tests in minimal containers with no resolv.conf,
    and the primary thing this test does is load the default /etc/resolv.conf

commit 68675d5f67c2570c78f114a241fbd2aaa625ceb1
Author: Yong Wu <33825637+yongw5@users.noreply.github.com>
Date:   Sun Sep 12 18:03:03 2021 +0800

    doc: adjust flags notice on event_base_loop()

commit 990bcfc28e720ba34f7f14a2bc257c210e45e699
Author: Yong Wu <33825637+YongW5@users.noreply.github.com>
Date:   Mon Sep 6 08:06:10 2021 +0800

    ev_io_timeout consistency

commit 7459407701e89f11688194ce6baa4c66a381cb00
Author: Yong Wu <33825637+YongW5@users.noreply.github.com>
Date:   Sun Sep 5 22:42:04 2021 +0800

    modify typo - timeeouts

commit 2b92b830a742998b75aca5ff123faed562932033
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Aug 12 01:40:27 2021 +0300

    http: fix building under windows (guard with _WIN32 for unixsocket free)
    
    Reported-by: @kaend

commit 86292628e30bea51c0de0136a00837ca2bc8447c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 10 23:14:01 2021 +0300

    test: fix checking test args for http_parse_uri_test

commit f446229b2206691eae7ec892e68b2a0d6ef61306
Author: Sean Young <sean@mess.org>
Date:   Sun Jan 31 11:31:00 2016 +0000

    http: support unix domain sockets
    
    There are no standard for encoding a unix socket in an url. nginx uses:
    
        http://unix:/path/to/unix/socket:/httppath
    
    The second colon is needed to delimit where the unix path ends and where
    the rest of the url continues.
    
    Signed-off-by: Sean Young <sean@mess.org>

commit 6f139b871100aa2322598dfd37c4145e033d2602
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Aug 1 11:53:17 2021 +0300

    buffer: fix CreateFileMapping() leak from evbuffer_add_file()
    
    evbuffer_file_segment_materialize() is called twice from
    evbuffer_add_file(), and so win32 mapping will leak.
    
    Fixes: #1186

commit c29f1dbe116c88434e77721ca215b8d2082b247f
Author: moonlightsh <85744700@qq.com>
Date:   Fri Jul 16 10:21:06 2021 +0800

    fix evthread_use_pthreads_with_flags dead lock when first  return

commit c5642697e7e51a5984fd7574f4e3723f42ee9ed5
Author: fanquake <fanquake@gmail.com>
Date:   Tue Jul 13 15:08:44 2021 +0800

    build: fail with a useful error message if pkg-config isn't available

commit 5c0e75c34e43743e57cd730383e3716ce9e3b519
Author: Tobias Heider <tobias.heider@stusta.de>
Date:   Tue Jul 6 17:40:58 2021 +0200

    Properly initialize sockaddr length on systems with sin_len.

commit 6d800fd6dbd3ca5e945937b00986b41e3bac99e7
Merge: 3d48c756 196a36af
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jul 10 00:12:21 2021 +0300

    Merge remote-tracking branch 'upstream/pr/1171'
    
    * upstream/pr/1171:
      ci: install pkg-config in mingw-w64 CI
      build: test ac_cv_header_sys_time_h once, reformat timer* macro checks
      build: remove call to AC_C_CONST()
      build: replace ntp_pkg_config macro with a call to PKG_PROG_PKG_CONFIG()
      build: remove NTP_PKG_CONFIG call from libevent_mbedtls.m4
      build: stop using the deprecated form of AC_OUTPUT()
      build: quote args in AC_ARG_ENABLE & AS_HELP_STRING
      build: remove call to AC_HEADER_TIME
      build: call AC_PREREQ() first & quote argument
      build: remove call to AC_PREFIX_DEFAULT
      build: remove call to AC_PROG_GCC_TRADITIONAL

commit 196a36afc8fffdaf82d92d7672d825f4aa2fadb8
Author: fanquake <fanquake@gmail.com>
Date:   Fri Jul 9 12:34:37 2021 +0800

    ci: install pkg-config in mingw-w64 CI

commit 7ab3a06adacd71918d92b8dca2ff76116a187e0c
Author: fanquake <fanquake@gmail.com>
Date:   Wed Jun 16 15:29:30 2021 +0800

    build: test ac_cv_header_sys_time_h once, reformat timer* macro checks

commit 041d6f09921f0730dd590579c68614ce87591139
Author: fanquake <fanquake@gmail.com>
Date:   Tue Jun 15 16:00:48 2021 +0800

    build: remove call to AC_C_CONST()
    
    > This macro is obsolescent, as current C compilers support const.
    > New programs need not use this macro.
    
    See: https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.67/autoconf.html#index-AC_005fC_005fCONST-877.

commit 12996ba9bf1e943e5c334fdbe8293db1ccc4a07a
Author: fanquake <fanquake@gmail.com>
Date:   Tue Jun 15 15:49:38 2021 +0800

    build: replace ntp_pkg_config macro with a call to PKG_PROG_PKG_CONFIG()
    
    Note that 0.15.0 is quite an old version to be testing for, however I've left
    this as-is for now.

commit 4ed3709637881dd7fa6881f936d83532de739617
Author: fanquake <fanquake@gmail.com>
Date:   Tue Jun 15 15:37:30 2021 +0800

    build: remove NTP_PKG_CONFIG call from libevent_mbedtls.m4
    
    I'm guessing this was just copied from libevent_openssl.m4, however there aren't
    actually any pkg-config calls / macros used here.

commit 7708f6ce113b94e6307dd23ad114e00aaca794d3
Author: fanquake <fanquake@gmail.com>
Date:   Tue Jun 15 15:22:20 2021 +0800

    build: stop using the deprecated form of AC_OUTPUT()
    
    > The use of AC_OUTPUT with arguments is deprecated.
    
    See: https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.67/autoconf.html#AC_005fOUTPUT.

commit 5f11857fd7f38bc6c730bfd6a51417fb323451b7
Author: fanquake <fanquake@gmail.com>
Date:   Tue Jun 15 14:34:46 2021 +0800

    build: quote args in AC_ARG_ENABLE & AS_HELP_STRING
    
    Previously, some were, some weren't. Consolidate on quoting.

commit 67f808ece8cff2f130efd90a9f77a2dbce918153
Author: fanquake <fanquake@gmail.com>
Date:   Tue Jun 15 14:10:29 2021 +0800

    build: remove call to AC_HEADER_TIME
    
    Besides the fact that the *_TIME_WITH_SYS_TIME define doesn't seem to be
    used anywhere in the libevent source, this macro is also obselescent.
    
    > This macro is obsolescent, as current systems can include both files when they exist.
    > New programs need not use this macro.
    
    See:
    https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.67/autoconf.html#index-AC_005fHEADER_005fTIME-640.

commit eb59d84da2b4b177d456a881222695918353a5e8
Author: fanquake <fanquake@gmail.com>
Date:   Tue Jun 15 13:41:05 2021 +0800

    build: call AC_PREREQ() first & quote argument
    
    > This macro may be used before AC_INIT.
    
    Calling this first means establishing that the required version of
    autoconf is actually available, before bothering with AC_INIT().
    
    See:
    https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.67/autoconf.html#Versioning.

commit dfae9557fcd4b88982aae983e89b1f1de15c749b
Author: fanquake <fanquake@gmail.com>
Date:   Tue Jun 15 13:35:58 2021 +0800

    build: remove call to AC_PREFIX_DEFAULT
    
    > By default, configure sets the prefix for files it installs to /usr/local.
    
    A call to AC_PREFIX_DEFAULT, just to set the value the same as the
    default, would seem unnecessary. Note that the "initialize prefix"
    comment dates back to aa6567fe6475d3230c7c745a7ca208735af0c331, prior to
    when an autoconf macro was actually being used.
    
    See:
    https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.67/autoconf.html#Default-Prefix.

commit 710ccb7e7c2a466f97bba166e00e17d5a418d9a2
Author: fanquake <fanquake@gmail.com>
Date:   Tue Jun 15 13:31:44 2021 +0800

    build: remove call to AC_PROG_GCC_TRADITIONAL
    
    libevent requires Autoconf 2.67+, and from atleast this version
    onwards, if not earlier, this macro is obsolescent.
    
    > This macro is obsolescent, since current versions of the GNU
    > C compiler fix the header files automatically when installed.
    
    See:
    https://www.gnu.org/savannah-checkouts/gnu/autoconf/manual/autoconf-2.67/autoconf.html#AC_005fPROG_005fGCC_005fTRADITIONAL.

commit 3d48c7563c0585856cd8681435c1555fe13b0859
Merge: 73ca1801 bb669d93
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jun 27 18:37:20 2021 +0300

    Merge #1176 - make evthread_use_pthreads() a MT-Safe function
    
    * upstream/pr/1176:
      remove emty line for code formating
      make evthread_use_pthreads a MT-Safe function

commit bb669d934a94c34265b42a064c51a0bfcba74ae2
Author: moonlightsh <85744700@qq.com>
Date:   Fri Jun 25 08:33:30 2021 +0800

    remove emty line for code formating

commit 608876d256efba11f29ad5d4f9b831f08e41b77e
Author: moonlightsh <85744700@qq.com>
Date:   Fri Jun 25 08:27:27 2021 +0800

    make evthread_use_pthreads a MT-Safe function

commit 73ca1801885922c49a39643bb56b3abd0e4f8ca9
Author: Michael Davidsaver <mdavidsaver@gmail.com>
Date:   Mon Oct 21 11:41:19 2019 -0700

    RTEMS has no SA_RESTART
    
    as RTEMS has no syscalls to restart.

commit aba6548c535c39647d06446c11e2a761be59d0af
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 23 09:50:03 2021 +0300

    Switch to lukka/run-vcpkg@v7 and update vcpkgGitCommitId
    
    Let's see if it uses set-env or not [1]:
    
        Run lukka/run-vcpkg@v2
        Restore vcpkg and its artifacts from cache
        Set output env vars
          Error: Unable to process command '::set-env name=RUNVCPKG_VCPKG_ROOT::D:\a\libevent\vcpkg' successfully.
          Error: The `set-env` command is disabled. Please upgrade to using Environment Files or opt into unsecure command execution by setting the `ACTIONS_ALLOW_UNSECURE_COMMANDS` environment variable to `true`. For more information see: https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands/
    
      [1]: https://github.com/libevent/libevent/runs/2172680596?check_suite_focus=true#step:4:24
    
    And this one [2]:
    
        error: could not open file /var/cache/pacman/pkg/libzstd-1.5.0-1-x86_64.pkg.tar.zst: Child process exited with status 127
        error: could not open file /var/cache/pacman/pkg/zstd-1.5.0-1-x86_64.pkg.tar.zst: Child process exited with status 127
        error: could not open file /var/cache/pacman/pkg/pacman-5.2.2-23-x86_64.pkg.tar.zst: Child process exited with status 127
        error: failed to commit transaction (cannot open package file)
    
      [2]: https://github.com/libevent/libevent/pull/1168/checks?check_run_id=2706159518#step:4:367

commit 8f74b30c407daa57848460a836020c364f13b116
Author: Alex Budovski <abudovski@gmail.com>
Date:   Sun May 30 13:05:25 2021 -0500

    Replace gettimeofday with the portable wrapper
    
    Otherwise the Win32 build fails.

commit c2b45248810b90366224bb0dfc679b465efa401f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 24 21:03:58 2021 +0300

    Fix -Warray-parameter for evutil_ersatz_socketpair_()

commit 862b83f9b6296eddd44d637897b6c86545797e7f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 24 21:03:58 2021 +0300

    dns-example: add CNAME support

commit 19b3fd0bf03c94e694ac25ad95fe43ac10df73b5
Author: Sergey Matveychuk <sem33@yandex-team.ru>
Date:   Wed Apr 7 20:39:18 2021 +0300

    evdns: add ability to get CNAME
    
    Add new flag (DNS_CNAME_CALLBACK) for
    evdns_base_resolve_ipv4()/evdns_base_resolve_ipv6().
    
    If set, you will get one more callback with type == DNS_CNAME and CNAME
    in addrs argument.

commit 087bbc572c48d9304d8b6b911e6b0cf966ba3c28
Author: Paweł Wegner <lemourin@google.com>
Date:   Thu May 13 17:32:11 2021 +0200

    cmake: don't override CMAKE_CONFIGURATION_TYPES.
    
    Surprisingly this overrides configuration types for projects which embed libevent using cmake's add_subdirectory.

commit 1fe8b3d6a4972e5a8891804a8751d408184097e8
Author: Biswapriyo Nath <nathbappai@gmail.com>
Date:   Wed May 5 01:26:17 2021 +0530

    cmake: Fix generted pkgconfig files.
    
    Use lowercase 'L' option for library names because uppercase 'L' is used with library search directory.

commit f02fa339488bf5b44db75e568dd2200e70d363ba
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Apr 30 10:15:45 2021 +0300

    Support disabled renegotiation in mbedTLS
    
    Patch from: @Kurruk007
    Fixes: #1161

commit 72138063466067b2b5c27d81e18bca0e3b610591
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Apr 27 21:15:03 2021 +0300

    Do not wrap lines in AC_CHECK_HEADERS/AC_CHECK_FUNCS (fixes detection in mingw)
    
    Fixes: d433f847 ("Revert "build: use literals for AC_CHECK_HEADERS/AC_CHECK_FUNCS"")
    Fixes: 28f0fe6f ("build: use literals for AC_CHECK_HEADERS/AC_CHECK_FUNCS")
    Fixes: ce028cef ("build: fix autotools build under mingw")

commit 86ae44ce4d7a8062b173188ac1f0b1cac3aec67b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Apr 27 09:03:42 2021 +0300

    Fix O_RDONLY (_O_RDONLY) under mingw
    
    O_RDONLY is defined only if [1]:
    
        !defined(NO_OLDNAMES) || defined(_POSIX)
    
      [1]: https://github.com/Alexpux/mingw-w64/blob/d0d7f784833bbb0b2d279310ddc6afb52fe47a46/mingw-w64-headers/crt/fcntl.h#L35

commit 4f8a61446c1b76ae6e6f9cb0a1e231b669412082
Author: Mike Sharov <msharov@users.sourceforge.net>
Date:   Sun Apr 25 09:12:29 2021 -0400

    Retry write on EINTR in signal handler
    
    The signal handler writes the received signal number as a byte value
    into the notification pipe. If two signals are received in quick
    succession, one of the writes may fail with EINTR without writing the
    byte. This commit will check for EINTR and retry the write. If the error
    is other than EINTR, a warning will be logged.
    
    Note, that:
    - on systems with sigaction libevent uses sigaction with SA_RESTART
    - on linux writing to pipe is restartable and firstly it will try to
      write that byte so linux should not be affected in any form [1].
    
      [1]: https://elixir.bootlin.com/linux/latest/source/fs/pipe.c#L545

commit dff8fd27edb23bc1486809186c6a4fe1f75f2179
Author: Yi Fan Yu <yifan.yu@windriver.com>
Date:   Thu Apr 22 22:35:59 2021 -0400

    test/regress.h: Increase default timeval tolerance 50 ms -> 100 ms
    
    The default timeout tolerance is 50 ms,
    which causes intermittent failure in many the
    related tests in arm64 QEMU.
    
    See: https://bugzilla.yoctoproject.org/show_bug.cgi?id=14163
    (The root cause seems to be a heavy load)
    
    Signed-off-by: Yi Fan Yu <yifan.yu@windriver.com>

commit 8e03f4959736731975bf0eb0433e00486910ade6
Merge: e77f1872 01beec2f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Apr 3 12:50:53 2021 +0300

    Merge #1152 -- remove no op evdns functions
    
    * upstream/pr/1152:
      dns: remove evdns_set_transaction_id_fn
      dns: remove evdns_set_random_bytes_fn

commit e77f18727478ff7f5d135a11bb96d6f42c82d127
Author: Emil Engler <me@emilengler.com>
Date:   Fri Apr 2 21:02:12 2021 +0200

    sample: use unsigned short instead of int for port
    
    The C standard gurantees that an unsigned short is at least up to 65535
    huge. Enough to store every TCP port. Also the parameter PORT is
    overgiven to the `htons()` function which assumes that the parameter is
    of type `uint16_t` which unsigned short is on most platforms.

commit 01beec2fea2c50a495493030f415272befc0db07
Author: fanquake <fanquake@gmail.com>
Date:   Sat Apr 3 12:55:32 2021 +0800

    dns: remove evdns_set_transaction_id_fn

commit 39d680534ac38650e4a59b1287b74115a92b1232
Author: fanquake <fanquake@gmail.com>
Date:   Sat Apr 3 12:55:11 2021 +0800

    dns: remove evdns_set_random_bytes_fn

commit 0ef0d9475c15d851d47d81dc70cf0b7bb73723ef
Author: Emil Engler <me@emilengler.com>
Date:   Fri Apr 2 20:59:55 2021 +0200

    doc: adjust edge-trigger notice on event_new()
    
    This makes it easier to read and to understand it in my opinon. It also
    fixes a missing "-" character.

commit d433f847334fff9da8e13e2dc7fdf5c0997b20b0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Apr 2 09:19:55 2021 +0300

    Revert "build: use literals for AC_CHECK_HEADERS/AC_CHECK_FUNCS"
    
    That commit was wrong, it breaks syntax for autoconf <2.71, since
    AC_CHECK_*S() requires sh-like list.
    
    This reverts commit 28f0fe6fd1e2b1e9fb24a5c7a5b078790890e44f.
    
    Fixes: #1149

commit 28f0fe6fd1e2b1e9fb24a5c7a5b078790890e44f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 28 17:16:54 2021 +0300

    build: use literals for AC_CHECK_HEADERS/AC_CHECK_FUNCS
    
    autoconf 2.72 reports:
    
        configure.ac:188: warning: AC_CHECK_HEADERS(\
        ): you should use literals
        ../autoconf-2.71/lib/autoconf/headers.m4:217: AC_CHECK_HEADERS is expanded from...
        configure.ac:188: the top level
        configure.ac:188: warning: AC_CHECK_HEADERS(afunix.h
        ): you should use literals
    
    And also it fails to find fcntl.h and other headers because of this:
    
        configure:14725: checking for  fcntl.h
        configure:14725: gcc -c -I/mingw64/include  conftest.c >&5
        conftest.c:77:10: fatal error:  fcntl.h: No such file or directory
           77 | #include < fcntl.h>
    
    Refs: https://github.com/libevent/libevent/pull/1146/checks?check_run_id=2211752215

commit ce028cefc7bf074e46a2ccf0d6c6dc2e0b07e75b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 28 09:01:58 2021 +0300

    build: fix autotools build under mingw
    
    autotools that is shipped with mingw (autoconf 2.71-1, automake
    1.6-1.16, automake wrapper 11-1), does not allow trailing backslashes
    for AC_CHECK_HEADERS() and AC_CHECK_FUNCS(), otherwise it generates
    incorrect for loop, and reports:
    
        ../configure: line 14724: syntax error near unexpected token `as_ac_Header=`printf "%s\n" "ac_cv_header_$ac_header" | $as_tr_sh`'
        ../configure: line 14724: `  as_ac_Header=`printf "%s\n" "ac_cv_header_$ac_header" | $as_tr_sh`'
        Error: Process completed with exit code 1.
    
    Here is a simple analog:
    
        for VAR in <CR> foo \ <CR> bar \
        do :
            echo $VAR
        done
    
    Trailing slash is not allowed.
    
    Refs:
    - https://github.com/libevent/libevent/runs/2171607687
    - https://github.com/libevent/libevent/runs/2211365885?check_suite_focus=true

commit 78e8541a9e2d3bfd89cd878864bffb8d25c38141
Author: fanquake <fanquake@gmail.com>
Date:   Sun Mar 28 10:35:22 2021 +0800

    build: remove no-longer used checks for vasprintf
    
    From what I can tell the last usage was removed in
    8d1317d71c46e27c5073d3429a64af69de0351a6.

commit 4c29b01c87af4739a0e846f5879fa0f5db287f10
Author: fanquake <fanquake@gmail.com>
Date:   Sun Mar 28 10:57:11 2021 +0800

    build: remove splice implementation fragments
    
    Looks like a `splice` implementation was planned, but has clearly never
    eventuated (the TODO comment is from ~12 years ago, in
    8b5bd77415fb6634fadf08357676926fecf5f032). For now, it's probably better
    to remove the unused code/correct the docs.

commit 8e5e7bb8a82458ba5ac4193d88cef38a3ad6dddb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 23 09:40:30 2021 +0300

    ci: fix upload-artifacts for linux dist build
    
    Fixes [1]:
    
        Run actions/upload-artifact@v1
        Error: Path does not exist /home/runner/work/libevent/libevent/build
        Error: Exit code 1 returned from process: file name '/home/runner/runners/2.277.1/bin/Runner.PluginHost', arguments 'action "GitHub.Runner.Plugins.Artifact.PublishArtifact, Runner.Plugins"'.
    
      [1]: https://github.com/libevent/libevent/runs/2172680722?check_suite_focus=true

commit 3b9b655da91ba71ef3a64ce35ba34617416980e9
Merge: 8e6090d0 2385638e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 23 09:10:00 2021 +0300

    Merge branch 'http-fix-fd-leak'
    
    * http-fix-fd-leak:
      http: fix fd leak on fd reset (by using bufferevent_replacefd())
      bufferevent: introduce bufferevent_replacefd() (like setfd() but also close fd)
    
    Fixes: #1143

commit 2385638edf9cb833ebc2759cdb6d6d45dc51a0da
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 23 09:02:39 2021 +0300

    http: fix fd leak on fd reset (by using bufferevent_replacefd())
    
    Fixes: afa66ea4 ("http: eliminate redundant bev fd manipulating and caching [WIP]")

commit aea752b62dde0f02195b9c2143bdfcdfe65fb6fb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 23 09:00:24 2021 +0300

    bufferevent: introduce bufferevent_replacefd() (like setfd() but also close fd)

commit 8e6090d001943241f57efb7329130ec86ba1dcd3
Author: fanquake <fanquake@gmail.com>
Date:   Tue Mar 23 09:52:14 2021 +0800

    build: use AC_CHECK_LIB over AC_HAVE_LIBRARY
    
    AC_HAVE_LIBRARY is deprecated, see
    https://www.gnu.org/software/autoconf/manual/autoconf-2.70/html_node/Obsolete-Macros.html,
    and has been prior to Autoconf 2.67, which is the minimum required by
    the project. It's usage also causes warnings with newer versions of autoconf:
    ```bash
    configure.ac:319: warning: The macro `AC_HAVE_LIBRARY' is obsolete.
    configure.ac:319: You should run autoupdate.
    ```
    
    `AC_HAVE_LIBRARY` was introduced in #969, although it's not clear why it
    was decided to revert to using an obselete macro.

commit 00b92f42b69af29a820b46049fd00be9cd3fb7d4
Author: MKCKR <26296627+mkckr0@users.noreply.github.com>
Date:   Tue Feb 16 13:26:44 2021 +0800

    fix compile error in VS2012 in evutil_gettimeofday()
    
    Move static variable definition before other statement, to prevent
    compile error in VS2012.
    
    Fixes: #1135

commit d13b7bbfcf04041f79952c47ae36f2b83e25374a
Author: ihsinme <61293369+ihsinme@users.noreply.github.com>
Date:   Fri Feb 5 18:54:30 2021 +0300

    http: fix invalid unsigned arithmetic

commit bc25889fb3738cdd4d85e3ac162fd6cb2fde9839
Author: lilei <dlilei@126.com>
Date:   Wed Feb 3 14:19:57 2021 +0800

    Check return value of evbuffer_remove() in bufferevent_read()
    
    The conflict cast convertion between the return value of
    bufferevent_read() and evbuffer_remove(), int(-1)->size_t(An undefined
    maximum)
    
    Add test case of bufferevent_read() should return 0 in case of
    evbuffer_remove() returns -1
    
    Fixes: #1132

commit f17eb6f509b41f0f9ccb719cb939d3dad2f143cf
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 18 23:23:42 2021 +0300

    test/regress_http: cover reading of chunked payload by server
    
    This is an example with transfer-encoding by client via bufferevent for
    the #1131

commit 617ba838746287974505c6a9c4de6c65172ea112
Author: chux0519 <chuxdesign@hotmail.com>
Date:   Sat Jan 9 17:19:27 2021 +0800

    evdns: add max-probe-timeout/probe-backoff-factor settings
    
    I recently found that when the network status changed when calling
    bufferevent_socket_connect_hostname (e.g. switching between several
    WIFIs), all DNS servers would fail, and the timeout of probe would be
    very long if there were many DNS requests. I want libevent to support
    manual setting of MAX_PROBE_TIMEOUT and TIMEOUT_BACKOFF_FACTOR
    
    So move hardcoded MAX_PROBE_TIMEOUT and TIMEOUT_BACKOFF_FACTOR into
    struct, and allow changing them.

commit c5e4391b86ab0198c9878620d566a66043bd1f43
Author: Emil Engler <me@emilengler.com>
Date:   Sat Dec 26 09:07:07 2020 +0100

    doc: remove dead link
    
    The link is dead and an archived page cannot be found in the
    web.archive.org.

commit 657e180694a97c6d70d58cd60b82e43dc23ac4b2
Author: Loïc Yhuel <loic.yhuel@softathome.com>
Date:   Mon Nov 23 17:24:36 2020 +0100

    cmake: do not link libevent with libevent_core
    
    When add_event_library macro was called without the INNER_LIBRARIES parameter, it reused the
    value set by a previous call, since the INNER_LIBRARIES variable was not reset.

commit 59e31c9667075ae960d59e0f78d8d9c6eb01765f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 5 00:57:39 2020 +0300

    Do not try to do SSL handshake if the connect() fails
    
    This will avoid this icky error:
    
        $ https-client -4 -url https://127.1
        some request failed - no idea which one though!
        error:00000005:lib(0):func(0):DH lib
    
    And instead will report only:
    
        $ https-client -4 -url https://127.1
        some request failed - no idea which one though!
        socket error = Connection refused (111)
    
    Refs: #1115

commit 4f8a6320caa651a1e73ffae8c6dd933e705d68c7
Merge: 8d21ddcf 29b1404b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 2 10:01:41 2020 +0300

    Merge branch 'macos-brew-openssl-v2'
    
    By Azat Khuzhin (2) and fanquake (1)
    * macos-brew-openssl-v2:
      Add autodetection of openssl via brew into build matrix
      cmake: find openssl prefix via brew
      autotools: attempt to find OpenSSL via homebrew on macOS
    
    Closes: #1050 (cherry picked one patch from it)

commit 29b1404ba215974692abb5dcac757b65a095699f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 2 00:39:26 2020 +0300

    Add autodetection of openssl via brew into build matrix

commit 1a242e1c96be986570f4dcca29982612879de564
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 1 01:39:02 2020 +0300

    cmake: find openssl prefix via brew

commit 72d877a2c226f31b8177617a845bf471b34017ba
Author: fanquake <fanquake@gmail.com>
Date:   Tue Jul 7 14:58:29 2020 +0800

    autotools: attempt to find OpenSSL via homebrew on macOS
    
    When compiling for macOS, where users will likely have OpenSSL installed
    via brew, rather than available on the system, use brew  --prefix to
    figure out where OpenSSL is, and then augment the pkg-config path so
    that libs are found.

commit 8d21ddcf4b5d804565f686ab6577b933a993054f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 1 00:59:16 2020 +0300

    Fix bufferevent_ssl_*flags() w/ disabled OpenSSL but enabled mbedTLS

commit 8daa1aba3d1875030048c917cdc308a4ff222c4e
Merge: 587f6c83 a490172d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 31 23:04:55 2020 +0300

    Merge branch 'ssl-nagle'
    
    * ssl-nagle:
      Introduce new BUFFEREVENT_SSL_BATCH_WRITE flag to avoid Nagle effect in SSL
      Introduce new API for flags of the SSL bufferevent

commit a490172d6938943ce5af81e147a64b3f14870144
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 31 22:53:31 2020 +0300

    Introduce new BUFFEREVENT_SSL_BATCH_WRITE flag to avoid Nagle effect in SSL

commit 7e0fc878c5646f45273f38dbf5b8d325a20c81df
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 31 21:45:22 2020 +0300

    Introduce new API for flags of the SSL bufferevent
    
    Introduce more generic API (like for evbuffer):
    - bufferevent_ssl_set_flags()
    - bufferevent_ssl_clear_flags()
    - bufferevent_ssl_get_flags()
    
    And deprecate existing:
    - bufferevent_openssl_get_allow_dirty_shutdown()
    - bufferevent_openssl_set_allow_dirty_shutdown()
    - bufferevent_mbedtls_get_allow_dirty_shutdown()
    - bufferevent_mbedtls_set_allow_dirty_shutdown()

commit 587f6c83a3557c048fce6e541e7fc534082b0e85
Merge: afa66ea4 2484500a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 31 22:50:11 2020 +0300

    Merge branch 'ssl-fixes-after-mbedtls'
    
    * ssl-fixes-after-mbedtls:
      Fix BEV_IS_SSL() macro
      Fix preprocessor condition for BEV_IS_SSL()
      Remove reduntant BEV_IS_MBEDTLS
    
    Refs: #1028

commit 2484500ac285501fa32defa747f6c79e3190126f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 31 22:48:37 2020 +0300

    Fix BEV_IS_SSL() macro
    
    We cannot use the same trick with external declaration,
    since there are copy of bufferevent_ops_ssl in each library:
    - openssl
    - mbedlts
    
    However we can just compare the name of the bufferevent type for now.
    (It is totally fine to use memcmp() here since it will be optimized by the compiler).

commit db6e22c7db5f69bd34e1f2a247c7db7700f16cca
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 31 22:41:16 2020 +0300

    Fix preprocessor condition for BEV_IS_SSL()

commit 39ca97ef4d6364f5a63baafca30ac337cb0fdc0d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 31 22:27:18 2020 +0300

    Remove reduntant BEV_IS_MBEDTLS

commit afa66ea4200a018bfc59abef8c2ffa11ef2b8363
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 4 00:56:20 2019 +0300

    http: eliminate redundant bev fd manipulating and caching [WIP]
    
    At the very beginning we reset the bufferevent fd (if bev has it), which
    is not a good idea, since if user passes bufferevent with existing fd he
    has some intention.
    
    So we need to:
    - use BEV_OPT_CLOSE_ON_FREE for default bufferevent_socket_new() (to
      avoid manual shutdown/closee)
    - drop getsockopt(SOL_SOCKET, SO_ERROR), since bufferevent already has
      evutil_socket_finished_connecting_()
    - drop supperior bufferevent_setfd(bev, -1) in
      evhttp_connection_connect_()
    
    Closes: #795
    Refs: #875

commit 67180f8c37147dd8996c414ff0ce3233ebfaee8c
Merge: 22872176 e91c4363
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Oct 27 02:15:38 2020 +0300

    Merge branch 'ipv6-tiny-improvements'
    
    * ipv6-tiny-improvements:
      http: add EVHTTP_URI_HOST_STRIP_BRACKETS
      http-server: add -H option to change listen address
      https-client: add newline into error messages
      https-client: add -4/-6 switches

commit e91c4363889cee1de57a8ffa38c24a8127b37c78
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Oct 27 01:40:34 2020 +0300

    http: add EVHTTP_URI_HOST_STRIP_BRACKETS
    
    Refs: #1115

commit eb822ac751dd2559b9ea3a04ec4978fe2733f6ce
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Oct 27 01:22:59 2020 +0300

    http-server: add -H option to change listen address

commit 6135248a0cf4610ce4dbcbc1f7f4c1d53c3e170c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Oct 27 01:19:40 2020 +0300

    https-client: add newline into error messages

commit f51ec253069b1e301398d4b118ffce917498af06
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Oct 27 01:17:44 2020 +0300

    https-client: add -4/-6 switches

commit 22872176a48b118cde2f8fea762f4368f833b9bc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Oct 15 23:23:15 2020 +0300

    becat: add timeout (client/server) and verbosity (event_enable_debug_logging())

commit 6c644949d5db719f3d9986f574b6dcf7bf8264dc
Author: guoxiang1996 <mzygdeaq@qq.com>
Date:   Sun Oct 11 03:23:14 2020 +0800

    Change log message in evutil_make_socket_nonblocking in win32
    
    Co-authored-by: guoxiang2 <guoxiang2@yy.com>

commit 19d0bdfe0c89381ce0bc28c61a9f960a4f568009
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 4 22:56:30 2020 +0300

    Change prefix for man pages from "le_" to "libevent_"
    
    As pointed by @kloczek:
      "With only two characters it would be harder to guess under what kind of name are libevent lvl 3 man pages.
       Longer name with bash/fix/zsh tab competition should not be a problem :)"
    
    Refs: #1099

commit 21b91692dadd9940a95153a27d7c88a82ea3df62
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 4 19:55:52 2020 +0300

    Add prefix (le_) for man pages
    
    This will:
    - avoid overlapping (since there is util.h.3 page)
    - group everything under some prefix (man le_<TAB><TAB> will show everything)
    
    Fixes: #1099

commit 3012c43808fcb0d6c819d122e617f8e217fcd375
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 4 19:48:34 2020 +0300

    Drop DOXYGEN_MAN_LINKS unsupported cmake flag
    
    MAN_LINKS is not a variable in Doxyfile anyway.

commit 852af060af7c7e439f0db97829ec74bedeba64d5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 4 17:44:34 2020 +0300

    http-server: add cli argument for max body size

commit 56e121310954cbee2310c5eb2a3000115186563d
Author: Nikita Gorskikh <ngorskikh@adguard.com>
Date:   Fri Sep 18 16:34:34 2020 +0300

    Remove dead code from bufferevent_socket_connect

commit 9b270c5e02e47d372ad53e773f98668890b33e9f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 16 08:10:11 2020 +0300

    Generate only real man pages with doxygen (MAN_LINKS=NO)
    
    WIth MAN_LINKS=YES doxygen will generate ton's of man pages for each
    field, function and so on, but it will not contain anything useful
    except for link to another man page (header).
    
    So to avoid man pages clashing, disable MAN_LINKS, and this will
    generate man pages only for explicitly documented parts.
    
    But even after this we have pretty non-unique man pages names:
    
        $ find install/ -name '*.3'
        install/share/man/man3/util.h.3
        ...
    
    Looks like we should add prefix for each of them...
    But let's see if there will be a problem.
    
    Fixes: #1097

commit 31a5cfd3b1cd0ca3f7a2871ecd21a8a5b8f7677c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 16 08:25:20 2020 +0300

    Remove man pages from repo (they can be generated via doxygen)
    
    The problem with this man pages are:
    - they are likely outdated
    - they don't have install target
    - and besides quality of man pages generated by doxygen not worse

commit b45a02efab20581e4ddbd3108b110f21a636aa4d
Author: okhowang(王沛文) <okhowang@tencent.com>
Date:   Wed Sep 16 11:31:33 2020 +0800

    sample: add https-client-mbedtls

commit 53c6867520ccf4712f569ee2686a1a5b04fd7c8d
Author: okhowang(王沛文) <okhowang@tencent.com>
Date:   Tue Sep 15 18:15:24 2020 +0800

    test: fix windows error when mbedtls https

commit 6752070909560bc965d93251c0dfa417a87dc500
Merge: a7d3cd40 2403ae57
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Sep 14 21:37:50 2020 +0300

    Merge #1087 - tests for https with mbedtls
    
    * upstream/pr/1087:
      test: add https with mbedtls
      bufferevent_openssl: fix -Wcast-function-type for SSL_pending

commit a7d3cd403f29addecb35d2c0af23378c3ece2b46
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Sep 14 21:30:02 2020 +0300

    Add build w/o any SSL support (i.e. w/o openssl and mbedtls)
    
    This pure build w/o SSL has been removed in mbedtls PR - #1028

commit 2403ae578fb54c8d52f9e5adbc8e0e1ebdbd0c15
Author: okhowang(王沛文) <okhowang@tencent.com>
Date:   Sun Sep 6 15:33:32 2020 +0800

    test: add https with mbedtls

commit f07898e3bc1d12fb91bb553916b27b78eb86d96a
Author: okhowang(王沛文) <okhowang@tencent.com>
Date:   Sat Jul 25 17:17:46 2020 +0800

    bufferevent_openssl: fix -Wcast-function-type for SSL_pending
    
    Introduced-in: #1028

commit a18301a2bb160ff7c3ffaf5b7653c39ffe27b385
Author: Leon M. George <leon@georgemail.eu>
Date:   Tue Sep 8 15:38:16 2020 +0200

    http: const out address param to evcon_get_peer

commit 02428d9a2d89ee0a595166909dd6d75b5beb777b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Sep 1 01:08:16 2020 +0300

    build: fix building under windows with thread support
    
    Fixes: 972289f3 ("Detect existence of pthread_mutexattr_setprotocol()")

commit c2a9ecffefc5c547cadddbff90e2a574be58168e
Author: Berbe <4251220+Berbe@users.noreply.github.com>
Date:   Sat Aug 29 18:41:39 2020 +0200

    Fix: long -> enum evhttp_cmd_type type

commit 2338f27e694f74931022e3310f629504f7ebbe8e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Aug 29 01:15:20 2020 +0300

    test/regress_dns: fix -Wmaybe-uninitialized
    
    Was not noticed since it is reported only with optimization enabled, as
    stated in gcc(1):
    
       The effectiveness of some warnings depends on optimizations also
       being enabled. For example -Wsuggest-final-types is more effective with
       link-time optimization and -Wmaybe-uninitialized does not warn at all
       unless optimization is enabled.
    
    And interesting thing is that it is reported only for -O2, not for -O3,
    that's why I did not catched it in both cmake env that I had:
    - debug (it has -O0)
    - release (it has -O3)
    
    While autoconf has -O2.

commit 972289f356102d22a23aac4a93fe42de845dd917
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Aug 29 01:15:20 2020 +0300

    Detect existence of pthread_mutexattr_setprotocol()
    
    Fixes: #1084

commit e3e7bb212ea17aa8a9d5a30163487342e6ebb350
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 11 02:12:23 2020 +0300

    build: add doxygen to all
    
    Fixes: 7e6c5fb4 ("build: do not try install doxygen man pages if they were not requested")
    Fixes: #1075
    Fixes: #886

commit 7e6c5fb46ae9d0f135cdcdb4f8d0376cf25320fd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Aug 6 10:24:55 2020 +0300

    build: do not try install doxygen man pages if they were not requested
    
    Fixes: #1075

commit 4cf0d712e385570553738fc6353fbd6e181140ea
Merge: eb7bed03 cf2ac1af
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Aug 6 10:12:07 2020 +0300

    Merge #1074
    
    yuangongji:
      "Fix CI failures #1071
      - Install vcpkg through the source code to temporarily solve the windows CI problem.
      - Update cache version and replace setup-msys2."
    
    * upstream/pr/1074:
      fix CI:Update cache version and replace setup-msys2
      fix CI: Install vcpkg through the source code to temporarily solve the windows CI problem

commit cf2ac1af085456f12fe9d970539d702cf13886eb
Author: yuangongji <yuangongji@foxmail.com>
Date:   Wed Aug 5 12:12:08 2020 +0800

    fix CI:Update cache version and replace setup-msys2

commit 92b9109ef8a48793af38bbea3aa2f30e2f4ab54e
Author: yuangongji <yuangongji@foxmail.com>
Date:   Wed Aug 5 10:14:53 2020 +0800

    fix CI: Install vcpkg through the source code to temporarily solve the windows CI problem

commit eb7bed03c4ba38838b48064fa870334d1bfd517c
Author: Gerry Garvey <ggarvey@gmx.com>
Date:   Sat Aug 1 16:10:48 2020 +0100

    Convert from WinCrypt to Windows BCrypt
    
    Fixes: #1069

commit efa57159ddee3f0fbd0261cb7a6a6a16765fa919
Author: Gerry Garvey <ggarvey@gmx.com>
Date:   Sat Aug 1 14:05:39 2020 +0100

    Handle return value from getrandom()

commit 62c152d9a7cd264b993dad730c4163c6ede2e0a3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jul 28 11:03:46 2020 +0300

    Remove reduntant variables in workflows with deploy
    
    Fixes: bfbbc882 ("Change user.name/user.email to robot for deploy via github actions")

commit bfbbc882969a173459ac45f423b4fc1eebf0ac96
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jul 28 11:02:15 2020 +0300

    Change user.name/user.email to robot for deploy via github actions

commit eeeed1e1bbc5ffd38c53a31899e7da77ea96b7bb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jul 28 01:19:28 2020 +0300

    test/dns: fix initialize_nameservers when there is ipv6 in /etc/resolv.conf
    
    Fixes: #1060

commit 65199178c6ee124a695a14983879921cb073c2df
Author: Pierce Lopez <pierce.lopez@gmail.com>
Date:   Sat Jul 25 21:17:21 2020 -0400

    windows socketpair tmpfile: use random prefix
    
    fixes #1058
    
    GetTempFileNameA() takes an optional prefix, and a "unique" long value
    which can optionally be zero, which causes it to automatically
    increment until a not-yet-existing filename is found.
    
    When libevent creates many AF_UNIX socketpairs on windows,
    it slows down dramatically, due to always using the same blank prefix,
    and GetTempFileNameA() needing to iterate through all the existing
    socketpair filenames. With a present and varying prefix, it will have
    much less need to iterate.
    
    It was also possible for a race with other processes also using
    blank-prefix tmpfile names to result in both trying to start using
    the same name at the same time (because libevent deletes the file
    and then re-creates it as a unix socket), which should now be
    much less likely.
    
    Unfortuantely, "much" is just a factor of 32k, because the prefix
    is only 3 characters, and windows filesystems are case-insensitive,
    so doing better would require more sophisticated windows API usage
    and charset trickyness.

commit 85c6759926b02094920f598d050aa72eb8dc2369
Author: okhowang(王沛文) <okhowang@tencent.com>
Date:   Fri Jul 24 17:19:14 2020 +0800

    fix: compat mbedtls < 2.4

commit 948ad3043590a36db6c8299bf0fb00ac3e1235ef
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jul 23 23:38:53 2020 +0300

    Fix bufferevent_get_{openssl,mbedtls}_error()
    
    The bufferevent_get_openssl_error() returns unsigned long, so returning
    -1 on error in unclear. Let's use 0.
    
    Fixes: #1028

commit 50dac7adedd276220ec0f3f0b0b986bae7ba2c80
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jul 23 02:01:02 2020 +0300

    ci/doxygen: install missing libmbedtls-dev

commit 8ec46826233d964829f25012335f3f71e0466d6f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jul 23 01:08:22 2020 +0300

    ci/coverage: add missing libmbedtls-dev

commit e458696c1e336fb5a3f5fe97282613e949f90fdb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jul 23 00:28:09 2020 +0300

    le-proxy: ignore SIGPIPE
    
    Fixes: #1057

commit 53e53b018bd6ac967b516372aac38befd6d7a3b7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jul 23 00:22:45 2020 +0300

    test/regress_buffer.c: fix -Wbad-function-cast (in some specific env)
    
    Fixes: #1054

commit 0e339b04b5f224926cc32870523e7d71773ddd25
Merge: 79dc8789 1bfbbdf2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jul 23 00:14:34 2020 +0300

    Merge branch 'mbedtls'
    
    This patch set provides mbed TLS support.
    
    The interface part (include/event2/bufferevent_ssl.h) LGTM, so this can
    be safely merged (although there are some bits left).
    
    Includes:
    - bufferevent_mbedtls_*
    - regress_mbedtls tests
    
    Left:
    - regress_http https_mbedtls support
    - ChangeLog entry
    
    * mbedtls:
      test: rename ssl/* -> openssl/*
      Join le_ssl_ops.post_init with le_ssl_ops.init
      Update LICENSE for ssl-client-mbedtls.c
      Merge ssl implementations (openssl and mbedtls)
      add mbedtls to CI
      fix build system and add test and cleanup code
      mbed TLS cmake support
      simple https client example using mbedtls
      mbedtls based SSL implementation

commit 1bfbbdf2b4361e9e84b82125539c00ae21b0bfdf
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jul 22 23:10:17 2020 +0300

    test: rename ssl/* -> openssl/*

commit 5671575a1c2a8dba719a33464673b2a75d3877ea
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jul 22 23:08:50 2020 +0300

    Join le_ssl_ops.post_init with le_ssl_ops.init

commit e1cdf1a182ca2cd3b8e1b9b78d2cc133cb489476
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jul 22 23:02:31 2020 +0300

    Update LICENSE for ssl-client-mbedtls.c

commit d095b834a9cc6df5aad8ec49bfc945c06b35af4d
Author: okhowang(王沛文) <okhowang@tencent.com>
Date:   Tue Jul 7 17:26:46 2020 +0800

    Merge ssl implementations (openssl and mbedtls)
    
    This patch splits common part out to avoid copy-paste from the
    - bufferevent_openssl.c
    - bufferevent_mbedtls.c
    
    It uses VFS/bufferevent-like approach, i.e. structure of callbacks.

commit dad699cc044748b0706049aa86df305f63cb0d1a
Author: okhowang(王沛文) <okhowang@tencent.com>
Date:   Wed May 27 15:29:42 2020 +0800

    add mbedtls to CI

commit 028385f685585b4b247bdd4acae3cd12de2b4da4
Author: okhowang(王沛文) <okhowang@tencent.com>
Date:   Thu May 28 17:14:46 2020 +0800

    fix build system and add test and cleanup code

commit 8218777d44ab30c8a5e2d5d637a62f924c83b65c
Author: Jesse Fang <boycht@gmail.com>
Date:   Tue Jan 14 12:18:27 2020 +0800

    mbed TLS cmake support
    
    FindMbedTLS.cmake is come from https://github.com/AVSystem/avs_commons/blob/master/cmake/FindMbedTLS.cmake, which is licensed under Apache 2.0
    
    alternatives:
      https://github.com/curl/curl/blob/master/CMake/FindMbedTLS.cmake   without variable MBEDTLS_ROOT_DIR
      https://github.com/libgit2/libgit2/blob/master/cmake/Modules/FindmbedTLS.cmake  GPLv2 with a special Linking Exception

commit 7680409aa1b7512ef21d926c4c862c06582a6af3
Author: Jesse Fang <boycht@gmail.com>
Date:   Mon Jan 13 23:08:26 2020 +0800

    simple https client example using mbedtls
    
    Based on mbedtls's source code programs/ssl/ssl_client1.c

commit b28effa95082e468340cc13d274d3a2ea205c174
Author: Jesse Fang <boycht@gmail.com>
Date:   Mon Jan 13 23:04:29 2020 +0800

    mbedtls based SSL implementation
    
    prototype is libevent-2.1.11-stable libevent_openssl.c

commit 79dc8789f5a679391639fe9995a47f2bcd997e07
Author: fanquake <fanquake@gmail.com>
Date:   Mon Jul 20 21:59:10 2020 +0800

    doc: fix typo in thread.h
    
    s/evthred_use_pthreads_with_flags/evthread_use_pthreads_with_flags/

commit 883587a9bff465176df39302526d8ae54b9d3cee
Merge: e9a6b127 97a899d9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jul 10 22:18:59 2020 +0300

    Merge #1048 -- append warning flags only if they are available (autotools)
    
    * upstream/pr/1048:
      build: remove -Wstrict-aliasing as strict-aliasing is disabled
      build: move automake options into AM_INIT_AUTOMAKE call
      build: remove commented code from configure.ac
      build: use feature detection when adding compile flags
      build: add ax_check_compile_flag macro

commit 97a899d9b47f88ba50bcc14ec9f3b00e081c6475
Author: fanquake <fanquake@gmail.com>
Date:   Tue Jul 7 13:58:47 2020 +0800

    build: remove -Wstrict-aliasing as strict-aliasing is disabled
    
    Note that -Wstrict-aliasing is also include in -Wall.

commit 28e3105072cc9b327d31fcb08f8b16f886ce6ac9
Author: fanquake <fanquake@gmail.com>
Date:   Fri Jul 3 16:02:09 2020 +0800

    build: move automake options into AM_INIT_AUTOMAKE call

commit 0a537b25dd2d8479ad3ad170738064e18003ee55
Author: fanquake <fanquake@gmail.com>
Date:   Fri Jul 3 15:47:10 2020 +0800

    build: remove commented code from configure.ac

commit 0ea7f70744e5f18cb58b0d1f52251949757469e0
Author: fanquake <fanquake@gmail.com>
Date:   Fri Jun 26 14:33:43 2020 +0800

    build: use feature detection when adding compile flags
    
    Rather than trying to detect (potentially very old) GCC versions, just
    test whether the flag works with the compiler, and add it to CLFAGS if
    so.
    
    -Werror is used to convert unknown flag warnings into errors, and
    prevent their addition to CLFAGS.

commit ffb09b16ab908ce7f2b0a9a07c9988df3ed4f2ef
Author: fanquake <fanquake@gmail.com>
Date:   Fri Jun 26 14:04:26 2020 +0800

    build: add ax_check_compile_flag macro

commit e9a6b127696f75097dea01d197735596335865bb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 5 13:55:53 2020 +0300

    ci/linux: create dist artifact only if dist archive was built
    
    Fixes: 512c88ce ("ci/linux: add dist check")

commit f6bfa8b3e35432992d9b580617c946dbbfa38bb3
Merge: 90bcf2d6 4edfe6ad
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 5 13:16:52 2020 +0300

    Merge branch 'fix-signal-leak'
    
    Fixes main/fork under ASAN (LSAN if to be precise)
    
    * fix-signal-leak:
      select: requires reinit (otherwise it leaks signal handlers)
      poll: requires reinit (otherwise it leaks signal handlers)

commit 4edfe6ad174c7c81a6811f763bf56da6c2069fa6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 5 13:16:03 2020 +0300

    select: requires reinit (otherwise it leaks signal handlers)
    
    Fixes: main/fork under SELECT with ASAN

commit c51c09b8ee35a713332ae54358e7d31cd3d085cf
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 5 13:14:36 2020 +0300

    poll: requires reinit (otherwise it leaks signal handlers)
    
    Fixes: main/fork under POLL with ASAN

commit 90bcf2d660b9b43cb8e747421d4938f08f935bd7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 5 11:59:32 2020 +0300

    test: fix leak in dns/getaddrinfo_cancel_stress
    
    Some requests may get response (evutil_addrinfo) from gaic_server_cb,
    in case of cancel_event (10000ms) will not be fast enough.

commit ba19b356bf8a9be2a5bddfa264dee61ffc9573a7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 5 11:45:56 2020 +0300

    test: fix UB in evbuffer/empty_reference_prepend_buffer
    
    UBSAN reports:
      test/regress_buffer.c:2360:2: runtime error: null pointer passed as argument 1, which is declared to never be null
      /usr/include/string.h:140:33: note: nonnull attribute specified here

commit 9da1743b41a6a1378f52e4127e162dcb44de87d7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 5 11:21:04 2020 +0300

    ci: set build type to debug with sanitizers

commit 7b9ba3b717af109abdf3fb5fc99c288dc8024ef5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 5 11:14:18 2020 +0300

    test: really disable bufferevent_pair_release_lock under ASAN (and fix gcc)

commit e2f938c04f9a72f6fd6ca9b7a8219ca9cb409d69
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 5 11:08:05 2020 +0300

    test-closed: fix leak

commit b6497fa148ed78fcd4a8847891c80cfb9ed17c42
Author: Pierce Lopez <pierce.lopez@gmail.com>
Date:   Sat Jul 4 15:55:22 2020 -0400

    build: do not disable deprecation warnings on macOS
    
    this was for using openssl-0.9.8 included in macOS 10.7 - 10.12,
    but it is long since time you really should not use that openssl

commit 9ca7a492f5680dbbc14634f0979e6f1d5a4533fa
Merge: 1cea01d6 e05ee6d3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jul 3 09:27:20 2020 +0300

    Merge #1046 -- build: misc configure changes
    
    * upstream/pr/1046:
      build: consolidate darwin compile flag additions in configure
      build: consistently use dnl for comments in configure.ac

commit 1cea01d6d5c84337dac663e5464059ccd2d6a8dd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jun 28 17:10:03 2020 +0300

    Add abi-check report into artifacts

commit e05ee6d3b533d62717e1d0be8a98e83ec5f4fe40
Author: fanquake <fanquake@gmail.com>
Date:   Sun Jun 28 18:40:26 2020 +0800

    build: consolidate darwin compile flag additions in configure
    
    This is mostly move-only, apart from some changes to comments.

commit 8ac10b6bf7f67444d6867889e4eabf1defb457fa
Author: fanquake <fanquake@gmail.com>
Date:   Sun Jun 28 18:30:54 2020 +0800

    build: consistently use dnl for comments in configure.ac

commit 0ac3cfc0b70edc2cfb429712d6aaf1b3a63d2d1a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jun 26 10:35:44 2020 +0300

    test: add getaddrinfo(AI_ADDRCONFIG) test (off by default)

commit ff4ec5fdb02d22c131e63b5a98e453da975a3cb1
Author: fanquake <fanquake@gmail.com>
Date:   Fri Jun 26 14:35:41 2020 +0800

    build: remove duplicate -Wredundant-decls

commit d5aa783bb282e856478037fe38dd3b8c18f12932
Merge: 46c9ead0 ec94a6bb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jun 25 23:16:16 2020 +0300

    Merge branch 'tests-under-sanitizers'
    
    * tests-under-sanitizers:
      test: fix memory leaks for https (add BEV_OPT_CLOSE_ON_FREE)
      test: "fix" (with a quirk) leak in ssl/bufferevent_wm (w/o defer callbacks)
      test: disable bufferevent/bufferevent_pair_release_lock under ASAN (too tricky)
      test: detect test failures if atexit handler calls _exit(!0) (sanitizers)
      Add LSAN suppressions (for OpenSSL temporary quirk)
      Add TSAN suppressions
      ci: run tests under sanitizers
    
    Fixes: #955

commit ec94a6bb3f9d950101d07b2a2e092b675d5aa3f0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jun 25 21:56:31 2020 +0300

    test: fix memory leaks for https (add BEV_OPT_CLOSE_ON_FREE)
    
    - http/https_filter_basic
    - http/https_filter_chunk_out

commit cdbb2373f4d13f7a5eb69daaf0a172779ccc0040
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jun 25 21:40:40 2020 +0300

    test: "fix" (with a quirk) leak in ssl/bufferevent_wm (w/o defer callbacks)

commit 3b13a64789b3942608f04c31455668bebe224a40
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jun 25 21:25:51 2020 +0300

    test: disable bufferevent/bufferevent_pair_release_lock under ASAN (too tricky)
    
    And cannot be suppressed with suppressions due to setup routines.

commit 6754740f15e8200a12605a2e707fc6d3e6754d6a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jun 25 21:01:53 2020 +0300

    test: detect test failures if atexit handler calls _exit(!0) (sanitizers)
    
    tinytest uses another way of detecting test failures, it uses pipe
    between child and parent, and if the test function in child returns OK
    it writes OK flag into pipe, and reads it in parent.
    
    However sanitizers uses atexit handlers to detect leaks, and this will
    not detect failures in case of exit() will be called from the atexit
    handlers, fix this by checking status after waitpid().

commit 3fec471c3265e8c524d27293b0d96e76160c5b39
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jun 25 21:34:02 2020 +0300

    Add LSAN suppressions (for OpenSSL temporary quirk)

commit b90b19250a465ed8ebcbded0264fb6fb3579ee0e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jun 25 21:01:53 2020 +0300

    Add TSAN suppressions

commit 0db4e1c46c4babff49101a699cecce7e24b98049
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jun 25 21:01:53 2020 +0300

    ci: run tests under sanitizers
    
    Added:
    - ASAN
    - TSAN
    - UBSAN
    
    And disable some tests that are know to have leaks.

commit 46c9ead0ebbbb23c8f719c11c473dfec37c84fda
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Thu Jun 25 08:08:10 2020 -0700

    Make all classes Entry, Struct, etc) new-style classes
    
    This allows the object methods to be properly inherited and called via
    `super(..)`, addressing breakage with python 2.x, introduced in
    cfcc093606e747a5d250787012bac0b149c60d6d.
    
    Fixes #1042.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit c424594b04439e2c29af41c66848b6b208f35310
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jun 25 10:18:43 2020 +0300

    evdns: do not pass NULL to memcpy() in evdns_server_request_format_response()
    
    In case of OPT pseudo-RR `class` field is treated as a requestor's UDP
    payload size, and class will have 512 (DNS_MAX_UDP_SIZE), and data is
    NULL:
    
      (gdb) p *item
      $4 = {
        next = 0x0,
        name = 0x602000000130 "",
        type = 41,
        class = 512,
        ttl = 0,
        is_name = 0 '\000',
        datalen = 0,
        data = 0x0
      }
    
    And UBSAN will reports:
    
      ../evdns.c:2493:5: runtime error: null pointer passed as argument 2, which is declared to never be null
          #0 0x7ffff70b65bb in evdns_server_request_format_response ../evdns.c:2493
          #1 0x7ffff70b706b in evdns_server_request_respond ../evdns.c:2529
          #2 0x5555557975ab in regress_dns_server_cb ../test/regress_testutils.c:263
          #3 0x7ffff70a8489 in request_parse ../evdns.c:1576
          #4 0x7ffff70aa445 in server_udp_port_read ../evdns.c:1726
          #5 0x7ffff70ac5cc in server_port_ready_callback ../evdns.c:1849
          #6 0x7ffff6d3054c in event_persist_closure ../event.c:1645
          #7 0x7ffff6d311cd in event_process_active_single_queue ../event.c:1704
          #8 0x7ffff6d33258 in event_process_active ../event.c:1805
          #9 0x7ffff6d361b5 in event_base_loop ../event.c:2047
          #10 0x7ffff6d334ac in event_base_dispatch ../event.c:1839
          #11 0x555555739df2 in test_edns ../test/regress_dns.c:2639
          #12 0x5555557b9e96 in testcase_run_bare_ ../test/tinytest.c:173
          #13 0x5555557ba8f0 in testcase_run_one ../test/tinytest.c:333
          #14 0x5555557bc9a0 in tinytest_main ../test/tinytest.c:527
          #15 0x555555787faa in main ../test/regress_main.c:528
          #16 0x7ffff606c001 in __libc_start_main (/usr/lib/libc.so.6+0x27001)
          #17 0x55555569436d in _start (/src/le/libevent/.cmake-debug/bin/regress+0x14036d)

commit a0c642ac04487d8cda809bd6e233b0fbd043806d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jun 25 10:15:01 2020 +0300

    buffer: do not pass NULL to memcpy() from evbuffer_pullup()
    
    UBSAN reports:
    
      evbuffer/remove_buffer_with_empty3: ../buffer.c:1443:3: runtime error: null pointer passed as argument 2, which is declared to never be null
          #0 0x7ffff6cd0410 in evbuffer_pullup ../buffer.c:1443
          #1 0x5555556d68b9 in test_evbuffer_remove_buffer_with_empty3 ../test/regress_buffer.c:408
          #2 0x5555557b95ee in testcase_run_bare_ ../test/tinytest.c:173
          #3 0x5555557ba048 in testcase_run_one ../test/tinytest.c:333
          #4 0x5555557bc0f8 in tinytest_main ../test/tinytest.c:527
          #5 0x555555787702 in main ../test/regress_main.c:528
          #6 0x7ffff606c001 in __libc_start_main (/usr/lib/libc.so.6+0x27001)
          #7 0x55555569436d in _start (/src/le/libevent/.cmake-debug/bin/regress+0x14036d)

commit 6f152befb4523fd2e57c1a937e590f8ff87b7f15
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jun 25 09:59:35 2020 +0300

    test: do not pass NULL to memcmp() in evbuffer_datacmp() helper
    
    Fixes:
      runtime error: null pointer passed as argument 2, which is declared to never be null

commit 37dbb3508099d49748453166c1ee9ef1603fcf3a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jun 25 08:45:34 2020 +0300

    http: fix undefined-shift in EVUTIL_IS*_ helpers
    
    evutil.c:2559:1: runtime error: left shift of 1 by 31 places cannot be represented in type 'int'
        #0 0x4f2be0 in EVUTIL_ISXDIGIT_ libevent/evutil.c:2559:1
        #1 0x4bd689 in regname_ok libevent/http.c:4838:7
        #2 0x4bc16b in parse_authority libevent/http.c:4958:9
        #3 0x4bb8b5 in evhttp_uri_parse_with_flags libevent/http.c:5103:7
        #4 0x4bb762 in evhttp_uri_parse libevent/http.c:5050:9
        #5 0x4b8f41 in evhttp_parse_query_impl libevent/http.c:3505:9
        #6 0x4b8ed7 in evhttp_parse_query libevent/http.c:3569:9
    
    Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=23291
    Report: https://oss-fuzz.com/testcase-detail/5670743106125824

commit 4528d8e98781be794cbce13394f8442dd466684b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jun 25 09:08:31 2020 +0300

    Check error code of evhttp_add_header_internal() in evhttp_parse_query_impl()

commit 45c3fc29fb2240dbaa066c971f3fd59861293305
Author: fanquake <fanquake@gmail.com>
Date:   Mon Jun 22 19:40:06 2020 +0800

    wepoll: use lower-cased windows headers
    
    This matches their use throughout the rest of the project, and fixes the
    build when you are cross-compiling on Linux using mingw-w64. i.e:
    
      CC       epoll.lo
      CC       wepoll.lo
      CC       signal.lo
    wepoll.c:138:10: fatal error: WS2tcpip.h: No such file or directory
     #include <WS2tcpip.h>
              ^~~~~~~~~~~~
    compilation terminated.
    make[2]: *** [Makefile:1918: wepoll.lo] Error 1

commit 26d5ff457c9e6cf9b84ec9d8fb83d87caf083d96
Author: Paul Osborne <paul.osborne@smartthings.com>
Date:   Thu Jun 18 15:47:14 2020 +0000

    cmake: avoid problems from use of CMAKE_USE_PTHREADS_INIT
    
    In some CMake integrations, portions of the toolchain may end up
    defining CMAKE_USE_PTHREADS_INIT even when EVENT__DISABLE_THREAD_SUPPORT
    is set for libevent.  Modify the build to not rely on this side effect
    of find_package(Threads, ...) [which could be done elsewhere] but instead
    to use EVENT__HAVE_PTHREADS which is defined only on the desired codepath.
    
    Without this change, affected builds fail as a result of event_pthreads source
    files being built but with build defines which cause the build to fail.
    
    Signed-off-by: Paul Osborne <paul.osborne@smartthings.com>

commit efbe563b4e247c6a39c0373f066bad3ec585d936
Author: okhowang(王沛文) <okhowang@tencent.com>
Date:   Thu May 28 17:32:05 2020 +0800

    recreate socket when udp failed

commit 2aaa7358a11319c5f6c3211b7408a66b3faded8e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jun 2 10:12:20 2020 +0300

    test/regress_http: remove second ARRAY_SIZE macros

commit 8b5a4d61f6eb7180c0800f38549c20776c6d1cd9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jun 2 10:01:31 2020 +0300

    test/regress_testutils: use inet_addr()

commit 271c5aaa8135b1ca38669095812612f1814c2c4f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jun 2 10:00:38 2020 +0300

    test/regress_dns: use tt_int_op() over tt_assert() in assert_request_results()

commit 83c58d49859f79c4eb23dd2461a2fa1f32d18117
Author: seleznevae <seleznevae@protonmail.com>
Date:   Sun May 31 19:59:49 2020 +0300

    evdns: Add support for setting maximum UDP DNS message size.
    
    Added new option `edns-udp-size` for evdns_base which allows
    to control maximum allowed size of UDP DNS messages. This
    maximum size is passed to the DNS server via edns mechanism.

commit c753ae876e2e1e2630ee9fac909027f4e52f0570
Author: yuangongji <yuangongji@foxmail.com>
Date:   Thu May 28 11:50:49 2020 +0800

    CI: catch failures and retry

commit a9aa2b3607c8adf9846aa6a01e070130f4d6dcb9
Author: yuangongji <yuangongji@foxmail.com>
Date:   Wed May 27 15:39:49 2020 +0800

    remove FindGit.cmake, improve `git describe` command

commit 89d313b14dffed7271f41f4e2d68ccfe6b6475ed
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed May 27 20:33:25 2020 +0300

    checkpatch.sh: fix clang-format-diff usage
    
    - strip 1 path component
    - it does not accept file name anymore, only stdin
    
    Refs: #1029

commit 8209a623addf6688243eeb6ebb9ece6a20206437
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed May 27 20:31:29 2020 +0300

    checkpatch.sh: fix usage
    
    Refs: #1029

commit 866fbb54570c74f215208b237ddce48fb79d2cd6
Author: Wataru Ashihara <wataash@wataash.com>
Date:   Thu May 28 00:03:03 2020 +0900

    Fix clang-format-diff usage
    
    "--style" is invalid:
    
    $ ./checkpatch.sh -r HEAD
    usage: clang-format-diff [-h] [-i] [-p NUM] [-regex PATTERN] [-iregex PATTERN]
                             [-sort-includes] [-v] [-style STYLE] [-binary BINARY]
    clang-format-diff: error: unrecognized arguments: --style={ Language:... }

commit 7426a568d009c34fbef9ab607aedab9d05fc29ec
Merge: f10aaea3 95c1c200
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 25 11:25:18 2020 +0300

    http: Merge branch 'http-max_connections-pr-592'
    
    @jcoffland:
    
      "When the max connection limit is enabled and the limit is reached, the
       server will respond immediately with 503 Service Unavailable. This can
       be used to prevent servers from running out of file descriptors. This is
       better than request limiting because clients may make more than one
       request over a single connection. Blocking a request does not
       necessarily close the connection and free up a socket."
    
    * http-max_connections-pr-592:
      test: cover evhttp max connections
      Added evhttp max simultaneous connection limiting

commit 95c1c200c182d96f49930a15ad433a7049e61b06
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 25 03:34:16 2020 +0300

    test: cover evhttp max connections

commit f10aaea37433b60ed3e0b7adcc7b1764c8b0b518
Author: mohuang <mayerui@live.com>
Date:   Mon May 25 10:33:24 2020 +0800

    variable redefinition in win32_dispatch

commit 028842aacb235256daf38e7f7a1c3eebc036fb18
Merge: e8c89510 2c2248ea
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 25 03:13:00 2020 +0300

    Merge branch 'evdns-tcp-pr-1004'
    
    @seleznevae:
    
      "Added support for DNS requests via TCP. By default, requests are done
       via UDP. In case truncated response is received new attempt is done
       via TCP connection. Added 2 new macros DNS_QUERY_USEVC and
       DNS_QUERY_IGNTC to force all requests to be done via TCP and to disable
       switch to TCP in case of truncated responses.
    
       Also added possibility for DNS server to listen and receive requests on
       TCP port. Current implementation of TCP support in DNS server seems
       rather preliminary and maybe changes after discussion and code review.
    
       Fallback to TCP in case of truncated DNS requests is done automatically.
       To imitate the old behaviour macros DNS_QUERY_IGNTC should be used. To
       force all DNS requests to be done via TCP one should use the flag
       DNS_QUERY_USEVC. Names DNS_QUERY_IGNTC, DNS_QUERY_USEVC were chosen to
       imitate similar flags in c-ares and glibc."
    
    Ok, interfaces looks good, merging to avoid stalling it for too long.
    
    * evdns-tcp-pr-1004:
      evdns: fix coding style issues
      evdns: fix trailing whitespaces
      evdns: bufferevent_setcb before bufferevent_free is redundant
      evdns: Implement dns requests via tcp

commit 2c2248eaee8b7dae77bc4b6e783f5e17b73764d1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 25 03:06:43 2020 +0300

    evdns: fix coding style issues

commit 1cab3c0570587ca92fdf845daaf7b7297ede8913
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 25 02:55:38 2020 +0300

    evdns: fix trailing whitespaces

commit 1cf24f04ff94c8864dca7ca61e3ff2c2537c97bb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 25 02:35:55 2020 +0300

    evdns: bufferevent_setcb before bufferevent_free is redundant

commit e8c8951029a0a084dd73b27e6dc3b637a7c914db
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 25 02:06:32 2020 +0300

    test: http/autofree_connection cleanup

commit 0f6ee89a393b61a7aadb5ce8bd38ec55f1ee33bb
Author: ayuseleznev <ayuseleznev@iponweb.net>
Date:   Thu May 21 12:46:20 2020 +0300

    evdns: Implement dns requests via tcp

commit eee26deed38fc7a6b6780b54628b007a2810efcd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 19 11:45:43 2020 +0300

    http: fix EVHTTP_CON_AUTOFREE in case of timeout (and some else)
    
    Refs: #182

commit 083c6d54d50462f8112328e75bf30647b2e1789e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 19 01:02:30 2020 +0300

    http: fix EVHTTP_CON_AUTOFREE in case of connection error
    
    Refs: #182

commit 70f69194eb3b19b5e41b52b17a820e1e91512560
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 19 01:05:50 2020 +0300

    test: cleanup http/autofree_connection

commit 1cc94feab81e7387041edc32be9843f66847072d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 19 00:52:01 2020 +0300

    test: fix http/autofree_connection
    
    Refs: #182

commit 8fe35c7614802fa13d144cceea9b079d5a131891
Author: ayuseleznev <ayuseleznev@iponweb.net>
Date:   Mon May 18 14:10:28 2020 +0300

    evdns: Add additional validation for values of dns options

commit 83ef3216e4a9f1711f260af3889c94cbcbbefacb
Author: Nick Grifka <nigri@microsoft.com>
Date:   Wed Apr 22 19:44:45 2020 -0700

    Add wepoll support to light up the epoll backend on Windows
    
    libevent is lacking a scalable backend on Windows. Let's leverage the wepoll
    library until Windows comes up with an epoll/kqueue compete user mode API.
    
    - All regress tests pass for standard wepoll
    - These 2 tests fail intermittently for changelist wepoll, so disabling
      changelist wepoll for now
         http/cancel_inactive_server
         http/stream_in
    - verify target on Windows runs tests for both wepoll and win32 backends
    - wepoll backend preferred over win32 backend
    - wepoll version 1.5.6
    
    v2: cleaner backend abstraction. Disallow wepoll on MinGW/Cygwin.
    v3: Add wepoll.h to dist
    v4: Make sure wepoll source files are excluded from cygwin/mingw builds
    v5: Keep win32 as default backend on windows.
    v6: Include wepoll in mingw builds. Verified that regress tests pass w/ WEPOLL backend.
    v7: Enable wepoll on mingw when building with cmake
    v8: Add wepoll testrunner for autotools test target

commit 06a11929511bebaaf40c52aaf91de397b1782ba2
Author: Nick Grifka <nigri@microsoft.com>
Date:   Thu May 7 21:14:13 2020 -0700

    test: Fix test_simpleclose for Windows platform
    
    Replace close with evutil_closesocket
    Caught with PR #1006

commit 15917b420d47c9fee6a15331f20f0e9f60cbcd24
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed May 6 03:03:27 2020 +0300

    Include details of the ABI compatibility report

commit 889ad6d6984e9d0e6aacf01ea27b8a76dfc5cd19
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed May 6 02:10:34 2020 +0300

    Add ABI compatibility report deploy
    
    Closes: #887

commit 448a478a98ae7797c1d1a5f1463c02f1b09982f2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed May 6 02:40:49 2020 +0300

    abi-check: abi-monitor 1.10 does not support -make -j8 (1.12 supports though)
    
    An error for 1.10 on ci:
      https://github.com/azat/libevent/runs/647860649?check_suite_focus=true#step:4:219

commit f3e911ed9e0fa5e2f534bbb49b489c1e1908a6c3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed May 6 02:09:51 2020 +0300

    Do not ignore anything in .github
    
    Fixes: 28eb0d91 ("github actions looks good - drop travis/appveyor (#951)")

commit 735c891e71dc7de737dc09cdef26683eea394e66
Author: yuangongji <yuangongji@foxmail.com>
Date:   Wed Sep 4 23:09:13 2019 +0800

    Add API/ABI checker (using LVC)
    
    v2 (by azat):
    - drop package installations
    - use local .abi-check over $HOME/abi-check for build dir
    - drop regex check, simply use default values (too complex otherwise)
    - use sub-shell to avoid cd back
    - add missing quotes
    - make the style uniq across the whole file (no tabs for indent, copy-paste?)
    - drop `set -x`, use `bash -x abi-check.sh` over
    - drop EVENT_ABI_CHECK
    - use /usr/bin/env bash as shebang
    - use `find | xargs` over `cp $(grep -v)`
    - adjust markdown syntax in abi-check/README.md
    - adjust link to the publicly available documentation
    
    v3 (by azat):
    - docker image
    - git check-ignore
    - make -j8
    - allow to change defaults
    
    Refs: #887

commit 512c88ceb43d91f10eb9eba39da4bbc0e74cdc32
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 5 15:22:32 2020 +0300

    ci/linux: add dist check

commit f3bc532735c4ac91c5be31ed5f0ca58241a0e983
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 5 16:24:59 2020 +0300

    Update list of cmake files for autotools dist archive
    
    Fixes: #976

commit c19ebffb21eaef2f9d6726ec6fd6d797fb2c8935
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 5 14:57:59 2020 +0300

    ci: change cache key for windows/mingw
    
    Should fix the following current failures:
    - 2020-05-04T22:32:02.9490248Z C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Microsoft\VC\v160\Microsoft.CppCommon.targets(231,5): error MSB6006: "cmd.exe" exited with code 3. [D:\a\libevent\libevent\build\regress.vcxproj]
    - cmake : /usr/bin/sh: /C/hostedtoolcache/windows/Python/3.7.6/x64/python.exe: No such file or directory
    
    P.S. I guess python has another path, but on my fork it is the same and
    it passes.

commit 7a465268b29c57958e55dceda77ad8322e247454
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 5 14:20:09 2020 +0300

    Pass --quiet to the event_rcpgen.py (autotools already does this)

commit 072dfacfeb6543f42d82aad15053bdca631582c1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 5 13:57:15 2020 +0300

    Do not run CI if message contains "ci skip"
    
    https://github.com/marketplace/actions/skip-based-on-commit-message

commit 61fc2bf2e9719eb7ca9c56b6e186df2f79f05de7
Author: Aleksandr-Melnikov <64836370+Aleksandr-Melnikov@users.noreply.github.com>
Date:   Tue May 5 10:31:09 2020 +0100

    There is typo in GetAdaptersAddresses windows library. It should be iphlpapi.dll

commit 4c13afaeec2d35df2580dfbc49391d0524101248
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 5 01:13:49 2020 +0300

    Support EV_CLOSED on linux for poll(2)
    
    Refs: #984

commit 972b456bf60e9a2f550ec45a14921c06e252c793
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 5 00:21:18 2020 +0300

    Fix EV_CLOSED detection/reporting (epoll only)
    
    - EV_CLOSED is EPOLLRDHUP in epoll
    - EPOLLRDHUP reported w/o EPOLLHUP if the socket closed with shutdown(SHUT_WR)
    - EPOLLRDHUP reported w/  EPOLLHUP if the socket closed with close()
      so in this case epoll backend will detect this event as error
      (EV_READ|EV_WRITE), since the epoll_ctl() will return EPOLLRDHUP with
      EPOLLHUP set, but this is not correct, let's fix this.
    
    Fixes: #984

commit c10cde4c617979e951352775a9685a47bf9c6acd
Merge: 28eb0d91 9543f31a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 5 00:05:49 2020 +0300

    Merge branch 'EV_CLOSED-and-EV_ET-fixes'
    
    * EV_CLOSED-and-EV_ET-fixes:
      Avoid triggering wrong events with EV_ET set
      epoll: handle EV_ET for EV_CLOSED too
      test: cover EV_CLOSED with lots of possible scenarious
      test: rename simpleclose to simpleclose_rw (since it works via write/read)

commit 9543f31a1a6cc2f919f57bfc2fd55068262a3f27
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Apr 9 02:16:15 2020 +0300

    Avoid triggering wrong events with EV_ET set
    
    For the event at least something except EV_ET should be set, so checking
    ev->ev_events with "triggered" events is wrong, because EV_ET is always
    passed (see epoll), since it will be filtered out if it is not set in
    event.

commit e703c034cbc7c8a58cee77db6c7e81d63f286ad5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Apr 9 02:00:17 2020 +0300

    epoll: handle EV_ET for EV_CLOSED too

commit ecb67f61897e1c25a70a6f3b90f073c8238a4216
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Apr 9 00:30:57 2020 +0300

    test: cover EV_CLOSED with lots of possible scenarious
    
    - trigger *RDHUP via close() <-- has issues
    - trigger *RDHUP via shutdown()
    - EV_CLOSED
    - EV_CLOSED|EV_PERSIST
    - EV_CLOSED|EV_ET <!-- has issues
    - EV_CLOSED|EV_ET|EV_PERSIST

commit c81362b2eccc43ab55bb31532322292fe1563144
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Apr 9 00:14:26 2020 +0300

    test: rename simpleclose to simpleclose_rw (since it works via write/read)

commit 28eb0d91a4c5f54f65bbe96a943106649707416f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 4 23:42:22 2020 +0300

    github actions looks good - drop travis/appveyor (#951)
    
    Actually right now github's VMs is better then travis/appveyor.

commit bdc5200acdf0a004ddc805b87bf09439fe2ebe7f
Author: Nicolas J. Bouliane <nicboul@gmail.com>
Date:   Sun May 3 00:32:10 2020 +0000

    bufferevent: allow setting priority on socket and openssl type

commit 86eafc03433cb5719e5b75ff99ffab8633433a17
Author: yuangongji <yuangongji@foxmail.com>
Date:   Fri May 1 09:51:29 2020 +0800

    cmake: set a default value for LIBEVENT_STATIC_LINK

commit f0b3160f8ce7fbd411493dcd023f562f4f9d17ee
Author: Nick Grifka <nigri@microsoft.com>
Date:   Mon Apr 27 15:02:25 2020 -0700

    evutil_time: improve evutil_gettimeofday on Windows
    
    If present, use GetSystemTimePreciseAsFileTime instead of
    GetSystemTimeAsFileTime. Available since Windows 8.

commit 5caffa7a5b3ce67e074e2ee99fc553c1cac0712c
Author: Nick Grifka <nigri@microsoft.com>
Date:   Thu Apr 16 12:08:02 2020 -0700

    bench: Allow backend method selection
    
    -l         list available methods
    -m <name>  use method

commit 57862901095a97306e74b2944d5808051f813ed5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Apr 8 00:29:40 2020 +0300

    cmake: missing test-closed binary

commit dd02ad9544ec857412e8a5a0462ddcb29e8045f6
Merge: d4e392b5 b57b6e46
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Mar 28 16:02:39 2020 +0300

    Merge branch 'event_rpcgen.py-cleanup'
    
    * event_rpcgen.py-cleanup:
      event_rpcgen.py: fix arguments-differ
      event_rpcgen.py: fix attribute-defined-outside-init
      event_rpcgen: suppress some warnings to make pylint clean
      Don't accumulate arguments in `Entry.GetTranslation`
      Fix improper string concatenations in lists
      Fix warnings regarding unused variables
      Don't override the `type` built-in
      Call `super` to call methods from the parent class
      Address `no-self-use` issues reported by pylint
      Run the code through the black formatter
      Reformat strings to template
      Add `argparse` support
      Precompile regular expressions
      Use bools instead of ints values where possible
      Rename all global variables to match the PEP8 spec
      Handle file pointers with context suite patterns
      Iterate over `tokens` with a for instead of while
      Fix indentation for `RpcGenError`
      Don't override `file` built-in
      Resolve variable name issues per PEP8
      Sort imports per PEP8

commit b57b6e46004b09133a44e70da4167f2ebdcfb0af
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Mar 28 16:01:46 2020 +0300

    event_rpcgen.py: fix arguments-differ

commit 7cdf75ca26f0156a55b128e8b63b3e7955f00f7e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Mar 28 15:58:57 2020 +0300

    event_rpcgen.py: fix attribute-defined-outside-init

commit 121fe013721b4709719471fea73c2a4de3d4f101
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Mar 28 15:58:36 2020 +0300

    event_rpcgen: suppress some warnings to make pylint clean

commit 47a2bcf6e844292c7754cf9bd726a5416e5ad24a
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Fri Mar 27 17:24:53 2020 -0700

    Don't accumulate arguments in `Entry.GetTranslation`
    
    Initialize `extradict` safely to avoid accumulating arguments in dict
    objects passed in across calls.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 6a3ca347379d28f8d6f8f9a621867860b6097b15
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Fri Mar 27 17:01:53 2020 -0700

    Fix improper string concatenations in lists
    
    This change adds commas between elements or explicitly concatenates the
    strings, so the values are no longer concatenated by accident.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 496fc02b2f5a0649b92e67270c127aaf1cf052f0
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Fri Mar 27 16:56:16 2020 -0700

    Fix warnings regarding unused variables
    
    Prefix all unused variables with `_` to mute unused variable warnings
    with flake8/pylint.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 80171db51552567db1361475126ea1e780b57dc1
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Fri Mar 27 16:45:21 2020 -0700

    Don't override the `type` built-in
    
    Name the second parameter to `Entry(..)` `ent_type` to avoid overriding
    the built-in.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit cfcc093606e747a5d250787012bac0b149c60d6d
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Fri Mar 27 16:27:56 2020 -0700

    Call `super` to call methods from the parent class
    
    Not only does it make it clearer to the reader what the intent is behind
    the code, it fixes MRO evaluation of classes if the parent-child
    relationship is nonlinear.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 83175940d4547d2f2c32e5356e25dafe3b33aa11
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Fri Mar 27 16:20:24 2020 -0700

    Address `no-self-use` issues reported by pylint
    
    Sprinkle around `@staticmethod` where need be and raise
    `NotImplementedError` from `Entry.GetInitializer` instead of doing
    similar with `assert`. `NotImplementedError` will provide a hint to
    static analyzers that there are abstract methods which need to be
    implemented, if they aren't, in subclasses.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 6da0cc6108540994d285df2be28b149790d91c47
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Fri Mar 27 16:04:37 2020 -0700

    Run the code through the black formatter
    
    This resolves a number of flake8 issues as well as pylint issues. Not
    all of the changes mesh between flake8/pylint though, so there are some
    false positives, but it's better than before.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 10a0403685f7bd43f25911a91293f629d15f402f
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Fri Mar 27 15:58:02 2020 -0700

    Reformat strings to template
    
    This change converts the existing code to use triple-quotes extensively,
    in the end-goal of making the code to reformat with black more readable
    before and after the change (black messes around with the formatting in
    a less than desirable way).
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 4cde51b6787e60041703589a7a20046fae03cabe
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Thu Mar 26 22:29:43 2020 -0700

    Add `argparse` support
    
    This change converts raw parsing with `sys.argv` to its equivalent logic
    with `argparse`.
    
    It doesn't fully convert over all of the TODO items listed in the
    comments, but it does provide some top-level structure which can be used
    to drive down further improvements and structure.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 23874cfcd5a53e9738872865a1cf8683a9cf302e
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Thu Mar 26 21:02:13 2020 -0700

    Precompile regular expressions
    
    This change boost performance at scale by pre-compiling regular
    expressions in the global space, then reusing them many times within
    functions.
    
    This (while not the desired intent of the author) will boost
    performance when parsing input.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 1b545a46cd920a16f9fb7abc2f5fab5b88b5bfa7
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Thu Mar 26 19:15:52 2020 -0700

    Use bools instead of ints values where possible
    
    This is being done to clarify logic and isn't being done for performance
    reasons whatsoever, as bools are derived from ints.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 9157b0d2fa5bf22aae76d4bd80d64240a1a0e206
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Thu Mar 26 19:05:48 2020 -0700

    Rename all global variables to match the PEP8 spec
    
    Global variables should be in all caps, as opposed to lowercase.
    
    While here, use named groups for `STRUCT_REF_RE` instead of numbered
    groups to make the results and their indented tokens to parse more
    intuitive to the end reader.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit dc57672900eccf8688411459a93a516eb602024a
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Thu Mar 26 17:37:09 2020 -0700

    Handle file pointers with context suite patterns
    
    This removes the need for manually calling the file pointer's `.close`
    methods directly.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 7f115c17c0b4b7a3cdd3e07a24f933c8ab881b52
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Thu Mar 26 20:42:40 2020 -0700

    Iterate over `tokens` with a for instead of while
    
    This simplifies the logic and avoids unnecessary copying/slicing of
    array elements in `tokens`.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 5408b9636f4afded6db44299720a4b3f6e9883d5
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Thu Mar 26 17:28:09 2020 -0700

    Fix indentation for `RpcGenError`
    
    Indentation for the exception was double what it should have been. This
    change normalizes the indentation to a consistent standard with the rest
    of the file.
    
    Fix minor flake8 issues while here corresponding to the minimum number
    of needed blank lines around the class and its methods.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 30229dcf950d6124ee24665ff35bbce4a9baa24d
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Thu Mar 26 17:21:25 2020 -0700

    Don't override `file` built-in
    
    Use `filep` instead of `file` to clarify the fact that `file` is a file
    pointer object.
    
    This mutes warnings on python 2.7 with `pylint`.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 2c38d6b11567a1ab1a88259049414843b7e0a104
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Thu Mar 26 17:13:14 2020 -0700

    Resolve variable name issues per PEP8
    
    Move all logic under `if __name__ == "__main__"` to a `main(..)`
    function.
    
    The purpose of this is to not only address flake8/pylint reported issues
    with variable names, but also to enable testing of the function in
    isolation to ensure the logic acts as desired.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit f30cc2b04b453dee2a8ccb797332bcf339e16001
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Thu Mar 26 16:07:17 2020 -0700

    Sort imports per PEP8
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit d4e392b54bce5daaf0900ba1a01602886eecd3d7
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Thu Mar 26 18:28:07 2020 -0700

    Mute clang 8 compilation error with gcc pragma
    
    Move the pragma ignoring outside the function to fix the build with gcc.
    While here, add equivalent clang pragmas to mute the warning, as well.
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 0d2f170048a4da1fd7beb553455e1679122a3833
Merge: 1675a556 6dea1514
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 22 19:36:45 2020 +0300

    Merge #976 -- symbols check build fixes
    
    * upstream/pr/976:
      github workflows: ignore previous cache
      github workflows: test for mingw via cmake
      cmake: replace CheckFunctionExists with CheckSymbolExists

commit 6dea1514947ad02593b3cc50f4c4064e66fba865
Author: yuangongji <yuangongji@foxmail.com>
Date:   Sun Mar 22 18:35:24 2020 +0800

    github workflows: ignore previous cache
    
    modify the cache key to ignore previous cache
    for the changes of configure.ac/CMakeLists.txt
    to take effect.

commit 93eb1b70e7670bec8bedeabdb6d7b46fc6923709
Author: yuangongji <yuangongji@foxmail.com>
Date:   Sun Mar 22 13:51:46 2020 +0800

    github workflows: test for mingw via cmake

commit 41d1d75a84e03219ec037b0f7982a67fb031eae7
Author: yuangongji <yuangongji@foxmail.com>
Date:   Fri Mar 20 17:49:37 2020 +0800

    cmake: replace CheckFunctionExists with CheckSymbolExists
    
    Checking functions with `CheckFunctionExists` may
    get wrong results, we should replace it with
    `CheckSymbolExists`, which is recommended by the cmake
    official documentation.
    Before using `CheckSymbolExists`, we use
    `CheckIncludeFiles` to check header files and save the
    available header files in a variable that guarantees
    `CheckSymbolExists` and `CheckTypeSize` to work correctly.
    This approach is modeled after the cmake scripts of `curl`.
    
    The following functions or files were not found before
    modification, they can now be found:
    - msys2 + mingw-8.1.0 on Windows10 or mingw-7.3.0 on Ubuntu-18.04
    timerclear
    timercmp
    timerisset
    
    - windows10
    getaddrinfo
    getnameinfo
    getprotobynumber
    getservbyname
    putenv
    strtoll
    timerclear
    timercmp
    timerisset
    
    - ubuntu-18.04
    sys/sysctl.h
    timeradd
    timerclear
    timercmp
    timerisset
    
    - MacOS 10.13
    sys/random.h
    timeradd
    timerclear
    timercmp
    timerisset

commit 1675a55620e6f0bbba5776f2df72cd48920421c2
Author: Mario Emmenlauer <mario@emmenlauer.de>
Date:   Tue Mar 3 19:02:24 2020 +0100

    LibeventConfig.cmake: restore CMAKE_FIND_LIBRARY_SUFFIXES and LIBEVENT_STATIC_LINK default
    
    The current cmake/LibeventConfig.cmake.in has a few problems and I'm not
    sure how cleanly developed it is. It seems rater complex for the little
    things I would assume it needs to do.
    
    I found two problems that are fixed in this PR:
    
    - If the downstream user does not explicitly set LIBEVENT_STATIC_LINK
      before calling find_package(libevent) then they will not be able to
      detect the static library, even if its the only one that exists. Since
      this may be rather strict, I've changed the behavior so that
      LIBEVENT_STATIC_LINK can be set to ON or OFF, but if unset, it defaults
      to whatever configuration libevent was built as.
    
    - The other problem is a bug. The package configuration needs to unset
      CMAKE_FIND_LIBRARY_SUFFIXES after use, otherwise all packages that are
      detected after libevent will be "infected" by this setting. This was a
      significant problem for us, and is very hard to detect in downstream
      project, because the order of dependencies will lead to different search
      results.

commit 5c4ea4afb2d2b1c35e3dc200e5626279e0574a0a
Merge: 9a9b92ed a3cb3119
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 17 21:45:04 2020 +0300

    Merge branch 'build-fixes' (#969)
    
    * build-fixes:
      github workflow: fix configure error on mingw-w64
      cmake: fix getaddrinfo checking error
      cmake: remove CheckFunctionExistsEx
      autoconf: fix getaddrinfo checking errors on mingw

commit a3cb3119c7254a7ad7e4b14cdc77977e140f5f22
Author: yuangongji <yuangongji@foxmail.com>
Date:   Tue Mar 17 19:57:10 2020 +0800

    github workflow: fix configure error on mingw-w64

commit 503ba1d36571e3cb01826d15dc462b7d8b5094de
Author: yuangongji <yuangongji@foxmail.com>
Date:   Mon Mar 16 20:11:06 2020 +0800

    cmake: fix getaddrinfo checking error
    
    Using `CheckFunctionExists` on Windows to check `getaddrinfo`
    will get `not found`, but it actually exists. Using `CheckSymbolExists`
    with headers will get correct results. Other functions such as
    `getnameinfo`,`inet_ntop`,etc. have the same issue.

commit 61c5c19bfdabd2f16407a3ed615060c9d0502e82
Author: yuangongji <yuangongji@foxmail.com>
Date:   Mon Mar 16 18:57:54 2020 +0800

    cmake: remove CheckFunctionExistsEx
    
    `CheckFunctionExistsEx` is copied from the cmake modules before
    3.1.2, which is the minimum required version of libevent.
    The internal module `CheckFunctionExists`of cmake can completely
    replace it.

commit 6d54be2cc078351b4ce1e469bedc4a976f4e3636
Author: yuangongji <yuangongji@foxmail.com>
Date:   Sat Mar 14 11:13:38 2020 +0800

    autoconf: fix getaddrinfo checking errors on mingw
    
    `AC_CHECK_FUNCS` can not properly check `getaddrinfo` because this
    function requires some special headers on mingw.
    Using `AC_CHECK_DECL` can effectively solve this issue.
    
    Same for
    - getnameinfo
    - getprotobynumber
    - getservbyname
    - inet_ntop
    - inet_pton

commit 9a9b92ed06249be8326d82e2483b87e1a1b4caac
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 1 16:01:12 2020 +0300

    Add EVENT_BASE_FLAG_EPOLL_DISALLOW_TIMERFD flag (fixes: #958)
    
    By default we are using CLOCK_MONOTONIC_COARSE, but if
    EVENT_BASE_FLAG_PRECISE_TIMER isset, then CLOCK_MONOTONIC will be used,
    however this will also enable timerfd, while this is not always what
    someone wants, hence add a flag to control this (by default the old
    behavior is preserved, set new flag to change it).

commit 4e5a41ca0f668da1a18832e5cb02b4afeae074ff
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 1 15:47:40 2020 +0300

    test-time: do not use deprecated API
    
    - event_init() -> event_base_new()
    - event_set() -> event_new()
    - check return value of event_base_dispatch()
    - use EXIT_SUCCESS/EXIT_FAILURE

commit a11edbfa369f7a99886359b3f4baa69686dc275f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 1 14:54:36 2020 +0300

    test-time: enable debug mode if EVENT_DEBUG_LOGGING_ALL env set

commit 5a5fe67ee86f780a94f3f154bc03756b7db1cd27
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 1 13:52:32 2020 +0300

    Fix typo in thread.h (s/event/evthread)

commit 114b3836755f1e526e658b248464465136bd87b8
Author: yuangongji <yuangongji@foxmail.com>
Date:   Sat Feb 29 17:47:47 2020 +0800

    increase segment refcnt only if evbuffer_add_file_segment() succeeds

commit 4da9f87ccbe71edb3b3aaf74b8b64d7e9c41dcaf
Author: ayuseleznev <ayuseleznev@iponweb.net>
Date:   Thu Feb 27 16:59:45 2020 +0300

    evdns: fix a crash when evdns_base with waiting requests is freed
    
    Fix undefined behaviour and application crash that might take
    place in some rare cases after calling evdns_base_free when
    there are requests in the waiting queue.
    
    Current cleanup procedure in evdns_base_free_and_unlock
    function includes 2 steps:
    1. Finish all inflight requests.
    2. Finish all waiting requests.
    During the first step we iterate over each list in req_heads
    structure and finish all requests in these lists. With current
    logic finishing an inflight request (function request_finished)
    removes it from the inflight requests container and forces
    a wating connection to be sent (by calling
    evdns_requests_pump_waiting_queue). When these new requests are
    sent it is possible that they will be inserted to the list in
    req_heads that we've already cleaned.
    So in some cases container of the inflight requests is not empty
    after this procedure and some requests are not finished and
    deleted. When timeouts for these requests expire
    evdns_request_timeout_callback is called but corresponding
    evdns_base has been already deleted which causes undefined
    behaviour and possible applicaton crash.
    
    It is interesting to note that in old versions of libevent such
    situation was not possible. This bug was introduced by the commit
    14f84bbdc77d90b1d936076661443cdbf516c593. Before this commit
    nameservers were deleted before finishing the requests. Therefore
    it was not possible that requests from the waiting queue be sent
    while we finish the inflight requests.

commit 968bbd5c918568eb95b493af05c464ddfc36671b
Author: chenguolong <cgl.chenguolong@huawei.com>
Date:   Tue Feb 4 16:05:02 2020 +0800

    event_base_once: fix potential null pointer threat
    
    supposing if base is null, EVBASE_ACQUIRE_LOCK and EVBASE_RELEASE_LOCK
    would get a coredump, so we add a guard for protection.
    
    Signed-off-by: chenguolong <cgl.chenguolong@huawei.com>

commit 5fbe6313ae7e81cde3e056b29171a6346c54aa0b
Author: yuangongji <yuangongji@foxmail.com>
Date:   Tue Feb 11 14:33:15 2020 +0800

    test-ratelim: add missing free

commit 08e7d5136d4d02328fc1cd6e3571e7130d681f7b
Author: yangyongsheng <iysheng@163.com>
Date:   Tue Jan 28 14:31:39 2020 +0800

    misspelling of output in bufferevent_struct.h

commit 0b6f29aca60258a1f90c2e17178a96fff71772d2
Merge: 2c473056 19a55164
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 27 01:56:58 2020 +0300

    Merge branch 'github-actions-v2' (#951)
    
    * github-actions-v2:
      travis: disable doxygen and coveralls, in favor of github actions
      github actions: test and coverage
      github actions: doxygen
      Ignore truthy in yamllint (for github-actions)
      test: mark common_timeout as retriable
      cmake: set rpath for libraries on linux
      test-export: compatible with all versions of visual studio
      coverage: 'lcov --remove' need full path

commit 19a55164f0b5089af933eb96466476bd9c3c6a14
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 27 01:53:27 2020 +0300

    travis: disable doxygen and coveralls, in favor of github actions

commit 84bb2c18e4694ac5b9318dbf9c39f7968db50ab4
Author: yuangongji <yuangongji@foxmail.com>
Date:   Tue Jan 21 19:51:48 2020 +0800

    github actions: test and coverage

commit d151968fe70b2b43745c1c2afebb6943e1966876
Author: yuangongji <yuangongji@foxmail.com>
Date:   Tue Jan 21 10:14:11 2020 +0800

    github actions: doxygen

commit cf379ecc49cb6d39b6fb2aa6bba81f592892e0ce
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 26 21:30:15 2020 +0300

    Ignore truthy in yamllint (for github-actions)

commit f6d7992b05ff4bfe68fd23301701d2b920534e0d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jan 23 21:34:18 2020 +0300

    test: mark common_timeout as retriable
    
    Refs: https://github.com/libevent/libevent/pull/951#issuecomment-576711224

commit ce8be2385b5fee16859a630fca0c98ad290c8e21
Author: yuangongji <yuangongji@foxmail.com>
Date:   Mon Jan 20 21:17:27 2020 +0800

    cmake: set rpath for libraries on linux

commit 9adc9f149657212f65f05750b4f94ea3b1166aec
Author: yuangongji <yuangongji@foxmail.com>
Date:   Mon Jan 20 21:15:26 2020 +0800

    test-export: compatible with all versions of visual studio

commit 1a99f9b25c0587680e507f10e3b6e0b5b23144ca
Author: yuangongji <yuangongji@foxmail.com>
Date:   Tue Jan 14 15:54:14 2020 +0800

    coverage: 'lcov --remove' need full path

commit 2c473056abdf710b6c476b7b19777d5313e71d8a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 21 20:10:15 2020 +0300

    Do not use shared global structures on CYGWIN
    
    Fixes: #950

commit ec775a960b6110da7f406fa6f8dd72328303b1ef
Author: JackBoosY <yuzaiyang@beyondsoft.com>
Date:   Tue Jan 21 22:02:34 2020 -0800

    Add vcpkg installation instructions

commit ca2b72c546d80dfb4fa255b20ef4a829ed102a70
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 14 21:45:01 2020 +0300

    test: move thread into realtime class even on EVENT__DISABLE_THREAD_SUPPORT

commit d0adbc05654eca27384b6496cfd8a22ed4dfb4fb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 14 10:20:12 2020 +0300

    test: fix compilation without thread support (EVENT__DISABLE_THREAD_SUPPORT=ON)

commit 8dcccf35c22f5e8aaa0b98b04fa396334582b1c1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 14 02:36:54 2020 +0300

    travis-ci: do not allow failures under osx

commit 30fe125041ab38045487bd3af60d2f564dffc81c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 14 02:14:16 2020 +0300

    test: fix bufferevent/bufferevent_connect_fail_eventcb* under osx/freebsd
    
    For OSX the socket should be closed, otherwise the "connection refused"
    will not be triggered.
    
    And freebsd can return error from the connect().

commit 10504fcab927e8b226ef2e988b1b3f175c3e9f71
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 14 00:38:06 2020 +0300

    test: fix dst thread in move_pthread_to_realtime_scheduling_class (osx)
    
    Fixes the following tests on osx:
    - del_wait
    - no_events
    
    Refs: #940

commit 34d51e1bc9c650c4d012fe3024f7777c819ba969
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 14 00:27:21 2020 +0300

    test: fix compilation under win32 (rearrange thread_setup() code)

commit 391003e9b78acff0ee5096c592fc4b601a02648d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 14 00:41:48 2020 +0300

    test: use THREAD_* wrappers over pthread* in del_notify

commit a6f81aa45455c8afb69980f7026a0e706f4f9387
Merge: 603d7937 4b72024b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 13 23:36:40 2020 +0300

    Merge branch 'osx-clock'
    
    Moves the thread into real-time scheduling class, as recommended in [1], it
    fixes the separate test provided by @ygj6 [2] everywhere (github actions,
    travis-ci, appveyor) under osx.
    
      [1]: https://developer.apple.com/library/archive/technotes/tn2169/_index.html
      [2]: https://github.com/azat-archive/osx-timers/commit/dde1a6e4d04506d0e0fb193ebb9f49ae25873be6
    
    Although even after this changes the following time-related tests failed
    on travis-ci:
    - no_events
    - del_wait
    
    But anyway I guess #940 can be closed, since this fixes the issue in common.
    
    * osx-clock:
      test: Use THREAD_* wrappers in del_notify/del_wait
      test: move threads created with THREAD_START() to realtime scheduling class too
      test: put thread into real time scheduling class on osx for better latencies
    
    Closes: #940

commit 4b72024b7f5e0166527e509fe252ca78e8daa5ab
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 13 22:24:54 2020 +0300

    test: Use THREAD_* wrappers in del_notify/del_wait

commit e6285eed62735b264ab2cb3f07f067ca75f5f0a7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 13 22:24:54 2020 +0300

    test: move threads created with THREAD_START() to realtime scheduling class too

commit b1e46c32db520df88e32339a4afad6b593f064c3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 13 00:33:39 2020 +0300

    test: put thread into real time scheduling class on osx for better latencies

commit 603d7937d28f7bcbfeea95ba7d4845988d184291
Merge: 02905413 b30717eb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 13 22:27:32 2020 +0300

    Merge branch 'ci-improvements'
    
    * ci-improvements:
      travis-ci: measure build/tests time
      travis-ci: drop travis_wait (does not work with sub processes)
      cmake: do not print used method (EVENT_SHOW_METHOD) while running tests
      cmake: run regress test quietly like autotools (makes CI logs cleaner)

commit b30717eb234247a7ca5825c77f0f55d7cf8727c8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 13 22:24:54 2020 +0300

    travis-ci: measure build/tests time

commit fbe6f7d92a080f68cbae6d6ad646b6fea1e97113
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 13 22:24:54 2020 +0300

    travis-ci: drop travis_wait (does not work with sub processes)
    
    Refs: https://github.com/travis-ci/travis-ci/issues/8526

commit f8a6f12712e775720b36e0c4375a5fd6870bb737
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 13 22:24:54 2020 +0300

    cmake: do not print used method (EVENT_SHOW_METHOD) while running tests
    
    autotools don't, plus this will make CI logs cleaner

commit fa33819e3b0f706a0c8b6bcb6eb2c6646609542a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 13 22:24:54 2020 +0300

    cmake: run regress test quietly like autotools (makes CI logs cleaner)

commit 02905413fdb290c75f67644f270150d60fe50805
Author: nntrab <kolmar@hotmail.co.uk>
Date:   Tue Feb 9 18:01:00 2016 +0000

    Add callback support for error pages
    
    The existing error pages are very basic and don't allow for
    multi-lingual support or for conformity with other pages in a web site.
    The aim of the callback functionality is to allow custom error pages to
    be supported for calls to evhttp_send_error() by both calling
    applications and Libevent itself.
    
    A backward-incompatible change has been made to the title of error pages
    sent by evhttp_send_error(). The original version of the function used
    the reason argument as part of the title. That might have unforeseen
    side-effects if it contains HTML tags. Therefore the title has been
    changed to always use the standard status text.
    
    An example of the error callback can be found in this
    [version](https://github.com/libevent/libevent/files/123607/http-server.zip)
    of the 'http-server' sample. It will output error pages with very bright
    backgrounds, the error code using a very large font size and the reason.
    
    Closes: #323 (cherr-picked from PR)

commit 462f2e97660cc2b6af563ab631050a83c3e0935b
Merge: f0e79baf 9c91fe14
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 12 15:34:51 2020 +0300

    Merge branch 'http-connect'
    
    After this patchset http-connect works with pproxy [1]:
    
        $ pproxy -l http://:8000/ -vvv &
        $ http-connect //127.1:8000 http://kernel.org:80/
    
      [1]: https://pypi.org/project/pproxy/
    
    * http-connect:
      http-connect: do not check connection on GET cb
      http-connect: set Host header (for CONNECT and GET) (like curl)
      http-connect: cleanup and helpers
      http: do not close connection for CONNECT
      http: do not assume body for CONNECT
    
    Fixes: #946

commit 9c91fe14797e932768115c24ad2b3c9cb362eb22
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 12 15:31:50 2020 +0300

    http-connect: do not check connection on GET cb

commit 415ddee3379def05c93be740ada59204fbadb0af
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 12 15:24:35 2020 +0300

    http-connect: set Host header (for CONNECT and GET) (like curl)

commit e54d5fc57ce23cbbe988fe242aee25c50049978b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 12 15:14:24 2020 +0300

    http-connect: cleanup and helpers

commit 12ad0c8fcdd062170788de4f933c657ff13e70ab
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 12 15:29:48 2020 +0300

    http: do not close connection for CONNECT

commit 998e68340e5cd289a16f340cc5c625e984e1f762
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 12 13:43:18 2020 +0300

    http: do not assume body for CONNECT

commit f0e79bafd8823aedf535e9b344d4cf9a4f9747e5
Author: Dimo Markov <dimo.markov@egt-bg.com>
Date:   Wed Jan 8 20:37:16 2020 +0200

    Added uninstall target check to cmakelists

commit 08981f8d752ad23e21887b42944783e843b2e281
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 5 19:02:22 2020 +0300

    Fix compilation without OPENSSL_API_COMPAT
    
    Use the following for openssl 1.1+:
    - X509_getm_notBefore over X509_get_notBefore
    - X509_getm_notAfter  over X509_get_notAfter
    - use OPENSSL_VERSION_NUMBER over SSLeay()
    - add missing headers
    
    Refs: openssl/openssl@0b7347effee5

commit 6412f34f242e9b5b87f0378715baf97ba0bf1a8c
Author: yuangongji <yuangongji@foxmail.com>
Date:   Fri Dec 27 17:53:28 2019 +0800

    evutil_time: Implements usleep() using wait funtion on Windows

commit 1edb6f6188d5dd2155c6e8ad997eaca11157e95f
Author: yangyongsheng <iysheng@163.com>
Date:   Sun Dec 29 20:52:17 2019 +0800

    Initialize variable to 0 replace use memset function in sample/hello-world.c

commit ea12428db66a2c82b57c12afaf5fb5d1a0935f3c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 10 09:25:39 2019 +0300

    appveyor: switch to Previous Visual Studio 2019 (VS issues after update)
    
    After update [1] of the Visual Studio 2019 image cmake unable to find
    path to the c compiler [2]:
    
        cmake : CMake Error at CMakeLists.txt:47 (project):
        At line:1 char:1
        + cmake -G 'Visual Studio 16 2019' -A x64 ..
        + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
            + CategoryInfo          : NotSpecified: (CMake Error at ...t:47 (project)::String) [], RemoteException
            + FullyQualifiedErrorId : NativeCommandError
    
          The CMAKE_C_COMPILER:
            C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/VC/Tools/MSVC/14.23.28105/bin/Hostx64/x64/cl.exe
          is not a full path to an existing compiler tool.
    
      [1]: https://github.com/appveyor/ci/issues/3231
           https://www.appveyor.com/updates/2019/12/09/
      [2]: https://ci.appveyor.com/project/libevent/libevent/builds/29431286/job/a68h7dn9rcride9g

commit f76456b0dc14fb7c5fa55f815512b2ed07df4706
Author: Andre Pereira Azevedo Pinto <andrep@lyft.com>
Date:   Wed Dec 4 17:56:54 2019 -0800

    Add support for priority inheritance
    
    Add support for posix mutex priority inheritance. This is important to
    avoid priority inversion in systems running with threads with different
    priorities.
    
    Signed-off-by: Andre Azevedo <andre.azevedo@gmail.com>

commit 8f13c170cf6e9a02dec410b967884ec5e08947ab
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 30 15:48:36 2019 +0300

    cmake: set CMAKE_{RUNTIME,LIBRARY,ARCHIVE}_OUTPUT_DIRECTORY they are not defined
    
    This will allow overriding them in parent cmake rules, i.e. if libevent
    is used via add_subdirectory().
    
    Closes: #931

commit b9f442e2d7af8b01cd34f75f2f404763b76d42dc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 30 15:53:52 2019 +0300

    cmake: use CMAKE_LIBRARY_OUTPUT_DIRECTORY for the final shared library symlink
    
    Fixes: 669a53f3 ("cmake: set library names to be the same as with autotools")

commit aff231229eb5f421201d7954bc453584bdde4398
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 17 23:22:53 2019 +0300

    appveyor: fix EVENT_CMAKE_OPTIONS expansion (for multiple arguments)
    
    Fixes: 63f73ee2 ("CI: integrate testing for components export")

commit 8a34869984c470fb243fc9587c469b316add2f7e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 17 18:13:51 2019 +0300

    test-ratelim: calculate timers bias (for slow CPUs) to avoid false-positive
    
    This can be/should be done for regression tests too.
    
    Refs: https://ci.appveyor.com/project/libevent/libevent/builds/28916689/job/kg621aa194a0qbym
    Refs: https://github.com/libevent/libevent/pull/917#issuecomment-553811834
    v2: EVENT_BASE_FLAG_PRECISE_TIMER

commit 026590f908f8ef8602d54bd680c8bef9f4552d55
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 17 15:41:22 2019 +0300

    mailmap: add name/email aliases for yuangongji (name and email)
    
    Before:
      $ git log --format='%aE %aN' --author=yuangongji | sort | uniq -c
           30 82787816@qq.com yuangongji
            1 82787816@qq.com yuangongji (A)
    
    After:
      $ git log --format='%aE %aN' --author=yuangongji | sort | uniq -c
           34 yuangongji@foxmail.com yuangongji

commit 8be8ac460239d16b52fd55998a030f3bdb5dd69a
Merge: 02dc7a1b 63f73ee2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 17 02:45:54 2019 +0300

    Merge #929 -- cmake package improvements
    
    Example:
    
      find_package(Libevent 2.2.0 REQUIRED COMPONENTS core)
      add_executable(test test.c)
      target_link_libraries(test ${LIBEVENT_LIBRARIES})
    
    * upstream/pr/929:
      CI: integrate testing for components export
      cmake: test for find_package()
      cmake: improve package config file

commit 02dc7a1b17552e356707dc61c78ab5a4fa8c8d7d
Author: yuangongji <yuangongji@foxmail.com>
Date:   Tue Oct 22 22:29:12 2019 +0800

    appveyor: fix openssl version mismatch warning
    
    yuangongji:
    
      "Many warnings appear when building and running with Visual Studio 2019 in Appveyor:
    
       WARN C:\projects\libevent\test\regress_ssl.c:210: Version mismatch for openssl: compiled with 1000214f but running with 1000212f
    
       Simply add the openssl binary to the "PATH" environment variable to fix it.
    
       I wrote a simple demo to reproduce it: https://github.com/ygj6/verify
       I see there are dozens of openssl libraries in the system of appveyor: https://ci.appveyor.com/project/ygj6/verify/builds/28290688
       If you do not specify which openssl to use, the system cannot find the correct library."

commit 28ba0a4797d59fbdfb6c99a80d5d7fe1b95b68aa
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 17 02:37:59 2019 +0300

    appveyor: disable parallel tests execution
    
    Refs: https://github.com/libevent/libevent/pull/917#issuecomment-553784701

commit 63f73ee2ad037bf0d03aea4d489fdd9e85a21ff1
Author: yuangongji <yuangongji@foxmail.com>
Date:   Thu Nov 14 18:34:56 2019 +0800

    CI: integrate testing for components export

commit cd15112b620feadafe8fd3531043870a5c19a4a6
Author: yuangongji <yuangongji@foxmail.com>
Date:   Thu Nov 14 18:28:31 2019 +0800

    cmake: test for find_package()

commit dc4be869d5009f38e0ef02ff07dd799f9c2fef2f
Author: yuangongji <yuangongji@foxmail.com>
Date:   Thu Nov 7 18:26:47 2019 +0800

    cmake: improve package config file

commit 1495f8b67a6061ac5c8dcbc42dd71398d6355c9a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 6 21:41:38 2019 +0300

    Link with iphlpapi only on windows
    
    Fixes: 9fecb59a ("Parse IPv6 scope IDs.")
    Refs: #923

commit 9fecb59a94ef246088d7f3e0365c2fe80d0df2f4
Author: Philip Homburg <phomburg@ripe.net>
Date:   Tue Oct 29 15:48:53 2019 +0100

    Parse IPv6 scope IDs.

commit 4436287d1247fb2e9c80560debf852a94657e485
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Oct 31 09:18:58 2019 +0300

    Relax bufferevent_connect_hostname_emfile
    
    Do not do any assumptions on the error for the EMFILE from
    getaddrinfo(), expect just any error.
    
    Fixes: #924

commit 53b3be4ee9e814a22876675c0ee004f0ebfb8535
Author: yuangongji <yuangongji@foxmail.com>
Date:   Sat Oct 26 22:31:18 2019 +0800

    autotools: fails build when need but can not find openssl

commit 5fe83d7433022e29a401753f64ec78faaf25e0a7
Author: yuangongji <yuangongji@foxmail.com>
Date:   Fri Oct 25 21:54:13 2019 +0800

    cmake: eliminate duplicate installation of public headers

commit 1ba94bdf0861b989307d8ebec207ba01b97970e7
Merge: 84affc18 38eb4846
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 21 22:21:19 2019 +0300

    Merge pull request #915 from ygj6 -- evutil_socketpair win32 fixes
    
    * upstream/pr/915:
      appveyor: add vs2019 os to test some new features brought by Win10
      test: add testcase for evutil_socketpair()
      evutil: make evutil_socketpair() have the same behavior on Windows with build number lower and higher than 17063

commit 84affc1837a727640f46eff2723c1364d2cd1695
Author: Michael Davidsaver <mdavidsaver@gmail.com>
Date:   Mon Oct 21 10:36:49 2019 -0700

    append to CMAKE_MODULE_PATH
    
    Don't override any -DCMAKE_MODULE_PATH= passed from CLI
    to eg. test custom Platform/ support.

commit 38eb4846e2d69a9d7cf2052dd465de3a42a528f7
Author: yuangongji <yuangongji@foxmail.com>
Date:   Fri Oct 18 23:32:14 2019 +0800

    appveyor: add vs2019 os to test some new features brought by Win10

commit 55d60c925898929740166ccc9e8afe468d92b465
Author: yuangongji <yuangongji@foxmail.com>
Date:   Fri Oct 18 21:11:37 2019 +0800

    test: add testcase for evutil_socketpair()

commit 879d24961973c2dcf6de64a7e0229adcbad484b7
Author: yuangongji <yuangongji@foxmail.com>
Date:   Fri Oct 18 21:03:40 2019 +0800

    evutil: make evutil_socketpair() have the same behavior on Windows with build number lower and higher than 17063

commit b9b9f19058dc04b7ad4d079a38f6b86c0e7b1072
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 16 01:11:51 2019 +0300

    Do not use sysctl.h on linux (it had been deprecated)
    
    It had been deprecated for a long time (AFAIK), but since
    glibc-2.29.9000-309-g744e829637 it produces a #warning

commit dda8968c71f684235abb3cf6c26810751bf2c31a
Author: yuangongji <yuangongji@foxmail.com>
Date:   Sat Oct 12 18:45:52 2019 +0800

    evutil: implement socketpair with unix domain socket on Win10

commit 11bdd41c562f984d15a9f301e11363d9a48ef6bf
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 14 23:22:55 2019 +0300

    travis-ci: add OPENSSL_1_1=yes for the openssl 1.1 to distinguish it in list

commit fb95772ac73842d0e0c58574c3d154c72b06d5f4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 14 23:20:23 2019 +0300

    travis-ci: use matrix.include over env.matrix/matrix.exclude for coveralls

commit f2bdd6eea132a4f42a482645ee6fac7e9c4c9ad4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 14 22:32:01 2019 +0300

    travis-ci: build with clang only basic configurations
    
    I tried to exclude clang instead (for PRs), but matrix.exclude cannot
    have conditions (i..e matrix.exclude.if).

commit c1c8ae714b52654569a1bd9bcc766be8d55b91e8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 14 12:20:45 2019 +0300

    Use matrix.include.if over matrix.exclude.if for doxygen
    
    And use if.repo over if.slug
    
    Fixes: aeb014cc ("Do not try to deploy documentaion for PR")

commit aeb014cc05c1e852fe5d159268c263fe2b053584
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 14 02:49:55 2019 +0300

    Do not try to deploy documentaion for PR
    
    Anyway access to security variables is forbidden for PRs.
    
    v2: use travis-ci conditions, to avoid running addons

commit b32a644302baf534eb2ff1561041eeb5b97b9fd2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 9 00:16:50 2019 +0300

    Fix all all yamllint warnings in travis/appveyor rules

commit c88c578ac34ba8f24bbd02e16f3769711987860d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 9 00:13:01 2019 +0300

    appveyor: do not allow any failures
    
    Yes we still have flacky tests, but anyway two main configuration can
    fail too (and they do fail from time to time) so let's not allow any
    failures and see how this will go.
    
    (Credits to @ygj6 via #910)

commit 72d140c2e15dc4865f2f74429aacc5549701cff8
Author: yuangongji <yuangongji@foxmail.com>
Date:   Tue Oct 8 22:01:01 2019 +0800

    appveyor: fix build script for compiling using mingw-w64

commit 78b5bca6d83a70a0b9dfc438898d5c1908cc3c2a
Author: yuangongji <yuangongji@foxmail.com>
Date:   Tue Oct 8 21:38:58 2019 +0800

    sample/https-client: link crypt32 explicitly when build with mingw-w64

commit c328999e5d1f7004f6f83b3c8e93005b79042822
Merge: 72e6eff0 af4b07a5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 7 22:10:14 2019 +0300

    Merge remote-tracking branch 'upstream/pr/908'
    
    * upstream/pr/908:
      Avoid transforming base C_FLAGS set deliberately

commit 72e6eff0251bffec72e0b8b2cedf72f173c8b9e9
Author: Kamil Rytarowski <n54@gmx.com>
Date:   Fri Oct 4 01:26:47 2019 +0200

    Fix compat with NetBSD >= 10
    
    kevent::udata was switched from intptr_t to void*.
    
    Handle both cases with the GCC extension typeof().

commit af4b07a55cc0ff0298cbd26c87b3f6a08f84c394
Author: William A Rowe Jr <wrowe@pivotal.io>
Date:   Thu Oct 3 11:40:52 2019 -0700

    Avoid transforming base C_FLAGS set deliberately
    
    The CMAKE_C_FLAGS_DEBUG, CMAKE_C_FLAGS_RELEASE, CMAKE_C_FLAGS_MINSIZEREL
    and CMAKE_C_FLAGS_RELWITHDEBINFO options are correctly and deliberately
    toggled to use the libcmt (/MT) flag options in place of the usual
    msvcrt (/MD) options, but this isn't necessarily desired by the user.
    The default choice can be overriden with the EVENT__MSVC_STATIC_RUNTIME
    cmake option.
    
    However, the /MD flag that is the choice of CMake only enters into
    play for the four types of builds above. If the user introduces another
    CMAKE_BUILD_TYPE, the base CMAKE_C_FLAGS must not be manipulated, as
    that value (and the CMAKE_C_FLAGS_{custom} value) have been explicitly
    chosen by the user/developer deploying this library, and the mismatch
    between these flags in different dependencies results in link errors.
    
    The CMake build schema itself doesn't place an /MD flag in CMAKE_BUILD_TYPE
    so any /M compile option in that variable needs to be retained.
    
    Signed-off-by: William Rowe <wrowe@pivotal.io>
    Signed-off-by: Yechiel Kalmenson <ykalmenson@pivotal.io>

commit 8d5c5650d281019832fa7b5133b85c7ad29f664e
Author: yuangongji <yuangongji@foxmail.com>
Date:   Thu Sep 26 21:47:51 2019 +0800

    tinytest: support timeout on Windows

commit a977d6963611c729b75108d31bf74718b7b3e06d
Merge: 4727150a 5aae74d7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 22 18:44:55 2019 +0300

    Merge branch 'upstream/pr/899' (evbuffer_freeze testcase enhancements)
    
    * upstream/pr/899:
      improve the description of parameter to evbuffer_read()
      regress_buffer: improve testcase for evbuffer_freeze()

commit 5aae74d7a6134e3072f8d311d3ce16efd971baef
Author: yuangongji <yuangongji@foxmail.com>
Date:   Sat Sep 21 23:37:38 2019 +0800

    improve the description of parameter to evbuffer_read()

commit 6769f692d734a13cb8f20b42c7561cd3c0766f12
Author: yuangongji <yuangongji@foxmail.com>
Date:   Thu Sep 19 22:19:58 2019 +0800

    regress_buffer: improve testcase for evbuffer_freeze()

commit 4727150a54e21725f0ef4f43ca5028cc6f353664
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Sep 21 23:30:48 2019 +0300

    evbuffer_add_file: fix freeing of segment in the error path
    
    if evbuffer_add_file_segment() fails it returns -1, so we should call
    evbuffer_file_segment_free() only on error, and this -1 not 0.
    
    Fixes: 6a81b1f5 ("Avoid double-free on error in evbuffer_add_file. Found by coverity.")
    Backport-to: 2.1

commit 148d12ad31b03a813f4ffd9df14a85392aa74130
Author: yuangongji <yuangongji@foxmail.com>
Date:   Thu Sep 19 15:24:51 2019 +0800

    evutil_time: detect and use _gmtime64_s()/_gmtime64()

commit 0cd536b0b33d2aa59cee3805846f81cf4e4a5ce9
Author: yuangongji <yuangongji@foxmail.com>
Date:   Wed Sep 18 23:12:59 2019 +0300

    http: rename bind_socket_ai() to create_bind_socket_nonblock()

commit 1c78451f0da46b12bbdbd52dfc25ef2eac5c286c
Author: yuangongji <yuangongji@foxmail.com>
Date:   Mon Sep 16 23:24:32 2019 +0800

    http: make sure the other fields in ext_method are not changed by the callback

commit 572a565130d40172e1f2b5ac83d0cdffd502105b
Author: yuangongji <yuangongji@foxmail.com>
Date:   Sun Sep 15 21:45:26 2019 +0800

    https-client: load certificates from the system cert store on Windows

commit 095c8ae11121c302f0bd9a896be6ff0a84b7c51f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 8 22:30:54 2019 +0300

    Build doxygen documentation via cmake (to fill variables)
    
    Refs: #782

commit 0546744503d36c19324d10ca772728288264441b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 8 11:47:04 2019 +0300

    Deploy documentation to libevent-doc.github.io
    
    Based-on: https://github.com/ygj6/libevent/commit/4a86dcb4df0f9dc69f7722a1ba7567ef3b8447c8.patch (by @ygj6)

commit c3f353450e94248ee677a068ed2c4ed29d64f79e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Sep 5 23:31:19 2019 +0300

    Fix checking return value of the evdns_base_resolv_conf_parse()
    
    Reported-by: Maxim Gorbachyov <maxim.gorbachyov@gmail.com>

commit 194a5d822651c03fc988c1bf087e65ed20f453f7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 4 00:46:01 2019 +0300

    cmake: fix getrandom() detection
    
    Fixes: 86f55b04 ("arc4random: replace sysctl() with getrandom (on linux)")

commit 86f55b0420f864b518475f781ce7a3c619180b12
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Sep 3 00:34:35 2019 +0300

    arc4random: replace sysctl() with getrandom (on linux)
    
    Since sysctl() is deprecated for a long-long time, according to
    sysctl(2):
    
        Since Linux 2.6.24, uses of this system call result in warnings in the kernel log.
    
    Fixes: #890
    Suggested-by: Pierce Lopez

commit 13b8fc39fd4000de2c836b0acdc52ae5b4c757c7
Author: yuangongji <yuangongji@foxmail.com>
Date:   Fri Aug 30 10:21:07 2019 +0800

    Upgrade autoconf (after upgrading minimum required to 2.67)
    
    - AC_PROG_SED
    - AC_USE_SYSTEM_EXTENSIONS
    - AC_TRY_COMPILE -> AC_COMPILE_IFELSE
    - AC_TRY_RUN -> AC_RUN_IFELSE
    ...
    
    Also use:
    - AC_CONFIG_AUX_DIR
    
    Refs: #870
    Fixes: 3f09e923 ("Change the minimum version of automake to 1.13 and autoconf to 2.67")

commit ddacaef59ab6808a0801007d0a681f2415af4871
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Aug 29 22:57:44 2019 +0300

    Revert "Warn if forked from the event loop during event_reinit()"
    
    Thinking about this more and realizing that this was a mistake, so
    should be reverted.
    
    In a nut shell I guess most of the apps calls event_reinit() from the
    loop (see [1] for example), and this should be totally fine (the bit
    with the signals [2] handled in event_reinit() gracefully)
    
      [1]: https://archives.seul.org/libevent/users/Aug-2019/msg00009.html
      [2]: https://github.com/libevent/libevent/pull/833#issuecomment-501834453
    
    This reverts commit 497ef904d544ac51de43934549dbeccce8e6e8f8.
    
    Reported-by: mikulas@twibright.com
    Backport-to: 2.1

commit b5e1d91154778f076042e9ea73723a21c0ad690b
Author: Boris.Dergachov <admin@froexilize.com>
Date:   Mon Sep 2 11:11:58 2019 +0300

    Fixes spelling

commit 620a3fa1d514a0020c17a9a1119400dcdbd97d7a
Author: yuangongji <yuangongji@foxmail.com>
Date:   Thu Aug 29 19:40:10 2019 +0800

    Doxygen documentation improvements
    
    - Documentation for `bufferevent_compat.h` and `rpc.h` is not generated
      since the `@file` command is missing. It can be fixed by adding
      `@file` in file comment block.
    - The briefs of buffer.h,bufferevent.h and some other files are missing.
      Adding `@brief` command can fix it.
    - The parameters in the function declaration are different from the
      parameters following the `@param` command.We should change them to the
      same.
    - Documentation of `watch.h` is not generated since `watch.h` has not
      been added to the Doxyfile `INPUT` tag.
    
    - Add link to the watch.h in event.h

commit 6f970267b6ba68c9dd9090d789c928529745dc68
Author: yuangongji <yuangongji@foxmail.com>
Date:   Wed Aug 28 11:41:53 2019 +0800

    eliminate some C4267 warnings in Windows

commit f9c6a14ee089452c74e492edc674260a3717763e
Author: yuangongji <yuangongji@foxmail.com>
Date:   Fri Aug 23 22:31:28 2019 +0800

    autotools: attach doxygen target into all target
    
    v2: disable man pages by default

commit 1d1c19091f13b7e19015698a23f454aa85f17ac3
Author: yuangongji <yuangongji@foxmail.com>
Date:   Fri Aug 23 21:48:05 2019 +0800

    cmake: attach doxygen target into all target
    
    v2: Disable non-html generator for doxygen by default
    v3: convert cmake option to doxygen config

commit 445027a5dcfe0acce431b7d4065d2ac1f6b270d7
Author: Jan Kasiak <jan@cybojanek.net>
Date:   Thu Aug 22 16:36:12 2019 -0400

    Fix memory corruption in EV_CLOSURE_EVENT_FINALIZE with debug enabled
    
    Call event_debug_note_teardown_ before evcb_evfinalize to avoid possible
    UAF (if finalizer free's event).

commit 70daa93a514075eb0102eec4c6e5002b114264a9
Author: Jan Kasiak <jan@cybojanek.net>
Date:   Tue Aug 27 01:00:56 2019 -0400

    test: prevent duplicate event_enable_debug_mode() for TT_ENABLE_DEBUG_MODE

commit 6186d3126f124494dd90b14f62c17b47f7a7f484
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Aug 26 22:43:35 2019 +0300

    test: introduce TT_ENABLE_DEBUG_MODE flag

commit f4e3c014d5996c8ed7744aa02dd03c217835351d
Author: yuangongji <yuangongji@foxmail.com>
Date:   Tue Aug 20 20:05:25 2019 +0800

    travis-ci: add openssl1.1 into travis build matrix
    
    Fixes: #705

commit 7d71214e02646a31eede66ad5badf695a2ab2058
Author: David Disseldorp <ddiss@samba.org>
Date:   Wed Aug 21 01:10:19 2019 +0200

    sample/http-server: fix parameter parsing
    
    argv[1] is currently unconditionally passed as the docroot to
    send_document_cb(). This is broken if any optional parameters are
    provided, such as -p <port>.
    
    Signed-off-by: David Disseldorp <ddiss@samba.org>

commit a0276292a5e783c30643992897c7597f0db2cc96
Author: David Disseldorp <ddiss@samba.org>
Date:   Wed Aug 21 01:00:07 2019 +0200

    sample/signal-test: fix use of uninitialized variable
    
    signal_int is uninitialized in the !base error path.
    
    Signed-off-by: David Disseldorp <ddiss@samba.org>

commit 759573c9e17b0397aa1c6d2616c743551b8ca78d
Author: yuangongji <yuangongji@foxmail.com>
Date:   Wed Aug 14 19:47:45 2019 +0800

    sample: fix 'INFINITY' undeclared error

commit 80009c50e569e6eb74f188046d5ad51abce0749b
Author: yuangongji <yuangongji@foxmail.com>
Date:   Tue Aug 13 17:10:37 2019 +0800

    becat: avoid using anonymous structures
    
    It hasn't been part of the C standard until C11, although it is very
    useful GCC extension it is better to avoid using this in cross platform
    projects like libevent.

commit 9c151f3c3413c5ee6bad498aca84be481196bbc7
Author: dota17 <chenguopingdota@163.com>
Date:   Tue Aug 6 18:19:15 2019 +0800

    Fix typos in comments (sample/test/event-internal.h)

commit 101fbe31005c07cde0fdbdb38a4f6c3499e07edc
Author: dota17 <chenguopingdota@163.com>
Date:   Thu Aug 8 21:28:20 2019 +0800

    sample/signal-test: add NULL checks
    
    Fixes: #865

commit 4b1d797627e0c53082536c2ca5077e6685e08b9b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Aug 9 12:25:21 2019 +0300

    Add becat into .gitignore

commit 3f09e9230ab45008e0016b63fc1d3b05eb23e6ec
Author: yuangongji <yuangongji@foxmail.com>
Date:   Thu Aug 8 21:48:21 2019 +0800

    Change the minimum version of automake to 1.13 and autoconf to 2.67
    
    When I run make check via automake with a version of 1.12.6 or lower, I got this error:
    
        /bin/sh: line 9: ./test_runner_epoll: No such file or directory
        FAIL: test_runner_epoll
        /bin/sh: line 9: ./test_runner_select: No such file or directory
        FAIL: test_runner_select
        /bin/sh: line 9: ./test_runner_kqueue: No such file or directory
        FAIL: test_runner_kqueue
        /bin/sh: line 9: ./test_runner_evport: No such file or directory
        FAIL: test_runner_evport
        /bin/sh: line 9: ./test_runner_devpoll: No such file or directory
        FAIL: test_runner_devpoll
        /bin/sh: line 9: ./test_runner_poll: No such file or directory
        FAIL: test_runner_poll
        /bin/sh: line 9: ./test_runner_win32: No such file or directory
        FAIL: test_runner_win32
        /bin/sh: line 9: ./test_runner_timerfd: No such file or directory
        FAIL: test_runner_timerfd
        /bin/sh: line 9: ./test_runner_changelist: No such file or directory
        FAIL: test_runner_changelist
        /bin/sh: line 9: ./test_runner_timerfd_changelist: No such file or directory
        FAIL: test_runner_timerfd_changelist
    
    Open the Makefile generated by command ./autogen.sh && ./configure
    I can see the errors are caused by this line:
    
        if $(TESTS_ENVIRONMENT) $${dir}$$tst $(AM_TESTS_FD_REDIRECT); then
    
    $${dir}$$tst will expand to ./test_runner_epoll, but test_runner_epoll is only a target in test/include.am,
    not a file, so it print:
    
        /bin/sh: line 9: ./test_runner_epoll: No such file or directory.
    
    It seems like a bug in automake 1.12.6.
    The errors will disappear if I simply upgrade automake to 1.13, and upgrade autoconf to 2.65
    (2.65 is the lowest version dependent by automake-1.13).
    
    When I build with automake-1.13 and autoconf-2.66, I got another error:
    
        configure.ac:667: error: AC_CHECK_SIZEOF: requires literal arguments
    
    The code in configure.ac line 667 is :
    
        AC_CHECK_SIZEOF(void *)
    
    It is a bug in autoconf-2.66 :
    http://gnu-autoconf.7623.n7.nabble.com/AC-CHECK-SIZEOF-int-is-error-in-autoconf-2-66-td13537.html
    
    Finally, everything works fine when using automake-1.13 and autoconf-2.67.
    Refs: #858

commit f05ba671931e2b4e38459899f6f63f79f99869fe
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Aug 3 14:32:21 2019 +0300

    Add Uninstall.cmake.in into dist archive
    
    Fixes: #863

commit bdcade47224f154052c927aed3c363a18b37112e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jul 31 10:34:38 2019 +0300

    buffer: fix possible NULL dereference in evbuffer_setcb() on ENOMEM
    
    [ @azat:
    
      - add return heredoc for evbuffer_setcb()
      - add unit test with event_set_mem_functions()
      - look through the report from abi-compliance-checker/abi-dumper
    ]
    
    Closes: #855

commit 1947dd0ddbced0d8f9891656c820353f82261c52
Author: yuangongji <yuangongji@foxmail.com>
Date:   Sat Jul 27 22:41:39 2019 +0800

    Change autoconf version to 2.62 and automake version to 1.11.2
    
    On my computer, the version of autoconf is 2.59 and automake is 1.9
    I build with autogen.sh & configure & make and failed.
    
    I find In Makefile.am:
        include/event2/event-config.h: config.h make-event-config.sed
            $(AM_V_GEN)test -d include/event2 || $(MKDIR_P) include/event2
            $(AM_V_at)$(SED) -f $(srcdir)/make-event-config.sed < config.h > $@T
            $(AM_V_at)mv -f $@T $@
    
    There are three undefined variables: MKDIR_P, AM_V_GEN and AM_V_at.
    Then I tried:
    - autoconf-2.60 / automake-1.10
    - autoconf-2.61 / automake-1.11
    - autoconf-2.62 / automake-1.11.2
    
    And only autoconf-2.62 & automake-1.11.2 is ok.
    
    Therefore, I recommend changing the autoconf version from 2.59 to 2.62
    and automake version from 1.9 to 1.11.2.
    
    Plus autoconf 2.59 is too old - 2003.12.16 [1], so as automake 1.9 -
    2004.08.11 [2], while $(AM_V_GEN)/$(AM_V_at) had been introduced in
    371a1237 back in 2012.
    
      [1]: http://ftp.gnu.org/gnu/autoconf/
      [1]: http://ftp.gnu.org/gnu/automake/
    
    Fixes: 371a1237 ("Make quiet build even quieter")

commit 55d1e20e1a5dbd1188f4143968f7cafee33edc0d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jul 12 00:00:12 2019 +0300

    cmake: install shared library only if it was requested
    
      $ cmake -DEVENT__LIBRARY_TYPE=static ..
      ...
      CMake Error:
      Error evaluating generator expression:
    
        $<TARGET_FILE_DIR:event_core_shared>
    
      No target "event_core_shared"
    
    Fixes: #853
    Fixes: 669a53f3 ("cmake: set library names to be the same as with autotools")

commit 7806f3ec78368d69bfcf53cdffcdb424a528a113
Author: yuangongji <yuangongji@foxmail.com>
Date:   Wed Jul 3 00:27:22 2019 +0800

    Missing <winerror.h> on win7/MinGW(MINGW32_NT-6.1)/MSYS

commit 669a53f341e192657140952cfe025c260da2b1c1
Author: yuangongji <yuangongji@foxmail.com>
Date:   Wed Jul 10 00:30:12 2019 +0800

    cmake: set library names to be the same as with autotools
    
    libtool has VERSION_INFO [1], cmake has SOVERSION/VERSION instead
    (although it has different format). Also libtool has RELEASE [2] while
    cmake do not have analog yet [3], hence manual symlinks should be
    created.
    
      [1]: https://www.gnu.org/software/libtool/manual/html_node/Libtool-versioning.html
      [2]: https://www.gnu.org/software/libtool/manual/html_node/Release-numbers.html
      [3]: https://gitlab.kitware.com/cmake/cmake/issues/17652
    
    Plus osx has compatibility_version/current_version dylib properties and
    cmake do not have separate properties for them [4], hence manual LINK_FLAGS.
    And also there INSTALL_NAME_DIR property which should be adjusted too.
    
      [4]: https://public.kitware.com/Bug/view.php?id=4383
    
    So after all changes, here is an example before/after for osx and linux:
    
      # osx
        # autotools
        .libs/libevent_pthreads-2.2.1.dylib
        .libs/libevent_pthreads.dylib -> libevent_pthreads-2.2.1.dylib
        /usr/local/lib/libevent_pthreads-2.2.1.dylib (compatibility version 2.0.0, current version 2.0.0)
        # cmake
          # before patch
          lib/libevent_pthreads.2.2.0.dylib
          lib/libevent_pthreads.dylib -> libevent_pthreads.2.2.0.dylib
          @rpath/libevent_pthreads.2.2.0.dylib (compatibility version 2.2.0, current version 0.0.0)
          # after patch
          lib/libevent_pthreads-2.2.1.dylib
          lib/libevent_pthreads.dylib -> libevent_pthreads-2.2.1.dylib
          /vagrant/.cmake/inst/lib/libevent_pthreads-2.2.1.dylib (compatibility version 2.0.0, current version 2.0.0)
    
      # linux
        # autotools
        .libs/libevent_pthreads-2.2.so.1 -> libevent_pthreads-2.2.so.1.0.0
        .libs/libevent_pthreads-2.2.so.1.0.0
        .libs/libevent_pthreads.so -> libevent_pthreads-2.2.so.1.0.0
        # cmake
          # before patch
          lib/libevent_pthreads.so -> libevent_pthreads.so.2.2.0
          lib/libevent_pthreads.so.2.2.0
          # after patch
          lib/libevent_pthreads-2.2.so -> libevent_pthreads-2.2.so.1
          lib/libevent_pthreads-2.2.so.1 -> libevent_pthreads-2.2.so.1.0.0
          lib/libevent_pthreads-2.2.so.1.0.0
          lib/libevent_pthreads.so -> libevent_pthreads-2.2.so.1.0.0
    
    Closes: #838 (cherry-picked)
    Closes: #760

commit 41c95abb9930b0c13c238e110b857acb810ad7b9
Author: Keith Smiley <keithbsmiley@gmail.com>
Date:   Mon Jul 8 14:06:55 2019 -0700

    Enable _GNU_SOURCE for Android
    
    When targeting the Android NDK _GNU_SOURCE is not enabled by default:
    
    ```
     /*
      * With bionic, you always get all C and POSIX API.
      *
      * If you want BSD and/or GNU extensions, _BSD_SOURCE and/or _GNU_SOURCE are
      * expected to be defined by callers before *any* standard header file is
      * included.
      *
      * In our header files we test against __USE_BSD and __USE_GNU.
      */
     #if defined(_GNU_SOURCE)
     #  define __USE_BSD 1
     #  define __USE_GNU 1
     #endif
    ```
    
    Because of this `pipe2` is not available:
    
    ```
     #if defined(__USE_GNU)
     int pipe2(int __fds[2], int __flags) __INTRODUCED_IN(9);
     #endif
    ```
    
    The function used to check if it does exist:
    
    ```
    CHECK_FUNCTION_EXISTS_EX(pipe2 EVENT__HAVE_PIPE2)
    ```
    
    Just check that the _linking_ succeeds, which it does, it's just not
    visible in the import, leading to a warning (or error):
    
    ```
    evutil.c:2637:6: error: implicit declaration of function 'pipe2' is invalid in C99 [-Werror,-Wimplicit-function-declaration]
            if (pipe2(fd, O_NONBLOCK|O_CLOEXEC) == 0)
                ^
    ```
    
    When targeting the NDK it should be safe to always opt into this. Clang
    would pass the right flag for us automatically _if_ the source was C++
    instead of C.

commit 0d7d85c2083f7a4c9efe01c061486f332b576d28
Author: Keith Smiley <keithbsmiley@gmail.com>
Date:   Tue Jul 2 10:47:47 2019 -0700

    Enable kqueue for APPLE targets
    
    The CMAKE_CROSSCOMPILING variable is not set for Apple targets seemingly
    because of cmake implementation details (more info
    https://cmake.org/cmake/help/latest/variable/CMAKE_CROSSCOMPILING.html).
    Since Apple targets have working kqueue implementations this check makes
    sure we enable it always when those are the targets, without users
    having to explicitly set EVENT__HAVE_WORKING_KQUEUE

commit 497ef904d544ac51de43934549dbeccce8e6e8f8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jul 1 23:54:02 2019 +0300

    Warn if forked from the event loop during event_reinit()
    
    Calling fork() from the event loop is not a great idea, since at least
    it shares some internal pipes (for handling signals) before
    event_reinit() call
    
    Closes: #833

commit 5388a002f5ad3bdfc756584dc58485fc3db135d0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jun 26 09:36:49 2019 +0300

    autotools: do not install bufferevent_ssl.h under --disable-openssl
    
    Refs: https://github.com/libevent/libevent/issues/760#issuecomment-502345788

commit 69466cde0382ab3df12e3a011720f87af3998081
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jun 26 01:27:20 2019 +0300

    cmake: link against shell32.lib/advapi32.lib
    
    Fixes: #844
    Refs: #760 (cmake-vs-autotools)

commit 97488b2c28473b6be339e4c2325372d2425fe0aa
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jun 26 01:20:53 2019 +0300

    Add README.md/Documentation into dist archive
    
    Fixes: #841

commit bd2de4836b6b48d64da0cf010727209ad259a4f4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jun 26 00:59:41 2019 +0300

    Require cmake >= 3.1.2 (for correct openssl 1.0.2 detection)
    
    @ygj6 reported:
      "My platform is MacOS 10.13.5, This problem only happens on Mac.
    
       As written in the file CMakeLists.txt, the minimum required version of cmake is 3.1:
         cmake_minimum_required(VERSION 3.1 FATAL_ERROR)
       So I built this project with cmake-3.1.0, but I got the following errors:
    
           CMake Error at /usr/local/cmake-3.1.0/share/cmake/Modules/FindOpenSSL.cmake:293 (list):
             list GET given empty list
           Call Stack (most recent call first):
             CMakeLists.txt:824 (find_package)
    
           CMake Error at /usr/local/cmake-3.1.0/share/cmake/Modules/FindOpenSSL.cmake:294 (list):
             list GET given empty list
           Call Stack (most recent call first):
             CMakeLists.txt:824 (find_package)
    
           CMake Error at /usr/local/cmake-3.1.0/share/cmake/Modules/FindOpenSSL.cmake:296 (list):
             list GET given empty list
           Call Stack (most recent call first):
             CMakeLists.txt:824 (find_package)
    
           CMake Error at /usr/local/cmake-3.1.0/share/cmake/Modules/FindOpenSSL.cmake:298 (list):
             list GET given empty list
           Call Stack (most recent call first):
             CMakeLists.txt:824 (find_package)
    
       I googled this error and got this answer:
         https://bugs.archlinux.org/task/43688
    
       It is a bug in FindOpenSSL.cmake on cmake-3.1.0 and fixed on cmake-3.1.2 .
       Of course, It was successful when rebuilding with cmake-3.1.2 .
       So I suggest setting the minimum version required for cmake to 3.1.2 or higher.
       "
    
    Closes: #845
    Refs: https://github.com/Kitware/CMake/commit/de4ccee75a89519f95fcbcca75abc46577bfefea

commit 538141eb7e590bc94c043b43b5e5483b13bc9c5e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jun 15 23:18:05 2019 +0300

    evdns: add new options -- so-rcvbuf/so-sndbuf
    
    This will allow to customize SO_RCVBUF/SO_SNDBUF for nameservers in this
    evdns_base, you may want to adjust them if the kernel starts dropping
    udp packages.

commit 4f6fc092b3ee0b996b50df3c0d22b356f0a9236c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jun 15 00:16:00 2019 +0300

    evutil: drop force_check from evutil_check_interfaces() (unused)

commit 0de2b1455b348466e8e29704ba8760127cd63528
Author: jeremyerb <33230155+jeremyerb@users.noreply.github.com>
Date:   Fri Jun 14 10:19:51 2019 -0400

    evutil: set the have_checked_interfaces in evutil_check_interfaces()
    
    Closes: #836 (cherry-picked)
    Fixes: #834

commit 7201062f3ef505a77baa6ccaf1cf73812462308a
Author: yuangongji <yuangongji@foxmail.com>
Date:   Sun Jun 9 20:15:37 2019 +0800

    cmake: add missing autotools targets (doxygen, uninstall, event_rpcgen.py)
    
    Close: #832 (cherry-picked)

commit 0374b55942e533a3c3997439481a8d05d6c8f729
Author: Fabrice Fontaine <fontaine.fabrice@gmail.com>
Date:   Sat Jun 8 23:44:37 2019 +0200

    m4/libevent_openssl.m4: fix detection of openssl
    
    Since commit 506df426dbeb0187bbd3654bd286b4100628fb16, OPENSSL_INCS is
    added to CPPFLAGS without any white space, as a result openssl detection
    fails on:
    configure:10395: checking openssl/ssl.h usability
    configure:10395: /home/fabrice/buildroot-test/buildroot/output/host/bin/riscv32-linux-gcc -c -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os   -Wall -fno-strict-aliasing -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64-I/home/fabrice/buildroot-test/buildroot/output/host/bin/../riscv32-buildroot-linux-gnu/sysroot/usr/include  conftest.c >&5
    <command-line>:0:0: warning: "_FILE_OFFSET_BITS" redefined
    <command-line>:0:0: note: this is the location of the previous definition
    <command-line>:0:23: error: division by zero in #if
    
    Signed-off-by: Fabrice Fontaine <fontaine.fabrice@gmail.com>

commit b002f04f03ee924f7cdbe44483a74d66be2982cd
Author: yuangongji <yuangongji@foxmail.com>
Date:   Mon Jun 3 23:22:35 2019 +0800

    doc: cmake command on Windows
    
    Closes: #825 (cherry-pick)

commit 2d4ac10ea41f136bfe5a21963c2d17195c383c24
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jun 2 21:51:35 2019 +0300

    becat: remove extra SSL_CTX options usage [ci skip]
    
    Because:
    - this do not affects performance
    - this breaks builds for with older openssl

commit 7d569b0fafe76e9036695ccc9d22d2195c214bce
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jun 2 20:20:02 2019 +0300

    Fix detection of the __has_attribute() for apple clang [ci skip]
    
    Fixes build on the next osx env:
    - Mac OS 10.9/clang 600
    - Mac OS 10.8/clang 500
    
    Refs: https://github.com/libevent/libevent/issues/447#issuecomment-497908488

commit 891dd1880fed8c5e1e98f122daeb1ae8414f6b1c
Author: wenyg <42307321+wenyg@users.noreply.github.com>
Date:   Thu May 30 17:38:49 2019 +0800

    https-client: correction error checking
    
    When connecting to a non-existent HTTPS service, the "req" is not null
    but the "evhttp_request_get_response_code(req)" is zero.
    
    Closes: #822 (cherry-picked)

commit c03dabd76aced01a9c8d253381c2ed6f3ad46b4f
Author: yuangongji <yuangongji@foxmail.com>
Date:   Fri May 31 02:12:55 2019 +0800

    typo error in header file

commit 236762a30d3e49bde8256876758539be4b4788a8
Author: Jan Beich <jbeich@FreeBSD.org>
Date:   Tue May 28 12:45:59 2019 +0000

    cmake: limit MSVC to Clang-CL

commit 1c573ab3a9037c560981ea325170ca6044c2dff6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 25 23:41:38 2019 +0300

    http: do not name variable "sun" since this breaks solaris builds
    
      -bash-3.2$ /opt/csw/bin/gcc -xc /dev/null -dM -E | grep '#define sun'
      #define sun 1

commit 51ac04ac62501311bcfd09919f663ea95aec720c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 25 17:29:25 2019 +0300

    test: mark bev_connect_hostname() as static (to avoid prototype requirement)

commit 49a367e6cfb9b9bc8d1b04cbfb834ec3e0c1d84d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 25 17:28:53 2019 +0300

    cmake: add -Wmissing-prototypes (like autotools has)

commit 4c774b6ceb94d7c40c459e39c82ae7eb782823f8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 21 10:59:05 2019 +0300

    time-test: disable buffering (mostly for windows)

commit 3b1864b625ec37c3051512845982f347f4cc5621
Merge: c8b403a8 401bd1c0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu May 16 10:25:50 2019 +0300

    Merge branch 'evbuffer-fixes-806-v2'
    
    * evbuffer-fixes-806-v2:
      evbuffer: fix last_with_datap after prepend with empty chain
      test: regression for evbuffer_expand_fast_() with invalid last_with_datap
      test: cover adjusting of last_with_datap in evbuffer_prepend()
    
    Fixes: #806

commit 401bd1c09e9753ce997539c177cb1e48025a7343
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 11 00:17:03 2019 +0300

    evbuffer: fix last_with_datap after prepend with empty chain
    
    last_with_datap should be adjusted only if it buf->first *was* not
    empty, otherwise last_with_datap should point to the prepended chain.

commit 244cacaf8ccfe8b8978df20791998bbc92225dc8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu May 16 09:42:41 2019 +0300

    test: regression for evbuffer_expand_fast_() with invalid last_with_datap
    
    Before the fix:
      $ regress --no-fork evbuffer/reserve_invalid_last_with_datap
      evbuffer/empty_chain_expand: [err] ../buffer.c:2138: Assertion chain == buf->first failed in evbuffer_expand_fast_
      Aborted (core dumped)
    
    This is the a shorter version of test from the #806 (with some
    comments).

commit 98ca307749606d4208c3f868fbc08de3a9f33994
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu May 16 09:50:43 2019 +0300

    test: cover adjusting of last_with_datap in evbuffer_prepend()
    
    Before the fix:
      $ regress evbuffer/empty_reference_prepend..
      evbuffer/empty_reference_prepend: [forking]
        FAIL ../test/regress_buffer.c:104: assert(chain == buf->first)
        FAIL ../test/regress_buffer.c:2291: Buffer format invalid
        [empty_reference_prepend FAILED]
      evbuffer/empty_reference_prepend_buffer: [forking] OK
      1/2 TESTS FAILED. (0 skipped)

commit c8b403a81bda3a9603ffda9c393a823719fda196
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed May 15 21:29:03 2019 +0300

    Add getopt into dist archive
    
    Fixes: #815

commit 5e137f37761a7712b085a38e365997a8591c15f7
Author: Joseph Spadavecchia <jspadavecchia@bloxx.com>
Date:   Mon Dec 8 17:32:07 2014 +0000

    Implement bufferevent_socket_connect_hostname_hints()
    
    So that ai_flags (such as AI_ADDRCONFIG) can be specified.
    
    Closes: #193 (cherry-picked with conflicts resolved)

commit 76eded24d3b0c3fc48c5a888906cc9043223101b
Merge: 2707a4ff c4de6024
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 12 19:06:43 2019 +0300

    Merge branch 'issue-807-accept4-getnameinfo-AF_UNIX'
    
    * issue-807-accept4-getnameinfo-AF_UNIX:
      http-server: add usage/help dialog
      http: avoid use of uninitialized value for AF_UNIX/AF_LOCAL sockaddr
      http-server: add ability to bind to unix-socket
      build: struct sockaddr_un detection (sys/un.h, afunix.h)
    
    Fixes: #807

commit c4de602433d6a39aa2f4e26d4c48734900acd79b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 12 18:25:37 2019 +0300

    http-server: add usage/help dialog

commit ad51a3c1bac21e14591aafe3cc10292a6b48b5ad
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 12 15:19:31 2019 +0300

    http: avoid use of uninitialized value for AF_UNIX/AF_LOCAL sockaddr
    
    unixsock peer does not have sun_path initialized.

commit 737d1beb14423dc212b0c53edf536b3172c87571
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 11 18:49:28 2019 +0300

    http-server: add ability to bind to unix-socket
    
    Usage example:
      http-server -u -U /tmp/sock /tmp/no-such-dir
      curl -v --unix-socket /tmp/sock 127.1:8080/foo

commit da11217544727cda01a23db2198d24a591d993a3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 12 16:12:06 2019 +0300

    build: struct sockaddr_un detection (sys/un.h, afunix.h)
    
    - On UNIX:     sys/un.h
    - Since win10: afunix.h
    
    And windows has AF_UNIX but do not have sockaddr_un (before windows
    build 17061 [1]), hence the sockaddr_un detection.
    
      [1]: https://devblogs.microsoft.com/commandline/af_unix-comes-to-windows/

commit 2707a4ffabe539999f37a0364f7b0ef44a90589a
Author: Tobias Stoeckmann <tobias@stoeckmann.org>
Date:   Fri May 10 23:54:14 2019 +0200

    kqueue: Avoid undefined behaviour.
    
    As ploxiln pointed out in pull request 811 the check "newsize < 0"
    is undefined behaviour (signed int overflow).
    
    Follow the advice and check kqop->changes_size instead.
    
    Signed-off-by: Tobias Stoeckmann <tobias@stoeckmann.org>
    Closes: #813 (cherry-picked)

commit cf8acae36a580935c42228f3d30f3e96c8a3ef59
Author: Tobias Stoeckmann <tobias@stoeckmann.org>
Date:   Tue May 7 20:53:17 2019 +0200

    Prevent integer overflow in kq_build_changes_list.
    
    On amd64 systems with kqueue (e.g. *BSD systems) an integer overflow
    could be triggered with an excessively huge amount of events.
    
    Signed-off-by: Tobias Stoeckmann <tobias@stoeckmann.org>

commit 8701d0d3d2519800f46ab031a0b0d887b6eb1359
Author: zhuizhuhaomeng <zhuizhuhaomeng@gmail.com>
Date:   Mon May 6 11:37:02 2019 +0800

    evdns: fix lock/unlock mismatch in evdns_close_server_port()
    
    Closes: #809 (cherry-picked)

commit c6becb26cad8dab2668fe3d913e5ee757bade2fd
Merge: 176fd566 9b2060c9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Apr 30 08:43:27 2019 +0300

    Merge remote-tracking branch 'official/pr/804'
    
    * official/pr/804:
      Added test for evmap slot validations.
      Prevent endless loop in evmap_make_space.
      Enforce limit of NSIG signals.

commit 9b2060c97a83e85dc54dc5e5b2d958d205bb5aff
Author: Tobias Stoeckmann <tobias@stoeckmann.org>
Date:   Wed Apr 24 22:55:24 2019 +0200

    Added test for evmap slot validations.
    
    Signed-off-by: Tobias Stoeckmann <tobias@stoeckmann.org>

commit bd817009d5dba7dc5273e6a05e2133660d4c4ac3
Author: Tobias Stoeckmann <tobias@stoeckmann.org>
Date:   Wed Apr 24 22:54:04 2019 +0200

    Prevent endless loop in evmap_make_space.
    
    If slot is larger than INT_MAX / 2, then the loop which increases
    nentries until it is larger than slot would never return.
    
    Also make sure that nentries * msize will never overflow INT_MAX.
    
    Signed-off-by: Tobias Stoeckmann <tobias@stoeckmann.org>

commit 4a1088baf40928673317f10614fb15da9933ad4e
Author: Tobias Stoeckmann <tobias@stoeckmann.org>
Date:   Mon Apr 22 19:58:56 2019 +0200

    Enforce limit of NSIG signals.
    
    It doesn't make sense to allow a signal number higher than NSIG.
    
    The NSIG check already exists in signal.c for internally used
    functions.
    
    As this is a programming error of libevent consumers, this is a
    purely defensive mechanism.
    
    Signed-off-by: Tobias Stoeckmann <tobias@stoeckmann.org>

commit 176fd5665512db95b1cf38fc647a7c706d80c14d
Author: Tobias Stoeckmann <tobias@stoeckmann.org>
Date:   Tue Apr 16 21:12:21 2019 +0200

    Protect min_heap_push_ against integer overflow.
    
    Converting unsigned to size_t for size of memory objects allows
    proper handling of very large heaps on 64 bit systems.
    
    Signed-off-by: Tobias Stoeckmann <tobias@stoeckmann.org>
    Closes: #799 (cherry-picked)

commit 16d8564a2cd2ec665b577f39eea6583d4b651e92
Author: linxiaohui <llinxiaohui@126.com>
Date:   Thu Apr 18 17:10:33 2019 +0800

    le-proxy: initiate use of the Winsock DLL
    
    Closes: #803 (cherry-picked)

commit 1cd8830de27c30c5324c75bfb6012c969c09ca2c
Author: Dan Rosen <mergeconflict@google.com>
Date:   Wed Apr 17 15:44:59 2019 -0400

    evwatch: fix race condition
    
    There was a race between event_base_loop and evwatch_new (adding a
    prepare/check watcher while iterating over the watcher list). Only
    release the mutex immediately before invoking each watcher callback,
    and reacquire it immediately afterwards (same as is done for normal
    event handlers).

commit 04563d59d25404d10cda32c78831bdb3f6cf4c0c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Apr 13 13:22:55 2019 +0300

    Ignore build files for autotools build in subfolder too

commit c80f6be1e43f60f1cdd6c4bc725929b3f2d15acc
Merge: 799053db 8dcb94a4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Apr 11 22:52:10 2019 +0300

    Merge branch '21_http_extended_method'
    
    * 21_http_extended_method:
      Added http method extending
      http: Update allowed_methods field from 16 to 32bits.
    
    Fixes: #327

commit 8dcb94a4ca0999bdada6baa2a986f4c00a922060
Author: Thomas Bernard <miniupnp@free.fr>
Date:   Fri Jan 8 13:36:20 2016 -0800

    Added http method extending
    
    User can define his own response method by calling
    evhttp_set_ext_method_cmp() on the struct http, or
    evhttp_connection_set_ext_method_cmp() on the connection.
    
    We expose a new stucture `evhttp_ext_method` which is passed to the
    callback if it's set. So any field can be modified, with some exceptions
    (in evhttp_method_):
    
    If the cmp function is set, it has the ability to modify method, and
    flags. Other fields will be ignored. Flags returned are OR'd with the
    current flags.
    
    Based on changes to the #282 from: Mark Ellzey <socket@gmail.com>

commit 96e56beb9426df17d9a75483f7c6b438a6577cf4
Author: Thomas Bernard <miniupnp@free.fr>
Date:   Tue Apr 2 15:43:35 2019 +0200

    http: Update allowed_methods field from 16 to 32bits.

commit 799053db8a2fc0b185769a1cb7b41b46634ed1de
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Apr 8 22:27:33 2019 +0300

    http: replace EVHTTP_REQ_UNKNOWN_ with 0
    
    From the server perspective the evhttp_response_phrase_internal() should
    not be called with 0 before this patch, it will be called with
    EVHTTP_REQ_UNKNOWN_ hence this patch should not change behavior.
    
    Fixes: 68eb526d7b ("http: add WebDAV methods support")
    Fixes: #789
    Fixes: #796
    Reported-by: Thomas Bernard <miniupnp@free.fr>

commit 55f9863b18fe21ddd220d98941b7ac777593dde5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Apr 4 09:09:09 2019 +0300

    Remove experimental note for finalizers API

commit 428f36e5dd8f2a45ea5795fb9f35dd27a776e3a8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Apr 3 23:22:54 2019 +0300

    https-client: do not try to free not initialized base
    
    Otherwise:
      $ https-client --help
      Syntax:
         https-client -url <https-url> [-data data-file.bin] [-ignore-cert] [-retries num] [-timeout sec] [-crt crt]
      Example:
         https-client -url https://ip.appspot.com/
      [warn] event_base_free_: no base to free

commit 35caeff5deacd5e081a4e6220b9226b61e24208d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Apr 3 23:20:06 2019 +0300

    http: drop unused internal macros

commit 2f184f8bbf23377bddc8daa1a2c7b40735ee7e2a
Author: Dan Rosen <mergeconflict@google.com>
Date:   Tue Mar 26 13:33:57 2019 -0400

    evwatch: Add "prepare" and "check" watchers.
    
    Adds two new callbacks: "prepare" watchers, which fire immediately
    before we poll for I/O, and "check" watchers, which fire immediately
    after we finish polling and before we process events. This allows other
    event loops to be embedded into libevent's, and enables certain
    performance monitoring.
    
    Closes: #710

commit 47d348a63130c91f2a6aadef291ff5687275df72
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Apr 3 07:26:21 2019 +0300

    Disable logging for tests that assume printing warnings
    
    To avoid possible confusion
    
    But there is still one test that has some messages on windows:
      main/methods
    
    Because this test needs >1 of avaiable methods, otherwise it will warn.

commit d4c7545017c2e3255c562ffe985532016534f1c8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 25 11:13:03 2019 +0300

    Remove manually written nmake makefiles (cmake should be used instead)
    
    This nmake stuff is out dated, and nobody wants to support it anyway.

commit 93a925474d22b94e5ad75a48656033e55efe9055
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Apr 2 23:25:08 2019 +0300

    appveyor: check intermediate powershell commands exit codes and terminate early
    
    Otherwise build errors will be ignored, i.e. if build fails but regress
    binary exists (copied from artifacts) it will be runned instead of newly
    compiled.

commit da33f768e451f1b5722b7426e03c87e260ee43d0
Merge: e5b8f4c1 991f0ed3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Apr 1 02:42:55 2019 +0300

    Merge branch 'fix-uchex-warnings'
    
    There is one more report that is false positive, see [1]:
      "In bufferevent_openssl.c, pointer wm is dereferenced on line 871
    before it is null checked on line 873."
    
      [1]: https://github.com/libevent/libevent/issues/382#issuecomment-238081938
    
    * fix-uchex-warnings:
      evdns: do not check server_req twice
      evrpc: do not check req twice
    
    Fixes: #382

commit 991f0ed3d86ffca0c017ab83cd239289912bdaad
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Apr 1 02:41:17 2019 +0300

    evdns: do not check server_req twice
    
    Reported by µchex:
      "In evdns.c, pointer server_req is null checked on line 1289 after it
    is dereferenced above. Since server_req was already null checked above
    on line 1243, there is no risk of crashing and the only bug is the
    redundant null check (and indentation) on line 1289.
    "

commit 7a8cc11406db7f3ea70425b71e31ece0b07e9e08
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Apr 1 02:37:41 2019 +0300

    evrpc: do not check req twice
    
    reported by µchex:
      "In evrpc.c, pointer req is dereferenced on line 881 before it is null
    checked on line 894."

commit e5b8f4c1925867d8e4cd7dc0390e5141d7ef1106
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Apr 1 01:47:00 2019 +0300

    evdns: add DNS_OPTION_NAMESERVERS_NO_DEFAULT/EVDNS_BASE_NAMESERVERS_NO_DEFAULT
    
    - DNS_OPTION_NAMESERVERS_NO_DEFAULT
      Do not "default" nameserver (i.e. "127.0.0.1:53") if there is no nameservers
      in resolv.conf, (iff DNS_OPTION_NAMESERVERS is set)
    
    - EVDNS_BASE_NAMESERVERS_NO_DEFAULT
      If EVDNS_BASE_INITIALIZE_NAMESERVERS isset, do not add default
      nameserver if there are no nameservers in resolv.conf (just set
      DNS_OPTION_NAMESERVERS_NO_DEFAULT internally)
    
    Fixes: #569

commit 3e0dc1a6ab4b7024b93dc44c1bb79df0ef637fc0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Apr 1 01:40:18 2019 +0300

    evdns: add descriptions for DNS_OPTION_*/DNS_OPTIONS_ALL

commit 2ae875ed1216a8896d8af0414cb4efbcb907bae5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 25 01:40:46 2019 +0300

    Link test/regress with event_core/event_extra over event
    
    Due to regress linked with event and event_core (both of them includes
    evthread.c) there will be two different evthread_id_fn_ variables under
    mingw64:
      evthread_id_fn_: &0x5294f20a8
      evthread_id_fn_: &0x4ba0030a8
    
    And because of this evthread_use_pthreads() can/will set one copy of
    variables while evthread*() functions will access another, which will
    break a lot of things (for example main/del_notify test).
    
    Fixes: #792

commit b8e2f01690c07f7b6eb29d097b30c1640fc9612e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 25 01:41:09 2019 +0300

    signal: guard __cdecl definition with #ifdef
    
    Under mingw64:
      ../signal.c:88:0: warning: "__cdecl" redefined
       #define __cdecl
    
      <built-in>: note: this is the location of the previous definition
    
    https://ci.appveyor.com/project/azat/libevent/builds/23321613#L427

commit 8a674243b444da9e0742ac837334aaf38e6a703a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 24 20:36:16 2019 +0300

    tinytest: fix parsing --timeout argument
    
    Fixes: 15b2f41d ("tinytest: implement per-test timeout (via alarm() under !win32 only)")

commit 15b2f41d748643393b9f95b790d32e6bbbf38062
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 24 16:44:56 2019 +0300

    tinytest: implement per-test timeout (via alarm() under !win32 only)

commit 1f4f8769c4e78b14e6aa21d8300f432f67def8df
Merge: efcc1844 d5b24cc0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Mar 16 17:41:09 2019 +0300

    Merge branch 'buffer-read-size'
    
    And after this patch set default evbuffer max read via bufferevent is
    16K not 4K.
    
    Here is some numbers for the single max read in evbuffer impact:
      function client() { becat "$@" | pv > /dev/null; }
      function server() { cat /dev/zero | becat -l "$@"; }
    
    Plain bufferevent:
    
    - 40K
      $ server -R $((40<<10)) & client -R $((40<<10))
      700MiB/s
    
    - 16K *default now*
      $ server & client
      1.81GiB/s
    
    - 4K
      $ server -R $((4<<10)) & client -R $((4<<10))
      1.05GiB/s
    
    With OpenSSL (-S):
    
    - 40K *default now*
      $ server -S -R $((40<<10)) & client -S -R $((40<<10))
      900MiB/s
    
    - 16K *default now*
      $ server -S & client -S
      745MiB/s
    
    - 4K
      $ server -S -R $((4<<10)) & client -S -R $((4<<10))
      593MiB/s
    
    So as you can see without openssl 16K is faster then 40K/4K, while for
    openssl 40K is still faster then 16K (I guess that this is due to with
    openssl SSL_read() more at at time, while with plain we have some
    allocations splits in evbuffer and maybe due to some buffer in openssl)
    
    * buffer-read-size:
      sample/becat: bufferevent cat, ncat/nc/telnet analog
      Adjust evbuffer max read for bufferevents
      Maximum evbuffer read configuration
      Fix leaks in error path of the bufferevent_init_common_()

commit d5b24cc0c80bddacee0bdb1b1758a115043fb1c9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 5 21:34:31 2019 +0300

    sample/becat: bufferevent cat, ncat/nc/telnet analog

commit 5357c3d62ab3c3b654a14434ba2e573a155f8d91
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Mar 16 17:32:17 2019 +0300

    Adjust evbuffer max read for bufferevents

commit 8c2001e92a6615cc7b4efc8e33cff58c28effd30
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Mar 16 17:09:51 2019 +0300

    Maximum evbuffer read configuration
    
    Before this patch evbuffer always reads 4K at a time, while this is fine
    most of time you can find an example when this will decrease throughput.
    
    So add an API to change default limit:
    - evbuffer_set_max_read()
    - evbuffer_get_max_read()
    
    And a notice that most of time default is sane.

commit 6995b9a864c16bcb84ea0f7a2cf856143020316b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Mar 16 17:28:31 2019 +0300

    Fix leaks in error path of the bufferevent_init_common_()

commit efcc18442b338d931f6dfe71d5ebaff3c6fa2b03
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Mar 16 16:52:05 2019 +0300

    bench: suppress int conversion warnings

commit 61e4a651d7054d41c8669c2a5340679b64f6ecf6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Mar 16 16:37:38 2019 +0300

    Suppress int conversion warnings in getopt_long compatibility

commit 68eb526d7b5a276fc767738193902e7f7b2cfed6
Author: Alexander Drozdov <al.drozdov@gmail.com>
Date:   Wed Mar 13 10:51:55 2019 +0300

    http: add WebDAV methods support
    
    WebDAV introduced new HTTP methods (RFC4918):
    PROPFIND, PROPPATCH, MKCOL, LOCK, UNLOCK, COPY, MOVE.
    
    Add support of the methods.

commit bf19462a551f8d6e9dd3f5967905a7ff14e8f39c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Mar 13 00:20:25 2019 +0300

    http: suppress -Wwrite-string in evhttp_parse_query_impl()

commit 42d5a36bd8076c137545759d34500401627a649b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Mar 13 00:02:39 2019 +0300

    cmake: sync warnings with autotools v2
    
    By some reason gcc reports next error:
      ../http.c:3330:11: warning: assignment discards ‘const’ qualifier from pointer target type [-Wdiscarded-qualifiers]
           value = "";
    
    Only under -Wwrite-strings, well this is logical, but this information
    does not reflected in any documentation.
    
    Follow-up: 8348b413 ("cmake: add various warning flags like autotools has")
    
    f

commit 42cc731b1ab19dd84b217127ba62aa97f2bd899f
Author: Sayan Nandan <nandansayan@outlook.com>
Date:   Sun Mar 10 19:51:44 2019 +0530

    Update documentation [ci skip]
    
    The documentation for building and installing has been moved into a new
    Documentation section
    
    Closes: #788 (cherry-picked)

commit 56c9551e2dea27a2c6fd1e2374968a9f8086b631
Author: Sayan Nandan <nandansayan@outlook.com>
Date:   Fri Mar 8 16:47:56 2019 +0530

    Move list of contributors into separate file
    
    Closes: #786 (cherry-picked)

commit 5ee507c889b019e9296f48e4f133c439e3040c9e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 4 06:53:42 2019 +0300

    http: implement separate timeouts for read/write/connect phase
    
    This patch allows to change timeout for next events read/write/connect
    separatelly, using new API:
    
    - client:
      evhttp_connection_set_connect_timeout_tv() -- for connect
      evhttp_connection_set_read_timeout_tv()    -- for read
      evhttp_connection_set_write_timeout_tv()   -- for write
    
    - server:
      evhttp_set_read_timeout_tv()  -- for read
      evhttp_set_write_timeout_tv() -- for write
    
    It also changes a logic a little, before there was next fallbacks which
    does not handled in new API:
    - HTTP_CONNECT_TIMEOUT
    - HTTP_WRITE_TIMEOUT
    - HTTP_READ_TIMEOUT
    
    And introduce another internal flag (EVHTTP_CON_TIMEOUT_ADJUSTED) that
    will be used in evrpc, which adjust evhttp_connection timeout only if it
    is not default.
    
    Fixes: #692
    Fixes: #715

commit 62df1301ca943011fa9c398323049bcddca2694d
Author: John Ohl <john@collabriasoftware.com>
Date:   Tue Dec 9 21:43:18 2014 -0500

    Add support for EV_TIMEOUT to event_base_active_by_fd
    
    Closes: #194 (cherry-pick)

commit c4fbae3ae6166dddfa126734edd63213afa14dce
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 3 19:03:29 2019 +0300

    buffer: make evbuffer_prepend() of zero-length array no-op
    
    Refs: #774

commit b69524c004fb68bcd9475e7aa61f5a7cdb45d304
Merge: 16a151df 5b19c9f6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 3 18:58:57 2019 +0300

    Merge branch 'evbuffer-empty-chain-handling'
    
    * evbuffer-empty-chain-handling:
      buffer: do not rely on ->off in advance_last_with_data()
      buffer: fix evbuffer_remove_buffer() with empty chain in front
      test: verify content of the buffer in evbuffer/remove_buffer_with_empty*

commit 5b19c9f62beb506ae0aaa507c2358c52a0a91e2a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 3 16:29:52 2019 +0300

    buffer: do not rely on ->off in advance_last_with_data()
    
    advance_last_with_data() adjusts evbuffer.last_with_datap, and if we
    will have empty chain in the middle advance_last_with_data() will stop,
    while it should not, since while empty chains is not regular thing they
    can pops up in various places like, and while I did not look through all
    of them the most tricky I would say is:
      evbuffer_reverse_space()/evbuffer_commit_space()
      evbuffer_add_reference()
    
    Test case from:
      https://github.com/envoyproxy/envoy/pull/6062
    
    Fixes: #778
    
    v2: keep last_with_datap really last with data, i.e. update only if
    chain has data in it

commit fdfabbec00b36bc6d5e69b5d8719e70d6f4e5b7b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Mar 2 22:50:00 2019 +0300

    buffer: fix evbuffer_remove_buffer() with empty chain in front
    
    In case we have empty chain (chain that do not have any data, i.e. ->off
    == 0) at the beginning of the buffer, and no more full chains to move to
    the dst, we will skip moving of this empty chain, and hence
    last_with_datap will not be adjusted, and things will be broken after.
    
    Fix this by not relying on ->off, just count if we have something to
    move that's it.
    
    Test case from:
      https://github.com/envoyproxy/envoy/pull/6062
    
    Fixes: #774

commit 91acedcc97bc5ffb77622041977920812d3fcc25
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 3 17:43:37 2019 +0300

    test: verify content of the buffer in evbuffer/remove_buffer_with_empty*
    
    And replace spaces with tab in remove_buffer_with_empty

commit 16a151df5c59c0539d06465172742cc50751ea77
Author: Seong-Joong Kim <sungjungk@gmail.com>
Date:   Thu Feb 21 16:19:10 2019 +0000

    Remove needless check for arc4_seeded_ok

commit 91dad75f7d04c2bef05bdd1dca7c29340ce33900
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Thu Feb 28 17:47:51 2019 -0800

    Fix typos: warnigns -> warnings
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 0b468bb07e3476d06907ca6c8e5c24bbb05e31a4
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Thu Feb 28 17:22:30 2019 -0800

    Fix typos in a comment describing the purpose of `VersionViaGit.cmake`
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit 5f87be42f0ae0126938624a1419a572607078217
Author: Enji Cooper <yaneurabeya@gmail.com>
Date:   Mon Feb 25 11:59:15 2019 -0800

    Define `_GNU_SOURCE` properly/consistently per autoconf
    
    Although `_GNU_SOURCE` can be defined as an arbitrary #define per the
    glibc docs [1], it's best to define it in a manner consistent with the way
    that autoconf defines it, i.e., `1`.
    
    While this shouldn't matter in most cases, it does when the headers from
    other projects follow the poorly defined GNU convention implemented by
    autoconf and are included after the libevent's util.h header. An example
    failure with clang, similar to the failure I encountered, is as follows:
    ```
    $ printf "#define _GNU_SOURCE\n#define _GNU_SOURCE 1" | clang -c -x c -
    <stdin>:2:9: warning: '_GNU_SOURCE' macro redefined [-Wmacro-redefined]
            ^
    <stdin>:1:9: note: previous definition is here
            ^
    1 warning generated.
    ```
    
    This happened when compiling python [2] with a stale homebrew util.h file from
    libevent (which admittedly would not happen in a correct libevent install, as the
    header should be installed under /usr/local/include/event2/util.h). However, if
    both headers had been combined (which is more likely), it would have failed as
    shown above.
    
    Removing the ad hoc definition unbreaks compiling python's pyconfig.h.in header
    when included after util.h from libevent.
    
    1. http://www.gnu.org/software/libc/manual/html_node/Feature-Test-Macros.html
    2. https://github.com/python/cpython/blob/master/configure.ac#L126
    
    Closes: #773 (cherry-picked)
    
    Signed-off-by: Enji Cooper <yaneurabeya@gmail.com>

commit a30d6d85219ea80c16df6da4f6a9430254e5a0da
Author: Yury Korzhetsky <Korzhetsky.Yury@acronis.com>
Date:   Tue Feb 26 12:33:49 2019 +0300

    Don't loose top error in SSL
    
    Closes: #775 (cherry-picked)

commit b34192bae6f511b91a2fc01409676b2df2fd8a31
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 25 00:26:39 2019 +0300

    Ignore bitrise branches for travis-ci/appvyeor [ci skip]

commit 2fccb967c52e9f5373494df2773c684dee5ef973
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 24 22:59:33 2019 +0300

    Update link to the appveyor project
    
    Since the migration request has been hanged for a while, let's switch it
    for now without beauty API URL.
    
    Fixes: #555

commit 5722e13b871063f13912a6ccafe4c94e1b3b41c5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 24 17:34:20 2019 +0300

    Match definition with prototype for bufferevent_socket_set_conn_address_fd_()
    
    Fixes: #772
    Fixes: b29207dc ("Eliminate fd conversion warnings and introduce EVUTIL_INVALID_SOCKET (windows)")

commit 14eb903ba31987d24357abd05923677d194fedae
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 24 17:25:31 2019 +0300

    Revert "test: avoid regress hanging in macOS"
    
    After we started to use kill() over raise() everything should work just
    fine.
    
    This reverts commit a86f89d333d870e6714bd28c695ba1774df3d7f5.
    
    Fixed-in: 728c5dc1 ("Use kill() over raise() for raising the signal (fixes osx 10.14 with kqueue)")
    Fixes: #747

commit 728c5dc11f55b4ba5f518812833eab5a2cc3d550
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 24 17:07:18 2019 +0300

    Use kill() over raise() for raising the signal (fixes osx 10.14 with kqueue)
    
    On OSX 10.14+ the raise() uses pthread_kill() (verified with dtruss) and
    by some reason signals that has been raised with pthread_kill() do not
    received by kqueue EVFILT_SIGNAL.
    
    While on OSX 10.11 the raise()/pthread_kill() uses plain kill() and
    everything work just fine (linux also does the same, but instead of
    kill() it uses tgkill())
    
    Here is a simple reproducer that installs alarm to show that the signal
    does not received by the kqueue backend:
      https://gist.github.com/azat/73638b8e3b0fa563a20dadcca9e652a1
    
    Refs: #747
    Fixes: #765

commit 8d5b14d42888416404a24f8060b514f8258b7f17
Merge: fb134939 493a1da9
Author: Nathan French <nate@cl0d.com>
Date:   Thu Feb 21 10:21:02 2019 -0500

    Merge pull request #769 from sungjungk/fix-return-handling
    
    Add error-handling routine for arc4_seed()

commit 493a1da9936ca60d96f87f6175252230dca69961
Author: Seong-Joong Kim <sungjungk@gmail.com>
Date:   Thu Feb 21 18:13:05 2019 +0900

    Add error-handling routine for arc4_seed()

commit fb134939160a4baad89fd4ab20c49afd617057e3
Author: Nathan French <nate@cl0d.com>
Date:   Thu Feb 7 11:43:14 2019 -0500

    Added DNS header mask definitions.
    
    Currently, we do a lot of data munging with manual hex. This is ugly
    and can lead to bugs. I defined the following:
    
    _QR_MASK    0x8000U
    _OP_MASK    0x7800U
    _AA_MASK    0x0400U
    _TC_MASK    0x0200U
    _RD_MASK    0x0100U
    _RA_MASK    0x0080U
    _Z_MASK     0x0040U
    _AD_MASK    0x0020U
    _CD_MASK    0x0010U
    _RCODE_MASK 0x000fU
    
    So that we can more easily twiddle flags.
    
    v2: make evdns flag masks unsigned literal
    Closes: #756 (cherry-picked)

commit 63c6669fd831088825dfc0000737a33853bb36e8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Feb 6 00:12:35 2019 +0300

    Use the logo from the libevent.org

commit 6dbad0f6715e1a594cfd0115d929f7f15fcb5f93
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 4 22:34:10 2019 +0300

    test/dns: in solaris under EMFILE devpoll does not dispatch (due DP_POLL failure)

commit 8e87de3c24cad940516f49aa0466cfe53fa042bf
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 4 22:18:45 2019 +0300

    cmake: fix checking of devpoll backend (like in autotools, by devpoll.h existence)

commit d234902da713cb722596f6bf66bb0dde8a3842dc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 3 18:54:00 2019 +0300

    test/dns: in solaris under EMFILE the error is EAI_FAIL

commit ae9b285d2d7c9b898049072c157d50769d8014ea
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 3 18:47:14 2019 +0300

    test/ssl/bufferevent_wm: explicitly break the loop once client/server received enough
    
    There can be tricky cases (that can be reproduced by reducing
    SO_RCVBUF/SO_SNDBUF to 6144, on linux, and be aware, since linux doubles
    this const), when there is still write event pending, although we read
    enough.
    
    This should be fixed in a more sophisticated way, but to backport the
    patch, let's simply break the loop manually.
    
    The ssl/bufferevent_wm originally failed on solaris.

commit b29207dceee33832bb28ab103a833df6a2fd29d3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 29 21:12:33 2019 +0300

    Eliminate fd conversion warnings and introduce EVUTIL_INVALID_SOCKET (windows)
    
    windows has intptr_t instead of regular int.
    
    Also tt_fd_op() had been introduced, since we cannot use tt_int_op() for
    comparing fd, since it is not always int.

commit 74c10894117f9dd2b230ec8d0e30d41c08df3b45
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 29 21:31:19 2019 +0300

    evmap: use approparite type for changes to avoid warnings under windows

commit 0791a17204ff70bbea92520352a0c6e8d185fa4b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 29 21:06:37 2019 +0300

    test/et/et: use evutil_socket_t* over int* for pointer to the pair
    
    Next code will not work correctly under win x64:
      evutil_socket_t very_long_pair_name[2];
      int *pair = very_long_pair_name; // <-- accessing the second word of the first element
    
    Because sizeof(evutil_socket_t) == sizeof(intptr_t) == 8
    
    P.S. in the 5334762f another test had been fixed instead of the one that
    really fails.
    
    Fixes: 5334762f ("test/et/et: fix it by using appropriate type for the SOCKET (evutil_socket_t)")
    Refs: #750

commit e2e82241d182807b154dad5c546d9ef4581eb489
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 29 20:58:01 2019 +0300

    appveyor: disable verbosity of MSBuild

commit 97a3e7f5802ce1baa3c959905e312cab2bebf4bf
Merge: 8882f4fd 5334762f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 29 10:54:39 2019 +0300

    Merge branch 'win64-fixes'
    
    * win64-fixes:
      test/et/et: fix it by using appropriate type for the SOCKET (evutil_socket_t)
      test/et/et: verify return codes
      appveyor: switch to new VS/MinGW and x64

commit 5334762fcf761ee201a6b0ca4ddbf579d5542891
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 29 10:42:50 2019 +0300

    test/et/et: fix it by using appropriate type for the SOCKET (evutil_socket_t)
    
    Fixes: #750

commit 3e37fcd43c9c35ff23706928930aabb3bb6511d4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 29 01:44:33 2019 +0300

    test/et/et: verify return codes

commit 588ee6dfa16ff35fca41c9e22bb60eb6d9e473e5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 24 20:22:40 2018 +0300

    appveyor: switch to new VS/MinGW and x64
    
    The cache had been reseted with the following REST API requests:
      DELETE https://ci.appveyor.com/api/projects/nmathewson/libevent/buildCache
      DELETE https://ci.appveyor.com/api/projects/libevent/libevent/buildCache
      DELETE https://ci.appveyor.com/api/projects/azat/libevent/buildCache

commit 8882f4fd60aa61fe1caf8b372989427a9872c3b9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 29 07:56:21 2019 +0300

    win32select: print an error in case of failure

commit f88b8946f3da988f7aa80e36681037b4f474840e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 29 10:10:23 2019 +0300

    Add OS-specific exclude patterns of the branch names for the CI

commit afdccee9b3648a76e119fb4d5f922191cd09d748
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 29 01:23:02 2019 +0300

    s/http-server: fix cleanup routines
    
    Fixes: bdd71f18 ("s/http-server: graceful cleanup")

commit 7bfe93886d7fccad2d9a6c76cf47c47d3668f9d1
Merge: 5613bfb8 30791ecc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 29 01:18:39 2019 +0300

    Merge branch 'http-EVHTTP_CON_READ_ON_WRITE_ERROR-fixes-v2'
    
    * http-EVHTTP_CON_READ_ON_WRITE_ERROR-fixes-v2:
      http: try to read existing data in buffer under EVHTTP_CON_READ_ON_WRITE_ERROR
      test: add logging for http/read_on_write_error and rearrange code
      http: do not call deferred readcb if readcb is not set
    
    Refs: #749

commit 30791eccce0a5933acfb5ce0ce77fe1f325bd26e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 29 01:09:44 2019 +0300

    http: try to read existing data in buffer under EVHTTP_CON_READ_ON_WRITE_ERROR
    
    There are two possible ways of getting response from the server:
    - processing existing bufferevent buffer
    - reading from the socket (even after write() errored with -1, it is
    still possible)
    
    But we did not tried the first option, only the second one.
    
    Fixes: http/read_on_write_error (on freebsd/osx)

commit b8ca5a6820882e20b24f723100dfde88417d8bc3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 27 15:28:28 2019 +0300

    test: add logging for http/read_on_write_error and rearrange code

commit d3dcb5aca99ec5ff064b40c756f199871ef1bd45
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 27 15:16:39 2019 +0300

    http: do not call deferred readcb if readcb is not set
    
    Otherwise evhttp_read_cb can be called with invalid connection state:
        http/read_on_write_error: [forking] [msg] libevent using: kqueue
          FAIL ../test/regress_http.c:4079: assert(req)
          FAIL ../test/regress_http.c:4087: assert(req)[err] evhttp_read_cb: illegal connection state 0

commit 5613bfb8dcd70ea1c89d04b550d9f97958cc48d2
Merge: 4ffc7116 b35b5336
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 28 22:19:20 2019 +0300

    Merge branch 'travis-ci-osx-fixes'
    
    * travis-ci-osx-fixes:
      travis-ci/osx: switch to xcode 10.1, since 9.4 is not compatible with gcc-8
      travis-ci/osx: install gcc and fix CC

commit b35b533666f1cc5216657e4259c7a5311e2a62a1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 28 21:22:27 2019 +0300

    travis-ci/osx: switch to xcode 10.1, since 9.4 is not compatible with gcc-8
    
    Refs: travis-ci/travis-ci#9640

commit 9432fa2ec62d209ff71a04a3163a41af1b0b3828
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 28 20:30:57 2019 +0300

    travis-ci/osx: install gcc and fix CC
    
    Since there is no gcc in osx_image [1]:
        ls: /usr/local/bin/gcc-?.?: No such file or directory
    
      [1]: https://travis-ci.org/libevent/libevent/jobs/484794192#L95
    
    And use ls(1) over echo(1) to show an error if there is no such file.

commit 4ffc7116177230ad2b8b94d51bbf89a14dc83687
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jan 26 18:52:33 2019 +0300

    test: adjust expecting error for getaddrinfo() under EMFILE
    
    When getaddrinfo() cannot allocate file descriptor glibc/musl-libc on
    linux report EAI_SYSTEM error. But this is not true for freebsd libc [1]
    (and hence apple libc [2]), they report EAI_NONAME error instead, so
    adjust expectation.
    
      [1]: https://github.com/freebsd/freebsd/blob/master/lib/libc/net/getaddrinfo.c
      [2]: https://opensource.apple.com/source/Libc/
    
    Refs: #749
    Refs: https://github.com/libevent/libevent/issues/749#issuecomment-457838159

commit 91a2f1346e80c67526261ba81c8f3b3736107bcb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jan 12 13:58:50 2019 +0300

    test/nonpersist_readd: use assert helpers
    
    To debug failure under win32 in appveyor:
      https://ci.appveyor.com/project/nmathewson/libevent/builds/21559140/job/dn16qdo1j6sr497t#L1620

commit 99b231b0d875bc0814b0e4a940b6c9890d2a7754
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jan 11 21:52:11 2019 +0300

    rpc: use *_new_with_arg() to match function prototype
    
    In 755fbf16c ("Add void* arguments to request_new and reply_new
    evrpc hooks") this new functions had been introduced, but newer used,
    what for? So let's use them.

commit 28d7221b851093611c65b5961e138403dd7332b6
Author: Luke Dashjr <luke-jr+git@utopios.org>
Date:   Fri Dec 28 04:42:20 2018 +0000

    http: Preserve socket error from listen across closesocket cleanup
    
    Closes: #738 (cherry-picked)

commit 246f44041e0782f728fa5ff2d39113005a1ab02d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Dec 17 21:31:54 2018 +0300

    cmake: support static runtime (MSVC)
    
    Fixes: #737

commit 51945fd9399d2392010456a6d2c49815bc8f938e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Dec 17 21:41:32 2018 +0300

    appveyor: cover static libs for MSVC

commit 972da7c838b54c224889525a5cb9561f4024aff2
Author: baixiangcpp <baixiangcpp@gmail.com>
Date:   Sat Dec 15 21:45:36 2018 +0800

    fix a comment error
    
    Closes: #736 (cherry-picked)

commit f33c2ce5f89bc334230867f37d07dbfd5e3921bd
Author: Fredrik Strupe <fredrik@strupe.net>
Date:   Sat Dec 15 12:54:31 2018 +0100

    cmake: Fix some typos in option descriptions

commit f3f7aa5afff2c0be4a1a299a1a7d0a64558abc23
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Dec 7 21:46:27 2018 +0300

    http: fix connection retries when there more then one request for connection
    
    We should not attemp to establishe the connection if there is retry
    timer active, since otherwise there will be a bug.
    
    Imagine next situation:
      con = evhttp_connection_base_new()
      evhttp_connection_set_retries(con, 2)
      req = evhttp_request_new()
      evhttp_make_request(con, req, ...)
      # failed during connecting, and timer for 2 second scheduler (retry_ev)
    
    Then another request scheduled for this evcon:
      evhttp_make_request(con, req, ...)
      # got request from server,
      # and now it tries to read the response from the server
      # (req.kind == EVHTTP_RESPONSE)
      #
      # but at this point retry_ev scheduled,
      # and it schedules the connect again,
      # and after the connect will succeeed, it will pick request with
      # EVHTTP_RESPONSE for sending and this is completelly wrong and will
      # fail in evhttp_make_header_response() since there is no
      # "http_server" for this evcon
    
    This was a long standing issue, that I came across few years ago
    firstly, bad only now I had time to dig into it (but right now it was
    pretty simple, by limiting amount of CPU for the process and using rr
    for debug to go back and forth).

commit 9d3a415a99bbc6a7e0f0b12ae3c6c5c7e4613cf1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Dec 9 14:48:44 2018 +0300

    Do not check O_NONBLOCK for invalid fds
    
    Fixes: 6f988ee1 ("Merge branch 'check-O_NONBLOCK-in-debug'")

commit e5ec52d100ee94af14753513f4b4594e94eb02e1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Dec 8 17:35:53 2018 +0300

    test-fdleak: fix memory leaks
    
    Fixes: #726

commit 3e6bec7c1aa416e3e6e85c7bda1bdc98b778d23c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Dec 5 11:40:40 2018 +0300

    travis-ci: do not run coveralls with clang (SIGSEGV)
    
    This will fix coveralls badge
    
    See: https://travis-ci.org/libevent/libevent/jobs/458590276#L1425

commit 196e3a7b2bceaca5bee1914a92b9cfed41d8917d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Dec 5 11:46:30 2018 +0300

    Add mailmap

commit 1d2ef90032bc842bc2e295ee4adce3408b6d85da
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Nov 23 00:42:46 2018 +0300

    test: add TT_RETRIABLE for http/cancel_by_host_no_ns
    
    Could fail from time to time in travis-ci:
      https://travis-ci.org/libevent/libevent/jobs/458554097#L1702
    
    Follow-up-for: fe5b0719 ("Mark a lot of flacky tests with TT_RETRIABLE (for linux/win32 only)")

commit 1a79fd38aa3bd34d941c4949ad3e4ba09aa8142b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 21 07:04:33 2018 +0300

    appveyor: enable parallel build

commit 90d80ef4167d97b11e01e80fcc4eaa447712e92f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Nov 23 00:29:55 2018 +0300

    cmake: do not build both (SHARED and STATIC) for MSVC/win32
    
    MSVC does not support SHARED and STATIC libraries with the same name,
    so let's just build SHARED libraries by default instead (yes we can add
    prefix but let's stick with this).
    
    The reason for this is that in windows shared libraries requires .lib
    file too, but this is not static library it is imported library for
    shared (doh...), for more info [1] and [2].
    
      [1]: https://docs.microsoft.com/en-us/windows/desktop/dlls/dynamic-link-library-creation
      [2]: https://blogs.msdn.microsoft.com/oldnewthing/20091013-00/?p=16403
    
    And when we build both static library can and will override shared
    library imported part, let's take a look at event_extra.lib:
    
    - before patch [3]:
      $ less libevent-fail/lib/Debug/event_extra.lib | head
      ==> use library:contained_file to view a file in the archive
      rw-rw-rw- 100666/100666  59568 Nov 21 23:55 2018 event_extra_static.dir/Debug/evrpc.obj
      rw-rw-rw- 100666/100666 252219 Nov 21 23:55 2018 event_extra_static.dir/Debug/evdns.obj
      rw-rw-rw- 100666/100666 203850 Nov 21 23:55 2018 event_extra_static.dir/Debug/http.obj
      rw-rw-rw- 100666/100666  25907 Nov 21 23:55 2018 event_extra_static.dir/Debug/event_tagging.obj
    
      [3]: https://ci.appveyor.com/project/azat/libevent/builds/20472024/job/t0o93v042jai0dj7
    
    - "after patch" [4] (not after but the same effect):
      $ less libevent-ok/lib/Debug/event_extra.lib | head
      ==> use library:contained_file to view a file in the archive
      --------- 0/0    509 Nov 21 23:38 2018 event_extra.dll
      ...
    
      [4]: https://ci.appveyor.com/project/azat/libevent/builds/20478998/job/ca9k3c76amc4qr76
    
    Refs: #691

commit c9a073eae8f86a74fbbb125db34b881ef40108b7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 22 23:00:11 2018 +0300

    cmake: introduce EVENT__LIBRARY_TYPE option
    
    Long time ago in [1] cmake build was forced to compile both libraries
    (SHARED and STATIC), since this is how our autotools build works.
    
      [1]: 7182c2f561570cd9ceb704623ebe9ae3608c7b43 ("cmake: build SHARED and STATIC libraries (like autoconf does)")
    
    And there is no way to configure this (and indeed you need to do this
    for MSVC for example), so let's introduce option for this --
    EVENT__LIBRARY_TYPE.
    
    Plus now we have INTERFACE libraries, that we can use internally in
    libevent's cmake rules to avoid strict to _shared/_static variant of the
    libraries to link with samples/tests (we prefer SHARED over STATIC for
    linking).
    
    Also bump minimal cmake required version to 3.1 by the following
    reasons:
    - 3.1 is required for RPATH configuration under APPLE
    - 3.0 is required for add_library(INTERFACE) (did not found it in 2.8.x
    documentation)
    - remove extra conditions
    (anyway 3.1 was release 4 years ago, so I guess that most of the systems
    will have it)

commit d705e8c0e924d3b815697a075c27a36298f04078
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 21 07:31:57 2018 +0300

    cmake: drop redundant add_dependencies()

commit 4d2f013b5d20e674b22e5a8244f7fa63172dbdbf
Merge: 57765b23 fe5b0719
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 21 00:10:43 2018 +0300

    Merge branch 'TT_RETRIABLE'
    
    * TT_RETRIABLE:
      Mark a lot of flacky tests with TT_RETRIABLE (for linux/win32 only)
      regress: introduce TT_RETRIABLE
    
    Fixes: #704

commit fe5b07199d70a7633b7c0616200fe3c5e6b240c0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 20 11:46:44 2018 +0300

    Mark a lot of flacky tests with TT_RETRIABLE (for linux/win32 only)
    
    This patch mark testcases that only fail under travis-ci/appveyor with
    TT_RETRIABLE, since otherwise there is too much noise, other issues
    (like failures under vagrant boxes) would be investigated separatelly.
    
    linux (from travis-ci only):
    - http/cancel_by_host_no_ns
    - http/cancel_by_host_inactive_server
    - http/cancel_by_host_ns_timeout
    - http/cancel_by_host_ns_timeout_inactive_server
    - thread/conditions_simple
    - util/monotonic_prc_precise
    - util/usleep
    - main/del_wait
    
    vagrant/ubuntu box (this is the only exception):
    - thread/no_events
    
    win32 (from appveyor only):
    - main/active_later
    - main/persistent_active_timeout
    
    And we should use TT_RETRIABLE over TT_OFF_BY_DEFAULT/TT_SKIP when it
    make sense.
    
    But there is still "test-ratelim__group_lim" left.

commit 63b065be80d57dfee4688ddc32b8344e922648d9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 20 01:06:04 2018 +0300

    regress: introduce TT_RETRIABLE
    
    We have some tests that has false-positive due to real/CPU time bound,
    but they are pretty generic and we do not want to skip them by default.
    
    TT_RETRIABLE is the flag that will indicate tinytest to retry the test
    in case of failure, use it to avoid next possible false-positives:
    - real time-related
    - CPU time-related
    Since I guess it is better to see/grepping RETRYING messages over
    ignoring completely failed builds.
    
    No configuration switch for number of retries was done on purpose (only
    3 retries and no more).
    
    And this is how it looks BTW:
      $ gcc ../test/tinytest_demo.c ../test/tinytest.c
      $ ./a.out --verbose --no-fork
      demo/timeout_retry
      demo/timeout_retry:
        FAIL ../test/tinytest_demo.c:201: assert(i != 1): 1 vs 1
        [timeout_retry FAILED]
    
        [RETRYING timeout_retry (3)]
      demo/timeout_retry:
               OK ../test/tinytest_demo.c:201: assert(i != 1): 2 vs 1
               OK ../test/tinytest_demo.c:213: assert(t2-t1 >= 4): 5 vs 4
               OK ../test/tinytest_demo.c:215: assert(t2-t1 <= 6): 5 vs 6
      1 tests ok.  (0 skipped)

commit 57765b23c81a9150ca0f77ed5f4d9b64a43cf30d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 20 00:58:47 2018 +0300

    bufferevent: add debug messages when .setfd/.getfd/.enable/.disable failed

commit b98d32d0c90864ff60bc689f3bcf738af58ca79c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 14 00:20:20 2018 +0300

    http: improve error path for bufferevent_{setfd,enable,disable}()
    
    We have calls to the next functions but do not check return values,
    though they can be invalid and it is better to show this somehow.
    
    Also do bufferevent_setfd() first and only after it
    bufferevent_enable()/bufferevent_disable() since:
    a) it is more natural
    b) it will avoid extra operations
    c) it will not fail first bufferevent_enable() (this is the case for
       buffbufferevent_async at least)
    
    In this case we could add more information for issues like #709

commit 3036f15a176b038f42d3896463c39058c6bac943
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 20 06:20:51 2018 +0300

    regress_http: fix compilation with !EVENT__HAVE_OPENSSL
    
    Fixes: 811c63f7 ("regress: test for HTTP/HTTPS with IOCP enabled")

commit f8d510f61777bcb194b945163b84047969a46cef
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 13 23:20:10 2018 +0300

    regress_bufferevent: add TT_IOCP_LEGACY/TT_IOCP

commit 903c6acea52a2a2922b5cd43faec1e64631c3da8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 13 23:30:51 2018 +0300

    t/bench_http: disable buffering (win32 do not show anything otherwise)
    
    Refs: #255

commit 56f3bdefcae915af3107ab20cc7548d048d56421
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 13 23:23:09 2018 +0300

    s/http-server: check for EVTHREAD_USE_WINDOWS_THREADS_IMPLEMENTED

commit 3d815cf22074792f31274fd6d810a94984661dbf
Merge: 5dc88b38 811c63f7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 13 22:47:43 2018 +0300

    Merge branch 'iocp-fixes'
    
    * iocp-fixes:
      regress: test for HTTP/HTTPS with IOCP enabled
      bev_async: trigger/run only deferred callbacks
      bev_async: do not initialize timeouts multiple times
      bev_async: set "ok" on setfd if fd>=0 (like we do during creation)
      bev_async: ignore ERROR_INVALID_PARAMETER on .setfd for iocp
    
    Closes: #709
    Refs: nmathewson/Libevent#160

commit 811c63f7bc7d71925c125d527c83ff0e63affa70
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 13 11:25:35 2018 +0300

    regress: test for HTTP/HTTPS with IOCP enabled
    
    Next tests added:
    - iocp/http/simple
    - iocp/http/https_simple

commit 908e710d40fb30cc68b515cce435a026c7ecc62a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 13 21:31:44 2018 +0300

    bev_async: trigger/run only deferred callbacks
    
    Otherwise callbacks will be runned even without event_loop, due to
    nature of IOCP.
    
    A simple example is:
      evhttp_connection_free(client)
      # freeing the client will trigger evhttp_connection_free() for the
      # client on the server side, and hence there will double free
      evhttp_free(server)
    
    Fixes: iocp/http/simple

commit 2bf673a467ad412771419ea131cf2b3a9da740eb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 13 11:47:14 2018 +0300

    bev_async: do not initialize timeouts multiple times
    
    You cannot event_assign() event multiple times, this is UB, and most
    likely will fail.
    
    Fixes: af9b2a7ae0be11c79a909d212b1833a9379e4ba0 ("Initialize async
    bufferevent timeout CBs unconditionally")

commit e73875dfe2f2644c80823b06ebedb2c8fec1a845
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 11 21:51:46 2018 +0300

    bev_async: set "ok" on setfd if fd>=0 (like we do during creation)
    
    Otherwise after .setfd, .enable will not work.

commit a54c0349119cde9a000ebb84840c4a4d7ed3d726
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 11 21:35:20 2018 +0300

    bev_async: ignore ERROR_INVALID_PARAMETER on .setfd for iocp
    
    listener already calls event_iocp_port_associate_() the second call will
    return ERROR_INVALID_PARAMETER.
    Plus we already ignore it on creation, so why we should care about it
    here?

commit 5dc88b387f7baa4bcd528832e94987a85be3b263
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 13 21:26:12 2018 +0300

    Fix conceivable UAF of the bufferevent in evhttp_connection_free()
    
    Although this is not a problem, since bufferevent uses finalizers and
    will free itself only from the loop (well this is not a problem if you
    do not play games with various event_base in different threads) it
    generates questions, so rewrite it in more reliable way.
    
    Fixes: #712

commit 7bcf576b396b22f218074c446691526a3ce509a6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Nov 30 22:25:41 2018 +0300

    Use BEV_UPCASE() everywhere
    
    Done with coccinelle and manual line rewrap:
      $ cat > BEV_UPCAST.cocci
      @@
      expression field_;
      expression var;
      @@
    
      - EVUTIL_UPCAST(var, struct bufferevent_private, field_)
      + BEV_UPCAST(var)
    
      $ spatch --sp-file BEV_UPCASE.cocci --in-place bufferevent*.c > /dev/null

commit b2d4fb4176c645b45b8514e4a5a942228ea4e6a9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 13 09:25:13 2018 +0300

    regress: add EVENT_NO_FILE_BUFFERING, to disable buffering for stdout/stderr
    
    Useful for win32

commit f2da6198401e2ef6763e5acc5d4e51a9928b9dde
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 13 08:24:55 2018 +0300

    event: add some debug information into loop for event_base_free_queues_()
    
    Refs: 7c8d0152dda18ecc52d3099fea235b04ddb850d9 ("Free event queues even
    for recursive finalizers")

commit 9a4b8ec1b64fab27544f154076261afdf1efac07
Merge: 8c1838be bdd71f18
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 13 11:10:25 2018 +0300

    Merge branch 'sample-http-server'
    
    Some improvements for http-server sample:
    - getopt
    - persistent port via -p option
    - IOCP for win32 via -I
    - disable buffering
    - enable debug logging via -v/EVENT_DEBUG_LOGGING_ALL
    - cleanup (by signal and separate error path on errors)
    
    * sample-http-server:
      s/http-server: graceful cleanup
      s/http-server: enable debug logging if EVENT_DEBUG_LOGGING_ALL env isset
      s/http-server: turn off buffering (otherwise do output on win32)
      s/http-server: add an option to use IOCP
      s/http-server: add options (for persistent port)
    
    Refs: #709

commit bdd71f18b1354eccd2ff925b8cdcff90ebbc90da
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 13 10:48:41 2018 +0300

    s/http-server: graceful cleanup

commit 41b6b279cd8e03da7fea95b22c3aaf5cf9c82469
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 13 10:26:17 2018 +0300

    s/http-server: enable debug logging if EVENT_DEBUG_LOGGING_ALL env isset

commit 3c8ded5c96c99b7fc6616cd2a9176159d53f50a1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 8 11:19:16 2018 +0300

    s/http-server: turn off buffering (otherwise do output on win32)

commit 5d3f9d4d9260a46577b17c6656c3e9398894585a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 8 11:13:21 2018 +0300

    s/http-server: add an option to use IOCP

commit ed705ba7042c7c2099d702476e29621cf8f168e2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 13 10:33:24 2018 +0300

    s/http-server: add options (for persistent port)

commit 8c1838beecc1e8d0e10afa94136d5ab38765ddaf
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 8 00:21:08 2018 +0300

    Remove Vagrantfile (will be moved into libevent-extras)
    
    Since:
    - it is not a library
    - this file should have (if I had enough time) enough fixes in itself
      and should not polute libevent history
    - it "requires" (it more cleaner to use it in this way) script --
      tools/vagrant-tests.py (indeed, from libevent-extras)
    - will has it's own issues/README/...
    
    https://github.com/libevent/libevent-extras

commit 1fc1c7ef1dabbbb358b99b893712bccc5761f82d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 8 00:36:07 2018 +0300

    regress_ssl: fix ssl/bufferevent_wm_filter for non defered callbacks
    
    Even after referenced patch there is still possible recursive callbacks
    from evbuffer_drain(bev_input), i.e.:
      wm_transfer() -> evbuffer_drain() -> wm_transfer()
                       inc(ctx->get)
    
    But if we will increment ctx->get before drain that we will not add more
    data to buffer.
    
    Refs: 54c6fe3c ("regress_ssl: make ssl/bufferevent_wm_filter more fault-tolerance")
    CI: https://ci.appveyor.com/project/nmathewson/libevent/build/job/f0rv299i71wnuxdq#L2546

commit 9afe7a6c12c112a6cbc49cf1bd684781275b2579
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 6 11:30:18 2018 +0300

    appveyor: skip travis patches (by commit subject/files)

commit 54fdd6bb6ebe6b0a672c79d30a712d97536500c8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 5 17:04:47 2018 +0300

    appveyor: cache build directory to reduce overall time (6x time faster)
    
    various build checks (i.e. detecting headers/macroses/functions) takes
    7 minutes (from 13 minutes in total) for cmake, which is too high.
    
    By using cache we can reduce this to ~0.
    
    And set APPVEYOR_SAVE_CACHE_ON_ERROR so that cmake checks will be
    cached (anyway all sources will be built from scratch due to timestamp
    updates while extracting from sources).

commit 506189350889dd7270801f3383524eb2acbfb862
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 6 01:22:13 2018 +0300

    appveyor: disable verbosity

commit 1503a9a1a6aea641784fa7aae83ad00e57e35431
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 5 18:00:41 2018 +0300

    appveyor: do not run on branches that has "travis" in it's name

commit 6d3a53966bc822fd580a6a02301838aca601391b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 5 18:30:38 2018 +0300

    cmake: set CMP0075 to NEW (for ws2_32.lib in win32)
    
    Otherwise cmake complains:
      Policy CMP0075 is not set: Include file check macros honor
      CMAKE_REQUIRED_LIBRARIES.  Run "cmake --help-policy CMP0075" for policy
      details.  Use the cmake_policy command to set the policy and suppress this
      warning.
    
      CMAKE_REQUIRED_LIBRARIES is set to:
        ws2_32.lib
    
      For compatibility with CMake 3.11 and below this check is ignoring it.

commit 65904773f2bf965e2050d4d7c91e30d4f123a787
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 5 18:23:31 2018 +0300

    cmake: set CMP0074 to NEW (for OPENSSL_ROOT in appveyor)
    
    We have $env:OPENSSL_ROOT (env) equals to -DOPENSSL_ROOT (cmake
    variable) anyway.
    
    cmake complains:
      Policy CMP0074 is not set: find_package uses <PackageName>_ROOT variables.
      Run "cmake --help-policy CMP0074" for policy details.  Use the cmake_policy
      command to set the policy and suppress this warning.
    
      Environment variable OpenSSL_ROOT is set to:
        C:/OpenSSL-Win64/bin
    
      For compatibility, CMake is ignoring the variable.
    This warning is for project developers.  Use -Wno-dev to suppress it.

commit 58e853f2c54dca223cd2d42665e74c2208c84cf1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 5 22:58:25 2018 +0300

    travis: use homebrew via addon (-~4min/16% from the build time)

commit 54c6fe3c06cb5342130467ecf0f78e3f6d854a36
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 5 22:25:15 2018 +0300

    regress_ssl: make ssl/bufferevent_wm_filter more fault-tolerance
    
    Due to inplace callbacks (i.e. no BEV_OPT_DEFER_CALLBACKS) we cannot be
    sure that wm_transfer() will not be called recursively and indeed it
    still happens sometimes, and the referenced patch increase amount of
    this times, especially for linux/poll.
    
    Fixes: 66304a23cf748714159c988e78f35401c5352827 ("Fix
    ssl/bufferevent_wm_filter when bev does not reach watermark on break")

commit 9040707fb176040acf250b09a223d6b4400f4086
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 5 21:33:54 2018 +0300

    regress_http: disable http/read_on_write_error under win32
    
    EVHTTP_CON_READ_ON_WRITE_ERROR works only if an error already read from
    the socket, but if we already got EPIPE on write we cannot read from the
    socket anymore, and win32 does not guarantee that read will happens
    before (although it happens from time to time).
    
    In the referenced patch I just replaced callback with not expecting 417,
    but like I already wrote, this is not always true (i.e. it is flacky).
    
    Fixes: 3b581693ac1967f7f8d98491cb772a1b415eb4cd ("test/http:
    read_on_write_error: fix it for win32")

commit 0345adf7e43d0c776f73edf95b0648dbb43fdf52
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 5 18:02:05 2018 +0300

    travis-ci: exclude appveyor branches

commit 3ed93997387296e374d8a2dd770e43ddfa3328e9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 4 19:48:11 2018 +0300

    cmake: do not detect _GNU_SOURCE/__GNU_LIBRARY__ if it is cached

commit 9d93fbe77968da5ca5b2dbe8973e6f3c3045c5ba
Merge: e29afd4b 66304a23
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 4 21:41:20 2018 +0300

    Merge branch 'ssl_bufferevent_wm_filter-fix'
    
    * ssl_bufferevent_wm_filter-fix:
      Fix ssl/bufferevent_wm_filter when bev does not reach watermark on break
      regress_ssl: cover watermarks with deferred callbacks
      regress_ssl: improve bufferevent_wm/bufferevent_wm_filter logging

commit 66304a23cf748714159c988e78f35401c5352827
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 4 20:40:04 2018 +0300

    Fix ssl/bufferevent_wm_filter when bev does not reach watermark on break
    
    For the ssl/bufferevent_wm* we have next configuration:
    - payload_len = 1024
    - wm_high     = 5120
    - limit       = 40960
    - to_read     = 512
    
    In this test we expect that with high watermark installed to "wm_high"
    we will read "limit" bytes by reading "to_read" at a time, but adding
    "payload_len" at a time (this "to_read"/"payload_len" limits is
    installed to finally overflow watermark).
    
    Once we read "limit" bytes we break, by disable EV_READ and reset
    callbacks. Although this will not work if when we want to break we do
    not reach watermark, this is because watermarks installs evbuffer
    callback for the input buffer and if the watermark does not reached it
    will enable EV_READ while be_openssl_enable() will read from the
    underlying buffer (in case the openssl bufferevent created via
    bufferevent_openssl_filter_new()) and call callback again (until it will
    reach watermark or read al from the underlying buffer -- this is why it
    stops in our caes).
    
    And this is exactly what happened in win32, you can see this in the
    following logs:
    
    - win32 before:
        OK C:\vagrant\test\regress_ssl.c:829: wm_transfer-client(00DC2750): in: 4608, out: 0, got: 40960
        OK C:\vagrant\test\regress_ssl.c:834: wm_transfer-client(00DC2750): break
        OK C:\vagrant\test\regress_ssl.c:829: wm_transfer-client(00DC2750): in: 4608, out: 0, got: 41472
        OK C:\vagrant\test\regress_ssl.c:834: wm_transfer-client(00DC2750): break
        OK C:\vagrant\test\regress_ssl.c:829: wm_transfer-client(00DC2750): in: 4608, out: 0, got: 41984
        OK C:\vagrant\test\regress_ssl.c:834: wm_transfer-client(00DC2750): break
        OK C:\vagrant\test\regress_ssl.c:829: wm_transfer-client(00DC2750): in: 4608, out: 0, got: 42496
        OK C:\vagrant\test\regress_ssl.c:834: wm_transfer-client(00DC2750): break
    
    - win32 after:
        OK C:\vagrant\test\regress_ssl.c:821: wm_transfer-client(00FC26F0): break
        OK C:\vagrant\test\regress_ssl.c:836: wm_transfer-client(00FC26F0): in: 4800, out: 0, got: 40960
    
    - linux before:
        OK ../test/regress_ssl.c:829: wm_transfer-client(0x55555566f5e0): in: 5120, out: 0, got: 40960
        OK ../test/regress_ssl.c:834: wm_transfer-client(0x55555566f5e0): break
    
    - linux after:
        OK ../test/regress_ssl.c:821: wm_transfer-client(0x55555566f5e0): break
        OK ../test/regress_ssl.c:836: wm_transfer-client(0x55555566f5e0): in: 5120, out: 0, got: 40960
    
    (As you can see in linux case we already reach watermark hence it passed
    before).
    
    So fix the issue by breaking before draining.
    
    But during fixing this I was thinking is this right? I.e. reading from
    the be_openssl_enable(), maybe we should force deferred callbacks at
    least?

commit e8c407e7b56ced5cb2b76dd92e708148a71e2be9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 4 20:15:14 2018 +0300

    regress_ssl: cover watermarks with deferred callbacks

commit fb7f43f0641a05ccea24b1edab6737ad4ce05d8b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 4 20:03:50 2018 +0300

    regress_ssl: improve bufferevent_wm/bufferevent_wm_filter logging
    
    - add bev pointer
    - use EV_SIZE_FMT over %zu (win32)

commit e29afd4b9428631444b208edfe3a4ba6ce4423af
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Nov 2 23:43:57 2018 +0300

    regress_http: make https_basic non time dependent
    
    Fixes: #454

commit 6f988ee161680925fc3308f17d293c680e3ac916
Merge: 69bc2da7 4cbdb39c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 4 01:21:48 2018 +0300

    Merge branch 'check-O_NONBLOCK-in-debug'
    
    * check-O_NONBLOCK-in-debug:
      regress: use non blocking descriptors whenever it is possible
      assert that fds are nonblocking in debug mode
    
    Closes: nmathewson/Libevent#90

commit 4cbdb39c270c3d00c94797f48e87f64178f2c988
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 4 00:59:33 2018 +0300

    regress: use non blocking descriptors whenever it is possible
    
    Next tests uses fds without O_NONBLOCK flag
    - main/free_active_base
    - main/many_events
    - et/et (has some other bits cleaned up by using TT_* flags and test
      setup/cleanup callbacks)
    
    And hence they will fail in debug mode (EVENT_DEBUG_MODE=):
      Assertion flags & O_NONBLOCK failed in event_debug_assert_socket_nonblocking_

commit 965ed54c7a18622c8b477e940481e7c887b0789c
Author: Greg Hazel <ghazel@gmail.com>
Date:   Wed Jan 8 14:57:14 2014 -0800

    assert that fds are nonblocking in debug mode
    
    Check that each fd that had been added with some event do has O_NOBLOCK
    after event_enable_debug_mode()
    
    Rebased and do not check signals (EV_SIGNAL) by azat.
    
    Refs: nmathewson/Libevent#90
    Refs: #96

commit 69bc2da79fb2f358c22feba45e9ad4752729d320
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 31 06:34:40 2018 +0300

    Add cmake rules into dist archive
    
    Fixes: #502
    Refs: #551

commit 33053cdd8a9e1a7330b47759dee9cb209bed8f1b
Merge: e17e1ee9 a1293bd2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 31 01:22:30 2018 +0300

    Merge branch 'event-ET-#636-v2'
    
    * event-ET-#636-v2:
      Preserve ET bit for backends with changelist
      Epoll ET setting lost with multiple events for same fd
      Cover ET with multiple events for same fd
      Add ET flag into event_base_dump_events()
    
    Fixes: #636

commit a1293bd2e626cba1f687cd0e50a219f8661775fc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Oct 30 23:59:24 2018 +0300

    Preserve ET bit for backends with changelist

commit b77d3e787b5522380c65838d3baa22e661eff0db
Author: Isidor Kouvelas <kouvelas@arista.com>
Date:   Tue Oct 30 08:50:08 2018 -0700

    Epoll ET setting lost with multiple events for same fd
    
    After two or more events have been registered for the same file
    descriptor using EV_ET, if one of the events is deleted, then the
    epoll_ctl() call issued by libevent drops the EPOLLET flag resulting in
    level triggered notifications.
    
    [ azat: use existing "et" in the evmap_io_del_() ]

commit 77c0e510581b88242d7d7bcff4954cedc5613554
Author: Isidor Kouvelas <kouvelas@arista.com>
Date:   Wed Oct 31 00:09:38 2018 +0300

    Cover ET with multiple events for same fd
    
    [ azat: test cleanup ]

commit aa07cbac644174eb6fdff6a11bf5b68521970d13
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 29 22:22:00 2018 +0300

    Add ET flag into event_base_dump_events()

commit e17e1ee91d292e8a1c7b6ac9e76dd29906d517dc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 28 20:52:32 2018 +0300

    appveyor: reconfigure tests with allow_failure and fast_finish

commit fb8666453ce8bb1d599a68636bed5db5ef4a7a57
Merge: 23e79fd7 9cba915e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 28 19:48:37 2018 +0300

    Merge branch 'win32-visibility-event_debug_logging_mask_'
    
    * win32-visibility-event_debug_logging_mask_:
      Introduce EVENT_VISIBILITY_WANT_DLLIMPORT
      regress_http: use TT_BLAZER() over event_debug()
    
    Fixes: #702

commit 9cba915ee8f1cfc78d846eeaf00cc209338b272b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 28 19:30:34 2018 +0300

    Introduce EVENT_VISIBILITY_WANT_DLLIMPORT
    
    And use it in places where event_debug() should be called (since it
    requires access to "event_debug_logging_mask_" and in win32 it is
    tricky).
    
    One of this places that is covered by this patch is the test for
    event_debug().

commit 5cfb6120874efc92f9e53ef482c21b94fdc81496
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 28 19:27:05 2018 +0300

    regress_http: use TT_BLAZER() over event_debug()
    
    Later is pretty tricky due to exporting event_debug_logging_mask_ symbol
    for win32.

commit 23e79fd764b9f36f560d470f0fb60295dd942ac2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 28 18:11:22 2018 +0300

    Check existence of IPV6_V6ONLY in evutil_make_listen_socket_ipv6only() (mingw32)
    
    MinGW 32-bit 5.3.0 does not defines it and our appveyour [1] build
    reports this instantly:
        evutil.c: In function 'evutil_make_listen_socket_ipv6only':
        evutil.c:392:40: error: 'IPV6_V6ONLY' undeclared (first use in this function)
          return setsockopt(sock, IPPROTO_IPV6, IPV6_V6ONLY, (void*) &one,
    
      [1]: https://www.appveyor.com/docs/windows-images-software/#mingw-msys-cygwin
    
    Another solution will be to use mingw64 which has it, but I guess we do
    want that #ifdef anyway.

commit 931ec2370228e40309af51b86e10fa364a37a20e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 28 16:46:24 2018 +0300

    Convert evbuffer_strspn() (internal helper) to use size_t
    
    As pointed by @yankeehacker in #590:
      Signed to Unsigned Conversion Error - buffer.c:1623
    
      Description: This assignment creates a type mismatch by populating an
      unsigned variable with a signed value. The signed integer will be
      implicitly cast to an unsigned integer, converting negative values into
      positive ones. If an attacker can control the signed value, it may be
      possible to trigger a buffer overflow if the value specifies the length
      of a memory write.
    
      Remediation: Do not rely on implicit casts between signed and unsigned
      values because the result can take on an unexpected value and violate
      weak assumptions made elsewhere in the program.
    
    Fixes: #590

commit f83ac92da9fff789135d1e5b9050653cf7fdb517
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 28 15:16:24 2018 +0300

    buffer: add an assert for last_with_datap to suppress static analyzer
    
      ../buffer.c:2231:6: warning: Access to field 'flags' results in a dereference of a null pointer
              if (CHAIN_SPACE_LEN(*firstchainp) == 0) {
                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      ../buffer.c:130:30: note: expanded from macro 'CHAIN_SPACE_LEN'
      #define CHAIN_SPACE_LEN(ch) ((ch)->flags & EVBUFFER_IMMUTABLE ? \

commit 731469b33a683b359783b4658994081971e8f474
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Fri Jun 13 16:08:04 2014 -0400

    libevent.pc: link against core/extra
    
    Since we want people to stop using -levent, have the pkg-config file
    also stop linking against that.  This makes it easier to delete the
    libevent.so library entirely.
    
    Closes: #141

commit fb42e0fac60d31e081cce4c19df6061bcb56df20
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 28 02:00:16 2018 +0300

    bench_cascase: include getopt.h only for _WIN32 (like in other places)
    
    Fixes: #561

commit 99a3887d66885204ed8fa13405ae04b632dc8d33
Author: Maya Rashish <maya@NetBSD.org>
Date:   Sat Sep 23 06:57:16 2017 +0300

    Define __EXT_POSIX2 for QNX
    
    POSIX 1003.2 extension is necessary for getopt interface.
    Reported here [1] (not mine, I can't test)
    
      [1]: https://mail-index.netbsd.org/pkgsrc-users/2017/09/20/msg025601.html
    
    Closes: #563 (cherry-pick)

commit 9fe952a0aea25474de3dbc30350b1ffa5abcd65a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 27 19:34:52 2018 +0300

    regress_ssl: reset static variables on test setup/cleanup and eliminate leaks
    
    One tricky bit is reply to the BIO_C_GET_FD command, since otherwise it
    will try to close(0) and accepted bev in ssl/bufferevent_connect_sleep
    will leak. Other seems more or less trivial.
    
    This was done to make sure that for at least generic cases does not
    leak (tricky cases was listed here nmathewson/Libevent#83).
    
    And this will allow run ssl/.. with --no-fork

commit 7cec9b95a3aefb85fcf75610abc8e27e284b251d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 27 19:41:52 2018 +0300

    test: export basic_test_setup/basic_test_cleanup to extend them

commit 5264c03f8a8ac759ef42e5dfdfb3fda0accd12f6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 27 23:58:18 2018 +0300

    travis-ci: do not notify irc.oftc.net#libevent
    
    I think that this just introduce noise that people just turns off. So
    very questionable let's remove it.

commit acf09c00e2825420cc4ff801518e4ecfe2b31a03
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 27 18:35:08 2018 +0300

    be_openssl: avoid leaking of SSL structure
    
    From nmathewson/Libevent#83 by @fancycode:
      There are a few code paths where the passed SSL object is not released in error cases, even if BEV_OPT_CLOSE_ON_FREE is passed as option while for others it is released. That way it's impossible for the caller to know it he has to free it on errors himself or not.
    
      Line numbers are from "bufferevent_openssl.c" in 911abf3:
    
      L1414 ("underlying == NULL" passed)
      L1416 (bio could not be created)
      L1446 (different fd passed)
      L1325 (both underlying and fd passed)
      L1328 (out-of-memory)
      L1333 ("bufferevent_init_common_" failed)
      In all error cases after the "bufferevent_ops_openssl" has been assigned, the option is evaluated on "bufferevent_free" (L1399) and the SSL object released (L1226).
    
    Fixes: nmathewson/Libevent#83

commit 474d72aeac818198737aa7cb009578c464db11ca
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 27 18:29:57 2018 +0300

    be_openssl: drop close_flag parameter of the BIO_new_bufferevent()

commit 26ef859aa707fda72ce530bf761d1c41a76f67b7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 27 17:21:35 2018 +0300

    Add evhttp_parse_query_str_flags()
    
    And a set of flags:
    - EVHTTP_URI_QUERY_LAST
    - EVHTTP_URI_QUERY_NONCONFORMANT
    
    Fixes: #15

commit d161ec3842259f2896fc9b15a1e4d5a1ed178bb2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 27 17:36:09 2018 +0300

    regress_http: basic evhttp_parse_query_str() coverage

commit 8348b41308a7126d009bb6e0b33aa5f465e1dc33
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 27 14:58:30 2018 +0300

    cmake: add various warning flags like autotools has
    
    This is mostly to match autotools and reduce amount mixiing declarations
    and code.
    
    Added:
    - -Wextra (the same as -W), -Wno-unused-parameter -Wstrict-aliasing
    - -fno-strict-aliasing (gcc 2.9.5+)
    - -Winit-self -Wmissing-field-initializers -Wdeclaration-after-statement (4.0+)
    - -Waddress -Wno-unused-function -Wnormalized=id -Woverride-init (4.2+)
    - -Wlogical-op (4.5+)
    
    Removed:
    - -Wformat (include in -Wall)
    
    Plus use CMAKE_C_COMPILER_ID over CMAKE_COMPILER_IS_GNUCC, as
    cmake-variables(7) suggesting, and add common GNUC/CLANG variables.
    
    v2: drop checks for flags, since add_compiler_flags() will check if such
    flags exists anyway (but just to note, gcc ignores non existing warning
    flags by default).

commit 006c528a21f8beec8993134c12610bd16cde7fff
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Oct 27 16:49:39 2018 +0300

    autotools: do not add warnings that is included into -Wall already
    
    Plus remove duplicates

commit 387d91f9ab95df8ac3d7bb58493310ad4a377dcf
Author: Murat Demirten <mdemirten@yh.com.tr>
Date:   Mon Jun 4 16:43:34 2018 +0300

    listener: ipv6only socket bind support
    
    According to RFC3493 and most Linux distributions, default value is to
    work in IPv4-mapped mode. If there is a requirement to bind same port
    on same ip addresses but different handlers for both IPv4 and IPv6,
    it is required to set IPV6_V6ONLY socket option to be sure that the
    code works as expected without affected by bindv6only sysctl setting
    in system.
    
    See an example working with this patch:
    https://gist.github.com/demirten/023008a63cd966e48b0ebcf9af7fc113
    
    Closes: #640 (cherry-pick)

commit b2667b76969c2ea382373f885062b45e82d0ac59
Merge: 0ec12bc8 32349ab6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Oct 25 00:50:50 2018 +0300

    Merge branch 'evutil_found_ifaddr-dev'
    
    * evutil_found_ifaddr-dev:
      Cover evutil_v4addr_is_local_()/evutil_v6addr_is_local_()
      Split evutil_found_ifaddr() into helpers (evutil_v{4,6}addr_is_local())
      Use INADDR_ANY over 0 in evutil_found_ifaddr()
      Replace EVUTIL_V4ADDR_IS_*() macroses with static inline functions
      Filter link-local IPv4 addresses in evutil_found_ifaddr()

commit 32349ab6f4c6dd3a54bce8b13beed640accfe6d2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Oct 25 00:25:48 2018 +0300

    Cover evutil_v4addr_is_local_()/evutil_v6addr_is_local_()

commit 6966d39f38b7f0708374f8be24c8a81e3c31ace3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Oct 25 00:01:59 2018 +0300

    Split evutil_found_ifaddr() into helpers (evutil_v{4,6}addr_is_local())

commit d5f85257b7ed2b32a06f83782746b7341e7b7ad7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 24 23:47:01 2018 +0300

    Use INADDR_ANY over 0 in evutil_found_ifaddr()

commit ab406fca303a832f3e6d16f480553851638d4ea8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 24 23:43:28 2018 +0300

    Replace EVUTIL_V4ADDR_IS_*() macroses with static inline functions
    
    Macros over static inline over and over again:
    - readability
    - type safety

commit 117dc92129f16cbf8cc7e7d60898569ca20b597f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 24 11:51:57 2018 +0300

    Filter link-local IPv4 addresses in evutil_found_ifaddr()
    
    Fixes: #668

commit 0ec12bc84cf09307e01dc3b00d08ac1f816b6ff7
Merge: 2f43d1d4 5f1b4dfa
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Oct 23 00:12:23 2018 +0300

    Merge branch 'http-request-line-parsing'
    
    * http-request-line-parsing:
      Fix http https_basic/https_filter_basic under valgrind (increase timeout)
      http: cover various non RFC3986 conformant URIs
      http: allow non RFC3986 conformant during parsing request-line (http server)
      http: do not try to parse request-line if we do not have enough bytes
      http: allow trailing spaces (and only them) in request-line (like nginx)
      http: cleanup of the request-line parsing

commit 5f1b4dfa021dd79971b6e0b0f3d2cc8c2f2d9593
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Oct 23 00:06:47 2018 +0300

    Fix http https_basic/https_filter_basic under valgrind (increase timeout)

commit 15bfe712a77d01f367799b0ab43d015c8e140130
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 22 23:38:42 2018 +0300

    http: cover various non RFC3986 conformant URIs
    
    - http/basic_trailing_space -- covers cases when there is trailing space
      after the request line (nginx handles this)
    - http/simple_nonconformant -- covers non RFC3986 conformant URIs

commit b94d913d90a7390ace32dbe025d69b41eb98f755
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 22 23:52:46 2018 +0300

    http: allow non RFC3986 conformant during parsing request-line (http server)
    
    Reported-by: lsdyst@163.com

commit 64ead341a021a42084bb224100dda19311f2ac3e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 22 23:56:50 2018 +0300

    http: do not try to parse request-line if we do not have enough bytes

commit 254fbc81b43eb8de42c7723a3f129ac529ebc9f4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 22 23:56:19 2018 +0300

    http: allow trailing spaces (and only them) in request-line (like nginx)

commit 6cf659b0bd9e7b3354facd37d739341afbe7180f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 22 23:25:01 2018 +0300

    http: cleanup of the request-line parsing

commit 2f43d1d4091f4f87b8679de4b4967561861141de
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 22 01:06:48 2018 +0300

    Disable parallel jobs for the osx (due to CPU time deficit) in travis-ci
    
    As you can see right now linux workers has zero failed tests, while osx
    workers has 18 failed tests:
      [bufferevent_connect_hostname_emfile FAILED]
      [bufferevent_pair_release_lock FAILED]
      [bufferevent_timeout FAILED]
      [bufferevent_timeout_filter FAILED]
      [bufferevent_timeout_pair FAILED]
      [common_timeout FAILED]
      [del_wait FAILED]
      [immediatesignal FAILED]
      [loopexit FAILED]
      [loopexit_multiple FAILED]
      [monotonic_res FAILED]
      [no_events FAILED]
      [persistent_active_timeout FAILED]
      [persistent_timeout_jump FAILED]
      [signal_switchbase FAILED]
      [signal_while_processing FAILED]
      [simpletimeout FAILED]
      [usleep FAILED]
    
    And this patch should remove from this list time related failures
    (though maybe not all of them).

commit 5d3e8c15e7482c35ae7c9768f6f61a5e6850c035
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 22 01:00:54 2018 +0300

    Use matrix.fast_finish for the travis-ci to mark the build ASAP
    
    AFAIR there is shortage of osx workers on travis-ci, IOW builds that
    requires them can wait fair amount of time in the queue by just waiting.
    
    Plus linux workers AFAICS can run multiple jobs in parallel (4-5), while
    osx does not.
    
    Hence if we do allow failures for osx (and right now they have a lot of
    failed tests) let's mark build result based on tests under linux only.
    
    So in a nut shell this will reduce build time from 5 hours to 20-30
    minutes.

commit 6ac8e775bb3cba49c276c90e288554635d38b466
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 21 18:31:01 2018 +0300

    Simplify bufferevent timeout tests to reduce CPU usage in between start/compare
    
    Between start (setting "started_at") and comparing the time when
    timeouts triggered with the start (test_timeval_diff_eq), there is too
    much various things that can introduce extra delays and eventually could
    fail the test on machine with shortage of CPU.
    
    And this is exactly what happend on:
    - travis-ci
    - #262
    
    Here is a simple reproducer that I came up with for this issue:
      docker run --cpus=0.01 -e LD_LIBRARY_PATH=$PWD/lib -e PATH=/usr/bin:/bin:$PWD/bin -v $PWD:$PWD --rm -it debian:testing regress --no-fork --verbose bufferevent/bufferevent_timeout
    
    Under limited CPU (see reproducer) the test almost always has problems
    with that "write_timeout_at" exceed default timeval diff tolerance
    (test_timeval_diff_eq() has 50 tolerance), i.e.:
      FAIL ../test/regress_bufferevent.c:1040: assert(labs(timeval_msec_diff(((&started_at)), ((&res1.write_timeout_at))) - (100)) <= 50): 101 vs 50
    
    But under some setup write timeout can even not triggered, and the
    reason for this is that we write to the bufferevent 1024*1024 bytes, and
    hence if evbuffer_write_iovec() will has some delay after writev() and
    not send more then one vector at a time [1], it is pretty simple to
    trigger, i.e.:
      FAIL ../test/regress_bufferevent.c:1040: assert(labs(timeval_msec_diff(((&started_at)), ((&res1.write_timeout_at))) - (100)) <= 50): 1540155888478 vs 50
    
      [1]: https://gist.github.com/azat/b72773dfe7549fed865d439e03de05c1
    
    So this patch just send static small payload for all cases (plus a few
    more asserts added).
    
    The outcome of this patch is that all regression tests passed on
    travis-ci for linux box [2]. While before it fails almost always [3].
    Also reproducer with CPU limiting via docker also survive some
    iterations (and strictly speaking it should has less CPU then travis-ci
    workers I guess).
    
      [2]: https://travis-ci.org/azat/libevent/builds/444391481
      [3]: https://travis-ci.org/libevent/libevent/builds/444336505

commit 3e6553a1808989c15b8dd1945b4707b7d35667ad
Author: Bogdan Harjoc <bharjoc@bitdefender.com>
Date:   Thu Aug 9 13:04:52 2018 +0300

    evdns: handle NULL filename explicitly
    
    Otherwise we will try to open NULL filename and got EFAULT and anyway
    will got the same return code from evdns_base_resolv_conf_parse_impl()
    
    Closes: #680 (cherry-picked)

commit fb090aa622bcfd0431b6a4b97883bddf29ad8a0e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 21 03:18:48 2018 +0300

    Revert "travis-ci: use travis_retry to reduce number of problems with flacky tests"
    
    That was a bad idea, because all this patch did is just uses extra CPU
    time on travis-ci workers and eventually fail the build anyway.
    
    It also increases time of executing one matrix entry (x3).
    
    This reverts commit 7004ee8e869faabe3a284fb3d7eb859fb50ef90c.

commit bd2184d8d42f721fa523d01b9a9250c75fedb855
Merge: 95918754 2cb8eae7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 21 03:15:34 2018 +0300

    Merge branch 'regress-dns-fixes'
    
    * regress-dns-fixes:
      Do not rely on getservbyname() for most of the dns regression tests
      Turn off dns/getaddrinfo_race_gotresolve by default
      Fix an error for debug locking in dns/getaddrinfo_race_gotresolve

commit 2cb8eae7958fd9adceba32e67a146925880d8571
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 21 03:03:25 2018 +0300

    Do not rely on getservbyname() for most of the dns regression tests
    
    There is only one test that uses service name getaddrinfo_async, which
    manually check whether it works or not, other should not assume that it
    is available and works.
    
    There was already an attempt to overcome some possible limitations, like
    lack of "http" in /etc/services in
    d6bafbbeb27ff3943d6f3b6783bcded76384c31e ("test/dns: replace servname
    since solaris does not have "http"")

commit 7198bbb8f13fe0caab310b2fb6dd618c61893f9a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 21 03:03:57 2018 +0300

    Turn off dns/getaddrinfo_race_gotresolve by default
    
    It is:
    - pretty internal regression
    - CPU bound
    - right now failed on travis-ci machines

commit 09c74f71217bb6c614b8597041aacf830160f3a0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 21 02:50:04 2018 +0300

    Fix an error for debug locking in dns/getaddrinfo_race_gotresolve
    
    When there is no /etc/services file evdns_getaddrinfo() will fail (with
    service="ssh") and hence it will go to then "end" label with locked
    rp.lock which in case of debug locking checks will bail with:
      [err] ../evthread.c:220: Assertion lock->count == 0 failed in debug_lock_free
    
    So add rp.locked flag, and unlock the lock before freeing it if it is in
    locked state.
    
    And here is how you can reproduce the issue:
      $ docker run -e LD_LIBRARY_PATH=$PWD/lib -e PATH=/usr/bin:/bin:$PWD/bin -v $PWD:$PWD --rm -it debian:testing regress dns/getaddrinfo_race_gotresolve
    (since debian:testing does not have /etc/services)

commit 95918754d2ba7e6bffe0fc74bebed60bd917c10c
Author: Jiri Luznicky <jiri.luznicky@ubnt.com>
Date:   Wed May 23 15:39:13 2018 +0200

    Fix missing LIST_HEAD
    
    Despite the presence of 'sys/queue.h' in some stdlib implementations
    (i.e. uclibc) 'LIST_HEAD' macro can be missing.  This fix defines this
    macro in the same manner as was done previously for 'TAILQ_'.
    
    Fixes: #539
    Closes: #639 (cherry-picked)
    Backport: 2.1.9

commit 4c61a04cd5207f2140b65f955559aa4ffc848e9c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Oct 18 23:16:05 2018 +0300

    Make cmake's check_const_exists() rely on cache

commit 878bb2d3b9484b27594308da1d0d6a7c9bdf6647
Merge: cec4a371 5a455acd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 17 23:21:32 2018 +0300

    Merge branch 'be-wm-overrun-v2'
    
    * be-wm-overrun-v2:
      Fix hangs due to watermarks overruns in bufferevents implementations
      test: cover watermarks (with some corner cases) in ssl bufferevent
    
    Fixes: #690

commit 5a455acd3bdf9a0117f909450ac7ea693ca93912
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 17 23:21:17 2018 +0300

    Fix hangs due to watermarks overruns in bufferevents implementations
    
    Some implementations of bufferevents (for example openssl) can overrun
    read high watermark.
    And after this if user callback will not drain enough data it will be
    suspended (i.e. it will not be runned again anymore).
    This is not the expecting behaviour as one may guess, since in this case
    the data will never be read. Hence once we detected that the watermark
    exceeded (even after calling user callback) we will schedule the
    callback again.
    
    This also can be fixed in bufferevent openssl implementation (by
    strictly limiting how much data is added to the read buffer according to
    read high watermark), but since this data is already available (and in
    memory) there is no point in doing so.

commit a5b2ed56c3da47e4815bea9b20a5a97567b53dde
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Oct 4 01:03:10 2018 +0300

    test: cover watermarks (with some corner cases) in ssl bufferevent

commit cec4a37120b7fe07525018e4415db8adcfba9299
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 17 11:14:48 2018 +0300

    Add -fdiagnostics-color=always for Ninja

commit 8483c5351abdd18766232de8431290165717bd57
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Sep 14 02:24:44 2018 +0300

    evrpc: avoid NULL dereference on request is not EVHTTP_REQ_POST
    
    Fixes: #660

commit 7af974eeaa7e5cf2f73e3176782c5a788a74f08e
Author: Carlo Marcelo Arenas Belón <carenas@gmail.com>
Date:   Wed Aug 15 13:57:01 2018 -0700

    test: make sure pthread is defined
    
    avoid warnings with any modern C99 compiler due to implicit function
    declaration for pthread_create, as shown by the following :
    
    test/regress_dns.c:2226:2: warning: implicit declaration of function
          'pthread_create' is invalid in C99 [-Wimplicit-function-declaration]
            THREAD_START(thread[0], race_base_run, &rp);
            ^
    test/regress_thread.h:35:2: note: expanded from macro 'THREAD_START'
            pthread_create(&(threadvar), NULL, fn, arg)
            ^
    test/regress_dns.c:2226:2: warning: this function declaration is not a prototype
          [-Wstrict-prototypes]
    test/regress_thread.h:35:2: note: expanded from macro 'THREAD_START'
            pthread_create(&(threadvar), NULL, fn, arg)
            ^
    
    $ clang --version
    Apple LLVM version 9.1.0 (clang-902.0.39.2)
    Target: x86_64-apple-darwin17.7.0
    Thread model: posix
    InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
    
    Closes: #686 (cherry-picked)

commit 29cc8386a2f7911eaa9336692a2c5544d8b4734f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Aug 18 23:50:10 2018 +0300

    appveyor: add all build tree into artifacts in case of failure
    
    This will help in investigations of win32 failures...
    
    P.S. looks like there is no better way, since
    "artifacts.*.publish_on_failure" hadn't been implemented yet (while was
    requiested in 2015).

commit 855f0804305a545da6880850d16809969ce72edd
Author: Bogdan Harjoc <bharjoc@bitdefender.com>
Date:   Thu Aug 9 14:47:17 2018 +0300

    dns-example: free result in getaddrinfo callback
    
    According to evdns.c, the result not freed by libevent after
    the callback runs:
    
    evdns_getaddrinfo_gotresolve()
    {
        ...
        data->user_cb(0, data->pending_result, data->user_data);
        data->pending_result = NULL;
        ...
    }
    
    To reproduce, build with -fsanitize=address, add -g to the getopt
    list in dns-example.c like in the current commit and run
    
      dns-example -g google.com
    
    Closes: #681 # cherry-picked

commit be371163027d3988a30620537bf3fcb81fb7f077
Author: Philip Prindeville <philipp@redfish-solutions.com>
Date:   Sat Jun 16 17:16:10 2018 -0600

    Eliminate compiler warnings (at least for gcc/linux)
    
    Signed-off-by: Philip Prindeville <philipp@redfish-solutions.com>
    Closes: #646 # cherry-picked from the PR

commit ee12c516cf5766b2c32203dcc20c32b8691a8ebb
Merge: e85818d2 4802c132
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Aug 2 09:29:29 2018 +0300

    Merge branch 'evdns_getaddrinfo-race-fix'
    
    * evdns_getaddrinfo-race-fix:
      evdns: add regress test for getaddrinfo race
      evdns: fix race condition in evdns_getaddrinfo()
    
    Merges: #673

commit 4802c132a25269c28893d1b7af9bf6e14d32b5ab
Author: Sergey Fionov <fionov@gmail.com>
Date:   Thu Aug 2 09:13:33 2018 +0300

    evdns: add regress test for getaddrinfo race

commit b59525ece4288d844fa31945eedddd859d58bfaa
Author: Sergey Fionov <sfionov@adguard.com>
Date:   Thu Aug 2 00:35:28 2018 +0300

    evdns: fix race condition in evdns_getaddrinfo()
    
    evdns_getaddrinfo() starts two parallel requests for A and AAAA record.
    But if request is created from thread different from dns_base's, request of A record is
    started immediately and may result in calling free_getaddrinfo_request() from
    evdns_getaddrinfo_gotresolve() because `other_req' doesn't exist yet.
    
    After that, request of AAAA record starts and finishes, and evdns_getaddrinfo_gotresolve()
    is called again for structure that is already freed.
    
    This commits adds locking into evdns_getaddrinfo() function.

commit e85818d24850540d220e6d7bc0a30653ba2135f2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jun 19 10:15:08 2018 +0300

    Cleanup __func__ detection
    
    First of all __func__ is not a macro, it is char[] array, so the code
    that we had before in cmake, was incorrect, i.e.:
      #if defined (__func__)
      #define EVENT____func__ __func__
      #elif defined(__FUNCTION__)
      #define EVENT____func__  __FUNCTION__
      #else
      #define EVENT____func__ __FILE__
      #endif
    
    So just detect do we have __func__/__FUNCTION__ in configure/cmake
    before build and define EVENT__HAVE___func__/EVENT__HAVE___FUNCTION__
    to use the later to choose which should be used as a __func__ (if it is
    not presented).
    
    Closes: #644

commit c3a6fe75e1511a4c7a7a6ef0a5954b1918902933
Merge: 4728ffed ee0c5799
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 1 09:48:42 2018 +0300

    Merge branch 'official/pr/671' -- README cleanup
    
    * official/pr/671:
      Capitalise project names consistently in README.md
      Indent configure flag section to make markdown format them as code
      Use https for resources that support it
      Rewords awkward sentences in README.md
      Fix typos in README.md

commit 4728ffed865985ab663b2e067afb904d124fc1db
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 1 00:58:02 2018 +0300

    autotools: include win32 specific headers for socklen_t detection on win32/mingw
    
    The [1] removes EVENT__ prefix, and now if we will incorrectly detect
    that "foobar" (or socklen_t in our case) type is not available, but
    somewhere later it will be available then we will get next error [2]:
      error: two or more data types in declaration specifiers
    
    According to [3]:
    - Compile something in Cygwin and you are compiling it for Cygwin.
    - Compile something in MinGW and you are compiling it for Windows.
      And I can confirm this, since there is _WIN32 defined (according to [4])
    
    And since according to [5] our image in appveyour (Visual Studion 2015)
    has mingw (and we use it, not cygwin) we need ws2tcpip.h (over
    sys/socket.h -- which does not exist in win32) header to detect
    socklen_t existence.
    
    [1]: 587e9f5828c4eb3c6e79e9eb29f174e4ae0c05bd ("config.h can't be prefixed unconditionally")
    [2]: https://ci.appveyor.com/project/nmathewson/libevent/build/job/yonukoc5q3tr3e5e#L372
    [3]: https://stackoverflow.com/questions/771756/what-is-the-difference-between-cygwin-and-mingw
    [4]: https://www.appveyor.com/docs/build-environment/#mingw-msys-cygwin
    [5]: https://ci.appveyor.com/project/nmathewson/libevent/build/job/yonukoc5q3tr3e5e#L164
    
    Fixes: #649

commit ee0c57993f285855bc7cb9a7b5f4f55dadc9105d
Author: Aapeli <git@aapelivuorinen.com>
Date:   Wed Aug 1 10:29:43 2018 +1000

    Capitalise project names consistently in README.md

commit 72426ff433508dff1eb61c2a4c5d2ad6c1a006b0
Author: Aapeli <git@aapelivuorinen.com>
Date:   Wed Aug 1 10:24:50 2018 +1000

    Indent configure flag section to make markdown format them as code

commit a52bd1e37fb8a3e8c207f777fea175a519952d58
Author: Aapeli <git@aapelivuorinen.com>
Date:   Wed Aug 1 10:21:57 2018 +1000

    Use https for resources that support it

commit 560d4f32961cc6df93c6c90f26ed7124a13fcfb3
Author: Aapeli <git@aapelivuorinen.com>
Date:   Wed Aug 1 10:20:28 2018 +1000

    Rewords awkward sentences in README.md

commit e5816df59e8bfad41f63bf3a9541671e6892177c
Author: Aapeli <git@aapelivuorinen.com>
Date:   Wed Aug 1 10:17:42 2018 +1000

    Fix typos in README.md

commit bdd531288affe9fa46184bb9b492defbcf379c63
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 1 03:01:43 2018 +0300

    appveyor: disable almost all configurations (except autotools/cmake basic)
    
    Since we have FREE plan, we have a lot of limits on our builds, so let's
    reduce their amount to make them run/start faster (I hope).

commit 0f04e9a401b0ebba7863b36e2f305c664980ba79
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 1 00:44:58 2018 +0300

    vagrant/win32: reduce amount of threads
    
    Otherwise I got:
        win:     855 [main] sh 840 fork: child -1 - CreateProcessW failed for 'C:\tools\cygwin\bin\sh.exe', errno 5
        win: /bin/sh: /usr/bin/sed: Input/output error
        win: /bin/sh: line 1: /bin/sh: Input/output error
        win:   CC       bufferevent_pair.lo
        win: /bin/sh: fork: Input/output error
        win: make[1]: *** [Makefile:1722: buffer.lo] Error 126
        win: make[1]: *** Waiting for unfinished jobs....
        win:   CC       bufferevent_ratelim.lo
        win:     176 [main] sh 2440 fork: child -1 - CreateProcessW failed for 'C:\tools\cygwin\bin\sh.exe', errno 5
        win: /bin/sh: fork: Input/output error
        win:       0 [main] sh 3684 fork: child -1 - CreateProcessW failed for 'C:\tools\cygwin\bin\sh.exe', errno 5
        win: ./libtool: fork: Input/output error
        win: make[1]: *** [Makefile:1722: bufferevent_filter.lo] Error 254
        win:       0 [main] sh 1356 fork: child -1 - CreateProcessW failed for 'C:\tools\cygwin\bin\sh.exe', errno 5
        win: ./libtool: fork: Input/output error
        win:       0 [main] sh 3640 fork: child -1 - CreateProcessW failed for 'C:\tools\cygwin\bin\sh.exe', errno 5
        win: ./libtool: line 922: /usr/bin/sed: Input/output error
        win: ./libtool: fork: Input/output error
        win:       0 [main] sh 3444 fork: child -1 - CreateProcessW failed for 'C:\tools\cygwin\bin\sh.exe', errno 5
        win:       0 [main] sh 3796 fork: child -1 - CreateProcessW failed for 'C:\tools\cygwin\bin\sh.exe', errno 5
        win: ./libtool: fork: Input/output error
        win:     693 [main] sh 304 fork: child -1 - CreateProcessW failed for 'C:\tools\cygwin\bin\sh.exe', errno 5
        win: ./libtool: fork: Input/output error
        win: ./libtool: fork: Input/output error
        win: ./libtool: line 1377: /usr/bin/sed: Input/output error
        win: :   error: Failed to create '.libs'

commit 9cd279c753f97f87dc40da49f099c95149142083
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 1 00:28:48 2018 +0300

    vagrant/win32: add missing aclocal

commit 30d77f1b59bcd1433a89e803b9fa045c50883868
Author: Xiaozhou Liu <lxz1983@gmail.com>
Date:   Thu Jul 5 11:25:24 2018 +0800

    Fix typo
    
    Closes: #658

commit 514dc7579c43e673bdf613e01690371438661260
Author: Nathan French <nate@cl0d.com>
Date:   Thu Jul 5 12:46:51 2018 -0400

    [http] fix C90 warnings

commit 8572c273e9c3db659620ccbba8cd83a582f09d39
Author: Greg Hazel <ghazel@gmail.com>
Date:   Sun Jun 24 13:33:44 2018 -0700

    use mm_ allocators
    
    Signed-off-by: Kirill Rodriguez <theoden8@tutamail.com>
    Signed-off-by: Kirill Rodriguez <theoden8@gmail.com>

commit 24236aed01798303745470e6c498bf606e88724a
Author: Philip Prindeville <philipp@redfish-solutions.com>
Date:   Wed Jun 20 23:47:51 2018 -0600

    Tell Travis to use quiet git clone
    
    Otherwise the logs show a bunch of pointless progress, which is
    really only useful for interactive sessions.
    
    Signed-off-by: Philip Prindeville <philipp@redfish-solutions.com>
    Closes: #651 (cherry-picked)

commit d9ffd2213702bc22c467bd83c230a1a5e97e9e67
Author: Leo Zhang <nguzcf@gmail.com>
Date:   Tue May 15 12:14:05 2018 +0800

    test: make regress_dns C89 compatible
    
    Closes: #635 (cherry-picked)

commit 064a598716e69a1ac3937dd1bbc74194d0f3d3cf
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jun 21 02:37:24 2018 +0300

    Ignore evconfig-private.h for autotools
    
    Fixes: e2874d95af584b3657eb5dc1d2e5404811dce117 ("Adopt ignore rules for
    cmake + ninja")

commit 35258a1f4e09d9e7fcb003cd0572343670180495
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jun 19 10:18:46 2018 +0300

    Replace all EVENT_HAVE with EVENT__HAVE (EVENT__HAVE_USLEEP)

commit d2acf67ec3ad2916236396992f094c0c65016028
Author: Philip Prindeville <philipp@redfish-solutions.com>
Date:   Sat Jun 16 17:39:34 2018 -0600

    Add convenience macros for user-triggered events
    
    Signed-off-by: Philip Prindeville <philipp@redfish-solutions.com>
    Closes: #647 (picked)

commit 755896efe25e5caecd498c08cce072c713720783
Author: Philip Prindeville <philipp@redfish-solutions.com>
Date:   Sat Jun 16 16:44:06 2018 -0600

    Get rid of macros which are never used
    
    There are no expansions of these macros or tests for their existence.
    
    Signed-off-by: Philip Prindeville <philipp@redfish-solutions.com>

commit 0789bc5220af6eaa9b483afcd1405be6f01d2187
Author: an-tao <20741618@qq.com>
Date:   Fri May 25 18:07:28 2018 +0800

    fix spelling mistakes
    
    Closes: nmathewson/Libevent#162

commit 587e9f5828c4eb3c6e79e9eb29f174e4ae0c05bd
Author: Philip Prindeville <philipp@redfish-solutions.com>
Date:   Wed Apr 18 15:09:35 2018 -0600

    config.h can't be prefixed unconditionally
    
    The script make-event-config.sed was mangling all the symbols by
    prefixing them with "EVENT__".  The problem here is that some
    symbols aren't for local consumption within libevent, but rather
    influence other system header files (ex: __USE_FILE_OFFSET64 is
    used by dozens of header files including <sys/sendfile.h>).
    
    As a workaround, all symbols starting with a capital letter only
    (with the exception of STDC_HEADERS which must also be left
    untouched) will be mangled.
    
    Future contributors will need to be aware of this distinction.

commit c57f5c34903b02c6e7378865f71a2b83a5befb96
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 7 02:39:44 2018 +0300

    Make rpc headers self-compilable
    
    Fixes: #633

commit 1619cc35e45a4f993a6a0cf64a752acdc78b0d41
Merge: 23c2914f 1af80176
Author: Nathan French <nate@cl0d.com>
Date:   Wed May 2 19:34:04 2018 -0400

    Merge pull request #632 from NathanFrench/realign_struct_event
    
    Reorder fields in struct event for memory efficiency

commit 1af8017648d63d461737805e2607174c38708950
Author: Nathan French <nate@cl0d.com>
Date:   Mon Apr 30 18:13:45 2018 -0400

    [core] re-order fields in struct event for memory efficiency
    
    The sizeof `struct event` can reduced on both 32 bit and 64 bit systems
    by moving the 4 bytes that make up `ev_events` and `ev_res` below `ev_fd`,
    before `struct event_base * ev_base;` since our compiler wouldn't dare do
    such a thing (it instead will pad twice, whereas it only needs to be padded
    once)
    
    ```C
    struct event {
                                                             /*  OFFS |  SZ   Bytes  | Total Bytes | START - END  */
        struct event_callback ev_evcallback;                 /*   0x0 |  40          | 40          | 0x0   - 0x28 */
    
        union {                                              /*  0x28 |  ----------- | ----------- | ------------ */
            TAILQ_ENTRY(event) ev_next_with_common_timeout;  /*       |       ((16)) |             |              */
            int min_heap_idx;                                /*       |       ((04)) |             |              */
        }   ev_timeout_pos;                                  /*       |  16          | 56          | 0x28  - 0x38 */
        int ev_fd;                                           /*  0x38 |  04          | 60          | 0x38  - 0x3c */
    ```
    
    Since the next field is 8 bytes in length, and we are up to 60 bytes, `ev_fd` ends up being padded (4 more bytes on 64b).
    
    ```C
                                  /* --- 1 byte gap HERE --->            1           | <61>                      */
                                  /* --- 1 byte gap HERE --->            1           | <62>                      */
                                  /* --- 1 byte gap HERE --->            1           | <63>                      */
                                  /* --- 1 byte gap HERE --->            1           | <64>                      */
        struct event_base * ev_base;                         /*  0x3c |  8           | 68         | 0x3c - 0x40  */
        union {                                              /*  0x40 | ------------ | ---------- | ------------ */
            struct {                                         /*       | ------------ |            |              */
                LIST_ENTRY (event) ev_io_next;               /*       |       ((16+  |            |              */
                struct timeval ev_timeout;                   /*       |         16)) |            |              */
            } ev_io;                                         /*       | ((32))       |            |              */
            struct {                                         /*       | ------------ |            |              */
                LIST_ENTRY (event) ev_signal_next;           /*       |      ((16+   |            |              */
                short   ev_ncalls;                           /*       |        02+   |            |              */
                short * ev_pncalls;                          /*       |        08))  |            |              */
            } ev_signal;                                     /*       | ((26))       |            |              */
        } ev_;                                               /*  0x60 | 32           | 100        | 0x40 - 0x60  */
    
        short ev_events;                                     /*  0x60 | 2            | 102        | 0x60 - 0x62  */
        short ev_res;                                        /*  0x62 | 2            | 104        | 0x62 - 0x64  */
    ```
    
    We now hit another line, `struct timeval` is 16 bytes on 64b arch, so we have 4 more bytes
    of padding on `ev_res`.
    
    ```C
        /* --- 1 byte gap HERE --- */
        /* --- 1 byte gap HERE --- */
        /* --- 1 byte gap HERE --- */
        /* --- 1 byte gap HERE --- */
        struct timeval ev_timeout;                           /*  0x64 | 16           | 120        | 0x64 - 0x74  */
    };
    ```
    
    After moving `ev_events` and `ev_res` below `ev_fd` we have something
    a bit more optimal:
    
    ```C
    struct event2 {
                                                             /*  OFFS |  SZ / Bytes  | RSUM Bytes | START - END  */
        struct event_callback ev_evcallback;                 /*   0x0 | 40           | 40         | 0x0   - 0x28 */
        union {                                              /*  0x28 | ------------ | ---------- | ------------ */
            TAILQ_ENTRY(event) ev_next_with_common_timeout;  /*       |       ((16)) |            |              */
            int min_heap_idx;                                /*       |       ((04)) |            |              */
        } ev_timeout_pos;                                    /*       | 16           | 56         | 0x28  - 0x38 */
        int ev_fd;                                           /*  0x38 | 4            | 60         | 0x38  - 0x3c */
        short ev_events;                                     /*  0x3c | 2            | 62         | 0x3c  - 0x3e */
        short ev_res;                                        /*  0x3e | 2            | 64         | 0x3e  - 0x40 */
    
        struct event_base * ev_base;                         /*  0x40 | 8            | 74         | 0x40  - 0x48 */
        union {                                              /*  0x48 | ------------ | ---------- | ------------ */
            struct {                                         /*       | ------------ |            |              */
                LIST_ENTRY (event) ev_io_next;               /*       |        ((16+ |            |              */
                struct timeval ev_timeout;                   /*       |         16)) |            |              */
            } ev_io;                                         /*       | ((32))       |            |              */
            struct {                                         /*       | ------------ |            |              */
                LIST_ENTRY (event) ev_signal_next;           /*       |       ((16+  |            |              */
                short   ev_ncalls;                           /*       |         02+  |            |              */
                short * ev_pncalls;                          /*       |         08)) |            |              */
            } ev_signal;                                     /*       | ((26))       |            |              */
        } ev_;                                               /*       | 32           | 106        | 0x48 - 0x68  */
        struct timeval ev_timeout;                           /* 0x68  | 16           | 120        | 0x68 - 0x78  */
    };
    ```
    
    We still have a gap here, but the first was removed.
    
    Again, we can save 8 bytes on both 32 and 64 word sizes (32/64 byte cacheline).
    
    Below are the results for testing v2.1.6 -> master -> master + this patch (Release/-O3)
    
    Code:
    
    ```C
      #include <event2/event.h>
    
      int
      main(int argc, char ** argv) {
          printf("%zu\n", event_get_struct_event_size());
          return 0;
      }
    ```
    
    Branch: `master` (2.2.x)
    
    ```
      $ gcc -O3 -Wall -Wl,-R/usr/local/lib bleh.c -L/usr/local/lib -o bleh  -levent
      $ ldd bleh
          linux-vdso.so.1 =>  (0x00007ffc3df50000)
          libevent.so.2.2.0 => /usr/local/lib/libevent.so.2.2.0 (0x00007f91fd781000)
          libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f91fd3a1000)
          libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f91fd182000)
          /lib64/ld-linux-x86-64.so.2 (0x00007f91fdbcc000)
      $ ./bleh
      128
    ```
    
    Release: `2.1.6`
    
    ```
      $ gcc -O3 bleh.c -o bleh  -levent
      $ ldd bleh
          linux-vdso.so.1 =>  (0x00007ffd43773000)
          libevent-2.1.so.6 => /usr/lib/x86_64-linux-gnu/libevent-2.1.so.6 (0x00007feb3add6000)
          libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007feb3a9f6000)
          libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007feb3a7d7000)
          /lib64/ld-linux-x86-64.so.2 (0x00007feb3b22a000)
      $ ./bleh
      128
    ```
    
    Branch: `this one`
    
    ```
      $ gcc -O3 -Wl,-R./lib bleh.c -o bleh -L./lib -levent
      $ ldd bleh
          linux-vdso.so.1 =>  (0x00007ffff55f7000)
          libevent.so.2.2.0 => ./lib/libevent.so.2.2.0 (0x00007ff8e5c82000)
          libc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007ff8e58a2000)
          libpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007ff8e5683000)
          /lib64/ld-linux-x86-64.so.2 (0x00007ff8e60cd000)
      $ ./bleh
      120
    ```

commit 23c2914f6b430f2c2d74c267c13ffab3dda1b325
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Apr 24 00:59:11 2018 +0300

    Notify event base if there are no more events, so it can exit without delay
    
    Fixes: #623

commit accf383e044257ecdef002ea255056a5d15a4811
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Apr 23 01:50:55 2018 +0300

    Fix CheckFunctionExistsEx() cmake macro on win32
    
    For example under mingw64 it could not detect that strtok_r() exists,
    because it checks with:
      void *p = func_name;
    
    And for this you need the function to be defined, so just sync our
    CheckFunctionExistsEx.c with CheckFunctionExists.c from cmake (and later
    we should drop them out) since it does correct things to detech
    functions existence.
    
    Also for WIN32 there is -FIwinsock2.h -FIws2tcpip.h, and I guess that is
    not works for mingw gcc (since -F in gcc is framework, and in windows
    -FI is like -include in gcc). But looks like we do not need them
    already (due to fixed CheckFunctionExistsEx()).
    
    Refs: #605

commit d1c8993c3c34030b68ecb6079bd9dce8cb3d3604
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Apr 24 14:46:06 2018 +0300

    test/dns: install correct RLIMIT_NOFILE in bufferevent_connect_hostname_emfile
    
    Otherwise poll() will fail with EINVAL:
           EINVAL The nfds value exceeds the RLIMIT_NOFILE value.
    
    P.S. and cleanup this test a little, with early-return.
    
    CI: https://travis-ci.org/libevent/libevent/jobs/370350426

commit da028dec497722793ada3ce1a0358c1bf68161de
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Apr 24 02:56:08 2018 +0300

    travis-ci: allow tests under osx to fail (temporary, until we will fix them)

commit e4edc7fc27bb96b4811f1c24d591f5c5bca69bdd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Apr 24 02:22:58 2018 +0300

    test/http: cover evhttp_connection_get_addr() for incomming connections
    
    Refs: #510

commit 367cd9e5c2b8e3f9b8dbed40bfe8a0ed79285c36
Author: Greg Hazel <ghazel@gmail.com>
Date:   Sun Feb 11 16:28:58 2018 -0800

    Fix evhttp_connection_get_addr() fox incomming http connections
    
    Install conn_address of the bufferevent on incomping http connections
    (even though this is kind of subsytem violation, so let's fix it in a
    simplest way and thinkg about long-term solution).
    
    Fixes: #510
    Closes: #595 (pick)

commit a3d8f2e09302536c6c0ffc3ccb1fc6f43b51dc4f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Apr 24 01:45:00 2018 +0300

    test/dns: verify bufferevent_socket_connect() errorcb invoking if socket() fails
    
    Refs: #600

commit f7bc1337977553f5f966f13840a5f7feba2d0bd5
Author: Jesse Fang <boycht@gmail.com>
Date:   Fri Feb 23 19:15:12 2018 +0800

    bufferevent_socket_connect{,_hostname}() missing event callback and use ret code
    
    - When socket() failed in bufferevent_socket_connect() , the event
      callback should be called also in
      bufferevent_socket_connect_hostname().  eg. when use
      bufferevent_socket_connect_hostname() to resolve and connect an IP
      address but process have a smaller ulimit open files, socket() fails
      always but caller is not notified.
    
    - Make bufferevent_socket_connect()'s behavior more consistent: function
      return error then no callback, function return ok then error passed by
      event callback.
    
    Fixes: #597
    Closes: #599
    Closes: #600

commit 623ef3ccdc0aafac7ae77a723cbad6d552ff9a01
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Apr 24 01:34:06 2018 +0300

    test/dns: cleanup test_bufferevent_connect_hostname()

commit a5f19422fdc91cf1e645fc318a174f33f132b9ac
Merge: e2874d95 5d74565a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Apr 23 00:52:57 2018 +0300

    Merge branch 'pull-628'
    
    * pull-628:
      Give priority to the build directory headers
      Do not ship evconfig-private.h in dist archive
    
    Closes: #628

commit 5d74565a961e790ba7f28e8e44a81fb45127fd21
Author: Cristian Morales Vega <cristian@samknows.com>
Date:   Thu Apr 19 09:39:39 2018 +0100

    Give priority to the build directory headers
    
    Not changing anything right now AFAIK. But if for any reason in the
    future we end up with two headers with the same name in the source and
    build directories, chances are we want to use the one in the build
    directory.

commit 0379eb4b5d0de2f1eac673d75c60358b85a220c0
Author: Cristian Morales Vega <cristian@samknows.com>
Date:   Thu Apr 19 09:28:36 2018 +0100

    Do not ship evconfig-private.h in dist archive
    
    It will be generated by autotools, so there is not reason to include it.
    And infact this breaks compilation with out-of-tree builds (VPATH),
    since, for the quote form of the include directive, headers in the
    directory of the file with the #include line have priority over those
    named in -I options, the copy of evconfig-private.h from the source
    directory had priority over the one in the build directory.

commit e2874d95af584b3657eb5dc1d2e5404811dce117
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Apr 23 00:26:08 2018 +0300

    Adopt ignore rules for cmake + ninja
    
    In case we have build directory differs from source directory there will be
    bunch of files we should ignore, so just remove leading "/" for some or rules.
    And fix others.

commit ab3224c3e66cf92779f8bd91ffe90445e636fa50
Author: SuckShit <satansavior@gmail.com>
Date:   Fri Apr 20 15:48:32 2018 +0800

    Fix assert() condition in evbuffer_drain() for IOCP
    
    In the case of iocp, in the for loop above, there is a situation where:
      remaining == chain->off == 0
    
    And this happens due to CHAIN_PINNED_R() case (that is used only in
    buffer_iocp.c)
    
    Closes: #630 (picked)

commit ba78ba9e8ba4c964dd5d14a281d7421c95d37937
Author: The Gitter Badger <badger@gitter.im>
Date:   Sun Apr 15 23:02:05 2018 +0000

    Add Gitter badge

commit 0fa43c99fbba6f3b1827ada98302f548206a358f
Author: Philip Herron <phil.herron@neueda.com>
Date:   Thu Apr 5 15:17:06 2018 +0100

    cmake: ensure windows dll's are installed as well as lib files
    
    Closes: #621

commit 791e3de0c38f9f413f33addcac2d8bca68590ca6
Author: dpayne <darby.payne@gmail.com>
Date:   Tue Apr 3 15:43:22 2018 -0700

    Generating evdns_base_config_windows_nameservers docs on all platforms

commit 2c1562949c49febe9a4d5ec33cabe99f1f6a82e1
Author: dpayne <darby.payne@gmail.com>
Date:   Tue Apr 3 15:17:51 2018 -0700

    Fixing doxygen docs for evdns_base_search_clear when generated on non-windows machines

commit 28b8075400c70b2d2da2ce07e590c2ec6d11783d
Author: Bernard Spil <brnrd@FreeBSD.org>
Date:   Mon Apr 2 13:18:27 2018 +0200

    Fix build with LibreSSL 2.7
    
    LibreSSL 2.7 implements OpenSSL 1.1 API except for BIO_get_init()
    
    See also: https://bugs.freebsd.org/226900
    Signed-off-by: Bernard Spil <brnrd@FreeBSD.org>
    Closes: #617 (cherry-pick)

commit 33baa4e59fbf9432d77a19c6b2b45402580b79a5
Author: Philip Prindeville <philipp@redfish-solutions.com>
Date:   Wed Mar 28 08:25:28 2018 -0600

    Avoid possible SEGVs in select() (in unit tests)
    
    Per the POSIX definition of select():
    
    http://pubs.opengroup.org/onlinepubs/009696699/functions/pselect.html
    
    "Upon successful completion, the select() function may modify the object
    pointed to by the timout argument."
    
    If "struct timeval" pointer is a "static const", it could potentially
    be allocated in a RO text segment.  The kernel would then try to copy
    back the modified value (with the time remaining) into a read-only
    address and SEGV.
    
    Signed-off-by: Philip Prindeville <philipp@redfish-solutions.com>
    Closes: #614

commit 939171dc4b3a69727b79380f26ad19e990dea922
Author: Greg Hazel <ghazel@gmail.com>
Date:   Wed Mar 28 19:30:38 2018 -0700

    remove Proxy-Connection

commit 4ba48739673060baea581774992970fa46c2f813
Author: Greg Hazel <ghazel@gmail.com>
Date:   Tue Mar 20 18:04:53 2018 -0700

    don't fail be_null_filter if bytes are copied
    
    Otherwise it will not reset timeouts for the IO, but other things should
    still works correctly.
    
    Also evbuffer_remove_buffer() could return 0, due to empty buffers, for
    example during flushing bufferevent, so let's count this is BEV_OK too.

commit 4055081499cba32642dd72427a8f9d3ad7e50e79
Author: Greg Hazel <ghazel@gmail.com>
Date:   Tue Mar 20 15:12:07 2018 -0700

    Call underlying bev ctrl GET_FD on filtered bufferevents
    
    Fixes: #611
    Fixes: #610

commit 08a0d366073eacf800027725891c2f668f2f0144
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Feb 27 21:12:14 2018 +0300

    Fix base unlocking in event_del() if event_base_set() runned in another thread
    
    Image next situation:
      T1:                                        T2:
       event_del_()
         lock the event.ev_base.th_base_lock
         event_del_nolock_()                     event_set_base()
         unlock the event.ev_base.th_base_lock
    
    In this case we will unlock the wrong base after event_del_nolock_()
    returns, and deadlock is likely to happens, since event_base_set() do
    not check any mutexes (due to it is possible to do this only if event is
    not inserted anywhere).
    
    So event_del_() has to cache the base before removing the event, and
    cached base.th_base_lock after.

commit f0fd92f2c41fd5bf3b270ee338089dd9329d0354
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Feb 27 21:08:35 2018 +0300

    Convert event_debug_*() helpers from macros to static functions

commit 1a448088e3aef5b6baf161eb0f6d17e18a77313c
Author: stenn <stenn@ntp.org>
Date:   Sun May 14 06:22:11 2017 -0400

    Provide Makefile variables LIBEVENT_{CFLAGS,CPPFLAGS,LDFLAGS}
    
    This will allow a parent package to specify compiler, CPP, and linker
    flags to a libevent built as a sub-package. Document this in
    whatsnew-2.2.txt.
    
    Picked-from: #506
    Closes: #506

commit cd57e38c3f77d0f6a718d9c1f2e3ead78a98bd06
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Feb 13 17:43:02 2018 +0300

    http: remove message in case !Content-Length and Connection!=close
    
    Since [1] GET can have body, and hence for every incomming connection it
    will print this error.
    
    [1] db483e3b002b33890fc88cadd77f6fd1fccad2d2 ("Allow bodies for
    GET/DELETE/OPTIONS/CONNECT")
    
    Noticed-by: BotoX (irc)
    Refs: #408

commit 93913da1c4a528e0a832dc8dc163fa30f3e580d4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 12 19:43:13 2018 +0300

    buffer: fix incorrect unlock of the buffer mutex (for deferred callbacks)
    
    TSAN reports:
      WARNING: ThreadSanitizer: unlock of an unlocked mutex (or by a wrong thread) (pid=17111)
          #0 pthread_mutex_unlock /build/gcc/src/gcc/libsanitizer/sanitizer_common/sanitizer_common_interceptors.inc:3621 (libtsan.so.0+0x00000003b71c)
          #1 evbuffer_add <null> (libevent_core-2.2.so.1+0x00000000ddb6)
          ...
    
        Mutex M392 (0x7b0c00000f00) created at:
          #0 pthread_mutex_init /build/gcc/src/gcc/libsanitizer/tsan/tsan_interceptors.cc:1117 (libtsan.so.0+0x0000000291af)
          #1 <null> <null> (libevent_pthreads-2.2.so.1+0x000000000d46)
          ...
    
    $ addr2line -e /lib/libevent_core-2.2.so.1 0x00000000ddb6
    /src/libevent/buffer.c:1815 (discriminator 1)
    
    Introduced-in: ae2b84b2575be93d0aebba5c0b78453836f89f3c ("Replace
    deferred_cbs with event_callback-based implementation.")

commit c62f73f5b57eb4ffa14c3a73fe879d4bda36425c
Author: Joseph Coffland <joseph@cauldrondevelopment.com>
Date:   Tue Jan 30 15:39:41 2018 -0800

    Added evhttp max simultaneous connection limiting

commit f24b28e4aff1dbc3440e283f70ac15aa7cebcc8d
Author: Dmitry Alimov <dvalimov@gmail.com>
Date:   Mon Jan 15 17:30:08 2018 +0300

    Fix typos in comments

commit 61c21492680505706cad9240c39666ee3b56a89c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 9 21:44:57 2018 +0300

    http: fix leaks in evhttp_uriencode()
    
    Fixes: #584

commit 416b48ba7a0b44407b7a053bd21830aa75d7162f
Merge: 88a1abe8 cb6995cf
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jan 4 19:28:59 2018 +0300

    Merge branch 'listener-immediate-close'
    
    * listener-immediate-close:
      test/listener: cover immediate-close logic
      Immediately stop trying to accept more connections if listener disabled

commit cb6995cf786855c082db542dd00b5fafa2ee4b4a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jan 4 19:26:50 2018 +0300

    test/listener: cover immediate-close logic

commit e03cd0b7ebe196cc5c373daa5981ddaddf572bdc
Author: John Fremlin <john@fremlin.org>
Date:   Sun Dec 17 22:43:00 2017 -0500

    Immediately stop trying to accept more connections if listener disabled
    
    This is a refined version of the logic previously in #578
    
    The rationale is that the consumer of sockets may wish to temporarily
    delay accepting for some reason (e.g. being out of file-descriptors).
    The kernel will then queue them up. The kernel queue is bounded and
    programs like NodeJS will actually try to quickly accept and then close
    (as the current behaviour before this PR).
    
    However, it seems that libevent should allow the user to choose whether
    to accept and respond correctly if the listener is disabled.

commit 88a1abe809e5d29618b722ff81ee2fb14119314f
Author: Marcin Szewczyk <marcin.szewczyk@wodny.org>
Date:   Mon Dec 18 14:01:15 2017 +0100

    Fixed last_with_datap description
    
    Grammar and typo fix

commit 727bcea130eb4beea9b1ea53604b9807f6819a9a
Author: John Fremlin <john@fremlin.org>
Date:   Fri Dec 1 01:29:32 2017 +0000

    http: add callback to allow server to decline (and thereby close) incoming connections.
    
    This is important, as otherwise clients can easily exhaust the file
    descriptors available on a libevent HTTP server, which can cause
    problems in other code which does not handle EMFILE well: for example,
    see https://github.com/bitcoin/bitcoin/issues/11368
    
    Closes: #578 (patch cherry picked)

commit 6e5c15d095d37036553d491b52d27fbbda08e7f2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Dec 16 23:28:41 2017 +0300

    Fix typo in cmake because of which EVENT__SIZEOF_SIZE_T was wrong
    
    Fixes: #580

commit 65eb529a9f4dd886d01a9d77ce6d971de9fb1b97
Author: Greg Hazel <ghazel@gmail.com>
Date:   Sat Dec 2 12:53:57 2017 -0800

    CONNECT method only takes an authority

commit 6cce7458d0f94e320f201eb5be94866e6918d66c
Author: yongqing.jiao <yongqing.jiao@datayes.com>
Date:   Sat Dec 9 14:39:07 2017 +0800

    If precise_time is false, we should not set EVENT_BASE_FLAG_PRECISE_TIMER
    
    Fixes: 630f077c296de61c7b99ed83bf30de11e75e2740 ("Simple unit tests for
    monotonic timers")

commit bc65ffc14c62c10feffefe6c3d9975ce1d1a8cd8
Merge: 6ee73ea9 8a460e38
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Dec 10 23:57:19 2017 +0300

    Merge branch 'evconnlistener-do-not-close-client-fd'
    
    Fixes: #577
    
    * evconnlistener-do-not-close-client-fd:
      listener: cover closing of fd in case evconnlistener_free() called from acceptcb
      Revert "Fix potential fd leak in listener_read_cb()"

commit 8a460e385ab56214718ffeacdcf989448c5b8cc2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 5 23:26:28 2017 +0300

    listener: cover closing of fd in case evconnlistener_free() called from acceptcb

commit 94eae336a2f8933741b5984c61616abae9b5ed8c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 5 22:59:20 2017 +0300

    Revert "Fix potential fd leak in listener_read_cb()"
    
    This reverts commit a695a720cda892c270736d127333d73553842094.
    
    @kgraefe:
      "I believe that this commit is just wrong: if lev->cnt is not 1 after
      the callback, new_fd will still never be closed in listener_read_cb().
      So in that case it is the responsibility of the user's code to close
      the file descriptor (which is fine). But why shouldn't it be in the
      other case? And how does the user's code know?"
    
    And I agree

commit 6ee73ea9b0b15a9f4909c51e171b7799210ec26c
Author: Andrey Okoshkin <okoandrey@gmail.com>
Date:   Wed Nov 29 11:13:51 2017 +0300

    Fix generation of LibeventConfig.cmake for the installation tree
    
    'LIBEVENT_INCLUDE_DIRS' is properly initialized in 'LibeventConfig.cmake' as
    'LibeventConfig.cmake.in' contains usage of 'LIBEVENT_CMAKE_DIR' and
    'EVENT_INSTALL_INCLUDE_DIR' variables but not 'EVENT_CMAKE_DIR' and
    'EVENT__INCLUDE_DIRS'.
    Related typos are fixed.

commit c2c08e0203da93938fe35234fa3a1be4d1c3c2e1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 22 10:33:15 2017 +0300

    Add missing includes into openssl-compat.h
    
    Before it depends from the caller #include appropriate headers (at least
    for OPENSSL_VERSION_NUMBER), but let's make it independent.
    
    Fixes: #574

commit 33e363f3dfcd21f5125134395e4a7b3531bc3066
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 20 02:07:54 2017 +0300

    Free dns/event bases in dns-example to avoid leaks

commit b49c70cc2ed54f511e2b41f7ed61d357c88300be
Author: ejurgensen <espenjurgensen@gmail.com>
Date:   Sun Nov 5 12:18:49 2017 +0100

    Fix incorrect ref to evhttp_get_decoded_uri in http.h
    
    Replaces reference in the http.h include header file to evhttp_get_decoded_uri
    with evhttp_uridecode. There is no function called evhttp_get_decoded_uri.

commit 306747e51c1f0de679a3b165b9429418c89f8d6a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 4 19:13:28 2017 +0300

    Fix crashing http server when callback do not reply in place from *gencb*
    
    This is the second hunk of the first patch
    5ff8eb26371c4dc56f384b2de35bea2d87814779 ("Fix crashing http server when
    callback do not reply in place")
    
    Fixes: #567

commit 3f19c5eb8335500ca6f0dd3b62c32d06103757d0
Author: lightningkay <ew_34@sina.com>
Date:   Thu Nov 2 14:58:17 2017 +0800

    cmake doesn't has POLICY CMP0054 in low version

commit db483e3b002b33890fc88cadd77f6fd1fccad2d2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 29 22:53:41 2017 +0300

    Allow bodies for GET/DELETE/OPTIONS/CONNECT
    
    I checked with nginx, and via it's lua bindings it allows body for all
    this methods. Also everybody knows that some of web-servers allows body
    for GET even though this is not RFC conformant.
    
    Refs: #408

commit 99d0a952dada771b91acf63f5208b994e80a2986
Author: Andreas Gustafsson <gson@gson.org>
Date:   Tue Sep 26 19:23:29 2017 +0300

    Do not crash when evhttp_send_reply_start() is called after a timeout.
    
    This fixes the crash reported in issue #509.  The "would be nice"
    items discussed in #509 can be addressed separately.

commit 5ff8eb26371c4dc56f384b2de35bea2d87814779
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 23 00:13:37 2017 +0300

    Fix crashing http server when callback do not reply in place
    
    General http callback looks like:
      static void http_cb(struct evhttp_request *req, void *arg)
      {
        evhttp_send_reply(req, HTTP_OK, "Everything is fine", NULL);
      }
    
    And they will work fine becuase in this case http will write request
    first, and during write preparation it will disable *read callback* (in
    evhttp_write_buffer()), but if we don't reply immediately, for example:
      static void http_cb(struct evhttp_request *req, void *arg)
      {
        return;
      }
    
    This will leave connection in incorrect state, and if another request
    will be written to the same connection libevent will abort with:
      [err] ../http.c: illegal connection state 7
    
    Because it thinks that read for now is not possible, since there were no
    write.
    
    Fix this by disabling EV_READ entirely. We couldn't just reset callbacks
    because this will leave EOF detection, which we don't need, since user
    hasn't replied to callback yet.
    
    Reported-by: Cory Fields <cory@coryfields.com>

commit da3f2ba22adcabaf7355a90d537b4928d0c168d2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 13 21:39:32 2017 +0300

    fix handling of close_notify (ssl) in http with openssl bufferevents
    
    Since it can arrive after we disabled events in that bufferevent and
    reseted fd, hence evhttp_error_cb() could be called after
    SSL_RECEIVED_SHUTDOWN.
    
    Closes: #557

commit 8b0aa7b36a3250fad4953f194c8a94ab25032583
Author: Kiyoshi Aman <kiyoshi.aman@gmail.com>
Date:   Thu Sep 14 17:39:20 2017 -0500

    Port `event_rpcgen.py` and `test/check-dumpevents.py` to Python 3.
    
    These scripts remain compatible with Python 2.

commit 62866f98a5979e3b9ee8db0287be79749fcf7d6a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 24 15:12:13 2017 +0300

    Remove OpenSSL paragram from README
    
    Because it is mauvais ton to use binaries instead of normal packages
    (like apt-get in debian, pacman in arch, and others).
    
    Plus that link was borken and according to [1] OpenSSL do not ship
    binaries officially.
    
    And personally I don't think that this is not obvious that you need
    openssl libraries to build libevent with it's support, and BTW you need
    headers too (of course).
    
    [1]: https://www.openssl.org/community/binaries.html
    Fixes: #562

commit 56010f37ae5b49881f7fd255d5c8a936e1c36909
Author: Vincent JARDIN <vincent.jardin@6wind.com>
Date:   Mon Sep 11 21:56:30 2017 +0200

    test: fix warning
    
    In function ‘send_a_byte_cb’:
    test/regress.c:1853:2: warning: ignoring return value of ‘write’, declared with
    attribute warn_unused_result [-Wunused-result]
      (void) write(*sockp, "A", 1);

commit 1dfec8a97094a26317eac9b3d8a1c16eb1a7dbea
Author: Carlo Marcelo Arenas Belón <carenas@gmail.com>
Date:   Sat Aug 19 16:01:46 2017 -0700

    configure: avoid false positive in DragonFlyBSD
    
    by default, the max buffer size is 16K and histeresis is at 50%, so
    a bigger read is needed to unlock writes than you would expect from
    other BSD (512 bytes)
    
    this doesn't introduce any regression on FreeBSD 11.1, OpenBSD 6.1, NetBSD 7.1,
    macOS 10.12.6 and of course DragonFlyBSD 4.8.1, and most of them show
    a max pipe size of 64K, so the read call should drain them all regardless
    of how conservative they are on the free pipe space they will require
    (usually 512 bytes) before kevent reports the fd as ready for write.
    
    I couldn't find a reference to which bug this code was trying to look for
    and it seems to be there from the beginning of git history so it might be
    no longer relevant.
    
    Issue: #548

commit a86f89d333d870e6714bd28c695ba1774df3d7f5
Author: Carlo Marcelo Arenas Belón <carenas@gmail.com>
Date:   Wed Aug 16 16:52:33 2017 -0700

    test: avoid regress hanging in macOS
    
    a backtrace of the process without this patch :
      * thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGSTOP
        * frame #0: 0x00007fffb1fb7d96 libsystem_kernel.dylib`kevent + 10
          frame #1: 0x0000000108ed0a58 libevent-2.2.1.dylib`kq_dispatch + 696
          frame #2: 0x0000000108ec53d8 libevent-2.2.1.dylib`event_base_loop + 696
          frame #3: 0x0000000108e1763b regress`test_fork + 1931
          frame #4: 0x0000000108e5c7ad regress`run_legacy_test_fn + 45
          frame #5: 0x0000000108e690aa regress`testcase_run_one + 858
          frame #6: 0x0000000108e6954f regress`tinytest_main + 495
          frame #7: 0x0000000108e5c94b regress`main + 171
          frame #8: 0x00007fffb1e88235 libdyld.dylib`start + 1
          frame #9: 0x00007fffb1e88235 libdyld.dylib`start + 1
    
    Issue: #546

commit 506df426dbeb0187bbd3654bd286b4100628fb16
Author: Carlo Marcelo Arenas Belón <carenas@gmail.com>
Date:   Tue Aug 29 00:44:57 2017 -0700

    autotools: confirm openssl is working before using
    
    latest versions of macOS provide pkg-config and libraries for an ancient
    version of openssl as part of the system, but no headers

commit 63c4bf78d6af3c6ff46d2e8e4b53dd9f577a9ca9
Author: Carlo Marcelo Arenas Belón <carenas@gmail.com>
Date:   Fri Sep 1 15:50:36 2017 -0700

    test: fix 32bit linux regress

commit 0ec5edde503096a81831f36441a4115574ac45f0
Author: Carlo Marcelo Arenas Belón <carenas@gmail.com>
Date:   Mon Aug 21 01:08:15 2017 -0700

    autotools: pass $(OPENSSL_INCS) for samples (FTBFS macOS)
    
    if OpenSSL is in a non standard location, need to pass that information
    to any sample that needs it
    
    Closes: #550

commit 5698cff73dac815dab937fd0262dd1f910ad1c3c
Author: Carlo Marcelo Arenas Belón <carenas@gmail.com>
Date:   Thu Aug 17 01:37:01 2017 -0700

    always define EV_INT16_MIN
    
    somehow missing from 043ae7481f4a73b0f48055a0260afa454f02d136

commit 94e5cc84d5adf8075a1a98263d16756faec8ea30
Author: Redfoxmoon <foxyred333@gmail.com>
Date:   Tue Aug 15 05:11:05 2017 +0200

    Add configure check for midipix
    
    Fixes: #540

commit 27934f0b39991172dcfdad23faea9874dd386f10
Author: James Synge <jamessynge@google.com>
Date:   Mon Aug 7 11:06:28 2017 -0400

    Fix race in access to ev_res from event loop with event_active()
    
    Detected using ThreadSanitizer, resolved by capturing the value
    of ev_res in a local variable while the event is locked, then
    passing that captured variable to the callback.
    
    TSAN report:
      I0728 14:35:09.822118   WARNING: ThreadSanitizer: data race (pid=815501)
      I0728 14:35:09.822186     Write of size 2 at 0x7b2c00001bf2 by thread T80 (mutexes: write M1110835549570434736):
      I0728 14:35:09.822248       #0 event_active_nolock_ libevent/event.c:2893:14 (0a2b90577e830d775300664df77d0b91+0x1fdab28)
      I0728 14:35:09.822316       #1 event_active libevent/event.c:2858:2 (0a2b90577e830d775300664df77d0b91+0x1fdd10e)
      I0728 14:35:09.822379       #2 Envoy::Event::TimerImpl::enableTimer(std::chrono::duration<long, std::ratio<1l, 1000l> > const&) envoy/source/common/event/timer_impl.cc:24:5 (0a2b90577e830d775300664df77d0b91+0x459fa0)
      ...
    
      I0728 14:35:09.824146     Previous read of size 2 at 0x7b2c00001bf2 by main thread:
      I0728 14:35:09.824232       #0 event_process_active_single_queue libevent/event.c:1646:33 (0a2b90577e830d775300664df77d0b91+0x1fdf83d)
      I0728 14:35:09.824350       #1 event_process_active libevent/event.c (0a2b90577e830d775300664df77d0b91+0x1fd9ad8)
      I0728 14:35:09.824445       #2 event_base_loop libevent/event.c:1961 (0a2b90577e830d775300664df77d0b91+0x1fd9ad8)
      I0728 14:35:09.824550       #3 Envoy::Event::DispatcherImpl::run(Envoy::Event::Dispatcher::RunType) envoy/source/common/event/dispatcher_impl.cc:166:3 (0a2b90577e830d775300664df77d0b91+0x4576d9)
      ...
    
    Fixes: #543 (pull-request)

commit a10a6f4ed918ea1432820d99e9373f37f906d6f0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Aug 14 23:11:53 2017 +0300

    Remove check against passed bufferevent in bufferevent_socket_connect()
    
    It is a bit confusing to check against the result of EVUTIL_UPCAST(),
    because it can return not NULL for NULL pointers, but for even though
    with bufferevent we are fine (because bufferevent is the first field in
    bufferevent_private), there are no checks for "bufev" in bufferevent's
    API, so just remove it to make it generic.
    
    Fixes: #542
    Signed-off-by: Ivan Maidanski <i.maidanski@samsung.com>
    Signed-off-by: Azat Khuzhin <a3at.mail@gmail.com>

commit b26996a05d9e7aad32e78a7bfab6454d5c11500a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Aug 14 23:03:48 2017 +0300

    Fix wrong assert in evbuffer_drain()
    
    "chain" cannot be NULL here because we have at least one chain (we
    handle empty buffer separatelly) and hence loop will be executed at
    least once.
    
    Link: https://github.com/libevent/libevent/commit/841ecbd96105c84ac2e7c9594aeadbcc6fb38bc4#commitcomment-23631347
    Signed-off-by: Ivan Maidanski <i.maidanski@samsung.com>
    Signed-off-by: Azat Khuzhin <a3at.mail@gmail.com>

commit e83443ec67d45447296c2ce320620a07c88e1d32
Merge: cf7f5b0d c3a61a13
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jul 16 21:40:18 2017 +0300

    Merge remote-tracking branch 'official/pr/527' -- documentation fixes
    
    * official/pr/527:
      Fix a few trivial documentation typos
      Clarify event_free() documentation regarding pending/active events

commit cf7f5b0dc484152ae3be7ea6ba57552595891608
Author: Ondřej Kuzník <ondra@mistotebe.net>
Date:   Wed Jun 28 12:29:29 2017 +0100

    Fix tests with detached builds
    
    Closes: #524

commit c3a61a13d7caefc3834c83ba312da171d3498899
Author: Nikolay Edigaryev <edigaryev@gmail.com>
Date:   Fri Jul 7 01:24:26 2017 +0500

    Fix a few trivial documentation typos

commit 2137886d2fdc84baa8bd7776ce3c18fffa53b2e7
Author: Nikolay Edigaryev <edigaryev@gmail.com>
Date:   Fri Jul 7 01:22:43 2017 +0500

    Clarify event_free() documentation regarding pending/active events
    
    Currently it's not clear as to whether "first make it non-pending and
    non-active" sentence requires user to take some action (e.g. call event_del(),
    which event_free() already does internally) or just describes what this
    function does from the developer point of view.

commit 808524252f888303e4e95f09c3f8c225ef08f096
Author: Nikolay Edigaryev <edigaryev@gmail.com>
Date:   Fri Jun 30 02:27:08 2017 +0500

    Document some obvious cases where a function might also return NULL
    
    Closes: #525

commit cd285e425a906276efafab901d1b9da0e388be48
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 29 22:11:48 2017 +0300

    Fix event_debug_logging_mask_ exporting on win32

commit 1771ec0f4a319f3570f4977050508a6318bd3c1b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 29 22:12:09 2017 +0300

    Vagrant test

commit 3ac4f176eecf7f91fda920c34ab16b38cbb357f2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 29 22:07:57 2017 +0300

    Revert "Make event_debug_get_logging_mask_() real symbol (win32)"
    
    This reverts commit 5f17c12de021c070501e97268e595da82bf38879.

commit 5f17c12de021c070501e97268e595da82bf38879
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 29 20:46:33 2017 +0300

    Make event_debug_get_logging_mask_() real symbol (win32)
    
    I cannot made it work without this, even though dumpbin shows that that symbol
    exists in the event_core.dll, event_extra.dll failed to compile:
    ==> win:      Creating library C:/vagrant/.cmake-vagrant/lib/Debug/event_extra.lib and object C:/vagrant/.cmake-vagrant/lib/Debug/event_extra.exp
    ==> win: http.obj : error LNK2001: unresolved external symbol _event_debug_logging_mask_ [C:\vagrant\.cmake-vagrant\event_extra_shared.vcxproj]
    ==> win: C:\vagrant\.cmake-vagrant\bin\Debug\event_extra.dll : fatal error LNK1120: 1 unresolved externals [C:\vagrant\.cmake-vagrant\event_extra_shared.vcxproj]
    ==> win: Done Building Project "C:\vagrant\.cmake-vagrant\event_extra_shared.vcxproj" (default targets) -- FAILED.
    
    And dumpbin:
      sh-4.1$ /cygdrive/c/Program\ Files\ \(x86\)/Microsoft\ Visual\ Studio\ 12.0/VC/bin/amd64/dumpbin.exe /EXPORTS ./bin/Debug/event_core.dll
    M
        202   C9 00059A3C event_debug_logging_mask_ = _event_debug_logging_mask_

commit ce3af533f1b11c4b302d404483f28660eb5d7190
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 29 15:04:50 2017 +0300

    Fix visibility issues under (mostly on win32)
    
    Refs: #511
    Fixes: 7182c2f561570cd9ceb704623ebe9ae3608c7b43 ("cmake: build SHARED and
    STATIC libraries (like autoconf does)")

commit 2773a5ed5e75540d43500e054581ea1fab2132ac
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 29 18:48:48 2017 +0300

    cmake: set CMP0054 to NEW to avoid variables over expansion (since cmake 3.8)
    
    ==> win: CMake Warning (dev) at CMakeLists.txt:782 (elseif):
    ==> win:   Policy CMP0054 is not set: Only interpret if() arguments as variables or
    ==> win:   keywords when unquoted.  Run "cmake --help-policy CMP0054" for policy
    ==> win:   details.  Use the cmake_policy command to set the policy and suppress this
    ==> win:   warning.
    ==> win:
    ==> win:   Quoted variables like "MSVC" will no longer be dereferenced when the policy
    ==> win:   is set to NEW.  Since the policy is not set the OLD behavior will be used.
    ==> win: This warning is for project developers.  Use -Wno-dev to suppress it.

commit 8b29b136793f3bfdb22fba117527763434363a3f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 29 16:36:24 2017 +0300

    cmake: fix building bench/bench_cascade under win32 (missing getopt)
    
    Because of typo in cmake, now rewrote to make it less error prone (since even
    for non-win32 there are variables overlap).

commit 346f8e17080f4649986e0d48176c0a0a5618ea98
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 29 16:32:30 2017 +0300

    cmake: avoid requiring cmake 3.1 on win32 for dns-example
    
    Avoid using target_sources() from cmake 3.1, just pass needable sources as
    list.

commit 74a2f5935abc78cc9479f649e96c2e090623aa84
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 29 16:24:48 2017 +0300

    le-proxy: fix compiling under win32 (because of no "inline" in C)
    
    Include <util-internal.h> for regular "inline", since it is used everywhere.

commit d22e12eefa11aab34b95e8b07b823f3ad0597239
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun May 28 16:38:20 2017 +0300

    http-connect: exit on error

commit b6a3dc5ccca394bd24a9b51571d1d12de36cf122
Author: Greg Hazel <ghazel@gmail.com>
Date:   Fri May 19 20:11:52 2017 -0700

    handle errors on incoming requests
    
    Signed-off-by: Kirill Rodriguez <theoden8@gmail.com>

commit 76df36d5b2e4ed5a99f136f89e90c93feff1da55
Author: Greg Hazel <ghazel@gmail.com>
Date:   Fri May 19 00:25:04 2017 -0700

    don't strip Proxy-Connection

commit 9652fe0f7948359989a34e0e802c1e1cf9c05b05
Author: Greg Hazel <ghazel@gmail.com>
Date:   Mon May 15 00:36:47 2017 -0700

    add const qualifier to evhttp_uri_join declaration
    
    Signed-off-by: Kirill Rodriguez <theoden8@gmail.com>

commit 15da23cfdbeb5d5b4eeafca0cd93962c26641ae5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 1 21:56:27 2017 +0300

    test: do not use .fieldname in structure initializations (fixes win32)
    
    Fixes: #497

commit 8d89c212587c560df8cd7089fb1a2fcd2a3dca82
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 1 21:55:00 2017 +0300

    Add missing print-winsock-errors.c into dist archive
    
    Refs: #497

commit 00ae45fe53e9e01f61f97c90deba1deb6ac1bc9f
Author: Maximilian Brunner <MaximilianBrunner@icloud.com>
Date:   Tue Apr 25 23:10:13 2017 +0200

    le-proxy: add missing return statement (UAF)
    
    Refs: #501501501501501501501501501

commit 0b4b0efdb8ee710ccae5bad320fc24843fd428e5
Author: José Luis Millán <jmillan@aliax.net>
Date:   Mon Apr 13 08:54:52 2015 +0200

    Return from event_del() after the last event callback termination
    
    Delete the event from the queue before blocking for the current
    event callback termination.
    
    Ensures that no callback is being executed when event_del() returns,
    hence making this function a secure mechanism to access data which is
    handled in the event callack.
    
    Fixes: #236
    Fixes: #225
    Refs: 6b4b77a
    Fixes: del_wait

commit 5ff83989f30daef93a851c2162667375ed1663a5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Apr 30 01:11:31 2017 +0300

    test: cover that after event_del() callback will not be scheduled again
    
    Refs: #236
    Refs: #225

commit f988c5ca0eb654a8e60df174abfc63dd9476be5e
Author: Gonçalo Ribeiro <darklaw13@yahoo.co.uk>
Date:   Fri Apr 28 19:36:42 2017 +0100

    Correct URL for the libevent logo

commit c6c74ce2652fd02527a1212e36cbfd788962132a
Author: David Benjamin <davidben@google.com>
Date:   Thu Apr 20 18:03:50 2017 -0400

    Explicitly call SSL_clear when reseting the fd.
    
    If reconnecting the via BEV_CTRL_SET_FD, bufferevent_openssl.c expects
    OpenSSL to reuse the configuration state in the SSL object but retain
    connection state. This corresponds to the SSL_clear API.
    
    The code currently only calls SSL_set_connect_state or
    SSL_set_accept_state. Due to a quirk in OpenSSL, doing this causes the
    handshake to implicitly SSL_clear the next time it is entered. However,
    this, in the intervening time, leaves the SSL object in an odd state as
    the connection state has not been dropped yet. This behavior also does
    not appear to be documented by OpenSSL.
    
    Instead, call SSL_clear explicitly:
    https://www.openssl.org/docs/manmaster/man3/SSL_clear.html

commit 92cc0b9c3db38088f79c5d1e432c429fbc366968
Author: Dominic Chen <d.c.ddcc@gmail.com>
Date:   Thu Apr 13 14:58:13 2017 -0400

    bufferevent: refactor to use type check macros

commit 266f43af7798befa3d27bfabaa9ae699259c3924
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 27 15:50:23 2017 +0300

    Fix arc4random_addrandom() detecting and fallback (regression)
    
    But this is kind of hot-fix, we definitelly need more sane arc4random
    compat layer.
    
    Fixes: #488
    Introduced-in: 6541168 ("Detect arch4random_addrandom() existence")

commit 177e2171cb44e3929fbb0ec43b1bffb325b0e8ed
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 24 16:49:59 2017 +0800

    Make event_count macros cleaner
    
    Fixes: #489

commit 2e52bace9f9998826bd3819af328efc8d18decf9
Author: Xiang Zhang <angwerzx@126.com>
Date:   Thu Mar 16 23:32:43 2017 +0800

    fix evutil_make_internal_pipe_'s comment that fd[0] for read and f[1] for write

commit b1e8a4138f0da3c8a4bc303ff72b620b41c066d6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 14 13:33:31 2017 +0300

    cmake: use APPEND during exporting targets (for old cmake)
    
    On centos with cmake 2.8.12.2:
      CMake Error at cmake/AddEventLibrary.cmake:92 (export):
        export called with target "event_extra_shared" which requires target
        "event_core_shared" that is not in the export list.
    
        If the required target is not easy to reference in this call, consider
        using the APPEND option with multiple separate calls.
    
    But on newer cmake I guess everything is ok.
    
    Fixes: 7182c2f561570cd9ceb704623ebe9ae3608c7b43 ("cmake: build SHARED
    and STATIC libraries (like autoconf does)")

commit d84f0205453941235b0e04729098d4329c189bba
Merge: 882f537c 8acfb0cd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 14 13:31:02 2017 +0300

    Merge branch 'win32-fixes'
    
    This patchset fixes win32 builds after some previous patches (referenced
    in particular commits), and also removes some quirks for win32.
    
    * win32-fixes:
      test: do not return void
      log/win32: fix exporting extern variable
      log-internal: missing extern "C"
      log: remove USE_GLOBAL_FOR_DEBUG_LOGGING
      cmake: Export missing symbols for win32
      cmake: eliminate EVENT_BUILDING_REGRESS_TEST, since we link with shared libs
      test: windows doesn't have WNOWAIT
      cmake: clean not used #defines from event-config.h
      cmake: add <pthread.h> only for non-win32

commit 8acfb0cd21cc5f1382fd4d88063d739b76189a5b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 14 13:21:16 2017 +0300

    test: do not return void

commit 92cf234b0c2eb41fbbac38b173723a4a58d3621b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 14 00:33:26 2017 +0300

    log/win32: fix exporting extern variable
    
      ==> win:   C:\vagrant\log.c(73): error C2370: 'event_debug_logging_mask_' : redefinition; different storage class [C:\vagrant\.cmake-vagrant\event_core_shared.vcxproj]

commit a9c2116facb523d318bd029358ca9090e77cfe23
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 14 01:06:10 2017 +0300

    log-internal: missing extern "C"

commit 49dcf4d554bcec89814a26d620c0f37603dc35cd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 13 22:33:38 2017 +0300

    log: remove USE_GLOBAL_FOR_DEBUG_LOGGING
    
    Fixes: 9081b66c9c1446b11c0052bade799fafb460efed ("Export symbols for
    -fvisibility=hidden (under cmake)")

commit 48ead58e7794505508bf7f9e94b59f959195fe72
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 14 00:46:47 2017 +0300

    cmake: Export missing symbols for win32

commit 30f2a969e8ace4472ada981e4cef9159b61e1d78
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 14 00:07:17 2017 +0300

    cmake: eliminate EVENT_BUILDING_REGRESS_TEST, since we link with shared libs
    
    Before 7182c2f561570cd9ceb704623ebe9ae3608c7b43 ("cmake: build SHARED
    and STATIC libraries (like autoconf does)") it links with *.c.

commit a4b1828d6dbad9126122ea1e04c54bbbb83bc311
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 13 23:52:15 2017 +0300

    test: windows doesn't have WNOWAIT
    
    Fixes: 66a4eb0c3ae3b1f22b084b2d3aeb5c872f37efbd ("Check for WNOWAIT in
    waitpid() in runtime (not in cmake/configure)")

commit d5e10870443e151d4b3edc70e3ebac211cfee5d0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 13 21:54:33 2017 +0300

    cmake: clean not used #defines from event-config.h
    
    - _LARGE_FILES: we have it in evconfig-private.h.in, drop from event-config.h
    - EVENT___FILE_OFFSET_BITS: remove it for now
    - EVENT__const

commit 2d2299cf7a1a035e4cd7a8e5f6efefc9603ebd55
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 13 22:02:45 2017 +0300

    cmake: add <pthread.h> only for non-win32
    
    Fixes: b2b4b4d74e78a3e4fe7a74224d1e6aada5bde351 ("cmake: add <pthread.h>
    into CMAKE_REQUIRED_INCLUDES for sizeof(pthread_t)")

commit 882f537c409d9c51ede581a3e13de7519227edb7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 13 21:40:52 2017 +0300

    cmake: fix pkgconfig generation (copy-paste typo)

commit 489991a2b2628ba1ff4e6879b9f67ec35d224c38
Merge: 83b15847 805e1aa8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 13 21:05:32 2017 +0300

    Merge branch 'cmake-missing-bits'
    
    This patchset adds next missing things (in compare to autotools):
    - pkgconfig
    - event_pthreads/event_openssl
    - compile shared/static libraries always
    
    And some fixes, because it will not build after fixing other things:
    - export missing symbols for cmake (-fvisibility=hidden)
    
    * cmake-missing-bits:
      cmake: support visibility for AppleClang too
      cmake: fix export absolute path and relative path and cleanup a bit
      cmake: generate and install pkgconfig files
      cmake: build SHARED and STATIC libraries (like autoconf does)
      cmake: add missing event_openssl/event_pthreads libraries
      Export symbols for -fvisibility=hidden (under cmake)
    
    Refs: #246

commit 805e1aa819ab746bc65c6c856880f5d9cf4ae56d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 13 15:49:11 2017 +0300

    cmake: support visibility for AppleClang too
    
    Defaults apple linker behaviour is -two_levelnamespace, and you cannot
    use "-undefined suppress" with it, so let's link non event_core with
    event_core library to avoid undefined symbols.

commit fd5a3fc0363bc2dea46b5221d11d21b945f891f3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 13 03:18:02 2017 +0300

    cmake: fix export absolute path and relative path and cleanup a bit
    
    Remove next vars, since I don't think that somebody want to change it:
    - bin
    - lib
    - include
    
    And fix exports problem:
      CMake Error: INSTALL(EXPORT "LibeventTargets") given absolute DESTINATION "/usr/lib/cmake/libevent" but the export references an installation of target "event_core_static" which has relative DESTINATION "lib".

commit 86c73575250a5cd6e8685fce4a9d640e3751c238
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 13 02:26:39 2017 +0300

    cmake: generate and install pkgconfig files
    
    Fixes: #443

commit 7182c2f561570cd9ceb704623ebe9ae3608c7b43
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 12 23:31:59 2017 +0300

    cmake: build SHARED and STATIC libraries (like autoconf does)
    
    Since they are useful for debugging, and if autotools build them then
    cmamke has to do this too, to make migration more simple.
    
    And now:
    - tests: uses shared libraries (since this is upstreams one)
    - other binaries: uses static libraries
    
    This removes next private config:
    - EVENT__NEED_DLLIMPORT

commit 72ef9d16522f88ea7848a52430b5f80d1174d710
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 7 00:46:45 2016 +0300

    cmake: add missing event_openssl/event_pthreads libraries
    
    This will remove openssl requirement if you don't use it (i.e. if you
    not link with openssl_pthreads).
    
    Plus it fixes some linking dependencies:
    - libm required only for test-ratelim
    
    And fix some coding style alignment issues.
    
    Refs: #246

commit 9081b66c9c1446b11c0052bade799fafb460efed
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 12 20:50:35 2017 +0300

    Export symbols for -fvisibility=hidden (under cmake)
    
    Fixes: #442

commit 83b1584700ec453e89017b5f12cf338a50b101b4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 12 13:12:53 2017 +0300

    travis-ci: do not run coverage on osx
    
    First of all we don't really need two of them, and also with apple-clang
    it will fail (because of our checks in cmake), so just exclude it from
    the build matrix.

commit 7004ee8e869faabe3a284fb3d7eb859fb50ef90c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 9 09:32:43 2017 +0300

    travis-ci: use travis_retry to reduce number of problems with flacky tests

commit e01b993703f840a030e9b1cdcdc9b3fd448c77b2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Mar 8 23:48:30 2017 +0300

    appveyor: remove -DEVENT__ENABLE_VERBOSE_DEBUG=ON build
    
    See-also: c199df7bc78824ff579ff34c5f9f922034e8fa31 ("travis-ci: remove
    -DEVENT__ENABLE_VERBOSE_DEBUG=ON (too much useless logs)")

commit 65870949e7ce8110cb987cdeaa432c482cd9aabc
Author: Shuo Chen <chenshuo@chenshuo.com>
Date:   Sun Mar 12 01:00:41 2017 -0800

    Fix detection of timerfd_create() in CMake.

commit 819d04937729b7f8b7c84d6c5c40c5fcd6d68dfd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Mar 8 23:15:33 2017 +0300

    Do not add epoll_sub (syscall wrappers) for epoll in cmake
    
    Nowadays mostly all supported OS'es has this wrappers, and some of them (like
    SmartOS) has wrappers but doesn't have __NR_epoll* defines for syscall numbers,
    so just drop them (instead of adding yet another check int cmake like autotools
    has, since this will break building in cross-compile environment).
    
    Also one minor note, configure doesn't added epoll_sub.c either, since it check
    epoll_create() in runtime.
    
    And I tested it in SmartOS and it even works (`make verify`).
    
    Fixes: #463

commit 5aade2d30b6c5eff226cbf7b63fda5a01987ba4f
Merge: c199df7b d65e3e1d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Mar 8 17:58:26 2017 +0300

    Merge branch 'cmake-configure-fixes-v2'
    
    Fixes in cmake, to make it more like configure and support some
    cross-compiling.
    
    * cmake-configure-fixes-v2:
      cmake: fix extracting of the version from git (check for number of matches)
      Detect arch4random_addrandom() existence
      Use off_t instead of ev_off_t for sendfile() (fixes android build)
      cmake: detect _GNU_SOURCE not by __GNU_LIBRARY__ only (fallback to _GNU_SOURCE)
      Check for WNOWAIT in waitpid() in runtime (not in cmake/configure)
      cmake: add <pthread.h> into CMAKE_REQUIRED_INCLUDES for sizeof(pthread_t)
      cmake: fix values for #cmakedefine
      cmake: drop duplicates from event-config template
      cmake: add value for the #cmakedefine macros (like autoconf)
      cmake: Fix checking of enum values from sysctl.h

commit d65e3e1dbe201f277947b55770d87136fb754811
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 6 14:48:56 2017 +0300

    cmake: fix extracting of the version from git (check for number of matches)

commit 6541168d7037457b8e5c51cc354f11bd94e618b6
Author: Marek Sebera <marek.sebera@gmail.com>
Date:   Mon Mar 6 00:55:16 2017 +0300

    Detect arch4random_addrandom() existence
    
    Refs: #370
    Refs: #475

commit f479a00894131c91aa68bc67c625e52fb94e42e9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 6 00:45:09 2017 +0300

    Use off_t instead of ev_off_t for sendfile() (fixes android build)
    
    Refs: #475

commit 71a56bd3a7f4f74ded331fdd4156b680c7e2fc9b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 6 00:30:21 2017 +0300

    cmake: detect _GNU_SOURCE not by __GNU_LIBRARY__ only (fallback to _GNU_SOURCE)
    
    Fixes pipe2() on Android-9/armv7-a
    
    Refs: #475

commit 66a4eb0c3ae3b1f22b084b2d3aeb5c872f37efbd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 6 00:05:50 2017 +0300

    Check for WNOWAIT in waitpid() in runtime (not in cmake/configure)
    
    Because checking in cmake breaks cross-compiling.
    
    Introduced-in: 43eb56c7c738e3642f0981e3dd6ab9e082eec798.
    Fixes: #482
    Fixes: #462
    Refs: #475
    
    v2: use waitid() with WNOWAIT
    v3: use WNOWAIT only if it available in waitpid(), because not all netbsd
        supports it

commit b2b4b4d74e78a3e4fe7a74224d1e6aada5bde351
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 5 22:07:23 2017 +0300

    cmake: add <pthread.h> into CMAKE_REQUIRED_INCLUDES for sizeof(pthread_t)
    
    Fixes: #475

commit 7f945b2d1b802b9596e7127adbf36dc58e879a01
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 5 21:58:20 2017 +0300

    cmake: fix values for #cmakedefine

commit 852726028fa604f693648e53b859b34d1445f8e3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 5 21:57:45 2017 +0300

    cmake: drop duplicates from event-config template

commit 336ab816c882be1a77987682fc7eda1a83060679
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 5 21:48:56 2017 +0300

    cmake: add value for the #cmakedefine macros (like autoconf)
    
    Before this patch for cmake we had:
      #define EVENT__HAVE_ACCEPT4
      /* #undef EVENT__HAVE_ARC4RANDOM */
    
    While autotools has:
     #define EVENT__HAVE_ACCEPT4 1
     /* #undef EVENT__HAVE_ARC4RANDOM */

commit fa135bdcd9f82a953ac6be55a5c874114bccbc42
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 30 03:17:41 2017 +0300

    cmake: Fix checking of enum values from sysctl.h
    
    CheckSymbolExists do not do this, so add new CheckConstExists that will
    use CheckCSourceCompiles() to check this.
    
    v2: use set() instead of string(APPEND)

commit c199df7bc78824ff579ff34c5f9f922034e8fa31
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 6 02:52:46 2017 +0300

    travis-ci: remove -DEVENT__ENABLE_VERBOSE_DEBUG=ON (too much useless logs)
    
    I guess we can revert part of 59649f7 commit, we tried, but it adds more problems than solves.
    
    Refs: https://github.com/libevent/libevent/pull/476#issuecomment-284259602

commit 98faf19895bd6aa41c68f7da050179e207f05ae1
Merge: 8df81546 05318f13
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 6 02:46:23 2017 +0300

    Merge branch 'fix-openssl-linking'
    
    * fix-openssl-linking:
      sample/https-client: use ERR_remove_*state() when we have them
      Do not check for ERR_remove_thread_state() (do not link ssl into every library)
    
    Closes: #476

commit 05318f1314f40412db09bb5d3b2c0b516c273a93
Author: Pierce Lopez <pierce.lopez@gmail.com>
Date:   Sun Mar 5 11:33:44 2017 -0500

    sample/https-client: use ERR_remove_*state() when we have them
    
    ERR_remove_thread_state:
    - openssl 0.9.8         does not have
    - openssl 1.0/libressl  has
    - openssl 1.1           deprecates

commit 5d18d87916728df67640bd225967c6d6df4a54f8
Author: Pierce Lopez <pierce.lopez@gmail.com>
Date:   Thu Mar 2 21:09:32 2017 -0500

    Do not check for ERR_remove_thread_state() (do not link ssl into every library)
    
    This reverts commit c4e9d9bd662de7f575f2172c160795d452ebe709
    ("sample/https-client: check for ERR_remove_thread_state() existence").
    
    Calling AC_SEARCH_LIBS() modifies LIBS - -lcrypto incorrectly
    ends up in LIBS, and thus linked to by libevent_core.so.
    
    Checking for ERR_remove_thread_state should no longer be needed
    because it was introduced in openssl 1.0.0, and the previous line
    0.9.8 had support discontinued at the end of 2015.
    
    Fixes: #473

commit 8df81546f3f25ac83888eca31843484703232492
Author: tim-le <tim-le@users.noreply.github.com>
Date:   Sun Mar 5 23:10:27 2017 +0800

    evutil: fix a typo of comment
    
    Fixes: #481
    Fixes: #480

commit cc0e04d798643b76ce1874213cb6cc3b2c6b5ac4
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Tue Feb 21 12:54:02 2017 +0100

    Fix RPATH for APPLE
    
    By setting the CMake minimum version to 3.1 CMake automatically
    adds the correct magic to make the library relocatable on
    the filesystem (instead of burning the location of the library
    at link time into the binary).
    
    ex:
    otool -L bin/http-connect
    bin/http-connect:
            @rpath/libevent_extra.2.2.0.dylib (compatibility version 2.2.0, current version 0.0.0)
            /usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.8)
            /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.0.0)
    
    Fixes: #468 (cherry-picked)

commit 55cadb2b03c95505f6adbb836f0e975772d80bce
Author: David Disseldorp <ddiss@suse.de>
Date:   Mon Feb 20 16:55:57 2017 +0100

    sample/dns-example: fix compiler warning (getopt() returns an int)
    
    Signed-off-by: David Disseldorp <ddiss@suse.de>
    Closes: #449

commit e139cbac0a277cc4eff58bff345fbbcaf0858903
Author: David Disseldorp <ddiss@suse.de>
Date:   Mon Feb 20 14:47:59 2017 +0100

    sample/https-client: use host SSL certificate store by default
    
    Currently a static (Debian) certificate path is used by default, which
    can be overridden using the -crt parameter. This commit changes the
    default behaviour such that the openssl default certificate store is
    used, unless overridden by -crt.
    
    Signed-off-by: David Disseldorp <ddiss@suse.de>

commit ffbce578c40a06491ce6585ab2d82ebb69a52d30
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 30 01:58:22 2017 +0300

    Fix clang 3 (some versions) misbehaviour for __has_attribute()
    
    Refs: #447
    Clang: https://reviews.llvm.org/rL223468 ("Modify __has_attribute so
    that it only looks for GNU-style attributes")

commit d057c45e8f48aa90d8b340cac4c8ae4cc8b5d0ac
Author: Jan Beich <jbeich@FreeBSD.org>
Date:   Sat Jan 28 16:42:13 2017 +0000

    Unbreak build with LibreSSL after openssl 1.1 support added
    
    Fixes: 3e9e0a0d46e4 ("Make it build using OpenSSL 1.1.0")
    Fixes: #445

commit 9d5a4bdc5cfbf2385efc7c58103161b3512c4500
Merge: 7bc822ca b24a78cc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 29 23:07:40 2017 +0300

    Merge branch 'fix-struct-linger'
    
    @jbech
      "Accidentally disabled by 0dda56a due to confusion between struct
      linger vs. SO_LINGER and #define vs. AC_DEFINE. Try adding synthetic
      #error test to confirm."
    
    * fix-struct-linger:
      cmake: check for 'struct linger' existence
      test/bench*: prefix event-config.h macros after 0dda56a48e94
      test/bench_httpclient: restore SO_LINGER usage after 0dda56a48e94
    
    Fixes: #444 (original pull-request)

commit b24a78cccfc2751449e5bc358aab5a3955689a1f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 29 23:05:18 2017 +0300

    cmake: check for 'struct linger' existence

commit 77ec05e50dfe7b14aee664cdffaf58d080779f22
Author: Jan Beich <jbeich@FreeBSD.org>
Date:   Sat Jan 28 16:28:57 2017 +0000

    test/bench*: prefix event-config.h macros after 0dda56a48e94

commit d9118c8daa0eece9d906d5de90cf8c4c834387fb
Author: Jan Beich <jbeich@FreeBSD.org>
Date:   Sat Jan 28 16:17:07 2017 +0000

    test/bench_httpclient: restore SO_LINGER usage after 0dda56a48e94

commit 7bc822cad9d06775e366e6c5ac523b13522a6a81
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 29 21:37:31 2017 +0300

    Include openssl-compat.h into dist archive
    
    Refs: nmathewson/Libevent@140
    Refs: http://archives.seul.org/libevent/users/Jan-2017/msg00001.html

commit fe2c2622c389d7e9529b3c2fa828fb69cc985a1e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 29 20:19:06 2017 +0300

    Make EVENT_STAGE_NAME non cached
    
    It did not work before correctly anyway, since cmake do not reset cache
    entries by default, so that reset to "beta" didn't work.
    
    But I don't think that making this variable cached is useful, so let's
    remove this.

commit 0344edf62dc49d822315a8d832f17be8d2c43643
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 29 19:32:10 2017 +0300

    Do not overwrite version from GIT if it is older then defaults

commit efcfa046aeab0ce9e783d648d10db3b69dcf7066
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 29 18:13:07 2017 +0300

    Bump version in master to 2.2.0-alpha-dev
    
    And according to f8d80a285cf941505277d9060d0357b5b7e543d2 ("Bump version
    to 2.1.3-alpha-dev") numeric version have 1 at the end, since it means
    "-dev".

commit 94e7dcebc320bf496ff6b613d8e4b771fa0a161c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 29 17:23:14 2017 +0300

    Fix -Werror=implicit-fallthrough (fixes gcc-7)
    
    Fixes: #447

commit e7ff4ef2b4fc950a765008c18e74281cdb5e7668
Merge: 59e217df 9b63b5d4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jan 26 02:37:15 2017 +0300

    Merge branch 'release-2.1.8-stable-pull'
    
    * release-2.1.8-stable-pull:
      Bump version to 2.1.8-stable everywhere
      VERSION_INFO should me equal to library version
      Bump whatsnew-2.1 document
      Update ChangeLog for 2.1.8-stable
      README: update AUTHORS

commit 9b63b5d41037bcdc54fbc5e45c054de751b7e0ac
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 22 18:21:57 2017 +0300

    Bump version to 2.1.8-stable everywhere
    
    P.S. in referenced commit I made a mistake and instead of *-rc* I wrote
    *-beta*.
    
    See-also: f4489b8323cda0bf8eed7c1353911a852d7a947c ("Bump version to
    2.1.7-beta everywhere")

commit bed52ff6ff0220520c28d3e0878d7d6a793aa506
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 22 16:38:01 2017 +0300

    VERSION_INFO should me equal to library version
    
    This reverts commit 43243b9d55efcd0e6e2767a5c45bc7da46cff60c (I
    shouldn't do this).

commit 227bfe562600a1c2c6cf5aed2dbff83d43bfc16a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 22 16:58:12 2017 +0300

    Bump whatsnew-2.1 document

commit d9eb42e0822453c0b78437b00a432d3705eb86d8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 22 16:16:58 2017 +0300

    Update ChangeLog for 2.1.8-stable
    
    $ git log --format='    o %s (%h %cN)' HEAD...refs/tags/release-2.1.7-rc

commit 50824ae2a0614e5ede46369eb4d08d1a9dcd0044
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 22 16:14:30 2017 +0300

    README: update AUTHORS
    
    $ git log --format='%an' HEAD...refs/tags/release-2.1.6-beta | sort -u | xargs -n1 -i bash -c 'fgrep -q "{}" README.md || echo {}'

commit 59e217dfe1e94b82e5d309b32a8779e40f3a2f66
Merge: 9c9be399 108b5fef
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 22 03:59:02 2017 +0300

    Merge branch 'automake-tests-parallel-v4' (*includes ci bits also*)
    
    This patch set runs tests in parallel (on travis/appveyor/vagrant), it
    includes cmake/autotools(automake).
    
    It should significantly decrease time that tests tooks on travis-ci (3-4
    times lower, right now it is about 14-17 hours - too long!), but not
    without downsides, now because travis-ci workers has limited resources
    we will have more timing-related failures, but this is another storry,
    anyway ~16 hours is not acceptable. Anyway if machine has enough
    resources it is great to have ability to run tests in parallel (which
    automake couldn't do before).
    
    Changes for common test env:
    - autotools: before 17m / after 3m
    - cmake:     before 15m / after 87 sec
    
    * automake-tests-parallel-v4:
      Run tests in parallel (they are lightweight), on CI and vagrant boxes
      travis-ci: install cmake from xenial (CTEST_PARALLEL_LEVEL support)
      test: register different tests in automake
      test: run different tests under different options (in a wrapper)
      automake: do not use serial-tests if parallel-test-harness available
    
    Fixes: #439

commit 9c9be3994d2b440099304cb4f125d7cbc54ff126
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 22 03:58:15 2017 +0300

    vagrant/netbsd: missing libtool

commit 108b5fef419e5216041a54b3573e2ca9ab5db1b0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jan 20 16:31:17 2017 +0300

    Run tests in parallel (they are lightweight), on CI and vagrant boxes
    
    By default 20 parllel jobs, but one caveat for travis-ci, osx boxes
    there slower and have less resources then linux (discovered during
    testing), so limit number of parallel jobs to 4 there, and also install
    travis_wait, so that travis-ci will not fail the build when there is no
    output for 10 minutes, since for osx boxes it is very likely.
    
    Refs: travis-ci/travis-ci@7202

commit 2a67f4fc12d1104b2d294af163fa109e27fdf612
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jan 20 16:50:04 2017 +0300

    travis-ci: install cmake from xenial (CTEST_PARALLEL_LEVEL support)
    
    cmake supports it since 3.0 I guess.
    
    And it must be trusty (not precise), otherwise it fails:
      dpkg: error processing
      /var/cache/apt/archives/ifupdown_0.8.10ubuntu1_amd64.deb (--unpack):
       trying to overwrite '/etc/init.d/networking', which is also in package netbase 4.47ubuntu1
    
    Link: https://travis-ci.org/azat/libevent/jobs/193744023

commit ea1d30cac4bf88b28fc2ca9d2cbb08e5c694a3fc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jan 20 16:29:19 2017 +0300

    test: register different tests in automake
    
    Before this patch we have one test.sh (well test-script.sh), and tooks
    very long to run it sequentially, but they are pretty lightweight, so we
    should run then in parallel.

commit 54d7473f913dbde0d09a5d97358c37b2689a4bd3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jan 20 16:29:02 2017 +0300

    test: run different tests under different options (in a wrapper)

commit a7513cc968d9beeef9de0faa5c812b4d71153914
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 15 12:31:27 2017 +0300

    automake: do not use serial-tests if parallel-test-harness available
    
    Revert: 61179dec7716975a151c6dae4524ae504d05780e ("automake: define
    serial-tests only if automake have this option") Revert:
    Revert: 44d755e00e249c09914cf35089c16735df82e270 ("test/automake: don't
    use paralell test harness (since automake 1.12)")

commit 43243b9d55efcd0e6e2767a5c45bc7da46cff60c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jan 20 21:24:54 2017 +0300

    Bump VERSION_INFO so that libraries symlinks will have the same version
    
    Fixes: f4489b8323cda0bf8eed7c1353911a852d7a947c ("Bump version to 2.1.7-beta
    everywhere")

commit d6bafbbeb27ff3943d6f3b6783bcded76384c31e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jan 20 02:11:35 2017 +0300

    test/dns: replace servname since solaris does not have "http"
    
    Yes, by default solaris (solaris10.dev 5.10 Generic_147148-26 i86pc i386 i86pc)
    does not have "http" in /etc/services

commit 83e0f43b03d9be00b67385ab97faf162f8b8f1b7
Merge: 3c7422fc 9a0a3a3e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jan 19 20:53:18 2017 +0300

    Merge branch 'openssl-filter-fixes-v4'
    
    * openssl-filter-fixes-v4:
      be: fix with filtered bufferevents and connect() without EAGAIN
      test/ssl: fix bufferevent_getfd() for bufferevent_openssl_filter_new()
      be_openssl: Fix writing into filted openssl bufferevent after connected
      test/https: separate cases for https client with filtered openssl bufferevent
      test/ssl: cover case when we writing to be_openssl after connecting
    
    Fixes: #428

commit 9a0a3a3e6510b67c378aade2e8e6097b70ff6daa
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 16 02:31:54 2017 +0300

    be: fix with filtered bufferevents and connect() without EAGAIN
    
    With filtered bufferevents (i.e. not real one, that have socket), we can
    trigger incorrect callback in this case. Let's look at example with http
    and bufferevent_openssl_filter_new():
    - bev = bufferevent_openssl_filter_new()
    - http layer trying to connect() to localhost with bev
      # at this time, bev have writecb/readcb NULL but ev_write/ev_read has
      # timeout with 45 secs, default HTTP connect timeout
    - and when connect() retruns without EAGAIN (BSD'ism) we called
      event_active() before (with EV_WRITE), and this will call ev_write
      timeout only, while it is more correct to act on bufferevent instead
      of plain event, so let's trigger EV_WRITE for bufferevent which will
      do the job (and let's do this deferred).
    
    Fixes: http/https_simple # under solaris

commit 09b620130408b7456485089e3919b8cba3768dae
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Dec 8 02:11:22 2016 +0300

    test/ssl: fix bufferevent_getfd() for bufferevent_openssl_filter_new()

commit 8939676706b8e2a125c5e3344f8672ddfadeb4e1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Dec 7 02:53:07 2016 +0300

    be_openssl: Fix writing into filted openssl bufferevent after connected
    
    The main problems was due to when bufferevent_openssl has underlying (i.e.
    created with bufferevent_openssl_filter_new()) some events was
    disabled/suspended, while with openssl, READ can require WRITE and vice-versa
    hence this issues.
    
    The BEV_CTRL_GET_FD hunk to fix http subsystem, since it depends from what
    bufferevent_getfd() returns.
    
    Fixes: #428
    Fixes: ssl/bufferevent_filter_write_after_connect
    Fixes: http/https_filter_chunk_out
    Fixes: da52933550fd4736aa1c213b6de497e2ffc31e34 ("be_openssl: don't call
    do_write() directly from outbuf_cb")

commit d77fcea15fe8ebb166853597cfff934fd5a47b0f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Dec 7 03:07:59 2016 +0300

    test/https: separate cases for https client with filtered openssl bufferevent
    
    - http/https_filter_chunk_out # now hang
    - http/https_filter_basic     # works, since writes only before connect()

commit d047c2412ecb67187fe5edbf703f26f5d160c5f5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Dec 2 18:32:03 2016 +0300

    test/ssl: cover case when we writing to be_openssl after connecting
    
    Right now it fails because of regression for filtered openssl
    bufferevent, and by it I mean ssl/bufferevent_filter_write_after_connect
    test, and by fails - hang.
    
    Regression-for: da52933550fd4736aa1c213b6de497e2ffc31e34 ("be_openssl:
    don't call do_write() directly from outbuf_cb")

commit 3c7422fc526009cb87ac14dc7100149b862c3689
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jan 19 20:51:38 2017 +0300

    test/thread: netbsd is too slow, increase timeout for conditions_simple

commit 07862531152bc3b93590f1a2010080c87474c92b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jan 19 20:34:41 2017 +0300

    test/dns: run async resolving after sync one (to avoid timeouts)
    
    If system resolver (sync one) will respond too slow, then we can fail async
    request and evdns will retransmit tham again, but evdns server will accept that
    failed requets, so we will have not 2 requests but 4.
    
    Reproduced on centos box sometimes.

commit 36da6877f045258f8db91aeca753a3e2e2f1f5ec
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jan 18 14:33:56 2017 +0300

    vagrant/netbsd: more reliable way of installing packages
    
    Link: http://ftp.netbsd.org/pub/pkgsrc/current/pkgsrc/doc/pkgsrc.html#installing-binary-packages

commit 26f416c1a5b9b39782e89b9670c796fa182bc011
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jan 7 11:48:28 2017 +0300

    test/http: turn off some tests that based on backlog filling (falky)
    
    Since this technique does not work well everywhere, anyway it fails from time
    to time.
    
    See: https://travis-ci.org/libevent/libevent/jobs/186426446

commit 3821cca1a637f4da4099c9343e7326da00f6981c
Author: Breaker <iBreaker@users.noreply.github.com>
Date:   Fri Dec 23 16:19:35 2016 +0800

    Update README.md
    
    The default option of  EVENT__DISABLE_OPENSSL:BOOL is `OFF`

commit 4798de6c64c7b7f8f788294aa52314a82dc2aeec
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Dec 22 14:55:33 2016 +0300

    test: fix util/date_rfc1123 under win32
    
    Refs: #417
    v2: check when gmtime() returns NULL
    v3: fix overflow cases

commit 4545807db421e562782db2701fe5d3bfb9e2c1a4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Dec 19 10:22:51 2016 +0300

    Fix UB in evutil_date_rfc1123()
    
    As pointed in https://github.com/libevent/libevent/pull/417#issuecomment-267860738
      "code is unsafe because in evutil_date_rfc1123() the pointer to the
      automatic variable struct tm cur is used outside the scope it defined."
    
    Checked with `clang -fsanitize=address -fsanitize-address-use-after-scope`
    and test that call evutil_date_rfc1123() with tm==NULL

commit 68def4352c270fe597d3253b3e20cbe974e2f7d5
Merge: 23f9a20e 360aa233
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Dec 19 01:26:43 2016 +0300

    Merge branch 'date-rfc1123'
    
    Follow RFC2616 (Date header should be in RFC1123 format).
    
    But to reproduce this bug, program that uses libevent http-server should
    call `setlocale(LC_ALL, "")` to properly initliaze locale, so that
    strftime() retruns locale-specific dates.
    
    * date-rfc1123:
      add tests for evutil_date_rfc1123().
      http: do not use local settings for Date header
    
    Closes: #417

commit 360aa233f08471d81ce6e11536f4fd561b51c438
Author: Vis Virial <visvrial@gmail.com>
Date:   Fri Dec 16 14:49:59 2016 +0900

    add tests for evutil_date_rfc1123().

commit db60ade81d43e9aaf03273d162878a9cc976f57b
Author: Vis Virial <visvrial@gmail.com>
Date:   Thu Nov 10 21:58:15 2016 +0900

    http: do not use local settings for Date header

commit 23f9a20e8d5d8ebfc0336fc59b3661344404b83a
Author: johnsonlee <g.johnsonlee@gmail.com>
Date:   Tue Dec 13 11:54:09 2016 +0800

    Fix incorrect MIME type

commit 32adf4347d6e57d0038387bf2706e970bf576c73
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Dec 7 01:48:54 2016 +0300

    be_openssl: make be_openssl_set_fd() static (no prototype required)

commit 86fa00706686d83bac627823543970fed27cf15b
Merge: 18a161f0 d94b1762
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Dec 7 01:43:35 2016 +0300

    Merge branch 'be-openssl-fd-reset-fix-v2'
    
    Two issues:
    - dirty_shutdown for openssl 1.1
    - BEV_CTRL_SET_FD for bufferevent_openssl didn't reset state
    
    * be-openssl-fd-reset-fix-v2:
      Fix dirty_shutdown for openssl 1.1
      Fix reusing bufferevent_openssl after fd was reseted (i.e. on new connection)
      test/https: fix ssl dirty bypass for https_simple
      test/https: cover multiple request over the same connection
      test/http: sanity check for http_request_empty_done()
    
    Reported-by: liutao74748@163.com
    ML: http://archives.seul.org/libevent/users/Nov-2016/msg00041.html

commit d94b1762c56feb06dc3f7347a1c4c47e03b5ba06
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 19 18:00:36 2016 +0300

    Fix dirty_shutdown for openssl 1.1
    
    SSL_read() returns -1, even when underlying read() return 0

commit 5ab9518f158394c9d759e4d897ce5f67d3ec2fba
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 19 17:08:53 2016 +0300

    Fix reusing bufferevent_openssl after fd was reseted (i.e. on new connection)
    
    For example if you trying to issue multiple requests over the same
    evhttp_conneciton, and if connection already closed (IOW it should be
    re-connected), than you will get into trouble since it will got wrong
    openssl state. This patch addresses this issue by restoring state to
    initial if SETFD called with -1 fd.

commit cfe2ab22f219de2dacd3560a6a68451732fb3cba
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 19 17:53:38 2016 +0300

    test/https: fix ssl dirty bypass for https_simple
    
    Tests:
    - http/https_simple_dirty # not affected, since dirty is the default
    - http/https_simple       # affected
    
    v2: fix compilation with -DEVENT__DISABLE_OPENSSL=ON

commit 45247e6fd90619d6ec163290f5fe21f5d89c7d5b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 19 15:54:52 2016 +0300

    test/https: cover multiple request over the same connection
    
    Introduce two new tests:
    - http/https_connection         # fail
    - http/https_persist_connection # ok
    
    Reported-by: liutao74748@163.com

commit e6ae069b48d1f1e3c4cb71dba66f7064db5d592c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 19 17:11:35 2016 +0300

    test/http: sanity check for http_request_empty_done()

commit 18a161f0e7abd6bf8660865c633ad1c1ed7ac8d9
Merge: 13a4acda fa58cb1d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Dec 7 01:14:24 2016 +0300

    Merge branch 'openssl-1.1-init-fixes-v2'
    
    * openssl-1.1-init-fixes-v2:
      sample/le-proxy: use TLS_method instead of SSLv23_method (latest deprecated)
      test: fix building under openssl 1.1 (init functions has been deprecated)
      le-proxy: fix building under openssl 1.1 (init functions has been deprecated)
    
    Reported-by: varun.net@gmail.com
    ML: http://archives.seul.org/libevent/users/Nov-2016/msg00002.html

commit fa58cb1da0fe9e5342d2ad486277184ec3db068b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 16 01:16:30 2016 +0300

    sample/le-proxy: use TLS_method instead of SSLv23_method (latest deprecated)

commit 532a47ce1e67f6a7f8d5b1ff1031fe7fecc546e1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 14 02:17:51 2016 +0300

    test: fix building under openssl 1.1 (init functions has been deprecated)
    
    Refs: #397

commit 122bf144cfe812e3aae179b3a79232045605eda9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 14 02:17:38 2016 +0300

    le-proxy: fix building under openssl 1.1 (init functions has been deprecated)
    
    Refs: #397

commit 13a4acdae345e2d5be01b5d298c2ebb80fcb8e81
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 6 13:26:09 2016 +0300

    https-cilent: fix compilation warnings about unused vars/functions on win32

commit 336f3b11e5b9f2823ffe669eb1c55f50f0c04ca4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 6 13:15:27 2016 +0300

    Fix _FILE_OFFSET_BITS redinition (solaris/autotools)
    
    So firstly include our header (config.h) -- <evconfig-private.h>, and
    only after it <sys/types.h> since latest has #ifdef guard, while our
    config.h is not inteded for this.
    
    And besides all this thing with LARGE_FILE is a abit awkward, since we
    don't nefine _LP64/_LP32 anyway, and so we have next error actually (64bit VS
    32bit):
    ==> solaris: In file included from ./util-internal.h:30:0,
    ==> solaris:                  from test/regress_ssl.c:49:
      ==> solaris: ./evconfig-private.h:29:0: warning: "_FILE_OFFSET_BITS" redefined
      ==> solaris:  #define _FILE_OFFSET_BITS 64
      ==> solaris:  ^
      ==> solaris: In file included from /usr/include/sys/types.h:17:0,
      ==> solaris:                  from test/regress_ssl.c:38:
      ==> solaris: /opt/csw/lib/gcc/i386-pc-solaris2.10/5.2.0/include-fixed/sys/feature_tests.h:196:0: note: this is the location of the previous definition
      ==> solaris:  #define _FILE_OFFSET_BITS 32
      ==> solaris:  ^
    
    For cmake it commented in: 8b228e27f57300be61b57a41a2ec8666b726dc34
    ("Lot's of cmake updates")

commit f7c70aef736108fdfce030d6c7b0a64da76db969
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 6 13:06:08 2016 +0300

    vagrant/osx: use make instead of gmake (there is no gmake)
    
    $ make --version
    GNU Make 3.81
    Copyright (C) 2006  Free Software Foundation, Inc.
    This is free software; see the source for copying conditions.
    There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
    PARTICULAR PURPOSE.
    
    This program built for i386-apple-darwin11.3.0

commit 253e7fa90caf3cfc5314f47bac0fd9d98cd9e651
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 6 12:08:32 2016 +0300

    util-internal: fix __func__ redefinition (netbsd)
    
    ==> netbsd: In file included from ../listener.c:57:0:
    ==> netbsd: ../util-internal.h:58:0: warning: "__func__" redefined [enabled by default]
    ==> netbsd:  #define __func__ EVENT____func__
    ==> netbsd:  ^
    ==> netbsd: In file included from /usr/include/amd64/types.h:39:0,
    ==> netbsd:                  from /usr/include/sys/types.h:45,
    ==> netbsd:                  from ../listener.c:30:
    ==> netbsd: /usr/include/sys/cdefs.h:394:0: note: this is the location of the previous definition
    ==> netbsd:  #define __func__ __PRETTY_FUNCTION__

commit 2c62062e126913657ac52b56c2ec865f5c695f75
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 6 11:55:44 2016 +0300

    Fix signedness differ for iov_base (solaris)

commit 3e75194cb568613e2b37988053b20b5178ff65a2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 6 11:58:16 2016 +0300

    evutil_time: include <unistd.h> when there is only sleep()/usleep()

commit 1cbf26f67ac8eab97c97c54851526ff612da0c37
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 6 11:51:18 2016 +0300

    http: fix formatter for pritnf for req->ntoread (osx)

commit 0abe4eba83c45c1145df4f7756a69258134601b4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 6 09:54:13 2016 +0300

    sample/http-connect: fix compilation with VS2010
    
    Fixes: nmathewson/Libevent#137

commit 6bf2061c4bce52a802311d21540846d51d4bac35
Author: Philip Prindeville <philipp@redfish-solutions.com>
Date:   Fri Nov 11 17:51:37 2016 -0700

    C90 doesn't like declarations intermingled with statements
    
    So move all of the declarations to the top of the offending function.
    
    This patch includes both of issues (Fixes:), from @jeking3 and
    @pprindeville
    
    Fixes: #418
    Fixes: nmathewson/Libevent#136

commit ca591c5b1b8c4506c258a96e1fd5d8dafdb6234f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Nov 18 20:27:49 2016 +0300

    vagrant: add centos box
    
    Packages list get from here:
      https://pkgs.org/search/
    
    Refs: #424

commit cbd303b6a6effbf37367477c581b8b0fbe0f396b
Merge: e4e099bd f4489b83
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 5 01:35:26 2016 +0300

    Merge remote-tracking branch 'azat/release-2.1.7-rc-pull'
    
    Finally 2.1 release candidate is out!
    
    * azat/release-2.1.7-rc-pull:
      Bump version to 2.1.7-beta everywhere
      Update changelog for 2.1.7-rc
      README: update AUTHORS

commit f4489b8323cda0bf8eed7c1353911a852d7a947c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 2 00:31:31 2016 +0300

    Bump version to 2.1.7-beta everywhere
    
    - cmake basic
    - cmake detecting from git -- event_fuzzy_version_from_git()
    - autotools
    - win32
    - appveyor

commit 13ea9f5ee58dfea486a83c648da8b411a682b5e1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 2 00:25:38 2016 +0300

    Update changelog for 2.1.7-rc

commit 5904dd53b28dfed414e80efbbb4122a86c1212c7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 2 00:16:54 2016 +0300

    README: update AUTHORS
    
    $ git log --format='%an' HEAD...refs/tags/release-2.1.6-beta | sort -u | xargs -n1 -i bash -c 'fgrep -q "{}" README.md || echo {}'

commit e4e099bdb53dba100371ef7eba5bc2d6a53f67cc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 3 15:00:15 2016 +0300

    travis-ci/osx: install lcov

commit cb0df5cfac15d1d75c4abeaa89048da307c271f9
Author: Tim Hentenaar <tim@hentenaar.com>
Date:   Fri Jul 15 02:27:23 2016 +0200

    test/regress: cover a polling of invalid fd
    
    Test that an event's callback is called if the fd is closed prior to being
    polled for activity.
    
    azat: make it run only for poll backend/method, and do not close fd
    twice

commit 675974ce30591e9cdbebeead65e63eec9772ee90
Author: Tim Hentenaar <tim@hentenaar.com>
Date:   Thu Jul 14 15:45:01 2016 +0200

    poll: Prevent libevent from spinning if POLLNVAL occurs
    
    This can happen, for example if libevent is being used to poll fds given
    by another library where the other library closes the fds without
    notifying the program using it that said fds were closed. In this case,
    libevent will simply spin on poll() since there are active fds, but
    won't call any event callback to handle the condition.
    
    In epoll case after socket closed it automatically removed from epfd, so
    IOW it will not spin in epoll* API, just a timeout.
    
    Fixes: #379

commit 9ac000c724d208ed03f446539259424a5d6c96c2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 1 23:39:41 2016 +0300

    Use coveralls.io via travis

commit 40fbffc0df78085180513fd143fa87bff1e7cd6f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 1 23:33:11 2016 +0300

    Fix cmake -DEVENT__COVERAGE=ON
    
    - do not use compiler check from the root cmake rules with syntax error,
      let CodeCoverage check it
    - fix CodeCoverage to check C compiler not CXX
    - case insensitive checking of CMAKE_BUILD_TYPE
    - replace flags with --coverage, and fix flags with linking with
      --coverate, otherwise it will not compile during checking flags and
      fails.

commit 9585338f6cf4134c26bd8d3694d74ddaca70fbe3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 31 19:33:28 2016 +0300

    Testing with vagrant for 6 OS and cmake+autoconf
    
    OS:
    - linux
    - freebsd
    - osx
    - netbsd
    - solaris
    - win
    
    And mostly they all are more or less fine, except for timing issues
    
    Also it supports next environment variables:
    - NO_PKG
    - NO_CMAKE
    - NO_AUTOTOOLS
    
    For instance if you run ubuntu box seocnd time, then you can run with:
    $ NO_PKG=true vagrant provision ubuntu

commit 9376ac4dff993a1852f5d4c1d3530deb758f1d02
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 31 22:37:16 2016 +0300

    autogen.sh: learn about gmake
    
    Fixes: 69cce257eb6183dda114d8f5b8ca0325cfabe2e1
    ("69cce257eb6183dda114d8f5b8ca0325cfabe2e1")

commit 69cce257eb6183dda114d8f5b8ca0325cfabe2e1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 31 12:01:20 2016 +0300

    autogen.sh: remove all autoconf/automake caches, if any
    
    Otherwise if you for example share root of libevent repository with some
    vm (for example windows+cygwin) then if you try to build with configure
    on host, and then on guest it will fail, so let's just ignore this since
    autogen.sh is just for this -- cleaning all stuff.

commit 3453c0815f87d4ad6a6dd897fc5a4cdc711285c0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 30 11:19:43 2016 +0300

    cmake: fix finding python2, and check that it is really 2
    
    python version check removed in a4d044c0cd97f68b4b3dde414b83d609719d33d7
    ("cmake: use PYTHON_EXECUTABLE to find python2"), but in
    bcb990ab7cf4921c2c30a1aa4fcb4c0131fffe94 ("cmake/win32: fix running
    regress, but fixing finding python2 interpreter") we set
    PYTHON_EXECUTABLE only if it exists.

commit 8fb08ae92486447bccf511d64bf9261c95281079
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 31 01:56:37 2016 +0300

    Ignore temporary configure files
    
    So if you kill configure, git still should ignore them.

commit 43b69b2aed6f2b282643dad6056c5652c12da090
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 26 18:04:07 2016 +0300

    cmake: fix CheckFunctionExistsEx/CheckPrototypeDefinition (CMP0054)

commit dc624adf42bc95d22a5137db466258ab1dad7e48
Author: Zonr Chang <zonr.net@gmail.com>
Date:   Wed Aug 24 16:19:01 2016 +0800

    cmake: cleanup
    
    - Remove a redundant check on netdb.h (EVENT__HAVE_NETDB_H).
    - Properly setup EVENT__SIZEOF_SSIZE_T for the case where "ssize_t" is
      not "int".
    - Remove unused EVENT__HAVE_PTHREAD.
    - Set EVENT__HAVE_LIBZ instead of EVENT__HAVE_ZLIB (and remove the
      latter).
    
    Closes: #391 (cherry-picked from PR)

commit e9837124563d6d4bb871d0620e9b02550f796c43
Author: Thomas Bernard <miniupnp@free.fr>
Date:   Sat Dec 13 19:42:42 2014 +0100

    use ev_uint16_t instead of unsigned short for port
    
    Like in `sockaddr_in` structure in /usr/include/netinet/in.h
    
    @azat: convert all other users (bench, compat, ..) and tweak message
    Fixes: #178
    Fixes: #196
    Refs: 6bf1ca78
    Link: https://codereview.appspot.com/156040043/#msg4

commit bcb990ab7cf4921c2c30a1aa4fcb4c0131fffe94
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 26 00:51:56 2016 +0300

    cmake/win32: fix running regress, but fixing finding python2 interpreter
    
      Could not find executable C:/projects/libevent/build/bin/regress
      Looked in the following places:
      C:/projects/libevent/build/bin/regress
      C:/projects/libevent/build/bin/regress.exe
      ...
       9/13 Test  #9: regress__WIN32_debug ................***Not Run   0.00 sec
    
    Link: https://ci.appveyor.com/project/nmathewson/libevent/build/2.1.6.271/job/wvy2jp7uojcut5cx#L1256
    Fixes: #411

commit 236161611f4bd1414f0837de1cb0077081969a5e
Author: Simone Basso <bassosimone@gmail.com>
Date:   Fri Oct 21 10:49:22 2016 +0200

    README.md: fix typo: ar -> are

commit 7e12e96e7fa179cff1dc092c3c61272570c49987
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 17 01:05:38 2016 +0300

    travis-ci: use container-based infrastructure
    
    - by disabling sudo
    - and since we use addons.apt.packages we don't need apt-get update, that requires sudo
    
    Link: https://docs.travis-ci.com/user/migrating-from-legacy/

commit 9d2f8d4b806c0784be4ba26abf05f767cb984527
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 16 23:46:09 2016 +0300

    travis-ci/osx: fix compiling/linking openssl libraries
    
    And we need that $(echo /path/*) otherwise bash will expand it only during
    assignment that variable to another one, and this doesn't work correctly.

commit d7ceae593aa0601dc20198080b3cb6e9ee4e4532
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 16 21:48:59 2016 +0300

    travis-ci: use gcc-5 (fixes osx|gcc failures)
    
    Refs: travis-ci/travis-ci#4587

commit 3e9e0a0d46e4508e8782ec3787c6d86bab63046d
Author: Kurt Roeckx <kurt@roeckx.be>
Date:   Mon Sep 19 22:05:15 2016 +0200

    Make it build using OpenSSL 1.1.0
    
    Rebased (azat):
    - tabs instead of whitespaces
    - make openssl-compat.h safe for complex expressions
    - do not call sk_SSL_COMP_free() in 1.1 (fixes double free)
    
    TODO:
    - clean methods_bufferevent
    
    Closes: #397 (cherry-picked)

commit 6702da1a8ca6043aea662e191289869070e4f10d
Author: Adam Langley <agl@google.com>
Date:   Wed Oct 12 17:49:17 2016 -0700

    Don't call BIO_number_{read|written} on NULL BIOs.
    
    OpenSSL doesn't document the behaviour of these functions when given a
    NULL BIO, and it happens to return zero at the moment. But don't depend
    on that.
    
    Closes: #406 (cherry-picked)

commit f9803a69435ffd494fc0ddb5f9dc4915252825d5
Author: Adam Langley <agl@google.com>
Date:   Wed Oct 12 17:49:10 2016 -0700

    Switch from a 512 to 2048-bit RSA key.
    
    The 512 bit key is too small to sign larger hashes. This can cause the
    regression tests to fail depending on the defaults in libssl.

commit b9c5077e99b8be6ec1fab2fb8177439ef9cb76e1
Merge: 75216643 a22d2033
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 5 15:52:41 2016 +0300

    Merge branch 'contrib-guide-v2'
    
    Something that should help with reviewing patches.
    
    * contrib-guide-v2:
      Add CONTRIBUTING.md (with checkpatch.sh examples)
      Add checkpatch script
      Add config for clang-format
      Add config for uncrustify
    
    Refs: #301

commit a22d2033861284c0f25096b00bed8552a1ce2ed4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 15 23:43:10 2016 +0300

    Add CONTRIBUTING.md (with checkpatch.sh examples)

commit d482486a154dc8cd6952cd45b22d805868c8af01
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 5 13:28:04 2016 +0300

    Add checkpatch script
    
    Support:
    - files
    - files-diffs
    - patches
    - git-refs

commit f523cb7967bfc3f8d684218838bbcedbd5ea17d0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 5 14:00:55 2016 +0300

    Add config for clang-format

commit 807e2662f8dd0c39eff37d02c12b142c79ccd753
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Oct 5 14:00:40 2016 +0300

    Add config for uncrustify
    
    Original: https://strcpy.net/mark/libevent-uncrustify.cfg (@ellzey)

commit 752166436c49ee3c66f15d570b2c65421f918a71
Author: Seven <961950442@qq.com>
Date:   Fri Sep 16 16:37:59 2016 +0800

    be: just a simple mistake, reinclude the <errno.h>
    
    include the <errno.h> twice.

commit a4d044c0cd97f68b4b3dde414b83d609719d33d7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Oct 4 23:21:37 2016 +0300

    cmake: use PYTHON_EXECUTABLE to find python2
    
    Since most of the distros have symlinks for this.

commit 83c7cdf4266651f1b7dc7383f5b89654d3e481b1
Merge: a73fb2f4 91559607
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 3 03:24:28 2016 +0300

    Merge branch 'force-disable-clockgettime'
    
    * force-disable-clockgettime:
      Add -DEVENT__DISABLE_CLOCK_GETTIME switch for cmake
      Adding option to ignore clock_gettime: --disable-clock-gettime

commit 91559607fd5525df468c8be44ef2352b8ea3e495
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Oct 3 03:17:18 2016 +0300

    Add -DEVENT__DISABLE_CLOCK_GETTIME switch for cmake
    
    See-also: adc402ba5f0e15f4c77505852507f33b50f37ab6 ("Adding option to
    ignore clock_gettime: --disable-clock-gettime")

commit adc402ba5f0e15f4c77505852507f33b50f37ab6
Author: Vlad Shcherban <shchvova@gmail.com>
Date:   Thu Sep 29 18:31:53 2016 -0400

    Adding option to ignore clock_gettime: --disable-clock-gettime
    
    macOS 10.12 introduced `clock_gettime` to libsystem. This means, built
    on OS X 10.12 application would crash on earlier versions of OS X
    because it will try to call clock_gettime. This options is useful to
    make backwards compatible macOS apps.
    
    Fixes: #398
    Fixes: #399
    Fixes: #400

commit a73fb2f443ebf9687ee6ca81a6401d1f3751683f
Merge: c6b1ec12 51019e94
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Aug 27 01:53:31 2016 +0300

    Merge branch 'release-2.1.6-beta-pull'
    
    * release-2.1.6-beta-pull:
      Bump version to 2.1.6-beta everywhere
      ChangeLog: Add brief notes
      Update changelog for 2.1.6-beta (ugh, pretty huge)
      Update AUTHORS section in README

commit 51019e946067207c0faeaf690a717028dc510da6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jul 13 17:40:48 2016 +0300

    Bump version to 2.1.6-beta everywhere
    
    - cmake basic
    - cmake detecting from git -- event_fuzzy_version_from_git()
    - autotools
    - win32
    - appveyor

commit 81d219321ee3d3cdd223f6df65a015a432c274e9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jul 5 16:17:38 2016 +0300

    ChangeLog: Add brief notes

commit ea2cee72c8876782d42dfa41844ec886a88bf3e0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jul 4 18:13:02 2016 +0300

    Update changelog for 2.1.6-beta (ugh, pretty huge)
    
    Changes for:
    - 2.1.5-beta: 118
    - 2.1.6-beta: 350
    
    We should really hurry with the release!

commit 3298c254b76d7ff5cbd4c7c311f07308c1ffe1ab
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Aug 7 23:27:22 2016 +0300

    Update AUTHORS section in README
    
    P.S. "Sebastian Hahn" was declared two times.

commit c6b1ec1220bf5b4d33b1011534bdef75fd6183be
Author: Zonr Chang <zonr.net@gmail.com>
Date:   Wed Aug 24 17:16:32 2016 +0800

    Fix evhttp_uriencode() regression.
    
    http_uriencode_test() (in test/regress_http.c) has been failed after
    72afe4c as "hello\0world" is encoded to "hello" instead of
    "hello%00world". This is because of a misplaced overflow check which
    causes the non-negative "size" specified in parameter being ignored in
    within-bound URI.
    
    Fixes: #392

commit e94250c8e3ad12c1707f9ba6971b0e9d215dda00
Author: Mark Ellzey <ellzey@strcpy.net>
Date:   Sun Aug 14 14:03:56 2016 -0700

    removed unused vars

commit 72afe4c93b180be7812fd3841262e039d62f2010
Author: Mark Ellzey <ellzey@strcpy.net>
Date:   Sun Aug 14 14:00:02 2016 -0700

    pointer overflow checks for evhttp_uriencode
    
    Check to make sure pointer math is all OK.

commit 43eb56c7c738e3642f0981e3dd6ab9e082eec798
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Aug 11 16:15:45 2016 +0300

    tests: use waitpid(..., WNOWAIT) to fix failing of main/fork under solaris
    
    According to solaris docs:
      "One instance of a SIGCHLD signal is queued for each child process whose
      status has changed. If waitpid() returns because the status of a child
      process is available, and WNOWAIT was not specified in options, any pending
      SIGCHLD signal associated with the process ID of that child process is
      discarded. Any other pending SIGCHLD signals remain pending."
    
    And interesting thing that it works if you add sleep(1) before waitpid(), and
    also if you run with --verbose (some race or what).
    
    But linux doesn't support WNOWAIT in waitpid() so add detection into
    cmake/autotools.
    
    Fixes: #387
    Link: https://bugzilla.redhat.com/show_bug.cgi?id=840782

commit 16d220cb6fa23a16733b292eee7008097f5570eb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Aug 11 13:43:14 2016 +0300

    test: replace sleeping with syncing pair in main/fork
    
    About this syncing pair:
    - read endpoint, must be blocked, to make it a checkpoint or smth like this
    - write endpoint, must be nonblocking, to avoid readcb hung
    
    Refs: #387

commit 685a6a1917d4d2ac3bdea81d6cc261217c5df980
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Aug 11 09:27:50 2016 +0300

    travis: split long lines, and make it cleaner

commit 088ea5e0b77e0df9d74bb558f59bc0d13f56c7c8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Aug 11 00:18:04 2016 +0300

    travis: fix autotools on osx by reinstalling libtool
    
    Link: mkrufky/libdvbtee#22

commit 3189eb000b6d8751223061930a019f85c284f985
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 10 16:04:33 2016 +0300

    be_sock: handle readv() returns ECONNREFUSED (freebsd 9.2)
    
    During testing sometimes bufferevent/bufferevent_connect_fail_eventcb fails,
    and after some digging I found that this was the case when connect() doesn't
    return ECONNREFUSED immediately, and instead next operation will return it (in
    our case evbuffer_read()->readv(), needless to say that after this
    bufferevent_writecb() called and it checks error with getsockopt() but of
    course it doesn't return any error), so this patch checks "errno" after
    "readv()" and installs "bufev::connection_refused" flag, to handle this from
    writecb and only once.
    
    Fixes: bufferevent/bufferevent_connect_fail_eventcb
    Fixes: bufferevent/bufferevent_connect_fail_eventcb_defer
    Refs: #388

commit 500b6b757790f80dd1f4d23e7794c00a60f8b843
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 10 16:50:19 2016 +0300

    test/http: do not run tests that based on backlog filling (freebsd)
    
    I cannot find any other solution for now, so simply ignore them for now, we
    should think about normal fix for this.
    
    Refs: #388

commit 5a157c871ce88917cde5cf1e96490042115f4aa0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 10 16:09:09 2016 +0300

    evutil: mark ai_find_protocol() static (prototype-less)

commit 4410e9dfb3aadfcaf2e20fdc69dde311c6243631
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 10 12:07:32 2016 +0300

    test/bufferevent/iocp: fix test name for "bufferevent_connect_fail_eventcb"

commit 40730ae33310a3fd81bb00457d75c6e54494bad7
Author: Azat Khuzhin <azat@solaris.azat>
Date:   Mon May 9 22:34:28 2016 +0000

    Fix getaddrinfo under solaris (for multiprotocol case)
    
    During testing on solaris 11.3, util/getaddrinfo failed at:
      memset(&hints, 0, sizeof(hints));
      hints.ai_flags = EVUTIL_AI_NUMERICHOST;
      r = evutil_getaddrinfo("1.2.3.4", NULL, &hints, &ai);
      tt_assert(ai_find_by_protocol(ai, IPPROTO_TCP));
    
    And this is because solaris's getaddrinfo() returns:
    $6 = {
      ai_flags = 32,
      ai_family = 2,
      ai_socktype = 0,
      ai_protocol = 0, <-- no proto
      ai_addrlen = 16,
      ai_canonname = 0x0,
      ai_addr = 0x815d658,
      ai_next = 0x0 <-- nothing else
    }
    
    So we should emulate this too.
    
    Plus introduce helper that will search through all results, not only first one.
    
    Fixes: util/getaddrinfo
    Fixes: #354

commit dc95823cd79d32be8154e94f64f30e61a90850e2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 10 00:27:59 2016 +0300

    cmake/solaris: set CMAKE_REQUIRED_LIBRARIES to fix functions detections
    
    Otherwise we will not detect next functions for instance:
    - gethostbyname_r # and related
    
    And now both autotools/cmake builds passes all regress tests in basic env (on
    solaris of course).
    
    Fixes: dns/client_fail_requests_getaddrinfo

commit 050bfc7fc657e8408336edd23f08b4d080a38ea4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 10 00:16:48 2016 +0300

    cmake/solaris: fix building (link with socket,nsl)

commit 00514a2a1e5c77cef16b9d28884c0c7d78f4c9c2
Merge: 8a2c6c77 a9e8cd67
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 9 15:49:01 2016 +0300

    Merge branch 'appveyor-cmake-v6'
    
    This patch set introduces matrix for appveyor and fixes bugs related to win32,
    during debugging this matrix. This should greatly reduce number of work for
    making a release ('check under windows' part only).
    
    Right now tests on appveyor still failes in summary, but we should dig into
    problems, not hide them.
    
    Test matrix looks like this:
    - autotools
    - autotools --disable-openssl
    - autotools --disable-thread-support
    - autotools --disable-debug-mode
    - autotools --disable-malloc-replacement
    - cmake
    - cmake -DEVENT__DISABLE_OPENSSL=ON
    - cmake -DEVENT__DISABLE_THREAD_SUPPORT=ON
    - cmake -DEVENT__DISABLE_DEBUG_MODE=ON
    - cmake -DEVENT__DISABLE_MM_REPLACEMENT=ON
    - cmake -DEVENT__ENABLE_VERBOSE_DEBUG=ON
    - cmake -DCMAKE_C_FLAGS='-DUNICODE -D_UNICODE'
    And takes 90min (was 7min, and this is the sad part).
    
    * appveyor-cmake-v6:
      test/ssl: use send()/recv()/EVUTIL_ERR_RW_RETRIABLE()/EVUTIL_SOCKET_ERROR() to fix win32
      test/https_basic: increase timeout for complete write (fixes win32)
      cmake: check for ZLIB_INCLUDE_DIR, since we can have only library without headers
      autotools/win32: fix searching ssl library
      appveyor/autotools: link with openssl by passing LDFLAGS/CFLAGS
      appveyor: image already had openssl installed
      cmake/win32: do not compile regress_thread on -DEVENT__DISABLE_THREAD_SUPPORT=ON
      cmake/win32: do not compile evthread_win32 on -DEVENT__DISABLE_THREAD_SUPPORT=ON
      appveyor: check -DUNICODE -D_UNICODE according to ReleaseChecklist (cmake only)
      cmake: fix -DEVENT__ENABLE_VERBOSE_DEBUG (typo on -DUSE_DEBUG)
      test: fix building with --disable-thread-support under win32
      cmake: do not use stderr for notifications/version-info
      autoconf: fix --disable-thread-support build under win32
      appveyor: ignore failure of mingw-get
      appveyor: drop shallow_clone, since we use tags for detecting version in cmake
      appveyor: support cmake & autotools using build matrix (like travis-ci has)
    
    Fixes: #364

commit a9e8cd6738a781d27fa663d9706f64f948f2ced0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 9 12:25:11 2016 +0300

    test/ssl: use send()/recv()/EVUTIL_ERR_RW_RETRIABLE()/EVUTIL_SOCKET_ERROR() to fix win32
    
    Fixes: https://ci.appveyor.com/project/azat/libevent/build/2.1.5.107/job/k70our1xdp0ym4dm#L1906
    Fixes: ssl/bufferevent_connect_sleep

commit d5a2f2f97f6005bd0846e6b6df199b1deb95e45c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 9 12:10:18 2016 +0300

    test/https_basic: increase timeout for complete write (fixes win32)
    
    Otherwise on win32 we got 2, but test is ok, some timings issue.
    
    Introduced-in: c968eb3
    Fixes: https://ci.appveyor.com/project/azat/libevent/build/2.1.5.107/job/k70our1xdp0ym4dm#L1906

commit c4dfb93ff2bfdd1b76f3e9f402c28528e5bc24bf
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 9 10:56:34 2016 +0300

    cmake: check for ZLIB_INCLUDE_DIR, since we can have only library without headers

commit 671a24f29b9c305c17727e7bfc0d025c25fb5c01
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Aug 8 18:10:56 2016 +0300

    autotools/win32: fix searching ssl library

commit 6fcfa25d82443f9254c6c2da6b00d88873c41553
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Aug 8 17:25:11 2016 +0300

    appveyor/autotools: link with openssl by passing LDFLAGS/CFLAGS
    
    This never works, hence green tests in production. and now it works:
    https://ci.appveyor.com/project/azat/libevent/build/2.1.5.100/job/eib4xqfb7d3ruo16
    (look by /"evthread_win32.c")

commit 4634b85bf29ced73fd814a4c0cd0f98e6f7334c2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Aug 8 15:34:57 2016 +0300

    appveyor: image already had openssl installed
    
    Fixes messages like "Version mismatch for openssl: compiled with 1000201f but
    running with 1000208f" [1].
    
    According to next link:
      http://help.appveyor.com/discussions/questions/1132-openssl-installation-issues
    Refs: appveyor/ci#576
    [1]: https://ci.appveyor.com/project/azat/libevent/build/2.1.5.95/job/dcy9cfoj3rfo4gdh

commit de0c1965cad7469aee27209c3e396db4cab3cdb7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Aug 8 15:50:46 2016 +0300

    cmake/win32: do not compile regress_thread on -DEVENT__DISABLE_THREAD_SUPPORT=ON

commit ecb0ec821a70ac2227ed72f4e8f29d0ec9df9413
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Aug 8 15:45:29 2016 +0300

    cmake/win32: do not compile evthread_win32 on -DEVENT__DISABLE_THREAD_SUPPORT=ON
    
    There is duplicated "evthread_win32.c" appending to ${SRC_CORE} list, leave
    only one that under if EVENT__DISABLE_THREAD_SUPPORT
    
    Fixes: https://ci.appveyor.com/project/azat/libevent/build/2.1.5.96/job/44q3rgifasny7gek

commit e9acc441b75d60e884a2529218df9c5e22e79905
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Aug 7 23:51:21 2016 +0300

    appveyor: check -DUNICODE -D_UNICODE according to ReleaseChecklist (cmake only)
    
    Link: https://github.com/libevent/libevent/wiki/ReleaseChecklist

commit e35f22416a443712aa776fccae4279ae4a84251b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Aug 7 23:46:26 2016 +0300

    cmake: fix -DEVENT__ENABLE_VERBOSE_DEBUG (typo on -DUSE_DEBUG)
    
    Fixes: 8b228e27f57300be61b57a41a2ec8666b726dc34 ("Lot's of cmake updates")

commit a487706e100aae9986354505fe233fb2a1e710d5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Aug 7 23:14:01 2016 +0300

    test: fix building with --disable-thread-support under win32

commit 38716c653d0c23a4a625c2e448bbf0a6db5f35ac
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Aug 7 23:07:44 2016 +0300

    cmake: do not use stderr for notifications/version-info
    
    For all except "STATUS" message() will write to stderr, and this also includes
    case when you does not have <mode> at all. Plus for every message in stderr
    powershell generates exception and make appveyor fails.
    
    Fixes: https://ci.appveyor.com/project/azat/libevent/build/2.1.5.85/job/i10k7m0t80330mtr

commit bb09535bdad6a6398eee3123d0dd7857fa60c825
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Aug 7 22:19:39 2016 +0300

    autoconf: fix --disable-thread-support build under win32
    
    Fixes: https://ci.appveyor.com/project/azat/libevent/build/job/gvud4tcqsd5bnarl
    Fixes: https://ci.appveyor.com/project/azat/libevent/build/2.1.6.80/job/5frnb1c3n4quxxqy
    Fixes: https://ci.appveyor.com/project/azat/libevent/build/2.1.6.80/job/3wdahbrew7setmoa

commit 18108574256f6a0e28a1d5b543774cd7089f7396
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Aug 7 21:30:04 2016 +0300

    appveyor: ignore failure of mingw-get
    
    Since according to doc [1], appveyour will fail the build on every powershell's
    exception:
      "PowerShell script is considered successful if it finishes without exception."
    
    [1]: https://www.appveyor.com/docs/build-configuration#powershell

commit ac90133c16a12200f08b0ccd77cabb3d52c0b796
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Aug 7 20:52:41 2016 +0300

    appveyor: drop shallow_clone, since we use tags for detecting version in cmake

commit 8f95015543f53945a6cb270b5049f77f8989d525
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jun 19 14:15:41 2016 +0300

    appveyor: support cmake & autotools using build matrix (like travis-ci has)
    
    This will allow us to avoid possible compilation regressions, and also some
    failures in different environments (for example because of different
    sizeof(size_t)).
    
    For example we can avoid next issues:
    - #361
    - #314
    - #311
    (And I'm pretty sure that this is not complete list)
    
    And of course it reduce job for maintainers.
    But it also have one downside, appveyor doesn't have such concurrency like
    travis-ci, so it can take a while to finish the whole build, but we can resolve
    this later, or reduce build matrix to only one for autotools and one for cmake.
    
    Fixes: #364

commit 8a2c6c7759743fc6f798e2c2bc472cb9183ffc51
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Aug 8 18:15:41 2016 +0300

    Ignore `make dist` generated files

commit df6f99e5b51a3c0786f54cb9822604ec63385400
Author: Mark Mentovai <mark@chromium.org>
Date:   Fri Jul 8 09:43:39 2016 -0400

    Check for Mac OS X 10.4 kqueue bug properly
    
    EV_ERROR is a bit in struct kevent::flags. Other bits may be set too.
    
    Actually we have osx builds on travis-ci, but it uses osx 10.9.5, and we don't
    have warnings there, since I guess that there is no OR'ing with previous flag
    in case of error, while in 10.12 there is OR.
    
    Fixes: #377
    Fixes: #376
    Link: https://crbug.com/626534
    Link: https://travis-ci.org/libevent/libevent/jobs/141033429

commit 8892f4cbefcccffdae01d0995e4c6b39b241f3cc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jul 7 13:15:41 2016 +0300

    buffer: don't mix code and declarations

commit 666db91af0d08ab6394203b253175d7d1fb7314f
Author: basavesh.as <basavesh.as@fireeye.com>
Date:   Wed Jun 29 15:11:50 2016 +0530

    Fix memory leak in signal-test.c

commit 303161777d617ffcf8c9cf76a7b6e84bf3655295
Author: Mark Ellzey <ellzey@strcpy.net>
Date:   Tue Jun 28 10:37:24 2016 -0700

    [#372] check for errno.h

commit e7abef1c4ce4aaece5e91e5ca90148550c6364ff
Merge: 70040c09 0aaa4fbe
Author: Mark Ellzey <ellzey@strcpy.net>
Date:   Sun Jun 26 11:15:58 2016 -0700

    Merge pull request #367 from neerajbadlani/master
    
    Update gitignore file to ignore cscope gen'ed files

commit 70040c0989fc157a27505ce371b150babcb035b0
Merge: 17cc6362 a3f4ccd1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jun 26 01:57:45 2016 +0300

    buffer: Merge branch '340-dig-v2'
    
    All details in this two patches (it's titles), and shortlog is below.
    
    * 340-dig-v2:
      buffer: fix overflow check in evbuffer_expand_singlechain()
      test/buffer: cover evbuffer_expand() for overflow

commit a3f4ccd1a16d855353c9f555f15111c9186facc2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jun 21 19:49:57 2016 +0300

    buffer: fix overflow check in evbuffer_expand_singlechain()
    
    Refs: #306
    Fixes: #340
    Fixes: 20d6d4458bee5d88bda1511c225c25b2d3198d6c

commit 48dab7aa3327e137174a058fd020ba89fd45a0e8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jun 22 15:48:51 2016 +0300

    test/buffer: cover evbuffer_expand() for overflow
    
    Refs: #306
    Refs: #340

commit 17cc6362239469638a4afc971314ab12ad4ea624
Author: Mark Ellzey <ellzey@strcpy.net>
Date:   Fri Jun 24 18:07:39 2016 -0700

    [Issue #313] set method to ASCII "NULL" if evhttp_method() returns NULL

commit 0aaa4fbec29cb39db4e406483d04df5b33466fac
Author: Neeraj Badlani <nebadlan@cisco.com>
Date:   Wed Jun 22 21:15:53 2016 -0700

    Update gitignore file to ignore cscope gen'ed files

commit a69e4fadcaa5a635c656886934cc23c8a25c7562
Merge: 9b294082 26fd9321
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jun 19 13:24:18 2016 +0300

    buffer: Merge branch 'evbuffer-empty-chains-fixes-v4'
    
    This fixes bug with empty-chains and
    evbuffer_add_buffer()/evbuffer_remove_buffer().
    
    * evbuffer-empty-chains-fixes-v4:
      buffer: evbuffer_add_buffer(): clean empty chains from destination buffer
      test/buffer: evbuffer_add_buffer() with empty chains
      test/buffer: evbuffer_remove_buffer() with empty chains (prepend)
      test/buffer: evbuffer_remove_buffer() with empty chains (evbuffer_add_buffer())
    
    Reported-by: Eduardo Panisset <eduardo@anchorfree.com>

commit 9b294082fb597ba3e1f90f0b4cfb83b4c56fe059
Merge: 28518896 766194b3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jun 19 13:21:15 2016 +0300

    bufferevent_filter: Merge branch 'be-filter-data-stuck'
    
    Fixes data stuck in filters with active watermarks.
    
    * be-filter-data-stuck:
      test/be_filter: creating test case for data stuck with active watermarks
      be_filter: avoid data stuck under active watermarks

commit 766194b35d037884acd3498529f79519c0cdb383
Author: Eduardo Panisset <eduardo@anchorfree.com>
Date:   Sun Jun 19 02:09:50 2016 -0700

    test/be_filter: creating test case for data stuck with active watermarks
    
    v2: fix whitespaces
        s/int/size_t/
        use tt_int_op()
        s/malloc/calloc (to avoid possible false-positive)

commit b627ad88bfa713fdda7260b8d7f0986e8bb2c5a5
Author: Eduardo Panisset <eduardo@anchorfree.com>
Date:   Fri Jun 17 10:46:32 2016 -0700

    be_filter: avoid data stuck under active watermarks
    
    Suppose we have bufferevent filter attached to bufferevent socket.
    Read high watermark for bufferevent filter is configured to 4096 bytes.
    Socket receives 4343 bytes. Due to watermark, 4096 bytes are transferred
    from socket input buffer to filter input buffer and 247 bytes are left
    in bufferevent socket.
    Suppose that no more data is received through socket.
    
    At this point 247 bytes will sit forever in input buffer of bufferevent
    socket.
    The patch attached solves this issue registering read callback to
    filter's input buffer if it reaches its read high water mark and data
    was left in corresponding underlying's input buffer.
    
    This read callback calls filter process input function as soon as filter
    input buffer falls below its read high watermark and there still is data
    left in underlying input buffer. Callback is deregistered as soon as
    filter input buffer falls below its read high watermark.

commit 285188963d06b5838148b961ab7b6bb5c6e3b0e5
Author: David Paschich <davidp@navdy.com>
Date:   Sat May 21 21:05:11 2016 -0700

    Fix bufferevent_pair to properly set BEV_EVENT_{READING,WRITING} on flush.
    
    Here's some fun. From `bufferevent.h`:
      ```
      #define BEV_EVENT_READING     0x01    /**< error encountered while reading */
      #define BEV_EVENT_WRITING     0x02    /**< error encountered while writing */
      ```
    
    And from `event.h`:
      ```
      /** Wait for a socket or FD to become readable */
      #define EV_READ               0x02
      /** Wait for a socket or FD to become writeable */
      #define EV_WRITE      0x04
      ```
    
    Library users have to be very careful to get this right; it turns out, the
    library itself got this wrong in the `bufferevent_pair` code. It appears that
    in most of the code, only `BEV_EVENT_FINISHED` will indicate whether it's read
    or write; on error or timeout, it appears that "both" is assumed and not set in
    the callback. I read through all the other places where `BEV_EVENT_FINISHED` is
    passed to an event callback; it appears that the pair code is the only spot
    that got it wrong.
    
    azat: add TT_FORK to avoid breaking clean env, and rebase commit message
    (copied from #359)
    Fixes: #359

commit 26fd9321cffd808bb0d280e55fef3ee4e914b4f7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jun 7 18:31:48 2016 +0300

    buffer: evbuffer_add_buffer(): clean empty chains from destination buffer
    
    @EMPanisset reported a problem (#358) with evbuffer_remove_buffer(), but
    actually I think that the problem is in evbuffer_add_buffer() which introduces
    this empty chain, all other callers (except evbuffer_prepend_buffer(), but it
    doesn't have this problem though) should be safe.
    
    And FWIW the only API that allows empty chains is evbuffer_add_reference(), and
    we can add check there to avoid such issues, but for now I leaved this without
    fixing, since I think that evbuffer_add_reference() with empty chains can be
    used as a barrier (but this can be tricky).
    
    Fixes: regress evbuffer/remove_buffer_with_empty2
    v2: introduce/fixes evbuffer/add_buffer_with_empty

commit a272bc422754fc91d4cfb6e626829301febdae9e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jun 17 15:54:53 2016 +0300

    test/buffer: evbuffer_add_buffer() with empty chains
    
    Reported-by: @EMPanisset
    Link: https://github.com/libevent/libevent/issues/358#issuecomment-225345697

commit f0cfa146d53f16f2b322f06448ea8a2c2c5bd666
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jun 8 13:41:30 2016 +0300

    test/buffer: evbuffer_remove_buffer() with empty chains (prepend)
    
    Using:
    - evbuffer_add()
    - evbuffer_prepend_buffer()
    - evbuffer_add_reference()
    - evbuffer_remove_buffer()

commit 2880ce6a032ff869c28b5ed6f96d7922146613d7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jun 7 14:56:32 2016 +0300

    test/buffer: evbuffer_remove_buffer() with empty chains (evbuffer_add_buffer())
    
    Using:
    - evbuffer_add()
    - evbuffer_add_buffer() -- the one that has problem
    - evbuffer_add_reference() -- the only one that allows empty chains to be added
    - evbuffer_remove_buffer()

commit 2a4bf294704034f6a7a962931d3028fe6c0b0ac8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jun 17 16:14:02 2016 +0300

    test/http: avoid using conditionals with omitted operands (fixes VS2015)
    
    But we need to add VS2015 build on appveyor.
    
    Fixes: #361
    Reported-by: @nntrab

commit aabf1c2dd166d80fd84c4349f1c93fc5d5f5a1f9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jun 17 16:07:15 2016 +0300

    test/http: don't mix declarations and code (fixes -Wdeclaration-after-statement)

commit c08d90ba5a1bf5c0d274777667a5f9cfb79d7967
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jun 17 15:54:31 2016 +0300

    test/buffer: fix leak in test_evbuffer_prepend()

commit e7d1e3926b93c0d53732883edf940abdac4bc024
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Jun 17 15:43:26 2016 +0300

    test/buffer: avoid errors with --no-fork (reinitialize static vars)

commit b5ca3656262b17e83bfa380d7e10218705320f89
Author: Rainer Keller <rainer.keller@hft-stuttgart.de>
Date:   Mon May 30 16:53:41 2016 +0200

    For non GCC/clang on OSX the -Wno-deprecated-declarations may not be valid
    
    Closes: nmathewson/Libevent#129

commit 41e54464b93408dfb3f3a28396040db80ba131db
Merge: 38e0f4a5 61179dec
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu May 12 00:40:25 2016 +0300

    Merge branch 'travis-ci-os-matrix-v2'
    
    This increases libevent coverage to:
    - os:osx
    
    - cmake -DEVENT__DISABLE_MM_REPLACEMENT=ON
    - cmake -DEVENT__ENABLE_VERBOSE_DEBUG=ON
    - configure --disable-openssl
    - configure --disable-thread-support
    - configure --disable-malloc-replacement
    
    - fix travis-ci builds under automake >1.11
    
    Possible failures after this patch set (not always, IOW in some builds this
    issues aren't real issues):
    - some failures but mostly because of timing issues, must be fixed separately.
    - https://travis-ci.org/azat/libevent/jobs/129430229 # on brew update
    - https://travis-ci.org/azat/libevent/jobs/129430221 # some locking issues
    
    * travis-ci-os-matrix-v2:
      automake: define serial-tests only if automake have this option
      test/automake: don't use paralell test harness (since automake 1.12)
      travis-ci/osx: relink gcc/g++ instead of clang
      travis-ci: enable multi-os mode (osx, linux)
      travis-ci: increase matrix (--disable-foo)
      travis-ci: adjust alignment
    
    Fixes: #356
    Travis-CI: https://travis-ci.org/azat/libevent/builds/129430181

commit 61179dec7716975a151c6dae4524ae504d05780e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed May 11 16:02:02 2016 +0300

    automake: define serial-tests only if automake have this option
    
    P.S. I did try a lot of other ways, but seems that this is the only one that
    will work.
    
    Fixes: automake 1.11
    Travis-CI: https://travis-ci.org/azat/libevent/jobs/129398265

commit 44d755e00e249c09914cf35089c16735df82e270
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed May 11 10:18:25 2016 +0300

    test/automake: don't use paralell test harness (since automake 1.12)
    
    Starting from automake 1.2 there is parallel test harness, that redirects all
    output to some log, which serial-test doesn't do.
    So in case of new runner we can get no output for 10 minutes, for example on my
    desktop:
      $ time make verify VERBOSE=1
      PASS: test/test-script.sh
      ============================================================================
      Testsuite summary for libevent 2.1.5-beta
      ============================================================================
      # TOTAL: 1
      # PASS:  1
      # SKIP:  0
      # XFAIL: 0
      # FAIL:  0
      # XPASS: 0
      # ERROR: 0
      ============================================================================
    
      real    25m31.735s
      user    0m13.753s
      sys     0m7.648s
    
    And this means that this will fail on travis-ci, since it has timeout for 10
    minutes. Sure we can use `travis wait 60` instead, but I think that it is
    better to fix this by writing result to output, instead of hacking around, so
    let's use serial-tests instead of parallel always.
    And now it works on travis-ci under linux because it has automake 1.11 while
    osx has at least 1.12.
    
    Links:
    https://docs.travis-ci.com/user/common-build-problems/
    https://www.gnu.org/software/automake/manual/html_node/Serial-Test-Harness.html#Serial-Test-Harness
    https://www.gnu.org/software/automake/manual/html_node/Parallel-Test-Harness.html
    
    CI:
    https://travis-ci.org/azat/libevent/jobs/129171497 # ok on linux
    https://travis-ci.org/azat/libevent/jobs/129171532 # no output for 10 min on osx

commit 481481d3f58f293766dbca4fe3d53a55beba2046
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue May 10 10:25:05 2016 +0300

    travis-ci/osx: relink gcc/g++ instead of clang
    
    Since by default osx replaces /usr/bin/gcc with it's apple clang, while we have
    gcc in our build matrix, so use real gcc.

commit 79917e48ba5a7220c5d25fb734d4dbe94109067a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 9 18:14:31 2016 +0300

    travis-ci: enable multi-os mode (osx, linux)
    
    - use addons.apt.packages instead of `apt-get install`
    - add `brew update`/`brew install ...`
    
    Link: https://docs.travis-ci.com/user/installing-dependencies/
    Link: https://docs.travis-ci.com/user/multi-os/

commit 59649f74c2774ebd08b0f043a6555d753e0599cc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 9 18:48:56 2016 +0300

    travis-ci: increase matrix (--disable-foo)
    
    Use --disable-foo from
    https://github.com/libevent/libevent/wiki/ReleaseChecklist

commit c8be33952e20e8ca88a9109e965e956f7d91fb84
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 9 18:54:41 2016 +0300

    travis-ci: adjust alignment

commit 38e0f4a5d6a0a4716c875ad84e499538596e4aa9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 2 15:21:50 2016 +0300

    be_openssl: clear all pending errors before SSL_*() calls
    
    Refs: #350
    Reported-by: @CapSel

commit ce389933332244d1b32b3c2eea57eac7eec4af3c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Apr 21 02:16:21 2016 +0300

    Ignore all pkgconfig generated stuff
    
    In the referenced commit new *.pc added, and I think it is better to ignore
    them all.
    
    Refs: b8d7c6211a965c19c7c5de414135ff13b5fa2476 ("libevent_core and
    libevent_extra also deserve a pkgconfig file")

commit e77ff4187f29a2ae79119e5b36e463808fc245ee
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Apr 21 01:47:29 2016 +0300

    test/buffer: cover n_add_for_cb when evbuffer_prepend() need to allocate buffer
    
    Regression-for: 0abd0393eaf029e1ead8a09b479ea6830f7152ee ("Fix n_add_for_cb in
    evbuffer_prepend() in case of new buffer required")

commit bd19a28ac4aec4d8d4ab5fbe7a973023f987e937
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Apr 21 02:11:26 2016 +0300

    test/tinytest_macros: add new one tt_nstr_op()

commit 0abd0393eaf029e1ead8a09b479ea6830f7152ee
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Apr 21 01:58:58 2016 +0300

    Fix n_add_for_cb in evbuffer_prepend() in case of new buffer required
    
    Signed-off-by: @luoming1224
    Fixes: #349

commit b8d7c6211a965c19c7c5de414135ff13b5fa2476
Author: Jan Heylen <heyleke@gmail.com>
Date:   Wed Apr 20 07:31:25 2016 +0200

    libevent_core and libevent_extra also deserve a pkgconfig file

commit d5e634a80e4615946dc40833d04e2f3f9ba075da
Merge: 2a71b332 ae288125
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Apr 18 13:39:54 2016 +0300

    Merge branch 'be-filter-outputcb-disable-during-execution'
    
    * be-filter-outputcb-disable-during-execution:
      test/bufferevent: check that output_filter disabled during processing output
      be_filter: actually disable output_filter during processing output

commit ae2881254a5517907dbf30b1bffc1f549e89993e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Apr 18 12:50:24 2016 +0300

    test/bufferevent: check that output_filter disabled during processing output
    
    Regression-for: c031215d532c97f1d82efd672ecd622d31d3342d ("be_filter: actually
    disable output_filter during processing output")

commit c031215d532c97f1d82efd672ecd622d31d3342d
Author: Simon Perreault <sperreault@jive.com>
Date:   Sun Feb 28 16:49:15 2016 -0500

    be_filter: actually disable output_filter during processing output
    
    IOW: Make the code do what the comment says it should do.

commit 2a71b33233808bb47888056e8c6b6e9dde82977b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 31 20:45:47 2016 +0300

    listener: unlock lev on error in listener_read_cb()
    
    Without this patch:
      $ regress --no-fork +listener/error_unlock
      listener/error_unlock: [warn] Error from accept() call: Too many open files
      [err] ../evthread.c:220: Assertion lock->count == 0 failed in ../evthread.c
      Aborted (core dumped)
    
    Fixes: #341
    Fixes: listener/error_unlock

commit 7d856516943b4c15f155149db86ebdb32e12302a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 31 20:50:12 2016 +0300

    test/listener: regression for missing unlock in listener_read_cb()
    
    P.S. it triggers even without pthread, but this makes checks more strict.
    
    Refs: #341

commit b59ef3bd63d5c0fdc26cae7023f02d25f37c9810
Merge: bddad71e a8769ef1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 29 19:20:30 2016 +0300

    Merge remote-tracking branch 'origin/pr/339'
    
    * origin/pr/339:
      evbuffer_add: Use last_with_datap if set, not last.
      test/regress: add tests for evbuffer_add() breakage on empty last chain
    
    Fixes: #335

commit a8769ef12d7e223e33fc47bed03fba2bfa2f3536
Author: Marcus Sundberg <marcus@marcussundberg.com>
Date:   Sat Mar 26 20:11:43 2016 +0100

    evbuffer_add: Use last_with_datap if set, not last.
    
    evbuffer_add() would always put data in the last chain, even if there
    was available space in a previous chain, and in doing so it also
    failed to update last_with_datap, causing subsequent calls to other
    functions that do look at last_with_datap to add data in the middle
    of the evbuffer instead of at the end.
    
    Fixes the evbuffer_add() part of issue #335, and the evbuffer/add2 and
    evbuffer/add3 tests, and also prevents wasting space available in the
    chain pointed to by last_with_datap.

commit d5ee7391530890127eaff784d102ec6caaf258f6
Author: Marcus Sundberg <marcus@marcussundberg.com>
Date:   Sat Mar 26 14:14:44 2016 +0100

    test/regress: add tests for evbuffer_add() breakage on empty last chain
    
    The evbuffer/add* tests currenly break on 2.0.21, 2.0.22 and 2.1 HEAD
    due to issue #335. The evbuffer/reference2 test breaks on 2.0.21 and
    2.0.22 due to commit b18c04dd not being applied.

commit bddad71e51aa50b65b4e33cc680d3d41892ac85d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 25 11:22:43 2016 +0300

    test/http: fix running some tests sequential (with --no-fork)
    
    After this patch
    $ regress --no-fork +http/..
    
    Passed without failures.

commit cbc3209d61129257f4477f956460ddf9539e4b85
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 25 11:04:51 2016 +0300

    test/http: localize evhttp server structure

commit 24b521499ab94ec03e4c9068c5e79ad0afcdc94c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 25 10:21:48 2016 +0300

    evhttp_have_expect(): fix -Wlogical-not-parentheses
    
    ../http.c:589:6: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]
            if (!req->kind == EVHTTP_REQUEST || !REQ_VERSION_ATLEAST(req, 1, 1))
                            ^          ~~

commit ec65c42052d95d2c23d1d837136d1cf1d9ecef9e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 25 00:33:47 2016 +0300

    evdns: fix searching empty hostnames
    
    From #332:
      Here follows a bug report by **Guido Vranken** via the _Tor bug bounty program_. Please credit Guido accordingly.
    
      ## Bug report
    
      The DNS code of Libevent contains this rather obvious OOB read:
    
      ```c
      static char *
      search_make_new(const struct search_state *const state, int n, const char *const base_name) {
          const size_t base_len = strlen(base_name);
          const char need_to_append_dot = base_name[base_len - 1] == '.' ? 0 : 1;
      ```
    
      If the length of ```base_name``` is 0, then line 3125 reads 1 byte before the buffer. This will trigger a crash on ASAN-protected builds.
    
      To reproduce:
    
      Build libevent with ASAN:
      ```
      $ CFLAGS='-fomit-frame-pointer -fsanitize=address' ./configure && make -j4
      ```
      Put the attached ```resolv.conf``` and ```poc.c``` in the source directory and then do:
    
      ```
      $ gcc -fsanitize=address -fomit-frame-pointer poc.c .libs/libevent.a
      $ ./a.out
      =================================================================
      ==22201== ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60060000efdf at pc 0x4429da bp 0x7ffe1ed47300 sp 0x7ffe1ed472f8
      READ of size 1 at 0x60060000efdf thread T0
      ```
    
    P.S. we can add a check earlier, but since this is very uncommon, I didn't add it.
    
    Fixes: #332

commit d7348bab602cf4dbdf65b9eeba2fb9ce4646bc0b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 25 00:21:06 2016 +0300

    test/dns: regression for empty hostname
    
    Refs: #332

commit d49a65879f16362c2d37815a89942ff1ba218c6c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 24 20:29:25 2016 +0300

    test/http: fix SERVER_TIMEOUT tests under win32
    
    Seems that the hack with filling BACKLOG didn't work on win32, and hence we
    stuck in write() waiting, not in connect()
    
    And:
    $ time regress http/cancel_server_timeout
    - on linux: 10secs
    - on win32: 2-5secs
    
    I tried to debug this but you can't sniff TCP packages (wireshark/rawpcap) on
    localhost in windows xp (according to [RAWPCAP] and my testing).
    
    RAWPCAP: http://www.netresec.com/?page=RawCap

commit 376f107318c11744637d3f6189250479ba74ea51
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 24 20:26:50 2016 +0300

    test/http: add a helper for creating timedout/failed request

commit d02a2858fa9010d6e69966587dd6d74adc300be5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 24 14:11:10 2016 +0300

    test/http: adopt for C90 (mixed code and declarations)

commit 4db15e09a9579a5d1df7748900fdb00f01a2fbe4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 24 12:49:47 2016 +0300

    evdns: avoid double-free in evdns_base_free() for probing requests
    
    http/cancel_by_host_no_ns:
        OK ../test/regress_http.c:1384: assert(regress_dnsserver(data->base, &portnum, search_table))
        OK ../test/regress_http.c:1387: assert(dns_base)
        OK ../test/regress_http.c:1423: assert(evcon)
             OK ../test/regress_http.c:1444: assert(evhttp_make_request(evcon, req, EVHTTP_REQ_GET, "/delay") != -1): 0 vs -1
             OK ../test/regress_http.c:1455: assert(test_ok == 2): 2 vs 2
             OK ../test/regress_http.c:1480: assert(evhttp_make_request(evcon, req, EVHTTP_REQ_GET, "/test") != -1): 0 vs -1[msg] Nameserver 127.0.0.1:55948 has failed: request timed out.
    [msg] All nameservers have failed
    
        OK ../test/regress_http.c:1274: assert(!req)
             OK ../test/regress_http.c:1505: assert(evhttp_make_request(evcon, req, EVHTTP_REQ_GET, "/test") != -1): 0 vs -1
        OK ../test/regress_http.c:1274: assert(!req)==19199== Invalid read of size 8
    ==19199==    at 0x4CC285: evdns_cancel_request (evdns.c:2849)
    ==19199==    by 0x4CEDB2: evdns_nameserver_free (evdns.c:4018)
    ==19199==    by 0x4CEF5B: evdns_base_free_and_unlock (evdns.c:4052)
    ==19199==    by 0x4CF13B: evdns_base_free (evdns.c:4088)
    ==19199==    by 0x4617A3: http_cancel_test (regress_http.c:1518)
    ==19199==    by 0x490A78: testcase_run_bare_ (tinytest.c:105)
    ==19199==    by 0x490D5A: testcase_run_one (tinytest.c:252)
    ==19199==    by 0x491699: tinytest_main (tinytest.c:434)
    ==19199==    by 0x47E0E0: main (regress_main.c:461)
    ==19199==  Address 0x61e56d0 is 0 bytes inside a block of size 48 free'd
    ==19199==    at 0x4C2AE6B: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==19199==    by 0x4AAFFF: event_mm_free_ (event.c:3516)
    ==19199==    by 0x4C5ADD: request_finished (evdns.c:693)
    ==19199==    by 0x4CEE95: evdns_base_free_and_unlock (evdns.c:4040)
    ==19199==    by 0x4CF13B: evdns_base_free (evdns.c:4088)
    ==19199==    by 0x4617A3: http_cancel_test (regress_http.c:1518)
    ==19199==    by 0x490A78: testcase_run_bare_ (tinytest.c:105)
    ==19199==    by 0x490D5A: testcase_run_one (tinytest.c:252)
    ==19199==    by 0x491699: tinytest_main (tinytest.c:434)
    ==19199==    by 0x47E0E0: main (regress_main.c:461)
    ==19199==  Block was alloc'd at
    ==19199==    at 0x4C2BBD5: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==19199==    by 0x4AAEB2: event_mm_calloc_ (event.c:3459)
    ==19199==    by 0x4CAAA2: nameserver_send_probe (evdns.c:2327)
    ==19199==    by 0x4C50FF: nameserver_prod_callback (evdns.c:494)
    ==19199==    by 0x4A564C: event_process_active_single_queue (event.c:1646)
    ==19199==    by 0x4A5B95: event_process_active (event.c:1738)
    ==19199==    by 0x4A6296: event_base_loop (event.c:1961)
    ==19199==    by 0x4A5C1D: event_base_dispatch (event.c:1772)
    ==19199==    by 0x46172C: http_cancel_test (regress_http.c:1507)
    ==19199==    by 0x490A78: testcase_run_bare_ (tinytest.c:105)
    ==19199==    by 0x490D5A: testcase_run_one (tinytest.c:252)
    ==19199==    by 0x491699: tinytest_main (tinytest.c:434)
    ==19199==

commit 5830e331e17dc16dfa191484561f5b3abf1d55ba
Merge: dbff101b 7a4b4729
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 24 14:05:28 2016 +0300

    Merge branch 'bufev-cancellations-v5'
    
    This patch set fixes bufferevent via http request cancellations (connect() and
    dns-request), it survives tests and cancel.. with --no-fork, so this must be ok
    (though I have one patch for dns layer pending).
    But I'm not sure about cancel.. unit tests on win32, will fix disable them
    later if they will differs (plus maybe we must make them skip-by-default?).
    
    Fixes: #333
    
    * bufev-cancellations-v5:
      http: set fd to -1 unconditioally, to avoid leaking of DNS requests
      test/http: cover NS timed out during request cancellations separatelly
      http: avoid leaking of fd in evhttp_connection_free()
      http: get fd from be layer during connection reset
      be_sock: cancel in-progress dns requests
      evdns: export cancel via callbacks in util (like async lib core/extra issues)
      test/http: request cancellation with resolving/{conn,write}-timeouts in progress

commit 7a4b472925df0a3b96492b8e6347177b1c60e8ad
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 24 13:38:05 2016 +0300

    http: set fd to -1 unconditioally, to avoid leaking of DNS requests
    
    Otherwise:
    http/cancel_by_host_ns_timeout_inactive_server: [msg] Nameserver 127.0.0.1:37035 has failed: request timed out.
    [msg] All nameservers have failed
    OK
    1 tests ok.  (0 skipped)
    ==26211==
    ==26211== FILE DESCRIPTORS: 3 open at exit.
    ==26211== Open file descriptor 2: /dev/pts/47
    ==26211==    <inherited from parent>
    ==26211==
    ==26211== Open file descriptor 1: /dev/pts/47
    ==26211==    <inherited from parent>
    ==26211==
    ==26211== Open file descriptor 0: /dev/pts/47
    ==26211==    <inherited from parent>
    ==26211==
    ==26211==
    ==26211== HEAP SUMMARY:
    ==26211==     in use at exit: 1,112 bytes in 5 blocks
    ==26211==   total heap usage: 149 allocs, 144 frees, 18,826 bytes allocated
    ==26211==
    ==26211== 40 bytes in 1 blocks are indirectly lost in loss record 1 of 5
    ==26211==    at 0x4C2BBD5: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==26211==    by 0x4AAEB2: event_mm_calloc_ (event.c:3459)
    ==26211==    by 0x498F5B: evbuffer_add_cb (buffer.c:3309)
    ==26211==    by 0x4A0EF5: bufferevent_socket_new (bufferevent_sock.c:366)
    ==26211==    by 0x4BFADF: evhttp_connection_base_bufferevent_new (http.c:2375)
    ==26211==    by 0x4BFC8F: evhttp_connection_base_new (http.c:2427)
    ==26211==    by 0x460DAA: http_cancel_test (regress_http.c:1417)
    ==26211==    by 0x490A78: testcase_run_bare_ (tinytest.c:105)
    ==26211==    by 0x490D5A: testcase_run_one (tinytest.c:252)
    ==26211==    by 0x491699: tinytest_main (tinytest.c:434)
    ==26211==    by 0x47E0E0: main (regress_main.c:461)
    ==26211==
    ==26211== 136 bytes in 1 blocks are indirectly lost in loss record 2 of 5
    ==26211==    at 0x4C2BBD5: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==26211==    by 0x4AAEB2: event_mm_calloc_ (event.c:3459)
    ==26211==    by 0x491FF0: evbuffer_new (buffer.c:365)
    ==26211==    by 0x49A1BE: bufferevent_init_common_ (bufferevent.c:300)
    ==26211==    by 0x4A0E44: bufferevent_socket_new (bufferevent_sock.c:353)
    ==26211==    by 0x4BFADF: evhttp_connection_base_bufferevent_new (http.c:2375)
    ==26211==    by 0x4BFC8F: evhttp_connection_base_new (http.c:2427)
    ==26211==    by 0x460DAA: http_cancel_test (regress_http.c:1417)
    ==26211==    by 0x490A78: testcase_run_bare_ (tinytest.c:105)
    ==26211==    by 0x490D5A: testcase_run_one (tinytest.c:252)
    ==26211==    by 0x491699: tinytest_main (tinytest.c:434)
    ==26211==    by 0x47E0E0: main (regress_main.c:461)
    ==26211==
    ==26211== 136 bytes in 1 blocks are indirectly lost in loss record 3 of 5
    ==26211==    at 0x4C2BBD5: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==26211==    by 0x4AAEB2: event_mm_calloc_ (event.c:3459)
    ==26211==    by 0x491FF0: evbuffer_new (buffer.c:365)
    ==26211==    by 0x49A1FB: bufferevent_init_common_ (bufferevent.c:305)
    ==26211==    by 0x4A0E44: bufferevent_socket_new (bufferevent_sock.c:353)
    ==26211==    by 0x4BFADF: evhttp_connection_base_bufferevent_new (http.c:2375)
    ==26211==    by 0x4BFC8F: evhttp_connection_base_new (http.c:2427)
    ==26211==    by 0x460DAA: http_cancel_test (regress_http.c:1417)
    ==26211==    by 0x490A78: testcase_run_bare_ (tinytest.c:105)
    ==26211==    by 0x490D5A: testcase_run_one (tinytest.c:252)
    ==26211==    by 0x491699: tinytest_main (tinytest.c:434)
    ==26211==    by 0x47E0E0: main (regress_main.c:461)
    ==26211==
    ==26211== 536 bytes in 1 blocks are indirectly lost in loss record 4 of 5
    ==26211==    at 0x4C2BBD5: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==26211==    by 0x4AAEB2: event_mm_calloc_ (event.c:3459)
    ==26211==    by 0x4A0E15: bufferevent_socket_new (bufferevent_sock.c:350)
    ==26211==    by 0x4BFADF: evhttp_connection_base_bufferevent_new (http.c:2375)
    ==26211==    by 0x4BFC8F: evhttp_connection_base_new (http.c:2427)
    ==26211==    by 0x460DAA: http_cancel_test (regress_http.c:1417)
    ==26211==    by 0x490A78: testcase_run_bare_ (tinytest.c:105)
    ==26211==    by 0x490D5A: testcase_run_one (tinytest.c:252)
    ==26211==    by 0x491699: tinytest_main (tinytest.c:434)
    ==26211==    by 0x47E0E0: main (regress_main.c:461)
    ==26211==
    ==26211== 1,112 (264 direct, 848 indirect) bytes in 1 blocks are definitely lost in loss record 5 of 5
    ==26211==    at 0x4C2BBD5: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==26211==    by 0x4AAEB2: event_mm_calloc_ (event.c:3459)
    ==26211==    by 0x4D0564: evdns_getaddrinfo (evdns.c:4685)
    ==26211==    by 0x4B13BA: evutil_getaddrinfo_async_ (evutil.c:1575)
    ==26211==    by 0x4A139E: bufferevent_socket_connect_hostname (bufferevent_sock.c:524)
    ==26211==    by 0x4C02DB: evhttp_connection_connect_ (http.c:2588)
    ==26211==    by 0x4C04DD: evhttp_make_request (http.c:2643)
    ==26211==    by 0x4615FF: http_cancel_test (regress_http.c:1504)
    ==26211==    by 0x490A78: testcase_run_bare_ (tinytest.c:105)
    ==26211==    by 0x490D5A: testcase_run_one (tinytest.c:252)
    ==26211==    by 0x491699: tinytest_main (tinytest.c:434)
    ==26211==    by 0x47E0E0: main (regress_main.c:461)
    ==26211==
    ==26211== LEAK SUMMARY:
    ==26211==    definitely lost: 264 bytes in 1 blocks
    ==26211==    indirectly lost: 848 bytes in 4 blocks
    ==26211==      possibly lost: 0 bytes in 0 blocks
    ==26211==    still reachable: 0 bytes in 0 blocks
    ==26211==         suppressed: 0 bytes in 0 blocks

commit 0c343afea98a6ab6c55aa3ddf5d69d41ff83ba8a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 24 10:27:24 2016 +0300

    test/http: cover NS timed out during request cancellations separatelly

commit f0e13411795203c6a160dfc8d8f0fcb1913905ff
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 22 23:36:19 2016 +0300

    http: avoid leaking of fd in evhttp_connection_free()
    
    Since we do close fd there if we don't have BEV_OPT_CLOSE_ON_FREE, and
    evcon->fd can be incorrect (non -1), so just get it from the underlying
    bufferevent to fix this.
    
    And after this patch the following tests report 0 instead of 2307 fd leaks:
    $ valgrind --leak-check=full --show-reachable=yes --track-fds=yes --error-exitcode=1 regress --no-fork http/cancel..
    ==11299== FILE DESCRIPTORS: 3 open at exit.
    
    And this is stdin/stderr/stdout.

commit 4a53c54bf7ad66dbe879ee3c4f04daf264430fc2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 22 19:29:50 2016 +0300

    http: get fd from be layer during connection reset
    
    Since it can be non -1, and we must close it, otherwise we will have problems.
    
    And after this patch the following tests report fd 2307 instead of 2309 fd leaks:
    $ valgrind --leak-check=full --show-reachable=yes --track-fds=yes --error-exitcode=1 regress --no-fork http/cancel..
    ==10853== FILE DESCRIPTORS: 2307 open at exit.

commit 86dfd2ced1985ba7b2a2d4f48f2dc5d7a07ce0ab
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 21 17:09:17 2016 +0300

    be_sock: cancel in-progress dns requests
    
    Before this patch we didn't have such functionality and this can cause some
    issues when we are cancelling HTTP request while after this we will get a
    response/timeout from the NS and in this case error_cb will be called and can
    damage newly started HTTP request.
    We could also have problems with connect, but we don't have them since we
    closes the fd in HTTP layer.
    
    This is not so good that this is done in be_sock, but it is internal, so we can
    change without pain. Plus I don't like that callback-via-evutil, but since we
    have event_extra we need do like that.
    
    And after this patch the following tests doesn't report leaks:
    $ valgrind --leak-check=full --show-reachable=yes --track-fds=yes --error-exitcode=1 regress --no-fork http/cancel..
    ...
    ==10469== FILE DESCRIPTORS: 2309 open at exit.
    ...
    ==10469== HEAP SUMMARY:
    ==10469==     in use at exit: 0 bytes in 0 blocks
    ==10469==   total heap usage: 33,846 allocs, 33,846 frees, 4,617,651 bytes allocated
    ==10469==
    ==10469== All heap blocks were freed -- no leaks are possible
    
    v2: do under lock
    v3: reset dns request
    v4: ignore EVUTIL_EAI_CANCEL in regular callback

commit 8cbe65d5f44246ad3f7ab408d22e797e5b9e5b81
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 21 17:08:34 2016 +0300

    evdns: export cancel via callbacks in util (like async lib core/extra issues)

commit 334340da51dcfe51bc6cc049983a0e6eb4c0ed0f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Mar 12 18:50:41 2016 +0300

    test/http: request cancellation with resolving/{conn,write}-timeouts in progress
    
    This patch adds 8 new tests:
    - http/cancel
    - http/cancel_by_host
    - http/cancel_by_host_no_ns
    - http/cancel_by_host_inactive_server
    - http/cancel_inactive_server
    - http/cancel_by_host_no_ns_inactive_server
    - http/cancel_by_host_server_timeout
    - http/cancel_server_timeout
    - http/cancel_by_host_no_ns_server_timeout
    
    This patches not 100% for http layer, but more for be_sock, but it was simpler
    to add them here, plus it also shows some bugs with fd leaking in http layer.
    
    Right now we have next picture (we can also play with timeouts/attempts for
    evdns to make tests fail, IOW to track the failures even without valgrind):
    $ valgrind --leak-check=full --show-reachable=yes --track-fds=yes --error-exitcode=1 regress --no-fork http/cancel..
    http/cancel: OK
    http/cancel_by_host: OK
    http/cancel_by_host_no_ns: [msg] Nameserver 127.0.0.1:42489 has failed: request timed out.
    [msg] All nameservers have failed
    OK
    http/cancel_by_host_inactive_server: OK
    http/cancel_inactive_server: OK
    http/cancel_by_host_no_ns_inactive_server: [msg] Nameserver 127.0.0.1:51370 has failed: request timed out.
    [msg] All nameservers have failed
    OK
    http/cancel_by_host_server_timeout: OK
    http/cancel_server_timeout: OK
    http/cancel_by_host_no_ns_server_timeout: [msg] Nameserver 127.0.0.1:45054 has failed: request timed out.
    [msg] All nameservers have failed
    OK
    9 tests ok.  (0 skipped)
    ==3202==
    ==3202== FILE DESCRIPTORS: 2309 open at exit.
    ...
    ==8403== HEAP SUMMARY:
    ==8403==     in use at exit: 1,104 bytes in 5 blocks
    ==8403==   total heap usage: 10,916 allocs, 10,911 frees, 1,458,818 bytes allocated
    ==8403==
    ==8403== 40 bytes in 1 blocks are indirectly lost in loss record 1 of 5
    ==8403==    at 0x4C2BBD5: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==8403==    by 0x4AAD2D: event_mm_calloc_ (event.c:3459)
    ==8403==    by 0x498E48: evbuffer_add_cb (buffer.c:3309)
    ==8403==    by 0x4A0DE2: bufferevent_socket_new (bufferevent_sock.c:366)
    ==8403==    by 0x4BF8BA: evhttp_connection_base_bufferevent_new (http.c:2369)
    ==8403==    by 0x4BFA6A: evhttp_connection_base_new (http.c:2421)
    ==8403==    by 0x460CFC: http_cancel_test (regress_http.c:1413)
    ==8403==    by 0x490965: testcase_run_bare_ (tinytest.c:105)
    ==8403==    by 0x490C47: testcase_run_one (tinytest.c:252)
    ==8403==    by 0x491586: tinytest_main (tinytest.c:434)
    ==8403==    by 0x47DFCD: main (regress_main.c:461)
    ==8403==
    ==8403== 136 bytes in 1 blocks are indirectly lost in loss record 2 of 5
    ==8403==    at 0x4C2BBD5: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==8403==    by 0x4AAD2D: event_mm_calloc_ (event.c:3459)
    ==8403==    by 0x491EDD: evbuffer_new (buffer.c:365)
    ==8403==    by 0x49A0AB: bufferevent_init_common_ (bufferevent.c:300)
    ==8403==    by 0x4A0D31: bufferevent_socket_new (bufferevent_sock.c:353)
    ==8403==    by 0x4BF8BA: evhttp_connection_base_bufferevent_new (http.c:2369)
    ==8403==    by 0x4BFA6A: evhttp_connection_base_new (http.c:2421)
    ==8403==    by 0x460CFC: http_cancel_test (regress_http.c:1413)
    ==8403==    by 0x490965: testcase_run_bare_ (tinytest.c:105)
    ==8403==    by 0x490C47: testcase_run_one (tinytest.c:252)
    ==8403==    by 0x491586: tinytest_main (tinytest.c:434)
    ==8403==    by 0x47DFCD: main (regress_main.c:461)
    ==8403==
    ==8403== 136 bytes in 1 blocks are indirectly lost in loss record 3 of 5
    ==8403==    at 0x4C2BBD5: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==8403==    by 0x4AAD2D: event_mm_calloc_ (event.c:3459)
    ==8403==    by 0x491EDD: evbuffer_new (buffer.c:365)
    ==8403==    by 0x49A0E8: bufferevent_init_common_ (bufferevent.c:305)
    ==8403==    by 0x4A0D31: bufferevent_socket_new (bufferevent_sock.c:353)
    ==8403==    by 0x4BF8BA: evhttp_connection_base_bufferevent_new (http.c:2369)
    ==8403==    by 0x4BFA6A: evhttp_connection_base_new (http.c:2421)
    ==8403==    by 0x460CFC: http_cancel_test (regress_http.c:1413)
    ==8403==    by 0x490965: testcase_run_bare_ (tinytest.c:105)
    ==8403==    by 0x490C47: testcase_run_one (tinytest.c:252)
    ==8403==    by 0x491586: tinytest_main (tinytest.c:434)
    ==8403==    by 0x47DFCD: main (regress_main.c:461)
    ==8403==
    ==8403== 528 bytes in 1 blocks are indirectly lost in loss record 4 of 5
    ==8403==    at 0x4C2BBD5: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==8403==    by 0x4AAD2D: event_mm_calloc_ (event.c:3459)
    ==8403==    by 0x4A0D02: bufferevent_socket_new (bufferevent_sock.c:350)
    ==8403==    by 0x4BF8BA: evhttp_connection_base_bufferevent_new (http.c:2369)
    ==8403==    by 0x4BFA6A: evhttp_connection_base_new (http.c:2421)
    ==8403==    by 0x460CFC: http_cancel_test (regress_http.c:1413)
    ==8403==    by 0x490965: testcase_run_bare_ (tinytest.c:105)
    ==8403==    by 0x490C47: testcase_run_one (tinytest.c:252)
    ==8403==    by 0x491586: tinytest_main (tinytest.c:434)
    ==8403==    by 0x47DFCD: main (regress_main.c:461)
    ==8403==
    ==8403== 1,104 (264 direct, 840 indirect) bytes in 1 blocks are definitely lost in loss record 5 of 5
    ==8403==    at 0x4C2BBD5: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==8403==    by 0x4AAD2D: event_mm_calloc_ (event.c:3459)
    ==8403==    by 0x4D0326: evdns_getaddrinfo (evdns.c:4682)
    ==8403==    by 0x4B1213: evutil_getaddrinfo_async_ (evutil.c:1568)
    ==8403==    by 0x4A1255: bufferevent_socket_connect_hostname (bufferevent_sock.c:517)
    ==8403==    by 0x4C00B6: evhttp_connection_connect_ (http.c:2582)
    ==8403==    by 0x4C02B8: evhttp_make_request (http.c:2637)
    ==8403==    by 0x4614EC: http_cancel_test (regress_http.c:1496)
    ==8403==    by 0x490965: testcase_run_bare_ (tinytest.c:105)
    ==8403==    by 0x490C47: testcase_run_one (tinytest.c:252)
    ==8403==    by 0x491586: tinytest_main (tinytest.c:434)
    ==8403==    by 0x47DFCD: main (regress_main.c:461)
    ==8403==
    ==8403== LEAK SUMMARY:
    ==8403==    definitely lost: 264 bytes in 1 blocks
    ==8403==    indirectly lost: 840 bytes in 4 blocks
    ==8403==      possibly lost: 0 bytes in 0 blocks
    ==8403==    still reachable: 0 bytes in 0 blocks
    ==8403==         suppressed: 0 bytes in 0 blocks

commit dbff101b59bdb29df4b410bac017aa4e4db7293f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Mar 21 16:55:59 2016 +0300

    be_sock: evutil_getaddrinfo_async_() always return 0

commit 927ab33f3bf3fcb2ac3eaeff55f97b8e4ed5b68e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 13 13:05:25 2016 +0300

    test/http: exit from the loop in the errorcb to wait cancellation
    
    This will make cancellation tests more graceful, that said that error_cb can
    not be called sometimes if you will break the loop in cancel.
    
    Plus drop that define for function generations, since function body changed,
    and it is not generic anymore, plus that macro didn't used by anyone else.

commit 351207f4006cd9188b141b953d6dff6caf11c969
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Mar 22 23:10:19 2016 +0300

    regress_clean_dnsserver(): reset global port vars
    
    This will fix some test chains with --no-fork.

commit d4054928c738c35cae38b8c6b23bc26816ee1833
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 11 20:17:51 2016 +0300

    http: make fallback for EVHTTP_CON_READ_ON_WRITE_ERROR more cleaner

commit 2ff164abac40d827fd35e0b4436d22137c1cc0b4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 11 19:58:05 2016 +0300

    http: fix EVHTTP_CON_READ_ON_WRITE_ERROR when it doesn't supported by OS
    
    For example win32 doesn't accept such things (maybe via overloaded IO, I'm not
    sure), also I looked into curl and seems that the behaviour is the same (IOW
    like with EVHTTP_CON_READ_ON_WRITE_ERROR on linux/win32).
    
    Fixes: https://ci.appveyor.com/project/nmathewson/libevent/build/2.1.5.216#L499 (win32)
    Fixes: 680742e1665b85487f10c0ef3df021e3b8e98634 ("http: read server response
    even after server closed the connection")
    v2: v0 was just removing that flag, i.e. make it deprecated and set_flags() will return -1

commit 3b581693ac1967f7f8d98491cb772a1b415eb4cd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 11 20:06:11 2016 +0300

    test/http: read_on_write_error: fix it for win32
    
    Fixes: https://ci.appveyor.com/project/nmathewson/libevent/build/2.1.5.216#L499 (win32)

commit 7c8999956fedc77decbd8f78192ed486c3fb1521
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 11 19:52:32 2016 +0300

    http: do not do function calls under EVUTIL_ASSERT() to fix NDEBUG builds
    
    Fixes: 2185e639210f072f37e9d19aff7dba382db84529 ("http: assert's that
    evbuffer_drain() success on connection reset")
    Fixes: http/data_length_constraints
      FAIL ../test/regress_http.c:3775: assert(evhttp_request_get_response_code(req) == HTTP_ENTITYTOOLARGE): 501 vs 413

commit f15cbd5276a974a22e9cd92cdfa3c1bf1421c0df
Merge: 255525dd 8f18a626
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 11 20:59:36 2016 +0300

    Merge branch 'http-client-fix-expect-100-continue-v6'
    
    This patch set fixes and covers http client and "Expect: 100-continue"
    functionality (plus increase coverage under some related options, to avoid
    further regressions).
    
    * http-client-fix-expect-100-continue-v6:
      http: fix leaking of response_code_line
      http: fix "Expect: 100-continue" client side
      test/http: separate coverage for EVHTTP_CON_READ_ON_WRITE_ERROR
      test/http: cover "Expect: 100-continue" client-server interaction
      test/http: *lingering tests shouldn't have "Expect: 100-continue"

commit 8f18a626e6346de92d2fadd187f50dae922ad2f6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 11 20:40:52 2016 +0300

    http: fix leaking of response_code_line
    
    Since now evhttp_parse_response_line() can be called twice because after
    "HTTP/1.1 100 Continue" we can have "HTTP/1.1 200"
    
    ==29162== 9 bytes in 1 blocks are definitely lost in loss record 1 of 1
    ==29162==    at 0x4C29C0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==29162==    by 0x5CBF0A9: strdup (in /lib/x86_64-linux-gnu/libc-2.21.so)
    ==29162==    by 0x4AA3AC: event_mm_strdup_ (event.c:3493)
    ==29162==    by 0x4BD843: evhttp_parse_response_line (http.c:1680)
    ==29162==    by 0x4BE333: evhttp_parse_firstline_ (http.c:2013)
    ==29162==    by 0x4BEA4F: evhttp_read_firstline (http.c:2243)
    ==29162==    by 0x4BC5F8: evhttp_read_cb (http.c:1136)
    ==29162==    by 0x4993F1: bufferevent_run_readcb_ (bufferevent.c:233)
    ==29162==    by 0x49FBC0: bufferevent_trigger_nolock_ (bufferevent-internal.h:392)
    ==29162==    by 0x49FF10: bufferevent_readcb (bufferevent_sock.c:208)
    ==29162==    by 0x4A474A: event_persist_closure (event.c:1580)
    ==29162==    by 0x4A49F5: event_process_active_single_queue (event.c:1639)
    
    Fixes: 0b46b39e95ad77951176f09782138305ba34edf3 ("http: fix "Expect:
    100-continue" client side")

commit 0b46b39e95ad77951176f09782138305ba34edf3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 11 13:08:28 2016 +0300

    http: fix "Expect: 100-continue" client side
    
    Instead of sending data always at the beginning of the request wait until the
    server will respond with "HTTP/1.1 100 Continue".
    Before this patch server do send "HTTP/1.1 100 Continue" but client always send
    post data even without waiting server response.
    
    P.S. this patch also touches some not 100% related tab-align issues.
    
    Covered-by: http/data_length_constraints
    Covered-by: http/read_on_write_error

commit 5c2b4c19f18daa7b09978cdc3827dd4917a81a0f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 11 19:25:11 2016 +0300

    test/http: separate coverage for EVHTTP_CON_READ_ON_WRITE_ERROR

commit 31d8116313e93bf729f8fbb4c85746f0a0f034ba
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 11 14:23:03 2016 +0300

    test/http: cover "Expect: 100-continue" client-server interaction

commit ed469abbaca5c05583f5a95e26bdd141f2291391
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 11 16:18:48 2016 +0300

    test/http: *lingering tests shouldn't have "Expect: 100-continue"

commit 255525dd741df04f8497396b8035c5d2bdabd269
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 11 13:55:41 2016 +0300

    be_sock: unfreeze buffers on fd changing
    
    Only bufferevent_sock have evbuffer_freeze()/evbuffer_unfreeze() & ctrl ops, so
    we don't need to fix other bufferevents (be_pair doesn't have ctrl op).
    
    Found during draining buffers in http layer, and hence 501-not-implemented
    error in regress http/.. (with some custom hacking).

commit 2185e639210f072f37e9d19aff7dba382db84529
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 11 14:02:13 2016 +0300

    http: assert's that evbuffer_drain() success on connection reset
    
    Since otherwise we can have nasty bugs with part of previous *request* in
    current *request* and hence some parsing errors.
    
    And now we have failures:
      http/non_lingering_close: [forking] [err] ../http.c:1326: Assertion !evbuffer_drain(tmp, -1) failed in ../http.c

commit 04fc82f7ad31aafa062ec4578f74b62003507d6e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 11 01:27:52 2016 +0300

    test: use EVUTIL_SHUT_WR

commit 0f2de104b3b03f9d6fd9280c0b5a559b7284f655
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 10 23:51:15 2016 +0300

    Ignore verify_tests.bat (win32 version)

commit 31667659032e0731be5d41da1cc29e1d141dba83
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 10 18:40:34 2016 +0300

    test/http: avoid huge stack allocations to fix win32 builds
    
    Since according to [DOC] default stack size is 1MB, so let's use dynamic
    allocations instead of changing defaults.
    
    DOC: https://msdn.microsoft.com/en-us/library/8cxs58a6.aspx
    Not-fixes: http/data_length_constraints
    Fixes: http/lingering_close
    Fixes: http/non_lingering_close
    Fixes: https://ci.appveyor.com/project/nmathewson/libevent/build/2.1.5.213

commit 87f7238f33f53c63e8aefc148c8b305290937649
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 10 01:50:12 2016 +0300

    cmake: require 3.1 only for win32 to make it work under ubunty precise
    
    Also I [TRIED] wily but ubuntu can't upgrade transparently.
    
    TRIED: https://travis-ci.org/azat/libevent/jobs/114924723
    Fixes: https://travis-ci.org/libevent/libevent/jobs/114917275

commit c46ead5dc77c168ebabd9f33d9cc41fae9dbe7f0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 10 01:07:54 2016 +0300

    cmake: require at least 3.1 for target_sources()

commit 36588e169dc495073d30ba8173fa74a2d8c0f744
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 10 00:33:04 2016 +0300

    cmake: fix adding of compiler flags, and now it will
    
    - add_compiler_flags() must accept array IOW just ARGN will be enoough
    - add_compiler_flags() called with variable name instead of it's value
    
    P.S. and fix some alignments issues
    P.P.S. more cmake issues expected since now CFLAGS actually works
    P.P.P.S. some issues with cmake cache is possible, so just reset it

commit f29f59e8114bc038afae65ea9d6937cee8906f66
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 10 00:25:09 2016 +0300

    Replace -Wswitch-enum with -Wswitch, and add it into cmake rules too
    
    According to https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html:
      -Wswitch-enum
      Warn whenever a switch statement has an index of enumerated type and lacks a
      case for one or more of the named codes of that enumeration. case labels
      outside the enumeration range also provoke warnings when this option is used.
      The only difference between -Wswitch and this option is that this option
      gives a warning about an omitted enumeration code even if there is a *default
      label*.

commit 060e5a2d8d2371b96eb44a4dfc65b5e7d5496228
Merge: 2d3cd353 e122ca1e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Mar 9 18:55:20 2016 +0300

    Merge branch 'more-graceful-http-v10'/lingering close
    
    In short: now `evhttp_set_max_body_size()` is browser-friendly.
    
    This patch set implements lingering close (something like nginx have), this
    will make web-server more graceful for currently existing web browsers, so:
    - without EVHTTP_CON_LINGERING_CLOSE/EVHTTP_SERVER_LINGERING_CLOSE
      before: it will read min(max_body_size, Content-Length)
    - with EVHTTP_CON_LINGERING_CLOSE/EVHTTP_SERVER_LINGERING_CLOSE:
      it will read max(max_body_size, Content-Length), and web browsers will show
      "413 Request Entity Too Large".
    
    Also it fixes a bug on client-side with non-lingering close web-servers
    (EVHTTP_CON_READ_ON_WRITE_ERROR), found during implementing web-server
    lingering close.
    
    * more-graceful-http-v10:
      test: http/lingering_close: cover EVHTTP_SERVER_LINGERING_CLOSE
      test: http/non_lingering_close: cover ~EVHTTP_SERVER_LINGERING_CLOSE
      test: http/*: update expected HTTP codes for body exceeds `max_body_size`
      http: take EVHTTP_CON_LINGERING_CLOSE into account for "Expect: 100-Continue"
      test: http/data_length_constrains: set EVHTTP_CON_READ_ON_WRITE_ERROR
      http: lingering close (like nginx have) for entity-too-large
      http: read server response even after server closed the connection
      test: increase buffer size for http/data_length_constraints to trigger EPIPE
    
    Fixes: #321
    Covered-by: http/non_lingering_close
    Covered-by: http/lingering_close

commit e122ca1eedf9d1293cf0322a34604f0be8a3a2dd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 15 03:21:39 2016 +0300

    test: http/lingering_close: cover EVHTTP_SERVER_LINGERING_CLOSE

commit f41e1b016fa4a667cfc0db293814bfb7f3fed2d1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 15 03:13:02 2016 +0300

    test: http/non_lingering_close: cover ~EVHTTP_SERVER_LINGERING_CLOSE

commit addf2b90ae94ad53c90ea5031a70c3037bea1a2f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 15 03:46:20 2016 +0300

    test: http/*: update expected HTTP codes for body exceeds `max_body_size`

commit ac448a74d0c0c0947c32be65f64dd56c3cd2bab4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 15 03:26:40 2016 +0300

    http: take EVHTTP_CON_LINGERING_CLOSE into account for "Expect: 100-Continue"
    
    Also since after this patch code became more generic, we now respond with
    HTTP_ENTITYTOOLARGE even without "Expect: 100-Continue", which is correct by
    RFC.
    
    Refs: #321
    v2: remove EVHTTP_CON_ABOUT_TO_CLOSE

commit d38a7239749a1642eaae0778d9ddfb1c5d21f442
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 15 02:41:19 2016 +0300

    test: http/data_length_constrains: set EVHTTP_CON_READ_ON_WRITE_ERROR

commit 9fde5189df2722bf58041f03a9d0b69c87dffa8b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 15 00:12:54 2016 +0300

    http: lingering close (like nginx have) for entity-too-large
    
    By lingering close I mean something what nginx have for this name, by this term
    I mean that we need to read all the body even if it's size greater then
    `max_body_size`, otherwise browsers on win32 (including chrome) failed read the
    http status - entity-too-large (while on linux chrome for instance are good),
    and also this includes badly written http clients.
    
    Refs: #321
    
    v2: do this only under EVHTTP_SERVER_LINGERING_CLOSE

commit 680742e1665b85487f10c0ef3df021e3b8e98634
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Feb 10 14:43:18 2016 +0300

    http: read server response even after server closed the connection
    
    Otherwise if we will try to write more data than server can accept
    (see `evhttp_set_max_body_size()` for libevent server) we will get `EPIPE` and
    will not try to read server's response which must contain 400 error for now
    (which is not strictly correct though, it must 413).
    ```
      $ strace regress --no-fork http/data_length_constraints
      ...
      connect(10, {sa_family=AF_INET, sin_port=htons(43988), sin_addr=inet_addr("127.0.0.1")}, 16) = -1 EINPROGRESS (Operation now in progress)
      ...
      writev(10, [{"POST / HTTP/1.1\r\nHost: somehost\r"..., 60}, {"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"..., 16324}], 2) = 16384
      epoll_wait(5, [{EPOLLOUT, {u32=10, u64=10}}, {EPOLLIN, {u32=11, u64=11}}], 32, 50000) = 2
      writev(10, [{"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"..., 16384}], 1) = 16384
      ioctl(11, FIONREAD, [32768])            = 0
      readv(11, [{"POST / HTTP/1.1\r\nHost: somehost\r"..., 4096}], 1) = 4096
      epoll_ctl(5, EPOLL_CTL_DEL, 11, 0x7fff09d41e50) = 0
      epoll_ctl(5, EPOLL_CTL_ADD, 11, {EPOLLOUT, {u32=11, u64=11}}) = 0
      epoll_wait(5, [{EPOLLOUT, {u32=10, u64=10}}, {EPOLLOUT, {u32=11, u64=11}}], 32, 50000) = 2
      writev(10, [{"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"..., 16384}], 1) = 16384
      writev(11, [{"HTTP/1.1 400 Bad Request\r\nConten"..., 129}, {"<HTML><HEAD>\n<TITLE>400 Bad Requ"..., 94}], 2) = 223
      epoll_ctl(5, EPOLL_CTL_DEL, 11, 0x7fff09d42080) = 0
      shutdown(11, SHUT_WR)                   = 0
      close(11)                               = 0
      epoll_wait(5, [{EPOLLOUT|EPOLLERR|EPOLLHUP, {u32=10, u64=10}}], 32, 50000) = 1
      writev(10, [{"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"..., 16384}], 1) = -1 EPIPE (Broken pipe)
      --- SIGPIPE {si_signo=SIGPIPE, si_code=SI_USER, si_pid=13954, si_uid=1000} ---
      epoll_ctl(5, EPOLL_CTL_DEL, 10, 0x7fff09d42010) = 0
      shutdown(10, SHUT_WR)                   = -1 ENOTCONN (Transport endpoint is not connected)
      close(10)                               = 0
      write(1, "\n  FAIL ../test/regress_http.c:3"..., 37
    ```
    Careful reader can ask why it send error even when it didn't read
    `evcon->max_body_size`, and the answer will be checks for `evcon->max_body_size
    against `Content-Length` header, which contains ~8MB (-2 bytes).
    
    And also if we will not drain the output buffer than we will send buffer that
    we didn't send in previous request and instead of sending method via
    `evhttp_make_header()`.
    
    Fixes: http/data_length_constraints
    Refs: #321
    
    v2: do this only under EVHTTP_CON_READ_ON_WRITE_ERROR flag

commit 0792e1e7a775f95b395a45c78052c842817749c0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Feb 10 12:37:30 2016 +0300

    test: increase buffer size for http/data_length_constraints to trigger EPIPE
    
    With greater buffer it can't be written with one writev(2), and hence we can
    trigger more tricky cases, like calling writecb/readcb more then once.
    
    Refs: #321

commit 2d3cd35362f76bb5a5a462db585b318d26a447fa
Author: kirillDanshin <kirilldanshin@guava.by>
Date:   Fri Mar 4 19:18:18 2016 +0300

    sample/hello-world: exAmple, not eXMple
    
    Fixes: #334

commit 4dc09795c060afcffa8446f435a9eba54a258d93
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 15 02:59:40 2016 +0300

    http: fix conflicts EVHTTP_CON_AUTOFREE and EVHTTP_CON_REUSE_CONNECTED_ADDR
    
    And we can't make them continuous, since the latest is a public API, and
    otherwise we will break binary compatibility.
    Also extra check for EVHTTP_CON_PUBLIC_FLAGS_END, in case somebody forgot about
    this (implementer I mean).
    
    Refs: #182

commit 365f181aa3b6c94b4900fbd73eafb0683e65982b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 15 03:53:25 2016 +0300

    http: coding style issue

commit 79b69d8be535a78f2b02dd4e7e90227c1e9bfacd
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Feb 24 14:10:21 2016 +0300

    util: fix "%zu" format on TDM-gcc/MinGW-w64
    
    From: @gvanem
    Fixes: #326

commit f062bbe3f9930497c422217b342124011f741b7b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Feb 24 14:02:37 2016 +0300

    test/tinytest_demo: include <windows.h> for win32 to fix tdm-gcc
    
    From: @gvanem
    Fixes: #325

commit 73d0360e834c366a8c045c9b1030b3ecc381590f
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Mon Feb 15 18:01:36 2016 +0100

    test/regress_ssl: Fix compile problems for win32
    
    Windows doesn't have unistd.h, but have the required
    functionality in io.h.
    
    azat: use ev_ssize_t instead of ssize_t

commit 96f64a022014a208105ead6c8a7066018449d86d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Feb 1 17:32:09 2016 +0300

    evdns: name_parse(): fix remote stack overread
    
    @asn-the-goblin-slayer:
      "the name_parse() function in libevent's DNS code is vulnerable to a buffer overread.
    
       971         if (cp != name_out) {
       972             if (cp + 1 >= end) return -1;
       973             *cp++ = '.';
       974         }
       975         if (cp + label_len >= end) return -1;
       976         memcpy(cp, packet + j, label_len);
       977         cp += label_len;
       978         j += label_len;
       No check is made against length before the memcpy occurs.
    
       This was found through the Tor bug bounty program and the discovery should be credited to 'Guido Vranken'."
    
    Reproducer for gdb (https://gist.github.com/azat/e4fcf540e9b89ab86d02):
      set $PROT_NONE=0x0
      set $PROT_READ=0x1
      set $PROT_WRITE=0x2
      set $MAP_ANONYMOUS=0x20
      set $MAP_SHARED=0x01
      set $MAP_FIXED=0x10
      set $MAP_32BIT=0x40
    
      start
    
      set $length=202
      # overread
      set $length=2
      # allocate with mmap to have a seg fault on page boundary
      set $l=(1<<20)*2
      p mmap(0, $l, $PROT_READ|$PROT_WRITE, $MAP_ANONYMOUS|$MAP_SHARED|$MAP_32BIT, -1, 0)
      set $packet=(char *)$1+$l-$length
      # hack the packet
      set $packet[0]=63
      set $packet[1]='/'
    
      p malloc(sizeof(int))
      set $idx=(int *)$2
      set $idx[0]=0
      set $name_out_len=202
    
      p malloc($name_out_len)
      set $name_out=$3
    
      # have WRITE only mapping to fail on read
      set $end=$1+$l
      p (void *)mmap($end, 1<<12, $PROT_NONE, $MAP_ANONYMOUS|$MAP_SHARED|$MAP_FIXED|$MAP_32BIT, -1, 0)
      set $m=$4
    
      p name_parse($packet, $length, $idx, $name_out, $name_out_len)
      x/2s (char *)$name_out
    
    Before this patch:
    $ gdb -ex 'source gdb' dns-example
    $1 = 1073741824
    $2 = (void *) 0x633010
    $3 = (void *) 0x633030
    $4 = (void *) 0x40200000
    
    Program received signal SIGSEGV, Segmentation fault.
    __memcpy_sse2_unaligned () at memcpy-sse2-unaligned.S:33
    
    After this patch:
    $ gdb -ex 'source gdb' dns-example
    $1 = 1073741824
    $2 = (void *) 0x633010
    $3 = (void *) 0x633030
    $4 = (void *) 0x40200000
    $5 = -1
    0x633030:       "/"
    0x633032:       ""
    (gdb) p $m
    $6 = (void *) 0x40200000
    (gdb) p $1
    $7 = 1073741824
    (gdb) p/x $1
    $8 = 0x40000000
    (gdb) quit
    
    P.S. plus drop one condition duplicate.
    
    Fixes: #317

commit 329acc18a0768c21ba22522f01a5c7f46cacc4d5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 31 00:57:16 2016 +0300

    evutil_parse_sockaddr_port(): fix buffer overflow
    
    @asn-the-goblin-slayer:
      "Length between '[' and ']' is cast to signed 32 bit integer on line 1815. Is
       the length is more than 2<<31 (INT_MAX), len will hold a negative value.
       Consequently, it will pass the check at line 1816. Segfault happens at line
       1819.
    
       Generate a resolv.conf with generate-resolv.conf, then compile and run
       poc.c. See entry-functions.txt for functions in tor that might be
       vulnerable.
    
       Please credit 'Guido Vranken' for this discovery through the Tor bug bounty
       program."
    
    Reproducer for gdb (https://gist.github.com/azat/be2b0d5e9417ba0dfe2c):
      start
      p (1ULL<<31)+1ULL
      # $1 = 2147483649
      p malloc(sizeof(struct sockaddr))
      # $2 = (void *) 0x646010
      p malloc(sizeof(int))
      # $3 = (void *) 0x646030
      p malloc($1)
      # $4 = (void *) 0x7fff76a2a010
      p memset($4, 1, $1)
      # $5 = 1990369296
      p (char *)$4
      # $6 = 0x7fff76a2a010 '\001' <repeats 200 times>...
      set $6[0]='['
      set $6[$1]=']'
      p evutil_parse_sockaddr_port($4, $2, $3)
      # $7 = -1
    
    Before:
      $ gdb bin/http-connect < gdb
      (gdb) $1 = 2147483649
      (gdb) (gdb) $2 = (void *) 0x646010
      (gdb) (gdb) $3 = (void *) 0x646030
      (gdb) (gdb) $4 = (void *) 0x7fff76a2a010
      (gdb) (gdb) $5 = 1990369296
      (gdb) (gdb) $6 = 0x7fff76a2a010 '\001' <repeats 200 times>...
      (gdb) (gdb) (gdb) (gdb)
      Program received signal SIGSEGV, Segmentation fault.
      __memcpy_sse2_unaligned () at memcpy-sse2-unaligned.S:36
    
    After:
      $ gdb bin/http-connect < gdb
      (gdb) $1 = 2147483649
      (gdb) (gdb) $2 = (void *) 0x646010
      (gdb) (gdb) $3 = (void *) 0x646030
      (gdb) (gdb) $4 = (void *) 0x7fff76a2a010
      (gdb) (gdb) $5 = 1990369296
      (gdb) (gdb) $6 = 0x7fff76a2a010 '\001' <repeats 200 times>...
      (gdb) (gdb) (gdb) (gdb) $7 = -1
      (gdb) (gdb) quit
    
    Fixes: #318

commit 49bd79047bc9aca3ca43fb79eac3901e7805c0df
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 12 01:37:34 2016 +0300

    cmake: don't define EVENT__NEED_DLLIMPORT always (fixes VS2013 static build)
    
    Otherwise that #ifdef in visibility.h is useless, and __declspec(dllimport)
    will be always on.
    
    Fixes: #314
    Fixes: 4545fa9b6866df47ce2f908631a84477a94d5f49 ("Add option to build shared
    library")

commit 4f778ab6d781f5356e8ce66c4a09a2b51446a69a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 22 11:16:05 2016 -0500

    Add missing return statement to del_wait_thread so libevent can build.

commit 1bf759564454bf5a136e2ba6d73c214bdf0e4c1d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 12 02:03:12 2016 +0300

    http-connect: make it win32 compilable
    
    Fixes: commit 1d34498ea31134bd7a8fcadcb95910b30a479e19 ("sample: add HTTP
    CONNECT tunnelling example using libevent http layer")

commit a1609a87d7553f256c1651a4835e3f4a3a3dba44
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 12 01:57:07 2016 +0300

    cmake: fix building dns-example under win32 (missing getopt)

commit bb6b53d031f19b80a590b94513328cdd55f63968
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Jan 12 01:35:46 2016 +0300

    visibility: align it to make it more readable

commit 7707f6b03a12430f811a45b352efca57190e69c9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jan 7 17:51:40 2016 +0300

    cmake: Fix detection of ssize_t/SSIZE_T
    
    Since ssize_it is POSIX, windows/VS also have this but with BaseTsd.h, plus the
    logic prefers "ssize_t" (lower) instead of "SSIZE_T" (upper) when the latest
    only available -- fix this too.
    
    Refs: #311

commit 5b58b709b24df6053d5a1aa3f1be3c0eaf31101d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 3 00:23:22 2016 +0300

    test/regress: cover event_del() waiting mechanism
    
    Since we have some issues (see refs) for changing waiting order in event_del()
    I wrote this simple test, so maybe this test can explain something or at least
    cover what we have before and show it will be broken.
    
    P.S. we really need avoid such stuff like lets-test-with-sleep/usleep.
    
    Refs: #225
    Refs: #226
    Refs: #236

commit 8d34302956001110643346447bbe926924e14d3f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Dec 27 16:50:33 2015 +0300

    Ignore more configure stuff (configure.lineno)
    
    Link: https://lists.gnu.org/archive/html/autoconf/2004-01/msg00043.html

commit 57e46d3271dcf2e7d1a81c8fad941b31304a4cf9
Merge: b8ec70c4 ceddc607
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Dec 27 16:49:42 2015 +0300

    Merge branch 'event_reinit-for-signals-v3'
    
    * event_reinit-for-signals-v3:
      test/regress: cover existing signal callbacks and fork() + event_reinit()
      test/regress: cover signals after fork() + event_reinit()
      test/regress: main/fork: rewrite assertions by just removing event in callback
      event_reinit: make signals works after fork() without evsig_add()
      event_reinit: always re-init signal's socketpair
    
    Fixes #307

commit ceddc607ca3ab1fd695e300e5c5a545f11752d47
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Dec 27 02:48:40 2015 +0300

    test/regress: cover existing signal callbacks and fork() + event_reinit()
    
    Regression-for: 88640aa ("event_reinit: make signals works after fork() without
    evsig_add()")

commit b075b81cd347aaf3c170940819d6857e0f67e75e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Dec 27 09:26:54 2015 +0300

    test/regress: cover signals after fork() + event_reinit()
    
    Regression-for: ad0c237 ("event_reinit: always re-init signal's socketpair")

commit 088d8b39f9f72cd83941bcb9bc261fabfd432eb2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Dec 27 02:31:03 2015 +0300

    test/regress: main/fork: rewrite assertions by just removing event in callback
    
    Instead of assigning some variable value (got_child), and schedule exit from
    loop from that callback, just remove event for that signal, and event loop will
    exit automatically when there will be no events.

commit 88640aa1ca1d974dd4b301f9c496f417921af69b
Author: Nicholas Marriott <@nicm>
Date:   Sun Dec 27 02:15:03 2015 +0300

    event_reinit: make signals works after fork() without evsig_add()
    
    event_reinit() removes the event, but only evsig_add puts it back. So any
    signals set up before event_reinit will be ignored until another signal is
    added.
    
    Fixes: #307

commit ad0c237bc0b2edd4f1dc0e82c6cffbde71bad78b
Author: Nicholas Marriott <@nicm>
Date:   Sun Dec 27 01:43:37 2015 +0300

    event_reinit: always re-init signal's socketpair
    
    Before this patch event_reinit() only closes the signal socketpair fds and
    recreates them if signals have been added, but this is wrong, since socketpair
    fds created on backend init, and if we will not re-create them bad things in
    child/parent signal handling will happens (and indeed this is what happens for
    non-reinit backends like select).
    
    Fixes: #307

commit b8ec70c461b0b3d3d9fc4f1a3d28cce8d05354dc
Author: Mark Ellzey <socket@gmail.com>
Date:   Wed Dec 23 02:42:48 2015 -0800

    Update README.md

commit d56efd94b036f7cb6093606715225e1e20af9fa0
Author: Mark Ellzey <socket@gmail.com>
Date:   Mon Dec 21 17:43:00 2015 -0800

    Fixed issue with cmake version generation

commit 01c7b45111f67f8692727c756c52dd3049be74df
Merge: 6e7a580c bcc8f0f1
Author: Mark Ellzey <socket@gmail.com>
Date:   Mon Dec 21 15:33:50 2015 -0800

    Merge pull request #125 from libevent/master
    
    update upstream

commit bcc8f0f1c2291ab51174e95925e35762a1cfeabe
Merge: 00eb8b6a 7f9646d2
Author: Mark Ellzey <socket@gmail.com>
Date:   Mon Dec 21 04:42:54 2015 -0800

    Merge pull request #305 from libevent/cmake_updates
    
    CMake updates that fix things I thought I fixed.

commit 7f9646d23a20ff708db954ed8c50df38ff52eae1
Author: Mark Ellzey <socket@gmail.com>
Date:   Mon Dec 21 04:36:24 2015 -0800

    Cmake is now officially working.
    
    Though I am currently breaking out things that seem to be repetitive, and a
    cooler version macro and changelog updater.
    
    More to come.

commit 49a53811a6a1b2b141b94a7d33fe530b05a928eb
Author: Mark Ellzey <socket@gmail.com>
Date:   Sun Dec 20 21:44:04 2015 -0800

    More cmake updates, lot's of missing definitions

commit 00eb8b6ad02d47825f2ab019d25b66a8b564ce16
Merge: 3872c2b0 6aad23d8
Author: Mark Ellzey <socket@gmail.com>
Date:   Sun Dec 20 02:17:25 2015 -0800

    Merge pull request #300 from ellzey/cmake_updates
    
    Cmake updates

commit 6aad23d8d5b602eaacaf4f35131704edd318ccec
Author: Mark Ellzey <socket@gmail.com>
Date:   Sun Dec 20 01:56:25 2015 -0800

    CMake syntax fixes fo .in files

commit 3872c2b048ac8eb1c3225677e452c56aac3ed703
Merge: f264afbc a264da86
Author: Mark Ellzey <socket@gmail.com>
Date:   Sun Dec 20 01:09:36 2015 -0800

    Merge pull request #299 from libevent/revert-297-master
    
    Revert "The Windows socket type is defined as SOCKET."

commit a264da867112fd9b6dcf7d0654a6f5bb2ead5d24
Author: Mark Ellzey <socket@gmail.com>
Date:   Sun Dec 20 00:57:50 2015 -0800

    Revert "The Windows socket type is defined as SOCKET."

commit a9db46aec25911dcc1664838097f85793c633966
Author: Mark Ellzey <socket@gmail.com>
Date:   Sun Dec 20 00:43:46 2015 -0800

    CMAKE CMAKE CMAKE CLEANUPS
    
    It's almost useful.

commit 8b228e27f57300be61b57a41a2ec8666b726dc34
Author: Mark Ellzey <socket@gmail.com>
Date:   Sat Dec 19 01:47:49 2015 -0800

    Lot's of cmake updates
    
    This is still not done, cmake here was a horrid mess, but we're
    getting our act together now.

commit f264afbc9d07b755b23d3eee1e686a2fe5c89091
Merge: 1c17cfdd ded80866
Author: Mark Ellzey <socket@gmail.com>
Date:   Fri Dec 18 12:17:04 2015 -0800

    Merge pull request #297 from billsegall/master
    
    The Windows socket type is defined as SOCKET.

commit ded80866563436d453e4fa26e8645e87529d07b8
Author: billsegall <bill@segall.net>
Date:   Thu Dec 17 21:27:37 2015 +1000

    Provide a mechanism for building the library on Windows with different compiler flags. Add a batch file that builds it for the M[DT][d] options and performs a hunt and gather of the different output libraries.

commit c9e6c3d70f837755c3ea66700ff70f61d1e18015
Author: billsegall <bill@segall.net>
Date:   Wed Dec 16 11:17:36 2015 +1000

    The Windows socket type is defined as SOCKET.
    
    Under the hood it's an unsigned rather than a signed type and whilst C
    compilers are largely happy with this C++ compilers tend to be fussy
    about class function signatures which makes C++ usage of libevent
    problematic.

commit 1c17cfdd2bea34089f303a2dcbcb05fcacf46cd6
Merge: 3e2c10a7 4b41eebe
Author: Mark Ellzey <socket@gmail.com>
Date:   Mon Dec 14 12:31:08 2015 -0800

    Merge pull request #296 from lzmths/master
    
    Refactoring conditional directives that break parts of statements.

commit 3e2c10a7b3b795ce594b3cb2d0e232632e642c78
Merge: 809bb39b e8b78957
Author: Mark Ellzey <socket@gmail.com>
Date:   Mon Dec 14 12:20:59 2015 -0800

    Merge pull request #289 from mc-server/UnicodeErrMsgFix
    
    Fixed Unicode issue in error messages.

commit 4b41eebeb27051c9e6fb32291a560130ff7a0a96
Author: lzmths <luizmatheus.ac@gmail.com>
Date:   Mon Dec 14 11:04:00 2015 -0300

    Refactoring conditional directives that break parts of statements.

commit e8b78957ea70bd0d64d1ed5dde2108a05476ac79
Author: Mattes D <github@xoft.cz>
Date:   Fri Oct 9 19:41:30 2015 +0200

    Fixed Unicode issue in error messages.

commit 809bb39b2b7b632c86337877b483520d997cd5db
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 23 13:52:31 2015 +0300

    be_sock: bufferevent_socket_connect_hostname(): make it thread-safe
    
    If you use bufferevent_socket_connect_hostname() to resolve, then ipv4 answer
    can be returned before ipv6 scheduled and if you will destroy bufferevent after
    ipv4 answer will come (in a separate thread of course) then ipv6 will trigger
    UAF:
    
    $ a.out
    =================================================================
    ==29733==ERROR: AddressSanitizer: heap-use-after-free on address 0x60200000ef50 at pc 0x0000004b7aef bp 0x7fffffffd940 sp 0x7fffffffd0f8
    READ of size 2 at 0x60200000ef50 thread T0
        #0 0x4b7aee in __interceptor_index (/src/oss/libevent/libevent-github/.invest/217-evhttp-threaded/a.out+0x4b7aee)
        #1 0x5060eb in string_num_dots /src/oss/libevent/libevent-github/.cmake-debug/../evdns.c:2739
        #2 0x5078df in search_request_new /src/oss/libevent/libevent-github/.cmake-debug/../evdns.c:3214
        #3 0x506afd in evdns_base_resolve_ipv6 /src/oss/libevent/libevent-github/.cmake-debug/../evdns.c:2935
        #4 0x50aa94 in evdns_getaddrinfo /src/oss/libevent/libevent-github/.cmake-debug/../evdns.c:4719
        #5 0x51de4f in evutil_getaddrinfo_async_ /src/oss/libevent/libevent-github/.cmake-debug/../evutil.c:1567
        #6 0x4fe023 in bufferevent_socket_connect_hostname /src/oss/libevent/libevent-github/.cmake-debug/../bufferevent_sock.c:519
        #7 0x524f54 in evhttp_connection_connect_ /src/oss/libevent/libevent-github/.cmake-debug/../http.c:2493
        #8 0x525156 in evhttp_make_request /src/oss/libevent/libevent-github/.cmake-debug/../http.c:2548
        #9 0x52d373 in main (/src/oss/libevent/libevent-github/.invest/217-evhttp-threaded/a.out+0x52d373)
        #10 0x7ffff6849b44 in __libc_start_main /tmp/buildd/glibc-2.19/csu/libc-start.c:287
        #11 0x445806 in _start (/src/oss/libevent/libevent-github/.invest/217-evhttp-threaded/a.out+0x445806)
    
    0x60200000ef50 is located 0 bytes inside of 15-byte region [0x60200000ef50,0x60200000ef5f)
    freed by thread T1 here:
        #0 0x4cc4f2 in __interceptor_free (/src/oss/libevent/libevent-github/.invest/217-evhttp-threaded/a.out+0x4cc4f2)
        #1 0x5141c1 in event_mm_free_ /src/oss/libevent/libevent-github/.cmake-debug/../event.c:3512
        #2 0x522402 in evhttp_connection_free /src/oss/libevent/libevent-github/.cmake-debug/../http.c:1206
        #3 0x52cc5f in connection_closer (/src/oss/libevent/libevent-github/.invest/217-evhttp-threaded/a.out+0x52cc5f)
        #4 0x50e80e in event_process_active_single_queue /src/oss/libevent/libevent-github/.cmake-debug/../event.c:1642
        #5 0x50ed57 in event_process_active /src/oss/libevent/libevent-github/.cmake-debug/../event.c:1734
        #6 0x50f458 in event_base_loop /src/oss/libevent/libevent-github/.cmake-debug/../event.c:1957
        #7 0x50eddf in event_base_dispatch /src/oss/libevent/libevent-github/.cmake-debug/../event.c:1768
        #8 0x52d075 in event_dispatch_thread (/src/oss/libevent/libevent-github/.invest/217-evhttp-threaded/a.out+0x52d075)
        #9 0x7ffff74fc0a3 in start_thread /tmp/buildd/glibc-2.19/nptl/pthread_create.c:309
    
    Fixes: #217
    Closes: #222
    Closes: #219
    Gist: https://gist.github.com/azat/92cbb34232ac02d7972b (from #217 but thread-safe)

commit 959a4c208c793d59ac7d5a7b796643037686b647
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 25 17:47:42 2015 +0300

    autotools: fix getservbyname() detection
    
    The mentioned commit adds this check under-the-else of the previous condition
    between getaddrinfo()/gethostbyname_r(), so this check is triggered only when
    we don't have getaddrinfo() which is wrong, fix this by move it upper.
    
    Fixes [CI] since it uses getservbyname() and it failed with autotools only
    (cmake detection is ok).
    
    CI: https://travis-ci.org/libevent/libevent/builds/93125954
    Fixes: af08a94085e49e6942835b4c6b50a774536d5b5b ("Check for getservbyname even
    if not on win32.")

commit 0b9d43249b4a05fb08564714d992d1e3e745bb97
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 25 17:29:42 2015 +0300

    test/dns: check exit code of evdns_getaddrinfo()
    
    By some reason all autotools builds failed:
    CI: https://travis-ci.org/libevent/libevent/builds/93125954

commit 18c4352e0fdb58263a932fb3c0808a78617cf59b
Merge: fdf713a0 00313c50
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 25 13:09:15 2015 +0300

    Merge branch 'evdns-fail-requests-v6'
    
    This patchset fixes some issues wit evdns_base_free(..., fail_requests=1), and
    there are two cases: with callback wrapper for evdns_getaddrinfo() and not,
    both fixed by this patches, and adds regression tests for this.
    
    * evdns-fail-requests-v6:
      evdns: evdns_base_free(): fix UAF of evdns_base with @fail_requests
      test/dns: cover evdns_getaddrinfo() and evdns_base_free() with @fail_requests
      evdns: evdns_base_free(): free requests before namservers
      test/dns: cover @fail_requests for evdns_base_free()
      test/dns: more graceful coverage of @fail_requests

commit 00313c505079c0a93ceb9e26bce1a5be298062ef
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 23 15:05:19 2015 +0300

    evdns: evdns_base_free(): fix UAF of evdns_base with @fail_requests
    
    If you call evdns_base_free() with @fail_requests == 1, then it will defer
    callback with DNS_ERR_SHUTDOWN, but that callback (internal) uses
    data->evdns_base, but we already freed that evdns base, so we can't do
    this, fix this by checking @result to DNS_ERR_SHUTDOWN.
    
    Fixes: regress dns/client_fail_requests_getaddrinfo
    Fixes: #269

commit 4ad348310c26e473d97066f05a2998cdb006408d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 23 15:52:10 2015 +0300

    test/dns: cover evdns_getaddrinfo() and evdns_base_free() with @fail_requests

commit 14f84bbdc77d90b1d936076661443cdbf516c593
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 23 15:36:30 2015 +0300

    evdns: evdns_base_free(): free requests before namservers
    
    Otherwise we will trigger next UAF:
    $ valgrind --vgdb-error=1 regress --no-fork +dns/client_fail_requests
    ==24733== Memcheck, a memory error detector
    ==24733== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
    ==24733== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
    ==24733== Command: regress --no-fork +dns/client_fail_requests
    ==24733==
    ==24733==
    ==24733== TO DEBUG THIS PROCESS USING GDB: start GDB like this
    ==24733==   /path/to/gdb regress
    ==24733== and then give GDB the following command
    ==24733==   target remote | /usr/lib/valgrind/../../bin/vgdb --pid=24733
    ==24733== --pid is optional if only one valgrind process is running
    ==24733==
    dns/client_fail_requests: ==24733== Invalid read of size 4
    ==24733==    at 0x4C3352: request_finished (evdns.c:662)
    ==24733==    by 0x4CC8B7: evdns_base_free_and_unlock (evdns.c:4048)
    ==24733==    by 0x4CCAFD: evdns_base_free (evdns.c:4088)
    ==24733==    by 0x458E95: dns_client_fail_requests_test (regress_dns.c:2039)
    ==24733==    by 0x48EA5D: testcase_run_bare_ (tinytest.c:105)
    ==24733==    by 0x48ED3F: testcase_run_one (tinytest.c:252)
    ==24733==    by 0x48F67E: tinytest_main (tinytest.c:434)
    ==24733==    by 0x47C0DA: main (regress_main.c:461)
    ==24733==  Address 0x61e6f70 is 448 bytes inside a block of size 456 free'd
    ==24733==    at 0x4C29EAB: free (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==24733==    by 0x4A8F4D: event_mm_free_ (event.c:3512)
    ==24733==    by 0x4CC7A1: evdns_nameserver_free (evdns.c:4021)
    ==24733==    by 0x4CC7DC: evdns_base_free_and_unlock (evdns.c:4037)
    ==24733==    by 0x4CCAFD: evdns_base_free (evdns.c:4088)
    ==24733==    by 0x458E95: dns_client_fail_requests_test (regress_dns.c:2039)
    ==24733==    by 0x48EA5D: testcase_run_bare_ (tinytest.c:105)
    ==24733==    by 0x48ED3F: testcase_run_one (tinytest.c:252)
    ==24733==    by 0x48F67E: tinytest_main (tinytest.c:434)
    ==24733==    by 0x47C0DA: main (regress_main.c:461)
    ==24733==  Block was alloc'd at
    ==24733==    at 0x4C28C4F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==24733==    by 0x4A8D5A: event_mm_malloc_ (event.c:3437)
    ==24733==    by 0x4C8B96: evdns_nameserver_add_impl_ (evdns.c:2505)
    ==24733==    by 0x4C916D: evdns_base_nameserver_ip_add (evdns.c:2629)
    ==24733==    by 0x458DA3: dns_client_fail_requests_test (regress_dns.c:2031)
    ==24733==    by 0x48EA5D: testcase_run_bare_ (tinytest.c:105)
    ==24733==    by 0x48ED3F: testcase_run_one (tinytest.c:252)
    ==24733==    by 0x48F67E: tinytest_main (tinytest.c:434)
    ==24733==    by 0x47C0DA: main (regress_main.c:461)
    ==24733==
    ==24733== (action on error) vgdb me ...
    
    Fixes: regress dns/client_fail_requests
    Fixes: #269

commit d6c6fb42007173216d04cbe4e6cc27483604954e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 23 15:28:40 2015 +0300

    test/dns: cover @fail_requests for evdns_base_free()

commit 123d372864bf95dc68061b92f5f37cc96eeb6df2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 23 15:14:32 2015 +0300

    test/dns: more graceful coverage of @fail_requests
    
    In case when evdns_base_free() called with @fail_requests, we can potentially
    have leaks, but we can avoid them if we will run event loop once again to
    trigger defer cbs, so let's do this, instead of magical decrements (and also
    this will give an example how to avoid leaks for evdns).

commit fdf713a08b9e58b2264b9efc3f2aae74ffaba9f1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 24 01:35:25 2015 +0300

    sample/https-client: allow to change path to ca-certificates
    
    And default to one that linux have, for freebsd you will need:
    $ https-client -url https://google.com -crt /usr/local/share/certs/ca-root-nss.crt

commit c4e9d9bd662de7f575f2172c160795d452ebe709
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 23 18:44:03 2015 +0300

    sample/https-client: check for ERR_remove_thread_state() existence
    
    Fixes: freebsd 9.2 build

commit ab3bc69f47925299a919493f306b9d6fbb805b00
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Nov 20 01:37:46 2015 +0300

    http: avoid epoll_ctl() on already closed fd (triggers by http/chunk_out)
    
    Before:
    $ strace -eepoll_ctl,close regress --verbose --no-fork +http/chunk_out
    close(3)                                = 0
    close(3)                                = 0
    close(3)                                = 0
    close(3)                                = 0
    close(3)                                = 0
    close(3)                                = 0
    close(3)                                = 0
    close(3)                                = 0
    http/chunk_out: epoll_ctl(5, EPOLL_CTL_ADD, 8, {EPOLLIN, {u32=8, u64=8}}) = 0
    close(10)                               = 0
    close(9)                                = 0
    epoll_ctl(5, EPOLL_CTL_ADD, 9, {EPOLLIN, {u32=9, u64=9}}) = 0
    epoll_ctl(5, EPOLL_CTL_ADD, 10, {EPOLLOUT, {u32=10, u64=10}}) = 0
    epoll_ctl(5, EPOLL_CTL_ADD, 11, {EPOLLIN, {u32=11, u64=11}}) = 0
    epoll_ctl(5, EPOLL_CTL_DEL, 10, 7ffffb10b870) = 0
    epoll_ctl(5, EPOLL_CTL_ADD, 10, {EPOLLIN, {u32=10, u64=10}}) = 0
    close(12)                               = 0
    epoll_ctl(5, EPOLL_CTL_MOD, 11, {EPOLLIN|EPOLLOUT, {u32=11, u64=11}}) = 0
    epoll_ctl(5, EPOLL_CTL_MOD, 11, {EPOLLIN, {u32=11, u64=11}}) = 0
    close(11)                               = 0
    epoll_ctl(5, EPOLL_CTL_DEL, 11, 7ffffb10b770) = -1 EBADF (Bad file descriptor)
    ...
    
    And trace for latest:
    close(11)                               = 0
     > regress(evutil_closesocket+0x15) [0xadac4]
     > regress(evhttp_connection_free+0x19d) [0xbada2]
     > regress(evhttp_send_done+0x14d) [0xbde43]
     > regress(evhttp_write_cb+0x4a) [0xba1a1]
     > regress(bufferevent_run_writecb_+0xa2) [0x97bba]
     > regress(bufferevent_trigger_nolock_+0xb1) [0x9e330]
     > regress(bufferevent_writecb+0x2a3) [0x9e91a]
     > regress(event_persist_closure+0x2bb) [0xa2e09]
     > regress(event_process_active_single_queue+0x2a8) [0xa30b4]
     > regress(event_process_active+0x13f) [0xa3696]
     > regress(event_base_loop+0x2ab) [0xa3d97]
     > regress(event_base_dispatch+0x1d) [0xa371e]
     > regress(http_chunk_out_test_impl+0x132) [0x74940]
    epoll_ctl(5, EPOLL_CTL_DEL, 11, 7fff09439fe0) = -1 EBADF (Bad file descriptor)
     > regress(epoll_ctl+0x36) [0xb49a3]
     > regress(epoll_apply_one_change+0x14e) [0xb4cd4]
     > regress(epoll_nochangelist_del+0x87) [0xb51e4]
     > regress(evmap_io_del_+0x247) [0xaab04]
     > regress(event_del_nolock_+0x2f7) [0xa6aa8]
     > regress(event_callback_cancel_nolock_+0x6e) [0xa747e]
     > regress(event_callback_finalize_many_+0xeb) [0xa4dd6]
     > regress(bufferevent_decref_and_unlock_+0x21d) [0x98da7]
     > regress(bufferevent_writecb+0x312) [0x9e989]
     > regress(event_persist_closure+0x2bb) [0xa2e09]
     > regress(event_process_active_single_queue+0x2a8) [0xa30b4]
     > regress(event_process_active+0x13f) [0xa3696]
     > regress(event_base_loop+0x2ab) [0xa3d97]
     > regress(event_base_dispatch+0x1d) [0xa371e]
     > regress(http_chunk_out_test_impl+0x132) [0x74940]
     ...

commit 040000d7a779c3f153f46649368c6951708d9e28
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Nov 16 00:55:30 2015 +0300

    http: install timeout for read too during connect for ssl
    
    Since during ssl handshake we can read too, and if something nasty will happens
    during this handshake (because of too many events in the loop of something like
    this) we can wait forever since there is no read timeout:
      (gdb) p *$2.task.connection.bufev
      $11 = {
        ...
        be_ops = 0x7f78c2864b00 <bufferevent_ops_openssl>,
        ev_read = {
          ...
          ev_ = {
            ev_io = {
              ...
              ev_timeout = { tv_sec = 0, tv_usec = 0 }
            },
            ev_signal = { ... }
          },
          ev_events = 82, ev_res = 2,
          ev_timeout = { tv_sec = 10889976, tv_usec = 418753 }
        },
        ev_write = {
          ...
          ev_ = {
            ev_io = {
              ...
              ev_timeout = { tv_sec = 20, tv_usec = 0 }
            },
            ev_signal = { ... }
          },
          ev_events = 84, ev_res = 4,
          ev_timeout = { tv_sec = 10889977, tv_usec = 598753 }
        },
        ...
        errorcb = 0x7f78c287de70 <evhttp_connection_cb>,
        ...
        timeout_read = { tv_sec = 0, tv_usec = 0 },
        timeout_write = { tv_sec = 20, tv_usec = 0 },
        enabled = 4
      }
      (gdb) bt
      #0  0x00007f78c17c3633 in __epoll_wait_nocancel () at syscall-template.S:81
      #1  0x00007f78c2aaf508 in epoll_dispatch (base=0x18f76d0, tv=<optimized out>) at epoll.c:463
      ...
    
    Found-with: massive crawling
    Tested-with: massive crawling

commit da0ea7ae77b6e22dc7f29d38269df90514427950
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 18 02:50:25 2015 +0300

    test/ssl: cover busy-loop (i.e. {read,write}-blocked-on-{write,read} stuff)
    
    This covers SSL_ERROR_WANT_READ/SSL_ERROR_WANT_WRITE error codes from ssl,
    under which we must block read/write to avoid busy looping, and hence extra CPU
    usage.
    This test introduces custom BIO that will count read/write and validates
    counters, with patches for be_openssl that drops handling
    SSL/SSL_ERROR_WANT_READ there are more then 43K reads, so 100 is pretty ok.

commit 23c77b6054bc1dffc27ba3d2f9d7c9dc5eaeff7c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 15 00:12:25 2015 +0300

    test/http: write_during_read for https

commit 7ea26f71b8ac0c17abbff5875159008ef336f75c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 15 00:08:24 2015 +0300

    test/http: connection_fail for https

commit ac0496831150080a4a7000c3814b9108243d0a34
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 15 00:05:00 2015 +0300

    test/http: stream_out for https

commit da52933550fd4736aa1c213b6de497e2ffc31e34
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Nov 13 16:00:39 2015 +0300

    be_openssl: don't call do_write() directly from outbuf_cb
    
    Otherwise we can trigger incorrect callback, the simplest way to trigger this
    is using http regression tests -- https_chunk_out, since all it do is:
      evhttp_send_reply_end()
        evbuffer_add()
          do_write()
        evhttp_write_buffer()
          evcon->cb = cb
    
    And indeed this is what happens:
      (gdb) bt
      #0  do_write (bev_ssl=0x738a90, atmost=16384) at bufferevent_openssl.c:717
      #1  0x00000000004b69f7 in consider_writing (bev_ssl=0x738a90) at bufferevent_openssl.c:875
      #2  0x00000000004b7386 in be_openssl_outbuf_cb (buf=0x7387b0, cbinfo=0x7fffffffd590, arg=0x738a90) at bufferevent_openssl.c:1147
      #3  0x0000000000490100 in evbuffer_run_callbacks (buffer=0x7387b0, running_deferred=0) at buffer.c:508
      #4  0x00000000004901e5 in evbuffer_invoke_callbacks_ (buffer=0x7387b0) at buffer.c:529
      #5  0x0000000000493a30 in evbuffer_add (buf=0x7387b0, data_in=0x4ecfb2, datlen=5) at buffer.c:1803
      #6  0x00000000004be2e3 in evhttp_send_reply_end (req=0x7371a0) at http.c:2794
      #7  0x000000000045c407 in http_chunked_trickle_cb (fd=-1, events=1, arg=0x75aaf0) at regress_http.c:402
      ...
      (gdb) p bev.writecb
      $4 = (bufferevent_data_cb) 0x4ba17e <evhttp_write_cb>
      $5 = (void *) 0x7379b0
      (gdb) p (struct evhttp_connection *)bev.cbarg
      $6 = (struct evhttp_connection *) 0x7379b0
      (gdb) p $6->cb
      $7 = (void (*)(struct evhttp_connection *, void *)) 0x0
    
    And be_sock don't do like this anyway.
    
    Fixes: https_chunk_out

commit a71ffb9d1b9aed56f72a2876221f525ec1bdba53
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Nov 6 15:58:41 2015 +0300

    test/http: chunk_out for https

commit a1b142bd3e327c488841636e4e85db2c1459399d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 8 14:33:49 2015 +0300

    epoll: introduce PRINT_CHANGES() macro to avoid copy-pasting
    
    And also this will use change_to_string() for successfully returned
    epoll_ctl()

commit 77ad68a6589e66a67df25df18c731c58c1f2a603
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 10 20:29:33 2015 +0300

    sample/https-client: replace ERR_remove_state() by ERR_remove_thread_state()
    
    Since ERR_remove_state() is deprecated:
      $ git log --grep ERR_remove_thread_state
      commit 2ecd2ededece66bf090fefc93ef3ddb672d9e71a
      Author: Bodo Möller <bodo@openssl.org>
      Date:   Wed Aug 13 19:30:01 2008 +0000
    
          Mention ERR_remove_state() deprecation, and ERR_remove_thread_state(NULL).
    
    Link: https://www.openssl.org/docs/manmaster/crypto/ERR_remove_state.html

commit 3316a21005e03183fdcbb0cca16661d003784cc9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 10 20:26:50 2015 +0300

    Add missing <string.h> for openssl_hostname_validation module
    
    Now it included by openssl, but nfter
    openssl/openssl@master-post-reformat-1494-g6329b60 it will print warning
    (apparently they dropped <string.h> from the generic headers).

commit 29573f0db4f06d76dc983928cdd498e1a1df6f8b
Merge: 3160716f 0c66d321
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Nov 6 10:36:18 2015 +0300

    Merge branch 'be-openssl-more-common-with-be-sock'
    
    * be-openssl-more-common-with-be-sock:
      be_openssl: use bufferevent_enable() instead of bufferevent_add_event_()
      be_sock: drop be_sock_add() macro (useless and debug unfriendly)
      be: introduce bufferevent_generic_adj_existing_timeouts_()
      be_openssl: don't add events during bev creation (like be_sock)
      be: add_event: use evutil_timerisset()

commit 3160716f269ae9a5104777cadcd59739154a8d18
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Nov 6 10:13:13 2015 +0300

    test/regress: fix ssl-less builds (need to make this prettier)
    
    CI: https://travis-ci.org/libevent/libevent/jobs/89590839

commit 0c66d3210c348c9f0b4db1ae8ebce29ab3606d70
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 5 17:56:07 2015 +0300

    be_openssl: use bufferevent_enable() instead of bufferevent_add_event_()
    
    By using bufferevent_enable() there will be no event for READ *or* WRITE if
    they are not enabled before, and this patch reduces difference for
    be_sock_enable/be_openssl_enable (handshake)

commit fad5fe2cc1c7826decc37df4a37cac45f8fd1b78
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 5 17:51:46 2015 +0300

    be_sock: drop be_sock_add() macro (useless and debug unfriendly)

commit 3c1f58f58b5ecfb59476b3e99629cfce20d16f91
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 5 17:45:09 2015 +0300

    be: introduce bufferevent_generic_adj_existing_timeouts_()
    
    And use it in openssl/sock layers to avoid copy-pasting it's variants.

commit f4b6284b8393dbabf389ddce734a30f4cdeffa17
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 5 17:40:25 2015 +0300

    be_openssl: don't add events during bev creation (like be_sock)
    
    Using the following examples you can get changes between be_openssl and
    be_sock:
    $ function diff_addr()
    {
        eval diff -u $(printf "<(strip_addr %s) " "$@")
    }
    $ function strip_addr()
    {
        sed 's/0x[a-zA-Z0-9]*/0xFFFF/g' "$@"
    }
    $ EVENT_DEBUG_LOGGING_ALL= regress --verbose --no-fork +http/https_connection_retry 2> /tmp/https-retry.log >&2
    $ EVENT_DEBUG_LOGGING_ALL= regress --verbose --no-fork +http/connection_retry 2> /tmp/http-retry.log >&2
    $ diff_addr /tmp/http-retry.log /tmp/https-retry.log

commit a96b73b9fd3a5197c58b3e5b3a9697f8383bcc6c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 5 17:35:17 2015 +0300

    be: add_event: use evutil_timerisset()

commit 45a284acfd1d005fb331b3e15c519bb6c1bcabfb
Merge: f45d39d1 1ede3262
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Nov 6 09:45:55 2015 +0300

    Merge branch 'https-coverage-v6'
    
    This patchset adds some basic tests to cover some https cases:
    $ regress +http/https_..
    http/https_basic: [forking] OK
    http/https_simple: [forking] OK
    http/https_simple_dirty: [forking] OK
    http/https_incomplete: [forking] OK
    http/https_incomplete_timeout: [forking] OK
    http/https_connection_retry: [forking] OK
    http/https_connection_retry_conn_address: [forking] OK
    7 tests ok.  (0 skipped)
    
    But there are some leaks in http regression tests (like init_ssl() and others),
    must be fixed by using custom setup routine.
    
    * https-coverage-v6:
      test/http: allow dirty shutdown for ssl to fix https_incomplete
      test/http: https basic
      test/http: incomplete{,_timeout} for https
      test/http: add simplest test for http/https/https_dirty_shutdown
      test/http: https: retry coverage
      test/http: https server support (plus some helpers)
      test/http: more sanity checks
      test/ssl: export getkey()/getcert()/get_ssl_ctx()/init_ssl() for https

commit 1ede3262cc8f0cde927147d9b5bf1cd810f5af67
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Nov 6 02:24:28 2015 +0300

    test/http: allow dirty shutdown for ssl to fix https_incomplete

commit 59714b46bc2b95ab83783c55797688dabff15870
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 5 19:12:58 2015 +0300

    test/http: https basic

commit 615490d048c1fde35e630b3af542d62591d614f2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 5 19:08:30 2015 +0300

    test/http: incomplete{,_timeout} for https

commit 93b19dc569dc91ebbf731f9539b19c4930bee405
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 5 12:39:35 2015 +0300

    test/http: add simplest test for http/https/https_dirty_shutdown
    
    There is "basic" before, but it uses bufferevent's for creating requests for
    http layer, while this test uses http layer for client requests too.

commit 7c2d24ae6bfec44828950c6a245b49cf5b31efe2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 5 11:17:07 2015 +0300

    test/http: https: retry coverage

commit a7088ad0953d272c3b715fc6c0c67cc08ea5b021
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 5 10:58:41 2015 +0300

    test/http: https server support (plus some helpers)
    
    TODO:
    - check BEV_OPT_DEFER_CALLBACKS separately

commit a27c53c5312715852d204b6e117e1a52d59b3038
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 5 11:18:32 2015 +0300

    test/http: more sanity checks

commit 0c4c387c15236ee827d48996bbd1a210613611b5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Nov 5 10:34:18 2015 +0300

    test/ssl: export getkey()/getcert()/get_ssl_ctx()/init_ssl() for https

commit f45d39d1a45b762a48b6648672ee66019d74e877
Author: Bill Vaughan <billvaughan@gmail.com>
Date:   Fri Jul 24 05:40:59 2015 -0700

    Fix lock leak in be_pair_flush() if flush type is BEV_NORMAL
    
    Fixes: bufferevent/bufferevent_pair_flush_normal
      $ regress --no-fork bufferevent/bufferevent_pair_flush_normal
      bufferevent/bufferevent_pair_flush_normal:
        FAIL ../test/regress_bufferevent.c:181: assert(bufferevent_pair_get_partner(bev1) == NULL): 0x177fa20 vs (nil)
        [bufferevent_pair_flush_normal FAILED]
    
    Fixes #266

commit ad52602ffd3129c0fc8c4790a4c85ca214c86471
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Oct 30 18:38:21 2015 +0300

    test/regress_be: basic coverage bufferevent_flush() for pair/sock layers
    
    Refs #266

commit f8081afc5e6b676077dcbe2996e7112adbe6c8d9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Oct 30 18:37:44 2015 +0300

    test/regress_be: socket_filter_inactive: check bufferevent after creation
    
    Fixes:
    ../test/regress_bufferevent.c: In function ‘test_bufferevent_socket_filter_inactive’:
    ../test/regress_bufferevent.c:1180:1: warning: label ‘end’ defined but not used [-Wunused-label]
     end:

commit 7c8d0152dda18ecc52d3099fea235b04ddb850d9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Oct 30 13:34:30 2015 +0300

    Free event queues even for recursive finalizers
    
    For finalizers we can register yet another finalizer out from finalizer, and
    iff finalizer will be in active_later_queue we can add finalizer to
    activequeues, and we will have events in activequeues after event_base_free()
    returns, which is not what we want (we even have an assertion for this).
    
    A simple case is bufferevent with underlying (i.e. filters) in inactive queue.
    
    Fixes: regress bufferevent/bufferevent_socket_filter_inactive

commit 337684b8e8fc0329fb8bcc27517cf167fa5383f7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Oct 9 01:40:02 2015 +0300

    test/regress_be: cover finalizers from inactive to active queue
    
    Right now this will fail with the next assertion:
    $ regress --no-fork --verbose bufferevent/bufferevent_socket_filter_inactive
    bufferevent/bufferevent_socket_filter_inactive: [err] ../event.c:862: Assertion TAILQ_EMPTY(&base->activequeues[i]) failed in event_base_free_
    Aborted

commit 575ff6788583d198cae0abcab0c20d640e72db14
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Oct 30 01:34:40 2015 +0300

    buffer_compat: fix comment -- we have EVBUFFER_EOL_ANY not EOL_STYLE_ANY

commit d8fd4c074228de1bab81f9339b24587d320841ef
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Oct 9 01:53:40 2015 +0300

    test/regress_buffer: fix clang compilation warnings
    
      ../test/regress_buffer.c:201:12: warning: logical not is only applied to the left hand side of this comparison [-Wlogical-not-parentheses]
              tt_assert(!memcmp((char*)EVBUFFER_DATA(evb), "1/hello", 7) != 0);

commit cd422e0927eca7344e3b7e1013022a9a75a25972
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Oct 9 01:50:05 2015 +0300

    test/regress_http: fix compilation warnings (-Wmissing-field-initializers)

commit f55db9856e3e34d345763de1273dc60d07602b84
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Oct 9 01:43:52 2015 +0300

    test/regress_dns: fix compilation warnings (-Wmissing-field-initializers/for)
    
    I don't have an error for loop because gcc5 have --std=gnu11 by default.
    We need some options-consistency for all versions/compilers and build systems
    to avoid such patches.
    
    Fixes: https://travis-ci.org/libevent/libevent/jobs/84403473
    Fixes: https://travis-ci.org/libevent/libevent/builds/84403463

commit d4bdd0c889c9d6f000c3bb2d4d68c1a4088418c2
Merge: 9f02a445 9c238deb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Oct 9 01:17:51 2015 +0300

    Merge branch 'evdns-randomization'
    
    * evdns-randomization:
      evdns: fix randomize-case by make case-insensitive as required
      tests/regress_dns: cover that randomize-case works case-insensitive
      evnds: inline TEST_NAME macro to make debuggin easier
    
    Fixes #288

commit 9c238deb768785c0a12d7644c5d15e6149614e74
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Oct 9 01:13:08 2015 +0300

    evdns: fix randomize-case by make case-insensitive as required
    
    Interesting that this wasn't found by regression tests since they respond with
    that SoME-rAndDom-CaSe domains, and no case-insensitive mode is required during
    comparing response from the server and request.
    
    Fixes #288
    Covered-by: regress dns/search_lower

commit 1e8bfbc6bcd608d4528fa277a15b65794ffe25bf
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Oct 9 01:11:09 2015 +0300

    tests/regress_dns: cover that randomize-case works case-insensitive
    
    Regression-for: #288

commit 0c615f4ef3dd1e70e0f453cea1426901aa22f70b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Oct 9 00:03:47 2015 +0300

    evnds: inline TEST_NAME macro to make debuggin easier

commit 9f02a44513169b1f49e5d722487051357030f806
Author: Thomas Bernard <miniupnp@free.fr>
Date:   Mon Oct 5 12:37:41 2015 +0200

    make test/regress_ssl.c compile without warnings

commit e4556fcda78dda92bfcaf0926a5c0264fc008d23
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 4 03:49:38 2015 +0300

    evthread: fix evthread_setup_global_lock_() for debug-lock with a real-lock case
    
    Sample bt:
      (gdb) bt
      #0  0x00000000004a95d2 in evthread_setup_global_lock_ (lock_=0x0, locktype=0, enable_locks=1)
      #1  0x00000000004afbc7 in evsig_global_setup_locks_ (enable_locks=1) at signal.c:475
      #2  0x00000000004a5da8 in event_global_setup_locks_ (enable_locks=1) at event.c:3838
      #3  0x00000000004a8983 in evthread_set_lock_callbacks (cbs=0x7fffffffdde0) at evthread.c:129
      #4  0x0000000000445a8f in use_lock_unlock_profiler () at regress_bufferevent.c:306
      #5  0x0000000000445af2 in test_bufferevent_pair_release_lock (arg=0x70e710) at regress_bufferevent.c:327
      #6  0x000000000048c9a8 in testcase_run_bare_ (testcase=0x6fdc10 <bufferevent_testcases+80>) at tinytest.c:105
      #7  0x000000000048cc8a in testcase_run_one (group=0x6ff270 <testgroups+112>, testcase=0x6fdc10 <bufferevent_testcases+80>) at tinytest.c:252
      #8  0x000000000048d5c9 in tinytest_main (c=3, v=0x7fffffffe008, groups=0x6ff200 <testgroups>) at tinytest.c:434
      #9  0x000000000047a08f in main (argc=3, argv=0x7fffffffe008) at regress_main.c:459
    
    Found-with: regress bufferevent/bufferevent_pair_release_lock (-DEVENT__DISABLE_DEBUG_MODE=ON)

commit f337296a5cf259903c4f37e67c1a7f903af39fa0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 4 03:35:43 2015 +0300

    Fix checking for make_base_notifiable()
    
    Fixes: a068f2e5 ("event_debug_created_threadable_ctx_: fix compilation without
    debug mode")
    Found-after: 3e56da23 ("travis: add builds without debug mode into matrix")

commit 8240379a3c1cf9420862da6043a8ab759bf21aee
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Oct 4 03:19:12 2015 +0300

    test/regress_be: drop debug __asm__(int3) to fix arm build
    
    Closes #284

commit 3e56da238c5e6f15d066bb124ba9bd20baeaeb8c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 30 11:13:44 2015 +0300

    travis: add builds without debug mode into matrix
    
    To cover compilation with this flag, since brew for example uses it by default.

commit a068f2e594fbe14425c96d0d6eb60c0c1259d38e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Sep 29 20:36:39 2015 +0300

    event_debug_created_threadable_ctx_: fix compilation without debug mode
    
    The following command failed before:
    $ ./configure --disable-debug-mode
    
    Fixes: dcfb19a27b7760299bc9e7291c9abd88c59fd91a ("Debug mode option to error on
    evthread init AFTER other event calls.")

commit 3f749e93db4f6bf10beb73d8d5d523d0e3b036e3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Sep 10 13:38:58 2015 +0300

    test: fix bufferevent/bufferevent_pair_release_lock in debug mode
    
    After this test had been fixed for freebsd the debug build was broken because
    we can't call evthread_set_lock_callbacks() when something already initialized,
    and we can't call event_base_free() (in kqueue case) when it is initialized,
    because of "held_by", but this only playing role during freeing lock profiler
    so reset lock callbacks there before and this will fix both.
    
    Fixes: 79f9ace4ae8a259a5cf1b4ff3869078b60ff16a1 ("test: fix
    bufferevent/bufferevent_pair_release_lock for freebsd")
    
    P.S. after this patch 'make verify' finishes without errors on freebsd.

commit 79f9ace4ae8a259a5cf1b4ff3869078b60ff16a1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Sep 10 12:39:20 2015 +0300

    test: fix bufferevent/bufferevent_pair_release_lock for freebsd
    
    On FreeBSD with kqueue there is a call to evthread_debug_lock_mark_unlocked()
    during event_base_free(), that will fail with an assert because of unmatched
    "held_by", fix this by reseting lock callbacks to NULL before
    event_base_free().
    
    Trace:
      bufferevent/bufferevent_pair_release_lock: [warn] Trying to disable lock functions after they have been set up will probaby not work.
      [warn] Trying to disable lock functions after they have been set up will probaby not work.
    
        FAIL libevent/test/regress_bufferevent.c:259: lock: lock error[err] libevent/evthread.c:277: Assertion lock->held_by == me failed in evthread_debug_lock_mark_unlocked
      [New Thread 802006400 (LWP 100070/regress)]
    
      Program received signal SIGABRT, Aborted.
      [Switching to Thread 802006400 (LWP 100070/regress)]
      0x000000080167d6ca in thr_kill () from /lib/libc.so.7
      (gdb) bt
      #0  0x000000080167d6ca in thr_kill () from /lib/libc.so.7
      #1  0x0000000801752149 in abort () from /lib/libc.so.7
      #2  0x00000000004dff44 in event_exit (errcode=-559030611) at libevent/log.c:105
      #3  0x00000000004e053c in event_errx (eval=-559030611, fmt=0x5182cc "%s:%d: Assertion %s failed in %s") at libevent/log.c:162
      #4  0x00000000004d9954 in evthread_debug_lock_mark_unlocked (mode=0, lock=0x802017060) at libevent/evthread.c:277
      #5  0x00000000004d909a in debug_lock_unlock (mode=0, lock_=0x802017060) at libevent/evthread.c:290
      #6  0x00000000004e132c in evsig_dealloc_ (base=0x80201e300) at libevent/signal.c:434
      #7  0x00000000004e36c1 in kq_dealloc (base=0x80201e300) at libevent/kqueue.c:435
      #8  0x00000000004c9a44 in event_base_free_ (base=0x80201e300, run_finalizers=1) at libevent/event.c:855
      #9  0x00000000004c931a in event_base_free (base=0x0) at libevent/event.c:887
      #10 0x0000000000452657 in lock_unlock_free_thread_cbs () at libevent/test/regress_bufferevent.c:279
      #11 0x0000000000452621 in free_lock_unlock_profiler (data=0x8020170a0) at libevent/test/regress_bufferevent.c:317
      #12 0x000000000044bc8f in test_bufferevent_pair_release_lock (arg=0x8020170a0) at libevent/test/regress_bufferevent.c:334
      #13 0x00000000004b2288 in testcase_run_bare_ (testcase=0x737660) at libevent/test/tinytest.c:105
      #14 0x00000000004b1e72 in testcase_run_one (group=0x738c90, testcase=0x737660) at libevent/test/tinytest.c:252
      #15 0x00000000004b2930 in tinytest_main (c=3, v=0x7fffffffead0, groups=0x738c20) at libevent/test/tinytest.c:434
      #16 0x00000000004982fe in main (argc=3, argv=0x7fffffffead0) at libevent/test/regress_main.c:459
      (gdb) f 4
      #4  0x00000000004d9954 in evthread_debug_lock_mark_unlocked (mode=0, lock=0x802017060) at libevent/evthread.c:277
      277                     EVUTIL_ASSERT(lock->held_by == me);
      Current language:  auto; currently minimal
      (gdb) p lock
      $1 = (struct debug_lock *) 0x802017060
      (gdb) p lock->held_by
      $2 = 0
      (gdb) p me
      $3 = 34393318400

commit 484d0db0fba80c5ab6e28cfe3978e87320be5495
Merge: bfcedee0 5602e451
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Sep 10 12:17:39 2015 +0300

    Merge branch 'cloudabi-fixes-pr-278'
    
    Rebased version of #278
    
    * cloudabi-fixes-pr-278:
      Assume that ke_udata is an integer type on CloudABI.
      Add missing include of <netinet/in.h>.
      Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally.

commit 5602e451ce872d7d60c640590113c5a81c3fc389
Author: Ed Schouten <ed@nuxi.nl>
Date:   Tue Aug 25 23:31:07 2015 +0200

    Assume that ke_udata is an integer type on CloudABI.

commit b2c68bc22b43d242744ea52da4f6606cd2c736cf
Author: Ed Schouten <ed@nuxi.nl>
Date:   Wed Aug 26 09:45:23 2015 +0200

    Add missing include of <netinet/in.h>.
    
    POSIX states that sockaddr_in6 should be declared in <netinet/in.h>. By
    including this header, the code now builds on FreeBSD and CloudABI.

commit c1404b56514813d6be881702bd6efcee2e98ee8d
Author: Ed Schouten <ed@nuxi.nl>
Date:   Wed Aug 26 10:06:09 2015 +0200

    Include <sys/ioctl.h>, <sys/resource.h> and <sys/wait.h> optionally.
    
    Though CloudABI implements a very large part of POSIX, it does not
    provide these header files, for the reason that there is no raw device
    access, no resource limiting and no access to the global process table
    through wait().
    
    It looks like these header files are not actually needed in theory.
    There don't seem to be any constructs in these source files that use
    these features, but I suspect they might still be required on some
    systems.

commit bfcedee0385cdb0b5f6ed063075a664d513b342e
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Thu Aug 13 15:04:14 2015 +0200

    Add a prototype for event_disable_debug_mode()
    
    Exporting this function seems rather useless, as debugging mode has to
    be enabled early and calling this function doesn't allow it to get
    toggled back on later.
    
    Fixes a compile warning when using clang 3.6.
    
    Fixes #271
    Fixes #224

commit 714fc70500c4b94e58c930c62f9dabd8fe7478b8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Sep 10 11:46:17 2015 +0300

    http: export evhttp_connection_set_family()
    
    Fixes #176

commit a0f308da99e889acadfe7486419295fc4b5c6e8a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Sep 10 11:18:20 2015 +0300

    test/regress_be: bufferevent_enable() shouldn't call eventcb by it's own
    
    It must enter the event loop regardless BEV_OPT_DEFER_CALLBACKS, to avoid
    potential errors with subsequent connect(), you will find more info in #43,
    since this is a regression for it.

commit 37dc9e0eca7d0461e82a110a28c4744fd33b8c03
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Sep 10 01:17:50 2015 +0300

    test/regress_be: introduce fake_listener_create()

commit 9b16d9b845f5f5bf7653fae4a1d9b0b0960c492d
Merge: 2cba6779 b0d3964f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 9 19:31:48 2015 +0300

    Merge branch 'evhttp-request-own-fixes'
    
    I hope that I validated all places where evhttp_request_free() called and
    ownership of request can be belong to user-specific code.
    
    * evhttp-request-own-fixes:
      http: fix evhttp_request_own() by checking EVHTTP_USER_OWNED in more cases
      test/regress_http: cover evhttp_request_own()
    
    Fixes #68

commit b0d3964ff5cf26a0d50ebef72fef177f75e9a025
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 9 19:21:51 2015 +0300

    http: fix evhttp_request_own() by checking EVHTTP_USER_OWNED in more cases
    
    Suggested-by: @ellzey
    Fixes: http/request_own
    Fixes: #68

commit 6f6fa0d28a4249ead3a0446bd5a17fd6d47baf2f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 9 19:15:18 2015 +0300

    test/regress_http: cover evhttp_request_own()

commit 2cba6779787d99cbdfd63ef8e83d223248c3df8e
Merge: cf2cf2a0 7ed02ac1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 9 18:08:02 2015 +0300

    Merge branch 'http-server-EOF-at-read-v3'
    
    This patchset fixes an issue with detecting EOF in http server and add some
    regression tests to make sure that we will not break anything.
    
    * http-server-EOF-at-read-v3:
      http: fix detecting EOF without write
      test/regress_http: cover write during read
      test/regress_http: verify that closecb will be called without multiple write
    
    Closes #78
    Link: http://stackoverflow.com/questions/18743948/libevent2-http-server-how-to-detect-client-close/18776728?noredirect=1#18776728

commit 7ed02ac12926c7a1b004d14652deabffb7575c20
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Sep 8 16:40:55 2015 +0300

    http: fix detecting EOF without write
    
    Before this patch http server don't knows when client disconnected until it
    will try to write to it, IOW to detect is client still alive you need to write
    something to client socket, however it is not convenient since it requires to
    store all clients somewhere and poll them periodically, and I don't see any
    regressions if we will leave EV_READ always (like libevhtp do), since we
    already reset read callback in evhttp_write_buffer() (see
    http/write_during_read).
    
    Also since we don't disable EV_READ anymore we don't need some enable EV_READ,
    so we will reduce number of epoll_ctl() calls.
    
    Covered-by: http/terminate_chunked_oneshot
    Covered-by: http/write_during_read
    Fixes: #78

commit 3d15aeb4fddb4ef150061eb1ddf11d66b5725960
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 9 17:45:44 2015 +0300

    test/regress_http: cover write during read
    
    This is the regression for evhttp_write_buffer() where we reset readcb to avoid
    illegal state:
    http/write_during_read: [err] evhttp_read_cb: illegal connection state 7
    
    If you will comment that this test will fail.

commit 4be6c70bb02e91903fb8ea5c0b1bd647c22d15e2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Sep 8 15:44:13 2015 +0300

    test/regress_http: verify that closecb will be called without multiple write
    
    And now this works incorrect, i.e. http layer will not detect EOF until another
    write.
    
    Reported-in: #78

commit cf2cf2a01a18059d132c2a285725795864557155
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 11:51:00 2015 +0300

    test: run regress with EVENT_DEBUG_MODE=1 and without
    
    This could show some bugs like "event_assign called on an already added event",
    and some others that debugging mode could track.

commit 6ea66554df7db726819d906d33938880707f5ba7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 11:55:14 2015 +0300

    test/regress: fix bufferevent_pair_release_lock with EVENT_DEBUG_MODE
    
    Before this patch you will see next error:
    $ EVENT_DEBUG_MODE= regress --no-fork bufferevent/bufferevent_pair_release_lock
    bufferevent/bufferevent_pair_release_lock: [err] evthread initialization must be called BEFORE anything else!

commit 4637aa8841c71deb43d1bc34f0d70a1604bbacb5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 19:34:52 2015 +0300

    sample/https-client: add -timeout option

commit 620aae969c25c1dae8a413a09afe87ee3e46632e
Merge: af85ecfc 877280db
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 19:34:15 2015 +0300

    Merge branch 'be-openssl-drop-fd_is_set-v4'
    
    This must fix some issues with bufferevent openssl layer + some cleanups.
    
    * be-openssl-drop-fd_is_set-v4:
      be_openssl: don't use *_auto() in do_handshake() we can't have fd == -1 there
      be_openssl: don't call set_open_callbacks() if fd == -1
      be_openssl: introduce be_openssl_auto_fd() helper
      be_openssl: introduce set_open_callbacks_auto()
      be_openssl: get rid off hackish "fd_is_set", to fix some corner cases

commit 877280db09e8e136e4aecee76149fe126069239c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 15:09:24 2015 +0300

    be_openssl: don't use *_auto() in do_handshake() we can't have fd == -1 there

commit e8a2da96e3fedc3ebf7d322df0fac155dfb41717
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 14:19:16 2015 +0300

    be_openssl: don't call set_open_callbacks() if fd == -1
    
    This must be illegal, firstly we must do set_do handshake and only after this
    we could read/write.

commit 2a8a7112a5918387c015658af347b6b8f692c6b2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 12:42:29 2015 +0300

    be_openssl: introduce be_openssl_auto_fd() helper

commit 510da71fae9adda147e90eb0c24612d72d922b0f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 12:40:26 2015 +0300

    be_openssl: introduce set_open_callbacks_auto()
    
    This will split cases when we need to extract fd (cases when we have fd==-1
    passed to set_open_callbacks()), and cases when we mustn't have to do this --
    SET_FD via be_openssl_ctrl().

commit 40b03798338b582b9ac467a1bc4b6e98b42d5396
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Aug 22 21:38:18 2015 +0300

    be_openssl: get rid off hackish "fd_is_set", to fix some corner cases
    
    This patch is a cleanup and a bug fix, it drops ```fd_is_set``` flag, and
    replace it with some checks to event_initialized(), and now we will not call
    event_assign() on already added event, plus we will delete event when we really
    have to (this patch fixes the case when server is down, IOW before this patch
    we will not call event_del() because ```fd_is_set``` was reset to 0) and this
    will fix some issues with retries in http layer for ssl.
    
    Reported-in: #258
    Fixes: regress ssl/bufferevent_socketpair_timeout
    Fixes: regress ssl/bufferevent_socketpair_timeout_freed_fd

commit af85ecfccc82ef5f5ffaa33d778abdc795dbea5b
Merge: ce1776c9 cdafdf01
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 19:18:08 2015 +0300

    Merge branch 'test-regress-be-openssl-v2'
    
    This patchset is a bunch of regression tests for bufferevent openssl layer,
    some of them already show some bugs, that bugs will be fixed in the next
    patches.
    
    * test-regress-be-openssl-v2:
      test/regress_ssl: check events fd/pending after timeout triggered
      test/regress_ssl: cover case when server didn't up (failed with timeout)
      test/regress_ssl: covert that we can't change fd with underlying
      test/regress_ssl: cover that events (read/write) at finish not pending
      test/regress_ssl: cover fd manipulations
      test/regress_ssl: convert open_ssl_bufevs() to mask
      test/regress_ssl: convert client/server to mask too
      test/regress_ssl: cover "allow_dirty_shutdown"
      test/regress_ssl: convert regress_bufferevent_openssl() to bitmask

commit cdafdf017eec36c3943b53383fe7c558fee020f5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 17:49:41 2015 +0300

    test/regress_ssl: check events fd/pending after timeout triggered
    
    In this case client can't connect to server, and this bring to the front some
    bugs with assigning on already added events (because of ```fd_is_set``` stuff),
    for more info see #258, since this is the reproducible for it.

commit 74845f1198af30b44e3a008529a373b02fff4c9c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 17:36:20 2015 +0300

    test/regress_ssl: cover case when server didn't up (failed with timeout)

commit df507afafd370bdfa19dc275adf1815e80f8a269
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 17:17:43 2015 +0300

    test/regress_ssl: covert that we can't change fd with underlying

commit 762edb46a8598ba13d0df0f35918494cd92c373a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 17:06:51 2015 +0300

    test/regress_ssl: cover that events (read/write) at finish not pending

commit b78a8297521fba9fc6f4c8e7cdbbd6815d7d5308
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 12:35:51 2015 +0300

    test/regress_ssl: cover fd manipulations

commit 46bba7310355ceed480c11c9eea9bc56e12281f1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 12:31:15 2015 +0300

    test/regress_ssl: convert open_ssl_bufevs() to mask

commit 34559913c0bad3c2737c94e117bf15e8abaa7ca5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 12:26:40 2015 +0300

    test/regress_ssl: convert client/server to mask too

commit 0430327364714e2e4777c2d5a46d12eb1bb171e3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 11:34:13 2015 +0300

    test/regress_ssl: cover "allow_dirty_shutdown"

commit 342e116ff6715202fc0aab2bb507271c3706d4e4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Sep 2 11:22:43 2015 +0300

    test/regress_ssl: convert regress_bufferevent_openssl() to bitmask

commit ce1776c96d2520d0a51e9d0bcc4bf345592c76ad
Author: Ed Schouten <ed@nuxi.nl>
Date:   Tue Aug 25 15:29:37 2015 +0200

    Test against SO_REUSEADDR (along with _WIN32).
    
    This makes the code build on other systems that also don't have
    SO_REUSEADDR without requiring special code.
    
    [ azat: partially revert WIN32 check since SO_REUSEADDR on win32 differs from
    unix semantics. ]
    
    Closes #275

commit 25e56fdbc1a13dd138acd746235b75a4d6dedc34
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 25 17:01:42 2015 +0300

    tests/regress_ssl: drop duplicated assert

commit 2828bdb980d0118a1076d3ddbbf47b77dd96bba2
Author: Christopher Wiley <wiley@google.com>
Date:   Fri Jul 24 08:42:06 2015 -0700

    Always define missing TAILQ functions from sys/queue.h
    
    On both Android and Ubuntu machines, TAILQ_END is not defined.  This
    header also does not seem to be part of standard BSD sys/queue.h
    
    Fix this by always defining missing TAILQ_ macros rather than
    conditioning on a particular macro.
    
    Fixes #267

commit fd36647af1f0337add3031c1a7f95354a4bb2828
Author: Ed Schouten <ed@nuxi.nl>
Date:   Tue Aug 25 15:24:39 2015 +0200

    Don't use BSD u_* types.
    
    These types are not part of POSIX. As we only use them in a small number
    of places, we'd better replace them by C standard types. This makes a
    larger part of the code build for CloudABI.

commit 193c7de505039750f973cd2a73c57677e884de9e
Author: Ed Schouten <ed@nuxi.nl>
Date:   Tue Aug 25 15:32:25 2015 +0200

    Remove BSD-ism: TIMEVAL_TO_TIMESPEC().
    
    Systems like CloudABI implement kqueue() but do not provide the
    BSD-specific TIMEVAL_TO_TIMESPEC() macro. Change the code to perform
    this manually, as it is not hard to do this conversion.

commit c21229192f9dd1dd40b6c8d26adf7f9502625ede
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 19 23:27:51 2015 +0300

    be: include all variations of headers for sockaddr_in6 struct
    
    Fixes: c42bc6b279fd7cd4bc9b04c86a12e2ec5512cce1 ("be: fix sockaddr_in6 type
    definition for win32")
    Fixes: e04555155816306f23829a15b747664a57330c28 ("Merge branch
    'reuse-conn_address-on-retry-v11'")
    CI: https://ci.appveyor.com/project/nmathewson/libevent/build/2.1.5.109
    Tested: manually

commit dfad1a460a7185d667552470a3ce21ef91261146
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 19 23:00:49 2015 +0300

    http: eliminate warning about "socklen" in evhttp_connection_connect_()

commit c42bc6b279fd7cd4bc9b04c86a12e2ec5512cce1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 19 22:52:22 2015 +0300

    be: fix sockaddr_in6 type definition for win32
    
    bufferevent-internal.h:217:23: error: field 'in6' has incomplete type
       struct sockaddr_in6 in6;
                           ^
    CI: https://ci.appveyor.com/project/nmathewson/libevent/build/2.1.5.108

commit f3d7ff5da26576391f884d506686cf032513c3d6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 19 13:22:49 2015 +0300

    sample/https-client: don't try to free uninitialized SSL
    
    sample/https-client.c:459:3: warning: ‘ssl’ may be used uninitialized in this function [-Wmaybe-uninitialized]
       SSL_free(ssl);

commit 24a1f25ab6f095a3900512bfbf1275d116f10396
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Aug 19 13:19:41 2015 +0300

    sample/https-client: graceful exit with freeing memory (to make valgrind happy)

commit 29a04825d01346b025d84e5ee95f4ff9795eb069
Author: Andrey Skriabin <nifigase@gmail.com>
Date:   Thu Apr 2 20:42:54 2015 +0300

    https-client: correctly handle URLs with no path (like "https://host:port")
    
    path == NULL check removed
    
    Fixes: #233
    Fixes: #234

commit 6dc71e70dc05e8306fc06eea7ad64e4260d4de9b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 18 21:57:28 2015 +0300

    sample/http-connect: don't use assert() to make it work with NDEBUG
    
    Otherwise it will not work for cmake release target type.

commit 9f0bff3f68e3e2067224b99b2755ad6394ab3140
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 18 21:30:48 2015 +0300

    test/regress_http: initialize "dns_base" to avoid reading trash
    
    Even though it is very unlikely, but it will better to fix this.

commit f976d4360bb4f80b021c6b15e41d162fce7d06eb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 18 21:29:03 2015 +0300

    sample/http-connect: made it compatible with C90

commit e04555155816306f23829a15b747664a57330c28
Merge: 1d34498e 0ab88c2a
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 18 21:19:11 2015 +0300

    Merge branch 'reuse-conn_address-on-retry-v11'
    
    There is regression tests and also this code worked/tested during crawling a
    huge number of pages (billions).
    
    * reuse-conn_address-on-retry-v11:
      be_sock: bufferevent_socket_set_conn_address(): assert instead of silent no-op
      http: reuse connected address only with EVHTTP_CON_REUSE_CONNECTED_ADDR
      be_sock: sanity check in bufferevent_socket_set_conn_address()
      be: replace sockaddr_storage with sockaddr_in6 for conn_address
      be: we don't need to use getpeername() we we have conn_address
      be: replace conn_address by full struct instead of pointer
      test/http: cover retrying with saved conn_address by shutting down dns server
      http: use IP address that we got before (if any) during retrying
      bufferevent: move conn_address out from http into bufferevent
      be: make @sa const for bufferevent_socket_connect()
      util: make @sa const for evutil_socket_connect_()

commit 0ab88c2a9c4ddcb93969edbbeec03fb627f15dff
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 18 20:41:16 2015 +0300

    be_sock: bufferevent_socket_set_conn_address(): assert instead of silent no-op

commit a50f5f0ac05c85daff4f21824df052bcfdb9d5ec
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jan 1 06:27:31 2015 +0300

    http: reuse connected address only with EVHTTP_CON_REUSE_CONNECTED_ADDR

commit eedbeff36881202bd682525e42e754b9d9808ef8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 2 14:31:03 2014 +0300

    be_sock: sanity check in bufferevent_socket_set_conn_address()

commit 3889612488bf47f0abc9670c63fa1aeecbfdb086
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 2 14:24:19 2014 +0300

    be: replace sockaddr_storage with sockaddr_in6 for conn_address
    
    We need only ipv6/ipv4 for connect in bufferevent, and since
    sockaddr_storage is pretty big (128 bytes) it will be better to use
    sockaddr_in6 here (it will fit ipv4 too).

commit 2c271e24f54e5677f103b4028cef79fc744d79a3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 16 00:30:11 2014 +0300

    be: we don't need to use getpeername() we we have conn_address
    
    Since getpeername() could fail.

commit e5615aa7a381f3f1a852d352d264b77ebc720006
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Nov 16 00:29:19 2014 +0300

    be: replace conn_address by full struct instead of pointer

commit f4874d8c1f2ab454f0552a6f95ba01d61f0b8100
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 15 20:35:40 2014 +0300

    test/http: cover retrying with saved conn_address by shutting down dns server

commit 54c887d8231b5778b2b76ddd6dce263422303ae3
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 12 20:23:46 2014 +0300

    http: use IP address that we got before (if any) during retrying
    
    Before this patch every time we are retrying our request we resolve
    domain, but we could optimize this (since UDP is slow) by using cached
    conn_address value, so do this.

commit 8bb3842552a6003f578821fad12984867757a6fb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 15 21:46:11 2014 +0300

    bufferevent: move conn_address out from http into bufferevent
    
    In http the only case when when we could store it is when we already
    connected, *but* if we are doing request using domain name, then we need
    to do request to nameserver to get IP address, and this is handled by
    bufferevent.
    So when we have IP address (from nameserver) and don't have connection
    to this IP address, we could already cache it to avoid extra DNS
    requests (since UDP is slow), and we can't do this from http layer, only
    from bufferevent.

commit dc33c78391eb24a41215cdfea5fbdcfe90140405
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 2 15:05:59 2014 +0300

    be: make @sa const for bufferevent_socket_connect()

commit a8d32c2353b687cab0fd698b264a0ae925a81f18
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Dec 2 15:05:36 2014 +0300

    util: make @sa const for evutil_socket_connect_()

commit 1d34498ea31134bd7a8fcadcb95910b30a479e19
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 18 12:18:31 2015 +0300

    sample: add HTTP CONNECT tunnelling example using libevent http layer

commit 22061ac1e9e881c024d76b5aeab0ae2c7bc8674d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 18 03:03:51 2015 +0300

    http: introduce evhttp_request_free_() helper

commit 6540da389347bbc357b2522850b6fc7901377697
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Apr 24 19:04:51 2015 +0300

    http: introduce evhttp_is_request_connection_close() helper

commit 1dbb55da324f2ba0ad562d0668dccb34b6c720f8
Author: Mark Ellzey <socket@gmail.com>
Date:   Sun Jun 21 22:05:21 2015 -0400

    Updated gitignore

commit bdeec440f166ce4297f3d6a87be45aa1ceff6f76
Merge: 620ff243 24eea0da
Author: Mark Ellzey <socket@gmail.com>
Date:   Wed Jun 17 08:24:52 2015 -0700

    Merge pull request #190 from JohnOhl/evhttp-post-fix
    
    evhttp: Fix failure to send all output data for POST/PUT requests

commit 620ff243c6141eec5222fbfb0cd633b377efb36f
Author: Mark Ellzey <socket@gmail.com>
Date:   Wed Jun 17 08:05:53 2015 -0700

    Update dns-example.
    
    There's somebody out there who is going to have a compiler from 1986 who will complain. Better to fix c99 now.

commit bde231d725a4c79979391caeb0e3f171079380f7
Merge: 109b03f4 df19a970
Author: Mark Ellzey <socket@gmail.com>
Date:   Wed Jun 17 08:00:19 2015 -0700

    Merge pull request #183 from azat/dns-example
    
    Some improvements for dns-example

commit 109b03f4027df2a38f6e34ad553697f71a1e0159
Merge: 57d059be cb969312
Author: Mark Ellzey <socket@gmail.com>
Date:   Sun Jun 7 09:39:24 2015 -0700

    Merge pull request #254 from zeliard/master
    
    Fix bench_httpclient to support win32

commit cb969312361666553b170605f30b11479845e78b
Author: Seungmo Koo <spacesun@naver.com>
Date:   Sun Jun 7 15:51:15 2015 +0900

    Update bench_httpclient.c
    
    *fixed: socket_geterror instead of WSAGetLastError

commit 57d059befbbdbf267a9a6112f203ba7d79d6ef95
Merge: c6fffc75 3499ad97
Author: Mark Ellzey <socket@gmail.com>
Date:   Sat Jun 6 02:39:29 2015 -0700

    Merge pull request #253 from ellzey/master
    
    Set correct socklen for PF_INET6 sockaddr len

commit 4e9325e8dc019fb915c8d39e2199f339ed7e038d
Author: zeliard <spacesun@naver.com>
Date:   Fri Jun 5 16:39:26 2015 +0900

    *fix: bench_httpclient to support win32

commit 3499ad9729973e83eabc3215bbd24298b96b2f28
Author: Mark Ellzey <socket@gmail.com>
Date:   Mon Jun 1 06:55:24 2015 -0700

    Set correct socklen for PF_INET6 sockaddr len
    
    Reported and patched by Pankaj Sharma

commit c6fffc7547c010ac3f66526e96a1aaa783b7e2ed
Merge: 6c8cb5ef dcfb19a2
Author: Mark Ellzey <socket@gmail.com>
Date:   Fri May 29 06:47:24 2015 -0700

    Merge pull request #251 from ellzey/21_err_on_thread_init_ordering
    
    Debug mode option to error on evthread init AFTER other event calls.

commit dcfb19a27b7760299bc9e7291c9abd88c59fd91a
Author: Mark Ellzey <socket@gmail.com>
Date:   Fri May 15 02:58:14 2015 -0700

    Debug mode option to error on evthread init AFTER other event calls.
    
    - A handy event_enable_debug_mode() feature which will error and abort the
      application if any thread-aware libevent functions are called BEFORE the
      evthread API has been initialized (manually, or through
      evthread_use_windows_threads() / evthread_use_pthreads()
    
    - This is done by setting the global debug variable
      'event_debug_created_threadable_ctx_' whenever the following functions
      are called:
    
         evthreadimpl_lock_alloc_()
         evthreadimpl_cond_alloc_()
         event_base_new_with_config() <- this checks to see if the thread
                                         callbacks are enabled first, so we
                                         have to manually set the variable.
    
    - Example:
    
    int main(int argc, char ** argv) {
        struct event_base * base;
    
        event_enable_debug_mode();
    
        base = event_base_new();
    
        evthread_use_pthreads();
    
        return 0;
    }
    
    When executed, the program will throw an error and exit:
    
    [err] evthread initialization must be called BEFORE anything else!

commit 6c8cb5ef7edd72547761d0a62a5e872a1423c8f5
Merge: d76b2311 c4d440bf
Author: Mark Ellzey <socket@gmail.com>
Date:   Wed May 13 01:11:08 2015 -0400

    Merge pull request #245 from ellzey/21_size_and_misc_fixes
    
    Fix garbage value in socketpair util function, stdint?

commit d76b23110f8b663daf9219631a4bb2e4f394a0a7
Merge: 80faee9f d9f6140b
Author: Mark Ellzey <socket@gmail.com>
Date:   Wed May 13 01:10:42 2015 -0400

    Merge pull request #239 from ellzey/issue237
    
    Call underlying bev ctrl SET_FD on filtered bufferevents

commit 80faee9fbb4ee162f23f1d8d2f37e83834a3f57d
Author: Mark Ellzey <socket@gmail.com>
Date:   Wed May 13 00:52:40 2015 -0400

    Update README.md

commit ad4a897a76518e488cf3f7378789cf5b2c56ffd4
Author: Mark Ellzey <socket@gmail.com>
Date:   Wed May 13 00:51:07 2015 -0400

    Update README.md

commit a2b2e1e6f783ccc19f973ef42f081c7734e74531
Author: Mark Ellzey <socket@gmail.com>
Date:   Wed May 13 00:49:08 2015 -0400

    Update README.md

commit 37453aba990837a56dd4925b6feead4c1c93484a
Author: Mark Ellzey <socket@gmail.com>
Date:   Tue May 12 15:43:03 2015 -0400

    Update travis config for status updates

commit 0dfa5dc671aa5d214cde864e6cd4fb3f89eda4b7
Author: Mark Ellzey <socket@gmail.com>
Date:   Tue May 12 15:33:26 2015 -0400

    Update README.md

commit 1cc2e2953e9d255eb714410ada748edfdfc89bf2
Author: Mark Ellzey <socket@gmail.com>
Date:   Tue May 12 00:27:01 2015 -0400

    Use autotools for appveyor until cmake is fixed.

commit e84e269b475ec55816e7c9b272ce6179f02b5a0b
Author: Mark Ellzey <socket@gmail.com>
Date:   Mon May 11 22:53:05 2015 -0400

    Commented out a WIN32 threading / timing test for now
    
    - seems as if windows has some time scale issues which I am looking
      into. For now I am commenting out the regression test until it is
      fixed.

commit c4d440bf956ef5f3b8bf0274d8443c27fe30f50e
Merge: 043ae748 37bb3f9f
Author: Mark Ellzey <socket@gmail.com>
Date:   Mon May 11 22:18:54 2015 -0400

    Merge branch 'master' into 21_size_and_misc_fixes

commit 37bb3f9f666e82f1b6dbadf1d1242832358b88d6
Merge: f1b3a1e0 107d565d
Author: Mark Ellzey <socket@gmail.com>
Date:   Mon May 11 16:27:15 2015 -0400

    Merge pull request #241 from ellzey/21_fix_appveyor_ssl_link
    
    Fix download link for appveyor SSL

commit 107d565df43d5824b6bdc5785468975bf049a261
Author: Mark Ellzey <socket@gmail.com>
Date:   Mon May 11 12:47:40 2015 -0400

    Fix the link for appveyor OpenSSL installer (WIN32)
    
    * change and move the openssl self installer off to a site we own
       - the old link was 404, probably due to being replaced with a newer
         non-vuln version. But since we are only using this installer to
         auto-build with on appveyor (not as a release), then having a file
         we don't change and own seems to be a better solution.
    * reduce verbosity

commit d9f6140b6bee0387c74a7249d71ebb3a503f2d1f
Merge: c2aa7dcb f1b3a1e0
Author: Mark Ellzey <socket@gmail.com>
Date:   Mon May 11 12:34:30 2015 -0400

    Merge branch 'master' into issue237

commit 043ae7481f4a73b0f48055a0260afa454f02d136
Author: Mark Ellzey <socket@gmail.com>
Date:   Mon May 11 12:06:01 2015 -0400

    Fix garbage value in socketpair util function, stdint?
    
    * Fixed an issue with evutil_ersatz_socketpair_, listen_addr could all
      be compared against with agarbage values. So just memset it before
      using it anywhere.
    
    * Nick might punch me in the face, but if we have stdint.h; (as in
      EVENT__HAVE_STDINT_H is defined), might as well use those instead of
      the manual [U]INT[X}_MAX/MIN muck in there now.

commit f1b3a1e00725666b5ff8f767e2ca40039122e501
Merge: a695a720 1ed6718d
Author: Mark Ellzey <socket@gmail.com>
Date:   Sat May 9 02:44:13 2015 -0400

    Merge pull request #242 from ellzey/pullRequest118
    
    expose bufferevent_incref/decref (with fewer modifications)

commit 1ed6718d1dbf3fb3023122ef5242511a6522d84e
Author: Mark Ellzey <socket@gmail.com>
Date:   Wed May 6 14:56:31 2015 -0700

    expose bufferevent_incref/decref (with fewer modifications)

commit c2aa7dcb70635844134b54df4ccdf4d547a0b2b4
Author: Mark Ellzey <socket@gmail.com>
Date:   Tue May 5 10:37:00 2015 -0700

    Call underlying bev ctrl SET_FD on filtered bufferevents
    
    If a bufferevent_filter is set on an underlying bufferevent which has
    ctrl functions, bufferevent_filter needs to handle this.
    
    For now I have added just BEV_CTRL_SET_FD, since this is needed for
    bufferevent_sock to assign file descriptors to the proper
    bufferevent_read/write callbacks.
    
    A good example of the problem can be found in issue #237
    https://github.com/libevent/libevent/issues/237

commit a695a720cda892c270736d127333d73553842094
Author: Mark Ellzey <socket@gmail.com>
Date:   Mon Apr 27 22:43:04 2015 -0400

    Fix potential fd leak in listener_read_cb()
    
    As pointed out by harlan_ in #libevent after running a coverity sweep.
    If the listener is free'd, 'new_fd' is never closed.

commit 6e7a580c15a7722f94630184189ae3af6afabdd9
Author: Greg Hazel <ghazel@gmail.com>
Date:   Tue Mar 24 17:45:52 2015 -0700

    tab

commit 38cef641c4c8ca03ae7bd90b44181262657f92ff
Author: Greg Hazel <ghazel@gmail.com>
Date:   Tue Mar 24 17:29:40 2015 -0700

    fix the return value of event_deferred_cb_schedule_

commit 31c6d45f8dd496d8968ede2eceea30482830fe6b
Merge: d59113a4 0c7f2178
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Tue Feb 17 12:37:30 2015 -0500

    Merge pull request #220 from miniupnp/fix_warnings
    
    Fix warnings

commit 0c7f21781a99a2deda50f5d6a38742a6822fbe10
Author: Thomas Bernard <miniupnp@free.fr>
Date:   Mon Feb 16 23:42:54 2015 +0100

    Fix mixed declarations and code (forbidden by ISO C90)

commit 746d2c502cc3552cca91f91846c6791f648c7205
Author: Thomas Bernard <miniupnp@free.fr>
Date:   Mon Feb 16 23:41:53 2015 +0100

    Fix "function declaration isn’t a prototype"
    
    add "void" to argument list

commit d59113a4437a50da3ff38a33f4486e39efb4e3d2
Merge: 874ea871 26164a56
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Feb 5 15:24:55 2015 -0500

    Merge pull request #214 from JoakimSoderberg/appveyor
    
    Forgot to install OpenSSL for appveyor

commit 26164a560dede8d177b7917ae810a0d87aac4877
Author: Joakim Söderberg <joakim.soderberg@gmail.com>
Date:   Thu Feb 5 20:21:04 2015 +0100

    Forgot to install OpenSSL for appveyor

commit 874ea871f76435db9c7275d78e0e5663ed5cbd98
Merge: deca354c 5f89c37e
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Feb 5 13:37:24 2015 -0500

    Merge pull request #117 from JoakimSoderberg/appveyor
    
    Add support for appveyor.com windows CI

commit 5f89c37e004b6ac3c0b281faf4595bb144c75ab6
Author: Joakim Söderberg <joakim.soderberg@gmail.com>
Date:   Thu Feb 5 19:24:19 2015 +0100

    Add support for appveyor.com windows CI
    
    This does the same thing as Travis-CI but for windows.
    
    @nmathewson
    Go to: https://ci.appveyor.com/login -> Login using Github
    Click **+New Project** -> Choose **Github** to the left -> Find **Libevent** in the list and click **Add**

commit deca354cbac7a307852083dd664897906dfc1c8b
Merge: a77a82a0 19ba4543
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Feb 5 12:14:16 2015 -0500

    Merge pull request #116 from JoakimSoderberg/fix_build_tree_cmake_config
    
    This fixes a bug introduced in 27bd9faf498b91923296cc91643e03ec4055c230

commit 19ba4543179cfca18880d57331731b2f68ecfa40
Author: Joakim Söderberg <joakim.soderberg@gmail.com>
Date:   Thu Feb 5 00:56:58 2015 +0100

    This fixes a bug introduced in 27bd9faf498b91923296cc91643e03ec4055c230
    
    CMake configuration files are intended to be used by other projects to find the library. Specifically the CMake find_package command can use it to find all files related to the project.
    
    The idea is to support 2 different CMake configuration files for Libevent. One if you simply build libevent that is generated for the build tree.
    And a second one that is generated for an install target that will be installed on the system and point to where on the system the lib files and such can be find.
    
    So for instance, in the build tree the config would set the cmake variable `LIBEVENT_INCLUDE_DIRS` to `/path/to/libevent/build/include`.
    And for the system config it would be set to `/usr/local/include` (or whatever target the user chose when running cmake).
    
    27bd9faf498b91923296cc91643e03ec4055c230 changed this behavior so that both configs would point to the system wide path `/usr/local/include`
    
    This meant that projects just wanting to import directly for the build tree would fail.

commit a77a82a03f85de6e93626dfb8e51250c66ae86d6
Merge: 51821e20 a558fcdb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 4 08:37:32 2015 -0500

    Merge remote-tracking branch 'azat/be-pair-fix-freeing-shared-lock-v5'

commit 51821e20b29e7f1c4738f056a35e22352d1b38d7
Merge: 4472ec68 3540a193
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Wed Feb 4 08:33:42 2015 -0500

    Merge pull request #207 from azat/avoid-leaking-of-event_debug_map_HT_GROW
    
    Avoid leaking of event_debug_map_HT_GROW

commit 4472ec68e6adf175efc3841ea1788018534baa7d
Merge: 1cae3ae1 bdbc823f
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Tue Feb 3 15:57:31 2015 -0500

    Merge pull request #212 from xbao/master
    
    changed strtotimeval signature to avoid conflict with Android NDK sys/time.h header (#211)

commit 1cae3ae16704a7c3ef18da7d1b7ea431381c1232
Merge: 537177d3 4d66552a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 2 13:57:50 2015 -0500

    Merge remote-tracking branch 'public/master'

commit 537177d315cf2759555a9b6f8cfad59232b9aca3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 2 13:57:22 2015 -0500

    New function to get address for nameserver.

commit bdbc823f7ec487a592ac64f01dfae0ee4408ea49
Author: Xiao Bao Clark <xiaobaoclark@gmail.com>
Date:   Wed Jan 28 17:17:02 2015 +1100

    changed strtotimeval signature as per #211

commit 62eaa889cc1996a7c58a389bf2dfa5d8ce784bdb
Merge: 0b49ae34 6c12bfec
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Tue Jan 27 10:07:22 2015 -0500

    Merge pull request #210 from mc-server/master
    
    Added cmake-generated files to ignore list.

commit 6c12bfec1d79b6c87766fc125e4def70040a2190
Author: Matyas Dolak <dolak@eset.cz>
Date:   Tue Jan 27 15:30:52 2015 +0100

    Added cmake-generated files to ignore list.
    
    These are generated by cmake on Windows with MSVC.

commit a558fcdb43f3f403e51a24cb35dc63bb5b1a9287
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 26 00:31:23 2015 +0300

    be_pair/regress: cover use of shared lock (lock/unlock/free)
    
    For more info look at 92a359ee3adf4636db508e6c6d7179d4d59eaafc
    ("be_pair: release shared lock with the latest of bufferevent_pair")

commit e5c87d18b0b57bd04f4a7808e277698f6e62cfb2
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 26 00:29:15 2015 +0300

    event_free_debug_globals_locks(): disable lock debugging
    
    This will allow to use library event after
    event_free_debug_globals_locks()/libevent_global_shutdown() without
    invalid read/write's.

commit ccc55937cfc23b5ecca7f6b2427f906f8413ca4e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 26 00:28:46 2015 +0300

    evthread: evthreadimpl_disable_lock_debugging_() for libevent_global_shutdown()

commit c0b34f6fd5258bd2bb5cb02ed6408b21229a56b7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon Jan 26 00:27:41 2015 +0300

    evthread: add evthread_get_{lock,condition}_callbacks() helpers

commit 92a359ee3adf4636db508e6c6d7179d4d59eaafc
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Jan 3 19:37:15 2015 +0300

    be_pair: release shared lock with the latest of bufferevent_pair
    
    Then next code sample will use free'd lock:
      evthread_use_pthreads();
      ...
      assert(!bufferevent_pair_new(base, BEV_OPT_THREADSAFE, pair));
      ...
      bufferevent_free(pair[0]); # refcnt == 0 -> unlink
      bufferevent_free(pair[1]); # refcnt == 0 -> unlink
      ...
      event_base_free() -> finalizers -> EVTHREAD_FREE_LOCK(bev1->lock)
                                      -> BEV_LOCK(bev2->lock) <-- *already freed*
    
    While if you will reverse the order:
      bufferevent_free(pair[1]); # refcnt == 0 -> unlink
      bufferevent_free(pair[0]); # refcnt == 0 -> unlink
      ...
      event_base_free() -> finalizers -> BEV_LOCK(bev2->lock)/!own_lock/BEV_UNLOCK(bev2->lock)
                                      -> EVTHREAD_FREE_LOCK(bev1->lock) (own_lock)
    
    It is ok now, but I guess that it will be better to relax order of
    freeing pairs.

commit 4d66552a47fae2f7e0d9d1bfccbc353b0a6fbc8e
Merge: 0b49ae34 8674e4fb
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Jan 22 12:15:01 2015 -0500

    Merge pull request #115 from jer-gentoo/master
    
    EVBUFFER_PTR_SET -> EVBUFFER_PTR_ADD

commit 8674e4fb0a0b9c1bed3a99b99d650e330950e79e
Author: jer-gentoo <jer@gentoo.org>
Date:   Wed Jan 21 11:24:23 2015 +0100

    EVBUFFER_PTR_SET -> EVBUFFER_PTR_ADD
    
    Looks like EVBUFFER_PTR_ADD should have been used instead of EVBUFFER_PTR_SET.

commit 3540a193b5540ac72004b8f19fedf839d5cd71ad
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jan 8 04:45:49 2015 +0300

    regress_dns: drop hack for event_debug_map_HT_GROW in leak tests

commit 941faaed39760f0a16bd03db9fb173caaed7d877
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jan 8 04:45:27 2015 +0300

    event: call event_disable_debug_mode() in libevent_global_shutdown()
    
    This will avoid leaking of event_debug_map_HT_GROW
    
    I buildin it into libevent_glboal_shutdown() because
    event_disable_debug_mode() -> event_free_debug_globals() ->
    event_free_debug_globals_locks() will clean event_debug_map_lock_ that
    used in event_disable_debug_mode().

commit 597c7b259b025080f07a68aa9be486ce3584e2d1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Jan 8 04:43:37 2015 +0300

    ht-internal: don't reset hth_table_length explicitly in name_##HT_CLEAR
    
    name_##HT_CLEAR calls name_##HT_INIT that reset hth_table_length to 0.

commit 0b49ae34594533daa82c06a506078de9e336a013
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 5 09:33:48 2015 -0500

    Update changelog

commit 2c827e76e7a9c59429bf8a4bf570eeceef14b0fd
Merge: 683f5568 841ecbd9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 5 09:33:02 2015 -0500

    Merge branch '21_cve_2014_6272_v2'

commit 841ecbd96105c84ac2e7c9594aeadbcc6fb38bc4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 5 09:32:53 2015 -0500

    Fix CVE-2014-6272 in Libevent 2.1
    
    For this fix, we need to make sure that passing too-large inputs to
    the evbuffer functions can't make us do bad things with the heap.
    
    Also, lower the maximum chunk size to the lower of off_t, size_t maximum.
    
    This is necessary since otherwise we could get into an infinite loop
    if we make a chunk that 'misalign' cannot index into.

commit 683f5568ab0ce47b0492aa75dd3015e72f130f81
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 5 09:16:12 2015 -0500

    Increment version to 2.1.5-beta

commit 0eb391941bed827d78a0bf27d7baf887ef91211b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 5 08:50:30 2015 -0500

    work on changelog for 2.1.5-alpah

commit 8a29f3b3aeb1565975d04ec9c3225136fd3ca0a5
Merge: f05a0d53 e69d9109
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Sun Jan 4 10:27:02 2015 -0500

    Merge pull request #201 from nsuke/cmake-shared-build
    
    Fix CMake shared library build

commit e69d910948f751805b6863245261e78241cc87bb
Author: Nobuaki Sukegawa <nsukeg@gmail.com>
Date:   Sat Jan 3 02:22:31 2015 +0900

    Fix CMake shared library build
    
    This fixes following problems in shared library build:
    * visibility=hidden was not enabled for gcc because of incorrect variable name
    * test programs that need internal APIs caused link errors

commit f05a0d53a61714497d4c2e9123439a565044d892
Merge: cb737041 f5b47657
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Tue Dec 23 09:35:40 2014 -0500

    Merge pull request #197 from JohnOhl/fix-clang-compile-warnings
    
    Fix warnings when compiling with clang 3.5

commit f5b476570d2ac4d326b4c9cefee93ed29fb2ca14
Author: John Ohl <john@collabriasoftware.com>
Date:   Mon Dec 22 00:46:56 2014 -0500

    Fix warnings when compiling with clang 3.5

commit cb737041e2ea8c9611be2f3b0340df24be793943
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Dec 15 12:50:11 2014 -0500

    Fix annoying heisenbug in test-time.c

commit 37df827a016617758db0096f4b4a664c02665763
Merge: f2645f80 8afbdbc4
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Mon Dec 8 10:26:01 2014 -0500

    Merge pull request #192 from miniupnp/master
    
    Fix mixed declarations and code (forbidden by ISO C90)

commit 8afbdbc470a16d72305cb58cc62e4ff19d191b10
Author: Thomas Bernard <miniupnp@free.fr>
Date:   Mon Dec 8 10:21:00 2014 +0100

    Fix mixed declarations and code (forbidden by ISO C90)

commit f2645f80c135b44a9e82f809662da4bef93e8726
Author: Andrea Shepard <andrea@persephoneslair.org>
Date:   Wed Nov 19 12:18:05 2014 +0000

    Implement new/free for struct evutil_monotonic_timer and export monotonic time functions

commit 6ae44b5da98dfe0b28972d06f9c0c1c406344c80
Merge: 37145c56 fb7e76ae
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Dec 1 08:32:23 2014 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit fb7e76aec54d312a7cfdb11e72d2299faf6f3314
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 30 11:05:40 2014 -0500

    Fix evbuffer_peek() with len==-1 and start_at non-NULL.

commit 37145c5659515028df32050b8bfa2afbdb95948d
Merge: d9469d39 1da2f42b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 30 21:07:55 2014 -0500

    Merge remote-tracking branch 'public/patches-2.0'
    
    Conflicts:
            ChangeLog
            event.c

commit 1da2f42bdb7f67381e36821c27d88ec1bc8c409d
Merge: 5ae52872 be1aeff2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 30 21:02:25 2014 -0500

    Merge branch 'patches-2.0' of github.com:libevent/libevent into patches-2.0

commit d9469d396f02d4dc59f4f403bdc4aecd0397a0bc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 30 21:02:06 2014 -0500

    Start on 2.1.5-alpha/beta changelog

commit 5ae52872141c992e38401998cb82e627812bd5fa
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 30 19:38:23 2014 -0500

    Work on the changelog for 2.0.22

commit 7fd4941465e42ec46721150e7ccf1aa2d2bf670b
Merge: 23133cac 10fe4ef3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 30 19:26:20 2014 -0500

    Merge remote-tracking branch 'origin/pr/182'

commit 23133cacc841e3e5b226de8b4ab39ad2eab68317
Merge: c51c85d3 b361b8a6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 30 19:25:21 2014 -0500

    Merge remote-tracking branch 'origin/pr/180'

commit 3c7d6fcaff330ff0f18e776da84ed836bf580d45
Author: vjpai <vpai@google.com>
Date:   Mon Sep 22 12:19:37 2014 -0700

    Fix race caused by event_active
    
    There is a race between manual event_active and natural event activation. If both happen at the same time on the same FD, they would both be protected by the same event base lock except for 1 LoC where the fields of struct event are read without any kind of lock. This commit does those reads into local variables inside the lock and then invokes the callback with those local arguments outside the lock. In 2.0-stable, none of this is inside the lock; in HEAD, only the callback is read inside the lock. This gets the callback and all 3 arguments inside the lock before calling it outside the lock.

commit c51c85d397c3838cdc81c7dd6a232f3551338ed8
Merge: a5d43cf4 bc79cc5c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 30 11:11:33 2014 -0500

    Merge remote-tracking branch 'origin/pr/175'

commit a5d43cf4c6a6d4c1fbb7ed244eac9124317d273d
Merge: 4f360f89 154006ad
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 30 11:09:50 2014 -0500

    Merge branch 'evbufer_peek_fix_v3'

commit 154006ad36aa8ec2ebb50a366348b3b35c2c06b4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 30 11:09:28 2014 -0500

    More evbuffer_peek() test cases

commit e2d139dd7e753d83f107e485404022beafb9e95d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Nov 11 14:25:47 2014 +0300

    test/evbuffer_peek: add regress in case we have first buffer greater

commit ba59923ab8cade9f2b306b4ae35c2f752786a8d3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 30 11:05:40 2014 -0500

    Fix evbuffer_peek() with len==-1 and start_at non-NULL.

commit 4f360f89ca1e089732853463fd0bc07d95142704
Merge: befbd130 61262a0f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 30 10:23:39 2014 -0500

    Merge remote-tracking branch 'origin/pr/186'

commit befbd130719eac4b26989ac9869512bedaf61adb
Author: Acer Yang <acer.yang@prophetstor.com>
Date:   Sat Sep 20 15:25:53 2014 +0800

    Fix cmake error when the Module path has more than one entry.
    
    CMAKE_MODULE_PATH is usually a list instead of single entry. Especially
    for projects contain sub cmake projects. My patch replace the
    CMAKE_MODULE_PATH with fixed path, to locate the `.in` file.

commit 24eea0da979726c041e9d717d6839f1c60026c46
Author: John Ohl <john@collabriasoftware.com>
Date:   Mon Nov 24 02:32:23 2014 -0500

    evhttp: Fix failure to send all output data for POST/PUT requests

commit 5ebad45e2d60e48ba9c2b1127bd0dd06031f955a
Merge: 6dba1694 f133b869
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Mon Nov 24 01:09:13 2014 -0500

    Merge pull request #189 from azat/be_async-avoid-doule-close
    
    be async: avoid double close()

commit f133b8693e072b4c05a9773a5f88928c47c04e50
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Nov 21 09:00:12 2014 +0300

    be async: avoid double close()
    
    In case when between this two close (close(F), close(F)) some open()
    will be executed, than we will close newly opened fd.
    
    Reported-by: xujiezhige@163.com

commit 10fe4ef300df9475ec37e817aa5777044f7d03b4
Author: John Ohl <john@collabriasoftware.com>
Date:   Sun Nov 16 23:40:16 2014 -0500

    Prevent duplicate event_del on fd

commit 61262a0f08097718e566c0aa7e2878b1d868f3ed
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Nov 12 20:16:18 2014 +0300

    evdns: avoid read-after-free in evdns_request_timeout_callback()
    
    In evdns_request_timeout_callback() in case we a giving up, we call
    request_finished() which will free() req structure, however we ns from
    it to fail it, so save pointer to ns to call nameserver_failed() on
    them.
    
    Founded with valgrind:
    $ valgrind regress dns/retry
    ==10497== Memcheck, a memory error detector
    ==10497== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
    ==10497== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
    ==10497== Command: regress dns/retry
    ==10497==
    dns/retry: [forking] ==10498== Invalid read of size 8
    ==10498==    at 0x4C309D: evdns_request_timeout_callback (evdns.c:2179)
    ==10498==    by 0x49EA95: event_process_active_single_queue (event.c:1576)
    ==10498==    by 0x49EFDD: event_process_active (event.c:1668)
    ==10498==    by 0x49F6DD: event_base_loop (event.c:1891)
    ==10498==    by 0x49F063: event_base_dispatch (event.c:1702)
    ==10498==    by 0x44C7F1: dns_retry_test_impl (regress_dns.c:724)
    ==10498==    by 0x44CF60: dns_retry_test (regress_dns.c:749)
    ==10498==    by 0x48A8A1: testcase_run_bare_ (tinytest.c:105)
    ==10498==    by 0x48A94E: testcase_run_forked_ (tinytest.c:189)
    ==10498==    by 0x48AB73: testcase_run_one (tinytest.c:247)
    ==10498==    by 0x48B4C2: tinytest_main (tinytest.c:434)
    ==10498==    by 0x477FC7: main (regress_main.c:459)
    ==10498==  Address 0x6176ef8 is 40 bytes inside a block of size 342 free'd
    ==10498==    at 0x4C29E90: free (vg_replace_malloc.c:473)
    ==10498==    by 0x4A4411: event_mm_free_ (event.c:3443)
    ==10498==    by 0x4BE8C5: request_finished (evdns.c:702)
    ==10498==    by 0x4C3098: evdns_request_timeout_callback (evdns.c:2178)
    ==10498==    by 0x49EA95: event_process_active_single_queue (event.c:1576)
    ==10498==    by 0x49EFDD: event_process_active (event.c:1668)
    ==10498==    by 0x49F6DD: event_base_loop (event.c:1891)
    ==10498==    by 0x49F063: event_base_dispatch (event.c:1702)
    ==10498==    by 0x44C7F1: dns_retry_test_impl (regress_dns.c:724)
    ==10498==    by 0x44CF60: dns_retry_test (regress_dns.c:749)
    ==10498==    by 0x48A8A1: testcase_run_bare_ (tinytest.c:105)
    ==10498==    by 0x48A94E: testcase_run_forked_ (tinytest.c:189)
    ==10498==
    ==10498==
    ==10498== HEAP SUMMARY:
    ==10498==     in use at exit: 0 bytes in 0 blocks
    ==10498==   total heap usage: 83 allocs, 83 frees, 10,020 bytes allocated
    ==10498==
    ==10498== All heap blocks were freed -- no leaks are possible
    ==10498==
    ==10498== For counts of detected and suppressed errors, rerun with: -v
    ==10498== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
    OK
    1 tests ok.  (0 skipped)
    ==10497==
    ==10497== HEAP SUMMARY:
    ==10497==     in use at exit: 0 bytes in 0 blocks
    ==10497==   total heap usage: 3 allocs, 3 frees, 96 bytes allocated
    ==10497==
    ==10497== All heap blocks were freed -- no leaks are possible
    ==10497==
    ==10497== For counts of detected and suppressed errors, rerun with: -v
    ==10497== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
    
    Bug was introduced in 97c750d6602517f22a1100f16592b421c38f2a45 ("evdns:
    fail ns after we are failing/retrasmitting request").

commit df19a970e1f49e362dabd4f848b778d6bc2b7518
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 8 15:51:49 2014 +0300

    dns-example: allow to set ns from args
    
    We can't do this using resolv.conf:
    $ dns-example -v -c <(echo nameserver 127.0.0.1:10053) ya.ru
    Because of how evutil_read_file_() works (using fstat())
    
    And actually glibc for example will not use port from nameserver line, and
    because of inet_aton() it will fail if nameserver will have arbitary port:
    (gdb) p inet_aton("127.0.0.1", malloc(10000))
    $1 = 1
    (gdb) p inet_aton("127.0.0.1:53", malloc(10000))
    $2 = 0
    
    From glibc/resolv/res_init.c:
      if (MATCH(buf, "nameserver") && nserv < MAXNS) {
          struct in_addr a;
          cp = buf + sizeof("nameserver") - 1;
          while (*cp == ' ' || *cp == '\t')
              cp++;
          if ((*cp != '\0') && (*cp != '\n')
              && __inet_aton(cp, &a)) {
              statp->nsaddr_list[nservall].sin_addr = a;
              statp->nsaddr_list[nservall].sin_family = AF_INET;
              statp->nsaddr_list[nservall].sin_port =
                      htons(NAMESERVER_PORT);

commit 32f8592c8b18da0d499cb8c03e427369cd5b3ba7
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Nov 8 15:41:33 2014 +0300

    dns-example: convert to getopt()

commit b0e99244ce39ae0840a782ec66461837db7fc888
Author: John Ohl <john@collabriasoftware.com>
Date:   Wed Oct 29 03:40:44 2014 -0400

    Add test for evhttp_connection_free_on_completion

commit 2b9ec4c13c3483c22fdca8e9fccdc017b6135298
Author: John Ohl <john@collabriasoftware.com>
Date:   Sun Oct 26 01:18:10 2014 -0400

    Implement interface that provides the ability to have an outbound evhttp_connection free itself once all requests have completed

commit b361b8a65666bebe5302604f45f9cb95c62fb9fa
Author: Jean-Philippe Ouellet <jpo@vt.edu>
Date:   Thu Oct 16 22:56:49 2014 -0400

    remove trailing comma from enum
    
    makes being included from something with -std=c89 happy

commit 6dba1694c89119c44cef03528945e5a5978ab43a
Merge: c750c704 b625361a
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Mon Oct 13 17:59:32 2014 -0400

    Merge pull request #179 from pysiak/master
    
    Provide support for SO_REUSEPORT through LEV_OPT_REUSABLE_PORT

commit b625361a6a2b2bc4ba1c71a1d6dc89f5e2b4d9e0
Author: Maciej Soltysiak <maciej@soltysiak.com>
Date:   Mon Oct 13 17:28:14 2014 +0200

    Provide support for SO_REUSEPORT through LEV_OPT_REUSABLE_PORT

commit c750c704c10c9e412fa5501fce051fa45d46ec84
Merge: e69f3908 97c750d6
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Oct 9 11:48:38 2014 -0400

    Merge pull request #174 from azat/dns-fail-disable-when-inactive-fix-v3
    
    Dns fail disable when inactive fix v3

commit e69f390859a59dc0039145f92e65a964dae8119d
Merge: 2e2d18bc 3da84c29
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Oct 9 11:30:01 2014 -0400

    Merge pull request #171 from azat/bufferevent-openssl-fixes-v4
    
    bufferevent_openssl: reset fd_is_set when setfd with -1 is called

commit 2e2d18bcd381070b9f77fa3f12f70c9e18306d63
Merge: 163df09b d9da8443
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Oct 9 11:29:17 2014 -0400

    Merge pull request #170 from azat/https-client-retries
    
    https-client: add -retries argument, for connection retries

commit 163df09b2c1598c206fe804ef24b303fbb1a8f3e
Merge: 0fb71c35 5c7282f7
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Oct 9 10:42:20 2014 -0400

    Merge pull request #108 from JoakimSoderberg/minor_issues
    
    Fix compilation for older OpenSSL versions.

commit 0fb71c35dc5763afc32f9ef5641cd2f50745f066
Merge: 07b5e45b be1aeff2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 9 10:14:30 2014 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit be1aeff21a7824d5113b36ebdba6d0d46477fd28
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 9 10:14:12 2014 -0400

    Fix a typo in a doxygen comment. Reported by 亦得.

commit bc79cc5c80ee374dec0e968bc6fdf301d479e133
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat Sep 27 21:29:45 2014 +0400

    http: reset connection before installing retry timer (fix http retries handling)
    
    This will fix some invalid read/write:
    ==556== Invalid read of size 8
    ==556==    at 0x4E4EEC6: event_queue_remove_timeout (minheap-internal.h:178)
    ==556==    by 0x4E508AA: event_del_nolock_ (event.c:2764)
    ==556==    by 0x4E53535: event_base_loop (event.c:3088)
    ==556==    by 0x406FCFA: dispatch (libcrawl.c:271)
    ==556==    by 0x402863: main (crawler.c:49)
    ==556==  Address 0x68a3f18 is 152 bytes inside a block of size 400 free'd
    ==556==    at 0x4C29C97: free (in /usr/local/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
    ==556==    by 0x406F140: renew (libcrawl.c:625)
    ==556==    by 0x4E6CDE9: evhttp_connection_cb_cleanup (http.c:1331)
    ==556==    by 0x4E6E2B2: evhttp_connection_cb (http.c:1424)
    ==556==    by 0x4E4DF2D: bufferevent_writecb (bufferevent_sock.c:310)
    ==556==    by 0x4E52D1D: event_process_active_single_queue (event.c:1584)
    ==556==    by 0x4E53676: event_base_loop (event.c:1676)
    ==556==    by 0x406FCFA: dispatch (libcrawl.c:271)
    ==556==    by 0x402863: main (crawler.c:49)
    But this one because of some invalid write before (I guess).
    
    It is 100% reproduced during massive crawling (because this process
    has many different servers), but after spending some time for trying to
    reproduce this using some simple tests/utils I gave up for a few days (I
    have a lot of work to do), but I'm sending this patch as a reminder.
    
    Just in case, I've tried next tests:
    - mixing timeouts/retries
    - shutdown http server and return it back
    - slow dns server for first request
    - sleep before accept
    - hacking libevent sources to change the behaviour of http layer (so it
      will go into that function which I'm insterested in).

commit 97c750d6602517f22a1100f16592b421c38f2a45
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Sep 30 01:34:04 2014 +0400

    evdns: fail ns after we are failing/retrasmitting request
    
    In case we are failing request (evdns_request_timeout_callback()), we
    delete timeout_event in request_finished(), while just before calling
    request_finished() (for failing request) there was a call to
    nameserver_failed(), that add event for timeout_event, IOW we must fail
    ns after request because otherwise we will not have timeout_event
    actived, and we will waiting forever.
    
    Before this patch the dns/retry_disable_when_inactive will wait forever,
    after - OK.

commit 3ca9d43d3233c6946de9fa31932586b905cb8d16
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Apr 10 19:33:45 2014 +0400

    evdns: add retry/reissue tests for EVDNS_BASE_DISABLE_WHEN_INACTIVE

commit 74d0eee89bf2bc42f9ae2def9de4b8e09436420b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Apr 10 19:30:47 2014 +0400

    evdns: fix EVDNS_BASE_DISABLE_WHEN_INACTIVE in case retransmit/retry

commit 5c7282f7a5b2f0cd10a7891d61cec07ab2fa2a8e
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Wed Sep 24 13:46:09 2014 +0200

    Fix compilation for older OpenSSL versions.
    
    For instance OpenSSL 0.9.7 does not have SSL_set_tlsext_host_name.
    
    Also add the missing EVENT__DISABLE_SAMPLES CMake option.

commit 3da84c2949cc693bb6e6a65a3b1de48af1be0483
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 21 18:29:17 2014 +0400

    bufferevent_openssl: reset fd_is_set when setfd with -1 is called
    
    Otherwise we will use old fd after close(2) called on it:
    (Traces trimmed, to minimize it)
    $ strace -keclose,open,socket,epoll_ctl https-client -url https://libevent.org
    socket(PF_INET, SOCK_STREAM|SOCK_NONBLOCK, IPPROTO_IP) = 5
     > /lib/x86_64-linux-gnu/libc-2.19.so(socket+0x7) [0xe6da7]
     > /usr/lib/libevent-2.1.so.4.0.0(evutil_socket_+0x25) [0x27835]
     > /usr/lib/libevent-2.1.so.4.0.0(bufferevent_socket_connect+0xe9) [0x1b1a9]
     > /usr/lib/libevent-2.1.so.4.0.0(bufferevent_socket_connect+0x21f) [0x1b2df]
     > /usr/lib/libevent-2.1.so.4.0.0(evutil_getaddrinfo_async_+0x65) [0x271a5]
     > /usr/lib/libevent-2.1.so.4.0.0(bufferevent_socket_connect_hostname+0x106) [0x1b416]
     > /usr/lib/libevent-2.1.so.4.0.0(evhttp_connection_connect_+0xe7) [0x39f07]
     > /usr/lib/libevent-2.1.so.4.0.0(evhttp_make_request+0xb8) [0x3a218]
    epoll_ctl(3, EPOLL_CTL_ADD, 5, {EPOLLIN, {u32=5, u64=5}}) = 0
     > ...
     > /usr/lib/libevent_openssl-2.1.so.4.0.0(_init+0xfdd) [0x2ced]
     > /usr/lib/libevent-2.1.so.4.0.0(bufferevent_setfd+0x3b) [0x16d9b]
     > /usr/lib/libevent-2.1.so.4.0.0(bufferevent_socket_connect+0x75) [0x1b135]
     > /usr/lib/libevent-2.1.so.4.0.0(bufferevent_socket_connect+0x21f) [0x1b2df]
     > /usr/lib/libevent-2.1.so.4.0.0(evutil_getaddrinfo_async_+0x65) [0x271a5]
     > /usr/lib/libevent-2.1.so.4.0.0(bufferevent_socket_connect_hostname+0x106) [0x1b416]
     > /usr/lib/libevent-2.1.so.4.0.0(evhttp_connection_connect_+0xe7) [0x39f07]
     > /usr/lib/libevent-2.1.so.4.0.0(evhttp_make_request+0xb8) [0x3a218]
    epoll_ctl(3, EPOLL_CTL_MOD, 5, {EPOLLIN|EPOLLOUT, {u32=5, u64=5}}) = 0
     > ...
     > /usr/lib/libevent_openssl-2.1.so.4.0.0(_init+0xfee) [0x2cfe]
     > /usr/lib/libevent-2.1.so.4.0.0(bufferevent_setfd+0x3b) [0x16d9b]
     > /usr/lib/libevent-2.1.so.4.0.0(bufferevent_socket_connect+0x75) [0x1b135]
     > /usr/lib/libevent-2.1.so.4.0.0(bufferevent_socket_connect+0x21f) [0x1b2df]
     > /usr/lib/libevent-2.1.so.4.0.0(evutil_getaddrinfo_async_+0x65) [0x271a5]
     > /usr/lib/libevent-2.1.so.4.0.0(bufferevent_socket_connect_hostname+0x106) [0x1b416]
     > /usr/lib/libevent-2.1.so.4.0.0(evhttp_connection_connect_+0xe7) [0x39f07]
     > /usr/lib/libevent-2.1.so.4.0.0(evhttp_make_request+0xb8) [0x3a218]
    epoll_ctl(3, EPOLL_CTL_MOD, 5, {EPOLLOUT, {u32=5, u64=5}}) = 0
     > ...
     > /usr/lib/libevent_openssl-2.1.so.4.0.0(_init+0xbbc) [0x28cc]
     > /usr/lib/libevent_openssl-2.1.so.4.0.0(_init+0xd96) [0x2aa6]
     > /usr/lib/libevent_openssl-2.1.so.4.0.0(_init+0xeb8) [0x2bc8]
     > /usr/lib/libevent-2.1.so.4.0.0(event_free+0x3fe) [0x1fd1e]
     > /usr/lib/libevent-2.1.so.4.0.0(event_base_loop+0x407) [0x20677]
    epoll_ctl(3, EPOLL_CTL_DEL, 5, 7fffa1f841e0) = 0
     > ...
     > /usr/lib/libevent_openssl-2.1.so.4.0.0(_init+0xbc4) [0x28d4]
     > /usr/lib/libevent_openssl-2.1.so.4.0.0(_init+0xd96) [0x2aa6]
     > /usr/lib/libevent_openssl-2.1.so.4.0.0(_init+0xeb8) [0x2bc8]
     > /usr/lib/libevent-2.1.so.4.0.0(event_free+0x3fe) [0x1fd1e]
     > /usr/lib/libevent-2.1.so.4.0.0(event_base_loop+0x407) [0x20677]
    close(5)                                = 0
     > /lib/x86_64-linux-gnu/libpthread-2.19.so(__close_nocancel+0x7) [0xeb20]
     > /usr/lib/libevent-2.1.so.4.0.0(evhttp_connection_reset_+0x55) [0x373f5]
     > /usr/lib/libevent-2.1.so.4.0.0(evhttp_connection_connect_+0x1d) [0x39e3d]
     > /usr/lib/libevent-2.1.so.4.0.0(event_free+0x3fe) [0x1fd1e]
     > /usr/lib/libevent-2.1.so.4.0.0(event_base_loop+0x407) [0x20677]
    epoll_ctl(3, EPOLL_CTL_ADD, 5, {EPOLLIN, {u32=5, u64=5}}) = -1 EBADF (Bad file descriptor)
    ) = -1 EBADF (Bad file descriptor)
    /src/oss/strace-code/strace: Can't initiate libunwind: No such process
     > ...
     > /usr/lib/libevent_openssl-2.1.so.4.0.0(_init+0xfdd) [0x2ced]
     > /usr/lib/libevent-2.1.so.4.0.0(bufferevent_setfd+0x3b) [0x16d9b]
     > /usr/lib/libevent-2.1.so.4.0.0(evhttp_connection_connect_+0x14c) [0x39f6c]
     > /usr/lib/libevent-2.1.so.4.0.0(event_free+0x3fe) [0x1fd1e]
     > /usr/lib/libevent-2.1.so.4.0.0(event_base_loop+0x407) [0x20677]
    /src/oss/strace-code/strace: Exit of unknown pid 28185 seen
    [warn] Epoll ADD(1) on fd 5 failed.  Old events were 0; read change was 1 (add); write change was 0 (none); close change was 0 (none): Bad file descriptor
    epoll_ctl(3, EPOLL_CTL_ADD, 5, {EPOLLOUT, {u32=5, u64=5}}) = -1 EBADF (Bad file descriptor)
    ) = -1 EBADF (Bad file descriptor)
    /src/oss/strace-code/strace: Can't initiate libunwind: No such process
     > ...
     > /usr/lib/libevent_openssl-2.1.so.4.0.0(_init+0xfee) [0x2cfe]
     > /usr/lib/libevent-2.1.so.4.0.0(bufferevent_setfd+0x3b) [0x16d9b]
     > /usr/lib/libevent-2.1.so.4.0.0(evhttp_connection_connect_+0x14c) [0x39f6c]
     > /usr/lib/libevent-2.1.so.4.0.0(event_free+0x3fe) [0x1fd1e]
     > /usr/lib/libevent-2.1.so.4.0.0(event_base_loop+0x407) [0x20677]
    /src/oss/strace-code/strace: Exit of unknown pid 28186 seen
    [warn] Epoll ADD(4) on fd 5 failed.  Old events were 0; read change was 0 (none); write change was 1 (add); close change was 0 (none): Bad file descriptor
    <getaddrinfo traces trimmed>
    close(5)                                = -1 EBADF (Bad file descriptor)
    )                                = -1 EBADF (Bad file descriptor)
    /src/oss/strace-code/strace: Can't initiate libunwind: No such process
     > /lib/x86_64-linux-gnu/libpthread-2.19.so(__close_nocancel+0x7) [0xeb20]
     > /usr/lib/libevent-2.1.so.4.0.0(evhttp_connection_reset_+0x55) [0x373f5]
     > /usr/lib/libevent-2.1.so.4.0.0(evhttp_connection_fail_+0xc1) [0x3aed1]
     > /usr/lib/libevent-2.1.so.4.0.0(evhttp_connection_fail_+0x4a3) [0x3b2b3]
     > /usr/lib/libevent-2.1.so.4.0.0(bufferevent_enable+0x192) [0x16722]
     > /usr/lib/libevent-2.1.so.4.0.0(event_free+0x5df) [0x1feff]
     > /usr/lib/libevent-2.1.so.4.0.0(event_base_loop+0x407) [0x20677]
    /src/oss/strace-code/strace: Exit of unknown pid 28187 seen
    some request failed - no idea which one though!
    socket error = Bad file descriptor (9)
    
    Before this patch:
    $ sample/https-client -retries 1 -url https://libevent.org
    [warn] Epoll ADD(1) on fd 6 failed.  Old events were 0; read change was 1 (add); write change was 0 (none); close change was 0 (none): Bad file descriptor
    [warn] Epoll ADD(4) on fd 6 failed.  Old events were 0; read change was 0 (none); write change was 1 (add); close change was 0 (none): Bad file descriptor
    some request failed - no idea which one though!
    socket error = Bad file descriptor (9)
    
    After this patch:
    $ sample/https-client -retries 1 -url https://libevent.org
    Response line: 0 (null)
    
    Reported-by: gerkenjohannes@web.de

commit d9da844369817a58d3f9eb10efc0be07f0a046b8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Sep 21 18:36:29 2014 +0400

    https-client: add -retries argument, for connection retries
    
    Using evhttp_connection_set_retries() API.

commit 07b5e45ba53182bf61a3eee6cef57d48ef776111
Merge: 89c1a3b7 b34e4ac3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 18 15:08:57 2014 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit b34e4ac3a4261421285b4b3c98c749e07c14227e
Author: ufo2243 <ufo2243@gmail.com>
Date:   Fri Sep 12 14:19:14 2014 +0800

    [Bugfix] fix bufferevent setwatermark suspend_read

commit 89c1a3b7fe91a5132f854be9f672b0daa368cf7d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 18 12:40:38 2014 -0400

    Fix several memory leaks in the unit tests.
    
    Also add a comment to buffer.c about why we call
    evbuffer_file_segment_free on failure to add the segment.

commit 364c110687a7fc3e1fa0c6c197c1d0d937ba9131
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 18 12:12:36 2014 -0400

    Fix for a677b72bd6d9d378daf9775966aa8ca574e26e67

commit fb57b8badce60ecaf07bd1b562fa660dd1372e7d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 18 12:08:50 2014 -0400

    Make a buffer larger in the tests to avoid a scary evbuffer_copyout_from()
    
    The call was safe, but coverity couldn't tell. CID 1239294.

commit ca5b5c7d86ed31a2d7675545f3d1c520f68583d3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 18 12:04:16 2014 -0400

    Use a more precise calculation for max in time-ratelim.c
    
    CID 1239297

commit a677b72bd6d9d378daf9775966aa8ca574e26e67
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 18 12:02:13 2014 -0400

    Use evutil_weakrand() in unit tests.
    
    (Coverity doesn't like random() or rand().  We don't care; this is
    for unit tests.)
    
    Fixes CID 1239298, 1239296, 1239295, 1239293.

commit 76643dd0e75c881f0503d060882fadc9d70d5355
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 18 11:54:39 2014 -0400

    Fix a c90 warning

commit c119f2416c52ab614378ea923a12b2a45d7084ee
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 18 11:54:04 2014 -0400

    Fix a dead-code warning in unit tests. CID 1193548

commit 37390574b08929b91d42743136a61f21eaf759e6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 18 11:52:16 2014 -0400

    Fix a use-after-free in unit tests. CID 752027

commit c243dbf4c8fa3715594b70386557d01de796e818
Merge: c8c7fa3a a21e5108
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Sep 18 11:44:11 2014 -0400

    Merge pull request #168 from ufo2243/master
    
    make bufferevent_getwatermark api more robust

commit c8c7fa3a163bf968a5057349cb5e8aeee7604cd0
Merge: 3cc0eace d0dc861b
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Sep 18 11:41:18 2014 -0400

    Merge pull request #119 from ldx/winhosts
    
    Fix hosts file use on Windows.

commit 3cc0eace2e3fb72310af7d7f8c0f8ffac6cb1635
Author: John Ohl <john@collabriasoftware.com>
Date:   Tue Sep 16 22:25:52 2014 -0400

    Fix use-after-free error in EV_CLOSURE_EVENT callback

commit 35f107de922ef64b2b1809af9b6ebe5db1abbb33
Merge: 73615a37 79800df7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 18 11:36:08 2014 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 79800df7c7acedcf774f737b5a20a14d6850485e
Author: Maks Naumov <maksqwe1@ukr.net>
Date:   Tue Mar 25 13:35:13 2014 +0200

    regress_buffer: fix 'memcmp' compare size

commit 73615a3723f5a9b82339a53e9a3e6b5539d97f09
Merge: 08c88ea5 3fbf3cc9
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Sep 18 11:31:52 2014 -0400

    Merge pull request #118 from azat/http-forward-family-to-bufferevent
    
    Add evhttp_connection_set_family() to set addrinfo->family for DNS requests

commit 08c88ea563ccf2e85cff93a820c6b1d3db1b1f36
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 18 11:28:19 2014 -0400

    use correct tt macro for pointer compare

commit afce2721c2f695bab7b211a64a47279f9d31297b
Merge: a7d5dabf 5ca9e97e
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Sep 18 11:25:27 2014 -0400

    Merge pull request #128 from azat/tests-disable-when-inactive-v5
    
    Some tests for EVDNS_BASE_DISABLE_WHEN_INACTIVE flag

commit a7d5dabf967d0041aa0a6004b50e12fe2138c26e
Merge: 56ad6237 d83b3371
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Sep 18 11:24:56 2014 -0400

    Merge pull request #129 from azat/disable-probing-with-disable-when-inactive-v2
    
    evdns: disable probing with EVDNS_BASE_DISABLE_WHEN_INACTIVE

commit a21e5108c2e689ae2ea8176d84f9978719e8ec36
Author: ufo2243 <ufo2243@gmail.com>
Date:   Fri Sep 12 11:51:59 2014 +0800

    make bufferevent_getwatermark api more robust

commit 56ad62373797947e58ef5e0368b94abe4a3683f4
Merge: 80347e6c 27bd9faf
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Mon Sep 8 15:37:31 2014 -0400

    Merge pull request #167 from snikulov/pr_libevent_cmake_upd
    
    updates in cmake build

commit 80347e6c934fa10196be4cfa9cd46785d68e913a
Merge: 6a53d153 3a4d249c
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Wed Sep 3 09:29:59 2014 -0400

    Merge pull request #103 from ufo2243/master
    
    [Bugfix] fix grammer error

commit 3a4d249c9d01de0124c8426c636b509896e27a8c
Author: ufo2243 <ufo2243@gmail.com>
Date:   Wed Sep 3 10:55:27 2014 +0800

    [Bugfix] fix grammer error

commit 27bd9faf498b91923296cc91643e03ec4055c230
Author: Sergey Nikulov <sergey.nikulov@gmail.com>
Date:   Tue Sep 2 18:25:52 2014 +0400

    updates in cmake build

commit 6a53d153835b0379b23ddcc1cca408b5bd1b93d6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 29 15:26:56 2014 -0400

    Correctly handle allocation failures in evdns_getaddrinfo
    
    Kuldeep Gupta appears to have used some kind of automated tool to
    find this and generate a patch for half the issue as #149.

commit 9d6acdc551ea90afc79f0e2dbb81a350cc7944ee
Merge: 9f3a8acf 60f8f729
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 29 15:00:33 2014 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 60f8f729d364304abefa25d029260555a5954077
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 29 14:59:17 2014 -0400

    Consistently check for failure from evbuffer_pullup()
    
    Closes issue #148.

commit 9f3a8acfa8a0c2aaa31a85f75d3a81ff99563a87
Merge: 8bf769c4 b897beff
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Fri Aug 29 14:38:09 2014 -0400

    Merge pull request #153 from azat/tests-simplestsignal
    
    test/regress: add simplestsignal: to track reorder bugs separately

commit 8bf769c47af11b484295c9e7189f756aa106c64e
Merge: f691389e 6466e88a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 29 14:32:10 2014 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            sample/http-server.c

commit 6466e88ac1dac48eaa9435ce9a45d6496eed7abb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 29 14:31:07 2014 -0400

    Use FindClose for handle from FindFirstFile in http-server.c
    
    Noted by Miles Chan as issue #145

commit f691389e82699033a3973d1b2c298b0c820b3b64
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 29 14:28:09 2014 -0400

    Change return type of evutil_load_windows_system_library_ to HMODULE
    
    Noted by Miles Chan as issue #146

commit 2c82aa0fefd3b4097abd03a1c017a96035ab539f
Author: John Ohl <john@collabriasoftware.com>
Date:   Wed Apr 30 13:55:49 2014 -0400

    Fix issue #127, double free for filterevents that use BEV_OPT_CLOSE_ON_FREE

commit 571295bdf89bc9d73e1b0720140d9615fa0a304c
Merge: 6ec94926 1a8295a3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 18 10:14:29 2014 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 1a8295a31671b4440b170e7fa7d3241c5563311e
Author: Pierre Phaneuf <pphaneuf@google.com>
Date:   Wed Aug 13 23:17:52 2014 +0100

    Add a few files created by "make verify" to .gitignore.

commit b897beff6aadf67f034cef2865629d94ca87ce4c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Feb 23 02:31:51 2014 +0400

    test/regress: add simplestsignal: to track reorder bugs separately

commit 6ec949265a11cb31432ced22407fb1bd803c9317
Merge: c6becf2b c83f3333
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Sat Jun 14 23:44:47 2014 -0400

    Merge pull request #140 from vapier/ignore
    
    ignore config.cache/test-driver files

commit c6becf2b2c71a9cb4bf10bdafee889d548be0276
Merge: 6fd73944 0c492b33
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Sat Jun 14 23:44:18 2014 -0400

    Merge pull request #143 from vapier/disable-sample
    
    add a --disable-samples configure flag

commit 0c492b33f97aba0c329603be30f86dd3116a1d65
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Fri Jun 13 17:07:50 2014 -0400

    add a --disable-samples configure flag
    
    For people building & installing libevent in a distro, building all these
    sample apps are not useful.  Add a flag to turn them off.

commit c83f3333a34251275c38878e9667c904a485ac6d
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Fri Jun 13 14:18:13 2014 -0400

    ignore config.cache/test-driver files
    
    config.cache is generated when you run `./configure -C`.
    
    test-driver comes from newer autotools.

commit 6fd73944c2ad1a8f7902a84c1936b660f12a5a52
Author: Adrian Chadd <adrian@freebsd.org>
Date:   Sat Jun 7 12:57:02 2014 -0700

    Handle ENOTCAPABLE from FreeBSD - this is returned if an event in the
    changelist is for an FD that has been closed.

commit 6d72bdca01d3eb7a740e0a50a7e2e9fc1a9d0ae4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 30 13:53:27 2014 -0400

    Make http-server.c output into good html5

commit 8da5a1864c4a8de43d11ed8bc4a20dfd1124d8e8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 8 13:21:49 2014 -0400

    Update to a more recent tinytest_macros.
    
    This one has less of a tendency to suppress important type warnings.

commit 28db827efa7a8abceeb7737a8b34ea8fdd727906
Merge: a4154192 b6593aab
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Mon Apr 14 10:00:51 2014 -0400

    Merge pull request #132 from credil/master
    
    ignore one more test binary

commit b6593aab6b3afa09465a547aef8f32399a672ea7
Author: Michael Richardson <mcr@finepoint.com>
Date:   Sun Apr 13 13:07:16 2014 -0400

    ignore one more test binary

commit 5ca9e97ed0c6e1e63e15de7b6792bd777b7ab02f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Apr 11 18:50:10 2014 +0400

    regress dns: drop alarm() (since windows don't have it)

commit d83b3371e9f8fa107c7e802eb5e1b20cc3c1ce38
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Apr 10 19:45:31 2014 +0400

    evdns: we don't need to add retry timer in transmit_to it will be done on fail

commit fea86a64c5836ea0cdf00ed2d5ff451a5549aa98
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Apr 10 01:11:42 2014 +0400

    evdns: add regress test for flag EVDNS_BASE_DISABLE_WHEN_INACTIVE without ns

commit ad0493eebf9cee1f7557911773efcc72da9189b4
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Apr 9 17:48:12 2014 +0400

    evdns: add regress for EVDNS_BASE_DISABLE_WHEN_INACTIVE base flag

commit 610410b5864ba952fdadbb6575478b9dcc4c79ac
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 21 17:04:58 2014 +0400

    evdns: disable probing with EVDNS_BASE_DISABLE_WHEN_INACTIVE
    
    When user install EVDNS_BASE_DISABLE_WHEN_INACTIVE flag for evdns base,
    we must remove the timer that is used for probing, if current dns server
    failed, otherwise it won't break the loop.

commit a4154192b8012b0decf544c1e280dee59b72ea3d
Merge: b163fdaa 61931871
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Mon Mar 31 11:50:30 2014 -0400

    Merge pull request #125 from azat/tree.h-drop-copy
    
    tree.h: drop duplicated content of tree.h

commit 61931871a5b4be2c7fdf9a7fbcbd7f88c0755246
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 28 20:44:09 2014 +0400

    tree.h: drop duplicated content of tree.h
    
    Introduced in 9859bc783adcd51729b3d7563902ac8caca67b42
    ("r15764@tombo:  nickm | 2007-12-31 15:46:16 -0500")

commit 3fbf3cc9088a0c7c9d36ef84b3b465f23f52a0e0
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 27 00:49:00 2014 +0400

    test/http: add regress test for set family to AF_INET6

commit 42aefeb0afd91337e079b045c1e5a598f137c3c5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 27 00:40:14 2014 +0400

    test: add regress for evhttp_connection_set_family() with AF_INET and AF_UNSPEC

commit 177b8a7ce8b99253f9bbe27bdda177462296ee6b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 27 00:44:51 2014 +0400

    test: add family argument for http_connection_test_()

commit b163fdaad11bd1a4efec09a33329529e111ba4fa
Merge: 6066f985 e8fe749d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 26 11:10:16 2014 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit e8fe749dba6be5094f4e9c7a236b54a7b33f9eeb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 21 14:08:17 2014 -0400

    Fix a crash in evdns related to shutting down evdns
    
    (Improved version to deal correctly with probe requests)
    
    Patch from YASUOKA Masahiko; fix for libevent github issue #113.

commit 6066f985ccc1bb08015e713d9e5867e636ea083f
Merge: 8163b1a1 2fdc5f29
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Wed Mar 26 11:02:52 2014 -0400

    Merge pull request #121 from azat/dns-regress-leaks
    
    regress_dns: fix leaks in getaddrinfo_async{,_cancel_stress} tests

commit 8163b1a13b839f2a187a78cb53b95f9d7cc49c9d
Merge: 86665a58 15d90cce
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Wed Mar 26 10:51:17 2014 -0400

    Merge pull request #122 from trondn/missing-file
    
    Add missing headerfile for cmake

commit 15d90cce39349310dfc4e58e74740d843e7452d1
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Mon Mar 24 15:01:02 2014 +0100

    Add missing headerfile for cmake

commit 2fdc5f299fceab70cf61a8a9eb2e83390444d6b1
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Mar 23 15:12:29 2014 +0400

    regress_dns: fix leaks in getaddrinfo_async{,_cancel_stress} tests

commit 86665a582dc2e779130a119407504192663c9c26
Merge: de268feb 9f39c887
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 21 14:09:54 2014 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 9f39c8875683d12f64cfe2c9d32d9c15982a1f33
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 21 14:08:17 2014 -0400

    Fix a crash in evdns related to shutting down evdns
    
    Patch from YASUOKA Masahiko; fix for libevent github issue #113.

commit de268feb671d252e23a6db5bc8dd37bf7a45ad0e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 21 13:20:34 2014 -0400

    Increment version to 2.1.4-alpha-dev

commit 50093afc3bd783d8c49e4a2246021531aeb7e277
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 21 12:33:13 2014 -0400

    Update release date in changelog

commit f5c0d6c37880393603e6541c12ab5da7e001a410
Merge: 6a1c4d50 73474042
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Fri Mar 21 11:45:31 2014 -0400

    Merge pull request #116 from trondn/cmake-build-fixes
    
    Cmake build fixes

commit d0dc861b881e129ab9afb26cfe5df99187eeb53d
Author: Vilmos Nebehaj <v.nebehaj@gmail.com>
Date:   Fri Mar 21 14:38:11 2014 +0100

    Don't truncate hosts file path on Windows.
    
    Since evutil_snprintf() (actually evutil_vsnprintf() called by it) will
    make sure the buffer is null-terminated by placing a null byte at
    len_out - 1, we need to pass the full length of the buffer; otherwise
    the path will end in "\\host" instead of "\\hosts".

commit a0b247cdc0cfff55c7966fc99ce62bd6cfe2c309
Author: Vilmos Nebehaj <v.nebehaj@gmail.com>
Date:   Fri Mar 21 14:36:15 2014 +0100

    Load hosts file on Windows.
    
    Hosts files are not loaded in evdns_base_config_windows_nameservers() if
    load_nameservers_with_getnetworkparams() succeeds on Windows. Parse and
    load it first before setting up nameservers.

commit 12c29b0f6eb55cfc096276f3ad808248cee6ff76
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 21 17:32:09 2014 +0400

    Add evhttp_connection_set_family() to set addrinfo->family for DNS requests
    
    This is useful if you want to avoid extra dns requests.

commit 73474042fe6502805410616d268b1b33e238746b
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Fri Mar 21 12:12:10 2014 +0100

    Fixup make install for cmake projects
    
    Install all of the public headers and put the dll's in the
    same directory as the binaries.

commit dc82c8d372c2045e70679c59a39a05664c2fc6c9
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Fri Mar 21 11:59:55 2014 +0100

    Renamed sin to saddr due to name conflict
    
    During building on MSVC 2013 I got a compiler error by a
    type conflict for sin:
    
    test-fdleak.c(60) : error C2365: 'sin' : redefinition; previous definition was 'function'
    test-fdleak.c(134) : error C2070: 'double (__cdecl *)()': illegal sizeof operand
    test-fdleak.c(134) : error C2198: 'evconnlistener_new_bind' : too few arguments for call
    test-fdleak.c(148) : error C2070: 'double (__cdecl *)()': illegal sizeof operand
    test-fdleak.c(148) : error C2168: 'memcpy' : too few actual parameters for intrinsic function
    test-fdleak.c(149) : error C2224: left of '.sin_family' must have struct/union type
    test-fdleak.c(212) : error C2070: 'double (__cdecl *)()': illegal sizeof operand
    test-fdleak.c(212) : error C2198: 'bufferevent_socket_connect' : too few arguments for call
    test-fdleak.c(239) : error C2070: 'double (__cdecl *)()': illegal sizeof operand
    test-fdleak.c(239) : error C2168: 'memset' : too few actual parameters for intrinsic function
    test-fdleak.c(240) : error C2224: left of '.sin_family' must have struct/union type
    test-fdleak.c(241) : error C2224: left of '.sin_addr' must have struct/union type
    test-fdleak.c(242) : error C2224: left of '.sin_port' must have struct/union type
    
    The simplest solution to this problem would be to rename
    the variable.

commit 6a1c4d501b421a01d1b057b89ad51567ebed6338
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 18 18:36:32 2014 -0400

    Correctly skip ipv6 http test on systems without ipv6

commit e5302ac71614abeb283e4c037ca60f10744921d7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 18 12:35:39 2014 -0400

    Remove integer-overflow unit tests
    
    There's not much point checking undefined behavior.

commit 31c491504e12f2d2b65a6cb8850858532b38552b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 18 12:27:14 2014 -0400

    evtag: detect tags over 32-bits earlier

commit e660db6d5f186bb7f5f99ede9e8016e3f958b002
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 18 11:39:23 2014 -0400

    Catch over-large port numbers early in http
    
    Otherwise integer overflow potentially turns the port number into garbage.

commit 58fc9b6c0a3dc9bc5ba4eef2d7e2435ebe0775ff
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 18 11:35:50 2014 -0400

    Fix ubsan warnings when parsing ipv4/ipv6 addrs
    
    left-shifting a one-byte integer by 24 invokes undefined behavior.
    Let's not do that.

commit ec99dd82e44ad4b437ca3e4a3fee26b8bc82472c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 18 11:25:58 2014 -0400

    Fix a use-after-free error on EV_CLOSURE_EVENT_FINALIZE callbacks
    
    After running the callback, we were checking evcb->evcb_closure to
    decide whether to call mm_free(ev).  But the callback itself might
    have freed ev, so we need to grab that field first
    
    Found with AddressSanitizer

commit 860c71c892d4aa4ad79e31a1a2d60af9b0850e41
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 18 11:13:45 2014 -0400

    Fix an illegal read error in the evbuffer_add_reference tests
    
    Found with AddressSanitizer

commit 3b1b330dfd968d018dd6c40558a27ed9be9df1fd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Mar 16 21:44:43 2014 -0400

    Add new APIs to whatsnew-2.1

commit d08273eca8db05f0f8706d0041bc949e35008764
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Mar 16 12:09:24 2014 -0400

    Increment version to 2.1.4-alpha

commit e6c6f1205025f4d3d7a09c62b7bfe19f6dd17420
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Mar 16 12:01:44 2014 -0400

    Bring changelog up to date for 2.1.4-alpha

commit 2578ec14f54c080a353b803ed5bbc84b90d91a3b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 13 10:46:59 2014 -0400

    Avoid double-close paths in http tests
    
    Coverity spotted that there were some paths through the test
    functions that would double-close some sockets.

commit b6f15ccea647676036361972245ab42b8930f91e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 12 18:19:07 2014 -0400

    Add missing include to regress_finalize.h

commit 21477e408fc0e34f465aa986ecc2fe15955da912
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 12 18:13:19 2014 -0400

    Skip http/ipv6_for_domain test when we have no ipv6 support

commit 5e161c66c5aadfaf5aea20c541657d58d60ee779
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 12 18:12:43 2014 -0400

    Add an include to evrpc-internal to fix openbsd compilation warning

commit 4947c1852f30e4443bd2fb5a8e433165c9c6f108
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 12 14:29:15 2014 -0400

    Heap-allocate zlib data structure in regress_zlib tests

commit 57abb359471cd8420f09928c17a0b22fe2933da2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 12 14:06:41 2014 -0400

    Fix consts in WIN32-Code/getopt*.[ch]

commit 58408eedd8294272b63d9f428eae98c580d7a607
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 12 14:06:02 2014 -0400

    Fix duplicate paragraph in evbuffer_ptr documentation

commit af9b2a7ae0be11c79a909d212b1833a9379e4ba0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 12 13:25:02 2014 -0400

    Initialize async bufferevent timeout CBs unconditionally
    
    This is a fix for bug #93 on nmathewson/Libevent.

commit 462e6b609b280d0c02d3c04e5f6998caf613b571
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 12 12:45:41 2014 -0400

    add a cast to https-client.c

commit 2b41bcf8ea14b82c077e0a8c96ed75073dcfd8fd
Author: Joakim Söderberg <joakim.soderberg@gmail.com>
Date:   Fri Mar 7 18:09:56 2014 +0100

    Export event_extra not event_extras.

commit 7a80476768fa764c1ed79de911d17b32c8334553
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 6 18:09:00 2014 -0500

    Update to the latest version of tinytest
    
    This brings us up to tinytest 709a36ba63ff16d8

commit 239d8345be1c03b3ca4948fd612b5082d4a0da8c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 6 10:18:09 2014 -0500

    Fix 'make distcheck' by adding regress.gen.[ch] to DISTCLEANFILES
    
    Patch from Harlan Stenn.

commit 980597215d60abfc98bbdb1e1288dcf7db32aede
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 6 10:09:03 2014 -0500

    Move assert(ev) to before we use ev in EV_CLOSURE_EVENT_FINALIZE case
    
    Based on a patch from Harlan Stenn.

commit 8896a92b0754dfeb02f9fe761ecb0ba2649cde77
Merge: cbfa8da1 4545fa9b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 3 13:47:21 2014 -0500

    Merge remote-tracking branch 'origin/pr/110'

commit cbfa8da1793251ae32c882d0ef289217219a3b11
Merge: 3908a5e3 b56611d7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 3 11:23:55 2014 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit b56611d705a2c77eacb1a8da7ee0ee360e0c75bc
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Wed Feb 19 06:49:31 2014 +0100

    Add -Qunused-arguments for clang on macos
    
    The clang compiler provided with macosx emits warnings like:
    
      CC       bufferevent.lo
    clang: warning: argument unused during compilation: '-I .'
    clang: warning: argument unused during compilation: '-I ./compat'
    clang: warning: argument unused during compilation: '-I ./include'
    clang: warning: argument unused during compilation: '-I ./include'
    
    for each file being compiled. This generates a lot of noise during
    compilation making it hard to see "real" errors. This patch mute
    those warnings.

commit 4545fa9b6866df47ce2f908631a84477a94d5f49
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Wed Feb 19 06:31:27 2014 +0100

    Add option to build shared library

commit 3908a5e3d0ebc310f1f258c5e8994cf71d3b011a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 24 15:07:38 2014 -0500

    Do not offer EV_FEATURE_EARLY_CLOSE if we have no EPOLLRDHUP

commit f24cba3bc07f2f6e8035c960338f71158a2880c5
Merge: f665d5cb ff266332
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Mon Feb 24 20:05:03 2014 +0000

    Merge pull request #97 from JoakimSoderberg/openwrt_fixes
    
    BUGFIX: Fix compilation on systems with EPOLLRDHUP undefined.

commit f665d5cb275b8bff2ef6156b0ad12007b586fd87
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 24 10:32:00 2014 -0500

    Stop checking for inet_aton; we don't use it.
    
    We had cmake and autoconf tests for the inet_aton function... but we
    never actually use it any more.
    
    (The autoconf tests still use the callability of inet_aton to decide
    whether we need to link against -lresolv)
    
    Reported by Harlan Stenn.

commit a0dd5df20a204e99cad25ab1dfaaf3fc34a7a7d2
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Wed Feb 19 06:29:58 2014 +0100

    Rename event_extras to event_extra
    
    The library event_extras is named event_extra when building with
    GNU autotools

commit ff26633226e1e81ef08566d91e92144c4b5a68c0
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Mon Feb 17 12:43:10 2014 +0000

    BUGFIX: Fix compilation on systems with EPOLLRDHUP undefined.
    
    Since epolltable-internal.h uses this define, it must be defined before that is included.

commit 565ea26bedd4a5c8e112653a973078c1e847747c
Merge: 49efac53 e0613212
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Fri Feb 14 22:51:11 2014 -0500

    Merge pull request #108 from trondn/cmake-build-fix
    
    CMake build-related fixes

commit e06132120754b2c549122b83fdbb74382ea0dff2
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Fri Feb 14 09:04:48 2014 +0100

    Add cmake-related files to .gitignore

commit ed99d92c014fdd724e79253384613d5c2d02ff9d
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Fri Feb 14 08:26:07 2014 +0100

    Added -Qunused-arguments for clang on macosx
    
    The CLang provided through Xcode on Mac OSX emits warnings for
    all unused include paths making the compilation extremely verbose.

commit 49efac5356ca4eea4b7e6ef9bf1160bba25cfcde
Merge: 2ea15ed0 f2428a28
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 9 13:35:21 2014 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit f2428a284b61029a59ccf4d41c89db1070594722
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 9 13:29:26 2014 -0500

    bufferevent_pair: don't call downcast(NULL)

commit 2ea15ed0f69badb27b5ea58ffd873b1c2008c5d9
Author: John Ohl <john@collabriasoftware.com>
Date:   Mon Jan 27 14:54:55 2014 -0500

    Tweaked callbacks to prevent race condition (https://github.com/libevent/libevent/issues/104)

commit 40830f16445d036728313c70816f2bfa2d9333e0
Author: John Ohl <john@collabriasoftware.com>
Date:   Mon Jan 27 13:03:36 2014 -0500

    Tweaked callbacks to prevent race condition (https://github.com/libevent/libevent/issues/104)

commit 8c0f0a9b0e0e37a271e628415a3a7349f9aac5cb
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Fri Jan 24 16:30:17 2014 +0000

    Added a Travis-CI configuration file.
    
    Initial stab at a first Travis config file.

commit ee0185e534691da7e265035a4dfd8915a0ddfc26
Merge: 99cd8187 e212c548
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 22 11:55:26 2014 -0500

    Merge remote-tracking branch 'joakimsoderberg/win32_fixes'

commit 99cd818741c9f15e0c9ba1c4bbc8ff12b5e71d7b
Merge: d38d798b dfe1e526
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 22 11:46:52 2014 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit dfe1e526f5bb9db3c0b28d848170f35521ebd314
Author: Marcin Juszkiewicz <marcin@juszkiewicz.com.pl>
Date:   Wed Jan 22 11:17:35 2014 +0100

    Check does arch have the epoll_create and __NR_epoll_wait syscalls.
    
    Some architectures (like AArch64) do not have deprecated syscalls.
    
    Signed-off-by: Marcin Juszkiewicz <mjuszkiewicz@redhat.com>

commit e212c5486dad4811f5a6842ce32e99d43e0c1956
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Wed Jan 22 13:19:49 2014 +0100

    Check for OSX when checking for clang.

commit f1715b471d7e900d56502ce6c315f427d78815f4
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Wed Jan 22 12:12:51 2014 +0100

    Guard against EVENT_NOWIN32 being set during testing.
    
    On windows all tests will fail if EVENT_NOWIN32 is set, since then there
    will be no backend available.
    
    Question is if we should simply disable the environment variable check on
    Windows, since there's only one backend available anyway?

commit d7be7887803ce9cc70d3dacaee5650c0f753f3de
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Wed Jan 22 11:15:17 2014 +0100

    Fix https-client compilation on Windows.
    
    ssize_t is not defined. But using ssize_t for s in this context makes no
    sense, since fread returns size_t.

commit d38d798b258c37342c72b3ac21f69e438c70991e
Author: Joakim Söderberg <joakim.soderberg@gmail.com>
Date:   Wed Jan 22 00:06:21 2014 +0100

    CMake: Get rid of python not found warning when regress tests turned off.
    
    It would warn that python wasn't found when it was, just because the regress tests where turned off... confusing.

commit e423d42018ba6b38226303ddb0093609e9754fbe
Author: Joakim Söderberg <joakim.soderberg@gmail.com>
Date:   Wed Jan 22 00:03:37 2014 +0100

    Fix CMake compile when OpenSSL is disabled.

commit 43ffcf69779f0b763aa9688c42a5bb1d2cdb42b5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 21 15:47:44 2014 -0500

    Split epoll lookup table into a separate header file
    
    It accounted for more than half the length of epoll.c, and it's
    machine-generated, so we might as well keep it separate.

commit 53d279389a05f76cf5288420f561ec93178b6c6a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 21 15:44:05 2014 -0500

    Expand EV_CLOSED documentation a bit

commit 5c142a7ee9fbbc9502b71ef3bd034dd908f68089
Merge: d03b5bf0 b1b69ac7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 21 14:53:47 2014 -0500

    Merge remote-tracking branch 'origin/pr/98'

commit d03b5bf0bcbff1dc401fa20a4cf294613fa9b790
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 21 14:29:00 2014 -0500

    Disclaimerize cmake a little in the README

commit 4cb44fdf56252015d24afcca5ef4bca026f10a67
Merge: c2076824 ae1bd829
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 21 14:26:01 2014 -0500

    Merge remote-tracking branch 'joakimsoderberg/new_cmake'
    
    Conflicts:
            sample/https-client.c

commit ae1bd829d5e79f8e54ee03c4e6a911b36c072f89
Author: Joakim Söderberg <joakim.soderberg@gmail.com>
Date:   Tue Jan 21 19:19:30 2014 +0100

    Fix broken autotools build.
    
    The move of the static *config.h files to a sub directory for WIN32 broke the autotools build. Use the proper subpath for that as well...

commit c2076824a33348e1d4cd0fdb60555152f77fa2f6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 21 12:21:37 2014 -0500

    Fix a c90 warning

commit 8b40a5b08f1cc9a84a74d89e262bf4463a4e8051
Author: Joakim Söderberg <joakim.soderberg@gmail.com>
Date:   Tue Jan 21 11:35:21 2014 +0100

    Check if we're on OSX before disabling deprecation in le-proxy

commit 4e1439588f742959e0afe871c7473a78bc540cf1
Author: Joakim Söderberg <joakim.soderberg@gmail.com>
Date:   Tue Jan 21 11:30:27 2014 +0100

    Change all uses of WIN32 to _WIN32

commit 20244671cd3c66ce81ae85dcb9a3f1312c78a25e
Author: Joakim Söderberg <joakim.soderberg@gmail.com>
Date:   Tue Jan 21 11:19:02 2014 +0100

    Fix include bug.
    
    On systems where a previous version of Libevent is installed we don't want the system version of the headers to be included before the ones in the build tree. This happened on my OSX system where I had an ancient version of Libevent installed. It would then load the incorrect event-config.h and fail because the system introspection macros weren't set properly.

commit b1b69ac7c1502ec73f5da17c82150186174bf5c9
Author: Diego Giagio <diego@giagio.com>
Date:   Fri Jan 17 23:20:42 2014 -0200

    Implemented EV_CLOSED event for epoll backend (EPOLLRDHUP).
    
    - Added new EV_CLOSED event - detects premature connection close
      by clients without the necessity of reading all the pending
      data. Does not depend on EV_READ and/or EV_WRITE.
    
    - Added new EV_FEATURE_EARLY_CLOSED feature for epoll.
      Must be supported for listening to EV_CLOSED event.
    
    - Added new regression test: test-closed.c
    
    - All regression tests passed (test/regress and test/test.sh)
    
    - strace output of test-closed using EV_CLOSED:
        socketpair(PF_LOCAL, SOCK_STREAM, 0, [6, 7]) = 0
        sendto(6, "test string\0", 12, 0, NULL, 0) = 12
        shutdown(6, SHUT_WR)                    = 0
        epoll_ctl(3, EPOLL_CTL_ADD, 7, {EPOLLRDHUP, {u32=7, u64=7}}) = 0
        epoll_wait(3, {{EPOLLRDHUP, {u32=7, u64=7}}}, 32, 3000) = 1
        epoll_ctl(3, EPOLL_CTL_MOD, 7, {EPOLLRDHUP, {u32=7, u64=7}}) = 0
        fstat(1, {st_mode=S_IFCHR|0620, st_rdev=makedev(136, 4), ...})
        mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYM...
        write(1, "closed_cb: detected connection close "..., 45) = 45

commit 8697b99cd472e7f0c5a496b93d4c19e34e1bfd6e
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Tue Jan 14 18:45:11 2014 +0100

    Forgotten headers for old nmake project compatability.

commit 8d4cb35dda3ea20af3e541d307d7e293e3f82eba
Author: JoakimSoderberg <joakim.soderberg@gmail.com>
Date:   Tue Jan 14 18:41:58 2014 +0100

    Clean up the README some.

commit 604b8cc4d1fdb40426803d9faba062fd08fcf87d
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Tue Jan 14 18:25:07 2014 +0100

    Update README with CMake build instructions.

commit d2bc39afd0a45ec44e5a3a30ffba0f3f3473b1a1
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Tue Jan 14 18:24:43 2014 +0100

    Rename README to README.md and use markdown to format.

commit 24d646666b3d85ff65fbdd5c1a29e3dc5c6f6e09
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Tue Jan 14 17:53:47 2014 +0100

    Fix so that old nmake project still builds.

commit fd42e70d182fbffe58ffdc4db7d0fe2f3cc36d47
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Tue Jan 14 17:37:58 2014 +0100

    Set USE_DEBUG=1 on EVENT__ENABLE_VERBOSE_DEBUG

commit 49ab36327177bf593e3b9e62caf058de0d27c385
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Tue Jan 14 13:01:31 2014 +0000

    Some work on making it possible to simply do add_subdirectory() on the project.

commit 4b754df949fddd6f0c6afb0f526d80ae7e48f87e
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Fri Jan 10 17:58:42 2014 +0100

    Fix typo

commit f3446ed5fbc5c31f5ae8bd872aca762e90ee61b3
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Thu Jan 9 13:44:38 2014 +0100

    Add CMake config and install targets.
    
    Make it easier for other projects to do find_package by creating config
    files both in the build and install tree.

commit d240328d60dd54dfaec524b4aeed21f45dc3a6dd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 8 13:02:37 2014 -0500

    Fix even more coverity warnings.

commit 860767e84121dd7065d91f8963020cad51c0d36b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 8 12:46:09 2014 -0500

    Fix a couple of compilation warnings in regress_http.c

commit 991b362001b0d31cc175d78c24a6de2d7137c56a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 8 12:04:06 2014 -0500

    Remove spurious checks in evrpc.c error cases (coverity)
    
    Coverity hates the case where you have a redundant NULL check after
    using something.

commit 544cf8888ae95f29112fa8fb024b630c3134948a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 8 11:58:50 2014 -0500

    Whoops; fix compilation in bench.c

commit ff7f739685152dfda96acdf804491436367fc581
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 8 11:54:56 2014 -0500

    Fix coverity warnings in benchmark tools.
    
    Again, not harmful, but best to stay warning-free.

commit 867f401f9bdb5d0f1dae6d5d7b96719ca0ef7600
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 8 11:51:22 2014 -0500

    Fix a pile of coverity warnings in the unit tests
    
    Most of these problems can only trigger when the tests fail, but it's
    good hygiene to keep the code warning-free in any case.

commit 8d15f57f616bf23c6b20249f1f8777c36b939f40
Merge: f9e091bf b85f3987
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 7 16:59:26 2014 -0500

    Merge remote-tracking branch 'asweeny86/on-complete-cb'

commit b85f3987049390d68a960045d2ed8150155db165
Author: Andrew Sweeney <asweeney86@gmail.com>
Date:   Mon Jan 6 21:19:15 2014 -0500

    Update unit test to make sure that the callback happens after the output data is written

commit da86dda95186079a79718525ad8a1d5c5a86fec3
Author: Andrew Sweeney <asweeney86@gmail.com>
Date:   Mon Jan 6 20:36:31 2014 -0500

    evhttp_request_set_on_complete_cb to be more specific about what the function actually does and usage

commit f9e091bf4e37f9fdd7c98cd9a062acf61880df2c
Merge: 4c8ebcd3 26230a2d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 6 12:11:30 2014 -0500

    Merge remote-tracking branch 'asweeny86/event-count-max'

commit b083ca0551ec8ca63245e2e78dfefd11072443fc
Author: Andrew Sweeney <asweeney86@gmail.com>
Date:   Sun Jan 5 20:35:46 2014 -0500

    Provide on request complete callback facility
    
    This patch provides the ability to receive a callback on the completion of a
    request.  The callback takes place immediately before the request's resources
    are released.

commit 26230a2d214aa3116e397a85061c67e0ed4eb509
Author: Andrew Sweeney <asweeney86@gmail.com>
Date:   Sun Jan 5 16:30:35 2014 -0500

    Added unit test for max event counts

commit efbd3dcf287d69baf40aaf8452198177f5af0a2b
Author: Andrew Sweeney <asweeney86@gmail.com>
Date:   Sun Jan 5 16:29:52 2014 -0500

    Fixed bug using wrong variable in max event compare

commit 5173bef50ff8ff389598c8d9301a7b77ffae8315
Author: Andrew Sweeney <asweeney86@gmail.com>
Date:   Mon Dec 30 14:06:20 2013 -0500

    Add access to max event count stats
    
    This commit provides an interface for accessing and resetting the maximum
    number of events in a given period.  This information provides better insight
    into event queue pressure.

commit 4c8ebcd3598a97004340511930b84286a52d9d05
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 24 15:02:02 2013 -0500

    Remove unneeded declaration in bufferevent-internal.h

commit 254c04ec4b342d8d5f800b3b6dcfad01df4d2489
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 24 15:01:34 2013 -0500

    Fix needless bufferevent includes in evdns.c

commit 88ecda3bbb6b5f753a706bbc9c67c2e79be42c9a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 24 14:37:30 2013 -0500

    Fix a couple of "#ifdef WIN32" instances

commit d1976f8ec48710f20a84043c80ec8f5108d4df38
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 24 14:05:44 2013 -0500

    Sample HTTPS Client: Set hostname for SNI extension (by f69m)
    
    Patch from f69m on SourceForge

commit 62f596b7f4691b059857e3eb6618d62e8b59fea5
Author: Antony Antony <antony@phenome.org>
Date:   Thu May 9 06:50:52 2013 +0200

     fix for ServFail from RIPE Atlas release

commit 90786eb073e9bd84ef2d5e732621b73d8473eaad
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 24 12:59:36 2013 -0500

    Small tweaks to https-client.c

commit 2fbc3b148b1f3734d8e1d5bccb0861502ffba4e7
Merge: 471fbe3b 29af65eb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 24 12:45:22 2013 -0500

    Merge remote-tracking branch 'resetius/https'

commit 471fbe3bafdbfe85e470700679f5efc3a032e015
Merge: a3172a41 b0bd7fe1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 24 12:27:24 2013 -0500

    Merge remote-tracking branch 'rbalint/from-forked-daapd'

commit a3172a415b709d1df76b27ee86c738e4d8b6f87b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 24 11:30:06 2013 -0500

    Minor optimizations on bufferevent_trigger options
    
    By making BEV_TRIG_DEFER_CALLBACKS equal to BEV_OPT_DEFER_CALLBACKS,
    and BEV_TRIG_IGNORE_WATERMARKS disjoint from BEV_OPT_*, we can save a
    few operations in bufferevent_run_*, which is critical-path.

commit 4dd3abd41fe951b4c236c8e9920f17f3af7f4a6d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 24 11:20:52 2013 -0500

    Make bufferevent_trigger_nolock_() inline
    
    Since most of its callers are using constant EV_READ or EV_WRITE, and
    using constant 0 as its argument, this should eliminate most of the
    overhead for this function in the fast case.

commit b4ef3def6f8d7dd9f6582b85be4539426ac04799
Merge: 87fa2b00 bd419471
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 24 10:33:58 2013 -0500

    Merge remote-tracking branch 'mistotebe/bufferevent_trigger'

commit 87fa2b004a65257a6cba4b57dc7fc0fb06106342
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Dec 23 20:46:38 2013 -0500

    Unit tests for active_by_fd; unsupport active_by_fd(TIMEOUT)
    
    [It turns out that event_base_active_by_fd(TIMEOUT) didn't actually
    work right. Feel free to add it back in as a patch.]

commit 486594337a833cacd228313c1ecb793a1ec967e0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Dec 21 23:32:10 2013 -0500

    Add event_base_active_by_signal by analogy

commit 5c9da9a8a86a84edd06761d8049d90ef130f4f01
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Dec 21 23:21:33 2013 -0500

    Sanity-check arguments to event_base_active_by_fd()

commit 93369ff4e9022b4a05e83608f2a9d61a23452ce3
Merge: 974c60e1 865a1426
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Dec 21 23:15:41 2013 -0500

    Merge remote-tracking branch 'ghazel/event_base_active_by_fd'

commit 974c60e14ac1a088cd39d8c1e93dc895ccc286df
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Dec 21 23:15:28 2013 -0500

    Refactor evmap_{io,signal}_active_() to tolerate bad inputs

commit db7acd1310732f8240c6919a4cfb7267fcd46032
Merge: e6b2a267 eaa79cd4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Dec 20 13:37:39 2013 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit eaa79cd45954cdb4c10c4def1339c25c429b1fd9
Merge: 8cd695bf cec62cb8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Dec 20 13:37:04 2013 -0500

    Merge remote-tracking branch 'sourceforge/patches-2.0' into patches-2.0
    
    Conflicts:
            include/event2/event.h

commit 8cd695bf6dbe891c0e23589ca691891e5b76083d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Dec 20 13:31:29 2013 -0500

    Typo fixes from Linus Nordberg

commit cec62cb80a689f84470f8424ed70d39e8854f981
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Dec 20 13:31:29 2013 -0500

    Typo fixes from Linus Nordberg

commit dd413bd19b918c9e586b4a2747a361b79a13e88f
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Thu Dec 19 12:03:49 2013 +0000

    Added EVENT__ENABLE_GCC_WARNINGS, turns all warnings into errors.

commit f7805939d161412e0c25cbddb71f9f329beb752b
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Thu Dec 19 10:46:04 2013 +0000

    Only look for ZLib when it is used (if tests are included).
    
    Also make the project language C.

commit 4ac086abc41323a2de4393753368e0f6e4625268
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Thu Dec 19 10:54:52 2013 +0100

    Fix the "make verify" target on NetBSD

commit f2483f8b3d781f052d2d38902c314a54645d21a4
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Tue Dec 17 15:17:29 2013 +0000

    Add a "make verify_coverage" target generation coverage info.
    
    Use lcov/gcov to gather coverage info for the tests (Only works with gcc/clang and make).
    
    cmake -DEVENT__COVERAGE=1 -DCMAKE_BUILD_TYPE=Debug ..
    make
    make verify_coverage
    
    Current coverage (run on debian):
    Line coverage 79.1 %    10231 / 12939
    Function coverage 86.1 %        933 / 1083

commit 0ef1d04e446ac051d4a2957c29710f6e90709605
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Tue Dec 17 14:32:07 2013 +0100

    Get rid of unknown pragma warnings.

commit 968e97bd4bab7d2232d031c121fb98c7068c7d6d
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Tue Dec 17 14:31:22 2013 +0100

    Minimum required python version is 2.4.
    
    Got rid of TODO... The version you specify to find_package is the minimum
    version, so exactly what we want.

commit 86df3edaa00dcb63945ce0ac52e0b01f2108da19
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Tue Dec 17 14:07:14 2013 +0100

    Change the BSD license from 4 to 3-clause.
    
    This makes it GPL compatible. Changing the license from 4 to 3-clause BSD
    license is OK according to a Berkley announcement on July 22, 1999 by
    William Hoskins, the director of the fofice of technology licensing for
    Berkley:
    
    ftp://ftp.cs.berkeley.edu/pub/4bsd/README.Impt.License.Change

commit 2799b359d3fa0c8d57ec4095e09ee701c5771e05
Author: Joakim Söderberg <joakim.soderberg@gmail.com>
Date:   Tue Dec 17 14:01:21 2013 +0100

    Added a test for testing if kqueue works with pipes.

commit a831f2f7decbbb89518790c023b4cf019f8ce6a9
Author: Joakim Söderberg <joakim.soderberg@gmail.com>
Date:   Tue Dec 17 13:29:04 2013 +0100

    Fix kqueue support.

commit 69c3516be62bf2ce7e31dcf0af2d40ac4f172f7a
Author: Joakim Söderberg <joakim.soderberg@gmail.com>
Date:   Tue Dec 17 13:28:23 2013 +0100

    Get rid of deprecation warnings for OpenSSL on OSX 10.7+

commit 67e5d749836a3aea6ec5317c11f0a385ae4d9b85
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Mon Dec 16 18:10:32 2013 +0100

    Fix the make "verify" target on Windows.
    
    Windows does not have the "unset" command, but this doesn't matter since
    the problem that requires us to use unset doesn't happen on Windows.
    
    Also did some minor cosmetic changes, and dependcy changes.

commit 031a803071ee10547089c3962ce99423ed338b14
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Dec 16 12:02:21 2013 -0500

    Clarify event_base_loop exit conditions

commit e053c4f029982778bcdee1b220c335419872ac25
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Mon Dec 16 16:44:13 2013 +0000

    Added a "make verify" target.
    
    This is more than for cosmetic purposes to match how it's done with autoconf.
    
    Due to the fact that we use environment variables to turn off certain backends during the tests, simply running "ctest" or "make test" can result in failed tests.
    
    This is because if you do "EVENT_NOEPOLL=yes && export EVENT_NOEPOLL" and then run the tests, when running the epoll tests, the EPOLL backend will be turned off. There is no way of unsetting an environment variable for a test in CMake, you can only set them. And since libevent simply checks if the environment variable is set (it doesn't check the actual value of it), this won't work.
    
    So to remedy this, we create the "make verify" target that first unsets all the EVENT_NO* environment variables, and then runs ctest.
    
    Also bumped the required CMake version from 2.6 to 2.8, since the set_test_properties(bla PROPERTIES ENVIRONMENT "SOME_VAR") requires 2.8
    
    Added some explicit dependencies for the test programs to libevent, so they don't just fail if you try to run the tests without first doing "make"

commit 7ea4159d2924f7f1beb24e9d506cb88791b4ce36
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Mon Dec 16 16:37:51 2013 +0100

    Only test the event backends available on the system.
    
    Fix how the CMake project adds the tests using the different backends. At
    first we tried to do it exactly as it's done in test/test.sh.
    
    However, test.sh uses a special program test-init to decide if a given
    backend is available or not before running the actual tests. Doing it this way
    will not be possible using CMake. Since then we would have to have the
    test-init executable compiled at the time we run CMake, to know what tests
    we should add. (And since CMake generates the make/project files that
    compiles the executables, there's a catch 22).
    
    Instead of deciding what tests to run this way, we simply use the result
    of the CMake system introspection (that figures out what backends are
    available) to decide what backend tests to add.

commit 8f2af50f385d1bf93af48d59960440e8ca48bf3a
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Mon Dec 16 13:45:45 2013 +0100

    Don't segfault on no found event backend.

commit 78da644f3d88a4770d10e5a55c1fda17085b716b
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Mon Dec 16 11:35:31 2013 +0100

    Fix bench_cascade program on Windows.

commit 9bbce0b63cceb2df9725b30abcf64ee8794cc73e
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Mon Dec 16 11:34:14 2013 +0100

    Only include WIN32 getopt where it is used.
    
    getopt is only used in the benchmark tests, don't include it in the core
    lib...

commit c259d53c822d639c838a91aa0d98ef1a61db26c9
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Mon Dec 16 11:27:13 2013 +0100

    Add copyright and licensing files for CMake modules.

commit dbf2b5171ac9d5d1ae17f66153f8db6991cea3d7
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Mon Dec 16 11:26:29 2013 +0100

    Use evutil_closesocket instead.

commit 19222e5247f78b699c9d4061fc2118d772305724
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Fri Dec 13 17:00:23 2013 +0100

    Added some GCC specific options.
    
    - Added sample applications.
    - Fixed the https-client to work on Windows kind of (No cert validation).

commit 58fcd42880d7ad095f682430b1615c6af9ae64bf
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Fri Dec 13 12:39:50 2013 +0000

    Link libm on unix platforms.

commit ce14defeb6de5c7f8677074f90238e67feeab20b
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Fri Dec 13 11:34:22 2013 +0100

    Generate a dummy evconfig-private.h so things build properly.
    
    Windows used to have an empty file for this before.

commit 99c1dc3233a3fdd70c641011eecb3eb23b0817bb
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Thu Dec 12 18:21:11 2013 +0100

    More work on adding tests to CMake project

commit e9fc014c86a6e70582b6f5a9e1db70ebf5530ae7
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Thu Dec 12 16:33:20 2013 +0100

    Add all tests and benchmarks to CMake project.
    
    Also fixed some minor issues with what's built.

commit e415196a7da61ba32decf508ae4076d7ae5faf20
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Mon Dec 9 18:05:32 2013 +0100

    Initial CMake commit.

commit 3d10541474ac371b82dc05250735817cef2a8025
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Mon Dec 9 16:58:16 2013 +0100

    Fix non-C89 variable declaration.
    
    Microsofts C compiler does not support the C99 standard, so variables has
    to be declared at the start of a scope.

commit e6b2a26755ecd8b532a58b34c7aacd404454c5fb
Author: Joakim Soderberg <joakim.soderberg@gmail.com>
Date:   Mon Dec 9 16:54:57 2013 +0100

    Fix non-C89 variable declaration.
    
    Microsofts C compiler does not support the C99 standard, so variables has
    to be declared at the start of a scope.

commit 45eba6ffd5cf28e20d906a6bb0e2c8a2e242ba56
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Dec 6 10:50:17 2013 -0500

    Rename flush_outdated_host_addresses to clear_host_addresses
    
    "flush" can imply writing something out to a file or connection before
    clearing it; "clear" always means "remove".  It's also potentially
    misleading to say "outdated" here, since the function removes _all_
    addresses regardless, not just certain outdated ones.
    
    Also, don't free the lock in this function.  Also reindent the function.

commit aeb8d345b47bee0522f1ce32a20bfc8a642d657c
Merge: c11e7d91 f03d3535
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Dec 6 10:37:53 2013 -0500

    Merge remote-tracking branch 'origin/pr/86'

commit f03d3535afad5b450f141148b0d1534d7c86bfe9
Author: Kuldeep Gupta <kuldeepjec@gmail.com>
Date:   Fri Dec 6 17:06:20 2013 +0530

    bug fix for issues #293 evdns_base_load_hosts doesn't remove outdated addresses
    
    As mentioned at https://sourceforge.net/p/levent/bugs/293/
    created a small function "evdns_base_flush_outdated_host_addresses" which removes all the previous host addresses, if user wants to clean up the list of hosts can call and use this function.
    Defination of this function is part of another patch.

commit 954d2f94c047d2ecfd81e61f402096da9ab61f6e
Author: Kuldeep Gupta <kuldeepjec@gmail.com>
Date:   Fri Dec 6 16:53:16 2013 +0530

    bug fix for issues #293 evdns_base_load_hosts doesn't remove outdated adresses
    
    As mentioned at https://sourceforge.net/p/levent/bugs/293/
     created a small function "evdns_base_flush_outdated_host_addresses" which removes all the previous requests of hosts , if user wants to clean up the list of hosts can call and use this function.
    Requires function declaration to be added in include/event2/dns.h
     Adding it in another patch for the same bug.

commit bd41947175f9156d0cd631a0f7a81161a39c66fa
Author: Ondřej Kuzník <ondra@mistotebe.net>
Date:   Thu Dec 5 22:45:45 2013 +0000

    Clarifications in response to merge req. comments

commit c11e7d919183e4a47324b6fd87e780059a8f1d58
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 5 17:25:56 2013 -0500

    start writing a changelog for 2.1.4-(beta?)

commit 735d838b0a537ae04f1e6a2e9cbc5f3f45ebb541
Merge: ccf432b9 f9284c3e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 5 17:14:54 2013 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit f9284c3e3c41c03a28e841ef4522af1999244bf6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 5 17:14:05 2013 -0500

    update the 2.0 changelog

commit a7384c782486c293e9cb8c22916eb9ee842a8c1c
Author: Ondřej Kuzník <ondra@mistotebe.net>
Date:   Tue Dec 3 23:01:54 2013 +0000

    Add an option to trigger bufferevent event callbacks

commit 61ee18b8b1d2ac0025955b3f949531c712fb7527
Author: Ondřej Kuzník <ondra@mistotebe.net>
Date:   Tue Dec 3 22:49:57 2013 +0000

    Add an option to trigger bufferevent I/O callbacks

commit 4ce242bd0087ed3f6d36c64d0d15094d8a6fc9fc
Author: Ondřej Kuzník <ondra@mistotebe.net>
Date:   Tue Dec 3 22:35:53 2013 +0000

    Add watermark introspection

commit 13a9a020e1361b34c600b7e1f0191c33a32a05c0
Author: Ondřej Kuzník <ondra@mistotebe.net>
Date:   Tue Dec 3 22:50:51 2013 +0000

    Document deferred eventcb behaviour

commit be7bf2c76845b5f0ade066f7b4faf11d750296e2
Author: Ondřej Kuzník <ondra@mistotebe.net>
Date:   Tue Dec 3 22:36:45 2013 +0000

    Fix a typo

commit ccf432b91201afb61b1b015724bcb50245a36eec
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 21 11:47:34 2013 -0500

    Try another doxygen tweak

commit 6e67b51023e507b15baecfbae1f20e8ede27222f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 21 11:30:04 2013 -0500

    Small doxygen tweaks

commit b0bd7fe1db93a1adde29587e12ed78726f962012
Author: Balint Reczey <balint@balintreczey.hu>
Date:   Mon Nov 18 16:06:16 2013 +0100

    Allow registering callback for parsing HTTP headers
    
    Slightly changed version of Espen Jürgensen's
    commit 548141e72312126fa6121f6a5f436đ251c7fb1251 for forked-daapd.

commit 8d8decf114aebf10188cfdf52a8479cd24d1e3e5
Author: Julien BLACHE <jb@jblache.org>
Date:   Sat May 2 20:40:11 2009 +0200

    Add a variant of evhttp_send_reply_chunk() with a callback on evhttp_write_buffer()
    
    evhttp_write_buffer() used by evhttp_send_reply_chunk() can take callback
    executed when (part of) the buffer has been written. Using this callback to
    schedule the next chunk avoids buffering large amounts of data in memory.

commit a60632a1ec6649dfa0be175d064b1ca6192cc5bf
Merge: 515ed879 3b77d628
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 1 14:21:54 2013 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 3b77d62829c4393bda6f9105a5d3b73b48a64b71
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 1 14:20:25 2013 -0400

    Avoid redundant invocations of init_extension_functions for IOCP

commit 515ed87943794dd379f94f083ccfd450953829b5
Merge: 4464bd23 4dd500cd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 14 11:22:40 2013 -0400

    Merge branch 'pr_81'

commit 4dd500cdf481b467be5bc12867cc1af15c48dea8
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Oct 1 19:54:09 2013 +0400

    regress_http: add tests for evhttp_connection_get_addr()

commit 0c7f0405e36c45c88139189dd4c720aa0c4903f5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Oct 1 19:12:13 2013 +0400

    http: implement new evhttp_connection_get_addr() api.
    
    Basically tcp final handshake looks like this:
        (C - client, S - server)
        ACK[C] - FIN/ACK[S] - FIN/ACK[S] - ACK [C]
    
    However there are servers, that didn't close connection like this,
    while it is still _considered_ as valid, and using libevent http layer
    we can do requests to such servers.
    
    Modified handshake:
        (C - client, S - server)
        ACK[C] - RST/ACK[S] - RST/ACK[S]
    
    And in this case we can't extract IP address from socket, because it is
    already closed, and getpeername() will return: "transport endpoint is not connected".
    So we need to store address that we are connecting to, after we know it,
    and that is what this patch do.
    
    I have reproduced it, however it have some extra packages.
    (I will try to fix it)
    https://github.com/azat/nfq-examples/blob/master/nfqnl_rst_fin.c

commit 4464bd23963267615d759eb6377cf1bb13f7d47f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 10 16:10:50 2013 -0400

    Tweak indentation

commit 206124a23c8ae914c02e689649a55a1be16ba6a1
Merge: 97211377 5a5acd9a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 10 16:09:45 2013 -0400

    Merge remote-tracking branch 'origin/pr/79'

commit 972113777545f1367591338559637adc51dbf367
Merge: a0931378 611e28b6
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Wed Oct 2 08:45:54 2013 -0700

    Merge pull request #80 from azat/tests-add-event-debug-logging-all
    
    regress_main: logging all if env EVENT_DEBUG_LOGGING_ALL isset

commit 611e28b6eeb2f1a32f7799fac0c00edf59741fb6
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Oct 1 19:54:57 2013 +0400

    regress_main: logging all if env EVENT_DEBUG_LOGGING_ALL isset

commit 5a5acd9a705f3bc9932bb81c1232ccfdc92517f0
Author: Nicolas Martyanoff <khaelin@gmail.com>
Date:   Sat Sep 28 20:03:28 2013 +0200

    add a http default content type option

commit a093137809252f24ee70f3258a5e2a81cd3551e8
Merge: ee063766 e64a2b0b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 19 10:48:27 2013 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit e64a2b0b1129ade8af36515a1d87dbfb64256a49
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 19 10:48:09 2013 -0400

    Fix another arc4random_buf-related warning

commit ee063766f6dfc297778283caf81515bbfe3e97f3
Merge: 0a051ef9 5cb3865a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 19 10:45:58 2013 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            evutil_rand.c

commit 5cb3865a40d1c42ecf7a3dd2dc4a42e0d5b13d49
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 19 10:43:54 2013 -0400

    Fix a compiler warning when checking for arc4random_buf linker breakage.
    
    Patch by Ralph Castain.

commit 0a051ef93cb869111cb470daa90451f387f7da8c
Merge: b04d13cd 243386cc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 16 12:29:48 2013 -0400

    Merge remote-tracking branch 'rosslagerwall/tree-build'

commit 243386ccc292a99906bff5d0ecbde673b36754d0
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Sun Sep 15 21:48:15 2013 +0200

    rpcgen: Generate regress.gen.[c,h] in build rather than src dir
    
    Currently an out-of-tree build will either write to the src dir or reuse
    the existing regress.gen.[c,h].  But if building from a read-only git
    tree (or if the git dir is cleaned), these files will not exist and the
    build fails.  So write the files to the build dir.  If the system does
    not have python, the regress.gen.[c,h] will be used from the src dir if
    they exist.

commit b04d13cd72e28b105002dba1ba8001be68c42701
Merge: ebfd8a89 5eb17885
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 9 12:06:53 2013 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 5eb178855a7263a50e38139089720fef7c3a1642
Author: Nate Rosenblum <nater@maginatics.com>
Date:   Tue Sep 3 14:46:47 2013 -0700

    Avoid racy bufferevent activation
    
    The evhttp_send_reply method invokes evhttp_write_buffer with a
    callback that may release the underlying request object and
    bufferevent upon completion. This cleanup callback is invoked by the
    underlying bufferevent's write callback. Improperly enabling write
    events before referencing the bufferevent could lead to use after free
    and memory corruption.

commit ebfd8a89678f1d13f3811561cf3f5cd1ffbfa7f7
Author: maksqwe <maksqwe1@ukr.net>
Date:   Wed Sep 4 14:25:11 2013 +0300

    Fix reinit of fds with EV_WRITE but not EV_READ.
    
    Bugfix on 2.1.1-alpha.

commit 911abf3dd28672d12e6e7cc33137d66a2c85021b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 19 10:11:21 2013 -0400

    Check CLOCK_MONOTONIC_* at runtime if needed.
    
    (We need this to avoid compile errors on cygwin.  Fixes github issue
    75.)

commit 3807a30b03ab42f2f503f2db62b1ef5876e2be80
Merge: c149a1a5 c83efb80
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 19 10:05:14 2013 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            util-internal.h

commit c83efb801fefe4e10211c1a1d02ecd123926fb8c
Merge: bb524712 f5ced88c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 19 10:02:55 2013 -0400

    Merge remote-tracking branch 'public/20_memclear' into patches-2.0

commit f5ced88cec292a8310c0f87748bad87686960ba8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 19 09:52:29 2013 -0400

    Really remove RNG seeds from the stack

commit c149a1a5e74a17febd6c0bf9af00b80104a5c3ed
Merge: 6171e1c2 bb524712
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 13 11:14:11 2013 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit bb524712f6f3967434a197ee9f391f6cfc6a6374
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 13 11:12:25 2013 -0400

    Oops; revert testing code

commit 9695e9c192b866793110c885fb87143de8cebf2a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 13 10:59:27 2013 -0400

    Avoid other RNG initialization FS reads when urandom file is specified

commit d44f91ad7915ad08ad2b6dad3e52902edc619ef2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 13 10:59:20 2013 -0400

    Finish a sentence

commit 6171e1c2942361979feea768240605bb81d0566c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Aug 13 18:19:50 2013 +0400

    sample: drop uri_root from base_url in http-server.
    
    By default there is "0.0.0.0", and this address will work only from
    the same machine, and besides there is no need in uri_root in base_url,
    because it will be added automatically by browser.

commit 1c06985a01230102783ffa1fdc8528f75e48ef4f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 20:00:53 2013 -0400

    Add an assertion for another of the complaints from coverity. See 1b065d07df196

commit e193c959dede9e3d5e8d5f325a87619ca1258643
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 19:42:20 2013 -0400

    test_evutil_rtrim: add another missing check.

commit 82b6956c1bdb2802fc39b4ed4a0f409098ee08d1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 19:39:35 2013 -0400

    Finalize tests: add a missing check

commit f314900dfdf78e03dfa7de8ee0a03323e7a4d0e9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 19:38:48 2013 -0400

    DNS tests: add a missing check

commit 87cd6f0186e23cc429f541a1647fb0eeae0117a4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 19:35:56 2013 -0400

    Fix some crash-on-fail cases in DNS regression tests
    
    Found by coverity.

commit eba4506abf38a863edad0288db6d2cc1a8412599
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 19:33:45 2013 -0400

    Add missing check to test_evbuffer_file_segment_add_cleanup_cb

commit 776588468ba7afd17e721227b41723bddb8a2d04
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 19:32:21 2013 -0400

    Fix a logic error in test_evbuffer_freeze

commit 1104d0bee9d85306184fb5bbcef64bf1f00c0a24
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 19:31:26 2013 -0400

    Fix a (failure-only) null dereference in the unit tests

commit 7080d55c49f5f651aa6ef4ad7380fe8953dbb727
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 19:28:53 2013 -0400

    Use void casts to suppress some "unchecked return value" warns

commit 44b2491bcd676f7089042c2e524a06364232df85
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 19:23:36 2013 -0400

    sample/le-proxy: Fail more gracefully if opening listener fails

commit f22049e35977f7974437ea251dfa0033497e046e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 19:17:08 2013 -0400

    Fix an unlikely but possible error case for http connections
    
    Found by coverity

commit 69b5c647045bcbdbd9bb8e79ff79ba8dcd9ff36a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 19:08:42 2013 -0400

    Move event_debug_note_teardown_ before mm_free.
    
    This isn't a bug, since only the pointer value of ev was used, but
    it's probably best not to tempt fate.  Found by coverity.

commit 1b065d07df1968a8584ac4eafcb4c294b0251d53
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 19:06:58 2013 -0400

    Add some assertions to please coverity.
    
    In event_process_active_single_queue, EVLIST_INIT must be set on any
    event that uses one of the event-only closures, and so "ev" will be
    set in those cases.  But coverity's worried here (CIDs numerous).  So
    instead, just add the assertions that should make it happy.

commit 197abd8bf32767d346c4cde63cf56afb08e4f327
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 17:51:21 2013 -0400

    Fix compilation

commit f391b0030c9a3a62e5c4a4d00e35b7f9665db1a7
Merge: e639a9e1 2bbb5d76
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 17:29:34 2013 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            arc4random.c

commit 2bbb5d7612d3f9f12acb02e15127e676ff35d669
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 6 17:06:23 2013 -0400

    Add evutil_secure_rng_set_urandom_device_file
    
    This experimental function is needed for some seccomp2 hackery to
    work, and should have no effect for systems that don't use it.

commit e639a9e10fe4555c035830ce171db9259bebddaf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 1 10:40:08 2013 -0400

    Remove an unreachable return statement in minheap-internal.h
    
    Found by Brian Utterback; see http://bugs.ntp.org/show_bug.cgi?id=2446

commit d4095146aff755f23df579cf0a5a376480ef2b5d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jul 31 22:23:16 2013 -0400

    Avoid leaking segment mappings when offset is not a page multiple
    
    Found by Bob / Black Hole on the mailing list.

commit fbc323b76b338119dad640f733ee100a88435501
Author: Maxime Henrion <mhenrion@appnexus.com>
Date:   Wed Jul 31 15:02:07 2013 +0000

    Add checks for evhttp_connection_get_server() in unit tests.
    
    They validate that this function behave as expected; that is, it returns
    NULL for outgoing connections, and returns the HTTP server object that
    received the connection for incoming ones.

commit a7f82a314f8848aca82edf6d1a310f444fb99956
Author: Maxime Henrion <mhenrion@appnexus.com>
Date:   Wed Jul 24 20:50:05 2013 +0000

    Add evhttp_connection_get_server().

commit 600c58656ab45c424ca6de398f68661a6b89f0c7
Merge: 25c350b2 1c77fbb0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 30 10:44:42 2013 -0400

    Merge remote-tracking branch 'ellzey/bev_ratelimit_get_token_cfg'

commit 25c350b29e542130958c420655454b177cf919bd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 29 09:10:24 2013 -0400

    Add Maxime Henrion to README

commit 01a6ef78b97e85fea4220d9086615261affeedea
Merge: c3260cb9 b8f59807
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Jul 21 13:27:49 2013 +0200

    Merge remote-tracking branch 'origin/patches-2.0'

commit b8f59807ceb66ad0408182fd0b70a971137ad4ae
Author: Frank Denis <github@pureftpd.org>
Date:   Sat Jul 20 14:02:49 2013 -0700

    libevent/win32_dealloc() : fix sizeof(pointer) vs sizeof(*pointer)

commit 1c77fbb0dce186451c0b87e7a06a496eb01e99bc
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Thu Jul 11 16:26:43 2013 -0400

    Pass and return const for bufferevent_get_token_bucket_cfg

commit 4b3d5af8e2ccc5a6ec29922869bdeac40d15c854
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Thu Jul 11 12:31:39 2013 -0400

    Add function to fetch underlying ratelimit cfg
    
    bufferevent_get_token_bucket_cfg() will return the struct ev_token_bucket_cfg
    for a bufferevent if available.

commit c3260cb97497005767f31d4ad89415d83c062ea3
Merge: 0fa107d8 1ea1f26b
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Jul 11 06:57:16 2013 -0700

    Merge pull request #69 from makotokato/clang
    
    Don't use return since return type is void and build error occurs using ...

commit 1ea1f26b4127f5eeb75d919f56b3ea2cc40ae283
Author: Makoto Kato <m_kato@ga2.so-net.ne.jp>
Date:   Wed Jul 10 11:02:43 2013 +0900

    We should return after arc4random_buf()

commit 838161dc01b889247e81467215b15087105b656b
Author: Makoto Kato <m_kato@ga2.so-net.ne.jp>
Date:   Tue Jul 9 11:50:33 2013 +0900

    Don't use return since return type is void and build error occurs using clang

commit 0fa107d8cbc652dacb722fcf650bb6b3ffbe8dac
Author: Mobai Zhang <mzhang@appnexus.com>
Date:   Tue Jul 2 16:01:02 2013 -0400

    Added event_base_get_num_events()

commit 90a8c539aa633ce7a2a3001ede09f450f89d5fc2
Merge: 36ab0721 387e6b90
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 10 15:17:34 2013 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 387e6b90c32daa34d0fc7b02833499b755e4ebea
Merge: 6e496961 363388a0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 10 15:16:13 2013 -0400

    Merge remote-tracking branch 'public/pr/79' into patches-2.0

commit 36ab0721be9328408da7eb424a36bcd94813288a
Merge: 0b05aa65 e1766a1b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 10 10:47:35 2013 -0400

    Merge branch '21_evdns_log_debug'

commit 0b05aa65916334cd8cec9de21d6d6df7dd7dadeb
Merge: c307a250 6e496961
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 10 10:47:28 2013 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 6e4969614723a46061d6a98162480de209fd03a0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 10 10:38:12 2013 -0400

    Document that arc4random is not a great cryptographic PRNG.

commit e35b540832825437827addeb7ecd04c3e14d81bb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 10 10:33:56 2013 -0400

    When we seed from /proc/sys/kernel/random/uuid, count it as success
    
    Found by Joseph Spadavecchia

commit 363388a0435391abd805d3bcbc6c5365b1c44df5
Author: Greg Hazel <ghazel@gmail.com>
Date:   Wed May 29 14:19:14 2013 -0700

    restore the comment

commit f8d7df859148905195054ed1255f46970039a34f
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 11 03:53:11 2013 +0400

    Fix SEGFAULT after evdns_base_resume if no nameservers installed.
    
    If there is no nameservers installed, using
    evdns_base_nameserver_ip_add(), than evdns_base_resume() will SEGFAULT,
    because of NULL dereference in evdns_requests_pump_waiting_queue()
    
    Conflicts:
            evdns.c

commit e1766a1b6daf09c888f5e3fd98f7597fa7c9d5f2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 29 16:26:50 2013 -0400

    Actually use the log facility for reporting evdns problems.
    
    Fixes issue #63.  Also refactors the evdns logging and log backend a
    bit, so that it wastes a little less code.

commit c307a250d4094aa5d82065bdf52fc1ec311aa072
Merge: 0ac2ed65 e826f19e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 29 13:32:47 2013 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit e826f19e05b65ffea1a1699160cee7516962c939
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 29 13:30:56 2013 -0400

    Use windows vsnprintf fixup logic on all windows environments
    
    Previously I'd relied on mingw to provide a vsnprintf with a
    conformant return value.  But it appears that some mingw
    environments don't do that.

commit 0ac2ed655aa99d4927fd1f9d740d789cfb380ad0
Merge: 3dc2d8ab 7e876df7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 28 11:30:14 2013 -0400

    Merge remote-tracking branch 'origin/pr/62'

commit 3dc2d8ab83876f6cccf1e44aaa6134c80f2f6152
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 28 10:14:51 2013 -0400

    Remove a debugging assert that should not have been left in

commit dbc9cd4dd1ccabfe1e3b2819c659eb8d63173224
Author: Maxime Henrion <mhenrion@appnexus.com>
Date:   Thu May 23 16:31:53 2013 +0000

    Fix locking in bufferevent_get_options_().

commit 31db8a02bd74957f9ae836a38043cd9589c2d325
Author: Maxime Henrion <mhenrion@appnexus.com>
Date:   Thu May 23 16:29:17 2013 +0000

    Fix a double close() bug in evhttp when the underlying bufferevent uses BEV_OPT_CLOSE_ON_FREE.

commit 1f29b18f51cb7080c1ffe5f51557979b71451b6a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 20 12:30:40 2013 -0400

    Avoid redundant syscall if making a socket cloexec twice
    
    I got the idea from Maxime's last patch.

commit 42c03da9b994e33b7a20ee4d4e70b0a903e230ac
Author: Maxime Henrion <mhenrion@gmail.com>
Date:   Mon May 20 12:23:53 2013 -0400

    Avoid redundant syscall to make a nonblocking socket nonblocking

commit 9b5a527f5bf898250a797dde59cadb4f64e8967a
Author: Maxime Henrion <mhenrion@appnexus.com>
Date:   Thu May 16 16:38:39 2013 +0000

    If evsel->del() fails, don't leave the evmap in an inconsistent state.
    
     This fixes assertion failures in cases where epoll() fails with EBADF
     -- the root cause for which is as of yet unknown. It seems something
     (OpenSSL?) is closing the file descriptor under our feet.

commit 7e876df71b5ac8355050018a0a130002a88801cb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 13 19:50:30 2013 +0000

    Fix dns/leak_resume_send_err test.
    
    Because we don't cancel request,
    and want our callback to recieve DNS_ERR_SHUTDOWN,
    we use deferred callback, and there was
    - one extra malloc(),
      @see reply_schedule_callback()
    - and one missing free
      @see request_finished() (req->handle->pending_cb = 1)
    than we don't need to count in testleak_cleanup()
    
    So just decrement allocated_chunks to 2,
    like we already take care about it.

commit 1cd9ff591deca4bc39ae84985ea0c5b157faba2b
Author: Azat Khuzhin <azat@libevent.org>
Date:   Mon May 13 19:20:42 2013 +0000

    Add tests for evdns_base_resume().
    
    - leak_resume
    - leak_cancel_and_resume
    - leak_resume_send_err
    - leak_cancel_and_resume_send_err

commit 14971a833c18fbab0819322f4e7b7a29f0cc6448
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sat May 11 03:53:11 2013 +0400

    Fix SEGFAULT after evdns_base_resume if no nameservers installed.
    
    If there is no nameservers installed, using
    evdns_base_nameserver_ip_add(), than evdns_base_resume() will SEGFAULT,
    because of NULL dereference in evdns_requests_pump_waiting_queue()

commit 8ab612e396c286c753b23f974430cad0cd803147
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 11 22:21:30 2013 -0400

    Whoops. It is gdi.lib, not gdi32.lib. (github issue #61)

commit d3d999a116bfb908edfb4c046b4c806d59dfb10d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri May 10 20:22:56 2013 +0400

    Missed lock acquire/release in event_base_cancel_single_callback_()
    
    Call backtrace:
    ...
    event_queue_remove_active()
    event_callback_cancel_nolock_()
    event_base_cancel_single_callback_()
    event_base_free_()
    event_base_free()
    ...
    
    Fix for e9ebef83

commit 5ba8ab76e95e8abe42303e57375fef99c02b32ed
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 10 21:38:26 2013 -0400

    Fix test compilation with nmake: add the gdi.lib dependency
    
    ACK: efekty

commit ef820dbfb376a2cc4797fcd80d1f6d4a11d1f48c
Merge: f8d80a28 5c710c03
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 7 10:03:28 2013 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 5c710c03625d620811cf6b97a37b666e0424e88e
Author: Belobrov Andrey <belobrovap@infotecs.ru>
Date:   Mon May 6 18:15:03 2013 +0400

    Checking request nameserver for NULL, before using it.

commit f8d80a285cf941505277d9060d0357b5b7e543d2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 1 23:12:08 2013 -0400

    Bump version to 2.1.3-alpha-dev

commit 85a40040d11d9f0cd5353b32a3675d01bbd7f188
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 1 13:37:57 2013 -0400

    Add regress_finalize to makefile.nmake

commit 57cbfcd67cc0d9d2549228ada97fd1362c18cfe7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 1 10:28:42 2013 -0400

    Set a release date

commit 5bc290e2478b3c3e396850e630a5577c580faa9a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 1 10:04:08 2013 -0400

    Make http/connection_retry off-by-default

commit f2925d78b690bb3f17236483d6c60ab868c60e87
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 30 22:57:25 2013 -0400

    Fix a windows compilation regression
    
    This is github issue #57; reported by "efekty". I assume the compiler
    is MSVC.

commit 9e3a99cad77c13611bcd0d1f93f3d4e8ecd97038
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 30 20:09:52 2013 -0400

    Fix a bug in fixing a bug in out-of-tree test-dumpevents

commit b48c7bf8a627bae84266e07f08a191709a090bab
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 30 14:40:50 2013 -0400

    Make regress_finalize work with malloc replacement disabled

commit cbfc35f6b9395805feeaace0b285d50ff6b1fe6c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 30 14:26:47 2013 -0400

    Fix some out-of-tree build bugs

commit dd4be76f8316a3eb899b4cfe9479bc7619db44f0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 30 12:02:49 2013 -0400

    Incremement version to 2.1.3-alpha

commit c6561efbce64c3e76a389357f8bde0b10f448f0c
Merge: d9917c49 959c1428
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 30 12:02:19 2013 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit d9917c49583f87fb813f0da6f04040631ac85b9f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 30 11:52:55 2013 -0400

    Add acknowledgements to readme

commit e6cdd17b5d4486a134bd48a1756e1776824ea45e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 30 11:44:39 2013 -0400

    Start editing the changelog for 2.1.3-alpha

commit 8415b69d42b0c719261f31470cbdba7fe4615a76
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 30 10:22:40 2013 -0400

    Mark the finalize stuff as experiemental in case it needs to change

commit 959c1428ccd3f42f519d71fd6f50235fd769ef06
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 30 11:42:53 2013 -0400

    Start a changelog for Libevent 2.0.22-stable

commit 920a5e69b0edf59ed5e7bd3b2cb040b6c8974611
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 26 19:15:50 2013 -0400

    Clarify an important point about event_base_foreach_event()

commit 702c9aa40370f3770ab2e81648cf29ba5ce2466e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 26 19:14:05 2013 -0400

    Fix a bug in the new main/event_foreach test
    
    It wasn't making sure that the events weren't internal.

commit d5967397b0f321a758fa94d2f0d1b9ed7adcb178
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 26 17:51:33 2013 -0400

    More unit tests for initializing common timeouts.
    
    Try with: misformed usecs in inputs, and with initializing common timeouts
    from other common timeouts.

commit f09629eac53bc3c122a4319edf1c5b4f5315ec1f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 26 17:46:33 2013 -0400

    A test for event_get_assignment()

commit 30ea2910d5c4e529bc4d993c0657f3c98ea13582
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 26 17:28:46 2013 -0400

    Unit tests for event_base_gettimeofday_cached() and event_base_update_cache_time()

commit 0b096efee547a1998eb85839a4375c729678bc55
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 26 13:50:22 2013 -0400

    New tests for event_base_foreach_event()
    
    Our dump-events code had exercised this a bit, but only via the
    nonlocking backend. Also, nothing was checking the "Search for a
    specific event" code.

commit a153874d18806733b14bd45df60f0de6716e77b3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 26 13:49:45 2013 -0400

    New test for active_later->active transition on event_active
    
    When event_active is called, an active_later event is supposed to become
    active now.  We had lacked a test for that.

commit 3555befd1c0b624ea602d02e81563978c129079c
Merge: b1b054f0 25aac697
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 26 12:27:05 2013 -0400

    Merge branch '21_deadlock_fix_v2'

commit 25aac697808c9ce56fee09c8457f3706381bb3a6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 26 12:00:17 2013 -0400

    Remove a no-longer-true XXXX comment.

commit 5d11f4f39ae9bb38f4eb9318068d605dd5d20e73
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 26 11:57:40 2013 -0400

    Make the event_finalize* functions return an error code

commit a800b913ac473b6c9bd4b1765f4efbea4bae1393
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 26 11:36:43 2013 -0400

    More documentation for finalization feature

commit 4ea4c6a93e32f15a41799771b14510a9be33552f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 10 13:44:23 2013 -0400

    Remove bufferevent_del_generic_timeout_cbs as now unused

commit e9ebef83a068ca938887624042461d614070071e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 9 21:14:52 2013 -0400

    Always run pending finalizers when event_base_free() is called
    
    There was actually a bug in the original version of this: it tried to
    run the finalizers after (potentially) setting current_base to NULL;
    but those finalizers could themselves (potentially) be invoking stuff
    that needed to know about the current event_base.  So the right time to
    do it is _before_ clearing current_base.

commit 02fbf68770d3dcb864c867124e159b3680036206
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 9 18:16:13 2013 -0400

    Use finalization feature so bufferevents can avoid deadlocks
    
    Since the bufferevents' events are now EV_FINALIZE (name pending),
    they won't deadlock.  To clean up properly, though, we must use the
    finalization feature.
    
    This patch also split bufferevent deallocation into an "unlink" step
    that happens fast, and a "destruct" step that happens after
    finalization.
    
    More work is needed: there needs to be a way to specify a finalizer
    for the bufferevent's argument itself.  Also, this finalizer business
    makes lots of the reference counting we were doing unnecessary.
    
    Also, more testing is needed.

commit 9d893c97fa8796e312731f2d0ac0d0336deffdc0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 9 18:15:08 2013 -0400

    Add some verbose notes to bufferevent unit tests

commit 8eedeabe50563ac6d679700ca9856a67875ceb39
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 28 14:13:19 2013 -0400

    Implement event_finalize() and related functions to avoid certain deadlocks

commit b1b054f0646386ebb3c87585d5991dbc370eabfd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 26 12:12:08 2013 -0400

    Make all tests pass under EVENT_DEBUG_MODE=1
    
    The fix was easy: the tests that were failing were those tests that
    also enabled debug mode themselves. So, let them know when
    EVENT_DEBUG_MODE is on, so they won't do that.

commit b3aca5d96c40d9660af24b960cd49f24a63c5a9e
Merge: ed26561b 54cc8005
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 25 15:13:24 2013 -0400

    Merge branch '21_http_error_cb_squashed'

commit 54cc8005363d4a849b9dd156fe52396210de62bb
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 21 17:01:31 2013 +0400

    Drop extra header http_struct.h from regress_http.c

commit 862c217a29c37a7d98009d5bf7f603e56125641d
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 22 14:35:47 2013 +0400

    Add test for EVREQ_HTTP_REQUEST_CANCEL into http_cancel_test()

commit 7b077194cc8fd38808e3f210fc090aedb5df25d5
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Mar 21 13:55:40 2013 +0400

    Add new error_cb for actual reporting of HTTP request errors.
    
    It is useful to know why you callback called with NULL (i.e. it failed),
    for example if you set max_body with evhttp_connection_set_max_body_size()
    you must know that it failed because of body was longer than this size.
    
     (Commit message tweaked by Nick)

commit ed26561b0c9421f1715d5db0d64a3b9bcb16ddad
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 25 14:48:56 2013 -0400

    Fix another warning introduced in 0c6ec5d8

commit eeb700ce313028229e1444016c281817328e292f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 25 14:46:46 2013 -0400

    Fix a warning introduced in 0c6ec5d8

commit 6b94ffcec532038cdebacd1e9e78a7a6276ad6a5
Merge: eb6b0c1f 66dacfa2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 25 13:54:19 2013 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            configure.ac

commit 66dacfa2a58602d82e0413c8217ec38c9871d5cf
Merge: 773b0a5d 74d4c44c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 25 13:43:49 2013 -0400

    Merge remote-tracking branch 'origin/pr/36' into patches-2.0

commit eb6b0c1f90136b374dfa9afd532fde4020ac7a67
Merge: 5e6fa2a3 6b7fa620
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 25 10:47:16 2013 -0400

    Merge branch '21_evdns_disable_when_inactive'

commit 6b7fa620e8b66aad6c17cda7c9a36e4ba6834f12
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Mar 27 20:15:46 2013 +0400

    evdns: New flag to make evdns not prevent the event loop from exiting
    
    Here is the brief description of problem:
    When you are use evdns to resolve domains to IP adresses (see
    ./sample/dns-example) you loop never returns from event_base_dispatch(),
    and because of this the program will never terminated.
    
    Because existing programs may be depending on the old behavior, we
    only apply the fix when evdns_base_new() is created with a new flag -
    EVDNS_BASE_DISABLE_WHEN_INACTIVE.
    
     (Commit message edited by Nick while squashing the branch.)

commit 5e6fa2a3ab69050c48a657d4a6a1f8b49fa61146
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 24 13:23:15 2013 -0400

    event_base_update_cache_time should be a no-op if the loop isn't running

commit 29af65ebfc155a89d4e87f934145c1d346f82df9
Author: Alexey Ozeritsky <aozeritsky@yandex-team.ru>
Date:   Sun Apr 14 15:41:44 2013 +0400

    https-client: code cleanup

commit 902bf21e589d06c57e791d054e4f0d47df746d20
Merge: c5887f73 1c3147f5
Author: Alexey Ozeritsky <aozeritsky@yandex-team.ru>
Date:   Sun Apr 14 15:12:22 2013 +0400

    Merge branch 'master' of https://github.com/libevent/libevent into https

commit 1c3147f5e7b398fc514d2cef8c9a40c036edf8fd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 10 18:03:16 2013 -0400

    Add a test with an active_later event at event_base_free time.

commit 95acdaa353419fc53e4324f34fa7e591f5bb5b38
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 10 17:56:54 2013 -0400

    Another tweak to https-client.c

commit 8a90a850fccdd93550b12a1d37e41b1b732fccbe
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 10 13:53:44 2013 -0400

    Remove http_struct.h usage in sample/https-client.c

commit 2fad0f3d52c6c7511231b1b2eced484306835a52
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 5 15:06:54 2013 -0400

    Add an environment variable (EVENT_DEBUG_MODE) to run unit tests in debug mode
    
    Not all tests currently pass with debug mode on.

commit 33398008547ca15eaae5e9b23eec7208ba65c81c
Merge: e834006b 49146200
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 1 11:59:26 2013 -0400

    Merge branch '21_empty_strlcpy'

commit 4914620025a7e457fc4c3a936441fce681bb6c38
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Mar 31 14:05:26 2013 -0400

    Do not build strlcpy.c when it will have no code.

commit e834006b6157f176f9703cb18bab4c5e9c60713e
Merge: 81ea0c4c cf8d1cdb
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Fri Mar 29 09:39:52 2013 -0700

    Merge pull request #75 from altf4/master
    
    Header update to specify evbuffer_pullup() behavior

commit cf8d1cdb20555165b617cffb3cb89b89ff4260e7
Author: Dan Petro <dan.petro@datasoft.com>
Date:   Fri Mar 29 09:28:35 2013 -0700

    Specify return behavior in header for evbuffer_pullup() in corner case
    
    Function returns NULL when told to pullup more data than exists

commit 81ea0c4c7ae19f9b4e9142414e3db1d7b08e3b10
Merge: 1bc4a8f9 4db9da6b
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Mar 28 05:57:07 2013 -0700

    Merge pull request #47 from ppelleti/https
    
    HTTPS example adapted from Catalin

commit 1bc4a8f99d6752c6259c86beec4f2fef34f0d584
Merge: f935e215 773b0a5d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 25 21:14:10 2013 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 773b0a5d886534b057f5589814a284dcd85c73d8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 25 21:12:49 2013 -0400

    Fix a typo in a comment in buffer.h. Spotted by Alt_F4

commit f935e2159a128f07a2172ae139236e7f0b415e40
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 15 09:33:28 2013 -0400

    build test/test-script.sh on systems with a less-featureful $<

commit 787fd7489f20c79b3d00fd2199a339cf98f68df2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 15 09:33:13 2013 -0400

    Make --disable-libevent-regress work again

commit c5887f73b707a7e95b986a0c5eede80ef7741d09
Author: Alexey Ozeritsky <aozeritsky@yandex-team.ru>
Date:   Mon Mar 11 18:31:19 2013 +0400

    POST supported, args supported

commit 9443868d55a829cd66a2dce24daad84c5f1ca2ed
Author: Nate Rosenblum <nater@maginatics.com>
Date:   Tue Mar 5 11:29:33 2013 -0800

    Double-check next timeout when adding events
    
    When resuming the system from a suspended state, the ev_timeout field
    of a scheduled timer event may be in the past. This leads to
    unexpected behavior when scheduling a short-duration timer event
    immediately after returning from suspension, because the new event
    does not land on top of the timeout minheap and so the event loop
    (blocked on a possibly long-duration timeout) is not notified.
    
    This patch checks for this condition and, if it obtains, notifies the
    event loop.

commit 13676535c83448b957ae00772c13f823cc9d3503
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 1 12:01:42 2013 +0400

    Test: decoding just part of string with evhttp_decode_uri_internal()

commit de8101a884ae6d815d6006829fa4d3c3e8649a52
Author: Azat Khuzhin <azat@libevent.org>
Date:   Fri Mar 1 12:00:24 2013 +0400

    Move prototype of evhttp_decode_uri_internal() to http-internal.h
    
    Make it non static, that can be called from tests

commit e1903e3ace4874dcb32458cd187f7361edf1962c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Feb 28 23:10:02 2013 +0400

    uri decode: changed the test for the existence of the next character
    
    Fix for 64b6eceaba1a4
    
    More info here
    https://github.com/azat/libevent/commit/64b6eceaba1a40ab0b175fa9fd9329d3e978ce6e#commitcomment-2714685

commit 64b6eceaba1a40ab0b175fa9fd9329d3e978ce6e
Author: Azat Khuzhin <azat@libevent.org>
Date:   Thu Feb 28 17:19:44 2013 +0400

    uri decode: fix for warning "use of uninitialised value"
    
    This patch add check in evhttp_decode_uri_internal() that next 2 symbols
    are exists in array of chars for decoding, if don't have two next 2
    symbols don't try to decode '%FF'

commit 4db9da6bbf8ade7b126840393173b8bd053b3389
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Wed Feb 27 21:12:53 2013 -0800

    pull in wildcard matching code from cURL
    
    Now, https-client accepts both:
    
    https://ip.appspot.com/ (matching wildcard certificate)
    https://github.com/     (matching non-wildcard certificate)
    
    but still rejects
    
    https://www.kegel.com/  (non-matching wildcard certificate)
    
    which should match the behavior of these sites in a web browser.

commit 6021cb5027e6e0d818671540fabec735008523d2
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Wed Feb 27 21:19:16 2013 -0800

    avoid sign mismatch warning in openssl_hostname_validation.c
    
    sample/openssl_hostname_validation.c: In function 'matches_common_name':
    sample/openssl_hostname_validation.c:80: warning: comparison between signed and unsigned integer expressions
    sample/openssl_hostname_validation.c: In function 'matches_subject_alternative_name':
    sample/openssl_hostname_validation.c:124: warning: comparison between signed and unsigned integer expressions

commit 64d9f161fe6c476fc7a335187527e98d3c668c1c
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Wed Feb 27 17:16:27 2013 -0800

    use iSECPartners code to validate hostname in certificate
    
    The problem is that if you go to a website whose certificate does not
    match its hostname, it should fail.  Try this in a web browser for
    https://www.kegel.com/ for example.  Your web browser will say the
    certificate is for *.pair.com, not for www.kegel.com, and won't let
    you visit it without clicking through a bunch of scary warnings.
    
    However, prior to this commit, https-client was happy to fetch
    https://www.kegel.com/ without complaining.  That is bad.  Now, with
    this commit, it will properly complain, which is good:
    
    pelletier@chives:~/src/libevent/sample$ ./https-client https://www.kegel.com/
    Got 'MatchNotFound' for hostname 'www.kegel.com' and certificate:
    /C=US/postalCode=15203/ST=Pennsylvania/L=Pittsburgh/street=Suite 210/street=2403 Sidney Street/O=pair Networks, Inc./OU=Provided by pair Networks, Inc./OU=PairWildcardSSL $250,000/CN=*.pair.com
    some request failed - no idea which one though!
    error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed
    ppelletier@chives:~/src/libevent/sample$
    
    It will still succeed for sites with an exactly-matching certificate,
    such as https://github.com/ and that is also good!
    
    However, the problem is that the iSECPartners code doesn't handle
    wildcards, which means we reject https://ip.appspot.com/ even though
    it is perfectly legitimate, because we don't understand the wildcard:
    
    ppelletier@chives:~/src/libevent/sample$ ./https-client https://ip.appspot.com/
    Got 'MatchNotFound' for hostname 'ip.appspot.com' and certificate:
    /C=US/ST=California/L=Mountain View/O=Google Inc/CN=*.appspot.com
    some request failed - no idea which one though!
    error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed
    ppelletier@chives:~/src/libevent/sample$
    
    So, we need to fix this.  In other words, "to be continued..."

commit aacd674c94719f852d1b2a1591266c28b4b42df2
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Tue Feb 26 00:06:50 2013 -0800

    use Debian's default root certificate location
    
    as suggested here:
    http://archives.seul.org/libevent/users/Feb-2013/msg00034.html
    
    although curl's acinclude.m4 reveals many other possibilities:
    
    dnl /etc/ssl/certs/ca-certificates.crt Debian systems
    dnl /etc/pki/tls/certs/ca-bundle.crt Redhat and Mandriva
    dnl /usr/share/ssl/certs/ca-bundle.crt old(er) Redhat
    dnl /usr/local/share/certs/ca-root.crt FreeBSD
    dnl /etc/ssl/cert.pem OpenBSD
    dnl /etc/ssl/certs/ (ca path) SUSE
    
    And none of these cover Windows :(

commit 5754d96a6ec877e0d0100da88cded1d9f29e544d
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Mon Feb 25 23:43:05 2013 -0800

    better handling of OpenSSL errors

commit 42d7441ac43ded0774ed089f6dc414ae5225e72f
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Mon Feb 25 23:14:26 2013 -0800

    https-client was putting newlines at 256-byte boundaries
    
    presumably this was meant to put a ">" before every line, but that
    isn't what it does, since evbuffer_remove is simply returning
    fixed-size chunks.  So, when retrieving a document of more than 256
    bytes (e. g. any nontrivial document), we got "> " and newlines thrown
    in at very arbitrary places.

commit bf31fa5d30d7fbe5d224ee4575cf5e10d1265933
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Wed Feb 27 16:31:17 2013 -0800

    use ${OPENSSL_LIBS} instead of -lssl -lcrypto
    
    This made the difference between segfaulting and not segfaulting for
    me when I run https-client, when I've built libevent using an OpenSSL
    in a non-standard location.
    
    In the same spirit as 1d9d5110a4aebf5833f6fd78bd0252affde0f4d0 and
    d70af27d0152d0a87a25127faf215604beb8ffe0.

commit be46c99b89428c0d56e57b376256f0eee56add4a
Author: Catalin Patulea <catalinp@google.com>
Date:   Tue Feb 19 12:22:31 2013 -0500

    Add sample/https-client.c, an example of stacking evhttp as a client on top of bufferevent_ssl.
    
    Signed-off-by: Catalin Patulea <catalinp@google.com>

commit 87c56727b61e48c102d21f1bb6477de8ec001869
Merge: 97094614 c9ad3af2
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Tue Feb 26 15:22:03 2013 -0800

    Merge pull request #41 from ppelleti/winsock-errs
    
    FormatMessage for winsock errors

commit c9ad3af229781b401360e21ff0f3e19c80a72498
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Mon Feb 25 20:13:01 2013 -0800

    test filling up the hash table a bit

commit 4ccdd53f78b200651ba0291466551e16486def24
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Mon Feb 25 19:02:32 2013 -0800

    use hashtable instead of linked list to cache winsock errors
    
    as discussed here:
    https://github.com/libevent/libevent/pull/41#issuecomment-13611817

commit 2078e9b46aa25cb3131acc9e575939533a77eb36
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Thu Feb 14 20:14:37 2013 -0800

    make sure caching works, and we don't leak memory

commit 0c6ec5d816189805c6fafdf385b171cbc3f67ff3
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Thu Feb 7 17:20:08 2013 -0800

    use FormatMessage for winsock errors
    
    as discussed here:
    http://archives.seul.org/libevent/users/Feb-2013/msg00004.html

commit 729651260db2a2ec0fafe06586c570febe69e60d
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Thu Feb 7 17:06:49 2013 -0800

    a program to print out the error strings for winsock errors

commit 97094614578b3f4e5c462ce9e3afee2a9705698c
Merge: 96150dd0 b6182042
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 14 14:13:11 2013 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit b618204216235d5998080c659c8ad53185fdf206
Author: Greg Hazel <ghazel@gmail.com>
Date:   Thu Feb 14 09:54:56 2013 -0800

    fix #73 and fix http_connection_fail_test to catch it

commit 96150dd0c6743cd8082860a8428e117fdbbef6fa
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 13 11:38:57 2013 -0500

    Unit test for event_remove_timer with EV_PERSIST.
    
    Patch from dcicppin on sourceforge.

commit 5623e803713507daec7e7109fbc573729c90501e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 12 15:10:50 2013 -0500

    Make event_remove_timer behave correctly with persistent timers

commit 74e52db45d35b89997266b9657f36a4f022697d1
Merge: 2863c837 a452811e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 11 11:25:25 2013 -0500

    Merge remote-tracking branch 'ppelleti/nmake-clean-exes'

commit 2863c837007c9f28ae542663a6098c91e704b3ca
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 8 22:10:05 2013 -0500

    Avoid using $(top_srcdir) in TESTS.
    
    Newer automakes don't like this.

commit ebf278b28d89ea105e4ee33a5e24fc5d68b0f6f8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 8 13:03:29 2013 -0500

    Use AC_CONFIG_HEADERS in place of AM_CONFIG_HEADERS for autmake 1.13 compat
    
    Patch from cazfi.

commit d670e3bd35063300b358d218bd02dbf48e74fe04
Merge: 29015427 a55514ee
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 8 22:09:00 2013 -0500

    Merge remote-tracking branch 'origin/patches-2.0'
    
    This is an "ours" commit: I'm not taking the recent autotools changes
    from patches-2.0, since they'd conflict with master.

commit a55514eeed96b9bf9a16fbed1a709dfcce5a6080
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 8 22:08:18 2013 -0500

    Avoid using top_srcdir in TESTS-new automakes do not like this

commit 0c79787a979330bff7e2f8d9dd25c9a27bfd6edb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 8 22:07:43 2013 -0500

    Rename configure.in to configure.ac to appease newer autoconfs

commit 817ea36924ca1248672810fd57dd3e337db13401
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 8 13:03:29 2013 -0500

    Use AC_CONFIG_HEADERS in place of AM_CONFIG_HEADERS for autmake 1.13 compat
    
    Patch from cazfi.

commit a452811e41807bd1b3cc3b9e679f5142fd3e2d04
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Wed Jan 30 16:07:30 2013 -0800

    "buffer" spelling

commit 974bfa0782d7cb42db72fe758aff8a9ba1520297
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Thu Feb 7 17:14:18 2013 -0800

    remove all exes on "make clean", not just regress.exe

commit 290154271460e61f07dbcaaa3bf80914742236ef
Merge: 19583a5f 0a5eb2eb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 5 15:09:31 2013 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 0a5eb2eb5cd8adc30727787ae7859f20897f79c1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 5 15:07:32 2013 -0500

    Fix a locking error in bufferevent_socket_get_dns_error.
    
    Patch from Ka-Hing Cheung.

commit 19583a5ffe4f75706a314657399a07d5f0b428e7
Merge: 2ecd8947 1258614f
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Mon Feb 4 13:50:58 2013 -0800

    Merge pull request #30 from ppelleti/valgrind-epoll
    
    avoid valgrind false positive by zeroing epoll_event

commit 2ecd894725e167dcc1f22f9292f98e41299df6cc
Merge: f0a68a25 9ec88bdf
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Mon Feb 4 13:49:08 2013 -0800

    Merge pull request #39 from azat/fix-http-for-ipv6
    
    Fix ipv6 support for http. When URL contain domain, not IP address.

commit f0a68a25ca82691557d71156f8737571e86fa6ed
Merge: 0dda56a4 80e220ee
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Mon Feb 4 13:33:10 2013 -0800

    Merge pull request #37 from ppelleti/fix-indentation
    
    fix some hinky indentation in evhttp_make_request

commit 0dda56a48e940826f173b5068bff9777a40de2cf
Author: Nicholas Heath <nicheath+gitcommit@gmail.com>
Date:   Sun Feb 3 19:08:37 2013 +0000

    Preliminary changes for Minix3.

commit 9ec88bdf5f2a5d38c918469da5e59aded39ce32c
Author: Azat Khuzhin <azat@libevent.org>
Date:   Sun Jan 27 02:17:02 2013 +0400

    Add regress test ipv6_for_domain.
    
    Written for commit 71e709c7829275a594f767b27468b1b52e8b5bb9.
    Fix ipv6 support for http. When URL contain domain, not IP address.

commit 42aaf4dcf74a046fa30878d2780471e2acad800f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 23 16:55:09 2013 +0000

    Implement EVUTIL_ERR_IS_EAGAIN on windows.

commit 71e709c7829275a594f767b27468b1b52e8b5bb9
Author: Azat Khuzhin <azat@libevent.org>
Date:   Wed Jan 23 02:45:32 2013 +0400

    Fix ipv6 support for http. When URL contain domain, not IP address.
    
    Before this patch socket created before domain was resolved, and it
    always create with AF_INET (ipv4), but we must create socket only after
    domain was resolved to understad which protocol family have domain
    address.
    
    Thank to Patrick Pelletier, who found this bug.

commit f324b1dffc443b3c03dda8142177b64306775dca
Merge: 0c2bacca c322c207
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 22 17:10:07 2013 +0000

    Merge remote-tracking branch 'origin/patches-2.0'

commit c322c2077e2d16f64ed3a90f74ad714842600624
Author: Gyepi Sam <gyepi@users.sourceforge.net>
Date:   Tue Jan 22 16:59:07 2013 +0000

    Fix a mistake in evbuffer_remove() arguments in example http server code
    
    (commit message by nickm)

commit 80e220eef795832d6015bfe4ea676c6e87f18550
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Fri Jan 18 20:25:41 2013 -0800

    fix some hinky indentation in evhttp_make_request

commit 0c2bacca43ffe452d4f5cdc4b57fd29a7795777d
Author: Volker Lendecke <vl@samba.org>
Date:   Thu Jan 17 15:01:32 2013 +0100

    Fix typo : Dispatching instead of Dispaching

commit 865a14261c326972f1b8cfcfe5ac38606618d4eb
Author: Greg Hazel <ghazel@gmail.com>
Date:   Wed Jan 16 16:31:08 2013 -0800

    event_base_active_by_fd

commit 74d4c44cf2ce266471a2b98cc64f5502ae906019
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Mon Jan 3 15:09:21 2011 -0700

    Backport libevent to vanilla Autoconf 2.59 (as used in RHEL5)
    
    This is a backport of ad03952.

commit 9ab2b3f7496c05091ad2ac31ede2e8e806b85e38
Author: Tay Ray Chuan <raychuan@iweb.nus.edu.sg>
Date:   Tue Jan 15 12:52:08 2013 +0800

    Fix missing AC_PROG_SED on older Autoconfs
    
    For pre-2.59b Autoconfs, AC_PROG_SED is not available [1]; on such
    systems, avoid calling AC_PROG_SED, while providing a sensible SED.
    
    This aids backporting to Autoconf 2.59.
    
    [1] http://lists.gnu.org/archive/html/autotools-announce/2004-08/msg00002.html

commit bf7a0ff26808199ec68b86bb78c65fc21ba770f9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 11 16:37:34 2013 -0800

    When EWOULDBLOCK is not EAGAIN, treat it as equivalent to it
    
    Acording to http://stackoverflow.com/questions/7003234/which-systems-define-eagain-and-ewouldblock-as-different-values
    there are some older unixes that distinguish these error.s

commit b452a4345088dcc7e7491bcff612f9f11dfb17da
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Mon Dec 31 18:29:56 2012 +0100

    Fix harmless clang enum warning

commit 9e8cdf3d657361199a9a774c613acdfbaf4ff0d1
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Fri Sep 21 08:38:56 2012 +0200

    Fix comment to refer to sample/include.am correctly

commit 21c962e0877698a8118fe4a68ef0e42905978edf
Merge: 49905ac3 0a822a64
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 20 11:50:23 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 0a822a640e11f76f8d7533042e8fb565da920934
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 20 11:48:05 2012 -0500

    Avoid double-close on getsockname error in evutil_ersatz_socketpair
    
    Found by coverity; CID 739726

commit 69db2610be9b6b0d67f3dfda28a6059d3b2fb82f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 20 11:47:09 2012 -0500

    Avoid leaking fds on evconnlistener with no callback set
    
    There's no way to retrieve an fd from an evconnlistener whose
    callback has been cleared, so we had better close any such fd.
    
    Found by coverity; CID 739725.

commit 49905ac3283566a917b064f5752e93d053b23f4a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 11 12:53:09 2012 -0500

    Fix cut-and-paste err in whatsnew-2.1

commit 809586a9c3c2f4df292ac71aca949b3a5ddea645
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Wed Nov 28 00:20:13 2012 -0800

    minor documentation typos

commit 5cc7806cc4f441538cfc88f1b8d8aff784b400fe
Merge: f5b3ff20 7e45739e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 4 12:32:26 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 7e45739e26f0a2066a56591472d5e109a482674e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 4 12:01:25 2012 -0500

    Fix compilation with WIN32_HAVE_CONDITION_VARIABLES enabled
    
    Reported by Xiuqiang Jiang

commit f5b3ff20d30557b083366168008be3870f9bd6c1
Merge: 40b95ae2 f7d92c63
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 19 10:58:04 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit f7d92c63928a1460f3d99b9bc418bd3b686a0dca
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 19 10:56:16 2012 -0500

    Increment version to 2.0.21-stable-dev

commit 40b95ae26d94f0ed62f3031fe2e572a3bcf00a5f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 19 10:53:25 2012 -0500

    Increment version to 2.1.2-alpha-dev

commit c142069098ce5e39e7c03a50172e5bd18b015330
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 19 09:07:13 2012 -0500

    Fix a bug when running "make verify" out-of-tree

commit dc0287c473d3e33f8c6c0e6462ed336c6d7387da
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 18 19:32:41 2012 -0500

    Clean up and clarify a little more documentation

commit 060c409e8b5eafb56e32b943afcaa8e55a5c6559
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 18 19:32:11 2012 -0500

    Make the argument to bufferevent_get_priority const

commit 96584866cd63aa2efd2e358366959dbb0bf8fc60
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 18 18:59:19 2012 -0500

    Avoid defining recommended functions in terms of deprecated ones

commit 3db0737ae6bccc8680d7ee39d46c43d0310166ed
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 18 11:25:13 2012 -0500

    Update "what's new in Libevent 2.1"

commit ffdad1dcbc23614adcc72735c2d60d64eb09f2ff
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 18 10:53:52 2012 -0500

    Bump versions to 2.1.2-alpha

commit 143cb613bdd68dda5f55ed26c63c2a7a06a2d99c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 18 10:53:26 2012 -0500

    Update changelog for 2.1.2-alpha

commit 5af4caa9ee59f7337401c1c2c767eb4ded70e65e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 18 02:01:26 2012 -0500

    Update ChangeLog-2.0

commit 15f989ad3365a7fe9e34ab8d26e5fbcaa3257291
Merge: 173d7823 64177777
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 18 01:44:09 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 173d782345eb3647d02e4d8a6209c690f1fbd07b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 18 01:40:33 2012 -0500

    Fix a gcc warning in rtrim test

commit f2703b2e3428b918c50d4becb36a9c0b184b5c58
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 18 01:40:13 2012 -0500

    Fix a warning when building without threading.

commit 64177777165d9684bafbfa946abd126f7ebff11f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 18 01:39:10 2012 -0500

    Increment libtool version for 2.0.21 too

commit 0ee10fdfee3a9f438e95efb915e4e1a4df2f4bd5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 18 01:38:07 2012 -0500

    Increment version to 2.0.21-stable

commit 1c5517c97c1331ee2ebb424c9a297536b377c26c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 18 01:36:33 2012 -0500

    Changelog for 2.0.21-stable

commit f38e07886829bb4613d3fa08c06d65b2d18ae584
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 18 01:36:03 2012 -0500

    Make ssl version check in unit tests work

commit 1258614f2c42ecc2478e56e39329585f8e0c61d5
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Fri Nov 16 21:38:04 2012 -0800

    avoid valgrind false positive by zeroing epoll_event

commit 9dee36bc8b72be6c00089af857c1d119886c3ed7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 18:34:43 2012 -0500

    Make bufferevent_set_timeouts(bev, NULL, NULL) have plausible semantics

commit e3b2e0869ec4718eb0985444adf24e8c30bdeb92
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 16:15:03 2012 -0500

    Add an event_remove_timer() to remove timer on an event without deleting it

commit 5a9a0141896c658af8dd31aa28cf258e510add55
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 16:17:07 2012 -0500

    Fix a couple of compile warnings in the unit tests

commit 1fda4928781d155dcef8c5ae158418bf8ee928ff
Merge: 7afbd602 e3cccf38
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 12:06:40 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit e3cccf380c23891089d7c3a4637cac50010a600d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 11:55:27 2012 -0500

    Avoid crash when event_pending() called with no event_base set on event
    
    Instead, give a warning and return 0.
    
    Reported by Antony Dovgal on github as
       https://github.com/libevent/libevent/issues/19

commit 7afbd60266372af1f73d401127832983230ab420
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 11:51:42 2012 -0500

    Use EVUTIL_SOCKET_ERROR() wrapper to save/restor errno in evhttp_connection_fail_

commit 29fea33a7c58df708f08e2a18d3404741f6a2446
Merge: 4f4d0c93 36d0ee5c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 11:49:46 2012 -0500

    Merge remote-tracking branch 'ppelleti/preserve-errno'

commit 4f4d0c93183b446d73edc3c59ac7751822620b07
Author: Jay R. Wren <jrwren@xmtp.net>
Date:   Wed Oct 10 13:16:02 2012 -0400

    add evhttp_request_get_response_code_line
    
    This is needed to be able to read the response code line especially
    when acting as an http client using evhttp_make_request.
    
    (patched by nickm to make the return value const)

commit 61b93af5618fb164ceb64dc96e6a47347043c629
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 11:41:59 2012 -0500

    Move evutil_rtrim_lws_ to evutil.c where it belongs

commit c6ff3812704a75ec4920578a32aad488745830eb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 11:38:53 2012 -0500

    Remove internal ws from multiline http headers correctly
    
    According to RFC2616:
    
       All linear white space, including folding, has the same semantics
       as SP. A recipient MAY replace any linear white space with a single
       SP before interpreting the field value or forwarding the message
       downstream.

commit ac42519769ed0cf3bffc70317802231bd434c11e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 11:29:34 2012 -0500

    Remove trailing tabs in HTTP headers as well.

commit aa59d805f518d14305310db1096b8eb1904cdec3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 11:13:29 2012 -0500

    Clean up rtrim implementation
    
    If I understand the C standard correctly, you can't actually point
    at a position immediately _before_ the start of an object; only at the
    position immediately after.
    
    According to J.2 in the standard, in its big list of undefined behavior:
    
     "The behavior is undefined in the following circumstances:
         ...
       — Addition or subtraction of a pointer into, or just beyond, an
        array object and an integer type produces a result that does not
        point into, or just beyond, the same array object (6.5.6)."
    
    So we've got to fix rtrim to not do that.  Also, make it unit tested,
    and give it an evutil_*_ name.

commit 370a2c02133c11d4eaab4aa552e49e9ed8b24658
Author: Artem Germanov <root@cent56.(none)>
Date:   Sun May 20 21:08:52 2012 -0700

    ignore LWS after field-content in headers

commit c181399e92837764036f6530dc858caff8598b9c
Merge: 30512f43 05f1aca5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 10:53:52 2012 -0500

    Merge remote-tracking branch 'azat/fix-typo-evets'

commit 30512f4376647f6a5a929458858737507cc87e6f
Merge: d70af27d 09098f70
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 10:51:26 2012 -0500

    Merge remote-tracking branch 'ppelleti/tiny-doc-typos'

commit d70af27d0152d0a87a25127faf215604beb8ffe0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 10:48:13 2012 -0500

    Use correct openssl libs and includes in pkgconfig file
    
    Previously we were saying -lssl -lcrypto unconditionally when
    we should have been saying OPENSSL_LIBS.
    
    Based on a patch from Patrick Pelletier

commit 09a8d23ad9d5d7040fa4f6f128ef871453ca12f3
Merge: 3f27db9d ac356502
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 10:44:57 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit ac356502d313ff7712a43e2e8361d7302d8f8c0c
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Wed Nov 7 19:48:22 2012 -0800

    remove stray 'x' so print_err will compile when uncommented

commit 3f27db9d920f726d865d587d4b4cf92f5930c352
Merge: efb644ed 81b6209e
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Fri Nov 16 07:42:17 2012 -0800

    Merge pull request #27 from pallas/master
    
    Fix event_dlist definition when sys/queue not included

commit efb644ed87cad093f2b1407bc13648e092367cdc
Merge: 4343edf3 f3009e48
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 10:29:37 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            test/rpcgen_wrapper.sh

commit f3009e48c7b1cde00da44b8af2159278e2394a6a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 10:28:19 2012 -0500

    Make rpcgen_wrapper.sh work on systems without a "python2" binary

commit 4343edf3c6330d38d46a0cb40589c8f7ff105255
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 10:17:34 2012 -0500

    Add a unit test in which an event is created with event_base_once() but never fires

commit 0a396a02ba4aafe908d48aeac218bb22a6c364f4
Merge: 1f5a48d1 c17dd591
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 16 10:13:15 2012 -0500

    Merge branch '21_event_cleanup_v3'

commit c17dd5919152a7870dd784fa8814f6197898998e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 15 11:10:54 2011 -0400

    Free dangling event_once objects on event_base_free()
    
    This patch makes us keep event_once objects in a doubly linked list
    so we can free any once that haven't triggered when we call
    event_base_free().

commit 1f5a48d1d031f5c0daba8cd3ba5500dbae5693ef
Merge: 1d9d5110 ac009f92
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 15 11:45:12 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit ac009f92452c7d6e715e1f893f6824fc8665c7c4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 15 11:43:20 2012 -0500

    Warn when openssl version in unit test mismatches compiled version.

commit c2f30863e24b67c7890ec0a97f8216cc2785a45d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 15 11:42:14 2012 -0500

    Fix renegotiation test to work around openssl 1.0.1 bug
    
    There's a bug in openssl 1.0.1 where TLS1.1 and TLS1.2 can't
    renegotiate with themselves.  When testing renegotiation with OpenSSL
    >=1.0.1 and <1.0.1d, disable those protocols.

commit 1d9d5110a4aebf5833f6fd78bd0252affde0f4d0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 15 11:40:33 2012 -0500

    Use the same CFLAGS for openssl when building unit tests as with libevent

commit 36d0ee5c9faa59b2bb0289ec84189eb2aeb6ba18
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Tue Nov 13 21:22:39 2012 -0800

    preserve errno in evhttp_connection_fail_ for inspection by the callback

commit 81b6209e10f7325de0b533bcbc256caddfe1f209
Author: Derrick Pallas <derrick@pallas.us>
Date:   Sat Nov 10 11:22:15 2012 -0800

    Fix event_dlist definition when sys/queue not included
    
    This header adds TAILQ_HEAD and TAILQ_ENTRY if sys/queue is not included.
    There is a similar macro that adds LIST_ENTRY but not LIST_HEAD, even though
    LIST_HEAD is used later.
    
    This change pulls in the correct definition (swiped from sys/queue) for
    LIST_HEAD and cleans up the one spot where it is used.  The change can be
    tested by adding
    
            #undef LIST_HEAD
            #undef LIST_ENTRY
    
    right before the #ifndef checks and removing
    
            #define EVENT_DEFINED_LISTENTRY_
            #define EVENT_DEFINED_LISTHEAD_
    
    so that the macros persist later.

commit 64051b903ac90894642f5c0b154fd912d35104d1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 6 17:42:46 2012 -0500

    Clean up unit test for evbuffer_file_segment_add_cleanup_cb a little

commit e9f8febace7a39468980a7c09b2b87cf802f1892
Author: yangacer <yangacer@nuweb-test001.(none)>
Date:   Tue Nov 6 17:37:28 2012 -0500

    Add a new callback to get called on evbuffer_file_segment free

commit f9182d7249562a2aa547135d2f15ffe3e03c77fa
Merge: 56e48c10 62bd2c44
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 2 11:46:14 2012 -0400

    Merge remote-tracking branch 'github/20_win64_compilation' into 21_win64_compilation
    
    Conflicts:
            http.c
            signal.c

commit 62bd2c44f114fdc66e5537eadb354d7629794932
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 2 11:44:29 2012 -0400

    Fix compilation on mingw64 with -DUSE_DEBUG

commit 56e48c1019abe21081fe344846106722acf46c8e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 2 10:58:02 2012 -0400

    Fix a few mingw64 incompatibilities introduced since 2.0

commit 2e6a985003cbe10921eef9036c2a7ba5cee5d683
Merge: 6810908a 94866c27
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 1 18:12:07 2012 -0400

    Merge remote-tracking branch 'github/20_win64_compilation' into 21_win64_compilation
    
    Conflicts:
            event.c
            http.c
            sample/event-read-fifo.c
            test/regress_bufferevent.c

commit 6810908a5fd7d38a5aaec7cceae5a12b372c53c3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 1 18:05:27 2012 -0400

    Fix some warnings found cross-compiling with mingw32

commit 94866c2763c51d11354437b48d05c19306e220a9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 1 17:38:34 2012 -0400

    Compile without warnings on mingw64
    
    This is mostly a matter of catching cases where we were still
    assuming that evutil_socket_t could be used as an int.

commit b738ee189f70063ed66f3375e8a5ade3f721d6a6
Merge: 32ed1102 4b5f32a5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 1 10:19:01 2012 -0400

    Merge remote-tracking branch 'rosslagerwall/python2'

commit 32ed11024a7209ecf33ee1387fdf0b112c3278b0
Merge: d5318b66 2479d964
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 26 19:37:00 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 2479d964054c3743b9ed292dc1cd2ee70aadf6fb
Merge: cb853ea3 0eb01099
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 26 19:36:44 2012 -0400

    Merge remote-tracking branch 'rosslagerwall/python2-2.0' into patches-2.0

commit d5318b664db906a19ebb3cefefbdf065cf1330c6
Merge: cda69d0d cb853ea3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 26 19:34:47 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit cb853ea36cb7bb3d947a593f746bc242c1854d47
Author: Juan Pablo Fernandez <this.juan@gmail.com>
Date:   Fri Oct 26 19:33:31 2012 -0400

    Close IOCP listener socket on free when LEV_OPT_CLOSE_ON_FREE is set

commit cda69d0df00b8ee28755731b225123d10a999acc
Merge: f2050e79 1ff2c249
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 24 22:55:17 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            bufferevent_openssl.c

commit 1ff2c249bd834a0b2f7de69ed88b61b036bbbf7e
Merge: 1acf2ebc 576b29f2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 24 22:48:59 2012 -0400

    Merge remote-tracking branch 'public/20_bev_timeout_semantics' into patches-2.0

commit 09098f70a2a48ad90f4b36c6b7da346ce1cead0b
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Tue Oct 23 22:09:45 2012 -0700

    fix a few trivial documentation typos

commit 0eb01099da7ddd40c5bd98b45c048e54377f3e45
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Tue Oct 23 13:30:58 2012 +0100

    Use python2 rather than python
    
    python may refer to either python2 or python3 so rather by explicit by
    using python2.
    See PEP 394 - http://www.python.org/dev/peps/pep-0394/ for more
    details.

commit 4b5f32a59e125cbfcb69ca5e57e48634822a800c
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Tue Oct 23 13:26:44 2012 +0100

    Use python2 rather than python
    
    python may refer to either python2 or python3 so rather by explicit by
    using python2.
    See PEP 394 - http://www.python.org/dev/peps/pep-0394/ for more
    details.

commit f2050e79d5140af3c364221bd736727da3d27cbe
Merge: 8827dbc3 1acf2ebc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Sep 22 19:21:21 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            bufferevent_openssl.c

commit 1acf2ebcff7769ce63f4b8dfbcc863a273f75a13
Author: Joachim Bauch <mail@joachim-bauch.de>
Date:   Thu Sep 6 10:01:10 2012 +0200

    No need to reserve space if reading is suspended.
    
    Conflicts:
            bufferevent_openssl.c

commit f719b8a9185d9cf533c91fbd1ef206a7dffad37a
Author: Joachim Bauch <mail@joachim-bauch.de>
Date:   Mon Sep 3 21:42:15 2012 +0200

    Stop looping in "consider_reading" if reading is suspended.

commit 05f1aca5980279a710d94c57074d238f61403b24
Author: Azat Khuzhin <azat@libevent.org>
Date:   Tue Sep 18 15:17:29 2012 +0400

    Fix typo : events instead of evets

commit 8827dbc3e9f0135d4c88a8ed803c7cabe16f94b8
Merge: ffe1643b f2bff75e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 12 20:19:22 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit f2bff75ed8d86b6a1247bfdb17a0bd462d2cacce
Author: George Danchev <danchev@spnet.net>
Date:   Wed Sep 12 20:12:03 2012 -0400

    FIx another memleak on OOM in evdns

commit 73e85dd08fd3d9f3a98a30c9f9f9f46fee0d5e71
Author: George Danchev <danchev@spnet.net>
Date:   Wed Sep 12 20:11:12 2012 -0400

    Avoid a memory-leak on OOM in evdns.

commit ffe1643b98663d0dcfa5641a663b699e24ef2c33
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 10 13:43:26 2012 -0400

    Add missing return value in event_base_foreach_event
    
    Fix for github issue nmathewson/Libevent #65
    
    Found by Joachim Bauch

commit 576b29f21b28c5fbc6313b56356477f1bda3f920
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 7 15:53:02 2012 -0400

    Don't discard SSL read event when timeout and read come close together

commit 232055ef4988e9ba5b9e62230bd6db0506349a8d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 7 09:58:24 2012 -0400

    Tweak patch for event_base_foreach_event()
    
    * Fix whitespace
    * Explain return value from callback function
    * Reinstate return value so that caller can tell whether forech
      exited early.
    * Rename event_base_foreach_event_() to
      event_base_foreach_event_nolock_().
    * Use event_base_foreach_event_cb_fn typedef in more places
    * Be more dire about undefined behavior.

commit 84fd6d750642ff88ba5ab3e6b3f6fbba7868698c
Author: Roman Puls <puls@x-fabric.com>
Date:   Fri Sep 7 09:47:50 2012 -0400

    Expose event_base_foreach_event() as a public API.

commit e8faa2c74cede9a43b921e2c3e4594e3f889938c
Merge: b7577868 b3fea673
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Tue Sep 4 07:58:38 2012 -0700

    Merge pull request #61 from rosslagerwall/rename-configure
    
    Rename configure.in to configure.ac.

commit b7577868a8975fa17d77cf438141884bf081a6b2
Author: Joachim Bauch <mail@joachim-bauch.de>
Date:   Mon Sep 3 17:49:15 2012 +0200

    Prevent reference leak of bufferevent if getaddrinfo fails.

commit b3fea67385bf38846a7a4bdf9278fa9adf4fbbd1
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Mon Sep 3 08:37:25 2012 +0200

    Rename configure.in to configure.ac.
    
    ".ac" is the preferred extension.

commit b7f6e89ab9a6ac3304a91d743f661038b00896a9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 28 16:22:00 2012 -0400

    We now require automake 1.9 or later. Modernize!

commit 1e3123dae13ab3c75980003f84b7befcc7ac2213
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 28 16:15:14 2012 -0400

    Fix handling of no-python case for nonrecursive make

commit 607a8ff9df3969598cce9d98e015afc82500182f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 28 16:14:38 2012 -0400

    Be quiet when making regress.gen.[ch]

commit aa59c1e92410ccf0690793172c767c4295a5bdc2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 28 16:14:17 2012 -0400

    New --quiet option for event_rpcgen.py

commit 371a1237d030afbe1e7c56e31d75c5105927ac54
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 28 16:07:56 2012 -0400

    Make quiet build even quieter

commit 6cdfeebebc6d4672e2a99a1e4641ebdcfec2d43e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 28 16:01:14 2012 -0400

    Rename subordinate Makefile.ams to include.am

commit 7092f3b6774d02bc8dbb1136660c23685cadef6c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 28 15:58:18 2012 -0400

    Switch to non-recursive makefiles
    
    This approach should let Make work better, let libevent build faster
    (especially when using a parallelized build), and basically make the
    Makefiles easier to maintain.
    
    See http://miller.emu.id.au/pmiller/books/rmch/ for more info on why
    you'd want to do this.
    
    This is due to an idea from Zack Weinberg; the patch is my own.

commit 7b18e5c633f2a3ad9b70fdb7d463f264f29b067f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 28 15:10:55 2012 -0400

    Enable silent build rules by default. Override with V=1

commit 7d60ba84d944d846815de9f5cea549702e3c83cc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 28 15:09:49 2012 -0400

    Use newer syntax for autoconf/automake init

commit 2aad8cbb6265e93f9b2a582d6b0f09c8d4e33c24
Merge: 1879e061 484e93c1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 24 11:41:18 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 484e93c1d0ab413dd5f30963e592abbcd15888cb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 24 11:40:46 2012 -0400

    Increment version to 2.0.20-stable-dev

commit 1879e061e4b712f41ec69a99f18084d12089767e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 23 14:42:54 2012 -0400

    Update ChangeLog-2.0

commit 5cf0db7d83f700f5fd5656bc844438a370999a24
Merge: 3b3e21de 41d77a7c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 23 14:41:51 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 41d77a7c1ea5384b70f0edf56542212692e44ba7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 23 14:39:30 2012 -0400

    Add a date to the changelog

commit 46604b341c46ad1b243823a67b5f035333047499
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 23 14:38:54 2012 -0400

    Increment version to 2.0.20-stable

commit fc43cbdcda5c8451bdbfaf27dae2bdb04684f7c6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 23 10:36:39 2012 -0400

    Initial changelog and credits for 2.0.20

commit 3b3e21de5aa16fd87b9c2f55726a526cf80fc09e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 23 11:42:04 2012 -0400

    Add missing implementation for event_enable_debug_logging

commit 07e132e3adc898d0d3de46fa95e355ce9baf8468
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 23 10:46:29 2012 -0400

    Rename event_enable_lock_debuging() to ..._debugging()
    
    Keep the misspelled version around for backward compatibility
    
    Based on a patch by Diwaker Gupta.

commit e3d010c8f6a2d91218826e922e16a2f14c59d5c0
Merge: f1bd9388 606ac43b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 23 10:13:26 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 606ac43b91bb87d33f1cfca6dffc7d4f5e72131e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 22 12:30:42 2012 -0400

    Correctly invoke callbacks when a SSL bufferevent reads some and then blocks.
    
    Based on a patch by Andrew Hochhaus, who correctly diagnosed this bug.

commit f1bd9388a9d762d160cfaa32432a5719311e8db1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 2 15:02:27 2012 -0400

    Avoid test -e; older shs don't have one.
    
    Reported by Paul Croome.
    
    Report forwarded by Dave Hart.

commit 34c8f3165064bd4726c1811dbd2b9359a17b698a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 2 12:36:05 2012 -0400

    Add deferred_cb_skew to list of timing-dependent tests

commit 9be546809a650af937f85ab041df902c66d489e2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 2 12:35:49 2012 -0400

    Avoid unused-var warning on systems with clock_gettime but without CLOCK_MONOTONIC_COARSE

commit a64c56470d6ff698b87db1660656d4795d845239
Merge: 403b0d6e ca80ea61
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 2 12:09:08 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            evutil_rand.c

commit ca80ea61b5f0cf0e3f2e1cef756e7405e22d310b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 2 11:56:17 2012 -0400

    Add explicit AC_PROG_SED to configure.in so all autoconfs will expose $(SED)

commit c0720c1b0f9eae497625ea5a2c0f1ec91a589beb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 2 11:38:32 2012 -0400

    Fix an unused variable warning on *BSD.

commit 403b0d6e023e4953446d14b477de09f716ee4240
Merge: 9be8624b 6bde2efd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 31 12:03:48 2012 -0400

    Merge remote-tracking branch 'ppelleti/windows-ssl'

commit 9be8624b2f5633bfa0dc30ae4b6d22312373ef3f
Merge: 737f113a dc320776
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 30 17:08:44 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit dc3207767d4f06b3179a3238adc44e3043ccd65b
Author: Greg Hazel <ghazel@gmail.com>
Date:   Mon Jul 30 16:52:55 2012 -0400

    Avoid segfault on weird timeout during name lookup.
    
    If an evdns_getaddrinfo timeout happens while pending_cb is set, and
    a callback is about to run, but we get a call to
    evdns_getaddrinfo_gotresolve before it finishes.
    
    Github issue #60. Thanks to Greg Hazel for patch and patience.

commit 737f113a328cdf9fe5f718163882f0225052bed4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 10:49:06 2012 -0400

    Extract common error-handling code in evconnlistener_new_bind

commit 6a81b1f5a423aa5ec237c085c94bdc0a6cfd9e5d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 10:45:10 2012 -0400

    Avoid double-free on error in evbuffer_add_file. Found by coverity.

commit 6487f63b79cfbc22262720ac6afbb51de819c2aa
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 10:44:48 2012 -0400

    Check return value when using LEV_OPT_DEFERRED_ACCEPT. Found by coverity

commit 9852107f37e032c2d70ca81ca19a5d9ad8163350
Merge: 225344cf a0912e32
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 10:43:13 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            buffer.c
            http.c

commit a0912e32068621eb776d678224e4108511d281e3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 10:39:05 2012 -0400

    Check more setsockopt return values when binding sockets. Found by coverity

commit a1a0e675318da89f2b13eb65a1f8cab601123bf9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 10:38:29 2012 -0400

    memset sockaddr_in before using it. Found by coverity.

commit a2006c008740dfc6b4260d8848f80d76b192f75a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 10:37:47 2012 -0400

    Move assignment outside tt_assert in ssl unit tests. Appeases coverity.

commit b9e7329751e9adf97839833c77d5b11648b408d0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 10:37:13 2012 -0400

    Add checks to various return values in unit tests. Found by coverity

commit 6a4ec5c2b580a6174f2713ba1743e76851e1ca3c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 10:34:06 2012 -0400

    Avoid possible needless call to writev. Found by coverity.

commit 6355b2a4caeacf25cab5f790ae7e163b1fe0d1f0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 10:16:47 2012 -0400

    Remove unused variable; spotted by coverity

commit 225344cfac221a3ba968c1a02c3ab1ac0622f0ff
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 10:11:17 2012 -0400

    Fix a shadowed variable in addfile_test_readcb; found by coverity

commit 92817a11aaf129404377d6639f28455544939b8a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 10:11:00 2012 -0400

    Avoid memory leak in test_event_calloc unit test; found by coverity

commit aa501e1a7ee5b352ce58546fbdcd7ee3d2936f28
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 10:10:35 2012 -0400

    Add checks for functions in test-ratelim.c; found by Coverity

commit 7ef04e4b4838f011ea13a0ca13b0ef5263e9362b
Merge: 13525c50 3cde5bf5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 10:09:13 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            configure.in
            test/regress_buffer.c
            test/regress_dns.c

commit 3cde5bf57a993e61a735c53999160e8c480d85f2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 10:04:43 2012 -0400

    Avoid more crashes/bad calls in unit tests; found by coverity

commit f021c3d762991d9cc81a222a631b6c075b1a76c0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 09:59:47 2012 -0400

    Add some missing null checks to unit tests; found by coverity

commit 270f279fb5aec1cc4e628936882472b3494ba0d3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 09:53:20 2012 -0400

    Fix resource leaks in the unit tests; found by coverity

commit 4f3732d75eb148f93efae797511213e92467f7a2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 26 09:35:43 2012 -0400

    Fix various check-after-dereference issues in unit tests: found by coverity

commit f1ce15d936ea6f0b68ebc21cff169dfd1da2e1c1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jul 25 16:18:33 2012 -0400

    Set umask before calling mkstemp in unit tests. Found by coverity

commit 13525c50ebb81c38d655192990425b2610b1e9aa
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jul 25 16:07:22 2012 -0400

    Fix another possible uninitialized read in dns regression tests. Found by coverity.

commit 6fdbf3a2bcf4d56238a2792361345b9f90449adc
Merge: 3d83f94d 2259777c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jul 25 16:06:51 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 2259777cc8d90740974323787763255505cacf6a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jul 25 16:05:36 2012 -0400

    Fix possible uninitialized read in dns regression tests. Found by coverity.

commit 555334670aa13135050c95128c66d6149cc02b0c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jul 25 15:59:50 2012 -0400

    Remove deadcode in http regression tests. Found by coverity.

commit 3d83f94dfa084cc29183db56b42a3b0536ed8e1c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 23 16:32:43 2012 -0400

    Add process.h include to evutil.c for _getpid

commit 52a0039ba102a5c6bdfa52381e3963e9929a01d4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 20 15:36:15 2012 -0400

    Fix tinytset_skip to work with new tinytest_set_flag_ signature

commit cdb47db9e244ddc8be3b34e76127b2a93fe7aeb7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 20 15:35:33 2012 -0400

    Fix compile error in win32 listener.c
    
    SF issue 3546388

commit 01b65ab8729bb86fc973661b94f43176e61f61da
Merge: 6c14d564 11c8b317
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 17 11:10:44 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 11c8b317542c86eca2cca585d31f93da285c10a7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 17 11:08:25 2012 -0400

    Fix a memory leak on error in evhttp_uriencode
    
    If we ran out of memory in evhttp_uriencode when allocating the
    output buffer, we would neglect to call evbuffer_free() on our
    temporary buffer.  Now we always free the temporary buffer.
    
    Fixes sourceforge issue 3539887. Thanks to Andrew Cox for reporting
    this one.

commit 6c14d564304d8a557f2e1f06b5e31dc0645ce0ab
Merge: 2b6fe8bb 160e58b6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 16 15:44:07 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            event.c
            win32select.c

commit 160e58b67d28967bc7b1800835a082bcd7052d82
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 16 15:34:18 2012 -0400

    Win32: avoid crash when waiting forever on zero fds.

commit 6bde2efd86157a54cf876db36109611f1a840f80
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Tue Jul 10 17:26:40 2012 -0700

    Additional comments about OPENSSL_DIR variable, prompted by Dave Hart

commit eba0eb2e71a975517b88099cf1f925e1712fe03a
Author: Patrick Pelletier <code@funwithsoftware.org>
Date:   Fri Jun 8 19:47:23 2012 -0700

    attempt to support OpenSSL in Makefile.nmake

commit 2b6fe8bb7f9c40bd28090bc1b3528bc02c3b15ac
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jun 29 12:47:51 2012 -0400

    Make load-dependent monotonic timer tests off-by-default
    
    You can reenable them with @all, or say @fine_timing just to get
    them.

commit 5671033752b2a7d68a83de7b05dea0bba105e0d4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jun 29 12:47:39 2012 -0400

    Avoid (unlikely) overflow in bench_httpclient.c

commit c8009d2985a70d59eef4bf64f358eea2e851b27b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jun 29 12:47:03 2012 -0400

    Check return value of write() in regress.c

commit 59f21fd8fc32f957c881aa7dbfa92ae0fa0b526a
Merge: f2cea873 9cd5acb5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 28 16:52:21 2012 -0400

    Merge branch '21_nonrecursive'

commit f2cea873bb8c4e1e89cc282470a11556e4bd9730
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 28 13:18:28 2012 -0400

    Make all tests that hit the network disabled by default
    
    To run only these tests, run test/regress with @live_net.  To run all
    tests, run test/regress with @all.

commit ef7c4f7956bc5237f51b58dcd9fdf556570cdd67
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 28 12:58:46 2012 -0400

    Update to latest tinytest (911b4f0349377)

commit def3b8341980a159ab19aef503d94184feb9e85a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 28 12:57:58 2012 -0400

    Make test_evutil_monotonic a little more tolerant

commit 9cd5acb5114ce00d425c0cca48a396fb591beaf0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 28 12:00:57 2012 -0400

    Make th_base_lock nonrecursive
    
    This is necessary for making some thread libraries work with
    event.c, and might get better performance with others.
    
    The biggest change required here was that we needed to make some
    internal code that had previously called event_add and event_del
    call the nolock variants.

commit 108896abccc288d7675e7ceed7367172ed5ddbd6
Merge: e2d7d98d ea92fba3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 28 11:42:25 2012 -0400

    Merge branch 'master' of ssh://github.com/libevent/libevent

commit e2d7d98d9d72d83a8787f3327d28a76913b74e21
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 28 11:37:45 2012 -0400

    remove a now-unused var in thread_deferred_cb_skew test

commit 8a739b3492ffbda78eee56f386a923ab974a1589
Merge: 0de587f4 7d6aa5ee
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 28 11:36:52 2012 -0400

    Merge branch '21_event_callback_v3'

commit ea92fba36cd468cdf98e6bafd7822004d3747c87
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 25 13:55:45 2012 -0400

    Avoid a resource leak on error in http client benchmark

commit 0de587f47ede7e433d426e90b645f89669b8094b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 25 12:19:26 2012 -0400

    Simplify and correct evutil_open_closeonexec_
    
    The original code needlessly called open in its two- or three-
    argument format depending on the O_CREAT flag; this should not be
    needed.
    
    The code also leaked an fd if fcntl() failed.
    
    Reported by Dave Hart.

commit 1aaf9f013beef06680d8e6512eb6426ab70f6ba2
Author: Dave Hart <hart@ntp.org>
Date:   Mon Jun 18 10:31:38 2012 -0400

    Avoid giving a spurious warning when timerfd support is unavailable
    
    We forgot to do the obligatory "Check if there is no syscall there"
    dance when calling timerfd_create().
    
    (Commit message by Nick)

commit be7a95c62995a679ee24146b0d641b7392cbab51
Author: Simon Liu <simohayha.bobo@gmail.com>
Date:   Fri Jun 15 01:01:05 2012 +0800

    Make event_pending() threadsafe.
    
    (Commit message by Nick)

commit 117e3273dce5f6aa61b1867a64c8345b78dc1620
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 14 13:25:10 2012 -0400

    Add GCC annotations so that the vsprintf functions get checked properly

commit e7bf4c84afd7961eb92a2d6583c84b56a87f2555
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jun 8 16:50:25 2012 -0400

    Make the Makefile.nmake warning slightly less dire

commit 0ba0683bcfc8652a8c5002a8e973986fba8dd567
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jun 8 16:45:01 2012 -0400

    Add evutil_time.obj to Makefile.nmake

commit 60f65403412c940f51a10c6e283acea9fe6b79cf
Merge: fcec3e80 3b2529ac
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Wed Jun 6 14:10:11 2012 -0700

    Merge pull request #57 from rosslagerwall/memleak
    
    Fix a couple of memory leaks (found with Valgrind).

commit 90daab61848eb3d2b1a461fc79755e2969de6aa6
Merge: 0bbd850c 60f65403
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jun 6 17:06:57 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 3b2529acf2717e5cbe17d4682baafc0754119796
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Wed Jun 6 21:57:12 2012 +0200

    Fix a couple of memory leaks (found with Valgrind).

commit 0bbd850cc077e5555128f5b6dfce00a54b65526b
Merge: f3bd3672 3881d8fd
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Mon Jun 4 14:16:02 2012 -0700

    Merge pull request #56 from rosslagerwall/fix-comment
    
    Fix a comment in test-fdleak after 077c7e949.

commit 3881d8fdf618099fc99a2c4609c996c488180dbd
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Sun Jun 3 15:19:53 2012 +0200

    Fix a comment in test-fdleak after 077c7e949.

commit f3bd36728f399848ff5aa02512fc95e63613d991
Merge: f1284e73 fcec3e80
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jun 1 09:50:07 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit fcec3e80c43722954ee4f63150b5eb1a6343f06e
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Fri Jun 1 05:23:29 2012 +0200

    Correctly check for arc4random_buf
    
    Apparently it's necssary to do an explicit comparison with NULL here.
    This also gets rid of a compile warning

commit f1284e73bd385dabba19e0b08f7be58014a5368b
Merge: 76b994ac bff5f940
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 31 02:52:37 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            evutil_rand.c
    
    Had conflicts with _EVENT_ -> EVENT__ change.

commit bff5f9407341030c77a29fc1c398083ccdb4e277
Author: Greg Hazel <ghazel@gmail.com>
Date:   Tue May 29 12:39:12 2012 -0700

    check for arc4random_buf at runtime, on OS X
    
    (Tweaked by nickm: Fix up the arcr4andom_buf OSX hack so that the
    fallback case isn't compiled into the code when we have
    arc4random_buf() and we are not on OSX.  Also add a comment
    explaining what's up.)

commit 76b994ac61e1bb6fb374bf6c178bfd0edb09f6ee
Merge: 9444524f e65914fd
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Mon May 21 10:59:20 2012 -0700

    Merge pull request #54 from rosslagerwall/configure-dup
    
    Remove unnecessary code in configure.in.

commit 9444524f85c43f1e881384131401210ccf6d593b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 14 11:10:51 2012 -0400

    Make it more clear that NOLOCK means "I promise, no multithreading"

commit 6fab9eef8faca783f949da53fa4efa7590bd2ed3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 14 10:58:01 2012 -0400

    Add caveat to docs about bufferevent_free() with data in outbuf
    
    Based on libevent-users thread wtih Alexander Klauer

commit 371efebdc3c7b46ae833bcaafc1d65abc235b38c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 14 10:55:27 2012 -0400

    Be more clear that LEV_OPT_DEFERRED_ACCEPT has tricky prereqs

commit e65914fdfe251175f518404bafa05ed8bb0abd6a
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Sat May 12 08:38:19 2012 +0200

    Remove unnecessary code in configure.in.

commit 7d6aa5ee68962f91de3690ce4bb39ec7c9776e9e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 9 12:05:07 2012 -0400

    Add an event_base_loopcontinue() to tell libevent to rescan right away

commit c0e425abdcfc883fa70b6deafdf7327bfb75f02d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 9 11:06:06 2012 -0400

    Restore our priority-inversion-prevention code with deferreds
    
    Back when deferred_cb stuff had its own queue, the queue was always
    executed, but we never ran more than 16 callbacks per iteration.
    That made for two problems:
    
    1: Because deferred_cb stuff would always run, and had no priority,
    it could cause priority inversion.
    
    2: It doesn't respect the max_dispatch_interval code.
    
    Then, when I refactored deferred_cb to be a special case of
    event_callback, that solved the above issues, but made for two more
    issues:
    
    3: Because deferred_cb stuff would always get the default priority,
    it could could low-priority bufferevents to get too much priority.
    
    4: With code like bufferevent_pair, it's easy to get into a
    situation where two deferreds keep adding one another, preventing
    the event loop from ever actually scanning for more events.
    
    This commit fixes the above by giving deferreds a better notion of
    priorities, and by limiting the number of deferreds that can be
    added to the _current_ loop iteration's active queues.  (Extra
    deferreds are put into the active_later state.)
    
    That isn't an all-purpose priority inversion solution, of course: for
    that, you may need to mess around with max_dispatch_interval.

commit 581b5beb98f45ec73ade6c8026f4fadef4325d4b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 9 10:50:07 2012 -0400

    Give event_base_process_active a single exit path

commit c46cb9c3a2ab8256fc1ae8035c4d967e16b69c04
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 9 10:49:28 2012 -0400

    Make event_base_getnpriorities work with old "implicit base" code

commit bd395549a3a148aa143afda27aa03907c5e5c73c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 8 18:04:19 2012 -0400

    Add a bufferevent_get_priority() function

commit f90e25593c29258e440e2d84e85bc5ddba4e16bd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 8 17:46:46 2012 -0400

    New event_get_priority() function to return an event's priority

commit a4079aa88a5d4bd70ad3c74f83460e1a0a40772d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 6 11:05:35 2012 -0400

    Replace more deferred_cb names with event_callback

commit ae2b84b2575be93d0aebba5c0b78453836f89f3c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 6 04:33:19 2012 -0400

    Replace deferred_cbs with event_callback-based implementation.

commit fec8bae2673966325eeaabc3fc1af60b584abb1a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 6 03:15:50 2012 -0400

    event_base_assert_ok: check value of event_active_count for correctness

commit 745a63dba33c53440064908f086bb739aa9c4bb3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 6 03:00:40 2012 -0400

    Add "active later" event_callbacks to supersede deferred
    
    An event or event callback can now be in an additional state: "active
    later".  When an event is in this state, it will become active the
    next time we run through the event loop.  This lets us do what we
    wanted to with deferred callbacks: make a type of active thing that
    avoids infinite circular regress in a way that starves other events or
    exhausts the stack.  It improves on deferred callbacks by respecting
    priorities, and by having a non-kludgy way to avoid event starvation.

commit 9889a3d883d99c644f00398c3a6a11a9037e8117
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 5 12:56:07 2012 -0400

    Remove the unused bits from EVLIST_ALL

commit cba59e53253bb396f192e40a002c6dd9835df51c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 5 12:38:18 2012 -0400

    Refactor the callback part of an event into its own event_callback type
    
    This shouldn't have any visible effect, but it's necessary or
    advisible for a few changes and cleanups I would like to make,
    including:
       * Replacing the deferred queue with a type that works more as if it
         were an event.
       * Introducing a useful "activate this on the next round through the
         event loop" state for events and deferreds.
       * Adding an "on until further notice" status for events, to allow a
         saner win32-hybrid approach.
       * Eventually, making all user callbacks first-class things with
         event-like semantics.

commit 981aa0efc98bb19e0c1ec0889046ac6df056441e
Merge: e0aa0866 faa92253
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 3 16:37:39 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit faa92253e96172a4b2002a6bbc5385a7d710238f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 3 16:34:29 2012 -0400

    Bump version to 2.0.19-stable-dev

commit 8a9b0cdf63427f0c037bec0bd2f719835570b0ff
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 3 12:33:36 2012 -0400

    Increment version to 2.0.19-stable

commit e0aa08666eecdab5467770ed0753f1f330ced76e
Merge: 4b70286e e06206eb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 3 12:21:57 2012 -0400

    Merge remote-tracking branch 'github/patches-2.0'
    
    Conflicts:
            test/regress.c

commit e06206ebd8e799f75258e66e6eb391436481ee56
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 3 12:15:11 2012 -0400

    Oops; fix the *right* windows compile issue

commit be7a0be8166b749dd34e5c3a5a13e8e52a0ec7d3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 3 12:05:52 2012 -0400

    Fix win32 build issues: sleep, pid_t

commit 4b70286ef1413bd870a93edc7d93e6d24b809e93
Merge: 9fbfe9b9 cecb111b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 2 17:12:23 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            ChangeLog
            README
            evdns.c
            sample/dns-example.c

commit cecb111bcd9af40a14a456fb07e3be4059fd46f0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 2 17:09:11 2012 -0400

    Start changelog for 2.0.19-stable

commit 265e6779dd1b936298f50a8036e2fb565a785c83
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 2 16:52:27 2012 -0400

    Fix evdns build with threads disabled
    
    The last evdns change apparently broke it, by using a "base"
    variable that we were only declaring with threads turned on.

commit 3d9e52ac5661fda80d2967df22a22a4d92fd1cdf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 1 19:52:55 2012 -0400

    When retransmitting a timed-out DNS request, pick a fresh nameserver.
    
    Otherwise, requests initially sent to a failing nameserver would
    stay there indefinitely, even if other nameservers would work.
    
    Fix for sourceforge bug 3518439

commit d873d6787c80c4438dd139118ef89c5ce62a3c34
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 1 19:52:49 2012 -0400

    Make some evdns.c debug logs more verbose

commit 6610fa5a270472c4b79cfc219343ab63b1db0c4e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 1 17:07:50 2012 -0400

    dns-example.c can now take a resolv.conf file on the commandline

commit 9fbfe9b94838cea245472b5619dc4a111fb0dd30
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 1 13:03:33 2012 -0400

    Correctly handle running on a system where accept4 doesn't work.
    
    Previously, we treated EINVAL as the only errno that indicated a
    broken accept4.  But EINVAL only appears when one of the SOCK_*
    options isn't supported.  If the accept4 syscall itself isn't there,
    we'll get an ENOSYS.
    
    Reported by Azat Khuzhin.

commit a163026099ce9a6b46bebb7e09f4fb5efd51d200
Merge: 2e882a07 26c75828
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 1 13:22:56 2012 -0400

    Merge branch '21_robust_monotonic'

commit 2e882a071b51cb79d56dddaa54e8fbac1117664f
Merge: b98624ef 30f06715
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 30 22:00:05 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            event.c

commit 30f0671526c758772b7d93caf865d75ab1d6698e
Merge: b3887cdf 2bfda401
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 30 21:45:43 2012 -0400

    Merge remote-tracking branch 'github/20_active_prio_inv' into patches-2.0

commit b98624ef3503cea3dc3bb3312d10e22127fabb8b
Merge: 5859c235 b3887cdf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 30 21:33:56 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            bufferevent_openssl.c

commit b3887cdf3b2ca715a1e496b7dcf2ee583e236338
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 11 21:33:27 2012 -0400

    Work-around a stupid gcov-breaking bug in OSX 10.6
    
    This only affects the unit tests.
    
    Fix found at http://rachelbythebay.com/w/2011/07/12/forkcrash/
    
    (Backport from 2.1)

commit 4e62cd167b66f33e20344bff776253f19e2bc3e6
Author: Mark Ellzey <socket@gmail.com>
Date:   Fri Mar 30 15:08:40 2012 -0400

    Fixed potential double-readcb execution with openssl bufferevents.
    
    the function do_read() will call SSL_read(), and if successful, will
    call _bufferevent_run_readcb() before returning to consider_reading().
    
    consider_reading() will then check SSL_pending() to make sure all
    pending data has also been read. If it does not, do_read() is called
    again.
    
    The issue with this is the possibility that the function that is
    executed by _bufferevent_run_readcb() called
    bufferevent_disable(ssl_bev, EV_READ) before the second do_read(); In
    this case, the users read callback is executed a second time. This is
    potentially bad for applications that expect the bufferevent to stay
    disabled until further notice. (this is why running openssl bufferevents
    without DEFER_CALLBACKS has always been troublesome).

commit 2bfda4012c92566e84de137a5fd9165051c6efc6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 30 17:30:48 2012 -0400

    If a higher-priority event becomes active, don't continue running events of the current priority.
    
    Bug found by Ralph Castain.

commit 5859c235de96a8781ad63371d692334b20ecff18
Author: Zack Weinberg <zackw@panix.com>
Date:   Fri Apr 27 09:32:51 2012 -0400

    Generate event-config.h with a single sed script
    
    This approach should make the creation of the file more atomic, to
    fix a bug reported by Dinh.
    
    This patch has one change from Zack's original version: it avoids
    $<, since Dave Hart tells me he thinks that's not so portable.
    
    (commit message by nickm)

commit e02222741e55983e048bbfc6107c743a5c81c101
Merge: 2711cda3 30b6f889
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 27 09:36:13 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 30b6f889f7d8a6dc3174a35641772d3c9294eaec
Author: Zack Weinberg <zackw@panix.com>
Date:   Fri Apr 27 09:32:51 2012 -0400

    Generate event-config.h with a single sed script
    
    This approach should make the creation of the file more atomic, to
    fix a bug reported by Dinh.
    
    This patch has one change from Zack's original version: it avoids
    $<, since Dave Hart tells me he thinks that's not so portable.
    
    (commit message by nickm)

commit 26c75828b75e4c14fbbdce9212d3114d9926af1f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 26 16:22:03 2012 -0400

    When PRECISE_TIMERS is set with epoll, use timerfd for microsecond precision
    
    The epoll interface ordinarily gives us one-millisecond
    precision, so on Linux it makes perfect sense to use the
    CLOCK_MONOTONIC_COARSE timer.  But when the user has set the new
    PRECISE_TIMER flag for an event_base (either by the
    EVENT_BASE_FLAG_PRECISE_TIMER flag, or by the EVENT_PRECISE_TIMER
    environment variable), they presumably want finer granularity.
    
    On not-too-old Linuxes, we can achieve this using the Timerfd
    mechanism, which accepts nanosecond granularity and understands
    posix clocks.  It's a little more expensive than just calling
    epoll_wait(), so we won't do it by default.

commit 7428c78a959210951409803455092edff4bdea35
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 26 14:35:18 2012 -0400

    Improve the monotonic-time unit test: make it check the step size

commit 630f077c296de61c7b99ed83bf30de11e75e2740
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 26 11:56:59 2012 -0400

    Simple unit tests for monotonic timers

commit 2c470452fb51453dd7bab8c0d3778bfdfe4bb8e6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 23 13:33:25 2012 -0400

    Implement fast/precise monotonic clocks on Windows
    
    This uses code from libutp, which was released under the MIT
    license; see evutil_time.c and LICENSE changes.

commit a2598ec6bdc2cc8b5eed1f0a9b9ca9539d4667c1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 23 13:56:00 2012 -0400

    Add EVENT_PRECISE_TIMER environment var for selecting precise-but-slow timer

commit f5e4eb05e5bdf61b0a1b11f99effaf835a8796ce
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 20 13:14:10 2012 -0400

    Refactor monotonic timer handling into a new type and set of functions; add a gettimeofday-based ratcheting implementation
    
    Now, event.c can always assume that we have a monotonic timer; this
    makes event.c easier to write.

commit 71bca50f12f2e41c538d280b1e015593e05cdaa0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 20 12:27:12 2012 -0400

    Split out time-related prototypes into time-internal.h

commit c419485442114645e9949e39635208d0536b2072
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 20 12:19:03 2012 -0400

    Split out time-related evutil functions into a new evutil_time.c

commit 2711cda3004752e04751135aa7dc58d130d9107b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 20 12:14:20 2012 -0400

    Split long lists in Makefile.am into one-item-per-line

commit 21205b837608e0b554c7b48ad2585ec5155b38bf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 20 11:53:32 2012 -0400

    Shave 700 msec off the persistent_timeout_jump test

commit d992d911a61814fdf93e68f2c47d481ab535a76b
Merge: 3f659e5a 03614a16
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 20 11:51:33 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 03614a16cb9594058b96d19d6ee16a50c86984b7
Merge: 37c4fc8d dfd808cb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 20 11:51:13 2012 -0400

    Merge branch '20_periodic_event_overload_v2' into patches-2.0

commit dfd808cbad491bdb6610e9050a3f98dd49d42e84
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 19 00:25:12 2012 -0400

    If time has jumped so we'd reschedule a periodic event in the past, schedule it for the future instead
    
    Fixes an issue reported on libevent-users in the thread "a dead
    looping bug when changing system time backward". Previously, if time
    jumped forward 1 hour[*] and we had a one-second periodic timer event,
    that event would get invoked 3600 times.  That's almost certainly not
    what anybody wants.
    
    In a future version of Libevent, we should expose the amount of time
    that the callbac kwould have been invoked somehow.
    
    [*] Forward time jumps can happen with nonmonotonic clocks, or with
    clocks that jump on suspend/resume.  It can also happen from
    Libevent's point of view if the user exits from event_base_loop() and
    doesn't call it again for a while.

commit bec22b41768738b87ff7ee5eb27dad56fd8444f4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 19 18:15:12 2012 -0400

    Refactor event_persist_closure: raise and extract some common logic

commit 3f659e5aeb61d856f8d47624e7109eb06c141739
Merge: 26ee5f90 37c4fc8d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 19 11:14:58 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 37c4fc8d0cf39d6fbb80ca7fce6915ef5286b4c5
Merge: d1a03b2f 46b80608
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Thu Apr 19 08:11:05 2012 -0700

    Merge pull request #52 from ghazel/20_evdns_probe
    
    cancel the probe request when the server is freed, and ignore cancelled probe callbacks

commit 46b806084e5426982fbf94cb8f4cf1a95ded6c54
Author: Greg Hazel <ghazel@gmail.com>
Date:   Wed Apr 18 21:41:48 2012 -0700

    remove redundant DNS_ERR_CANCEL check, move comment

commit 94d23360708d5c96b81e3c10fbf29b4c289f7462
Author: Greg Hazel <ghazel@gmail.com>
Date:   Wed Apr 18 21:29:21 2012 -0700

    cancel the probe request when the server is freed, and ignore cancelled probe callbacks

commit 26ee5f9097a8d57c0fba4c629ca2ade66a60b510
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 18 12:24:19 2012 -0400

    Note that make_base_notifiable should not be necessary

commit 5595a79ff1452d85e49e3ef7c8bb2200fb8437da
Merge: b62b31f1 d5e1d5ad
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 17 17:54:26 2012 -0400

    Merge branch '21_choose_monotonic'

commit d5e1d5ad99d4a1dd05f3c72cbbd9a985ef43fcf3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 17 15:16:08 2012 -0400

    Implement a GetTickCount-based monotonic timer for Windows

commit 55780a70e294ecb2d0bf674b8db3fffe9466e6fc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 17 13:09:49 2012 -0400

    On Linux, use CLOCK_MONOTONIC_COARSE by default
    
    You can make it use CLOCK_MONOTONIC again by setting the
    EVENT_BASE_FLAG_PRECISE_TIMER flag in the event_config.

commit ddd69d391e05356113aa62c26c9090f540c85b9d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 17 13:04:02 2012 -0400

    EVENT_BASE_FLAG_PRECISE_TIMER indicates we want fine timer precision
    
    There are a bunch of backends that can give us a reasonably good
    monotonic timer quickly, or a very precise monotonic timer less
    quickly.  For example, Linux has CLOCK_MONOTONIC_COARSE (1msec
    precision), which is over twice as fast as CLOCK_MONOTONIC.  Since
    epoll only lets you wait with 1msec precision,
    CLOCK_MONOTONIC_COARSE is a clear win.
    
    On Windows, you've got GetTickCount{,64}() which is fast, and
    QueryPerformanceCounter, which is precise but slow.
    
    Note that even in the cases where the underlying timer claims to
    have nanosecond resolution, we're still not exposing that via
    Libevent.
    
    Note also that "Precision" isn't the same as "Resolution" or
    "Accuracy".  A timer's precision is the smallest change that the
    clock will register; a timer's resolution is the fineness of its
    underlying representation; a timer's accuracy is how much it drifts
    with respect to "Real Time", whatever that means.  (Terms and
    definitions from PEP 418.)

commit 1fbef7d538928a8d3b9c89a07004996e4b4062f9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 17 12:44:39 2012 -0400

    Move use_monotonic and friends into event_base
    
    The use_monotonic field used to be a static field set up at library
    setup.  Unfortunately, this makes it hard to give the user a way to
    make speed/accuracy tradeoffs about time.  Moving it into event_base
    should let the clock implementation become configurable.

commit b62b31f1f10bf5c42d893020f7375a38785d5821
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 11 21:33:27 2012 -0400

    Work-around a stupid gcov-breaking bug in OSX 10.6
    
    This only affects the unit tests.
    
    Fix found at http://rachelbythebay.com/w/2011/07/12/forkcrash/

commit 53a07fe2f95c360d060b9fd58dfcd929c2c1aac2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 17 00:34:13 2010 -0400

    Replace pipe-based notification with EVFILT_USER where possible
    
    Sufficiently recent kqueue implementations have an EVFILT_USER filter
    that we can use to wake up an event base from another thread.  When
    it's supported, we now use this mechanism rather than our old
    (pipe-based) mechanism.  This should save some time and complications
    on newer OSX and freebsds.

commit 9bf866f5d14b1cdc6f56eccb1dc0ecb9c70f2c21
Merge: a969f7e7 cb653a00
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 9 19:49:58 2012 -0400

    Merge remote-tracking branch 'github/21_mach_time'

commit cb653a00277941d174e85aa340fb8407b79ec6ee
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 9 13:41:45 2012 -0400

    Do not track use_monotonic field when is no monotonic clock

commit b8fd6f918b454016e11ea1338e12516e2c7428d8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 9 13:39:11 2012 -0400

    Use mach_absolute_time() for monotonic clock support on OSX.

commit a969f7e706194b5bd94f7231b5328cd9c9fd2d7d
Merge: 0af23d59 9b856fd5
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Mon Apr 9 08:40:45 2012 -0700

    Merge pull request #50 from rosslagerwall/simplify-test
    
    Simplify test.sh code significantly.

commit 0af23d591162b11c95d48d58af951d70e72ba2f7
Merge: d9a55153 3aa44159
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 9 11:33:08 2012 -0400

    Merge branch '21_weakrand'

commit 3aa44159c53af1d6459a85dc1841c7c494d52464
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 9 11:30:46 2012 -0400

    Tweak the new evutil_weakrand_() code
    
    Make its state actually get seeded.
    
    Document it more thoroughly.
    
    Turn its state into a structure.
    
    Fix a bug in evutil_weakrand_range_() where it could return the top of
    the range.
    
    Change its return type to ev_int32_t.
    
    Add a quick unit test to make sure that the value of
    evutil_weakrand_range_() is in range.

commit e86af4b7e56ed5b7050cb4f41ae534f54748598c
Author: Nicholas Marriott <nicholas.marriott@gmail.com>
Date:   Mon Apr 9 10:46:32 2012 -0400

    Change evutil_weakrand_() to avoid platform random()
    
    This change allows us to avoid perturbing the platform's random(), and
    to avoid hitting locks on random() in the platform's libc.
    
    evutil_weakrand_() is, well, weak, so we choose here an algorithm that
    favors speed over a number of other possibly desirable properties.
    We're using a linear congruential generator, and taking our parameters
    from those shared by the OpenBSD random() implementation, and
    Glibc's fastest random() implementation.
    
    The low bits of a LCG of modulus 2^32 are (notoriously) less random
    than the higher bits.  So to generate a random value in a range, using
    the % operator is no good; we ought to divide.  We add an
    evutil_weakrand_range_() function to do that.
    
    This code also changes the interface of evutil_weakrand_() so that it
    now manipulates an explicit seed, rather than having the seed in a
    static variable.  This change enables us to use existing locks to
    achieve thread-safety, rather than having to rely on an additional lock.
    
    (Patch by Nicholas Marriott; commit message by Nick Mathewson.)

commit 9b856fd59493e6bec64720caa8f85fba86b96b42
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Sat Apr 7 17:32:00 2012 +0200

    Simplify test.sh code significantly.
    
    Also make it easier to add new tests/backends.

commit d9a55153366a6b842761e380d65b13fd70d9a507
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 20:30:54 2012 -0400

    Increment the version to 2.1.1-alpha-dev

commit 6f2337dd0e3ec6aec54a4694f1b59e0262623d8e
Merge: 3ef4b353 d1a03b2f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 18:39:30 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit d1a03b2ff1bdba30a46a2cb291204f7e6f8a4d52
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 18:31:08 2012 -0400

    Backport: provide EVENT_LOG_* names, and deprecate _EVENT_LOG_*
    
    This is a partial backport of cb9da0bf and a backport of c9635349.
    
    Because C doesn't like us to declare identifiers starting with an
    underscore, Libevent 2.1 has renamed every such identifier.  The
    only change that affects a public API is that the _EVENT_LOG_*
    macros have been renamed to start with EVENT_LOG instead.  The old
    names are still present, but deprecated.
    
    I'm doing this backport because it represents the deprecation of a
    Libevent 2.0 interface, and folks should have the opportunity to
    write code that isn't deprecated and works with both 2.0 and 2.1.

commit 3ef4b3532f7068eec9536d5f36be312fbaff5844
Merge: 88b4f0bb f775521c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 17:27:07 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 88b4f0bb0d2ff2a57fed37376c409e62598f4eca
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 17:26:25 2012 -0400

    fix some typos in the 2.1 changelog

commit 3faaad49c4cccd6035c26566b8792a10a51d53c6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 17:26:12 2012 -0400

    Bump the version to Libevent 2.1.1-alpha

commit f775521c3159bb5dbbc6896374b0dbbb1cbfbf17
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 17:25:36 2012 -0400

    Fix the website URL in the readme

commit 2dedff36e1c209682a20d0768a6d70abd0d5fcf3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 16:50:54 2012 -0400

    Try to finalize changelog situation for 2.1.1-alpha

commit ba696dce0b8edbc541f9dd013f3accb8c455206c
Merge: 2bb8f2dd bcf52585
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 16:35:36 2012 -0400

    Merge remote-tracking branch 'vm/21_fix_nmake_build'

commit 2bb8f2dd78f785f755bb832166fbcfad907f7084
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 16:35:26 2012 -0400

    Add pending names to the README; add more entries to the changelog

commit bcf525853394e13364950d79468c1e7085c0cb95
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 16:24:18 2012 -0400

    Include ws2tcpip.h from util.h to get EAI_* definitions.
    
    This is necessary on msvc, to get the EVUTIL_EAI_* values defined properly

commit 2449e0c508a25bb31fdfe68d55fec1881af1f2c4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 16:15:49 2012 -0400

    Fix some compilation warnings with msvc

commit 07cb57042d11a386b9616a6c55af5bd0596f68ea
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 16:08:23 2012 -0400

    Oops; fix a merge conflict that got committed into event2/event-config.h.  Now msvc builds work again.

commit 6c95c6c8a266078af650e952dbd6013cf4de5ce9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 15:43:40 2012 -0400

    Decrease MAX_REQUESTS in test-fdleak
    
    We've got to do this because doing otherwise seems to freak out
    windows XP.

commit 14eb28a312bce53bc2efcf965486e0450d1f5f91
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 15:41:12 2012 -0400

    Include util-internal.h earlier in test-dumpevents to fix solaris build
    
    See 95e2455cdbf840b for rationale.

commit e78baf4a01743393d5d4c0b660f8e857d612424b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 14:54:39 2012 -0400

    Fix compilation with mm-replacement disabled.

commit 13dad99c2fa0ca94d1ac5398cf8f2951d9b8840c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 14:53:00 2012 -0400

    make event_base_get_running_event build with threads disabled.

commit 55e8dc1ba2296ed98175fb05b6419cbb67d4c95e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 14:51:51 2012 -0400

    Make check-dumpevents work with out-of-tree builds

commit f7b8200ca769f428c240568db71f20beb8a8a6d2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 12:36:51 2012 -0400

    Make check-dumpevents.py actually get included in the tarballs

commit 93defa2ffc35c38980dd263bb84c0fd1f9bd7c1d
Merge: e780d4e1 4a6fd433
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 3 09:52:40 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 4a6fd43313782e16fc79841048942291e19257df
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Tue Apr 3 05:31:20 2012 +0200

    Configure with gcc older than 2.95
    
    I don't know why people use such ancient gcc versions, but the fix seems
    straightforward enough to maybe just do it.

commit e780d4e16cec42ea6826773fb37f855e84395be8
Merge: 78d67b29 4c7ee6b0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 2 18:14:26 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 78d67b29736a4c52438444bfea0b031c714bd6b4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 2 18:13:53 2012 -0400

    Missing ) in bufferevent_ratelim.c comment. Found by rransom

commit 4c7ee6b0c9b9e376dc36cdf7d5a3acb1e3aa9b60
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 2 18:12:44 2012 -0400

    Add missing ) to changelog; spotted by rransom

commit 620f4a7c8fa44cf942669c9d962ebc1afa1557fe
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 2 17:31:31 2012 -0400

    Add a missing name to the readme.

commit e08a88d7024903acf5ad387a0246c3879f1e499e
Merge: dcab1347 fc23af45
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 1 01:01:50 2012 -0400

    Merge branch '21_http_test_timing'

commit fc23af45d1c4167f91606363d85bd0c8c93eb7e9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 1 00:21:55 2012 -0400

    Increase duration and tolerance on http/connection_retry test
    
    This takes its runtime back up a little again, but not so high as it
    was before.  It appears to address the heisenbug issues of github
    nmathewson/libevent issue #49.  So far.

commit dcab134708677f3b1f45b201e9d2e3df46de7f30
Merge: 09cbc3dc 336dcaea
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 30 10:29:08 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 336dcaeaef4037f9ce62c7739f45ebbeb7a27bf2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 30 10:26:50 2012 -0400

    Fix a compilation error with MSVC 2005 due to use of mode_t
    
    MSVC apparently doesn't have a mode_t defined, though mingw does.
    
    Found by Savg He.

commit 09cbc3dcfb69f5e29b72f63e6cbffc93d7623942
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 26 23:28:21 2012 -0400

    Temporarily disable event_queue_reinsert_timeout
    
    Apparently, now that we have tests for it in main/common_timeout, we
    can now see that it sometimes breaks referential integrity somehow.
    Since I'd like to get 2.1.1-alpha out the door soon, I'm turning it
    off for now.

commit 55e991b27ca40f5e1cdf33a85a27db5eff5f19d5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 26 17:35:21 2012 -0400

    Make libevent_global_shutdown() idempotent
    
    Two calls to libevent_global_shutdown on your exit path shouldn't
    result in a crash.

commit 43d5389c806b74a682d3e5c13bdd124ee9bfbd48
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 26 14:23:01 2012 -0400

    Updates for whatsnew-2.1.txt

commit 7f62f4ab2e5950dbb9ce0885f93344501e008092
Merge: d8a7853e 029a3db3
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Mon Mar 26 11:21:51 2012 -0700

    Merge pull request #48 from rosslagerwall/py-version
    
    Require python version

commit 029a3db3546b76c5d725d5282979dc82da3ddab2
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Mon Mar 26 20:12:45 2012 +0200

    Require at least Python 2.4 for check-dumpevents.py.

commit d8a7853ed0f8bb07fff5f65b0fc111e2ba8e5ee8
Merge: c24f91ad 98e9119f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Mar 25 18:56:34 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 98e9119fab5c3737e448957058f752f086fc48a7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Mar 25 18:56:15 2012 -0400

    Fix a typo in the bufferevent documentation

commit c24f91ad97677bd3648e598ec4e181fdf465a319
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Mar 25 18:55:31 2012 -0400

    Test more bufferevent_ratelim features

commit c5732fddb0e58004b56a0283579b4c89ea64350b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Mar 25 18:54:40 2012 -0400

    Add event_base_get_running_event() to get the event* whose cb we are in

commit 5626092c58af803d58400c03931932dc6191e7d2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 23 19:30:02 2012 -0400

    More coverage on reinsert_timeout tests

commit 8d08ccee092f29b4eb1e54bbea6eaf731b8a30a3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 23 19:29:45 2012 -0400

    Make test-dumpevents build on Linux

commit 8c36acd0b0b828c3cdf80972b38867285d21faec
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 23 18:42:56 2012 -0400

    Fix a nasty bug in event_queue_reinsert_timeout()
    
    What was I thinking?  The old function could handle heap-to-heap
    transitions, and transitions within the same common timeout queue, but
    it completely failed to handle heap/queue transitions, or transitions
    between timeout queues.
    
    Now, alas, it's complicated.  I should look hard at the assembly here
    to see if it's actually better than the alternatives.

commit 7afe48aab883dee157f9e2bda90fd772a84e7e65
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 23 17:56:23 2012 -0400

    Add a unit test for event_base_dump_events()
    
    This function uses a C program to generate its output, and then uses a
    Python program to check it for correctness.  On systems without
    Python, we just make sure that the C program doesn't crash.
    
    It's likely that we should be requiring some particular python version.
    This is an alpha, though: I'm sure somebody will tell us which.

commit 0343d8fec5528a7d3280e5e587d01cff69e42ccf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 23 17:53:08 2012 -0400

    event_base_dump_events: Report active events tersely, and note internal events

commit 172896831cfc47b86936ef81492a8b05bccf2fc4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 23 17:27:18 2012 -0400

    Fix compilation of evutil_rand on osx

commit 1d8240c04aeafd9499b7b03f8c380dc5fec4ba35
Merge: 15296d06 6aa48015
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Fri Mar 23 11:24:58 2012 -0700

    Merge pull request #47 from rosslagerwall/patch-1
    
    Fix typo in whatsnew-2.1.txt

commit 6aa48015691e782b8e7140523c6f40c50bfc2414
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Fri Mar 23 12:35:33 2012 +0200

    Fix typo in whatsnew-2.1.txt

commit 15296d06bd276a6bfb9601824d13228d5090aa9f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 18:24:43 2012 -0400

    Use libevent_global_shutdown() to clean up in unit tests.
    
    This bumps coverage up by a few lines. Every little bit helps.

commit 4fe81e238bf6bbbad8a2cda25812a18f37b3dc2e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 18:11:01 2012 -0400

    Distribute whatsnew-2.1.txt.

commit f98c1588c22464b8a04d558f4b731c42912c860d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 17:33:17 2012 -0400

    Fix another bug from rebase of libevent_global_shutdown patch
    
    This one affected machines without a builtin arc4random

commit 7ae08e5031493767a414e68d7b9a993f8e8370b7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 17:33:12 2012 -0400

    Write a first draft of whatsnew-2.1.txt

commit 107272b681e62c509a87de4a7e6e97a73e60d4f2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 15:17:19 2012 -0400

    Tweak changelog for 2.1 even more

commit 7c15a93f86be9e8909b06c383b50a5302a81fb22
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 12:44:44 2012 -0400

    Add more things to the 2.1 changelog

commit 33b2821c315faafe817c15707018f008bdc1ae74
Merge: ee412cff 25a424fb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 14:35:56 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 25a424fb8c797b27604628e4558c3d7d2ea13a1a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 14:35:23 2012 -0400

    Add an empty changelog section for 2.0.19-stable

commit ee412cffe019ea70d5723087eaa84c3c501e5fd6
Merge: cb528ed4 f0fb2c27
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 14:34:59 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit f0fb2c271cdbfe6d14c69a0093d1aeb29d66dd97
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 14:34:01 2012 -0400

    Bump version to 2.0.18-stable-dev

commit cb528ed472a2562f917054b21c897f7dc9ad221f
Merge: d1a904d0 75401035
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 14:13:28 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 75401035f019e06b49f9cb51fedbc30ac3d548a4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 14:00:54 2012 -0400

    Bump version to 2.0.18-stable

commit d1a904d0eb1207ad609ee038e077a47d5fcf3435
Merge: 1f50f3a3 90c0a7df
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 13:48:33 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 1f50f3a3a8c25374156d42e17817f93ad02fbfaa
Merge: 3e9612cd 77342926
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 13:47:30 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 90c0a7df84429021f51514ceb2fcceb71d372243
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 13:47:01 2012 -0400

    Add credits to README

commit 773429265278b7606a07fc0bd02367b06b14de02
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 12:49:08 2012 -0400

    Changelog for libevent 2.0.18-stable

commit 3e9612cd81c8a9881ef298fa59c40af343e4f126
Merge: 24dab0b3 041ca00c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 22 12:17:30 2012 -0400

    Merge branch 'global_shutdown_rebased_v2'

commit 041ca00c754eed316b7e3066613abee620aae9b5
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Tue Jul 12 12:25:41 2011 -0400

    Add a new libevent_global_shutdown() to free all globals before exiting.
    
    Mark Ellzey added a function libevent_shutdown() which calls a set of
    private functions:
    
           * event_free_globals()
           * event_free_debug_globals()
           * event_free_debug_globals_locks()
           * event_free_evsig_globals()
           * evsig_free_globals()
           * evsig_free_globals_locks()
           * evutil_free_globals()
           * evutil_free_secure_rng_globals()
           * evutil_free_secure_rng_globals_lock()
    
    Nick tweaked this libevent global shutdown code:
    
      - rename the function to emphasize that it's for global resources
      - write more in the doxygen
      - make function brace style consistent
      - add a missing void in a function definition.

commit 24dab0b3597a4062d479ce8ee38dc6abf81b9e57
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 19 14:39:06 2012 -0400

    event-read-fifo: Use EV_PERSIST appropriately

commit a5b370a2207132aa3426f681d8f4f03320ef6cc5
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Mon Mar 19 19:18:46 2012 +0200

    Rename event-test.c to event-read-fifo.c.
    
    Treat it as an example of reading from a named pipe, not an initial
    teaching tool.

commit c0dacd23b410c706c99fa987371f8bf182748b09
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Sun Mar 18 08:19:04 2012 +0200

    On Unix, remove event.fifo left by sample/event-test.c.
    
    This fifo would result in grep hanging when doing a recursive grep
    through the Libevent sources.
    
    event.fifo gets removed on SIGINT or normal exit.

commit 19bab4fbd0632b73900b1b2eef5e9eb4c155a819
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Mon Mar 12 18:45:00 2012 +0200

    Fix up sample/event-test.c to use newer interfaces and make it actually work.

commit 33e42ef3d3392521ec4f0dca22cec40794332602
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 13 19:14:57 2012 -0400

    Now that event_assign() special-cases event_self_cbarg(), event_new() can stop

commit 1da0e04a0a849de159025b4ef548da61e3145f93
Merge: 45d6213e 1338e6cd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 13 19:11:11 2012 -0400

    Merge remote-tracking branch 'ross/eventarg-v2'

commit 45d6213ef57c946857c48efa70ce33997d890464
Merge: 2d2aba18 c41c1a2b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 13 15:56:35 2012 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            configure.in

commit c41c1a2b80f2254ec580346b0897e95d0829f619
Merge: c2c7b39d 083296bc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 13 15:49:49 2012 -0400

    Merge remote-tracking branch 'sebastian/clang_unknown_warning_options' into patches-2.0

commit 1338e6cd565c700d2b6e7318ea0a83bdd3ce7dc0
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Tue Mar 13 21:42:40 2012 +0200

    Add a test for using event_self_cbarg() with event_assign().

commit 09a1906a2cd36e2776db681bf9796f58d3c0142f
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Tue Mar 13 21:41:22 2012 +0200

    event_self_cbarg() works with event_assign() for consistency with event_new().

commit c2c7b39d0dbf934d183db48a44c8d16965a35026
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Tue Mar 13 08:33:06 2012 +0100

    Properly zero the kevent in kq_setup_kevent()
    
    Detected by clang

commit 083296bc27be80a9ef4e6c9ae998ad8c961480e5
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Tue Mar 13 06:40:56 2012 +0100

    Don't do clang version detection when disabling some flags
    
    When clang 2.9 was around we hoped they'd introduce support for the
    normalized=id and override-init warnings by 3.0, but they haven't. We
    should only add the version detection back in when clang actually
    supports those warnings.

commit fa931bb3489bce61620179f60c81e8f9a9d707ab
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Mon Mar 12 21:32:45 2012 +0200

    Add a regression test for event_self_cbarg().

commit 817f374dc151845ad076d881aee42bbfadf8e36a
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Mon Mar 12 20:54:32 2012 +0200

    Update sample/signal-test.c to use the new event_self_cbarg().

commit ed36e6abea71afcbe691aeeb529bcc668e88bc7d
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Mon Mar 12 20:42:39 2012 +0200

    Add event_self_cbarg() to be used in conjunction with event_new().
    
    event_self_cbarg() returns a magic value which makes event_new()
    pass the event itself as the callback argument.

commit 2d2aba18a0a9a0ced47a70936b97e92223a15b0d
Merge: 133956ba ffb0ba07
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Tue Mar 6 06:50:57 2012 -0800

    Merge pull request #43 from rosslagerwall/build-output
    
    Print status information to stdout for event_rpcgen.py

commit ffb0ba07123574dd7d1d7f10746fd38e20a0d713
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Tue Mar 6 06:05:04 2012 +0200

    event_rpcgen.py now prints status information to stdout and errors to stderr.
    
    Before, running make > /dev/null would result in status information cluttering
    the error log. This changes it so that event_rpcgen.py prints status
    information to stdout like the rest of the build tools.

commit 133956bac3bb9b39d3d64145243813a48218ef63
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 19:36:17 2012 -0500

    Add netinet/in.h include to fix test-fdleak on openbsd

commit 0d1611dc3e4772cd1378c736db747de3ee4b8b8c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 17:36:12 2012 -0500

    Restore accidentally disabled nanosleep implementation of evutil_usleep.

commit da455e92f5e8d946835d7ced883e4739d0234108
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 15:48:59 2012 -0500

    Fix doxygen to use new macro conventions

commit 946b5841c22c4b050513ecf6d5a01bd521b05673
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 15:47:16 2012 -0500

    Clean up lingering _identifiers.

commit c7848fa019acda14c864a9db9632cfae6d7f5e33
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 15:07:33 2012 -0500

    Apply the naming convention to our EVUTIL_IS* functions

commit 8ac3c4c25bea4b9948ab91cd00605bf34fc0bd72
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 15:07:33 2012 -0500

    Have all visible internal function names end with an underscore.
    
    We haven't had a convention for naming internal functions in -internal.h
    versus naming visible functions in include/**.h.  This patch changes every
    function declared in a -internal.h file to be named ending with an
    underscore.
    
    Static function names are unaffected, since there's no risk of calling them
    from outside Libevent.
    
    This is an automatic conversion.  The script that produced was made by
    running the following script over the output of
    
    ctags --c-kinds=pf -o - *-internal.h |  cut -f 1 | sort| uniq
    
    (GNU ctags was required.)
    
    =====
    #!/usr/bin/perl -w -n
    
    use strict;
    
    BEGIN { print "#!/usr/bin/perl -w -i -p\n\n"; }
    
    chomp;
    
    my $ident = $_;
    
    next if ($ident =~ /_$/);
    next if ($ident =~ /^TAILQ/);
    
    my $better = "${ident}_";
    
    print "s/(?<![A-Za-z0-9_])$ident(?![A-Za-z0-9_])/$better/g;\n";
    
    === And then running the script below that it generated over all
    === the .c and .h files again
    #!/usr/bin/perl -w -i -p
    
    s/(?<![A-Za-z0-9_])bufferevent_async_can_connect(?![A-Za-z0-9_])/bufferevent_async_can_connect_/g;
    s/(?<![A-Za-z0-9_])bufferevent_async_connect(?![A-Za-z0-9_])/bufferevent_async_connect_/g;
    s/(?<![A-Za-z0-9_])bufferevent_async_new(?![A-Za-z0-9_])/bufferevent_async_new_/g;
    s/(?<![A-Za-z0-9_])bufferevent_async_set_connected(?![A-Za-z0-9_])/bufferevent_async_set_connected_/g;
    s/(?<![A-Za-z0-9_])bufferevent_decref(?![A-Za-z0-9_])/bufferevent_decref_/g;
    s/(?<![A-Za-z0-9_])bufferevent_disable_hard(?![A-Za-z0-9_])/bufferevent_disable_hard_/g;
    s/(?<![A-Za-z0-9_])bufferevent_enable_locking(?![A-Za-z0-9_])/bufferevent_enable_locking_/g;
    s/(?<![A-Za-z0-9_])bufferevent_incref(?![A-Za-z0-9_])/bufferevent_incref_/g;
    s/(?<![A-Za-z0-9_])bufferevent_init_common(?![A-Za-z0-9_])/bufferevent_init_common_/g;
    s/(?<![A-Za-z0-9_])bufferevent_remove_from_rate_limit_group_internal(?![A-Za-z0-9_])/bufferevent_remove_from_rate_limit_group_internal_/g;
    s/(?<![A-Za-z0-9_])bufferevent_suspend_read(?![A-Za-z0-9_])/bufferevent_suspend_read_/g;
    s/(?<![A-Za-z0-9_])bufferevent_suspend_write(?![A-Za-z0-9_])/bufferevent_suspend_write_/g;
    s/(?<![A-Za-z0-9_])bufferevent_unsuspend_read(?![A-Za-z0-9_])/bufferevent_unsuspend_read_/g;
    s/(?<![A-Za-z0-9_])bufferevent_unsuspend_write(?![A-Za-z0-9_])/bufferevent_unsuspend_write_/g;
    s/(?<![A-Za-z0-9_])evbuffer_commit_read(?![A-Za-z0-9_])/evbuffer_commit_read_/g;
    s/(?<![A-Za-z0-9_])evbuffer_commit_write(?![A-Za-z0-9_])/evbuffer_commit_write_/g;
    s/(?<![A-Za-z0-9_])evbuffer_invoke_callbacks(?![A-Za-z0-9_])/evbuffer_invoke_callbacks_/g;
    s/(?<![A-Za-z0-9_])evbuffer_launch_read(?![A-Za-z0-9_])/evbuffer_launch_read_/g;
    s/(?<![A-Za-z0-9_])evbuffer_launch_write(?![A-Za-z0-9_])/evbuffer_launch_write_/g;
    s/(?<![A-Za-z0-9_])evbuffer_overlapped_new(?![A-Za-z0-9_])/evbuffer_overlapped_new_/g;
    s/(?<![A-Za-z0-9_])evbuffer_set_parent(?![A-Za-z0-9_])/evbuffer_set_parent_/g;
    s/(?<![A-Za-z0-9_])event_active_nolock(?![A-Za-z0-9_])/event_active_nolock_/g;
    s/(?<![A-Za-z0-9_])event_base_add_virtual(?![A-Za-z0-9_])/event_base_add_virtual_/g;
    s/(?<![A-Za-z0-9_])event_base_assert_ok(?![A-Za-z0-9_])/event_base_assert_ok_/g;
    s/(?<![A-Za-z0-9_])event_base_del_virtual(?![A-Za-z0-9_])/event_base_del_virtual_/g;
    s/(?<![A-Za-z0-9_])event_base_get_deferred_cb_queue(?![A-Za-z0-9_])/event_base_get_deferred_cb_queue_/g;
    s/(?<![A-Za-z0-9_])event_base_get_iocp(?![A-Za-z0-9_])/event_base_get_iocp_/g;
    s/(?<![A-Za-z0-9_])event_base_start_iocp(?![A-Za-z0-9_])/event_base_start_iocp_/g;
    s/(?<![A-Za-z0-9_])event_base_stop_iocp(?![A-Za-z0-9_])/event_base_stop_iocp_/g;
    s/(?<![A-Za-z0-9_])event_changelist_add(?![A-Za-z0-9_])/event_changelist_add_/g;
    s/(?<![A-Za-z0-9_])event_changelist_del(?![A-Za-z0-9_])/event_changelist_del_/g;
    s/(?<![A-Za-z0-9_])event_changelist_freemem(?![A-Za-z0-9_])/event_changelist_freemem_/g;
    s/(?<![A-Za-z0-9_])event_changelist_init(?![A-Za-z0-9_])/event_changelist_init_/g;
    s/(?<![A-Za-z0-9_])event_changelist_remove_all(?![A-Za-z0-9_])/event_changelist_remove_all_/g;
    s/(?<![A-Za-z0-9_])event_deferred_cb_cancel(?![A-Za-z0-9_])/event_deferred_cb_cancel_/g;
    s/(?<![A-Za-z0-9_])event_deferred_cb_init(?![A-Za-z0-9_])/event_deferred_cb_init_/g;
    s/(?<![A-Za-z0-9_])event_deferred_cb_queue_init(?![A-Za-z0-9_])/event_deferred_cb_queue_init_/g;
    s/(?<![A-Za-z0-9_])event_deferred_cb_schedule(?![A-Za-z0-9_])/event_deferred_cb_schedule_/g;
    s/(?<![A-Za-z0-9_])event_get_win32_extension_fns(?![A-Za-z0-9_])/event_get_win32_extension_fns_/g;
    s/(?<![A-Za-z0-9_])event_iocp_activate_overlapped(?![A-Za-z0-9_])/event_iocp_activate_overlapped_/g;
    s/(?<![A-Za-z0-9_])event_iocp_port_associate(?![A-Za-z0-9_])/event_iocp_port_associate_/g;
    s/(?<![A-Za-z0-9_])event_iocp_port_launch(?![A-Za-z0-9_])/event_iocp_port_launch_/g;
    s/(?<![A-Za-z0-9_])event_iocp_shutdown(?![A-Za-z0-9_])/event_iocp_shutdown_/g;
    s/(?<![A-Za-z0-9_])event_overlapped_init(?![A-Za-z0-9_])/event_overlapped_init_/g;
    s/(?<![A-Za-z0-9_])evhttp_connection_connect(?![A-Za-z0-9_])/evhttp_connection_connect_/g;
    s/(?<![A-Za-z0-9_])evhttp_connection_fail(?![A-Za-z0-9_])/evhttp_connection_fail_/g;
    s/(?<![A-Za-z0-9_])evhttp_connection_reset(?![A-Za-z0-9_])/evhttp_connection_reset_/g;
    s/(?<![A-Za-z0-9_])evhttp_parse_firstline(?![A-Za-z0-9_])/evhttp_parse_firstline_/g;
    s/(?<![A-Za-z0-9_])evhttp_parse_headers(?![A-Za-z0-9_])/evhttp_parse_headers_/g;
    s/(?<![A-Za-z0-9_])evhttp_response_code(?![A-Za-z0-9_])/evhttp_response_code_/g;
    s/(?<![A-Za-z0-9_])evhttp_send_page(?![A-Za-z0-9_])/evhttp_send_page_/g;
    s/(?<![A-Za-z0-9_])evhttp_start_read(?![A-Za-z0-9_])/evhttp_start_read_/g;
    s/(?<![A-Za-z0-9_])EVLOCK_TRY_LOCK(?![A-Za-z0-9_])/EVLOCK_TRY_LOCK_/g;
    s/(?<![A-Za-z0-9_])evmap_check_integrity(?![A-Za-z0-9_])/evmap_check_integrity_/g;
    s/(?<![A-Za-z0-9_])evmap_delete_all(?![A-Za-z0-9_])/evmap_delete_all_/g;
    s/(?<![A-Za-z0-9_])evmap_foreach_event(?![A-Za-z0-9_])/evmap_foreach_event_/g;
    s/(?<![A-Za-z0-9_])evmap_io_active(?![A-Za-z0-9_])/evmap_io_active_/g;
    s/(?<![A-Za-z0-9_])evmap_io_add(?![A-Za-z0-9_])/evmap_io_add_/g;
    s/(?<![A-Za-z0-9_])evmap_io_clear(?![A-Za-z0-9_])/evmap_io_clear_/g;
    s/(?<![A-Za-z0-9_])evmap_io_del(?![A-Za-z0-9_])/evmap_io_del_/g;
    s/(?<![A-Za-z0-9_])evmap_io_get_fdinfo(?![A-Za-z0-9_])/evmap_io_get_fdinfo_/g;
    s/(?<![A-Za-z0-9_])evmap_io_initmap(?![A-Za-z0-9_])/evmap_io_initmap_/g;
    s/(?<![A-Za-z0-9_])evmap_reinit(?![A-Za-z0-9_])/evmap_reinit_/g;
    s/(?<![A-Za-z0-9_])evmap_signal_active(?![A-Za-z0-9_])/evmap_signal_active_/g;
    s/(?<![A-Za-z0-9_])evmap_signal_add(?![A-Za-z0-9_])/evmap_signal_add_/g;
    s/(?<![A-Za-z0-9_])evmap_signal_clear(?![A-Za-z0-9_])/evmap_signal_clear_/g;
    s/(?<![A-Za-z0-9_])evmap_signal_del(?![A-Za-z0-9_])/evmap_signal_del_/g;
    s/(?<![A-Za-z0-9_])evmap_signal_initmap(?![A-Za-z0-9_])/evmap_signal_initmap_/g;
    s/(?<![A-Za-z0-9_])evrpc_hook_associate_meta(?![A-Za-z0-9_])/evrpc_hook_associate_meta_/g;
    s/(?<![A-Za-z0-9_])evrpc_hook_context_free(?![A-Za-z0-9_])/evrpc_hook_context_free_/g;
    s/(?<![A-Za-z0-9_])evrpc_hook_meta_new(?![A-Za-z0-9_])/evrpc_hook_meta_new_/g;
    s/(?<![A-Za-z0-9_])evrpc_reqstate_free(?![A-Za-z0-9_])/evrpc_reqstate_free_/g;
    s/(?<![A-Za-z0-9_])evsig_dealloc(?![A-Za-z0-9_])/evsig_dealloc_/g;
    s/(?<![A-Za-z0-9_])evsig_init(?![A-Za-z0-9_])/evsig_init_/g;
    s/(?<![A-Za-z0-9_])evsig_set_base(?![A-Za-z0-9_])/evsig_set_base_/g;
    s/(?<![A-Za-z0-9_])ev_token_bucket_get_tick(?![A-Za-z0-9_])/ev_token_bucket_get_tick_/g;
    s/(?<![A-Za-z0-9_])ev_token_bucket_init(?![A-Za-z0-9_])/ev_token_bucket_init_/g;
    s/(?<![A-Za-z0-9_])ev_token_bucket_update(?![A-Za-z0-9_])/ev_token_bucket_update_/g;
    s/(?<![A-Za-z0-9_])evutil_accept4(?![A-Za-z0-9_])/evutil_accept4_/g;
    s/(?<![A-Za-z0-9_])evutil_addrinfo_append(?![A-Za-z0-9_])/evutil_addrinfo_append_/g;
    s/(?<![A-Za-z0-9_])evutil_adjust_hints_for_addrconfig(?![A-Za-z0-9_])/evutil_adjust_hints_for_addrconfig_/g;
    s/(?<![A-Za-z0-9_])evutil_ersatz_socketpair(?![A-Za-z0-9_])/evutil_ersatz_socketpair_/g;
    s/(?<![A-Za-z0-9_])evutil_eventfd(?![A-Za-z0-9_])/evutil_eventfd_/g;
    s/(?<![A-Za-z0-9_])evutil_format_sockaddr_port(?![A-Za-z0-9_])/evutil_format_sockaddr_port_/g;
    s/(?<![A-Za-z0-9_])evutil_getaddrinfo_async(?![A-Za-z0-9_])/evutil_getaddrinfo_async_/g;
    s/(?<![A-Za-z0-9_])evutil_getaddrinfo_common(?![A-Za-z0-9_])/evutil_getaddrinfo_common_/g;
    s/(?<![A-Za-z0-9_])evutil_getenv(?![A-Za-z0-9_])/evutil_getenv_/g;
    s/(?<![A-Za-z0-9_])evutil_hex_char_to_int(?![A-Za-z0-9_])/evutil_hex_char_to_int_/g;
    s/(?<![A-Za-z0-9_])EVUTIL_ISALNUM(?![A-Za-z0-9_])/EVUTIL_ISALNUM_/g;
    s/(?<![A-Za-z0-9_])EVUTIL_ISALPHA(?![A-Za-z0-9_])/EVUTIL_ISALPHA_/g;
    s/(?<![A-Za-z0-9_])EVUTIL_ISDIGIT(?![A-Za-z0-9_])/EVUTIL_ISDIGIT_/g;
    s/(?<![A-Za-z0-9_])EVUTIL_ISLOWER(?![A-Za-z0-9_])/EVUTIL_ISLOWER_/g;
    s/(?<![A-Za-z0-9_])EVUTIL_ISPRINT(?![A-Za-z0-9_])/EVUTIL_ISPRINT_/g;
    s/(?<![A-Za-z0-9_])EVUTIL_ISSPACE(?![A-Za-z0-9_])/EVUTIL_ISSPACE_/g;
    s/(?<![A-Za-z0-9_])EVUTIL_ISUPPER(?![A-Za-z0-9_])/EVUTIL_ISUPPER_/g;
    s/(?<![A-Za-z0-9_])EVUTIL_ISXDIGIT(?![A-Za-z0-9_])/EVUTIL_ISXDIGIT_/g;
    s/(?<![A-Za-z0-9_])evutil_load_windows_system_library(?![A-Za-z0-9_])/evutil_load_windows_system_library_/g;
    s/(?<![A-Za-z0-9_])evutil_make_internal_pipe(?![A-Za-z0-9_])/evutil_make_internal_pipe_/g;
    s/(?<![A-Za-z0-9_])evutil_new_addrinfo(?![A-Za-z0-9_])/evutil_new_addrinfo_/g;
    s/(?<![A-Za-z0-9_])evutil_open_closeonexec(?![A-Za-z0-9_])/evutil_open_closeonexec_/g;
    s/(?<![A-Za-z0-9_])evutil_read_file(?![A-Za-z0-9_])/evutil_read_file_/g;
    s/(?<![A-Za-z0-9_])evutil_resolve(?![A-Za-z0-9_])/evutil_resolve_/g;
    s/(?<![A-Za-z0-9_])evutil_set_evdns_getaddrinfo_fn(?![A-Za-z0-9_])/evutil_set_evdns_getaddrinfo_fn_/g;
    s/(?<![A-Za-z0-9_])evutil_sockaddr_is_loopback(?![A-Za-z0-9_])/evutil_sockaddr_is_loopback_/g;
    s/(?<![A-Za-z0-9_])evutil_socket(?![A-Za-z0-9_])/evutil_socket_/g;
    s/(?<![A-Za-z0-9_])evutil_socket_connect(?![A-Za-z0-9_])/evutil_socket_connect_/g;
    s/(?<![A-Za-z0-9_])evutil_socket_finished_connecting(?![A-Za-z0-9_])/evutil_socket_finished_connecting_/g;
    s/(?<![A-Za-z0-9_])EVUTIL_TOLOWER(?![A-Za-z0-9_])/EVUTIL_TOLOWER_/g;
    s/(?<![A-Za-z0-9_])EVUTIL_TOUPPER(?![A-Za-z0-9_])/EVUTIL_TOUPPER_/g;
    s/(?<![A-Za-z0-9_])evutil_tv_to_msec(?![A-Za-z0-9_])/evutil_tv_to_msec_/g;
    s/(?<![A-Za-z0-9_])evutil_usleep(?![A-Za-z0-9_])/evutil_usleep_/g;
    s/(?<![A-Za-z0-9_])ht_improve_hash(?![A-Za-z0-9_])/ht_improve_hash_/g;
    s/(?<![A-Za-z0-9_])ht_string_hash(?![A-Za-z0-9_])/ht_string_hash_/g;
    s/(?<![A-Za-z0-9_])min_heap_adjust(?![A-Za-z0-9_])/min_heap_adjust_/g;
    s/(?<![A-Za-z0-9_])min_heap_ctor(?![A-Za-z0-9_])/min_heap_ctor_/g;
    s/(?<![A-Za-z0-9_])min_heap_dtor(?![A-Za-z0-9_])/min_heap_dtor_/g;
    s/(?<![A-Za-z0-9_])min_heap_elem_init(?![A-Za-z0-9_])/min_heap_elem_init_/g;
    s/(?<![A-Za-z0-9_])min_heap_elt_is_top(?![A-Za-z0-9_])/min_heap_elt_is_top_/g;
    s/(?<![A-Za-z0-9_])min_heap_empty(?![A-Za-z0-9_])/min_heap_empty_/g;
    s/(?<![A-Za-z0-9_])min_heap_erase(?![A-Za-z0-9_])/min_heap_erase_/g;
    s/(?<![A-Za-z0-9_])min_heap_pop(?![A-Za-z0-9_])/min_heap_pop_/g;
    s/(?<![A-Za-z0-9_])min_heap_push(?![A-Za-z0-9_])/min_heap_push_/g;
    s/(?<![A-Za-z0-9_])min_heap_reserve(?![A-Za-z0-9_])/min_heap_reserve_/g;
    s/(?<![A-Za-z0-9_])min_heap_size(?![A-Za-z0-9_])/min_heap_size_/g;
    s/(?<![A-Za-z0-9_])min_heap_top(?![A-Za-z0-9_])/min_heap_top_/g;

commit c9635349ecd241b769afcbd76202a292cf3a26dd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 15:07:32 2012 -0500

    Fix some problems introduced by automated identifier cleanup script

commit bcefd246947850691d3552eabf00a447e41d0265
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 15:07:32 2012 -0500

    Make event_rpcgen.py output conform to indentifier conventions, more

commit cb9da0bf38c18e6406bbba4f5373fb41e4dac2f5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 15:07:32 2012 -0500

    Fix all identifiers with names beginning with underscore.
    
    These are reserved in C.  We'd been erroneously using them to indicate
    internal use.
    
    Instead, we now use a trailing underscore whenever we'd been using a leading
    underscore.
    
    This is an automatic conversion.  The script that produced was made by
    running the following script over the output of
    
     git ls-tree -r --name-only HEAD | grep  '\.[ch]$' | \
       xargs ctags --c-kinds=defglmpstuvx -o - | grep '^_' | \
       cut -f 1 | sort| uniq
    
    (GNU ctags was required.)
    
    =====
    #!/usr/bin/perl -w -n
    
    use strict;
    
    BEGIN { print "#!/usr/bin/perl -w -i -p\n\n"; }
    
    chomp;
    
    next if (/^__func__/ or
             /^_FILE_OFFSET_BITS/ or
             /^_FORTIFY_SOURCE/ or
             /^_GNU_SOURCE/ or
             /^_WIN32/ or
             /^_DARWIN_UNLIMITED/ or
             /^_FILE_OFFSET_BITS/ or
             /^_LARGEFILE64_SOURCE/ or
             /^_LFS64_LARGEFILE/ or
             /^__cdecl/ or
             /^__attribute__/ or
             /^__func__/ or
             /^_SYS_TREE_H_/);
    
    my $ident = $_;
    
    my $better = $ident;
    $better =~ s/^_//;
    
    if ($ident !~ /EVENT_LOG_/) {
        $better = "${better}_";
    }
    
    print "s/(?<![A-Za-z0-9_])$ident(?![A-Za-z0-9_])/$better/g;\n";
    
    === And then running the script below that it generated over all
    === the .c and .h files again
    #!/usr/bin/perl -w -i -p
    
    s/(?<![A-Za-z0-9_])_ARC4_LOCK(?![A-Za-z0-9_])/ARC4_LOCK_/g;
    s/(?<![A-Za-z0-9_])_ARC4_UNLOCK(?![A-Za-z0-9_])/ARC4_UNLOCK_/g;
    s/(?<![A-Za-z0-9_])_bev_group_random_element(?![A-Za-z0-9_])/bev_group_random_element_/g;
    s/(?<![A-Za-z0-9_])_bev_group_refill_callback(?![A-Za-z0-9_])/bev_group_refill_callback_/g;
    s/(?<![A-Za-z0-9_])_bev_group_suspend_reading(?![A-Za-z0-9_])/bev_group_suspend_reading_/g;
    s/(?<![A-Za-z0-9_])_bev_group_suspend_writing(?![A-Za-z0-9_])/bev_group_suspend_writing_/g;
    s/(?<![A-Za-z0-9_])_bev_group_unsuspend_reading(?![A-Za-z0-9_])/bev_group_unsuspend_reading_/g;
    s/(?<![A-Za-z0-9_])_bev_group_unsuspend_writing(?![A-Za-z0-9_])/bev_group_unsuspend_writing_/g;
    s/(?<![A-Za-z0-9_])_bev_refill_callback(?![A-Za-z0-9_])/bev_refill_callback_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_add_event(?![A-Za-z0-9_])/bufferevent_add_event_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_cancel_all(?![A-Za-z0-9_])/bufferevent_cancel_all_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_decref_and_unlock(?![A-Za-z0-9_])/bufferevent_decref_and_unlock_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_decrement_read_buckets(?![A-Za-z0-9_])/bufferevent_decrement_read_buckets_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_decrement_write_buckets(?![A-Za-z0-9_])/bufferevent_decrement_write_buckets_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_del_generic_timeout_cbs(?![A-Za-z0-9_])/bufferevent_del_generic_timeout_cbs_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_generic_adj_timeouts(?![A-Za-z0-9_])/bufferevent_generic_adj_timeouts_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_get_read_max(?![A-Za-z0-9_])/bufferevent_get_read_max_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_get_rlim_max(?![A-Za-z0-9_])/bufferevent_get_rlim_max_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_get_write_max(?![A-Za-z0-9_])/bufferevent_get_write_max_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_incref_and_lock(?![A-Za-z0-9_])/bufferevent_incref_and_lock_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_init_generic_timeout_cbs(?![A-Za-z0-9_])/bufferevent_init_generic_timeout_cbs_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_ratelim_init(?![A-Za-z0-9_])/bufferevent_ratelim_init_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_run_eventcb(?![A-Za-z0-9_])/bufferevent_run_eventcb_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_run_readcb(?![A-Za-z0-9_])/bufferevent_run_readcb_/g;
    s/(?<![A-Za-z0-9_])_bufferevent_run_writecb(?![A-Za-z0-9_])/bufferevent_run_writecb_/g;
    s/(?<![A-Za-z0-9_])_ev(?![A-Za-z0-9_])/ev_/g;
    s/(?<![A-Za-z0-9_])_evbuffer_chain_pin(?![A-Za-z0-9_])/evbuffer_chain_pin_/g;
    s/(?<![A-Za-z0-9_])_evbuffer_chain_unpin(?![A-Za-z0-9_])/evbuffer_chain_unpin_/g;
    s/(?<![A-Za-z0-9_])_evbuffer_decref_and_unlock(?![A-Za-z0-9_])/evbuffer_decref_and_unlock_/g;
    s/(?<![A-Za-z0-9_])_evbuffer_expand_fast(?![A-Za-z0-9_])/evbuffer_expand_fast_/g;
    s/(?<![A-Za-z0-9_])_evbuffer_incref(?![A-Za-z0-9_])/evbuffer_incref_/g;
    s/(?<![A-Za-z0-9_])_evbuffer_incref_and_lock(?![A-Za-z0-9_])/evbuffer_incref_and_lock_/g;
    s/(?<![A-Za-z0-9_])_EVBUFFER_IOVEC_IS_NATIVE(?![A-Za-z0-9_])/EVBUFFER_IOVEC_IS_NATIVE_/g;
    s/(?<![A-Za-z0-9_])_evbuffer_overlapped_get_fd(?![A-Za-z0-9_])/evbuffer_overlapped_get_fd_/g;
    s/(?<![A-Za-z0-9_])_evbuffer_overlapped_set_fd(?![A-Za-z0-9_])/evbuffer_overlapped_set_fd_/g;
    s/(?<![A-Za-z0-9_])_evbuffer_read_setup_vecs(?![A-Za-z0-9_])/evbuffer_read_setup_vecs_/g;
    s/(?<![A-Za-z0-9_])_evbuffer_validate(?![A-Za-z0-9_])/evbuffer_validate_/g;
    s/(?<![A-Za-z0-9_])_evdns_log(?![A-Za-z0-9_])/evdns_log_/g;
    s/(?<![A-Za-z0-9_])_evdns_nameserver_add_impl(?![A-Za-z0-9_])/evdns_nameserver_add_impl_/g;
    s/(?<![A-Za-z0-9_])_EVENT_CONFIG_H_(?![A-Za-z0-9_])/EVENT_CONFIG_H__/g;
    s/(?<![A-Za-z0-9_])_event_debug_assert_is_setup(?![A-Za-z0-9_])/event_debug_assert_is_setup_/g;
    s/(?<![A-Za-z0-9_])_event_debug_assert_not_added(?![A-Za-z0-9_])/event_debug_assert_not_added_/g;
    s/(?<![A-Za-z0-9_])_event_debug_get_logging_mask(?![A-Za-z0-9_])/event_debug_get_logging_mask_/g;
    s/(?<![A-Za-z0-9_])_event_debug_logging_mask(?![A-Za-z0-9_])/event_debug_logging_mask_/g;
    s/(?<![A-Za-z0-9_])_event_debug_map_lock(?![A-Za-z0-9_])/event_debug_map_lock_/g;
    s/(?<![A-Za-z0-9_])_event_debug_mode_on(?![A-Za-z0-9_])/event_debug_mode_on_/g;
    s/(?<![A-Za-z0-9_])_event_debug_note_add(?![A-Za-z0-9_])/event_debug_note_add_/g;
    s/(?<![A-Za-z0-9_])_event_debug_note_del(?![A-Za-z0-9_])/event_debug_note_del_/g;
    s/(?<![A-Za-z0-9_])_event_debug_note_setup(?![A-Za-z0-9_])/event_debug_note_setup_/g;
    s/(?<![A-Za-z0-9_])_event_debug_note_teardown(?![A-Za-z0-9_])/event_debug_note_teardown_/g;
    s/(?<![A-Za-z0-9_])_event_debugx(?![A-Za-z0-9_])/event_debugx_/g;
    s/(?<![A-Za-z0-9_])_EVENT_DEFINED_LISTENTRY(?![A-Za-z0-9_])/EVENT_DEFINED_LISTENTRY_/g;
    s/(?<![A-Za-z0-9_])_EVENT_DEFINED_TQENTRY(?![A-Za-z0-9_])/EVENT_DEFINED_TQENTRY_/g;
    s/(?<![A-Za-z0-9_])_EVENT_DEFINED_TQHEAD(?![A-Za-z0-9_])/EVENT_DEFINED_TQHEAD_/g;
    s/(?<![A-Za-z0-9_])_EVENT_DNS_USE_FTIME_FOR_ID(?![A-Za-z0-9_])/EVENT_DNS_USE_FTIME_FOR_ID_/g;
    s/(?<![A-Za-z0-9_])_EVENT_ERR_ABORT(?![A-Za-z0-9_])/EVENT_ERR_ABORT_/g;
    s/(?<![A-Za-z0-9_])_EVENT_EVCONFIG__PRIVATE_H(?![A-Za-z0-9_])/EVENT_EVCONFIG__PRIVATE_H_/g;
    s/(?<![A-Za-z0-9_])_event_iocp_port_unlock_and_free(?![A-Za-z0-9_])/event_iocp_port_unlock_and_free_/g;
    s/(?<![A-Za-z0-9_])_EVENT_LOG_DEBUG(?![A-Za-z0-9_])/EVENT_LOG_DEBUG/g;
    s/(?<![A-Za-z0-9_])_EVENT_LOG_ERR(?![A-Za-z0-9_])/EVENT_LOG_ERR/g;
    s/(?<![A-Za-z0-9_])_EVENT_LOG_MSG(?![A-Za-z0-9_])/EVENT_LOG_MSG/g;
    s/(?<![A-Za-z0-9_])_EVENT_LOG_WARN(?![A-Za-z0-9_])/EVENT_LOG_WARN/g;
    s/(?<![A-Za-z0-9_])_event_strlcpy(?![A-Za-z0-9_])/event_strlcpy_/g;
    s/(?<![A-Za-z0-9_])_EVHTTP_REQ_UNKNOWN(?![A-Za-z0-9_])/EVHTTP_REQ_UNKNOWN_/g;
    s/(?<![A-Za-z0-9_])_EVLOCK_SORTLOCKS(?![A-Za-z0-9_])/EVLOCK_SORTLOCKS_/g;
    s/(?<![A-Za-z0-9_])_evrpc_hooks(?![A-Za-z0-9_])/evrpc_hooks_/g;
    s/(?<![A-Za-z0-9_])_evsig_restore_handler(?![A-Za-z0-9_])/evsig_restore_handler_/g;
    s/(?<![A-Za-z0-9_])_evsig_set_handler(?![A-Za-z0-9_])/evsig_set_handler_/g;
    s/(?<![A-Za-z0-9_])_evthread_cond_fns(?![A-Za-z0-9_])/evthread_cond_fns_/g;
    s/(?<![A-Za-z0-9_])_evthread_debug_get_real_lock(?![A-Za-z0-9_])/evthread_debug_get_real_lock_/g;
    s/(?<![A-Za-z0-9_])_evthread_id_fn(?![A-Za-z0-9_])/evthread_id_fn_/g;
    s/(?<![A-Za-z0-9_])_evthreadimpl_cond_alloc(?![A-Za-z0-9_])/evthreadimpl_cond_alloc_/g;
    s/(?<![A-Za-z0-9_])_evthreadimpl_cond_free(?![A-Za-z0-9_])/evthreadimpl_cond_free_/g;
    s/(?<![A-Za-z0-9_])_evthreadimpl_cond_signal(?![A-Za-z0-9_])/evthreadimpl_cond_signal_/g;
    s/(?<![A-Za-z0-9_])_evthreadimpl_cond_wait(?![A-Za-z0-9_])/evthreadimpl_cond_wait_/g;
    s/(?<![A-Za-z0-9_])_evthreadimpl_get_id(?![A-Za-z0-9_])/evthreadimpl_get_id_/g;
    s/(?<![A-Za-z0-9_])_evthreadimpl_is_lock_debugging_enabled(?![A-Za-z0-9_])/evthreadimpl_is_lock_debugging_enabled_/g;
    s/(?<![A-Za-z0-9_])_evthreadimpl_lock_alloc(?![A-Za-z0-9_])/evthreadimpl_lock_alloc_/g;
    s/(?<![A-Za-z0-9_])_evthreadimpl_lock_free(?![A-Za-z0-9_])/evthreadimpl_lock_free_/g;
    s/(?<![A-Za-z0-9_])_evthreadimpl_locking_enabled(?![A-Za-z0-9_])/evthreadimpl_locking_enabled_/g;
    s/(?<![A-Za-z0-9_])_evthreadimpl_lock_lock(?![A-Za-z0-9_])/evthreadimpl_lock_lock_/g;
    s/(?<![A-Za-z0-9_])_evthreadimpl_lock_unlock(?![A-Za-z0-9_])/evthreadimpl_lock_unlock_/g;
    s/(?<![A-Za-z0-9_])_evthread_is_debug_lock_held(?![A-Za-z0-9_])/evthread_is_debug_lock_held_/g;
    s/(?<![A-Za-z0-9_])_evthread_lock_debugging_enabled(?![A-Za-z0-9_])/evthread_lock_debugging_enabled_/g;
    s/(?<![A-Za-z0-9_])_evthread_lock_fns(?![A-Za-z0-9_])/evthread_lock_fns_/g;
    s/(?<![A-Za-z0-9_])_EVUTIL_NIL_CONDITION(?![A-Za-z0-9_])/EVUTIL_NIL_CONDITION_/g;
    s/(?<![A-Za-z0-9_])_EVUTIL_NIL_STMT(?![A-Za-z0-9_])/EVUTIL_NIL_STMT_/g;
    s/(?<![A-Za-z0-9_])_evutil_weakrand(?![A-Za-z0-9_])/evutil_weakrand_/g;
    s/(?<![A-Za-z0-9_])_http_close_detection(?![A-Za-z0-9_])/http_close_detection_/g;
    s/(?<![A-Za-z0-9_])_http_connection_test(?![A-Za-z0-9_])/http_connection_test_/g;
    s/(?<![A-Za-z0-9_])_http_incomplete_test(?![A-Za-z0-9_])/http_incomplete_test_/g;
    s/(?<![A-Za-z0-9_])_http_stream_in_test(?![A-Za-z0-9_])/http_stream_in_test_/g;
    s/(?<![A-Za-z0-9_])_internal(?![A-Za-z0-9_])/internal_/g;
    s/(?<![A-Za-z0-9_])_mm_free_fn(?![A-Za-z0-9_])/mm_free_fn_/g;
    s/(?<![A-Za-z0-9_])_mm_malloc_fn(?![A-Za-z0-9_])/mm_malloc_fn_/g;
    s/(?<![A-Za-z0-9_])_mm_realloc_fn(?![A-Za-z0-9_])/mm_realloc_fn_/g;
    s/(?<![A-Za-z0-9_])_original_cond_fns(?![A-Za-z0-9_])/original_cond_fns_/g;
    s/(?<![A-Za-z0-9_])_original_lock_fns(?![A-Za-z0-9_])/original_lock_fns_/g;
    s/(?<![A-Za-z0-9_])_rpc_hook_ctx(?![A-Za-z0-9_])/rpc_hook_ctx_/g;
    s/(?<![A-Za-z0-9_])_SYS_QUEUE_H_(?![A-Za-z0-9_])/SYS_QUEUE_H__/g;
    s/(?<![A-Za-z0-9_])_t(?![A-Za-z0-9_])/t_/g;
    s/(?<![A-Za-z0-9_])_t32(?![A-Za-z0-9_])/t32_/g;
    s/(?<![A-Za-z0-9_])_test_ai_eq(?![A-Za-z0-9_])/test_ai_eq_/g;
    s/(?<![A-Za-z0-9_])_URI_ADD(?![A-Za-z0-9_])/URI_ADD_/g;
    s/(?<![A-Za-z0-9_])_URI_FREE_STR(?![A-Za-z0-9_])/URI_FREE_STR_/g;
    s/(?<![A-Za-z0-9_])_URI_SET_STR(?![A-Za-z0-9_])/URI_SET_STR_/g;
    s/(?<![A-Za-z0-9_])_warn_helper(?![A-Za-z0-9_])/warn_helper_/g;

commit 639383a45427ecfb3dc305bbefc345abf7d31940
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 15:07:31 2012 -0500

    Make the generated event-config.h use correct include guards

commit 5c0f7e06ce8c636b0d899ea19cd5b292c839e60c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 15:07:31 2012 -0500

    Stop referring to an obsolete include guard in bench_http.h

commit 372bff1c07dba7afba815a8b47ce47682b9413f8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 15:07:31 2012 -0500

    Make event_rpcgen.py output conform to indentifier conventions

commit 3f8c7cd0353f4b2adcf19a90ffd3b8ba42b68209
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 15:07:31 2012 -0500

    Convert include-guard macro convention to avoid reserved identifiers
    
    Previously we used include-guards with names like _EVENT2_EVENT_H_.
    But C reserves macros beginning with an underscore for use by the
    system.  This patch converts all include guards for files like
    include/event2/<fname.h> to be of form EVENT2_<FNAME_H>_INCLUDED_,
    and all Libevent 1.x headers in include/<fname.h> to be of the form
    EVENT1_<FNAME_H>_INCLUDED_, and all internal libevent headers with
    names like <fname.h> to the form <FNAME_H>_INCLUDED_.
    
    FNAME_H is here derived from fname.h by replacing every
    non-macro-usable character in fname.h with an underscore, and
    putting every remaining character in uppercase.
    
    This is an automatic conversion.  The script that produced was made by
    running the following script over all header files:
    
    =====
    #!/usr/bin/perl -w
    
    # Run this on every .h file except config.h, sys/queue.h, WIN32/event2/event-config.h
    
    use strict;
    
    my %macros = ();
    my %skipped = ();
    FILE: for my $fn (@ARGV) {
        my $f = $fn;
        if ($fn !~ /^\.\//) {
            $f = "./$fn";
        }
        if ($f eq './config.h' or
            $f =~ m#/tree.h$# or
            $f =~ m#/queue.h# or
            $f =~ m#/event-config.h# or
            $f =~ m#/evconfig-private.h#) {
            $skipped{$fn} = 1;
            next FILE;
        }
        $skipped{$fn} = 0;
        open(F, $fn);
        while (<F>) {
            if (/^#ifndef ([A-Za-z0-9_]+)/) {
                $macros{$fn} = $1;
                next FILE;
            }
        }
    }
    
    print "#!/usr/bin/perl -w -i -p\n\n";
    for my $fn (@ARGV) {
        if (! exists $macros{$fn}) {
            print "# No macro known for $fn!\n" if (!$skipped{$fn});
        } else {
            if ($macros{$fn} !~ /_H_?$/) {
                print "# Weird macro for $fn...\n";
            }
            my $goodmacro = uc $fn;
            $goodmacro =~ s#^\./##;
            $goodmacro =~ s#INCLUDE/EVENT2#EVENT2#;
            $goodmacro =~ s#INCLUDE/#EVENT1_#;
            $goodmacro =~ s#TEST/##;
    
            $goodmacro =~ s#[\/\-\.]#_#g;
    
            print "s/(?<![A-Za-z0-9_])$macros{$fn}(?![A-Za-z0-9_])/${goodmacro}_INCLUDED_/g;\n"
        }
    }
    === And then running the script below that it generated over all
    === the .h files again
    #!/usr/bin/perl -w -i -p
    
    s/(?<![A-Za-z0-9_])_BUFFEREVENT_INTERNAL_H_(?![A-Za-z0-9_])/BUFFEREVENT_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_CHANGELIST_H_(?![A-Za-z0-9_])/CHANGELIST_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_DEFER_INTERNAL_H_(?![A-Za-z0-9_])/DEFER_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVBUFFER_INTERNAL_H_(?![A-Za-z0-9_])/EVBUFFER_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT_INTERNAL_H_(?![A-Za-z0-9_])/EVENT_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVMAP_H_(?![A-Za-z0-9_])/EVMAP_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVRPC_INTERNAL_H_(?![A-Za-z0-9_])/EVRPC_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVSIGNAL_H_(?![A-Za-z0-9_])/EVSIGNAL_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVTHREAD_INTERNAL_H_(?![A-Za-z0-9_])/EVTHREAD_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT_HT_H(?![A-Za-z0-9_])/HT_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_HTTP_INTERNAL_H_(?![A-Za-z0-9_])/HTTP_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVDNS_H_(?![A-Za-z0-9_])/EVENT1_EVDNS_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT_H_(?![A-Za-z0-9_])/EVENT1_EVENT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_BUFFER_H_(?![A-Za-z0-9_])/EVENT2_BUFFER_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_BUFFER_COMPAT_H_(?![A-Za-z0-9_])/EVENT2_BUFFER_COMPAT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_BUFFEREVENT_H_(?![A-Za-z0-9_])/EVENT2_BUFFEREVENT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_BUFFEREVENT_COMPAT_H_(?![A-Za-z0-9_])/EVENT2_BUFFEREVENT_COMPAT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_BUFFEREVENT_SSL_H_(?![A-Za-z0-9_])/EVENT2_BUFFEREVENT_SSL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_BUFFEREVENT_STRUCT_H_(?![A-Za-z0-9_])/EVENT2_BUFFEREVENT_STRUCT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_DNS_H_(?![A-Za-z0-9_])/EVENT2_DNS_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_DNS_COMPAT_H_(?![A-Za-z0-9_])/EVENT2_DNS_COMPAT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_DNS_STRUCT_H_(?![A-Za-z0-9_])/EVENT2_DNS_STRUCT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_EVENT_H_(?![A-Za-z0-9_])/EVENT2_EVENT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_EVENT_COMPAT_H_(?![A-Za-z0-9_])/EVENT2_EVENT_COMPAT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_EVENT_STRUCT_H_(?![A-Za-z0-9_])/EVENT2_EVENT_STRUCT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_HTTP_H_(?![A-Za-z0-9_])/EVENT2_HTTP_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_HTTP_COMPAT_H_(?![A-Za-z0-9_])/EVENT2_HTTP_COMPAT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_HTTP_STRUCT_H_(?![A-Za-z0-9_])/EVENT2_HTTP_STRUCT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_EVENT_KEYVALQ_STRUCT_H_(?![A-Za-z0-9_])/EVENT2_KEYVALQ_STRUCT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_LISTENER_H_(?![A-Za-z0-9_])/EVENT2_LISTENER_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_RPC_H_(?![A-Za-z0-9_])/EVENT2_RPC_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_RPC_COMPAT_H_(?![A-Za-z0-9_])/EVENT2_RPC_COMPAT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_RPC_STRUCT_H_(?![A-Za-z0-9_])/EVENT2_RPC_STRUCT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_TAG_H_(?![A-Za-z0-9_])/EVENT2_TAG_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_TAG_COMPAT_H_(?![A-Za-z0-9_])/EVENT2_TAG_COMPAT_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_THREAD_H_(?![A-Za-z0-9_])/EVENT2_THREAD_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT2_UTIL_H_(?![A-Za-z0-9_])/EVENT2_UTIL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVHTTP_H_(?![A-Za-z0-9_])/EVENT1_EVHTTP_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVRPC_H_(?![A-Za-z0-9_])/EVENT1_EVRPC_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVUTIL_H_(?![A-Za-z0-9_])/EVENT1_EVUTIL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT_IOCP_INTERNAL_H(?![A-Za-z0-9_])/IOCP_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT_IPV6_INTERNAL_H(?![A-Za-z0-9_])/IPV6_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_LOG_H_(?![A-Za-z0-9_])/LOG_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_MIN_HEAP_H_(?![A-Za-z0-9_])/MINHEAP_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT_MM_INTERNAL_H(?![A-Za-z0-9_])/MM_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_RATELIM_INTERNAL_H_(?![A-Za-z0-9_])/RATELIM_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_STRLCPY_INTERNAL_H_(?![A-Za-z0-9_])/STRLCPY_INTERNAL_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_REGRESS_H_(?![A-Za-z0-9_])/REGRESS_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_TESTUTILS_H(?![A-Za-z0-9_])/REGRESS_TESTUTILS_H_INCLUDED_/g;
    # Weird macro for test/tinytest.h...
    s/(?<![A-Za-z0-9_])TINYTEST_H_INCLUDED_(?![A-Za-z0-9_])/TINYTEST_H_INCLUDED_/g;
    # No macro known for test/tinytest_local.h!
    # Weird macro for test/tinytest_macros.h...
    s/(?<![A-Za-z0-9_])TINYTEST_MACROS_H_INCLUDED_(?![A-Za-z0-9_])/TINYTEST_MACROS_H_INCLUDED_/g;
    s/(?<![A-Za-z0-9_])_EVENT_UTIL_INTERNAL_H(?![A-Za-z0-9_])/UTIL_INTERNAL_H_INCLUDED_/g;

commit f82c57e50531bf89820eaadf8d95852c47b6391e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 15:07:31 2012 -0500

    Generate event-config.h using the correct macros.
    
    The previous patch didn't change the sed script in Makefile.am, since
    that couldn't be done automatically.

commit 68120d9b000a3ad8e09388a66acf6d902136ae8b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 15:07:31 2012 -0500

    Convert event-config.h macros to avoid reserved identifiers
    
    C reserves all identifiers beginning with an underscore for system
    use.  But we had been mangling our autoconf identifiers with the
    prefix "_EVENT_" to avoid conflict with other programs.
    
    Instead, we will now use the prefix "EVENT__".  With any luck, the
    double-underscore will still hint "here be dragons" to anybody
    tempted to think that event-config.h is a stable api.
    
    This is an automatically generated patch.  The script that produced
    it was made by running this script over config.h.in:
    
    =====
    
    #!/usr/bin/perl -w
    
    # Run this on config.h.in
    
    use strict;
    
    my %macros = ();
    
    while (<>) {
        if (/^# *undef +([A-Za-z0-9_]+)/) {
            $macros{$1} = 1;
        }
    }
    
    print "#!/usr/bin/perl -w -i -p\n\n";
    for my $k (sort keys %macros) {
        print "s/(?<![A-Za-z0-9_])_EVENT_$k(?![A-Za-z0-9_])/EVENT__$k/g;\n";
    }
    
    == And the script that it generated was then run over all .c and .h files:
    #!/usr/bin/perl -w -i -p
    
    s/(?<![A-Za-z0-9_])_EVENT_DISABLE_DEBUG_MODE(?![A-Za-z0-9_])/EVENT__DISABLE_DEBUG_MODE/g;
    s/(?<![A-Za-z0-9_])_EVENT_DISABLE_MM_REPLACEMENT(?![A-Za-z0-9_])/EVENT__DISABLE_MM_REPLACEMENT/g;
    s/(?<![A-Za-z0-9_])_EVENT_DISABLE_THREAD_SUPPORT(?![A-Za-z0-9_])/EVENT__DISABLE_THREAD_SUPPORT/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_ACCEPT4(?![A-Za-z0-9_])/EVENT__HAVE_ACCEPT4/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_ARC4RANDOM(?![A-Za-z0-9_])/EVENT__HAVE_ARC4RANDOM/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_ARC4RANDOM_BUF(?![A-Za-z0-9_])/EVENT__HAVE_ARC4RANDOM_BUF/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_ARPA_INET_H(?![A-Za-z0-9_])/EVENT__HAVE_ARPA_INET_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_CLOCK_GETTIME(?![A-Za-z0-9_])/EVENT__HAVE_CLOCK_GETTIME/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_DECL_CTL_KERN(?![A-Za-z0-9_])/EVENT__HAVE_DECL_CTL_KERN/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_DECL_KERN_ARND(?![A-Za-z0-9_])/EVENT__HAVE_DECL_KERN_ARND/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_DECL_KERN_RANDOM(?![A-Za-z0-9_])/EVENT__HAVE_DECL_KERN_RANDOM/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_DECL_RANDOM_UUID(?![A-Za-z0-9_])/EVENT__HAVE_DECL_RANDOM_UUID/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_DEVPOLL(?![A-Za-z0-9_])/EVENT__HAVE_DEVPOLL/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_DLFCN_H(?![A-Za-z0-9_])/EVENT__HAVE_DLFCN_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_EPOLL(?![A-Za-z0-9_])/EVENT__HAVE_EPOLL/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_EPOLL_CREATE1(?![A-Za-z0-9_])/EVENT__HAVE_EPOLL_CREATE1/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_EPOLL_CTL(?![A-Za-z0-9_])/EVENT__HAVE_EPOLL_CTL/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_EVENTFD(?![A-Za-z0-9_])/EVENT__HAVE_EVENTFD/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_EVENT_PORTS(?![A-Za-z0-9_])/EVENT__HAVE_EVENT_PORTS/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_FCNTL(?![A-Za-z0-9_])/EVENT__HAVE_FCNTL/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_FCNTL_H(?![A-Za-z0-9_])/EVENT__HAVE_FCNTL_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_FD_MASK(?![A-Za-z0-9_])/EVENT__HAVE_FD_MASK/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_GETADDRINFO(?![A-Za-z0-9_])/EVENT__HAVE_GETADDRINFO/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_GETEGID(?![A-Za-z0-9_])/EVENT__HAVE_GETEGID/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_GETEUID(?![A-Za-z0-9_])/EVENT__HAVE_GETEUID/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_GETHOSTBYNAME_R(?![A-Za-z0-9_])/EVENT__HAVE_GETHOSTBYNAME_R/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_GETHOSTBYNAME_R_3_ARG(?![A-Za-z0-9_])/EVENT__HAVE_GETHOSTBYNAME_R_3_ARG/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_GETHOSTBYNAME_R_5_ARG(?![A-Za-z0-9_])/EVENT__HAVE_GETHOSTBYNAME_R_5_ARG/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_GETHOSTBYNAME_R_6_ARG(?![A-Za-z0-9_])/EVENT__HAVE_GETHOSTBYNAME_R_6_ARG/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_GETIFADDRS(?![A-Za-z0-9_])/EVENT__HAVE_GETIFADDRS/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_GETNAMEINFO(?![A-Za-z0-9_])/EVENT__HAVE_GETNAMEINFO/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_GETPROTOBYNUMBER(?![A-Za-z0-9_])/EVENT__HAVE_GETPROTOBYNUMBER/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_GETSERVBYNAME(?![A-Za-z0-9_])/EVENT__HAVE_GETSERVBYNAME/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_GETTIMEOFDAY(?![A-Za-z0-9_])/EVENT__HAVE_GETTIMEOFDAY/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_IFADDRS_H(?![A-Za-z0-9_])/EVENT__HAVE_IFADDRS_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_INET_ATON(?![A-Za-z0-9_])/EVENT__HAVE_INET_ATON/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_INET_NTOP(?![A-Za-z0-9_])/EVENT__HAVE_INET_NTOP/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_INET_PTON(?![A-Za-z0-9_])/EVENT__HAVE_INET_PTON/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_INTTYPES_H(?![A-Za-z0-9_])/EVENT__HAVE_INTTYPES_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_ISSETUGID(?![A-Za-z0-9_])/EVENT__HAVE_ISSETUGID/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_KQUEUE(?![A-Za-z0-9_])/EVENT__HAVE_KQUEUE/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_LIBZ(?![A-Za-z0-9_])/EVENT__HAVE_LIBZ/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_MEMORY_H(?![A-Za-z0-9_])/EVENT__HAVE_MEMORY_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_MMAP(?![A-Za-z0-9_])/EVENT__HAVE_MMAP/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_NANOSLEEP(?![A-Za-z0-9_])/EVENT__HAVE_NANOSLEEP/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_NETDB_H(?![A-Za-z0-9_])/EVENT__HAVE_NETDB_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_NETINET_IN6_H(?![A-Za-z0-9_])/EVENT__HAVE_NETINET_IN6_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_NETINET_IN_H(?![A-Za-z0-9_])/EVENT__HAVE_NETINET_IN_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_NETINET_TCP_H(?![A-Za-z0-9_])/EVENT__HAVE_NETINET_TCP_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_OPENSSL(?![A-Za-z0-9_])/EVENT__HAVE_OPENSSL/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_PIPE(?![A-Za-z0-9_])/EVENT__HAVE_PIPE/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_PIPE2(?![A-Za-z0-9_])/EVENT__HAVE_PIPE2/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_POLL(?![A-Za-z0-9_])/EVENT__HAVE_POLL/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_POLL_H(?![A-Za-z0-9_])/EVENT__HAVE_POLL_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_PORT_CREATE(?![A-Za-z0-9_])/EVENT__HAVE_PORT_CREATE/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_PORT_H(?![A-Za-z0-9_])/EVENT__HAVE_PORT_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_PTHREAD(?![A-Za-z0-9_])/EVENT__HAVE_PTHREAD/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_PTHREADS(?![A-Za-z0-9_])/EVENT__HAVE_PTHREADS/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_PUTENV(?![A-Za-z0-9_])/EVENT__HAVE_PUTENV/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SA_FAMILY_T(?![A-Za-z0-9_])/EVENT__HAVE_SA_FAMILY_T/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SELECT(?![A-Za-z0-9_])/EVENT__HAVE_SELECT/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SENDFILE(?![A-Za-z0-9_])/EVENT__HAVE_SENDFILE/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SETENV(?![A-Za-z0-9_])/EVENT__HAVE_SETENV/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SETFD(?![A-Za-z0-9_])/EVENT__HAVE_SETFD/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SETRLIMIT(?![A-Za-z0-9_])/EVENT__HAVE_SETRLIMIT/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SIGACTION(?![A-Za-z0-9_])/EVENT__HAVE_SIGACTION/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SIGNAL(?![A-Za-z0-9_])/EVENT__HAVE_SIGNAL/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SPLICE(?![A-Za-z0-9_])/EVENT__HAVE_SPLICE/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STDARG_H(?![A-Za-z0-9_])/EVENT__HAVE_STDARG_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STDDEF_H(?![A-Za-z0-9_])/EVENT__HAVE_STDDEF_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STDINT_H(?![A-Za-z0-9_])/EVENT__HAVE_STDINT_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STDLIB_H(?![A-Za-z0-9_])/EVENT__HAVE_STDLIB_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRINGS_H(?![A-Za-z0-9_])/EVENT__HAVE_STRINGS_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRING_H(?![A-Za-z0-9_])/EVENT__HAVE_STRING_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRLCPY(?![A-Za-z0-9_])/EVENT__HAVE_STRLCPY/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRSEP(?![A-Za-z0-9_])/EVENT__HAVE_STRSEP/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRTOK_R(?![A-Za-z0-9_])/EVENT__HAVE_STRTOK_R/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRTOLL(?![A-Za-z0-9_])/EVENT__HAVE_STRTOLL/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRUCT_ADDRINFO(?![A-Za-z0-9_])/EVENT__HAVE_STRUCT_ADDRINFO/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRUCT_IN6_ADDR(?![A-Za-z0-9_])/EVENT__HAVE_STRUCT_IN6_ADDR/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRUCT_IN6_ADDR_S6_ADDR16(?![A-Za-z0-9_])/EVENT__HAVE_STRUCT_IN6_ADDR_S6_ADDR16/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRUCT_IN6_ADDR_S6_ADDR32(?![A-Za-z0-9_])/EVENT__HAVE_STRUCT_IN6_ADDR_S6_ADDR32/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRUCT_SOCKADDR_IN6(?![A-Za-z0-9_])/EVENT__HAVE_STRUCT_SOCKADDR_IN6/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRUCT_SOCKADDR_IN6_SIN6_LEN(?![A-Za-z0-9_])/EVENT__HAVE_STRUCT_SOCKADDR_IN6_SIN6_LEN/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRUCT_SOCKADDR_IN_SIN_LEN(?![A-Za-z0-9_])/EVENT__HAVE_STRUCT_SOCKADDR_IN_SIN_LEN/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRUCT_SOCKADDR_STORAGE(?![A-Za-z0-9_])/EVENT__HAVE_STRUCT_SOCKADDR_STORAGE/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY(?![A-Za-z0-9_])/EVENT__HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_STRUCT_SOCKADDR_STORAGE___SS_FAMILY(?![A-Za-z0-9_])/EVENT__HAVE_STRUCT_SOCKADDR_STORAGE___SS_FAMILY/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYSCTL(?![A-Za-z0-9_])/EVENT__HAVE_SYSCTL/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_DEVPOLL_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_DEVPOLL_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_EPOLL_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_EPOLL_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_EVENTFD_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_EVENTFD_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_EVENT_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_EVENT_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_IOCTL_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_IOCTL_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_MMAN_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_MMAN_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_PARAM_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_PARAM_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_QUEUE_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_QUEUE_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_RESOURCE_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_RESOURCE_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_SELECT_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_SELECT_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_SENDFILE_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_SENDFILE_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_SOCKET_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_SOCKET_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_STAT_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_STAT_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_SYSCTL_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_SYSCTL_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_TIME_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_TIME_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_TYPES_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_TYPES_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_UIO_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_UIO_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_SYS_WAIT_H(?![A-Za-z0-9_])/EVENT__HAVE_SYS_WAIT_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_TAILQFOREACH(?![A-Za-z0-9_])/EVENT__HAVE_TAILQFOREACH/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_TIMERADD(?![A-Za-z0-9_])/EVENT__HAVE_TIMERADD/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_TIMERCLEAR(?![A-Za-z0-9_])/EVENT__HAVE_TIMERCLEAR/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_TIMERCMP(?![A-Za-z0-9_])/EVENT__HAVE_TIMERCMP/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_TIMERISSET(?![A-Za-z0-9_])/EVENT__HAVE_TIMERISSET/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_UINT16_T(?![A-Za-z0-9_])/EVENT__HAVE_UINT16_T/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_UINT32_T(?![A-Za-z0-9_])/EVENT__HAVE_UINT32_T/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_UINT64_T(?![A-Za-z0-9_])/EVENT__HAVE_UINT64_T/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_UINT8_T(?![A-Za-z0-9_])/EVENT__HAVE_UINT8_T/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_UINTPTR_T(?![A-Za-z0-9_])/EVENT__HAVE_UINTPTR_T/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_UNISTD_H(?![A-Za-z0-9_])/EVENT__HAVE_UNISTD_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_UNSETENV(?![A-Za-z0-9_])/EVENT__HAVE_UNSETENV/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_USLEEP(?![A-Za-z0-9_])/EVENT__HAVE_USLEEP/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_VASPRINTF(?![A-Za-z0-9_])/EVENT__HAVE_VASPRINTF/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_WORKING_KQUEUE(?![A-Za-z0-9_])/EVENT__HAVE_WORKING_KQUEUE/g;
    s/(?<![A-Za-z0-9_])_EVENT_HAVE_ZLIB_H(?![A-Za-z0-9_])/EVENT__HAVE_ZLIB_H/g;
    s/(?<![A-Za-z0-9_])_EVENT_LT_OBJDIR(?![A-Za-z0-9_])/EVENT__LT_OBJDIR/g;
    s/(?<![A-Za-z0-9_])_EVENT_NO_MINUS_C_MINUS_O(?![A-Za-z0-9_])/EVENT__NO_MINUS_C_MINUS_O/g;
    s/(?<![A-Za-z0-9_])_EVENT_NUMERIC_VERSION(?![A-Za-z0-9_])/EVENT__NUMERIC_VERSION/g;
    s/(?<![A-Za-z0-9_])_EVENT_PACKAGE(?![A-Za-z0-9_])/EVENT__PACKAGE/g;
    s/(?<![A-Za-z0-9_])_EVENT_PACKAGE_BUGREPORT(?![A-Za-z0-9_])/EVENT__PACKAGE_BUGREPORT/g;
    s/(?<![A-Za-z0-9_])_EVENT_PACKAGE_NAME(?![A-Za-z0-9_])/EVENT__PACKAGE_NAME/g;
    s/(?<![A-Za-z0-9_])_EVENT_PACKAGE_STRING(?![A-Za-z0-9_])/EVENT__PACKAGE_STRING/g;
    s/(?<![A-Za-z0-9_])_EVENT_PACKAGE_TARNAME(?![A-Za-z0-9_])/EVENT__PACKAGE_TARNAME/g;
    s/(?<![A-Za-z0-9_])_EVENT_PACKAGE_URL(?![A-Za-z0-9_])/EVENT__PACKAGE_URL/g;
    s/(?<![A-Za-z0-9_])_EVENT_PACKAGE_VERSION(?![A-Za-z0-9_])/EVENT__PACKAGE_VERSION/g;
    s/(?<![A-Za-z0-9_])_EVENT_PTHREAD_CREATE_JOINABLE(?![A-Za-z0-9_])/EVENT__PTHREAD_CREATE_JOINABLE/g;
    s/(?<![A-Za-z0-9_])_EVENT_SIZEOF_INT(?![A-Za-z0-9_])/EVENT__SIZEOF_INT/g;
    s/(?<![A-Za-z0-9_])_EVENT_SIZEOF_LONG(?![A-Za-z0-9_])/EVENT__SIZEOF_LONG/g;
    s/(?<![A-Za-z0-9_])_EVENT_SIZEOF_LONG_LONG(?![A-Za-z0-9_])/EVENT__SIZEOF_LONG_LONG/g;
    s/(?<![A-Za-z0-9_])_EVENT_SIZEOF_OFF_T(?![A-Za-z0-9_])/EVENT__SIZEOF_OFF_T/g;
    s/(?<![A-Za-z0-9_])_EVENT_SIZEOF_PTHREAD_T(?![A-Za-z0-9_])/EVENT__SIZEOF_PTHREAD_T/g;
    s/(?<![A-Za-z0-9_])_EVENT_SIZEOF_SHORT(?![A-Za-z0-9_])/EVENT__SIZEOF_SHORT/g;
    s/(?<![A-Za-z0-9_])_EVENT_SIZEOF_SIZE_T(?![A-Za-z0-9_])/EVENT__SIZEOF_SIZE_T/g;
    s/(?<![A-Za-z0-9_])_EVENT_SIZEOF_VOID_P(?![A-Za-z0-9_])/EVENT__SIZEOF_VOID_P/g;
    s/(?<![A-Za-z0-9_])_EVENT_STDC_HEADERS(?![A-Za-z0-9_])/EVENT__STDC_HEADERS/g;
    s/(?<![A-Za-z0-9_])_EVENT_TIME_WITH_SYS_TIME(?![A-Za-z0-9_])/EVENT__TIME_WITH_SYS_TIME/g;
    s/(?<![A-Za-z0-9_])_EVENT_VERSION(?![A-Za-z0-9_])/EVENT__VERSION/g;
    s/(?<![A-Za-z0-9_])_EVENT__ALL_SOURCE(?![A-Za-z0-9_])/EVENT___ALL_SOURCE/g;
    s/(?<![A-Za-z0-9_])_EVENT__FILE_OFFSET_BITS(?![A-Za-z0-9_])/EVENT___FILE_OFFSET_BITS/g;
    s/(?<![A-Za-z0-9_])_EVENT__GNU_SOURCE(?![A-Za-z0-9_])/EVENT___GNU_SOURCE/g;
    s/(?<![A-Za-z0-9_])_EVENT__LARGE_FILES(?![A-Za-z0-9_])/EVENT___LARGE_FILES/g;
    s/(?<![A-Za-z0-9_])_EVENT__MINIX(?![A-Za-z0-9_])/EVENT___MINIX/g;
    s/(?<![A-Za-z0-9_])_EVENT__POSIX_1_SOURCE(?![A-Za-z0-9_])/EVENT___POSIX_1_SOURCE/g;
    s/(?<![A-Za-z0-9_])_EVENT__POSIX_PTHREAD_SEMANTICS(?![A-Za-z0-9_])/EVENT___POSIX_PTHREAD_SEMANTICS/g;
    s/(?<![A-Za-z0-9_])_EVENT__POSIX_SOURCE(?![A-Za-z0-9_])/EVENT___POSIX_SOURCE/g;
    s/(?<![A-Za-z0-9_])_EVENT__TANDEM_SOURCE(?![A-Za-z0-9_])/EVENT___TANDEM_SOURCE/g;
    s/(?<![A-Za-z0-9_])_EVENT___EXTENSIONS__(?![A-Za-z0-9_])/EVENT____EXTENSIONS__/g;
    s/(?<![A-Za-z0-9_])_EVENT___func__(?![A-Za-z0-9_])/EVENT____func__/g;
    s/(?<![A-Za-z0-9_])_EVENT_const(?![A-Za-z0-9_])/EVENT__const/g;
    s/(?<![A-Za-z0-9_])_EVENT_inline(?![A-Za-z0-9_])/EVENT__inline/g;
    s/(?<![A-Za-z0-9_])_EVENT_pid_t(?![A-Za-z0-9_])/EVENT__pid_t/g;
    s/(?<![A-Za-z0-9_])_EVENT_size_t(?![A-Za-z0-9_])/EVENT__size_t/g;
    s/(?<![A-Za-z0-9_])_EVENT_socklen_t(?![A-Za-z0-9_])/EVENT__socklen_t/g;
    s/(?<![A-Za-z0-9_])_EVENT_ssize_t(?![A-Za-z0-9_])/EVENT__ssize_t/g;

commit 2958a5cd3ac0e266305e4d1eb5ff381dd2414338
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 29 15:07:14 2012 -0500

    Make event-config.h depend on Makefile.am

commit af7ba6955e6327f7999b0744716b05c260da6892
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 28 14:49:47 2012 -0500

    Check for NULL return on win32 mm_calloc, and set ENOMEM.
    
    (It looks like windows doesn't set ENOMEM on overflow from calloc.)

commit 7bcac07d5a47239ec536a70e70199cfa87eea70e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 28 14:32:01 2012 -0500

    Do not use system EAI/AI values if we are not using the system getaddrinfo.

commit 92385a9f3cf0484232bfbc5740ad47b1e2b2d356
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 28 13:21:05 2012 -0500

    Replace sole internal user of socklen_t with ev_socklen_t
    
    This lets us remove the socklen_t definition from util-internal.h,
    so that util-internal.h no longer confuses ws2tcpip.h

commit 066775e3668eec4a7a0a6eb9541c3c7f160c4526
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 28 13:09:51 2012 -0500

    Fix evmap to work with HT-backed IO maps again.

commit ca47fa0b90cf98d74377abd783a7e9fa15f14aa9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 28 12:53:46 2012 -0500

    evutil_accept4() should take ev_socklen_t

commit d7d9f75528c5c7135f563b6dafc9de76d644d9ae
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 27 18:10:45 2012 -0500

    test-fdleak: Avoid perror, since it does not capture windows socket errors

commit 510839e7db7663a5ccd0357e5dc5b219191edbff
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 27 18:08:27 2012 -0500

    remove debugging prints

commit d9be5f49ffaec48240700a23856bd3542d7d39c5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 27 18:06:28 2012 -0500

    test-fdleak: Call event callbacks event_cb.

commit 077c7e9490878a75fe1015b7d262f48b9102e558
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 27 18:05:49 2012 -0500

    Remove fixed port from test-fdleak, so two instances can run in parallel

commit c9ba53a3ef72f694823b8a68cb0380b09b97def4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 27 17:57:01 2012 -0500

    Remove an unsafe programming practice from test-fdleak; add XX comments
    
    It's a bad idea to have a read callback read a fixed amount; Instead,
    we should drain it, or have some way to know that more data is
    arrived.  Not unsafe in this case, but let's not encourage people to
    learn bad habits.
    
    This commit also notes some other stuff to fix.

commit 4293a809b767f9efc249f7377690b20d0a4fabeb
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Sat Feb 25 07:47:49 2012 +0200

    Try and fix compilation and running of test-fdleak on Windows.

commit 1c4288f4925b37909992ccac4bffff78eb2f260d
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Sat Feb 25 07:36:49 2012 +0200

    Allow compilation on machines that do not have setrlimit.

commit f7af1941b8313f661231dd1b7c89c2d649311e87
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Sat Feb 25 07:21:20 2012 +0200

    Simply test-fdleak by running server & client sockets in the same event loop.

commit 2ef92786e3f1a645937e00ac2d01a3389454fea9
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Thu Feb 23 21:40:02 2012 +0200

    Add a new test: test-fdleak which tests for fd leaks by creating many sockets.
    
    This test opens a server socket, and forks a child which connects to that
    server socket many times. It sets a low number for the max open file limit
    to catch any file descriptor leaks.
    It would not work on Windows since it uses fork() to be able to create both the
    server and the clients.

commit 74d32dd493a9eba7ff8c28bc1cdf1d3c672edf5c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 21 20:39:17 2012 -0500

    If accept4 is absent, fall back to accept.

commit a6492cb744f50030a1538857bef9209992cf6306
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 21 20:38:36 2012 -0500

    Avoid leaking fd in evutil_socket() by Linux.
    
    Found by Amarin Phaosawasdi

commit a3cec909615e1c28cabb55ba8ac1875f7a497195
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 20 14:07:08 2012 -0500

    Remove the last vestiges of _EVENT_USE_EVENTLIST

commit 8dbcf8d62ba0e1c5b408e22babe55e9490ea2404
Merge: 65bc91c2 cad57535
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 20 13:56:13 2012 -0500

    Merge branch '21_eventlist_v3_squashed'

commit cad5753587c1b4bed7b76f6572a9205f4f2d3ac9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Feb 11 21:05:50 2012 -0500

    Add doxygen for event_base_dump_events

commit c89b4e63f6b69fa84979ff2aef44c2fdc3e1d8c9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Feb 11 21:01:53 2012 -0500

    Refactor the functions that run over every event.
    
    Now there are appropriate "for each event", "for each fd", and "for
    each signal" helpers that they can use; this makes the code a bit
    simpler, and far less duplicated.
    
    This lets me turn back on the functions I disabled when removing
    eventlist.
    
    Additionally, check more lists for circularity in
    event_base_assert_ok().
    
    Add typedefs for the callback types.
    
    Name fewer things "ctx".
    
    Adds an implementation of Floyd's tortoise-and-hare algorithm to check
    for circularity in TAILQs and LISTs, to avoid the abuse of flags that
    event_base_assert_ok() was doing before.
    
    Suggested by Dave Hart.

commit 65bc91c210b75ae924111919eee56ec54ecd27ee
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 17 10:42:56 2012 -0500

    Fix an "unused return value" warning on write() in signal handler

commit 819e98ac7da8ab69ff68b154caaf747aa8ecc4cc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 16 01:21:42 2012 -0500

    Start work on a 2.1 changelog and whats-new

commit a270728e28e9b4107a9839d9dd8d30182139114c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 15 21:27:52 2012 -0500

    Add another caveat to the TCP_DEFER_ACCEPT documentation

commit 5880e4a1fc41908b8750662c69b1c59639898149
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Tue Feb 14 18:04:52 2012 -0500

    Support TCP_DEFER_ACCEPT sockopts for listeners
    
    A listening socket can be enabled with the sockopt
    TCP_DEFER_ACCEPT. This informs the kernel to not call the user-land
    accept() until real data has been written to the socket.
    
    A new flag LEV_OPT_DEFERRED_ACCEPT has been introduced to
    automatically set this option. Optionally
    evutil_make_tcp_listen_socket_deferred() can be called manually.
    
    (Tweaked slightly by nickm.)

commit a220a08139890048ac9a11855be5367865ed15f4
Merge: a63ed161 2b0a2c45
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 15 21:07:44 2012 -0500

    Merge remote-tracking branch 'github/21_fast_syscalls'

commit a63ed161864bf5d2fb4c6c72e1ce9bf39d4f368d
Merge: a37cbfda bec50680
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 15 20:26:52 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit bec50680a31834619e66cb8b97edd6d5b5f15701
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 15 20:12:32 2012 -0500

    Stop crashing in evdns when nameserver probes give a weird error
    
    When a nameserver is down, we periodically try sending a "probe"
    message to that nameserver to see if it has come back up.  If a
    nameserver comes up, we cancel any pending probe messages.
    
    Cancelling a probe message while handling the probe's response would
    result in a access-after-free or a double-free, so when we notice that
    we're about to call a nameserver up because of having received a probe
    from it, we need to check whether current response is the response
    from the probe.
    
    There was a case where we didn't to that, though: when the resolver
    gave us an unusual error response to our request that it resolve
    google.com.  This is pretty rare, but apparently it can happen with
    some weird cacheing nameservers -- the one on the mikrotik router, for
    example.  Without this patch, we would crash with a NULL pointer
    derefernce.
    
    Thanks to Hannes Sowa for finding this issue and helping me track it
    down.

commit a37cbfdafc0f9c9d507cf716c2acff612c1af79b
Merge: 2ed44302 2d67b638
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 14 15:44:03 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            configure.in

commit 2d67b638536d33bd84173238a9c933f04aaed15c
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Tue Feb 14 15:37:58 2012 -0500

    Changed OPENSSL_LDFLAGS to OPENSSL_LIBADD

commit 92781968475c7553a08f5b4161f1df631c6ef01f
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Tue Feb 14 15:01:02 2012 -0500

    Added OPENSSL_LDFLAGS env variable which is appended to SSL checks.
    
    If openssl is not installed system-wide or not compiled as a shared library,
    some systems require various link flags (e.g., -ld).

commit 2ed44302250bbec1ffe15ff78a0d41c899595ccc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 14 11:48:55 2012 -0500

    If open(O_CLOEXEC) fails, fall back to fcntl(CLOEXEC)
    
    This is needed for folks who build with recent Linux kernel headers
    but run with older kernels.

commit f088d0c52e088ea276e14d1c3e04d157e8cc3b9c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 13 18:34:00 2012 -0500

    Fix up usage of reserved identifiers in ht-internal.h

commit 4900c5f96e59847ba5be9eae809175f2c9004c55
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 13 18:04:05 2012 -0500

    Port changes from Tor for ht-internal.h

commit 46e5bb7bdcda97b0f6730a6ad00eb8ebb90a5aab
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 13 17:59:14 2012 -0500

    Invert the sense and the name of HT_CACHE_HASH_VALUES
    
    This is meant to make it easier to merge ht-internal.h back upstream
    into Tor.

commit 6c81be746cca7f49beeb2801ecbd2c5489674832
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 13 17:49:17 2012 -0500

    Synchronize with upstream tinytest

commit a9dc063cebe53e80607a793db6580c4a8a4ddbb0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 13 17:30:46 2012 -0500

    Merge in a punctuation fix from upstream tinytest

commit bbea8d6bc578b7fb0811bef3e281e457bb55be2e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 13 12:19:08 2012 -0500

    Move libevent 1.x headers to include/, to put all public headers in one place.

commit 279319766342c5d12c9f70716cab4d9d4895c94c
Merge: a6503944 03dce42d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Feb 11 21:20:47 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 03dce42dfa0380a96bdfc2e9c18b15318ec0ba5b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Feb 11 21:17:18 2012 -0500

    Tweak the evutil_open_closeonexec patch to work on windows, old unixes.
    
    Windows doesn't have a mode_t as far as I can tell.
    
    Some unixes, iirc, don't like three-argument open without O_CREAT.

commit d2b5f7223abe4825410392a54ac34dc973465faf
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Sat Feb 11 17:23:17 2012 +0200

    Make uses of open() close-on-exec safe by introducing evutil_open_closeonexec.
    
    In a multi-process/threaded environment, opening fds internally
    without the close-on-exec flag could leak fds to child processes.

commit a6503944ddf312c8270ac61a366502386aa1bd0c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Feb 11 12:04:15 2012 -0500

    Add a bufferevent_getcb() to find a bufferevent's current callbacks

commit bf2c5a77973262e599a7d5a6604e4f3d43718119
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 23:56:49 2012 -0500

    Also make win32select.c conditional for IDE users

commit 87a7cded026797755dae54245c8c7317043b6abe
Merge: de69eb7b 76d4c929
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 23:52:27 2012 -0500

    Merge branch 'ifdef' of git://github.com/rosslagerwall/libevent

commit de69eb7ba944bf4ec7a5ad30396985ca48cb267e
Merge: c5b6e464 0c483170
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 23:51:11 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 0c483170be2f447c6d1d1cfe103506976e1523d4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 22:20:05 2012 -0500

    Add an empty section to the changelog for 2.0.18-stable

commit c5b6e46488e2ee04909aae0b1d230130c323079c
Merge: 8fd7a243 5a807b7a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 22:18:19 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 5a807b7aa21ccef7743fadfc7534277ba86e3480
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 22:17:59 2012 -0500

    Correct a name in the credits. oops

commit 8fd7a243e84579447bf62fd54bea288f7142b1cf
Merge: 2d915460 2d7bf0f7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 22:16:46 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 2d7bf0f78dce4537ec818eb67791d823aa572c95
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 22:16:14 2012 -0500

    Bump version to 2.0.17-stable-dev

commit 2d9154601e5d2a7a2142ba3d1d9cf1cb7c70b2ee
Merge: 539466e5 83e58ccd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 18:50:17 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 83e58ccd3099167908edbba12d7d228a70900007
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 18:39:31 2012 -0500

    Update the credits in the readme

commit 0cdbd642e3fcef348e220c808fd33c4adccc282a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 18:36:10 2012 -0500

    Finalize the changelog

commit 2b0a2c45193ea16684729712a6fc7d9596c88927
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 18:04:04 2012 -0500

    Fix compilation on osx

commit 539466e568ab7b676eece340b43ef98cae38c97a
Merge: e465623a e49e2891
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 17:33:50 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            Makefile.am
            WIN32-Code/event2/event-config.h
            configure.in

commit e49e2891292ee84e08c319bc5031fe607efc4245
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 17:29:53 2012 -0500

    Update copyright notices to 2012

commit 8152b4c2b3705151a7db7edd65d5ebbc8a640a49
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 16:49:05 2012 -0500

    Bump version to 2.0.17-stable

commit bac906c76119ed8c8915e3979160fac7e12eac05
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 16:39:46 2012 -0500

    Prefer epoll_create1 on Linuxen that have it

commit 33fca629a6e140cffeb8c4ac74d3d1f1338bb1c8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 16:33:25 2012 -0500

    Save some syscalls when constructing a socket for a bufferevent

commit 713e570ab42bb228eda9a712c266e259584822fb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 16:32:50 2012 -0500

    Save some syscalls when creating evdns sockets

commit af6c9d8ee6e27daf558211aba83e20e33f15bd58
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 16:32:32 2012 -0500

    Save syscalls when constructing listener sockets for evhttp

commit a35f396f2891683d75e9c57601ec3a291c9f4aa3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 16:25:53 2012 -0500

    Use pipes for telling signals to main thread when possible

commit ca76cd931f0e21121a32e6e332514f88b75a8067
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 16:15:10 2012 -0500

    Use a wrapper function to create the notification pipe/socketpair/eventfd

commit 4970329a88e3e8ea10317478a642b99d4b28a283
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 16:14:09 2012 -0500

    The LEV_OPT_CLOSE_ON_EXEC flag now applies to accepted listener sockets too

commit 7e9e289367aed6181c2f4202ee66b333a0faa33e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 16:13:30 2012 -0500

    Minimize syscalls during socket creation in listener.c

commit a1c042bfe9238949a02a1050b9b4d3a1d36f5091
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 15:55:15 2012 -0500

    Infrastructure for using faster/fewer syscalls when creating sockets
    
    Linux provides some features that allow avoiding extra calls to
    fcntl when creating new nonblocking/close-on-exec sockets, so
    we can add wrapper functions to emulate those when they are not
    available.
    
    Additionally, even when we are emulating those functions, we can
    take a fast path that cuts our fcntl calls in half: we don't need to
    look up the previous value of a file's flags when we have just
    created it.

commit e465623a9c5ebc4bc85b7011c25d557a24a677d0
Merge: df19ba6a 5d7bfa15
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 12:05:39 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 5d7bfa1519b9dcfec4d9af8ca5cc5dc4e12c5156
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 10 11:24:51 2012 -0500

    In the kqueue backend, do not report EBADF as an EV_READ
    
    We were doing this because of (correct) reports that NetBSD gives an
    EBADF when you try to add the write side of a pipe for which the
    read side has been closed.  But on most kqueue platforms, that
    doesn't happen, and on *all* kqueue platforms, reporting a
    nonexistent fd (which we usually have if we have seen EBADF) as
    readable tends to give programs a case of the vapors.
    
    Nicholas Marriott wrote the original patch here; I did the comment
    fixes.

commit df19ba6a0365d1dc480d5a6ffa9855fdec9910fc
Merge: c00416f7 19715a60
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 9 15:16:02 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 19715a60e28ec2490bbdb45ab36921f5a47fc74d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 9 15:07:19 2012 -0500

    Avoid crash when freeing event_iocp and using event_set_mem_functions
    
    There was a calloc that needed to be an mm_calloc.
    
    Reported by "fffvvvzz" on sourceforge.  Ticket 3486114

commit 76d4c929d7504c604c0db6b14ad587028facc4d0
Author: Ross Lagerwall <rosslagerwall@gmail.com>
Date:   Wed Feb 8 18:46:00 2012 +0200

    Put #ifdef around some files to support alternate build systems.

commit 6f6cebe3561e886396737a011b82c2028d7468c7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 6 21:18:25 2012 -0500

    Bring the changelog up to date

commit c00416f745955684a9034866c53357e93329b3b3
Merge: 4dee4cc7 5b4b8126
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 6 12:39:09 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 5b4b8126de52c8a895094cfea61724a91e179e71
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 6 12:24:49 2012 -0500

    Loop on filtering SSL reads until we are blocked or exhausted.
    
    This is not a perfect fix, but it's much much better than the
    current buggy behavior, which could lead to filtering SSL
    connections that just stopped reading.
    
    Based on ideas by Maseeb Abdul Qadir and Mark Ellzey.

commit 4dee4cc7e10c093c8ae6ef0a9fa3f16cfd3bb6d0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 2 11:45:23 2012 -0500

    Replace more C99/C++ comments with oldschool /* */ comments

commit 7c46d4aa63a9cc2b2e011c716c50049bd2da21ce
Merge: 032aac15 d84d9170
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 2 11:41:37 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit d84d917099e9e31df62ab4461019bd7613dc24f1
Author: Greg Hewgill <greg@hewgill.com>
Date:   Mon Nov 21 09:41:55 2011 +1300

    Use C-style comments in C source files (for compatibility with compilers such as xlc on AIX).

commit 032aac156c556e5cb8cf6c30a331ad3f1bacf0b4
Merge: e4a56ed5 d6094b16
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 1 14:57:44 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit d6094b160f63fa6c6279de2d1826c444dc0f15e2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 1 14:56:43 2012 -0500

    evdns: fix a bug in circular-queue implementation
    
    found by Wang Qin

commit e4a56ed5272e40d282671a91f73e76a4161afeb5
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Tue Jan 31 18:58:59 2012 +0100

    Fix a compile warning in event_reinit
    
    Introduced in 272033efe575a9dc7ec6f123a96afba5c69ff1c6

commit 604569bf3f57bd7bc91799083e8a3c6016be863c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 27 16:35:04 2012 -0500

    Remove the eventqueue list and the ev_next pointers.
    
    Those pointers were once used to maintain a complete list of
    inserted IO and signal events.  But such a list is now available by
    walking over ev_io_map and ev_signal_map!  So all they did was
    require extra pointer operations to maintain, and extra 8-16 bytes
    of storage in each struct event.
    
    To be cowardly and keep the option of going back to having this
    redundancy, I'm wrapping the removed code in a set of ifdefs.
    
    This is a first cut; it needs cleanups and stress-testing!!  In
    particular, it just plain disables a couple of functions that could
    probably be saved.
    
    There seems to be a need for an evmap_{io,signal}_foreach() or something.

commit 7622d2659b2fc2d22ebf87be237ea590aee7191a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 27 15:10:28 2012 -0500

    Make test-changelist faster

commit 39b3f38d7212a549357664bf441632ab0387d80a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 27 14:39:18 2012 -0500

    Check changelist as part of checking representational integrity

commit 2c4b5de16a9b80fc564681018956f29077c28c9a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 27 14:30:41 2012 -0500

    Restore fast-path event_reinit() for slower backends
    
    We used to use the needs_reinit flag in struct eventop to indicate
    whether an event backend had shared state across a fork(), and
    therefore would require us to construct a new event backend.  But
    when we realized that the signal notification fds and the thread
    notification fds would always be shared across forks, we stopped
    looking at it.
    
    This patch restores the old behavior so that poll, select, and
    win32select don't need to do a linear scan over all pending
    fds/signals when they do a reinit.  Their life is hard enough
    already.

commit 272033efe575a9dc7ec6f123a96afba5c69ff1c6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 27 13:54:05 2012 -0500

    Make event_reinit() more robust and maintainable
    
    Previously, event_reinit required a bunch of really dubious hacks,
    and violated a lot of abstraction barriers to mess around with lists
    of internal events and "pretend" to re-add them.
    
    The new (and fairly well commented!) implementation tries to be much
    smarter, by isolating the changes as much as possible to the backend
    state, and minimizing the amount of abstraction violations.
    
    Specifically, we now use event_del() to remove events we want to
    remove, rather than futzing around with queues in event_reinit().
    To avoid bogus calls to evsel->del(), we temporarily replace evsel
    with a null-object stub.
    
    Also, we now push the responsibility for calling evsel->add() down
    into the evmap code, so that we don't actually need to unlink and
    re-link all of our events.

commit 4b7baec668732e215f5f3533f2f74ccfad09a8af
Merge: 2c6b3246 9f9e259f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 26 16:56:33 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 9f9e259fdabbacff2ddbadda2784f91cd4ec94ce
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 26 15:04:24 2012 -0500

    Better workaround for Linux 3.2 edge-triggered epoll bug
    
    On further investigation, it appears that this problem is limited to
    AF_UNIX sockets, so let's just do the test on AF_INET sockets.

commit 2c6b3246fd9e3a3fa4f1a4b0126f0fc1e07d628c
Merge: 95e2455c c94a5f2a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 17:18:52 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit c94a5f2a2cce7b6751a95343e0d80b7d150add31
Author: Nate R <nate_r@example.com>
Date:   Tue Jan 24 17:15:50 2012 -0500

    Do a memberwise comparison of threading function tables
    
    Doing a memcmp risks comparing uninitialized padding bytes at the
    end of the structure.

commit 95e2455cdbf840bdcf913f4ef59d0109babd3d6a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 16:08:00 2012 -0500

    When including an -internal.h header outside the main tree, do so early
    
    Some of our unit tests and sample code need functions and structures
    defined in an -internal.h header.  But that can freak out OpenSolaris,
    where stdio.h wants to define _FILE_OFFSET_BITS unless it's already
    defined, and then evconfig-internal.h defines it.  Regular users
    should never ever use our -internal.h headers, so the solution is
    to make sure that if we're going to use them ourselves, we do so
    before system headers.

commit b9f7e5fd19968f20fedac2795e932593b41fe04e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 15:58:11 2012 -0500

    Allow more slop in deferred_cb_skew test; freebsd needs it

commit ea30a4358cd85e56f4897db77350c4e9ea2fd5ae
Merge: 3aa0e8a9 438d4ff2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 15:30:51 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 3aa0e8a905391258f20f1bf9392b7f6ed5cb67c8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 15:30:31 2012 -0500

    Remove a couple of now-unused variables

commit 438d4ff2bd2459cbb6778750f840c3667a302bfb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 15:29:39 2012 -0500

    Make event_base integrity check work on windows

commit edc6d7d7fa390923bf7bb8bb2c30f07a36f1f7a7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 15:09:04 2012 -0500

    Start writing a changelog for 2.0.17-stable

commit b77b43fcdfcb8d6330cbae32b6d039aa7f34e793
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 14:59:37 2012 -0500

    Use test_timeval_diff_eq more consistently

commit 67a1763bc4aa67ad16c884626c82c0a3686df0a4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 14:33:10 2012 -0500

    Make regression tests run over 3x faster.
    
    This was mainly a matter of reducing timeouts and delays, paying
    special attention to every test that took longer than a second to
    finish.
    
    We could do better here; IMO anything over .7 sec is probably too
    long, but it's a big win as it is.
    
    Remember, interactive computing is a big win over batch processing:
    anything that makes you get up and walk away from the terminal might
    as well be making you carry your punch cards over to the mainframe.

commit 350a3c400ffe0a4c35a8f266c1add10207110b4c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 14:34:04 2012 -0500

    New evhttp function to adjust initial retry timeout

commit ab14f7c140e1f11377975b2084087d27ac88e062
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 11:45:00 2012 -0500

    Reduce the timeout in the main/fork test.
    
    There was no reason for it to be so long, except for the lack of a usleep

commit f25d9d32b101e97e4eb27e5e0a4d70acede61a8b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 11:42:26 2012 -0500

    Add an (internal) usleep function for use by unit tests

commit 18653fcae77fd0a5a6397cdf3acc8df853d62a62
Merge: 10996a1a 5408ff3b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 11:17:06 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 5408ff3b89677c77b4cb67afd8c65b36dc23a930
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 11:16:26 2012 -0500

    Oops:remove an accidentally committed "sleep(1)" in a unit test

commit 10996a1a0b67afad5da575040b841806e472c3c6
Merge: fe0afabb dab91877
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 11:04:56 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit dab91877bc0e4a1fc31df89a1d1d42e73c3996e1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 11:04:19 2012 -0500

    Workaround in the unit tests for an apparent epoll bug in Linux 3.2

commit fe0afabb593c2034965ffd7e9d7ad9c49787f6d6
Merge: 40a3c52d 3f18ad1b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 24 10:29:31 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            event.c
    
    Edits required in:
            evmap.c

commit 3f18ad1b5f9ca180337fa3d348fe9100d4a0a9b0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 23 18:15:44 2012 -0500

    Fix a fd leak in event_reinit()
    
    We were supposed to be closing the ev_signal_pair sockets.

commit 6e41cdc16b6e01840c0d54b5d7b09af3f1ed3cf4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 23 17:59:16 2012 -0500

    Fix a list corruption bug when using event_reinit() with signals present
    
    While re-adding all the events, event_reinit() could add a signal
    event, which could then cause evsig_add() to add the
    base->sig.ev_signal event.  Later on its merry path through
    base->eventqueue, event_reinit() would find that same event and give
    it to event_io_add a second time.  This would make the ev_io_next
    list for that fd become circular.  Ouch!

commit 3312b02036302c6dfe5eb4977fa7a642bf8ccbbe
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 23 17:43:35 2012 -0500

    Check event_base correctness at end of each unit test

commit 40a3c52d05cbf9a57c8ed595cb8a546e66dd13e4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Jan 22 22:27:16 2012 -0500

    Fix compilation of windows evutil_check_ifaddrs

commit 27737d55ae3af09d3a4f6fd07521ef4b341934c8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 21 12:55:15 2012 -0500

    Add function to check referential integrity of an event_base

commit 5683e2b1a8a472ada2b3dcd6b684723256bffa60
Merge: 677f23cc 974d004e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 20 16:31:20 2012 -0500

    Merge remote-tracking branch 'github/linked_list'
    
    Conflicts:
            include/event2/event_struct.h

commit 677f23cc22b8356184d012206105433bcd75ae6e
Merge: a86a0c04 790f6b3b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 20 11:40:39 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 790f6b3b10462db3e7581eff1355b1de9950d514
Author: Catalin Patulea <catalinp@google.com>
Date:   Tue Jan 10 18:33:58 2012 -0500

    Force strict validation of HTTP version in response.
    
    This sometimes accepted invalid versions like 'ICY' (n = 0, major = undefined, sometimes > 1).

commit a86a0c0463fabbb3ebca65fae789f2e90b314c34
Merge: 26e85fcc 7206e8cd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 16 14:47:05 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 7206e8cdd4213a1d70f9d69e344f27464a6fa16f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 16 14:45:31 2012 -0500

    Suppress a gcc warning from ignoring fwrite return in http-sample.c
    
    Found by Steve Snyder

commit 26e85fcce4eb48186f3cc788dfb6010b845d4a6a
Merge: d5a3fe5f cba48c7d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 9 16:54:19 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit cba48c7d46a5442f64be19b7b08aebad5968b64a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 9 16:44:53 2012 -0500

    Fix a race condition in the dns/bufferevent_connect_hostname test.
    
    As originally written, the test would only pass if the accept()
    callbacks for the evconnlistener were all invoked before the last of
    the CONNECTED/ERROR callbacks for the connecting/resolving bufferevent
    had its call to event_base_loopexit() complete.  But this was only
    accidentally true in 2.0, and might not be true at all in 2.1 where
    we schedule event_base_once() callbacks more aggressively.
    
    Found by Sebastian Hahn.

commit d5a3fe5f3eed914f1f1e750e39bca7bd8894f495
Merge: 0586c25e ecfc720a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 9 12:00:04 2012 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit ecfc720a4f7666d468413a3b9b29908bff5ddb82
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 9 11:49:41 2012 -0500

    Make evconnlistener work around bug in older Linux when getting nmapped
    
    Older Linuxes sometimes respond to some nmap probes by having accept()
    return a success but with socklen 0.  That can lead to confusing behavior
    when you go to process the sockaddr.

commit f03251671879fdc9fb37acd6e724c65adfc43bd6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 9 11:33:38 2012 -0500

    Remove bogus casts of socket to int before calling ev_callback
    
    This should make 64-bit windows act better.
    
    Found by Mark Heily.

commit 0586c25ec8a213fe6810704b3be6947a27b7ca1f
Merge: cac02fad da70fa70
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 14 16:28:18 2011 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit da70fa705bede0b39c8057c49cbd69fdc586df02
Author: Arno Bakker <abakker@users.sourceforge.net>
Date:   Wed Dec 14 16:17:19 2011 -0500

    Backport evhttp_connection_get_bufferevent to Libevent 2.0
    
    Backport by Arno Bakker; original implementation in 8d3a8500f4

commit cac02fadc27e9e164d0ab1499f3338d05f72a16f
Merge: e0f0dbf9 7bbf6ca7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 8 14:38:04 2011 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 7bbf6ca7712bac9081d955c0f673691122ccbf5c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 8 14:36:32 2011 -0500

    Slightly clarify evbuffer_peek documentation

commit c986f2321dc49c927435fadbc404eb9ffd1b1bab
Author: Zack Weinberg <zackw@panix.com>
Date:   Thu Dec 8 14:30:20 2011 -0500

    Fix behavior of evbuffer_peek(buf,-1,NULL,NULL,0)
    
    (Patch altered by nickm to not affect the behavior of
    evbuffer_peek(buf,-1,NULL,vec,n_vec).)

commit e0f0dbf99f595612e645a53cddd12fe665bb3bb4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 8 14:11:30 2011 -0500

    Remove some accidentally-committed debugging code

commit 5c7675cc5a7525d72a761224f69031c601c3cf37
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 8 14:05:47 2011 -0500

    whitespace fixes

commit de5428e7d50338ffa9f54fdb93283b28cea57f87
Merge: d4306028 a8e5e2fc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 8 14:04:04 2011 -0500

    Merge remote-tracking branch 'fancycode/buffer_references'
    
    Conflicts:
            buffer.c

commit d430602863ad9ddb911fe52c58ddc842b75ccdb3
Merge: 88a30ad8 358c745e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 8 11:43:04 2011 -0500

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            configure.in

commit 358c745e5432f7648b6f8b3188f32b5551cbf9d6
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Thu Dec 8 11:39:48 2011 -0500

    check for sysctl before we use it
    
    Not all C libraries under Linux support the sysctl() func.

commit 88a30ad880db1bb5045c9ac993d1f8402c74bac0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 7 18:29:06 2011 -0500

    Split up extra-long AC_CHECK_FUNCS/HEADERS lines in configure.in

commit 56c6afe26ad0a1bf5895ab9f4ebacaf2db3902f2
Merge: 27e22255 7085a456
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 7 18:17:34 2011 -0500

    Merge branch '21_ifaddr'

commit 7085a4568c2144520cbb26fc11ff28b283821f15
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 7 18:16:32 2011 -0500

    Use getifaddrs to detect our interfaces if possible
    
    The old scheme involved connected UDP sockets and getsockname(), and is
    generally best avoied.

commit a8e5e2fce4a20bd1e324ecb80540870e19add846
Author: Joachim Bauch <mail@joachim-bauch.de>
Date:   Wed Dec 7 21:06:10 2011 +0100

    Changed use of refcounts to make sure referenced chains are freed in all cases.

commit 27e222559a3eab400f7290a4abc568b0505d3adc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 7 13:04:35 2011 -0500

    Add evbuffer_copyout_from to copy data from the middle of a buffer
    
    You could previously do this with evbuffer_peek() and some memcpys,
    but it was a bit more work than most folks wanted to get into.
    
    Closes sourceforge ticket 3108072

commit 35c5c9558a70f3108ac0eb5955cad571ea356245
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 7 11:49:52 2011 -0500

    Bypass event_add when using event_base_once() for a 0-sec timeout
    
    Some people use event_base_once(EV_TIMEOUT) to make a callback get
    called "immediately".  But this is pretty roundabout: it uses the
    timeout heap to immediately put the event onto the active queue, when
    it could just use event_active.  Additionally, it can lead to
    surprising re-ordering behavior.
    
    This patch changes event_base_once so it bypasses event_add() and
    called event_active() directly on a pure-timeout event with an empty
    timeout.

commit 748a0d27948c8c7efd8c3b809a5d020ca1a9da35
Merge: 9ce5053d 19277763
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 6 13:38:40 2011 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 19277763b22af105cec14330d380d3d0faf0572e
Author: Colin Watt <cwatt@users.sourceforge.net>
Date:   Tue Dec 6 13:35:54 2011 -0500

    Fix a silly compilation error with the sun compiler
    
    Apparently, other compilers were allowing "return free(x)" in a
    function returning void.

commit 9ce5053d6e6c6642b24383ff6338cf796649a78c
Merge: da45aa74 11f36a5f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 6 11:02:12 2011 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 11f36a5f76c25043412b68765b57d09095173880
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Dec 5 15:02:27 2011 -0500

    Be absolutely sure to clear pncalls before leaving event_signal_closure
    
    I thought we'd fixed the cases where this could come up, but
    apparently having an event_base_break() happen while processing
    signal events could get us in trouble.
    
    Found by Remi Gacogne.  Sourceforge issue 3451433 .

commit da45aa74a7823eae2ec2899b7bc347e915e422f5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Dec 2 01:48:14 2011 -0500

    fix windows compilation issues with new file segment code
    
    Found by Linus Nordberg

commit f3b89dec9eac2cf4000c8dc9467abdbf27121674
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 24 12:31:50 2011 -0500

    Fix two issues in the allow_dirty_shutdown code.
    
    First, it shouldn't crash when it's passed a non-ssl bufferevent.
    
    Second, it should behave correctly when it gets a true argument
    other than 1.

commit a44cd2b0205dfa5c5ffaf8b5a41f9d9a625054ba
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 24 12:24:38 2011 -0500

    Tweak allow_dirty_shutdown documentation

commit 099d27df2b6ab27c49af757a4ffce3038b0121c2
Author: Catalin Patulea <catalinp@google.com>
Date:   Mon Nov 21 19:57:19 2011 -0500

    Allow users to set allow_dirty_shutdown

commit f7eb69ace48d780a8e1b3001b2210596533d5f0a
Author: Catalin Patulea <catalinp@google.com>
Date:   Mon Nov 21 19:24:50 2011 -0500

    bev_ssl: Be more specific in event callbacks. evhttp in particular gets confused without at least one of BEV_EVENT_{READING|WRITING}.

commit 3596a31d6376f2ac0740d37f9fdc27f0b4a2f76d
Merge: 044c41de ba4d6696
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 18 15:35:33 2011 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit ba4d66961ef10e425ccdc7c91db609985916a4dd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 18 15:34:37 2011 -0500

    Increment version to 2.0.16-stable-dev

commit 5de3fa3208c6d6221f188b623fb4b78992fda89a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 18 15:27:06 2011 -0500

    Increment version to 2.0.16-stable

commit 044c41de84bdb5341daa8c64f44d7b3b0b000a9c
Merge: 9ee9e943 31c99bd2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 18 15:16:11 2011 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 31c99bd28f3a9d9b4a6efaa02af3267577768296
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 18 15:14:50 2011 -0500

    Revise 2.0.16-stable changelog

commit 9ee9e943a8732bee9dc565b1b7cad553f4c06b3f
Merge: fe9e831f ebf82199
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 18 14:23:13 2011 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit ebf82199dfc91c437b304649829fb0a259726d5c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 17 17:42:45 2011 -0500

    add comment to new consider_reading code

commit 2aa036fa0403977fa51812e711a1d5040c9fb5c9
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Thu Nov 17 11:59:41 2011 -0500

    Avoid spinning on OpenSSL reads
    
    Previously, if some sender were generating data to read on an
    OpenSSL connection as fast as we could process it, we could easily
    wind up looping on an openssl do_read operation without ever
    considering other sockets.
    
    The difference between this and the original method in
    consider_reading() is that it only loops for a single completed
    *frame* instead of looping until fd is drained or an error condition
    was triggered.
    
    {Patch split out by nickm}

commit 96c562fa495ccd325b93a59affcba5d06de250ec
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 17 11:54:07 2011 -0500

    Move SSL rate-limit enforcement into bytes_to_read()

commit a186e7320054ed8f508a18876adc9f770c9c4e2e
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Thu Nov 17 11:45:49 2011 -0500

    Refactor amount-to-read calculations in buffervent_ssl consider_reading()
    
    Split up consider_reading()'s conditional checks into another function
    can_read() for simplicity sake.
    
    {Split into a separate patch by nickm}

commit 6660c9a347d3557baee7b9b79d84ad4378be5009
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 15 18:34:24 2011 -0500

    Revert "Avoid potential SSL read spinlocks"
    
    This reverts commit fc52dbac87f4937f8306759506d6a2ad15ca244c.

commit a62346dec779c7262ded5afdf2fac17a5eac6674
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 15 18:33:50 2011 -0500

    Revert "openssl bufferevent has the same issue with writing as prior commit."
    
    This reverts commit 7353663eb7c0b2a1caaaa5acd818515f156cf2ca.

commit fe9e831ffb6bc544e55ff33bc44788d37bac592e
Merge: f5b937e6 34045c8f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 15 17:22:45 2011 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 34045c8fd43d44729b200bf1b14ea408a950407f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 15 17:22:12 2011 -0500

    Add new entries to changelog, new credits to README

commit b17b0eec02beb6d984f74096535bf4c706474b57
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 15 17:11:42 2011 -0500

    Fix DNS memleak checks when running with malloc-replacement/debugging disabled

commit f5b937e65fdb85dda0d815a164e9bd3fa3cc9684
Merge: 2ebc8c80 e7874133
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 14 18:22:08 2011 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit e78741332985be96f2a44e71226b4adfe55aee7e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 14 17:33:02 2011 -0500

    Don't try to make notifiable event_base when no threading fns are configured

commit 4e797f388f736756b1531ce47ef210bd2119515f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 14 17:32:22 2011 -0500

    Warn when unable to construct base because of failing make_base_notifiable

commit 2ebc8c80bf99a166e246b39df20aa6f45e062444
Merge: 9ae6e595 7353663e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 14 11:55:37 2011 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit 7353663eb7c0b2a1caaaa5acd818515f156cf2ca
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Mon Nov 14 10:57:15 2011 -0500

    openssl bufferevent has the same issue with writing as prior commit.

commit fc52dbac87f4937f8306759506d6a2ad15ca244c
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Mon Nov 14 10:24:07 2011 -0500

    Avoid potential SSL read spinlocks
    
    OpenSSL bufferevents with deferred callbacks enabled under high load will
    spinlock in the function consider_reading(). This loop continues until all
    data has been read.
    
    Because of this condition; openssl bufferevents will never return back into
    event_base_loop() until SSL_read has determined data is no longer ready.
    
    As of yet I have not found a reason why this while loop exists, so this patch
    just swaps out while for if.
    
    If needed I can write same code which would trigger this effect; optionally
    libevhtp has a test.c program which can be run with the following flags:
    
    ./test -s <keyfile.pem>
    
    curl -vvvv -k -d@<HUGE_ASS_FILE> https://127.0.0.1:8081/
    
    The return data will include the number of times the readcb got data and the
    length of that read.
    
    Without this patch, you are likely to see a small amount of "bytes read....",
    otherwise the "bytes read..." return data should show much more reasonable
    numbers.

commit 9ae6e5959d1c30d6043d4bb20f4d8741aec30a46
Merge: 54142c94 a3f320e8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 14 11:45:17 2011 -0500

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            sample/dns-example.c

commit 54142c9458f77daedb0908a10afdc3a588ac99f6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 14 11:43:31 2011 -0500

    unit tests for EVBUFFER_EOL_NUL

commit d7a8b36eaf6e3d7875b34c73634d79d3f962c623
Author: Andrea Montefusco <amontefusco@sourceforge.net>
Date:   Mon Nov 14 11:42:52 2011 -0500

    New EVBUFFER_EOL_NUL to read NUL-terminated strings from an evbuffer

commit 27b5398fe059b0348323034adade5f1bf2a4b2b5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 11 17:56:08 2011 -0500

    Tweaks, fixups, and comments on evbuffer_add_iovec

commit aaec5aca01062a847378cd476df21babec31ad26
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Tue Oct 25 09:13:15 2011 -0400

    Added evbuffer_add_iovec and unit tests.

commit a3f320e83d97dbd58afa883d8a1e2cf3cdc1ac39
Author: Gisle Vanem <gvanem@broadpark.no>
Date:   Wed Nov 9 00:17:56 2011 -0500

    Improve win32 behavior of dns-sample.c codex

commit 95af043314df1bbb4f6de420debb0580640901c0
Merge: dea055d0 674bc6a2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 3 11:45:43 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 674bc6a29e9a33e0c057508f46f3c9b6035a3e96
Author: Mansour Moufid <mansourmoufid@gmail.com>
Date:   Thu Nov 3 11:43:49 2011 -0400

    Fix typo in whatsnew-2.0.txt

commit dea055d026e5e892e0764f90803f05f629359d70
Merge: c882a959 b18c04dd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 2 23:15:07 2011 -0400

    Merge remote-tracking branch 'github/20_evbuffer_remove_bug'

commit c882a959568155a44b2d1709555f8fb4b638495c
Merge: 00145918 c37069cd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 2 23:14:24 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit b18c04dd74577e935358968d32140fd31115e4dd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 2 22:50:47 2011 -0400

    Use the free-trailing-chains function in evbuffer_insert_chain too

commit c37069cd794cfc844a58619a6211d0dc93d3e129
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 2 16:09:15 2011 -0400

    Fix an evbuffer crash in evbuffer_remove_buffer()
    
    Found by Greg Hazel.

commit 7eb52eb85e99a81e37c53e5a0c730c7c7d0f423e
Author: Greg Hazel <ghazel@gmail.com>
Date:   Wed Nov 2 15:19:05 2011 -0700

    improve test to remove at least one buffer from src

commit 90bd620fa3d0c8e3de6a838d8c6659733486f694
Author: Greg Hazel <ghazel@gmail.com>
Date:   Tue Nov 1 13:44:40 2011 -0700

    unit test for remove_buffer bug

commit 00145918657d0a4b750d5ea234fd484e936f371b
Merge: 0cb70e33 447b0bad
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Oct 30 22:34:00 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 447b0bad15dcc1ca56c73e3ecca5c636cc332ba0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Oct 30 22:32:18 2011 -0400

    Fix compile warning from saying event2/*.h inside a comment
    
    Based on a patch by Adrian Chadd

commit 0cb70e3333bc174b9490eeaa9ddac7e475476072
Merge: a2c48e3b 1aee7183
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 26 10:17:21 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 1aee718362f8bc88369d750bdb87b4f8af48af28
Author: Jamie Iles <jamie.iles@mathembedded.com>
Date:   Wed Oct 26 13:24:30 2011 +0100

    epoll: close fd on alloc fail at initialization
    
    If the memory allocations fail then we free any other allocated
    structures but don't close the file descriptor resulting in an leak of
    fd's.

commit a2c48e3be814cf5f4ab6707cdf285731a8524820
Author: Samy Al Bahra <sbahra@appnexus.com>
Date:   Mon Oct 24 01:31:55 2011 +0000

    evhttp: Add evhttp_foreach_bound_socket.
    
    Applies the function specified in the first argument to all
    evhttp_bound_sockets associated with a struct evhttp. The user
    must not attempt to free or remove any connections, sockets or
    listeners in the callback function.

commit 356554c8dc549280bc9695d189805ca9134034ad
Merge: 212533e4 724bfb56
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 25 11:43:01 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 3c824bd3347a4f317481af56f26f3f7dc58e5e90
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 24 13:18:09 2011 -0400

    Update copyright dates to 2011.

commit 212533e4a1c8ddd42c2c0af89bed6b7fdbacc0dd
Author: Abel Mathew <abelpmathew@gmail.com>
Date:   Fri Oct 21 19:53:32 2011 +0000

    New event_base_update_cache_time() to set cached_tv to current time
    
    This function is particularly useful for selectively increasing
    the accuracy of the cached time value in 'base' during callbacks
    that take a long time to execute.
    
    This function has no effect if the base is currently not in its
    event loop or if timeval caching is disabled via EVENT_BASE_FLAG_NO_CACHE_TIME.

commit c8953d1b4863e7484bf0afb42758644a16004cb9
Author: Mansour Moufid <mansourmoufid@gmail.com>
Date:   Fri Oct 14 17:16:03 2011 -0400

    Add argument checks to some memory functions in `event.c'.
    
    Add a zero check to the function `event_mm_malloc_',
    i.e. simply return NULL if the sz argument is zero.
    On failure, set errno to ENOMEM and return NULL.
    
    Add a zero check to the function `event_mm_calloc_',
    i.e. simply return NULL if either argument is zero.
    Also add an unsigned integer multiplication check, and if an integer
    overflow would occur, set errno to ENOMEM and return NULL.
    On failure, set errno to ENOMEM and return NULL.
    
    Add a NULL check to the function `event_mm_strdup_',
    i.e. set errno to EINVAL and return NULL.
    Also add an unsigned integer addition check, and if an integer
    overflow would occur, set errno to ENOMEM and return NULL.
    If a memory allocation error occurs, again set errno to ENOMEM
    and return NULL.
    
    Add unit tests to `test/regress_util.c'.

commit 724bfb56ef0f83776be74cc0458a0aadc0b2dc66
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 19 22:59:47 2011 -0400

    Add note about evhttp_send_reply_end to its doxygen

commit 128c8d6c0f684b95a98358805eb91e1384dcb050
Merge: fc1a2514 9e6a4efa
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 19 22:44:33 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 9e6a4efa51b14acbe1259386bd9e4f1ff323932c
Author: Leonid Evdokimov <leon@darkk.net.ru>
Date:   Wed Oct 19 17:44:17 2011 +0400

    More detailed message in case of libevent self-debugging failure.

commit 5e42202d5935bd7cc65296743176b888d51c9db5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 19 22:41:11 2011 -0400

    Style and comment tweaks for dns/leak* tests

commit f7841bfc70adf97171b124d2157c4838654d8ce5
Author: Leonid Evdokimov <leon@darkk.net.ru>
Date:   Tue Oct 18 17:49:40 2011 +0400

    Test for commit aff6ba1

commit fc1a2514a117692ac62ce49f1a5833993fe67657
Merge: e0b81ba3 21a08d68
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 19 22:20:15 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 21a08d6869d53c81268ef131eb88cb1dd74a71f0
Author: Leonid Evdokimov <leon@darkk.net.ru>
Date:   Wed Oct 19 22:38:37 2011 +0400

    Empty DNS reply with OK status is another way to say NODATA.
    
    Sometimes DNS reply has nothing but query section. It does not look like
    error, so it should be treated as NODATA with TTL=0 as soon as there is
    no SOA record to deduce negative TTL from.

commit d58c15ee8436796e20346cf0b62afbf7a6a4d038
Author: Leonid Evdokimov <leon@darkk.net.ru>
Date:   Wed Oct 19 22:36:12 2011 +0400

    Tests for 94fba5b and f72e8f6

commit 95a8b87a2388cac9396555b680a51a9fbc12400a
Author: Joachim Bauch <mail@joachim-bauch.de>
Date:   Mon Oct 17 21:48:23 2011 +0200

    fixed typo

commit ba24f616e5401cf47716f8030b08a8ebdcc7f847
Author: Joachim Bauch <mail@joachim-bauch.de>
Date:   Mon Oct 17 21:46:12 2011 +0200

    added comments to describe refcounting of multicase chains

commit e0b81ba3aa661c3b140d50f66ba08b39839aa77d
Merge: ab0f5f18 8589f6c4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 12 01:02:13 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 8589f6c45bb873e5c81d0b183f557a9a2f81b78d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 12 01:00:23 2011 -0400

    Bump version to 2.0.15-stable-dev

commit ab0f5f18fd8f41f092baf76c85b29402bc004010
Merge: 78d80413 c54c2358
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 12 00:57:55 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit c54c2358e5a05bb65d29239e2999763d5ce39c92
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 12 00:39:22 2011 -0400

    Credit a patch from a one-named user

commit 78d80413b298f8939fdb1e370546973914c4b1aa
Merge: 177f2868 4d9529fc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 12 00:22:54 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 4d9529fcfa5691412e74a3c425c6658fc42e3699
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 12 00:22:17 2011 -0400

    Increment version to 2.0.15-stable

commit 177f28680e2406f21c513cd3d44a9602f4df2822
Merge: 998c8138 7c3e0612
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 12 00:21:29 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 7c3e06120bdff790e29db30bb225e9b296a1ab90
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 12 00:16:12 2011 -0400

    Add changelog for 2.0.15-stable

commit 998c81389f4b83d0dda158991c9c46654f229999
Author: Alexander Drozdov <al.drozdov@gmail.com>
Date:   Tue Oct 11 09:26:57 2011 +0400

    bufferevent: Add functions to set/get max_single_read/write values.

commit 3c55b5ee0ac9a12c83488ae9ef99684f433ea6a4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 11 09:50:57 2011 -0400

    Make evbase_priority_init() and evbase_get_npriorities() threadsafe

commit ee3a4ee8802650c565078aee3edfc495d1894e9d
Author: Alexander Drozdov <al.drozdov@gmail.com>
Date:   Tue Oct 11 11:12:34 2011 +0400

    Add event_base_get_npriorities() function.

commit fed8f6e4845bd7990cc5505c8a590fc7bff73d43
Merge: c6bbbf1b ba5c27d4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 10 11:34:26 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit ba5c27d47f5c74ed38be3baea704508cd8b5875d
Author: Greg Hazel <ghazel@gmail.com>
Date:   Mon Oct 10 08:24:43 2011 -0700

    refer to non-deprecated evdns functions in comments

commit c6bbbf1b670ce594399e05d112f054604e3af815
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 6 18:02:22 2011 -0400

    Make evbuffer_file_segment_types adaptable
    
    Instead of having a file segment born as one type and stay that way
    forever, let them start out unmapped, but map themselves as needed
    if they need to get written out on a non-drains_to_fd evbuffer.

commit 83588777682b2a7d9044f527dc4acbec70775fa9
Merge: 5760efb1 706aa5f4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 6 15:21:55 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            buffer.c
            test/regress_buffer.c

commit 706aa5f416a65107a3b40511ea91cff5ed048024
Merge: 39c0cf7c 0ba0af9c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 6 15:11:50 2011 -0400

    Merge remote-tracking branch 'github/20_addfile_ssl' into patches-2.0

commit 5760efb1b67414e65e42ee7127286a7d9a7bd3a7
Merge: e0cae789 8a231040
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 5 15:03:17 2011 -0400

    Merge branch '21_largefile_support'

commit e0cae789ca3a13e0bddc26628429feb80bff4b32
Merge: 9593a33f 084e68f3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 5 11:26:52 2011 -0400

    Merge branch '21_evloop_noexit'

commit 084e68f3f2b005966d9aba6eb755c845e4d875d9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 1 21:53:08 2010 -0500

    New EVLOOP_NO_EXIT_ON_EMPTY option to keep looping even when no events are pending
    
    This can be useful if you want to start an event loop and then add or
    remove events to it from another thread.

commit 9593a33fd1c376b7a6bcbc5a5ab8d2c66f9c88d1
Author: Alexander Drozdov <al.drozdov@gmail.com>
Date:   Mon Oct 3 08:12:32 2011 +0400

    Allow evconnlistener to be created in disabled state.

commit b3bc77b673dd4344456d8dde5a3ddf635004b1c7
Merge: 46974cd8 39c0cf7c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 3 12:54:35 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 39c0cf7ca44e887f84ef8199d5e40e10a0f16629
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 3 12:49:02 2011 -0400

    Fix some "value never used" warnings with gcc 4.6.1

commit 2b768479e474d299b7afc8882cbb543c3fa86288
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 3 12:45:36 2011 -0400

    Make write-checking fixes use tt_fail_perror

commit c3b62fd7fde20ff9891ea969c949228e5cdd2792
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Tue Jul 12 13:05:36 2011 -0400

    Fixed compiler warnings for unchecked read/write calls.

commit 0ba0af9c6c3dbf4dfec8c3cd53b0d90b49153016
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 29 09:30:04 2011 -0400

    Prefer mmap to sendfile unless a DRAINS_TO_FD flag is set. Allows add_file to work with SSL.
    
    The sendfile() implementation for evbuffer_add_file is potentially more
    efficient, but it has a problem: you can only use it to send bytes over
    a socket using sendfile().  If you are writing bytes via SSL_send() or
    via a filter, or if you need to be able to inspect your buffer, it
    doesn't work.
    
    As an easy fix, this patch disables the sendfile-based implementation of
    evbuffer_add_file on an evbuffer unless the user sets a new
    EVBUFFER_FLAG_DRAINS_TO_FD flag on that evbuffer, indicating that the
    evbuffer will not be inspected, but only written out via
    evbuffer_write(), evbuffer_write_atmost(), or drained with stuff like
    evbuffer_drain() or evbuffer_add_buffer().  This flag is off by
    default, except for evbuffers used for output on bufferevent_socket.
    
    In the future, it could be interesting to make a best-effort file
    segment implementation that tries to send via sendfile, but mmaps on
    demand.  That's too much complexity for a stable release series, though.

commit 46974cd877e3ac1e17ff39281a646025912a7560
Merge: 1ebe7955 1ef1f684
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 28 09:23:41 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 1ef1f68462cb5509d978ae490efeff0c73569f25
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 28 09:22:17 2011 -0400

    Make evbuffer callbacks get the right n_added value after evbuffer_add
    
    Patch from Alex.

commit 1ebe795544ff0a34a1d4e180baf65ea9e9261010
Merge: 65c920c9 296d29a1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 26 11:11:30 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 296d29a12c9faf9cf23ae74c41f64932c4e33539
Merge: 7f82382a 4e8eb6a5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 26 11:07:58 2011 -0400

    Merge branch '20_loopbreak_in_signal' into patches-2.0

commit 65c920c9f13265a86ec493282bf62bfff89bbfca
Merge: 2179d735 7f82382a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Sep 25 07:41:29 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 7f82382a7dafbd8203da6d7572dcf5de0642e9b0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Sep 25 07:39:00 2011 -0400

    Use _SOURCES, not _sources, in sample/Makefile.am
    
    Found by Adrian Chadd

commit 2179d7359fecda9880cf15f9746b4f07bbecb055
Merge: 38674d4a 9ae061ac
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 16 09:47:14 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 9ae061acca0b309d740b48463b6e41f1e9ce9ca4
Author: Sergey Avseyev <sergey.avseyev@gmail.com>
Date:   Thu Sep 15 13:06:38 2011 +0300

    le-proxy and regress depend on openssl directly

commit 38674d4a5e6f5793febae4a065860ac0a15e4842
Merge: e20eabd6 94fba5b9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 12 15:46:54 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 94fba5b9acd6608c69befff99cf083cf60bde098
Author: Leonid Evdokimov <darkk@yandex-team.ru>
Date:   Wed Aug 10 15:58:47 2011 +0400

    Add DNS_ERR_NODATA error code to handle empty replies.

commit 2b6eae5999b9a55475f29e1478340e178787757e
Author: Leonid Evdokimov <darkk@yandex-team.ru>
Date:   Wed Aug 10 15:58:19 2011 +0400

    Fix docstring in dns.h

commit 8a2310408faf94ee38f53c04c5e56566d34f7a13
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 12 14:53:39 2011 -0400

    Build with large-file support on platforms where it matters
    
    Some hosts require you to define certain options to get a large off_t
    instead of a small one, to get useful ftell and fseek calls instead of
    ones that can only support 2GB files, and so on.  This patch makes
    Libevent support those platforms by:
    
       * Defining the right options when we build, and
       * Changing our API so that it does not depend on the platform's
         definition of off_t.
    
    Based on discusion with Michael Herf

commit e20eabd69a43d40d199de6efbddf3105273df19b
Merge: 4d637583 6207826e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 12 11:31:19 2011 -0400

    Merge branch '21_enable_debugging'

commit 6207826e708e131efca23f7db53d181fe87c9b23
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 12 11:31:02 2011 -0400

    Clarify event_enable_debug_logging a little

commit 4d637583645aa2020de7064ff74bdee5900056a0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 12 10:57:37 2011 -0400

    Remove calls to deprecated bufferevent functions from evhttp.c

commit 8d3a8500f420bab66b94265285ab9c096f1c7a87
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 12 10:46:17 2011 -0400

    Add evhttp callback for bufferevent creation; this lets evhttp support SSL.
    
    Based on a patch uploaded anonymously to sourceforge; cleaned up
    by Graham Leggett to work with current libevents.

commit caf133f90198961c1f9b8bdc74dd6f5385ec00b3
Merge: 804f77fb 75502677
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 12 10:09:28 2011 -0400

    Merge branch 'new_configure_options'

commit 755026771a6ec3c7da41010940ddbade43c77f22
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Sun Apr 10 18:25:05 2011 +0200

    Implement --enable-gcc-hardening configure option
    
    Using --enable-gcc-hardening enables some additional safety features
    that gcc makes available such as stack smashing protection using
    canaries and ASLR.
    
    This commit is based on a patch for Tor:
    (git commit 04fa935e02270bc90aca0f1c652d31c7a872175b by Jacob Appelbaum)
    Copyright (c) 2007-2011, The Tor Project, Inc.

commit d46517ee55fa1f6f2f091ec796500dcfcd0b3090
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Sun Mar 20 04:24:33 2011 +0100

    Make gcc warnings on by default, and --enable-gcc-warnings only add -Werror
    
    This commit is based on a patch for Tor
    (git commit ca60a6ce3f4786626ac455ec1b798b2e8304635c by Peter
    Palfrader), Copyright (c) 2007-2011, The Tor Project, Inc.
    
    (Originally, it added --enable-gcc-warnings-advisory as in Tor; Nick
    changed that.)

commit 4e8eb6a59549e82468d0aa6fbd0fa351e7e5d1fb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 9 20:53:30 2011 -0400

    When a signal callback is activated to run multiple times, allow event_base_loopbreak to work even before they all have run.
    
    Found by Abilio Marques.

commit 804f77fbb8cdd988d60c8ca1d98506406c81f5b1
Merge: 10c3450f f72e8f66
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 1 17:39:37 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit f72e8f6643992e4369eba64fb4c6e48e119086e4
Author: Leonid Evdokimov <darkk@yandex-team.ru>
Date:   Wed Aug 31 00:56:45 2011 +0400

    DNS: add ttl for negative answers using RFC 2308 idea.

commit 10c3450fd6db2ac74edcf6086559e016efb1e53b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 31 11:58:40 2011 -0400

    Make --enable-verbose-debug option match its help text

commit 4cbedae95fae57c39095991f384fde42a6d5db19
Merge: 148458e0 a718b6c3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 31 11:28:37 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            Makefile.am
            WIN32-Code/event2/event-config.h
            configure.in

commit a718b6c31cd476a9188ffa05f6bcf082f4b183fd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 31 11:25:11 2011 -0400

    Increment version to 2.0.14-stable-dev

commit ac9f2adb45e12f3f43760995a4ca98349fe0a507
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 31 00:23:20 2011 -0400

    Credit new contributors for 2.0.14-stable

commit da90a9be691e89216cc28d769e3585b837d0c885
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 30 22:35:51 2011 -0400

    Pick a release date for the changelog

commit 85976ddfa4742a7c838139506b3dd8f7fd6c7c05
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 30 22:28:02 2011 -0400

    Bump version to 2.0.14-stable

commit 148458e0a1fd25e167aa2ef229d1c9a70b27c3e9
Author: Zack Weinberg <zackw@panix.com>
Date:   Thu Aug 11 09:34:51 2011 -0700

    Use SIG_IGN instead of a do-nothing handler for signal events with kqueue

commit 46f1769d41c1220d80cea20b405b5ce896858349
Author: Zack Weinberg <zackw@panix.com>
Date:   Tue Aug 30 09:38:18 2011 -0700

    Fix OSX build: $(OPENSSL_INCS) needs to be after $(AM_CPPFLAGS).

commit e9cccce6e12bfe177ee4c75b685f9fed87606069
Merge: 904254f9 54f7e61b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 29 17:51:45 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 54f7e61ba389ab46320f05b8cdd5dfb7cd9fe1f5
Author: Joachim Bauch <mail@joachim-bauch.de>
Date:   Mon Aug 29 23:39:26 2011 +0200

    clear read watermark on underlying bufferevent when creating filtering bev to fix potentially failing fragmented ssl handshakes

commit 6476d92d105fecd796c8a51990a84da5b8e01a7d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 29 13:40:03 2011 -0400

    Checkpoint changelog entries for 2.0.14-stable

commit 904254f975b260b2a00b299a01db26b4f81407a3
Merge: 6d2613be e6af35d7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Aug 28 14:51:36 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit e6af35d762822e56e97cca3708ffee291c867d20
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 24 21:39:28 2011 -0400

    Correctly terminate IO on an async bufferevent on bufferevent_free

commit 0ff2c5a92246083495ff4d672372b8afe510105b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 24 18:42:12 2011 -0400

    Have test-ratelim.c support IOCP

commit a98da7bfc9148fd4c51d46320f51a6d28eed3463
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 24 18:41:35 2011 -0400

    Make IOCP rate-limiting group support stricter and less surprising.
    
    Previously, we wouldn't decrement read/write buckets because of IOCP
    reads and writes until those reads and writes were complete.  That's
    not so bad on the per-connection front.  But for group limits, the
    old approach makes us launch a huge amount of reads and writes
    whenever the group limit becomes positive, and then decrement the
    limit to a hugely negative number as they complete.
    
    With this patch, we decrement our read buckets whenever we launch an
    IOCP read or write, based on the maximum that tried to read or
    write.  Later, when the operations finish, we re-increment the
    bucket based on the portion of the request that couldn't finish.

commit c75341b077d14f6f9f76b304295a10dafec2a069
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 24 18:42:00 2011 -0400

    Support negative arguments to _bufferevent_decrement_(read/write)_buckets()

commit 6d2613beccc34050b615ffbedc4196d457b46597
Author: Harlan Stenn <stenn@ntp.org>
Date:   Sat Aug 27 04:46:10 2011 -0400

    We need AM_CPPFLAGS when compiling bufferevent_openssl.c

commit 1c63860758f5ddb0bd00e9d3c841d488779be1bd
Author: Harlan Stenn <stenn@psp-deb1.ntp.org>
Date:   Sun Aug 28 14:30:52 2011 -0400

    Use pkg-config (if available) to handle OpenSSL.

commit 674dc3d34ed0e46890f9db35402841527f2432f3
Author: Harlan Stenn <stenn@ntp.org>
Date:   Sat Aug 27 04:06:49 2011 -0400

    Provide the autoconf m4 macros for the new OpenSSL via pkg-config stuff.

commit b260065ab6306cdeeb08f426cedbf709332ec82f
Merge: 2cbe115c 2f51dc03
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Aug 28 14:06:03 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 2f51dc0311566fab4f0a4b820ac8120fa803499a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Aug 28 14:03:10 2011 -0400

    Cleanup on 7c11e51e1ab: fix strtol usage

commit 6056d6e0df8900a9e8878cb8321f1f33c04de187
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Aug 28 14:02:40 2011 -0400

    Cleanup on 7c11e51e1ab: restore c90 declaration compliance

commit 7c11e51e1ab19e1eebc7f03d1a7a51f54acf7c32
Author: Harlan Stenn <stenn@ntp.org>
Date:   Sat Aug 27 05:48:11 2011 -0400

    Clean up some problems identified by Coverity.

commit 2cbe115cbcdd47d954fa47a96c206c5c6ee63ddc
Merge: 0d108044 5b18f130
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 24 16:17:56 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 5b18f13048d4d6e65ee93438a052e4d904f3f639
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 24 16:17:05 2011 -0400

    Make rate limiting work with common_timeout logic

commit 0d10804465ccdbaa2c94efc30f052a4e0391b208
Merge: ec670c15 6736852e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 18 15:18:14 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 6736852eaa0e6df52b32eb2ed666688ca8d80429
Merge: 04656ea8 6acfbdd8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 18 15:09:44 2011 -0400

    Merge branch '20_iocp_fixes' into patches-2.0

commit 6acfbdd83ab0ecd435928db4eafac862209080ea
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 18 12:35:27 2011 -0400

    Make overlapped reads result in evbuffer callbacks getting invoked

commit 495c227f59093543dcc8f72e699e146ec9f82d10
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 18 11:41:55 2011 -0400

    IOCP: don't launch reads or writes on an unconnected socket

commit ec670c15a7d7c41866edf45faf98448852257a4b
Merge: 3c63edd1 04656ea8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 17 22:08:06 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflict in buffer.c: the new file-segment logic conflicted with the
    solaris sendfile fix.

commit 04656ea85a1b6ec0fbe1fa126f8c81e9b17abab5
Author: Dave Hart <hart@ntp.org>
Date:   Mon Aug 15 14:40:32 2011 -0400

    Try to fix 'make distcheck' errors when building out-of-tree

commit 3c63edd1f7ea1e26937466cf3ad16b7bf0e265e4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 11 12:47:21 2011 -0400

    Make the priority inversion code use gettime(), not evutil_gettimeofday()
    
    Since we're computing the time after each callback, we might as well
    update the time cache (if we're using it) and use monotonic time (if
    we've got that).

commit a37a0c0e35cae9085460f70b02fa92bf9800028c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 11 12:38:47 2011 -0400

    Make max_dispatch_interval able to apply only to low-priority events
    
    Suggested by Alexander Drozdov

commit a9866aa8c1fa540587f90ed1668d3a438e5e23e8
Author: Alexander Drozdov <al.drozdov@gmail.com>
Date:   Fri Jul 22 12:29:07 2011 +0400

    Optimization in event_process_active(): ignore maxcb & endtime for highest priority events.

commit 9fa56bdf1c60d93a975ec8ea62749f3801d3daa4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 11 11:59:23 2011 -0400

    Make sure max_dispatch_callbacks is never negative
    
    Suggested by Alexander Drozdov.

commit fd4de1e7fefbd1a60ee8478563b415c7bed891ac
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 1 20:44:05 2010 -0500

    Add event_config function to limit time/callbacks between calls to dispatch

commit e067d0e3ac81ca6ac1dab1a728a490a22c342bf4
Merge: 643922e9 6d5440e8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 17 21:47:19 2011 -0400

    Merge branch '20_low_ratelim' into patches-2.0

commit 643922e9079c2d2b5dd534cda8ca94f43025889c
Author: Michael Herf <herf@pobox.com>
Date:   Mon Aug 15 13:39:10 2011 -0400

    Solaris sendfile: correctly detect amount of data sent
    
    Original message:
    
       Solaris sendfile seems to fail when sending moderately large (<1GB)
       files. Not a 32/64 problem, but a buffer problem.
    
       Anyone else ever try this? It is definitely broken in http-server.c.
    
       It seems to be broken in the following way:
    
       When sendfile sends partial data (EAGAIN, would block), "res" is
       always -1, rather than the amount sent.
    
       Here's a patch that reads from the "offset" pointer instead to
       discover what was sent. This seems to work:

commit 2fdb8e22048ddfd9234393b0e1c713b262083d7f
Merge: d7451b05 67275433
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 15 11:29:39 2011 -0400

    Merge remote-tracking branch 'ellzey/debug_timer_add_usec'

commit d7451b0523478ee0b2b52aee8f13c433f80faa8d
Merge: 14ec20a7 aff6ba15
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 15 11:14:57 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit aff6ba15a1712567ca65d3d4d0b6f0c2fabc672b
Author: Leonid Evdokimov <darkk@yandex-team.ru>
Date:   Thu Aug 11 03:24:06 2011 +0400

    Fix request_finished memory leak with debugging turned on.

commit 9b724b288a81db16e7d19bddb0c18a0ddb995ba3
Author: Leonid Evdokimov <darkk@yandex-team.ru>
Date:   Thu Aug 11 03:10:08 2011 +0400

    Fix evsig_dealloc memory leak with debugging turned on.

commit 50be5a14b5aa4d14be2803ef994a232198ec9178
Author: Leonid Evdokimov <darkk@yandex-team.ru>
Date:   Thu Aug 11 03:06:07 2011 +0400

    Another docstring fix.

commit 67275433ec42ccb5b536289ab7b8aa939b8b5ced
Author: Mark Ellzey <socket@gmail.com>
Date:   Thu Aug 11 16:53:01 2011 -0500

    more event dbg updates

commit 6d5440e80e7ecd95c52b3f3d5217e1693294404e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 11 15:15:17 2011 -0400

    Fix handling of group rate limits under 64 bytes of burst
    
    The "min_share" logic, which was designed to prevent piles of
    extremely small writes when running up against a group rate limit,
    could lead to confusing behavior if you ever set a min_share less
    than your burst rate.  If that happened, then as soon as your group
    rate limit was exhausted, you'd stop reading/writing, and never
    start again, since the amount readable/writeable would never
    actually hit min_share.
    
    We now cap min_share at the rate per tick.
    
    Found by George Kadianakis

commit 4b7d2984157a1232c460500817f64d337ebbf8b7
Author: Mark Ellzey <socket@gmail.com>
Date:   Thu Aug 11 13:25:24 2011 -0500

    added timeout debug logs to include event ptr.

commit 14ec20a7a3e1b7871756a9166db7a31f74baca1d
Merge: d87a3f71 3baab0dc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 11 14:00:01 2011 -0400

    Merge remote-tracking branch 'ellzey/debug_timer_add_usec'

commit d87a3f71c6c3a5efa706f24eb8f40bb2da8ef6dd
Merge: d4f56353 a9c2c9ab
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 11 13:59:02 2011 -0400

    Merge remote-tracking branch 'ellzey/event_debug_flag'

commit 3baab0dce973e3ff849e1076306ed273b20f9cd8
Author: Mark Ellzey <socket@gmail.com>
Date:   Thu Aug 11 12:06:54 2011 -0500

    Added usec debug in another area for debug

commit ac43ce045033feba35397a06b4f113fa3c62f245
Author: Mark Ellzey <socket@gmail.com>
Date:   Thu Aug 11 11:56:26 2011 -0500

    Debug addition for printing usec on TIMEOUT debugging.

commit d4f56353f7fad75cb6e7d8dcdee222a510dcffe1
Merge: 5419803d 5d1b255b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 10 13:18:30 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 5d1b255b1475602707d61337107e2ab6e5a94da9
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Wed Aug 10 19:11:55 2011 +0200

    Ignore deprecation warnings on OS X
    
    Starting with Lion, Apple decided to deprecate the system openssl. We
    can start requiring users to install their own openssl once OS X doesn't
    ship with it anymore.

commit 26041a8ed86be8101573daf57c62c7806be7db08
Author: Joachim Bauch <mail@joachim-bauch.de>
Date:   Thu Aug 4 23:39:15 2011 +0200

    prevent nested multicast references, reworked locking

commit 9d7368ae2db526ad678f9aa332c21b2f2b1d8493
Author: Joachim Bauch <mail@joachim-bauch.de>
Date:   Thu Jun 9 23:33:58 2011 +0200

    support adding buffers to other buffers non-destructively

commit 5419803d3abcd9705b71cb98223dc00709ed5b33
Merge: e91d57f1 b4423029
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 8 22:04:46 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit b4423029b940eb5c71ac8aca7fdaeddce1a25316
Author: Mitchell Livingston <livings124@users.sourceforge.net>
Date:   Mon Aug 8 17:06:46 2011 -0400

    Allow OS-neutral builds for platforms where some versions have arc4random_buf

commit e91d57f1f61a64842743cd3fc946493f8a963574
Merge: 24e24805 d1cee3b1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 8 16:20:53 2011 -0400

    Merge remote-tracking branch 'github/21_split_functions'
    
    Conflicts:
            event.c
    
    The conflicts were with the 21_faster_timeout_adj branch, which
    added a "reinsert" function that needed to get renamed to
    "reinsert_timeout".  Also, some of the code that 21_split_functions
    changes got removed by 21_faster_timeout_adj.

commit 24e2480520d88c09d36df1cebfd335588b59a3e0
Merge: 909c40e5 dd5189b1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 8 16:17:18 2011 -0400

    Merge remote-tracking branch 'github/21_faster_timeout_adj'

commit a9c2c9ab625c48e13256bed5aa1546c88f2d1318
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Sat Aug 6 01:32:40 2011 -0400

    changed to --enable-verbose-debug

commit 909c40e5d1888a3b6898a3777080a8c06dc20e53
Merge: 0fcc536b 4a343943
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 3 12:12:47 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 4a343943bd5c93ea1a4c0b80633bc417aeb63969
Author: Joachim Bauch <mail@joachim-bauch.de>
Date:   Tue Jul 26 10:31:18 2011 +0200

    Propagate errors on the underlying bufferevent to the user.

commit bc7b4e405108e5f54a21872020e5684af99ce724
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Tue Aug 2 17:23:52 2011 -0400

    Added --enable-event-debugging in configure

commit 0fcc536bcd905ba64183fa97850ad43a0df4f128
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 1 10:30:32 2011 -0400

    Add missing break to evhttp_parse_request_line

commit e918f15a4c97cd275b7b98c5de844879327a86eb
Merge: 77a4d7f4 1183f7e2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 1 10:30:02 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 1183f7e24eb1d4baab8365d1d9cb993cdfc76473
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 1 10:27:56 2011 -0400

    Fix typo in event_compat.h comments.

commit 77a4d7f406be9d78876ba8a1b7c7d834d8998479
Merge: ac461206 a2fdf9b0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 18 23:38:23 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit a2fdf9b04f4251be72536e9152be9a1cbfd61204
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 18 23:37:59 2011 -0400

    Bump version to 2.0.13-stable-dev

commit ac461206c4f6015ca8906a228eb5a10175de481b
Merge: 18667d3c 80414e22
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 18 18:23:13 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 80414e22a7f635732eea90f88d3b1d3d287f5374
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 18 18:19:25 2011 -0400

    Bump version to 2.0.13-dev

commit 18667d3c28da99212d21885b5eb8323e44344e3e
Merge: c629e182 62b8ce58
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 18 18:07:48 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 62b8ce587716d0ca7739a6f7d050b6b39ef9bcc5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 18 17:05:20 2011 -0400

    acks and changelog for 2.0.13-stable

commit b3b425eb1077bf293c19fa1bfdf681f44eee5405
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 18 12:45:50 2011 -0400

    Give Makefile.am echo a non-null argument. msys likes this

commit 00a7a0e4781bd903551f506e4b18309c0f6a71a7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Jul 17 21:48:38 2011 -0400

    Fix a warning in evutil_rand when building with threads disabled

commit c629e182876620dc14919bb97c231b00e257e2bf
Merge: 7d08a28c 4a5c82d6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 15 10:20:58 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 4a5c82d617fdd127814a18d1e17695c5bd9c2995
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 15 10:20:01 2011 -0400

    Use AM_CPPFLAGS in sample/Makefile.am, not AM_CFLAGS
    
    Reported by Dagobert Michelsen.

commit 7d08a28c1c8140491084186cbbce8135814f0e0f
Merge: b07940ce e3e97ae3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 5 15:07:07 2011 -0400

    Merge remote-tracking branch 'github/21_end_of_buffer'
    
    Conflicts:
            include/event2/buffer.h

commit b07940ced7ff1778590ca61fc6a20144c685dcd4
Merge: 16bacbc5 d5bd604a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 5 14:58:35 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit d5bd604a8b8317a347f62db40bab085d8650fbec
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 5 14:57:08 2011 -0400

    Add doxygen to .gitignore

commit caf695afdb8682d9cbe6b69c517ea855cf43772c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 5 14:55:09 2011 -0400

    Fix up test_evutil_snprintf

commit af6a05f723bf8b13e34c1b6e94bacab62fd707e6
Merge: 341e1b03 3203f88c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 5 14:51:24 2011 -0400

    Merge remote-tracking branch 'github/20_size_fmt' into patches-2.0

commit 16bacbc5de5142f0efcbbd55832279777ba3b210
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 5 14:43:24 2011 -0400

    Fix a test-call accidentally in the last commit

commit cd74c4ec3bf8d0da228ae384b504f4c7dc152a36
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 5 14:41:46 2011 -0400

    More abstraction in test.sh

commit 21be3dff746f5cc86b9d0aa22b32c9f3d5a6d480
Merge: 1fb5cc68 341e1b03
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 5 14:38:21 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            include/event2/buffer.h
            include/event2/thread.h
            include/event2/util.h

commit 341e1b03a83f1d60197549fd5e793db94f81cf61
Merge: 49d11362 aea0555b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 5 13:04:30 2011 -0400

    Merge branch 'doxygen' into patches-2.0

commit aea0555b76f8083836f36c4b0aff70f027f35d4d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 4 23:14:19 2011 -0400

    Update Doxyfile to produce more useful output

commit 2888faccd1a7e979a066c9241b273371a4838d68
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 4 23:02:11 2011 -0400

    Revise the event/evbuffer/bufferevent doxygen for clarity and accuracy

commit 1fb5cc682964f911ae5c7a563da9fccc4b5375c6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 5 00:36:09 2011 -0400

    Use "unlimited select" on OSX so that we can have more than FD_SETSIZE fds

commit 71349d080b4aa0138ff6c0e5f9fb1135b9c7f135
Merge: 78fb99ce 49d11362
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 5 00:35:35 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 49d11362051bcbd3ffe2165ca98a21eeab3672bc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 5 00:11:59 2011 -0400

    Fix select.c compilation on systems with no NFDBITS

commit 78fb99ceb265d5969e06f55b9b9f78d1593ebb7b
Merge: c3d36285 e7fe9270
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 4 12:22:54 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit e7fe92709e7f83e5189cbcf485ec3a040f0710b5
Merge: f87f5689 cb6ecee7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 4 12:16:08 2011 -0400

    Merge remote-tracking branch 'github/20_global_locks_init' into patches-2.0

commit c3d362858caf2a2162fa8ca8360f9cc39ae49628
Merge: c116d960 f87f5689
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 4 11:48:41 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit f87f56894dddaadac9e285c0452bf16b3875091b
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Mon Jul 4 11:47:24 2011 -0400

    Speed up invoke_callbacks on evbuffers when there are no callbacks
    
    This fixes a performance regression against 1.4

commit c116d960b710fce90638c783641f10de3753d606
Merge: 2bbed8fe e050703d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 4 11:37:52 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit e050703d474b2d73abebb4b133f9fc504fadd9a8
Author: Joachim Bauch <jojo@struktur.de>
Date:   Mon Jul 4 11:36:14 2011 -0400

    Fix bug in SSL bufferevents backed by a bev with a write high-watermarks
    
    Original mail:
    
       the logic that handles write watermarks in "bio_bufferevent_write"
       is not working. It currently doesn't write any data if the high
       watermark is *above* the amount of data to write (i.e. when there
       is actually enough room available).

commit 2bbed8fe2ac99069817dc2d76c7762b474c41089
Merge: 722207ff 8ee9f9c1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jul 2 21:50:49 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 8ee9f9c1cf3d2b7e3c17e9fedb9d740361bf8a69
Author: Nicholas Marriott <nicholas.marriott@gmail.com>
Date:   Sat Jul 2 21:49:07 2011 -0400

    Fix a few warnings on OpenBSD
    
    - redeclaration of dst_size
    
    - arpa/inet.h requires netinet/in.h first
    
    - don't use a local with the same name as a global - it isn't needed so
      remove it

commit e934096490f6909cf22c8fbe34fe6ad41e5083af
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jun 22 11:22:35 2011 -0400

    Fix AIX build issue with TAILQ_FOREACH definition
    
    Reported by Lawnstein Chan.

commit 722207ff9e8b4ff06b2b3cc166294ca2e2340e50
Merge: 89def539 e23cda3d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jun 21 10:07:04 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit e23cda3daee1146ca5efb9eb6e7e0932911b0c99
Author: Harlan Stenn <stenn@ntp.org>
Date:   Tue Jun 21 10:05:28 2011 -0400

    Don't install event_rpcgen.py when --disable-libevent-install is used

commit e3e97ae31bef9d17cb85552169ea7a99fedc12ef
Author: Nir Soffer <nirsof@gmail.com>
Date:   Tue Jun 14 01:58:30 2011 +0300

    Set the special "not found" evbuffer_ptr consistantly.
    
    The _internal.pos_in_chain field was uninitialized or set to different
    values in different places returning the special "not found" pointer.
    
    Signed-off-by: Nir Soffer <nirsof@gmail.com>

commit 89def5391e3c817f06a7685a0a07cbd33156c108
Merge: 33124033 79ff78d2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 16 13:28:40 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 79ff78d2e7d48ca32df5f0dee10ec932d2812108
Merge: b031adf1 1fd34ab4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 16 13:19:43 2011 -0400

    Merge branch '20_kqueue_badf' into patches-2.0

commit 33124033fd650a603d64e91151c8faa96adc3f98
Merge: e9d095d4 b031adf1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jun 14 15:15:43 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit b031adf112e058595c04d44565c069d15f7ab257
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jun 14 14:37:49 2011 -0400

    Don't break when building tests from git without python installed

commit 261ba63dbaefc00a8bf58c9f61acfa92a208a5fc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 13 17:07:29 2011 -0400

    Improve evbuffer_ptr documentation

commit 9ab8ab83cd87d3733674e8b483d823eab3ff531b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 13 16:47:43 2011 -0400

    Tweaks to return types with end-of-buf ptrs

commit 7aeb2fd4ca222ac84a8f86bf9739a4cfde6f6c4a
Author: Nir Soffer <nirsof@gmail.com>
Date:   Mon Jun 13 16:35:28 2011 -0400

    Allow evbuffer_ptr to point to position 0 in an empty evbuffer

commit e6fe1da9ad770ac903bcee3343514041df292c5b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 6 21:03:35 2011 -0400

    Allow evbuffer_ptr_set to yield a point just after the end of the buffer.

commit 8e2615421d8d626f08022d92269fd65632b4ec41
Author: Nir Soffer <nirsof@gmail.com>
Date:   Tue Jun 7 03:15:51 2011 +0300

    Add failing test for evbuffer_search_range.

commit e9d095d4fcd120c1dd8192c4244eba9d6c384da5
Merge: 4df9b433 812d42e8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jun 11 01:41:19 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            test/tinytest.c

commit 812d42e8863a7b9ccba8b03c5a7e32b31a1e4155
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jun 11 01:26:54 2011 -0400

    Simplify windows commandname logic in tinytest
    
    Instead of using a dup'd pointer, let's use a static array, so we
    don't need to free it.  This patch also makes tinytest build on
    non-windows again.

commit 57def3460af9cd3992626d6a39f4e5b93a7d3fc0
Author: Ed Day <edday2000@gmail.com>
Date:   Sat Jun 11 00:49:24 2011 -0400

    Fix tinytest invocation from windows shell
    
    Original post:
    
      This post is in response to a posting last December on a Windows
      regression fork failure ([Libevent-users] Re: Libevent 2.0.10-stable
      is released by Dongsheng Song).  I noticed the question was not
      answered and I recently experienced the same error myself when
      trying to run the Windows regression tests myself.
    
      I checked the return status from the CreateProcess call and found it
      was "file not found".  This led me to look at the command-line I was
      using which was .\regress in a Visual Studio 2008 command prompt
      window.  Windows could not find the file because it did not have the
      .exe extension on the end.  The code that builds the command should
      be modified to ensure the extension is present.

commit 4df9b433054b4707aba0e9e285dadb4f05205f8c
Merge: 5099d858 446cc7a0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jun 8 17:38:17 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 3203f88c5f1fb13b2b3988ff0d1d802d70a143d9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jun 8 17:18:03 2011 -0400

    Use the correct printf args when formatting size_t
    
    Based on a patch from Mansour Moufid

commit 446cc7a0a1160f9214bef3b2d5140c2ddca9cee0
Author: Mansour Moufid <mansourmoufid@gmail.com>
Date:   Fri May 27 18:40:31 2011 -0400

    Check if the `evhttp_new_object' function in `http.c' returns NULL.

commit 1fd34ab424b45f48dfeece108910978c79a8b7f6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jun 8 14:56:19 2011 -0400

    Report kqueue ebadf, epipe, and eperm as EV_READ events
    
    When asked to add one side of a pipe, and the other side has been
    closed, kqueue on NetBSD will say EBADF; kqueue on FreeBSD will say
    EPIPE, and kqueue on OpenBSD will say EPERM.  So treat all of these
    as EV_READ events, to give the user an opportunity to notice that
    the pipe is closed.
    
    Diagnosed by Nicholas Marriott and Dale Rahn; based on a patch by
    Nicholas Marriott.

commit 5099d858b1906bad04c531a7c98e2d0877d5e7f8
Merge: d19a3260 09fe97da
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jun 8 14:29:36 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 09fe97da3b0dcdb6ee172ff8e4f710e0baad2d1c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jun 8 14:24:45 2011 -0400

    Replace an assertion for event_base_free(NULL) with a check-and-warn
    
    event_base_free(NULL) means "free the current event base".
    Previously, it would assert if there was no 'current' base.  Now it
    just warns and returns.
    
    Reported by Gilad Benjamini

commit 89d5e09e4d3a4666bf5eba7d6807e183e861a70a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jun 8 14:18:41 2011 -0400

    Add some missing checks for mm_calloc failures
    
    Found by Gilad Benjamini

commit d19a3260875a85206752a2aa8eaabeefb7e854d7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jun 8 13:32:47 2011 -0400

    Remove a needless branch in evbuffer_drain()
    
    Found by Gilad Benjamini; see June 2011 thread "Dead or wrong code".

commit d927965f22d4a5d31a86f208bba67cf21e6101b5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 6 15:33:27 2011 -0400

    Fix a bug in the improved EOL_CRLF code
    
    When searching for a CRLF, it would find an LF, then look for a
    preceding CR if not at the start of the buffer.  That's fine when
    we're starting from the beginning of the buffer, but if we're starting
    at (say) byte 100, and we have that byte == LF, we shouldn't check for
    a CR at byte 99.

commit 264c7b96006b46a38d5389cd168590a2394a7f85
Merge: e40bafe7 4461f1a0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 6 15:26:37 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 4461f1a096621db8b24edafac409e0f05072d35a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 6 15:11:28 2011 -0400

    Fix incorrect results from evbuffer_search_eol(EOL_LF)
    
    Our evbuffer_strchr() function [which was only used for
    search_eol(EOL_LF) could give incorrect results if it found its answer
    in the first chunk but didn't start searching from the front of the
    chunk.
    
    Also, this patch adds unit tests for evbuffer_search_eol, particularly
    in those cases that evbuffer_readln() tests didn't exercise.

commit e40bafe796a8e544e9e54e247cb3aa30c95e06b0
Merge: 8254de76 60c1426f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jun 4 21:40:55 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            Makefile.am
            WIN32-Code/event2/event-config.h
            configure.in
            test/regress_ssl.c

commit 60c1426f2c16ffe1e4e14b4779e335d824f64aee
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jun 4 21:36:34 2011 -0400

    Bump version to 2.0.12-stable-dev

commit 281ab5c5f3c7eb500d8eacbe8b9053b8044d823c
Merge: be5e8575 452a8342
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jun 4 21:12:53 2011 -0400

    Merge branch 'patches-2.0' of ssh://levent.git.sourceforge.net/gitroot/levent/libevent into patches-2.0

commit 452a8342f5b615c9ba5a08a3a30fc719a30ad253
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jun 4 21:11:09 2011 -0400

    tweak date on changelog

commit be5e857584418720cd9aaa3a7638a7e3db559823
Merge: 27ce38b6 c3555837
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jun 4 10:34:14 2011 -0400

    Merge branch 'patches-2.0' of ssh://levent.git.sourceforge.net/gitroot/levent/libevent into patches-2.0

commit c355583750fb88e72069040234c94529ce872c7c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jun 3 17:08:30 2011 -0400

    Changelog and new credits for 2.0.12-stable

commit 7283facdb9741cfd7ab5df3574d9afa619258501
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jun 3 17:08:14 2011 -0400

    Bump version to 2.0.12-stable.  Not release just yet

commit bdfb8330dfcf865fbfe82184cf0db85304c943b2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jun 3 17:06:17 2011 -0400

    Fix regress_ssl.c build on openbsd

commit 8254de765d80a750898de67e61dcc627dceaf80f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 2 17:07:40 2011 -0400

    Fix windows file segment mappings
    
    Instead of mapping enough bytes for each segment, we were failing to
    take into account the slop created by rounding the segment position
    down to the nearest page.
    
    Should fix bug 3142394 found by Sebastian Hahn.

commit 27ce38b618025682465e369fd19699ae849d8cd2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jun 1 17:27:28 2011 -0400

    Avoid a segfault when all methods are disabled or broken

commit 7b9d13957ff3c2e85e2964b467bcf08d118495a8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jun 1 14:19:13 2011 -0400

    Try to squeeze a little more speed out of EVBUFFER_EOL_CRLF

commit 25fe382981ef419186b3e09178d4aea7ee5e8753
Merge: 36f745df d70dd220
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jun 1 14:02:56 2011 -0400

    Merge remote-tracking branch 'github/master'

commit d70dd2200971e5c1ae39d247858861596e10c5bc
Merge: 5926d601 5dde0f04
Author: Nick Mathewson <nickm@freehaven.net>
Date:   Wed Jun 1 11:02:48 2011 -0700

    Merge pull request #17 from minaguib/master
    
    Improve speed of EVBUFFER_EOL_CRLF

commit 36f745df225e5d110365a360aa7bfe63e66a1ce3
Merge: 5926d601 d54d3fc4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jun 1 13:52:27 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit d54d3fc40dd3cdaf832a2d7f248a07f0f10d57a0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jun 1 13:48:02 2011 -0400

    cygwin: make it possible to build DLLs
    
    Patch from Brian Koehmstedt

commit 5dde0f042430b44623b1ea8af8153ccf1d22b5fc
Author: Mina Naguib <mina.git@naguib.ca>
Date:   Tue May 31 13:56:56 2011 -0400

    Roughly 20% speed increase when line-draining a buffer using EVBUFFER_EOL_CRLF

commit 5926d601bb5b21ac64ecea235322c571d51bafa2
Merge: 0dca19bb e903db33
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 30 12:10:26 2011 -0400

    Merge branch '21_evport_improved'

commit 0dca19bb8e272f92c058edc4b8af5ee29ad33502
Merge: 257651a4 87c0dff6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 30 12:09:18 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 87c0dff6aa31e77c048c89bed36e4edccb41cff2
Merge: f47c15e7 d90149d4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 30 12:06:36 2011 -0400

    Merge branch '20_select_nfds' into patches-2.0

commit d90149d4b6fb9273aa363e5a18223250e8721034
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 30 11:53:19 2011 -0400

    Fix a fencepost bug in the select backend
    
    This bug would sometimes lead us to looking one bit off the end of
    the fdset arrays, and trying to activate a (nonexistent) event if
    that bit was set.
    
    Found by Harlann Stenn.  Fixes a test failure on OpenSolaris.

commit 257651a48c050ca276e4de1aad656d74f7deb348
Merge: 942e2268 f47c15e7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 27 23:33:40 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit f47c15e7bac217f0b0282a6e535f03f26e1e9d9d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 27 23:28:17 2011 -0400

    Make the new http_connect_fail_test use a multicast addr, not broadcast
    
    Turns out that FreeBSD does _not_ give a ENETUNREACH error when
    told to make a TCP socket to 255.255.255.255, but it is quite happy
    to do so for 239.10.20.30.  So that's what we'll do.
    
    Found by Robert Ransom and Dave Hart.

commit 942e22681f836562b3a7ab58e72d7e50b20670da
Merge: 94b8e676 816115a1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 27 23:19:11 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            evthread_win32.c
            listener.c

commit 816115a17ef5ce6148cf45389ddf8e8a327f206b
Author: Peter Rosin <peda@lysator.liu.se>
Date:   Thu May 26 10:10:57 2011 +0200

    InitializeCriticalSectionAndSpinCount requires _WIN32_WINNT >= 0x0403.

commit 94b8e676f312bde5b63cf31a613a78ffcfac2c43
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 27 22:54:16 2011 -0400

    Allow base-notification functions to exist without setting an fd
    
    The kqueue and evport backends can make good use of this.

commit e903db33620baa0bc34e4c819a35a3374936f90d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 27 15:31:40 2011 -0400

    Reenable main/many_events_slow_add for evport in 2.1
    
    The various evport fixes should let it actually work again

commit c04d927637141a38cfcc648fe51b403ae6202273
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 27 14:41:24 2011 -0400

    evport: Remove artificial low limit on max events per getn call
    
    Previously, evport could only handle up to 8 events per time through
    the loop.  This would impose an artificially high number of syscalls
    on us to retrieve a large number of events.
    
    This code allows the EVLOOP_* flags to work more similarly to how
    they do on other platforms (up to 4096 events per syscall).  Dispite
    dire warning (from 2006), doing this won't impose a big incremental
    RAM penalty: if you have 4096 events firing at once, you necessarily
    have a proportional number of events pending, and their associated
    data structures are already costing a good bit of RAM.
    
    This patch makes the main/many_events_slow_add test pass again.

commit 849a5cffa842a1fd7727f1fc35a793366f540d88
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 27 14:28:39 2011 -0400

    evport: don't scan more events in ed_pending than needed

commit 276ec0ef42fbef76ca59ea5080503fba07ea8056
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 27 14:22:50 2011 -0400

    evport: Use portev_user to remember fdinfo struct

commit 0f77efef8be1591e64f23c9652d3113fface1f6b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 27 14:15:32 2011 -0400

    evport: Remove a linear search over recent events when reactivating them

commit 4687ce4f805e3e4baa6d96473d5cf2edb9dc7b46
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 27 13:44:41 2011 -0400

    evport: use evmap_io to track fdinfo status. Should save time and RAM.

commit 356720a23bfa9b8d5418c07485e0a7cb66487fc6
Merge: 29e5f7ea 203ba274
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 27 15:09:54 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 203ba2742f2750fd27967b902ba403b6331e40a5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 27 15:08:25 2011 -0400

    Fix a couple of signed/unsigned warnings in http.c

commit c11c6fcd82c97f528f530177071171f012ca3c97
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 27 14:57:55 2011 -0400

    Disable main/many_events_slow_add with evport backend
    
    In 2.0 and earlier, evport only reports up to 8 events at a time, which
    confuses this test badly.

commit 29e5f7ea1bcc05b8505860ae5f6c6c0e4ac2563a
Merge: 95f70166 dbb3c652
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 26 17:45:54 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit dbb3c65288e219ce3f05efc3fb6c84ff96cf24a9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 26 17:43:17 2011 -0400

    Fix compilation.

commit f0c9b51cc7155a465b5cc73988d3ee32f8b188fb
Merge: d1b2d11b 1814ae96
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 26 17:34:15 2011 -0400

    Merge branch 'intcmp_overflow_fixes' into patches-2.0

commit 1814ae967705202b76ddf81bc6a43a1ae67df3be
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Wed May 25 18:52:07 2011 -0400

    updated EV_S(s)IZE definitions

commit 84560fc4dcf1f58f46a7c962ea31946424c4fea9
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Wed May 25 14:31:09 2011 -0400

    Added overflow checks in evhttp_read_body and evhttp_get_body

commit a27927229f8e66a9f8e0d0b6888d71ed10d99e18
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Wed May 25 12:58:59 2011 -0400

    Added several checks for under/overflow conditions in evhttp_handle_chunked_read

commit 95f70166df3bc9c0817ef98aa3711564300d5bb3
Merge: d41f3ea2 d1b2d11b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 25 21:20:31 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit d1b2d11bb58852d8b62e9b2ced315a4cb298fd56
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Thu May 26 02:05:54 2011 +0200

    Always use evutil_snprintf, even if OS provides it
    
    In test/tinytest_local.h we can't redefine snprintf if the OS has it
    defined already.

commit d41f3ea24edeb01435baa3060afb512c0d9e1405
Author: Peter Rosin <peda@lysator.liu.se>
Date:   Wed May 25 19:54:44 2011 -0400

    Do not define WIN32 in Makefile.nmake

commit 85078b1fafa7e7387696d0edd7ef431dbb08add8
Author: Peter Rosin <peda@lysator.liu.se>
Date:   Wed May 25 19:54:33 2011 -0400

    In configure, test for _WIN32 not WIN32.

commit 9f560bfa114b8216af2dac28966eae53c0c97ed3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 25 19:50:56 2011 -0400

    Use "_WIN32", not WIN32: it's standard and we don't need to fake it
    
    This patch was automatically generated with perl.
    
    Based on a patch by Peter Rosin.

commit 0e95950e605d24cff370d07db1a4fc40d15c31e3
Merge: 9155b095 0de87fe6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 25 19:46:14 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 0de87fe69c0e1e8499c083a2a02f8d547a0d11db
Author: Peter Rosin <peda@lysator.liu.se>
Date:   Wed May 25 15:11:01 2011 +0200

    Use evutil_gettimeofday instead of relying on the system gettimeofday.

commit 3d768dc96761e283750e0f0550172d181b04fe31
Author: Peter Rosin <peda@lysator.liu.se>
Date:   Wed May 25 11:04:43 2011 +0200

    Fix winsock2.h #include issues with MSVC
    
    Define WIN32_LEAN_AND_MEAN, so that windows.h does not bring in
    winsock.h which in turn makes it impossible to #include <winsock2.h>
    (at least with MSVC)

commit 8fa030c032d63871b4434333c1d1e1ff98a81052
Author: Peter Rosin <peda@lysator.liu.se>
Date:   Thu May 26 00:03:38 2011 +0200

    Make sure TINYTEST_LOCAL is defined when building tinytest.c

commit fe93022a6694ab8d69c96043c10817e23084a318
Author: Peter Rosin <peda@lysator.liu.se>
Date:   Wed May 25 10:58:48 2011 +0200

    unistd.h and sys/time.h might not exist.

commit 70be7d17e4467e61eb343ad7eb242afc3a463c66
Author: Peter Rosin <peda@lysator.liu.se>
Date:   Wed May 25 10:57:16 2011 +0200

    MSVC does not provide S_ISDIR, so provide it manually.

commit f3c7a4c165066bafed3da149f5bf2aecee43cd47
Author: Peter Rosin <peda@lysator.liu.se>
Date:   Wed May 25 10:56:32 2011 +0200

    Bring in the compile script from automake, if needed.

commit 07c41bead2097de223def8b6975f08a2f65e908c
Author: Peter Rosin <peda@lysator.liu.se>
Date:   Wed May 25 10:55:41 2011 +0200

    Make the tests build when OpenSSL is not available.
    
    Don't #define HAVE_OPENSSL (to zero) when OpenSSL is not available.
    Code written as #ifdef HAVE_OPENSSL do not expect that.

commit 86090ee198ce45e857c6367d7ec71cca7a953159
Author: Peter Rosin <peda@lysator.liu.se>
Date:   Wed May 25 10:54:06 2011 +0200

    Link with -lshell32 and -ladvapi32 on Win32.
    
    SHGetSpecialFolderPath is in Shell32.dll and the RegOpenKey (et al) and
    CryptGenRandom (et al) functions are in -ladvapi32.dll. MinGW is "nice"
    and brings those in automatically, but specify them explicitly for
    other tool chains.

commit 9155b0953467320b7b0c7dba7af98447c1d7d5e8
Merge: 173509d9 06a714ff
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 25 16:52:50 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 06a714ffe4a58866a33ff3e139e2cb298835b9c5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 25 16:51:25 2011 -0400

    Fix new warnings from GCC 4.6

commit 173509d9b679fe536149682e3065485a194d9edb
Merge: a9fe47f0 06c51cdf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 23 18:25:05 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 06c51cdf9302967be1547a00fa449d9889ab4666
Author: Mansour Moufid <mansourmoufid@gmail.com>
Date:   Mon May 23 18:01:24 2011 -0400

    Prevent size_t overflow in evhttp_htmlescape.
    
    Modified the `html_replace' function so that it returns the length of
    the replacement string instead of the string itself. This is used to
    easily check for overflows of the `new_size' variable in the first for
    loop of the `evhttp_htmlescape' function, and thus potential out of
    bounds writes in the second for loop (if an overflow occurs in
    new_size, then new_size < old_size). Also check that new_size + 1
    doesn't overflow in mm_malloc(new_size + 1).
    
    Removed the `scratch_space' variable from the `evhttp_htmlescape'
    function since it wasn't actually used; also removed the `buf'
    variable from the `evhttp_htmlescape' function since it was only used
    by `scratch_space'.

commit a9fe47f076f4b521533c5ae31bcd49c2d4cc6f29
Merge: 3ec46c0c 74760f18
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 23 17:50:45 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 74760f1864b5a25a68d43b1bf22cc4a31d94866f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 23 17:45:14 2011 -0400

    Fix a bug that prevented us from configuring IPv6 nameservers.

commit 3ec46c0c3451ba05b4c3391797d00ff33cd19ac9
Merge: 63d37bdd 57ddda78
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 23 01:44:05 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 57ddda7845d36fce2ebe7131f6b7e98e85a576f5
Author: Kevin Ko <kevin.s.ko@gmail.com>
Date:   Mon May 23 01:40:05 2011 -0400

    Test case for 0848814ac49616
    
     "I'm not sure if you'll like my use of the limited broadcast address
      for simulating an ENETUNREACH error with a TCP connection, but it's
      the best that I could think of.  Basically, we want to trigger a
      non-EINPROGRESS error in evutil_socket_connect() immediately at the
      connect() in order to bring about the assertion in the
      evhttp_connection_fail() error handling code."

commit 63d37bdd3eae4bec18a088ff09d06a6cd5f15da7
Merge: af5f1860 0848814a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 20 23:24:43 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 0848814ac496167133bec5f8d564387b5111440f
Author: Kevin Ko <kevin.s.ko@gmail.com>
Date:   Fri May 20 23:23:44 2011 -0400

    Fix failing assertion introducd in commit 0d6622e
    
    Patch in question:
     - Fix the case when failed evhttp_make_request() leaved request in the queue.
     - http://levent.git.sourceforge.net/git/gitweb.cgi?p=levent/libevent;a=commit;h=0d6622e
    
    The above patch introduces a failing assertion in
    evhttp_connection_fail().  This happens because the patch defers the
    assignment of the outstanding request to the evcon->requests list,
    while evhttp_connection_fail() assumes that the request lies in the
    list.
    
    One scenario in which this can happen is when the request list is
    empty and a connection is made to an unreachable host.  The assertion
    will then fail after bufferevent_socket_connect() errors out (with
    ENETUNREACH in my case).

commit af5f186038b72967a9778ea171fead950101a6b7
Merge: cbab7dad aee1a97d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 20 23:08:25 2011 -0400

    Merge remote-tracking branch 'ellzey/feature/evhttp_parse_speedup'

commit cbab7dad728b425ed5cfcb7e0d61ac77ef523d3b
Merge: 6b23518d 09d39a12
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 20 14:21:55 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 09d39a120dd7e4b007ef4c607a6fd0ab431e659f
Author: Dave Hart <hart@ntp.org>
Date:   Fri May 20 14:18:08 2011 -0400

    Fix compilation with GCC 2, which had no __builtin_expect

commit 6b23518d850a499db5e16c275445b0243f38379d
Merge: 7889c43e 5786b91e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 6 11:06:11 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 5786b91e2e779a9cab7292493b11ed82e057d18e
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Thu May 5 18:02:42 2011 +0200

    Fix a compile warning with zlib 1.2.4 and 1.2.5
    
    I took this fix from Tor (commit 1a52e39c22d5, author Nick Mathewson,
    Copyright (c) 2007-2011, The Tor Project, Inc.) and adapted it slightly
    for libevent.

commit 66193853fd98d6280ab25ddfab38876d6a759046
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Thu May 5 16:27:55 2011 +0200

    Correctly detect openssl on windows

commit aee1a97da429ca01923123b306469ffc42e828f0
Author: Mark Ellzey <mark.thomas@mandiant.com>
Date:   Fri May 6 08:48:54 2011 -0400

    Performance tweak to evhttp_parse_request_line.
    
    Method parsing has been tweaked out to use a lookup table instead of multiple
    branching. In our testing it has increased performance by a fair bit.

commit ceb03b90c487c5b1633ef93e2272c7cb71ff783a
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Thu May 5 15:51:11 2011 +0200

    Move the win32 detection in configure.in

commit 292092eb29ba6e98bde2839e0cfab2f03f9bd7a2
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Thu May 5 15:49:38 2011 +0200

    Use OPENSSL_LIBS in Makefile.am

commit 7889c43ef8d719942decaa314a4d335e37911b4a
Merge: 96107974 7b819f2d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 4 16:23:02 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 7b819f2d97fae57da07f00fd53fa82b02d39fe59
Author: Peter Rosin <peda@lysator.liu.se>
Date:   Wed May 4 16:37:58 2011 +0200

    Libtool brings in the dependencies of libevent_openssl.la automatically

commit 274dd0369afa57448369ee4f85fb7e24883f5172
Author: Peter Rosin <peda@lysator.liu.se>
Date:   Wed May 4 16:34:28 2011 +0200

    libssl depends on libcrypto, not the other way around.

commit 96107974710aea800b7f0bd6cc14c13fec077c08
Merge: 22d50db8 d11e9e0f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 3 14:29:44 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit d11e9e0f71072ab9e51de47ee805697782ae84ac
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 3 14:22:48 2011 -0400

    Oops; that new unit test breaks for epoll.  Fix it.

commit 28317a087e58dceff85a448c22bbbafebed0b6ab
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 3 13:54:57 2011 -0400

    Fix a warn-and-fail bug in kqueue by providing kevent() room to report errors
    
    Apparently, kevent fails gracefully if there is not enough space in its
    output events array to report every _event_... but it just dies and returns
    -1 if there is not enough space to report every _error_.
    
    There are a couple of possible fixes here.  One would to handle -1
    returns from kevent better by re-growing the array and retrying... but
    that seems a little error prone.  Instead, I'm just going to say that
    the events array must be large enough to handle all the errors.
    
    This patch also adds a unit test designed to make sure that our
    many-events-out code works even if not all the events are added at
    once.

commit 22d50db805279d32f74bf9bb28ea44d112c4659d
Merge: 1cae2260 9556a7d1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 2 23:22:34 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 9556a7d1f647f61634fb782ae7ba814e5a20535e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 2 23:22:09 2011 -0400

    Add missing words to EVLOOP_NONBLOCK documentation

commit 1cae22605dbd4c5780930f988339934fb7b4c412
Merge: fc9bc656 e7529fa4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 27 21:28:32 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit e7529fa45bc2094e2853e91f1ead1156ca900002
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 27 21:28:11 2011 -0400

    Bump version to 2.0.11-stable-dev

commit fc9bc6566932fb54e26d680fbca467a7f5c01602
Merge: aaa80ed4 d4d55196
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 27 20:26:38 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit d4d55196bd27ea6aee7f80098f3400d461d58b14
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 27 20:25:57 2011 -0400

    Increment version number to 2.0.11-stable

commit aaa80ed4914c783e6b76f74e0de6f6bee48d2263
Merge: 6c2ef970 8255fda7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 27 20:17:34 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 8255fda708d600e68391ff007bddeef65140bbf5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 27 20:15:20 2011 -0400

    Add more people to the acknowledgments

commit 6c2ef970c31de29d2283be69cb972d7c5fdc092b
Merge: 614b9bd1 d30466fc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 27 20:07:13 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit d30466fc260eacbc6d518e65a559cae674b08399
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 27 20:03:46 2011 -0400

    Changelog for 2.0.11-stable

commit 614b9bd1f30557653bd41a8874e649b828d9553a
Merge: cea45590 e49e64e7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 26 23:48:31 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit e49e64e7745c0ef4ffeac9a379cfa26d422fdb6e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 26 23:42:01 2011 -0400

    Fix clang warning when resetting connection
    
    This was a regression on 2.0.10-stable: clang was warning about
    values that were unused (because event_debug wasn't using them unless
    USE_DEBUG was defined).  Found by Sebastian Hahn.

commit cea45590e25ff0e8a07d339b5483869442dffb25
Merge: 18f24ef4 ea0d019b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 24 22:56:16 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit ea0d019b7161e0f990b6a6c1e537b0a1b6d08afa
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Apr 23 02:35:17 2011 -0400

    Use AM_CONDITIONAL, not AC_SUBST, to tell automake to build regress
    
    For some reason, this makes mingw much happier about building
    regress.exe by default.  No, I'm afraid I don't know why.

commit 18f24ef4d5233087ecf0500c0733f33e0296eb7d
Merge: 614a1712 7739c86d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Apr 23 02:31:59 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 7739c86da0e5a659c5dce4bead736e184be5ae9b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Apr 23 02:31:04 2011 -0400

    Fix msvc build: it needed to know about _EVENT_HAVE_STRUCT_SOCKADDR_STORAGE

commit 53d1e450f4a5ed21c4eec216392524ff2ab7a7a7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Apr 23 01:48:11 2011 -0400

    Try to fix up CHECK_REGRESS hack to not break on win32

commit dd68cce439ae01d906e46b0f361f3ef625d5abec
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Apr 23 01:47:43 2011 -0400

    Add missing header for regress_http compilation on win32

commit 99f147d9f668dc70866c694b9c140021a00eaf2d
Merge: 646f9feb 52f9baee
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Apr 23 01:47:11 2011 -0400

    Merge branch '20_iocp_conn_sockopt' into patches-2.0

commit 52f9baeee2afd77d852d6e8d63ed8414d0f28f74
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 22 10:54:02 2011 -0400

    call setsockopt correctly on connecting() IOCP-bufferevents so shutdown() will work

commit 614a1712b77b6cb5b9e56cbc8a53077b6f66b8cc
Merge: 34631be0 646f9feb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 22 23:46:25 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'
    
    Conflicts:
            evthread.c

commit 646f9feb261d7e45b75dc2fcf65b9e719dd5f829
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Sat Apr 23 02:22:08 2011 +0200

    Zero a struct sockaddr_in before using it
    
    Found by Dave Heart

commit 744c7456c7f31529d4b9eeb86f2b6551a0a38346
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Sat Apr 23 02:20:59 2011 +0200

    Remote some dead code from dns-example.c
    
    Found by Dave Heart

commit 93a1abb374851c908b9999c217b5fc6bb1af88c8
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Mon Apr 11 18:26:48 2011 +0200

    Check return value of evbuffer_add_cb in tests
    
    Caught by clang's static analyzer

commit 4bac793e3e7238543883c4026600515244469af7
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Mon Apr 11 18:03:02 2011 +0200

    Be nice and "handle" error return values in sample code
    
    Caught by clang's static analyzer

commit 48c44a6ddaf995ddbb8cc93d07beedf113f5cbac
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Mon Apr 11 17:48:23 2011 +0200

    Refactor test_getaddrinfo_async_cancel_stress()
    
    Turns out it didn't need an event base set up.
    
    Spotted by clang's static anaylzer

commit 65707d7c3cd71e11ed58c18f5840847e44f5ec69
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Mon Apr 11 17:40:14 2011 +0200

    add some (void) casts for unused variables
    
    All these places already have an XXX marker, so we know we need to fix
    them later. Let's not clutter the static analysis results with them.

commit b693c324cac8efe637dc344ece6bac83ac55c199
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Mon Apr 11 17:32:03 2011 +0200

    Actually send NULL request in http_bad_request_test
    
    Issue caught by clang's static analyzer

commit 3819b62ceaf3f7ba3913f174233efb73a6b74346
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Mon Apr 11 17:23:08 2011 +0200

    Add a forgotten return value check in the unit tests
    
    Spotted by clang's static analyzer

commit b0ff7eb5ce55679cf6b47088078563bf37fef1c9
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Sun Apr 10 14:03:39 2011 +0200

    Add an assert to appease clang's static analyzer
    
    It got confused because in EVLOCK_ASSERT_LOCKED(lock) there is an if
    (lock) check.

commit 5208544edc9d17f9902429f837d277125d3d3ca4
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Mon Mar 14 04:24:33 2011 +0100

    Fix possible NULL-deref in evdns_cancel_request
    
    The clang static analyzer complained that base might be dereferenced
    without being set, but this patch should fix another dereference issue.

commit 12311ff46e72d3a3ffe9625ccba42a2f15ff0827
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Mon Mar 14 04:13:55 2011 +0100

    Add a forgotten NULL check to evhttp_parse_headers
    
    Issue detected by the clang static analyzer

commit ad9ff5834a3cb2ee485353ab03d6c509e2200f17
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Sun Apr 10 17:23:11 2011 +0200

    Fix compilation under LLVM/clang with --enable-gcc-warnings
    
    When compiling using clang (2.9 or lower) do not enable
    -Wnormalized=id or -Woverride-init when --enable-gcc-warnings
    or --enable-gcc-warnings-advisory is set as these options
    are unsupported.
    
    This commit is based on a patch for Tor
    (git commit 56bdc844ba68ac0911efc7ad3398f1eafeaaac76 by Steven
    Murdoch), Copyright (c) 2007-2011, The Tor Project, Inc.

commit cb6ecee7f6199777c10815ac15aad4d808e7375f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 22 12:40:07 2011 -0400

    Complain if the caller tries to change threading cbs after setting them
    
    We never supported this; it was always fraught with errors; and I
    don't believe there is a good reason to _want_ it to work.

commit b683cae3cb98b48c4dc5caa0b1768f7bb13b92f1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 22 12:01:25 2011 -0400

    Avoid race-condition when initializing global locks
    
    Previously, we did stuff like
       if (!lock)
          EVTHREAD_ALLOC_LOCK(lock,0);
    for the evsig base global lock, the arc4random lock, and the debug_map
    lock.  But that's potentially racy!  Instead, we move the
    responisiblity for global lock initialization to the functions where
    we set up the lock callbacks.
    
    (Rationale: We already require that you set up the locking callbacks
    before you create any event_base, and that you do so exatly once.)

commit 34631be00c3d2d0e831708cc0e1f08dc92583961
Merge: 169eca7b b4f89f00
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 21 17:36:30 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit b4f89f00c607689d867a83d9d52535f371c5d750
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 21 17:33:13 2011 -0400

    Fix a memory leak on win32 socket->event map.
    
    This would lose some memory every time an event_base was freed on win32.
    
    Found by Dimitre Piskyulev.

commit 364291e9a9a4abe5c7612f587b82a601e07af942
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 21 17:11:41 2011 -0400

    Handle calloc failure in evdns. (Found by Dave Hart)

commit 169eca7b58c0031c795b4f443fcccb3cdaac5b98
Merge: d28fc528 dde3b739
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 21 13:38:29 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit dde3b7396358392f897aa2215384c839310e8242
Merge: 2e9f6655 00e91b3c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 21 13:30:22 2011 -0400

    Merge branch '20_evdns_circular_list_patch' into patches-2.0

commit 00e91b3c8de2096ee0a8c6a341c305ecaf801f46
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 20 13:27:31 2011 -0400

    Fix a crash bug in evdns server circular list code
    
    Really, this should use a circleq.  That's a change for 2.1, though.

commit d28fc52815023113840fb9e108ada0126964a799
Merge: bfdda265 2e9f6655
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 14 14:20:09 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 2e9f66554897279f9aae2ce5a3933b99b6e08e38
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 14 14:15:13 2011 -0400

    Fix a couple of memory leaks in samples/http-server.c. Found by Dave Hart.

commit 3417f6808d4c86b02148cde4f7a32b18d8d260b4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 13 11:20:30 2011 -0400

    Avoid a free(NULL) if out-of-memory in evdns_getaddrinfo. Found by Dave Hart

commit bfdda26534ea66b847760720260a4b4d8fcefe58
Merge: d7c0ffa1 1a21d7b8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 5 17:22:36 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 1a21d7b840ea1011d4bef1675ee3c7309d48ab3e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 5 17:21:12 2011 -0400

    Fix the check for multicast or broadcast addresses in evutil_check_interfaces
    
    First of all, it is totally okay to have an address end with .255,
    depending on what your netmask is, so we shouldn't reject a local
    address if it ends with .255.
    
    Second, our check for ending with .255 was broken.  So was our check
    for class-d addresses.
    
    Found by Dave Hart.

commit d7c0ffa1c06cf8aa2b1caf99332f2669d30fcc74
Merge: ddcca176 fc7f34bd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 5 17:19:00 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit fc7f34bd4dac0738a16e4d3732e997c83fd8f88c
Merge: 0d6622e2 637d17a1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 5 17:17:51 2011 -0400

    Merge branch '20_socktype_protocol_nomem' into patches-2.0

commit 637d17a1b975ad33334c64c5ce8d0a19898e5c14
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 5 16:32:39 2011 -0400

    Check for allocation failures in apply_socktype_protocol_hack

commit ddcca1760f7ef0fc9c4abf09a2af8aff6dec702e
Merge: 7a91f732 0d6622e2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 4 15:09:47 2011 -0400

    Merge remote-tracking branch 'origin/patches-2.0'

commit 0d6622e26a83c1efac4a26a5b98e86ca61dc0a7f
Author: Tomash Brechko <tomash.brechko@gmail.com>
Date:   Thu Mar 31 19:11:10 2011 +0400

    Fix the case when failed evhttp_make_request() leaved request in the queue.

commit 218cf19743e3671924ec01edc9dc26be8b6f1ae8
Author: Tomash Brechko <tomash.brechko@gmail.com>
Date:   Thu Mar 24 15:52:34 2011 +0300

    Fix subtle recursion in evhttp_connection_cb_cleanup().

commit 272823f8b0fb3c5f752ea5ff79b9b223b4d1b453
Author: Tomash Brechko <tomash.brechko@gmail.com>
Date:   Wed Mar 23 12:05:33 2011 +0300

    Reset outgoing connection when read data in idle state.
    
    Imagine server side is buggy and miscalculates Content-Length: in the
    reply.  Data arriving in idle state shouldn't make us crash, instead we
    can just reset the connection.

commit 7a91f732beb72af5a7d8c6084e7a59ed5224c189
Merge: 4ab2a89d c6213591
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 23 16:34:58 2011 -0400

    Merge remote branch 'origin/patches-2.0'

commit c621359122c0b86f917407c6c544d51c4b49cd1b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 23 16:32:42 2011 -0400

    Add comment to configure.in to explain gc-sections test logic
    
    (Basically, we need access to conftest.err for the test to work properly.)

commit 6bb23e4bb17701ccc319c76797e4673897db8f77
Author: Dave Hart <hart@ntp.org>
Date:   Wed Mar 23 16:22:57 2011 -0400

    Fix for --gc-sections on NetBSD
    
    This patch fixes http://bugs.ntp.org/1844, works around
    http://gnats.netbsd.org/cgi-bin/query-pr-single.pl?number=40401, by
    improving the test for support of --gc-sections to run a program which
    reads a file using stdio built with --gc-sections, instead of simply
    link the binary.  This catches the buggy linker as the garbage
    collection removes a tag NetBSD uses to distinguish its own elf
    binaries from Linux ones, causing it to treat conftest as a Linux
    binary and run it with the wrong syscall table.

commit b5a1f9f74bd4ffa342e388897de895611d6ea9ca
Author: Dave Hart <hart@ntp.org>
Date:   Wed Mar 23 16:22:24 2011 -0400

    Fix make distcheck & installation of libevent 1 headers
    
    libevent/Makefile.am corrects a typo (thanks to Harlan for spotting it
    once we realized make distcheck was broken when building the libevent
    tearoff).  The result was the include/ev*.h were not distributed nor
    installed whether or not --disable-libevent-install was used.  This
    was introduced with the final round (3/3) of
    --disable-libevent-install patch from me.

commit 4ab2a89dc73202f90a266979fadbb154df7dcd65
Merge: f28084dd 4b8f02f1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Mar 12 12:12:35 2011 -0500

    Merge remote branch 'origin/patches-2.0'

commit 4b8f02f14751c6c2d53cad3597a711a1a008e07f
Author: Christophe Fillot <cf@utc.fr>
Date:   Sat Mar 12 12:08:19 2011 -0500

    Fix incorrect assertions and possible use-after-free in evrpc_free()
    
    Original description:
    
      The following patch fixes incorrect assertions in evrpc_free():
      evrpc_unregister_rpc() and evrpc_remove_hook() return 0 for success.
    
      Also, in evrpc_unregister_rpc(), it is better to free RPC structure
      at the end: evrpc_free() uses rpc->uri as "name" parameter when
      calling evrpc_unregister_rpc(), then rpc->uri is freed, but we have
      "registered_uri = evrpc_construct_uri(name)". So at this time "name"
      is invalid.

commit f28084ddda02886a97943e36099c4a523f72af0b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 7 23:18:07 2011 -0500

    munge the debug_lock signature before freeing it: it might help us catch use-after-free

commit b4a29c0a0fbd25a2de8a16b3049677fb2b8e1645
Author: Dave Hart <hart@ntp.org>
Date:   Mon Mar 7 23:08:42 2011 -0500

    Add a magic number to debug_locks to better catch lock-coding errors.
    
    Original description by Dave Hart:
    
     [This patch contains] the addition of a signature field to debug_lock
     initialized by the alloc routine and verified by the rest, to catch
     invalid lock pointers sooner. That helped me track down a nasty
     problem I had before adding the time.h include to
     libevent-internal.h, where different .c files had different ideas of
     whether event_base had a tod_tv_cache member depending on which
     included time.h before libevent-internal.h.

commit 2a83ecc8496c1470c8a29fad5df1e89a9d1d9864
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 7 23:01:54 2011 -0500

    In the 2.1 branch, let's try out lazy gettimeofday/clock_gettime comparison
    
    For now, we'll only check for gettimeofday jumps once every 5 seconds.
    Let's see how that works.
    
    This reverts commit 5209fadfd07af3f3379ac607582c37933b33e044.

commit 4560b31bdf1ed633518ebbdd0b3e11ffa1272cf5
Merge: c5389594 5209fadf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 7 23:00:45 2011 -0500

    Merge remote branch 'origin/patches-2.0'
    
    Conflicts:
            event-internal.h

commit 5209fadfd07af3f3379ac607582c37933b33e044
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 7 22:59:19 2011 -0500

    Disable lazy gettimeofday/clock_gettime comparison for now

commit 9193dc4ecd12be779654e045a14ab32e1e616ddd
Merge: c8baac90 a459ef70
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 7 22:45:10 2011 -0500

    Merge branch '20_timescale' into patches-2.0

commit c53895944dfefd0f8586d2639d400e0ffe956562
Merge: 74bf57a6 c8baac90
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 7 21:59:47 2011 -0500

    Merge remote branch 'origin/patches-2.0'

commit c8baac90231ab3dc4179b302568c640ab4ae05c8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 7 21:55:47 2011 -0500

    Followup for Tomash Brechko's http patch
    
    This patch makes bufferevent_disable_hard() non-public, and
    adds a comment about what it's for and why it's used.

commit 5dc566284d736cb692f88685a3bcec70595a7689
Author: Tomash Brechko <tomash.brechko@gmail.com>
Date:   Thu Feb 24 12:30:40 2011 +0300

    Workaround libevent bug
    https://sourceforge.net/tracker/index.php?func=detail&aid=3078187&group_id=50884&atid=461324
    
    The problem is that bufferevent_disable() doesn't disable EV_WRITE
    when 'connecting' flag is set.  However from evhttp_connection_reset()
    we want to disable EV_WRITE for sure (we are closing the socket next).
    So we add bufferevent_disable_hard(), which acts like
    bufferevent_disable(), but resets 'connecting' flag before the call to
    the actual handler.
    
    TODO: bufferevent_disable_hard() shouldn't be public, remove it from
    event2/bufferevent.h.

commit a459ef70ec82eaa07680b0a4bc25e5d05efcc6fb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 3 15:34:22 2011 -0500

    Have event_base_gettimeofday_cached() always return wall-clock time
    
    Based on code by Dave Hart

commit 74bf57a63ed5ae48d903b11235803984cefd6962
Merge: 83fb674a ab008c7d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 3 12:58:06 2011 -0500

    Merge remote-tracking branch 'origin/patches-2.0'

commit ab008c7d0588887e88dffd35986005150e5a53e6
Author: Dave Hart <hart@ntp.org>
Date:   Thu Mar 3 12:57:17 2011 -0500

    Make --no-libevent-install apply to event1 headers too

commit 83fb674a75653adae863e1451d2327db58ff8a5f
Merge: 975eacad b5ab9555
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 25 10:42:58 2011 -0500

    Merge remote branch 'origin/patches-2.0'

commit b5ab955531c2008d33e46437ec926f5e0f0df3cd
Author: Dave Hart <hart@ntp.org>
Date:   Fri Feb 25 10:35:12 2011 -0500

    Make --no-libevent-install apply to headers too

commit 975eacad363aea1781f563b55d6a4e9aaf95f456
Merge: e2e3c322 3f79a3a0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 23 11:25:09 2011 -0500

    Merge remote branch 'origin/patches-2.0'

commit 3f79a3a01a4a39fcaf24486f828a2b115b0542c0
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Wed Feb 23 09:19:08 2011 +0100

    Continue AM_CFLAGS to AM_CPPFLAGS correction
    
    9c469db300e1b270a93c6b04c1709ac0f7751136 had started with the conversion
    but left out another instance of incorrectly used AM_CFLAGS.
    
    Dave Hart provided the suggestion for this fix.

commit d1cee3b1c747845b2e076a5d62cbbd1a2e332f34
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 23 01:08:54 2011 -0500

    Make event_count maintainance branchless at the expense of an extra shift. Needs benchmarking

commit efc4dc503a5d6dadfe811fbf72b07f3f7a353a00
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 23 00:59:20 2011 -0500

    possible optimization: split event_queue_insert/remove into separate functions. needs testing

commit e2e3c3223937aaa0fadbe52c95b06ccbe4c421a6
Merge: 6350e6c4 5dc200b7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 22 18:55:05 2011 -0500

    Merge remote branch 'origin/patches-2.0'

commit 5dc200b7c840188288facc7e9803f51d6396697f
Merge: 2fba21d8 95060b54
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 22 18:53:55 2011 -0500

    Merge branch '20_uri_nonconformant' into patches-2.0

commit 6350e6c4c5fab254d67e86e85a5ade70e2e32c36
Author: Constantine Verutin <cverutin@gmail.com>
Date:   Tue Feb 22 17:52:50 2011 -0500

    Add new evhttp_{connection_}set_timeout_tv() functions to set finger-grained http timeouts

commit a11c30b5feda088ad79b5fb71370616a7c3a4f30
Merge: 8f5cca47 2fba21d8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 22 17:41:27 2011 -0500

    Merge remote branch 'origin/patches-2.0'
    
    This branch is the big one that merges all the ntp folks' changes
    
    Conflicts:
            configure.in

commit 2fba21d8676f941b0b7d61850f440b12f0fb61cc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 22 16:20:42 2011 -0500

    Make -ffunction-sections off-by-default in 2.0.x
    
    I don't see how this can burn anybody, but I don't want to take
    chances: new build options are something that should be done in an
    alpha.  To turn -ffunction-sections on, pass
    --enable-function-sections to configure.

commit 7d913f4c8e98a22e75ab2ddea6587f00ef050dbf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 22 16:14:16 2011 -0500

    Remove nonfunctional enable_libevent_(install|regress)_def variables

commit 15b2408c9bc4f2b307df8fdecf3ef5a7401f60d2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 22 16:13:49 2011 -0500

    Use $(), not @@, for LIBEVENT_GC_SECTIONS

commit f95bafb60854d07dd8af5033d55656bc371c43f7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 22 00:34:49 2011 -0500

    Be explicit about how long event loops run in event.h documentation

commit 039b9bd0e3ab6e02cd9709d213f1abf32dbd13f0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 22 00:31:56 2011 -0500

    Use %s with printf in test.sh

commit 9c469db300e1b270a93c6b04c1709ac0f7751136
Author: Dave Hart <hart@ntp.org>
Date:   Sun Feb 13 02:27:42 2011 -0500

    Correct an AM_CFLAGS to an AM_CPPFLAGS in test/Makefile.am

commit 49e9bb7fb014a84de677f265cedac58f4d8a8ad5
Author: Dave Hart <hart@ntp.org>
Date:   Sun Feb 13 02:05:04 2011 -0500

    Add configure options to disable installation, regression tests
    
    The main reason for disabling installation is if you're building
    libevent as a subpackage for embedding: you want to have your main
    package's "make all" build libevent, but you don't want your main
    package's "make install" to install libevent.

commit 0b334799d6c48a5830774ee1f62fc2540810051e
Author: Harlan Stenn <stenn@ntp.org>
Date:   Sun Feb 13 02:00:10 2011 -0500

    Add -D_OSF_SOURCE to fix hpux builds

commit 0965c563568e49448955aea30bd43df30e544b92
Author: Dave Hart <hart@ntp.org>
Date:   Sun Feb 13 01:50:40 2011 -0500

    Use the gcc -ffunction-segments feature to allow gc when linking with static libevent

commit af08a94085e49e6942835b4c6b50a774536d5b5b
Author: Harlan Stenn <stenn@ntp.org>
Date:   Sun Feb 13 01:42:58 2011 -0500

    Check for getservbyname even if not on win32.

commit 833e5e9fcd3d06adfbd7c47d4f1fe42f46fbb26b
Author: Harlan Stenn <stenn@ntp.org>
Date:   Sun Feb 13 01:39:10 2011 -0500

    Fix autoconf bracket issues; make check for getaddrinfo include netdb.h

commit a317c068fe573050677599736a59b0b101bfa07c
Author: Harlan Stenn <stenn@ntp.org>
Date:   Sun Feb 13 01:34:40 2011 -0500

    Skip check for zlib if we have no zlib.h

commit 05a2c22fee8821e7d36837e1b3cba3b105dd5dfc
Author: Harlan Stenn <stenn@ntp.org>
Date:   Sun Feb 13 01:30:37 2011 -0500

    Make test-eof fail with a timeout if we never get an eof.
    
    Previously, it would just wait forever.

commit 4eb281c8a96e246b7493570a89686f8c56c75853
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 13 01:29:54 2011 -0500

    FIX: comment internal headers used in sample code.

commit eb692be9c8ea2d52e28a0b7b8258bd76483c3f3c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 13 01:27:06 2011 -0500

    NM: Fix sample/http-server ipv6 fixes
    
    Fix 1: Use #include "../xyz" rather than #include <../xyz>
    
    Fix 2: util-internal.h includes ipv6-internal.h, which in turn defines
           a replacement AF_INET6 on platforms that don't have it.  As such,
           the AF_INET6 checks shouldn't be needed.  (right?)

commit bbf55150b65a5de2edf7c77e3acd1c52caf364a9
Author: Harlan Stenn <stenn@ntp.org>
Date:   Sun Feb 13 01:25:33 2011 -0500

    Include util-internal.h as needed to build on platforms with no sockaddr_storage

commit 10c834c4dfda193c031a6bab9e86e0dcb818a061
Author: Harlan Stenn <stenn@ntp.org>
Date:   Sun Feb 13 01:22:25 2011 -0500

    Include arpa/inet.h as needed on HPUX

commit 8f5cca47dd6a74e13e358a911ff580d0ba94fb46
Merge: 9f5bf663 63a715e1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 21 23:27:23 2011 -0500

    Merge remote branch 'origin/patches-2.0'

commit 63a715e125cd6ad24b672411b10946ff89d113fe
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 21 23:25:13 2011 -0500

    Correctly detect and stop non-chunked http requests when the body is too long
    
    Based on analysis and code from Bas Verhoeven and from
    Constantine Verutin.

commit deb2f73879102b4a65df772972910f62e3a64649
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 18 16:17:22 2011 -0500

    fix spelling mistake in whatsnew-2.0.txt

commit f665924649b3d6306eb3c24df8f77c3671b7a082
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 15 11:33:40 2011 -0500

    Correct evhttp_del_accept_socket documentation on whether socket is closed
    
    Thanks to Constantine Verutin for pointing this out.

commit 0c9be76804608dbff0bd8d4b96c633f4780437cf
Merge: 926f8165 b42ce4bf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 13 02:51:27 2011 -0500

    Merge branch '20_evport_pollhup' into patches-2.0

commit 926f8165a72f58f59583d21a091ffaf6bfd307b6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 13 00:54:21 2011 -0500

    Clarify event_set_mem_functions doc

commit 95060b54fe9dba5ec5e22bee3454a1e83b888d48
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 13 00:41:22 2011 -0500

    Make URI parser able to tolerate nonconformant URIs.
    
    If the EVHTTP_URI_NONCONFORMANT flag is passed in (which it is when
    parsing URIs we get over the wire), then we relax our checks a lot.
    Specifically, we do nothing to check for correct characters in the
    path, query, and fragment parts of such a URI.
    
    We could do much more here: we could relax our hostname requirements,
    deal with spaces differently/better, trap some errors but not others,
    etc.  But this should solve the worst user-agent compatibility issues
    for now; the other issues can wait for a later release.

commit 9f5bf6639625f66055c1858551dd6d2208809ce6
Merge: 4cb3f53a f7361980
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 8 22:24:51 2011 -0500

    Merge remote branch 'origin/patches-2.0'

commit f73619808622c6267aee1ee6cbeb35e2d02c460f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 8 22:24:06 2011 -0500

    Fix a type error in our (unused) arc4random_stir()

commit 4cb3f53a6bb26376e547ad14bf4fb17c7731a309
Merge: 86f02d75 f663112f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 3 14:04:25 2011 -0500

    Merge remote branch 'origin/patches-2.0'

commit f663112fa238a3f5a1bdfddfd26c17e625e182df
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Thu Oct 14 20:15:04 2010 +0200

    Fix warnings about AC_LANG_PROGRAM usage
    
    Autoconf 2.68 introduced some new warnings that were triggered during
    autogen.sh. Fix those.

commit dd5189b1c3f904e15f60198dcd2800c4014993e5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 2 20:23:23 2011 -0500

    Save a needless comparison when removing/adjusting timeouts

commit 77a96fd90186251f5e2ffeafefbf1e401aefd69a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 2 20:09:16 2011 -0500

    Remove a needless base-notify when rescheduling the first timeout
    
    We don't need to wake up the base when rescheduling the timeout that
    will expire first: the base will already wake up, see that nothing is
    ready, and go back to sleep.

commit e47042fe2604625fffdba015c2a9bdaed30e1f0c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 2 20:05:41 2011 -0500

    Optimize the case where we reinsert an existing timeout

commit 86f02d75335ab0b6238865fcbabc414273efbb7c
Merge: 22845886 b4f89b60
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 1 02:12:46 2011 -0500

    Merge remote branch 'origin/patches-2.0'

commit b4f89b608acfdaafb3c14d753a5055ca9f291182
Author: Dave Hart <hart@ntp.org>
Date:   Tue Feb 1 01:15:48 2011 -0500

    Fix test.sh output on solaris
    
    Solaris echo -n doesn't omit newlines, but printf omits newlines in
    more places.

commit c1260b0e7ccda55b1ab20f59e9c271e8f4576d40
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 31 17:36:49 2011 -0500

    Do not check for gethostbyname_r versions if we have getaddrinfo

commit 22845886c6561c26b9aa29cfc01859946d39d811
Merge: da13d644 3c8f4e75
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 31 16:45:23 2011 -0500

    Merge remote branch 'origin/patches-2.0'

commit 3c8f4e758e5a636e79f518b70319b115c39b1f23
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 31 16:44:06 2011 -0500

    Add compile-time check for AF_UNSPEC==PF_UNSPEC

commit 6092f1265f956f1968185bf669b8730edd7e3eaa
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 31 16:37:27 2011 -0500

    Fix http unit test on non-windows platforms without getaddrinfo

commit cb921139790bed29427fdd5c07e804f26ea4c334
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 31 16:32:05 2011 -0500

    Build on systems without AI_PASSIVE

commit 713c254d21449e73b2877d6f69ee6c41aa56f182
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 24 18:55:10 2011 -0500

    Try to build correctly on platforms with no IPv6 support

commit 9184563e49562f07efdfcb76618b74822f03e273
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 24 18:29:20 2011 -0500

    Build correctly on platforms without sockaddr_storage

commit 453317b28cf8286a6bb849ab425fcce74d4148f3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 24 18:22:32 2011 -0500

    Fall back to sscanf if we have no other way to implement strtoll

commit da13d64486b6888465dae8df2edacf101a593f26
Merge: f1f85147 32677036
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 24 18:02:11 2011 -0500

    Merge remote branch 'origin/patches-2.0'

commit 3267703658799e76ee661d5354bc5cff69b75863
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 24 17:42:23 2011 -0500

    Make --enable-gcc-warnings a no-op if not using gcc

commit f1f85147f364628d27c506774168482156cbcf17
Author: Dave Hart <hart@ntp.org>
Date:   Mon Jan 24 15:50:25 2011 -0500

    Allow use of --enable-silent-rules for quieter compilation with automake 1.11

commit 8b0afe96eb3436bfa286a1fb2059f137458139b7
Merge: b647e0bc 0c0ec0be
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 12 21:41:58 2011 -0500

    Merge remote branch 'origin/patches-2.0'

commit 0c0ec0be2ba977b8133294e27b076a65a2d65711
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 12 20:28:47 2011 -0500

    Correctly free selectop fields when select_resize fails in select_init

commit 83e805a41554a9e69ab7d2d75e56c30f3147ffa6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 7 13:18:09 2011 -0500

    Handle resize failures in the select backend better.

commit 3f8d22a123aef2698ce2e7d6ca1ad96d13760cef
Author: Jardel Weyrich <jweyrich@gmail.com>
Date:   Sat Dec 18 02:40:22 2010 -0200

    Use event_err() only if the failure is truly unrecoverable.

commit 666b09669187daad7107b340dd7dde50070a2feb
Author: Jardel Weyrich <jweyrich@gmail.com>
Date:   Sat Dec 18 01:07:27 2010 -0200

    Detect and handle more allocation failures.

commit b647e0bc94a6c1a32767f00b6c19a22483720c4f
Merge: f1e9a7e7 ded0a090
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 7 12:31:30 2011 -0500

    Merge remote branch 'kev009/21_ac_use_system_extensions'

commit ded0a0907b5b49ba2ae4783edc24a465f1b66418
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Fri Jan 7 00:41:37 2011 -0700

    Add evconfig-private to remaining files

commit fd7b5a81eb635dee2f48600fe3e96698b358c077
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Fri Jan 7 00:37:05 2011 -0700

    Shell hack for weird mkdir -p commands

commit c13e18591457ed8ea2042d8c92bca5e340cfd5df
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Fri Jan 7 00:34:22 2011 -0700

    Remove use and reference to event-private.h

commit f1e9a7e7e442f80b61a2dd6f0c8f1f5ce456b033
Merge: ac690424 0144886e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 6 12:44:45 2011 -0500

    Merge remote branch 'origin/patches-2.0'

commit 0144886e7e9fdfb5dc630dcf0567846b952994bd
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Sun Jan 2 10:17:15 2011 +0100

    Check for POLLERR, POLLHUP and POLLNVAL for Solaris event ports

commit f964b7215ac2a3dc0edaef6c130f67e31576f738
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Mon Jan 3 15:44:26 2011 -0700

    Prefer the ./configure evconfig-private.h in MinGW, just in case.

commit ad03952edfc2e08e2743c09389840412fcf81958
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Mon Jan 3 15:09:21 2011 -0700

    Backport libevent to vanilla Autoconf 2.59 (as used in RHEL5)

commit b3651d1576606ceb2dd27ec5fcd99beaa8e312c8
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Sun Jan 2 08:48:12 2011 -0700

    Add an evconfig-private.h stub for Win32.

commit dc628c030469f8671943b5cb86ff8ec179f1a7b7
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Sun Jan 2 08:47:46 2011 -0700

    Add an include guard

commit 0915ca0aa64edac92b05c2dfcf6b11d1b1753321
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Sun Jan 2 08:43:45 2011 -0700

    Include evconfig-private.h in internal files for great good.

commit f6d66bc7167a5b1249cf5a82196547ebe1077d83
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Sun Jan 2 08:05:33 2011 -0700

    Fix a comment warning and add evconfig-private.h to .gitignore

commit 9b27b30720935d1bdc911d7f7823a4cebd359eef
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Sun Jan 2 08:04:12 2011 -0700

    Remove event-private.h and switch to evconfig-private.h

commit 868f88874ff0c14530368a3077462a92a47eae9f
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Sun Jan 2 07:51:23 2011 -0700

    Use a Configuration Header Template for evconfig-private.h

commit edf62dddbc3b9ced06d10de041d682c18965413e
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Sun Jan 2 07:29:45 2011 -0700

    Revert "evconfig-private.h with recusive configure subdirs"
    
    This reverts commit ed53d5ef8053af08186ef80dfc1647cff769fac8.

commit ed53d5ef8053af08186ef80dfc1647cff769fac8
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Sun Jan 2 06:35:05 2011 -0700

    evconfig-private.h with recusive configure subdirs

commit ea8fa4cb231a674797ea8efe23f68951db505159
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Sun Jan 2 05:14:41 2011 -0700

    Add AC_GNU_SOURCE to the fallback case.

commit ac6904241be9bf56e1de7d6e1f780134359dbd2e
Merge: 41bb1cae cb8059d2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Jan 2 00:59:20 2011 -0500

    Merge remote branch 'origin/patches-2.0'

commit cb8059d2d399a2db5f3de1e911b5b9947d6c7339
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 1 21:37:21 2011 -0500

    Fix compilation on Windows with NDEBUG
    
    Dongsheng Song reports that when building on windows with NDEBUG, you
    run into an attempt to do EVUTIL_ASSERT(x) where x is a bitfield,
    which turns into _EVUTIL_NIL_CONDITION(x), which takes sizeof(x),
    which is illegal.  This patch fixes _EVUTIL_NIL_CONDITION to work on
    bitfields too.

commit b42ce4bf08c8e70bf6b357d4e2e95885fff0d530
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 1 21:17:31 2011 -0500

    Fix evport handling of POLLHUP and POLLERR
    
    In other backends, they make _all_ events trigger; with evport they
    previously triggered nothing.  Found by Phua Keat Yee.

commit c51ef9307ad04d8e98487d1331f1910941e50390
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Wed Dec 22 23:24:01 2010 -0700

    Eliminate a couple more manual internal _GNU_SOURCE defines

commit 3b265412b7fce5e2e56bf130224c38cfc6d3bed2
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Wed Dec 22 23:08:10 2010 -0700

    Remove internal usage of _GNU_SOURCE

commit 2c5566a9c720e49a0c49ab5eded26bebb330783e
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Wed Dec 22 23:00:59 2010 -0700

    Add event-private.h to noinst_HEADERS

commit 321b558793db13ed3e57bb615d7811add6e10d6a
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Wed Dec 22 22:53:03 2010 -0700

    Filter '# define' statements from autoconf and generate event-private.h

commit 1fa7dbe1e84f659f295652858b1a9d76cb4c074a
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Wed Dec 22 22:11:26 2010 -0700

    Add AC_USE_SYSTEM_EXTENSIONS to configure.in.
    Requires follow on patches for correctness and robustness.

commit 41bb1cae794b6484242c841f17084cb9cfa06da6
Merge: 076680ab 0aad0143
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Dec 20 19:30:13 2010 -0500

    Merge branch 'file_offset_v2'

commit 0aad01436af27c5807d48701028020bb51cba387
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Dec 20 18:40:03 2010 -0500

    Refactor addfile tests; add test for big files and for offsets

commit 3f405d2d4b583a4211a685e6425b1d7fc5797538
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 25 12:29:39 2010 -0400

    Add CreateFileMapping file_segment implementation for win32

commit c2d9884a6adbfcb2c95421671817cd00c5f4d8e5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 25 12:10:10 2010 -0400

    Add support for mmaps with nonzero offset values.  Needs testing.

commit e72afae068c31c62fa125f99b9c5102ba2e7ec7c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 21 19:45:49 2010 -0400

    Add evbuffer_add_file_segment() so one fd can be used efficiently in more than one evbuffer_add_file at a time

commit 076680abe495dc17a330534e45c4cc6d985a7d50
Merge: b8b8aa56 d4970d4e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 16 14:37:15 2010 -0500

    Merge branch 'epoll_table_v2'

commit d4970d4edde9ebf985e7272c8e932e570fcb10de
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 16 14:36:09 2010 -0500

    Reindent epoll_apply_one_change()

commit 2d55a190e128cf9277334249de431facb6343866
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 16 14:25:04 2010 -0500

    Clean up error handling in epoll_apply_one_change() a little
    
    The old code was more or less:
       if (op == X && errno == FOO) {
         ...
       } else if (op == Y && errno == BAR) {
         ...
       }
    but really we wanted to do a switch (op) to avoid needless checks
    and branches.
    
    This patch leaves the indentation a little weird so as to make it
    easier to see what changed; the next patch will fix the indentation.

commit 8c83eb6948e3461aa7493a0e29468eec6ccea7b6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Oct 24 12:53:52 2010 -0400

    Replace big chain of if/thens in epoll.c with a table lookup
    
    This should save a bunch of branches by doing instead a lookup in a
    nice static table.
    
    To ensure correctness, the table is generated from a Python script,
    included with this commit.

commit e30a82f11829e3dc2cf1add253c768fa144db494
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 16 13:58:56 2010 -0500

    Add event_enable_debug_logging() to control use of debug logs
    
    Previously, debug logs were turned on if you built with -DUSE_DEBUG
    and off otherwise.  This make builds with -DUSE_DEBUG hideously slow
    and other builds unable to get debug logs.
    
    This is based off a patch by Ralph Castain from October.  It tries a
    little harder to avoid needless function calls, it doesn't require
    stdbool, and makes the controlling parameter a mask rather than a
    boolean so that we can later support enabling only the debugging
    messages for the parts of Libevent you're trying to debug.

commit b8b8aa560c038c6f0c22a574d99d314a1f4a3b7a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 2 17:52:20 2010 -0400

    Use GetSystemTimeAsFileTime to implement gettimeofday on win32.
    
    It is (in my benchmarks) way faster than _ftime, though the
    conversion process is not so straightforward.  In theory, it can
    have a better granularity too, though in practice who knows what
    you're getting.

commit 04ba27ebf252746a3fdb79422cccd36f1af4be82
Author: Mike Smellie <mike.j.smellie@gmail.com>
Date:   Mon Jul 19 14:18:31 2010 +1200

    Use current event set rather than current pending change when deciding whether to no-op a del
    
    This alters event_changelist_del to quash deletion of events that
    didn't exist in the first place.
    
    As far as I can see, the add,delete, dispatch case described in the
    original comment will never happen.  The recorded change is a single
    operation, not a queue.  This seems to leave actions to delete
    events that never existed as the real targets for no-oping

commit 2570ae50d3ecd6c9ba5304c20b8f204627162243
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 16 12:59:22 2010 -0500

    Bump version in master to 2.1.0-alpha-dev

commit 05f0195dd94fa8a84a2006bda8900f5f6b30cd40
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 16 12:57:23 2010 -0500

    Bump version to 2.0.10-stable-dev

commit 5a12d8359727e8f10d08f8cd2b36c9f78747908f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 15 14:31:08 2010 -0500

    Add changelog for 2.0.10-stable

commit d34d21d959974682e2d163f0143806890b5c123a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 15 14:30:04 2010 -0500

    Add more acknowledgements to the readme for 2.0.10-stable

commit bffc411ed64313d04b01248fbbdb92b4ce78d995
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 15 14:29:50 2010 -0500

    Set the version to 2.0.10-stable

commit b63ab1776b3bbf3fe47406d0ca9639b299c4348d
Author: Evan Jones <evanj@mit.edu>
Date:   Mon Dec 6 14:17:44 2010 -0500

    EVUTIL_ASSERT: Use sizeof() to avoid "unused variable" warnings.

commit 18adc3f0159949a628b4e77dfeed857cc4b924a4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 9 12:17:58 2010 -0500

    Add stuff to whatsnew based on reading include changes since August.

commit 57689c4484ba3fd098739bcea1557c329a8fa16b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 9 12:17:11 2010 -0500

    Document that the cpu_hint is only used on Windows with IOCP for now

commit bb0d2b4e85dcb674ecee0e4cb4db18d03f64d4d9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 9 11:47:54 2010 -0500

    Consistentize tabs

commit 22f4af6580bb330c073350580fc7e49d1051a8cf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 9 11:43:12 2010 -0500

    Remove end-of-line whitespace

commit 74f75758cbc942b748b4aff271871e51def93f89
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 9 11:40:35 2010 -0500

    tweak readme, whatsnew

commit 7011f9ec1f96f8fa2939beec685e292c57e5addf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 7 11:45:14 2010 -0500

    Fix a signed/unsigned comparison in the last commit

commit d23839fc6e30e265e139d763d7155b14934bab0a
Author: Constantine Verutin <cverutin@gmail.com>
Date:   Tue Dec 7 11:43:52 2010 -0500

    Reject overlong http requests early when Expect:100-continue is set

commit c0bf63cecbaa8ce061bd3f64978445fdf90e82e6
Author: Evan Jones <evanj@mit.edu>
Date:   Thu Dec 2 14:13:33 2010 -0500

    tests: Use relative includes ("") instead of system includes (<>)

commit 4f332091c38ac73a05e3d2b148cd9975799afbcf
Author: Evan Jones <evanj@mit.edu>
Date:   Thu Dec 2 14:09:52 2010 -0500

    tests: Use new event2 headers instead of old compatibility headers.

commit fbe64f216cbcf3980e436ca6bb708416c4d856a4
Author: Evan Jones <evanj@mit.edu>
Date:   Thu Dec 2 10:26:12 2010 -0500

    Use relative includes instead of system includes consistently.

commit ef5e65a484406586c161f3e7bf7eafc162ee858e
Author: Evan Jones <evanj@mit.edu>
Date:   Thu Dec 2 10:27:06 2010 -0500

    bufferevent-internal.h: Use the new event2/util.h header, not evutil.h

commit 5beeec9d43cbf7de700a9a0fd7d144a341e102c2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 1 21:28:03 2010 -0500

    Correctly notify the main thread when activating an event from a subthread

commit 2599b2d5f55cdb36e0601c41cea0f3b0ecd9dc52
Author: Kelly Brock <Kerby@inocode.com>
Date:   Tue Nov 30 11:34:26 2010 -0500

    Minor fix for IOCP shutdown handling fix
    
    Call setsockopt() on the actual new socket, not on as->s, which was
    set to INVALID_SOCKET.

commit 2b0b06d7a3f5dacff55df382094f32cc8b9516f7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 30 02:19:25 2010 -0500

    Increment version to 2.0.9-rc-dev

commit ce46db99b94389a8fed0248f64f88d047cdac416
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 30 01:21:00 2010 -0500

    Give the correct date for 2.0.9-rc in the changelog

commit 9ce4cc4ed9a580f131bf857e69a820eaa818a2af
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 23 11:17:24 2010 -0500

    Increment version to 2.0.9-rc

commit 79957b89d6dd446add398de269f5507e607aaa9d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 23 11:17:06 2010 -0500

    Bump VERSION_INFO to 5:0:0

commit 0c54f17605c1637b5c24ab6c0a8354bdc9fab482
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 23 11:08:30 2010 -0500

    Changelog and acknowledgments for 2.0.9-rc

commit 13fd242ddba16bc02c1e54c7209b4be4d85ac906
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 30 00:53:16 2010 -0500

    Fix win32 build of http-server.c with unicode enabled

commit 04861d5e62d42e9626c08d74c43b1050e28c8858
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 30 00:05:54 2010 -0500

    Correctly detect timeouts during http connects

commit 0faaa395921e3da1da5202befd849614c6e9c37c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 29 22:44:18 2010 -0500

    Try to fix an assertion failure related to close detection
    
    f700566c removed a line from evhttp_connection_stop_detectclose that
    cleared the EVHTTP_CON_CLOSEDETECT flag.  I think this was an
    accident, and suspect that it may be the cause of bug 3069555.

commit 29f7623c82207914b1ff3123bb1eec3745e3dab2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 29 22:14:54 2010 -0500

    Possible crash fix when freeing an underlying bufferevent of an openssl bufferevent

commit 0c4d54598b12ce08ba438b14861984a2501b7dde
Merge: 18d03276 fa9305f8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 29 21:56:23 2010 -0500

    Merge remote branch 'chrisd/http_continue'

commit fa9305f8f5a9641bf7edf7577b186455b6c43ac6
Author: Christopher Davis <chrisd@torproject.org>
Date:   Mon Nov 29 18:25:04 2010 -0800

    Preliminary support for Continue expectation in evhttp.

commit 18d0327666a6d92bd045eacf91b538bf90e82a04
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 29 20:39:09 2010 -0500

    make http-server example code build on win32

commit ad66dfd064d8e246f699c9512f9c3c6a5a0b2b69
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 29 20:13:19 2010 -0500

    Fix http-server.c compilation on freebsd

commit a12839b0838cb6b24f6993b17b2a284a3944d1c5
Merge: 026ac5d5 4feedef9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 29 14:25:33 2010 -0500

    Merge remote branch 'chrisd/http_fixes2'

commit 4feedef94b254f5aaf8e7cf7cd104ddfffd8496a
Author: Christopher Davis <chrisd@mangrin.org>
Date:   Mon Nov 29 07:18:32 2010 -0800

    Add a few more comments.

commit 026ac5d5ada4a5d2f107e652916b50ebd17c8609
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 26 13:29:56 2010 -0500

    add http-server to gitignore

commit 4881778c5c898577bcb756c2b23ed15003c4a0bc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 26 13:28:48 2010 -0500

    Fix a misplaced ) in http_server.c

commit d40aa673c23c4120fc1bab7a51d0a23c7fbb9463
Merge: 4e794d5d ec5c5aec
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 26 12:59:02 2010 -0500

    Merge branch '20_empty_body'

commit 4e794d5d3910c053aed7aa1d7900531894ed0dd7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 18 13:44:05 2010 -0400

    Add a basic example of how to write a static HTTP server.

commit aab8c38b768597274104bc5ecdf267de4ff3c7c9
Author: Christopher Davis <chrisd@mangrin.org>
Date:   Fri Nov 5 11:17:07 2010 -0700

    Add evhttp server alias interface, correct flagging of proxy requests.
    
    evhttp needs to be mindful of all hostnames and addresses that clients
    use to contact the main server and vhosts to know the difference between
    proxy requests and non-proxy requests.

commit 2e5a175bf387bd5c80b88f276b4ba7dcf9eaaf08
Merge: 32390732 057a5146
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 25 23:03:46 2010 -0500

    Merge remote branch 'github/20_once_fixes'

commit 32390732d75d1d4680a562404ef4298869f37b12
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Tue Nov 23 19:40:23 2010 -0700

    Fix snprintf related failures on IRIX.

commit 1cd45e56608b50b594a629433ca48368dc1a9074
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Tue Nov 23 19:26:34 2010 -0700

    If not WIN32, include <sys/socket.h> in event2/util.h.

commit c2e5e22c4c47073fecf0acc300d8d73aaccdab2d
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Tue Nov 23 14:09:03 2010 -0700

    xlC doesn't obey C99 comments here.  autoconf isn't invoking full C99
    mode.

commit c4dc3353412733345010114220378f45f1951bb1
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Tue Nov 23 00:22:01 2010 -0700

    Add some checks since lack of TAILQ_FOREACH doesn't imply lack of FIRST,
    END, NEXT, or INSERT_BEFORE.  Quiet some warnings in XL C.

commit 2e2a3d7bb6c7a7d6e8f0ccd7282c65308c6226f7
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Tue Nov 23 19:09:08 2010 -0700

    Reworked AIX __ss_family workaround to use AC_STRUCT_MEMBER.

commit a3a9f6b2d9fbc853e9f54f1af3132adce760e9bb
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Mon Nov 22 20:44:10 2010 -0700

    select comes from <sys/select.h> according to POSIX.1-2001, or from a
    variety of other standard headers on older systems, but not <select.h>.
    AIX build fix.

commit ec5c5aec6d5373e47936891c6b8111716d16f3e6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 23 20:31:28 2010 -0500

    Handle evhttp PUT/POST requests with an empty body
    
    When we call evhttp_get_bodylen() [when transfer-encoding isn't set],
    having req->ntoread == -1 means that we have no content-length.  But a
    request with no content-length has no body!  We were treating the
    absent content-length as meaning "read till closed", which only holds
    for replies, not requests.
    
    This patch also allows PATCH requests to have a body.

commit 652024b6b1c43a4898f7c3f13aeff5d3736f4ce5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 23 13:08:07 2010 -0500

    Remove _event_initialized(); make event_initialized() a function(); make it consistent on windows and non-windows

commit 88be27dc0613eb15f6f5499ea18b8253631ad92e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 23 12:26:46 2010 -0500

    Document event_get_assignment

commit e431bcd6861fd75051ea6dca8af8db966eb7f636
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 23 12:26:34 2010 -0500

    Note that reentrant calls to libevent from logging cbs may fail badly

commit 7bcace2d549f5afc65665a9be6cbb4daf7360273
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 22 21:02:34 2010 -0500

    Fix some irix compilation warnings spotted by Kevin Bowling

commit 150d7d0a497b52968e2223178c8ed6e4cd8659b0
Merge: 26049c2f e8749823
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 22 20:24:03 2010 -0500

    Merge remote branch 'kev009/master'

commit e87498231c5f1d0cbda6e16f6a9f721d96affd6f
Author: Kevin Bowling <kevin.bowling@kev009.com>
Date:   Mon Nov 22 16:40:31 2010 -0700

    Fix IRIX build.  sa_family collides with a #define in sys/socket.h on IRIX.

commit 26049c2f93e3266819d8456cb7481521b7b255fa
Merge: 568ac4fd da1bf528
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 22 16:24:52 2010 -0500

    Merge remote branch 'github/20_getaddrinfo_cancel_v2'

commit da1bf528110d2676ab9a32c3a92d50ec5665e926
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 22 16:24:09 2010 -0500

    Add a stress test for getaddrinfo_cancel

commit 568ac4fd1b5e325c21ca2d30f2c17b452b622985
Merge: ece974fb 4f228a1f 3ab578f8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 22 15:52:34 2010 -0500

    Merge remote branches 'github/20_epoll_nochangelist_v4', 'github/20_openssl_closeonfree' and 'github/20_cloexec'

commit ece974fbba32db1b21a411adfdfce6f37f63ab59
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 22 14:13:24 2010 -0500

    Reorder backends in test.sh to match preference order in event.c

commit aed7e02979886ec07bad56daa0d7bdda290bc509
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 22 14:10:01 2010 -0500

    Make unit tests for epoll-with-changelist pass
    
    The only changes needed were to handle the fact that the methodname
    "epoll (with changelist)" matches the environment variable
    EVENT_NOEPOLL rather than the imaginary "EVENT_EPOLL (WITH CHANGELIST)".

commit 9531763ab0b57e8d4249db58ef162800c6fb116b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 14 17:52:16 2010 -0500

    Disable changelist for epoll by default because of Linux dup() bug; add an option and/or an envvar to reenable it for speed.
    
    Rename option to control epoll changelist; make epoll changelist off by default

commit 3ab578f848b024da14a5cdf3dff24d666275bada
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Nov 20 01:41:34 2010 -0500

    Make sure the CLOEXEC flag is set on fds we open for base notification

commit 3a67d0bf42c69423fca36d001023d563b0326399
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 19 17:09:30 2010 -0500

    Resolve an evport bug in the thread/forking test

commit d51b2fc6556de1ad086683ce1d0201910f7c6e00
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 19 12:14:18 2010 -0500

    Make evdns_getaddrinfo_cancel threadsafe

commit c7cfbcf466780755c40a9889fd15a3c571799ca3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 19 12:01:05 2010 -0500

    Fix some more cancel-related bugs in getaddrinfo_async
    
    Also imposed a new rule to make this much much simpler: no freeing
    the getaddrinfo request until both dns callbacks have been invoked.

commit abf01ed13af22637ceeb4c5732c2347fd25a8c03
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 19 11:33:48 2010 -0500

    Avoid double-invocation of user callback with EVUTIL_EAI_CANCEL

commit 494186129fdec5d47db0bd0b582922c1b37abe0f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 16 12:55:10 2010 -0500

    Use the US-English "canceled", not the UK "cancelled".

commit 8faf223ac593a2c8a93a9bb16eb314f858fce59b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 17 00:09:10 2010 -0500

    Fix a memory leak in evhttp_uri_free.

commit 4f228a1fc1569cb26c9ae7dde4a1b79ca25cb0ce
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 14 19:52:18 2010 -0500

    Fix bug in bufferevent_connect on an openssl bufferevent that already had an fd
    
    The problem was that we were using openssl's BIO code's shutdown flag
    whenever BEV_OPT_CLOSE_ON_FREE was set.  This made the BIO close the
    socket when it was freed... but it would be freed whenever we did a
    setfd on the bufferevent_openssl, even the no-op setfd in
    bufferevent_connect.
    
    So instead, we just set the shutdown flag to 0, and handle closing the
    fd ourselves.
    
    Spotted by Linus Nordberg

commit 057a51468e1368384478788800f66c6d82e2bce3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 14 19:34:49 2010 -0500

    Clarify EVLOOP_* documentation to be more precise.

commit 2d5e1bd0be546efb848006652b8df612d6d3d681
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 14 19:32:13 2010 -0500

    Do not let EVLOOP_ONCE exit the loop until all deferred callbacks have run

commit 0617a818204397790e5e4c9bcb9e91ae5ea7817a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 14 19:25:54 2010 -0500

    Make EVLOOP_ONCE ignore internal events
    
    Merely getting an internal notification event from having an event
    added or deleted from another thread should not cause
    event_base_loop(base, EVLOOP_ONCE) to exit; previously, it did.

commit 1ac5b2303aab11dee3d2030a2c9bee466f002772
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 9 15:18:59 2010 -0500

    Only clear underlying callbacks when the user hasn't reset them.

commit fc7b1b005c906d720e03975224ae809974402f55
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 9 11:43:47 2010 -0500

    When closing a filtering bufferevent, clear callbacks on the underlying bufferevent
    
    Previously, if BEV_OPT_CLOSE_ON_FREE wasn't set on a
    bufferevent_filter or a filtering bufferevent_openssl, when we went
    to free the filtering bufferevent, we'd leave the underlying
    bufferevent unchanged.  That's not so good, since the callbacks are
    set to activate stuff in the filtering bufferevent that we're about
    to free.  Instead, set all the callbacks to NULL.

commit 5c8a59e8867a45b5791e45a548a73eb135a6a3ea
Merge: 9ed30de7 05124879 a38140be 3db6bc00 52aa419b 34b84b97
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 9 10:19:05 2010 -0500

    Merge remote branches 'github/20_evdns_cancel_segfault_v2', 'github/20_http_close_detect', 'github/20_http_versions', 'github/20_more_http_methods', 'github/20_shutdown_iocp_listener' and 'github/20_win64_fixes'

commit a38140be18b764e98b899ed435b61ea2aa6447bc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 9 10:14:32 2010 -0500

    Refactor http version parsing into a single function
    
    Based on a suggestion by Chris Davis to make
    evhttp_parse_response_line tolerate odd versions too.

commit 3db6bc007949366e89cb83efa5027ea9da9af102
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 9 10:03:00 2010 -0500

    Remove some debugging puts() calls from allow_methods test

commit 52aa419bf69bc2f46f203800919abcfc25ea98fe
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 4 15:40:44 2010 -0500

    Set SO_UPDATE_ACCEPT_CONTEXT on sockets from AcceptEx so that shutdown() can work
    
    Based on patch (and lots of debugging work) by Kelly Brock.

commit 229714d123824d686bece18e6d2d157ed401abd4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 4 16:04:28 2010 -0400

    Fix a mistake in http documentation found by Julien Blache

commit 05124879d34731eafe8a31698c943c0f5e7e24bf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 4 14:05:08 2010 -0400

    Never call evhttp_readcb while writing.

commit c76640b5c29390ca3a11eba6614bf51a92e7a2ca
Author: Felix Nawothnig <felix.nawothnig@gmail.com>
Date:   Tue Jun 1 04:45:55 2010 +0200

    Don't disable reading from the HTTP connection after sending the request to be notified of connection-close in time

commit 75e3320efd318634ec367327e4e286fa68178179
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 4 12:41:13 2010 -0400

    Units test for unexpected evhttp methods.

commit 536311a46b407902ca0ee52d504c327ec54cfdf1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 4 12:39:41 2010 -0400

    evhttp: Return 501 when we get an unrecognized method, not 400.

commit f5b391e22eb119304877b3829f32a241a0688fa3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 4 11:53:34 2010 -0400

    Tweak interface for allowed methods

commit 75a73414a402005ddc2d2adde5a3acffc00d6382
Author: Felix Nawothnig <felix.nawothnig@gmail.com>
Date:   Thu Nov 4 11:25:35 2010 -0400

    Define enumerators for all HTTP methods, including PATCH from RFC5789
    
    This patch defines enumerators for all HTTP methods that exist
    (including PATCH introduced in RFC 5789).
    
    It also makes them bit-masky (that's not a word, is it?), breaking
    binary- but not source-code compatibility.
    
    evhttp now stores a bitmask specifying for which methods requests to
    dispatch and which ones to reject with "405 Method Not Allowed".
    
    By default that's the ones we currently have (GET, POST, HEAD, PUT,
    DELETE), thereby keeping functional compatibility (besides the minor
    change that one of the other methods will now cause 405 instead of
    400. But I believe that could even be considered a bug-fix).
    
    evhttp is extended by evhttp_set_allowed_methods() with which the
    user can change that bitmask.
    
    no regressions here and my test-app still works. Haven't yet
    actually tested any of the new methods.
    
    What's obviously missing here is the special logic for the methods:
    
    OPTIONS: We should be fine here - I believe our current dispatch
    logic should work fine. Some convenience functions would be fine
    though.
    
    TRACE: I'm pretty certain we should never dispatch this to the
    callbacks and simply implement the necessary functionality built-in.
    
    CONNECT: Pretty straight-forward to implement (and considering the
    framework in which we implement it very efficient too). Should
    probably go built-in.
    
    PATCH: Except for checking the RFC against our pre-dispatch logic
    (there just might be some "MUST not have Some-Header" lurking
    somewhere) there is nothing to be done here, this is completely up
    to the user. Nothing to do.

commit 9ed30de7ffeb3e5acede92a4e47f3aeb7c6af255
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 3 12:37:37 2010 -0400

    Don't free evdns_request handles until after the callback is invoked
    
    Previously, once the callback was scheduled, it was unsafe to cancel
    a request, but there was no way to tell that.  Now it is safe to
    cancel a request until the callback is invoked, at which point it
    isn't.
    
    Found and diagnosed by Denis Bilenko.

commit 34b84b972775db759f5c2da301967cb288439e93
Author: Christopher Davis <chrisd@torproject.org>
Date:   Wed Nov 3 14:38:45 2010 -0700

    Fix more wn64 warnings.

commit 78762383b74ad8159d8c6176fb73c9fdb9ce9623
Merge: aa5f55fa 985430ae
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 3 15:18:34 2010 -0400

    Merge branch 'http_nolegacy_v2'

commit 985430aed122a8c61ca7260779940d523f78ce23
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 3 15:17:57 2010 -0400

    Remove need for http_compat.h in http tests

commit 0b137f452ee4516d479ea61ae54d458888cfa8e9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 3 15:14:29 2010 -0400

    Stop accessing http request struct directly from in the unit tests.

commit 22e0a9b2e8f752bfdcff7b0d96065c2da391bf03
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 3 15:12:08 2010 -0400

    Add evhttp_response_code to remove one more reason to include http_struct.h

commit c91622d18cb4dda945d92b983a712d1c3a37b45e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 3 15:04:44 2010 -0400

    Stop using event_compat.h in regress_http

commit 9bb8239375b78a7be65ce17b4545159590894dc3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 3 14:31:23 2010 -0400

    Convert the rest of the http tests to be non-legacy unit tests.

commit 353402a87ad41788997d4100bbf00bfc21693b4c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 3 14:13:20 2010 -0400

    Rename the confusing "base" static variable in regress_http.c

commit 8505a7449cfb6bca91daee1c4d9bae80be92fa26
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 3 13:55:20 2010 -0400

    Start porting http tests to not use legacy interfaces

commit 647e094ca2ff90da79bfc3081848f50583d2042c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 2 15:19:12 2010 -0400

    Replace exact-version checks for HTTP/1.1 with >= or < checks

commit aa5f55face7347a7fa766ff37534d9413486fcfe
Author: Joachim Bauch <mail@joachim-bauch.de>
Date:   Tue Nov 2 13:50:57 2010 -0400

    reset "chunked" flag when sending non-chunked reply

commit ba014569991ead06594e3418705ad42e4818cb33
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 2 12:42:35 2010 -0400

    Use the label_len local variable in evdns instead of recalculating it over and over

commit a3245afec2a7c7035cf62bdb67bab482e5986a8c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 1 14:23:33 2010 -0400

    Fix win32 build in response to fixes from win64 build.

commit 74a91e5aafcb62f9518615dbc1021dfde113e001
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 1 14:16:39 2010 -0400

    fix signed/unsigned warnings in http.c

commit f8095d64e21d7abd16649a65080fd077bf0f0488
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 1 14:15:34 2010 -0400

    Fix a typo in 7484df61c981fc33db2~

commit 545a61145ca8ae38c3d19f5404ff3be18c275308
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 1 13:59:04 2010 -0400

    Fix even more win64 warnings: buffer, event_tagging, http, evdns, evrpc

commit 7484df61c981fc33db2152f75ddac689791b9929
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 1 13:43:43 2010 -0400

    Fix even more win64 warnings

commit b6a158ca22359831475e4cb10498063f72b07823
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 1 11:48:57 2010 -0400

    Rename "size" variables in win32select that were really fd counts.

commit f8064762ae697d34b15039c32d74e55f5491e5bd
Author: Christopher Davis <chrisd@torproject.org>
Date:   Thu Oct 28 10:11:25 2010 -0700

    Increase the skew tolerance to 2 seconds in thread/deferred_cb_skew
    
    This is to make the test not fail on Sebastian Hahn's Win7 box.

commit 7b40a0005062e67423f5217e1c8082d0f7d36f1b
Author: Christopher Davis <chrisd@torproject.org>
Date:   Thu Oct 28 10:08:17 2010 -0700

    Make sure IOCP evconnlistener uses virtual events.

commit 598d13360918e557d1ce5e37078364f4ddd24e36
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 27 22:57:53 2010 -0400

    Try to clear up more size_t vs int/long issues.

commit b81217f78dc511782451e793b0505624d8159499
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 27 17:37:32 2010 -0400

    Fix signal handler types for win64.

commit 1ae82cd8c6aba98d21342d242facd1bb5e461555
Author: Dimitre Piskyulev <piskyulev@users.sourceforge.net>
Date:   Wed Oct 27 17:32:41 2010 -0400

    Set _EVENT_SIZEOF_VOID_P correctly on win32 and win64

commit f817bfa4d37448f21d6f753769f6ad91d113dd7c
Author: Dimitre Piskyulev <piskyulev@users.sourceforge.net>
Date:   Wed Oct 27 17:31:52 2010 -0400

    Fix some ints to evutil_socket_t; make tests pass on win64.

commit 19c71e7454305e4e10c7d0c6ed1520fe5e1521df
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 27 10:36:08 2010 -0400

    Fix som event_warns that should have been event_warnx

commit e8a903cee8b3bfc56423a58ba313ee1a030ae6f1
Merge: 5d389dc0 f5ad31c1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 27 10:27:04 2010 -0400

    Merge remote branch 'trondn/master'

commit f5ad31c186ec68c78f0106da4474dca3b660bca0
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Wed Oct 27 12:47:07 2010 +0200

    Check return value for ioctlsocket on win32

commit 5d389dc0f0acd8077b51eb053bb98bc4c1b3baa4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 26 22:27:57 2010 -0400

    Fix some uses of int for socket in regress

commit 84a7053e412c08269535431aa845264b90a5a0c2
Merge: 73bf07fe 74c0e862
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 26 21:33:22 2010 -0400

    Merge remote branch 'github/20_http_read_after_write'

commit 73bf07fe9b133a39440c03a7fd9ac2f0c2f32f28
Merge: 093fb989 a4063c06
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 26 21:33:13 2010 -0400

    Merge remote branch 'github/20_abi_breaks'

commit 093fb989ecd3ae65700289e00511b678d8b4896c
Merge: 4f20eeaa 2cbb1a16
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 26 21:33:05 2010 -0400

    Merge remote branch 'github/20_ratelim_size'

commit 4f20eeaa0966f01485be21df3a6529edc20451e9
Merge: fbaf0770 e4f34e8a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 26 21:32:53 2010 -0400

    Merge remote branch 'github/20_chain_realign'

commit fbaf0770a709aaf7ed50914e26ea3d5a350e189d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 26 12:09:20 2010 -0400

    Fix bugs in posix thread-id calculation when sizeof(pthread_t) != sizeof(long)
    
    When pthread_t was smaller, our calculated thread IDs would include
    uninitialized RAM, and so our unit tests would fail because thread_ids
    would never match one another.
    
    When pthread_t was larger and alignment was big-endian, our calculated
    thread IDs would only have the most significant bytes of the
    pthread_t, when in practice all the entropy is in the low-order bytes.
    
    Found with help from Dagobert Michelsen.

commit ac1931ac3d3ed4977c95f3aedf047e7c3adedc7f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 26 11:07:26 2010 -0400

    Remove event-config.h from .gitignore; it moved to include/event2

commit e56ff65af118163e4bed33fa33c5cabcea067839
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 26 11:01:58 2010 -0400

    Fix a minor syntax error that most compilers didn't care about

commit a4063c06f9a904930631abba6a2b5b8028b10383
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 26 10:38:30 2010 -0400

    Note that 2.0.9 will break the ABI, and make changes we were postponing.
    
    We had to turn a couple of 32-bit size arguments into 64-bit arguments
    or size_t arguments (since otherwise we would have had to do it post
    2.0.x-stable, and that would be worse).

commit 2cbb1a161e843a0f50f3d42f622d58d5c58c510d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 26 10:27:29 2010 -0400

    Make rate-limits go up to SIZE_MAX/EV_SSIZE_MAX, not just INT32_MAX
    
    Someday, when networks are far faster and people frequently want a
    burst value greater than 2GB per tick, this will seem very forsightful
    indeed.
    
    For now, it breaks ABI, but not source.  Fixes bug 3092096.

commit e4f34e8a0fec22a0300d6d529a5899ced3d0582a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 25 22:36:23 2010 -0400

    Correct logic for realigning a chain in evbuffer_add
    
    The old logic was both too eager to realign (it would move a whole
    chain to save a byte) and too reluctant to realign (it would only
    realign when data would fit into the misaligned portion, without
    considering the space at the end of the chain).
    
    The new logic matches that from evbuffer_expand_singlechain: it only
    realigns a chain when not much data is to be moved, and there's a
    bunch of space to be regained.
    
    Spotted by Yan Lin.

commit 74c0e862984edc5585b34abce9e6decd6aa05969
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 25 21:53:15 2010 -0400

    Avoid missed-request bug when entire http request arrives before data is flushed
    
    The trigger for starting to read the first line of a request used to
    be, "When data has arrived and we're looking for the first line."
    But that's not good enough: if the entire next request gets read
    into our bufev->inbuf while we're still processing the current
    request, we'll never see any more data arrive, and so will never
    process it.
    
    So the fix is to make sure that whenever we hit evhttp_send_done, we
    call evhttp_read_cb.  We can't call it directly, though, since
    evhttp_send_done is reachable from the user API, and evhttp_read_cb
    can invoke user functions, and we don't want to force everyone to
    have reentrant callbacks.  So, we use a deferred_cb.
    
    Found by Ivan Andropov.  This is bug 3008344.

commit 8e342e563060a5dfc4c33bd46a2a6819a5d5b2f7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 25 16:09:11 2010 -0400

    Correctly count req->body_size on http usage without Content-Length
    
    There was a dumb bug where we would look at the length of the input
    buffer immediately _after_ we drained it.

commit 58a1cc6bc8d4c309a6d8a7bd937479615d4bbffc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 25 16:00:47 2010 -0400

    Fix a bug where we would read too much data in HTTP bodies or requests.
    
    We were using evbuffer_add_buffer, which moved the entire buffer
    contents.  But if we had a valid content_length, we only wanted to
    move up to the amount of data remaining in ntoread.  Our bug would
    make us put our ntoread in the negative, which would in turn make us
    read all data until the connection closed.
    
    Found by Denis Bilenko.  Should fix bug 2963172.

commit 525da3e1eb5fc227e2af245bf3acae02b0627162
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 25 15:49:42 2010 -0400

    Fix Content-Length when trying send more than 100GB of data (!) on an evhttp.

commit f1250eb69836eff5a0bca69b48fbd5efe9d742cc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 25 15:23:41 2010 -0400

    add a requested docstring for event_rpcgen.CommandLine.__init__

commit 9c71a3413ab8f52797e504fdbd9ab52ff88f951a
Merge: ac7e52d8 006efa7d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 25 15:13:32 2010 -0400

    Merge remote branch 'github/http_and_listener'

commit ac7e52d84df955bab7845f4b52a43bf228946fc9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 25 14:29:30 2010 -0400

    Make evbuffer_add_file take ev_off_t, not off_t
    
    This change has no effect on non-windows platforms, since those
    either define off_t to 64-bits, or allow you to decide whether
    it should be 64-bits yourself via some LARGEFILE-like macro.
    
    On Windows, however, off_t is always 32-bit, so it's a bad choice
    for "file size" or "file offset" values.  Instead, I'm adding
    an ev_off_t type, and using it in the one place where we used
    off_t to mean "the size of a file" or "an offset into a file" in the
    API.
    
    This breaks ABI compatibility on Windows.

commit 006efa7dbbcaec4d412670107b893f04d38f0d83
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 25 11:50:51 2010 -0400

    Functions to actually use evhttp_bound_socket with/as evconnlistener.

commit 46ee061ca011346ec3d99c896cae8571847bdf70
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 25 11:47:05 2010 -0400

    Add a function to change a listener's callback.
    
    You can also now initialize listeners with no callbacks set; if so,
    they won't get enabled until the callback is set to non-NULL.

commit 2c66983a6d46cbd863b079a1c92c916b41efe0ba
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Oct 24 11:51:14 2010 -0400

    Simplify the logic for choosing EPOLL_CTL_ADD vs EPOLL_CTL_MOD
    
    Previously, we chose "ADD" whenever old_events==new_events, (since
    we expected the add to fail with EEXIST), or whenever old_events
    was==0, and MOD otherwise (i.e., when old_events was nonzero and not
    equal to new_events).
    
    But now that we retry failed MOD events as ADD *and* failed ADD
    events as MOD, the important thing is now to try to guess right the
    largest amount of the time, since guessing right means we do only
    one syscall, but guessing wrong means we do two.
    
    When old_events is 0, ADD is probably right (unless we're hitting
    the dup bug, when we'll fall back).
    
    And when old_events is set and != new_events, MOD is almost
    certainly right for the same reasons as before.
    
    But when old_events is equal to new events, then MOD will work fine
    unless we closed and reopened the fd, in which case we'll have to
    fall back to the ADD case.  (Redundant del/add pairs are more common
    than closes for most use cases.)
    
    This change lets us avoid calculating new_events, which ought to
    save a little time in epoll.c

commit c281aba30e69a501fc183d068894bfa47f891700
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Oct 24 11:38:29 2010 -0400

    Fix a nasty bug related to use of dup() with epoll on Linux
    
    Current versions of the Linux kernel don't seem to remove the struct
    epitem for a given (file,fd) combo when the fd is closed unless the
    file itself is also completely closed.  This means that if you do:
       fd = dup(fd_orig);
       add(fd);
       close(fd);
       dup2(fd_orig, fd);
       add(fd);
    you will get an EEXIST when you should have gotten a success.  This
    could cause warnings and dropped events when using dup and epoll.
    
    The solution is pretty simple: when we get an EEXIST from
    EPOLL_CTL_ADD, we retry with EPOLL_CTL_MOD.
    
    Unit test included to demonstrate the bug.
    
    Found due to the patient efforts of Gilad Benjamini; diagnosed with
    help from Nicholas Marriott.

commit bf11e7ddf7a3f8d6e6bd13aec944dcd37f1763ff
Merge: 70e1b607 bc98f5e6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 21 15:33:13 2010 -0400

    Merge branch 'http_uri_parse'

commit bc98f5e6bad6a8502895d992cc3413b118969e01
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 21 14:53:21 2010 -0400

    Unit tests for evhttp_uri_set*

commit 45f6869c753218a72dd44660a880237aa8daa386
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 21 14:41:12 2010 -0400

    Make evhttp_uri non-public, and give it accessor functions.

commit 70e1b607d67657c573cdfc5c1ee832bc64391ddd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 21 14:05:04 2010 -0400

    Document that two bufferevent functions only work on socket bufferevents

commit aab49b6069bc86a5cae7f0e8433f3844956dfa8e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 21 14:04:24 2010 -0400

    Add a bufferevent_get_base function

commit d9ffa899fa382c8e9a4640e4bacb434e128d0b06
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 21 12:48:13 2010 -0400

    Update the HTTP regression tests to use Libevent2 apis for non-http stuff

commit 1f507d754107355c316fe55295a8b2f8b2ba00c1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 21 12:27:16 2010 -0400

    Stop using Libevent-1 headers in regress_http

commit 2a3b5872fe1a2fa0f67d1b435b4650d337c16c4d
Merge: cd00079b 90b3ed5b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 21 12:23:10 2010 -0400

    Merge branch 'http_small_tweaks'
    
    Conflicts:
            http-internal.h

commit cd00079b2266893472fac795a69fe8aaea6c52e0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 21 12:19:28 2010 -0400

    Add evhttp_connection_get_base() to get the event_base from an http connection
    
    Based on a patch by Mark Ellzey from 27 July 2010.
    
    Closes ticket 3052406

commit 1213d3dd8b477faa80b4828e16edc467d1007f20
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 20 13:41:02 2010 -0400

    Fix a 100%-CPU bug where an SSL connection would sometimes never stop trying to write
    
    If an SSL connection becamse disabled or suspended before became open,
    it could (under the right circumstances) wind up without ever getting
    its write callback disabled.
    
    The most correct fix is probably more subtle, and involves checking
    all caseswhen a write callback is enabled or disabled.  This fix is
    more blunt, and explicitly checks whether the callback should have
    been disabled at the end of the callback to prevent infinite looping.
    
    Diagnosed with help from Sebastian Hahn

commit 2075fbcff0d8a9e06e2c3287b1cf4d400394c285
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 19 13:15:48 2010 -0400

    Add evhttp_parse_query_str to be used with evhttp_uri_parse.
    
    The old evhttp_parse_query() doesn't work well with struct
    evhttp_uri.query, since it expects to get whole URIs, rather than
    just the query portion.

commit 3a33462827ec1c31083c297a16aa0287c92a8bfe
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 19 13:02:18 2010 -0400

    Document behavior of URI parsing more thoroughly.
    
    Also, move evhttp_uri struct into http.h, since it is part of the API.

commit a5a76e689c185fb9f6f430fd8e989645b627bdb3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 19 12:35:50 2010 -0400

    Add a huge pile of tests for the new URI functions, and make them pass.

commit ad923a11f1e110b3bf03b7179cdcd15ccfcfedd6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 19 12:33:50 2010 -0400

    Improvements to tinytest_macros.h
    
    First, handle cases where we have %s in a tt_want or tt_assert.
    
    Second, add tt_want_*_op that do a tt_*_op test, but do not exit the
    test on failure.
    
    We should push these upstream to tinytest some time.

commit eaa5f1d9edd8ae2a5f637a3a07928dfee113accc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 19 11:26:59 2010 -0400

    Revise evhttp_uri_parse implementation to handle more of RFC3986

commit fadbfd4e6e2d9badd4b61d5f847c589ed84dd2c8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 18 14:43:54 2010 -0400

    Clean up error handling in uri_parse a little

commit 7d45431e15dc0d8aa88fddc4fc406e19fe54d004
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 18 14:38:48 2010 -0400

    Do not silently truncate URIs in evhttp_uri_join. Also avoid evbuffer_pullup.

commit 86212341c5f38a973e3190a2c5c36ea947ef7253
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 18 14:34:20 2010 -0400

    Make evhttp_uri_parse and friends conform to memory management standards

commit 86dd720a666aca5b95c4f913c3f705d6b7a8f17d
Author: Pavel Plesov <pavel.plesov@gmail.com>
Date:   Sun Aug 8 16:46:39 2010 +0400

    Introduce absolute URI parsing helpers.
    
    See evhttp_uri_parse(), evhttp_uri_free() and evhttp_uri_join() for details.

commit f13e449b531bb14d076e28660e2d33fb6fb255ab
Merge: 9dc5f44a 49f4bf7c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 18 14:20:06 2010 -0400

    Merge branch 'http_parse'

commit 49f4bf7c577790fad711324250ed571a0aceac8b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 18 13:58:02 2010 -0400

    Add evhttp_request_get_command so code can tell GET from POST without peeking at the struct.

commit e5870690fcd68fbb02c1367dede73864fd6a61dc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 18 13:53:31 2010 -0400

    Modernize header usage in bench_http.c

commit 9dc5f44a19a749e3d5091a2a8003741efb91cf91
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 14 22:12:32 2010 -0400

    Increment version in git to 2.0.8-rc-dev

commit ef18c994c3f80c6b7e2699309227b50a9b6dc77d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 14 18:36:07 2010 -0400

    Increment the version to 2.0.8-rc
    
    NOTE: This is not the official release until I tag it.  If you see
        this commit, and you decide that Libevent 2.0.8-rc is now
        finalized, you might get something besides 2.0.8-rc.

commit 15be0493f6fc10f9484570339f50ee363fdcc42e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 14 18:35:11 2010 -0400

    Changelog and readme for 2.0.8-rc

commit 4ebf9509f741b4cd85ff925a4009b41d62223e7c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 14 14:40:40 2010 -0400

    Fixes for MSVC compilation

commit d3b096c011606836d9b550f009a827c18445844a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 14 13:54:15 2010 -0400

    Make the --enable-gcc-warnings option include signed comparison warnings

commit e06f514d4e7bbc5d777c40400f5aecbded667854
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 14 13:51:24 2010 -0400

    Fix signed/unsigned warnings on win32

commit 6be589ae687531a992e5ce4c32de78ba5197d1d3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 14 13:48:40 2010 -0400

    Fix signed/unsigned warnings on opensolaris, where iov_len is signed

commit e5c214a4235d77610ce19298d47b01b95c2fe4c9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 14 13:16:41 2010 -0400

    Fix -Wsigned-compare warnings in test/*

commit f2763fa864a0d84c5ec9433a8693b7815a89f400
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 14 13:16:00 2010 -0400

    add limits.h to event_tagging.c so opensolaris will build

commit 5e4bafbb89623f36666e80a5bc9c956990a9ccb1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 14 13:15:32 2010 -0400

    fix a signed/unsigned warning in kqueue.c

commit 02f6259fc3f0430936defb62a94a26aba7db64a8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 14 11:44:32 2010 -0400

    New unit test for ssl bufferevents starting with connected SSLs.

commit 93bb7d8e1965054eb46b4c84b19a580928b174ee
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 14 11:41:10 2010 -0400

    Fix a case where an ssl bufferevent with CLOSE_ON_FREE didn't close its fd
    
    This could happen when we got an SSL with a BIO already set on it.

commit 223ee40fde947db7b5abe18ac4b91da7aee46a46
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 14 10:53:26 2010 -0400

    Avoid spurious reads from just-created open openssl bufferevents
    
    When handshaking, we listen for reads or writes from the
    transport. But when we're connected, we start out with writes enabled
    and reads disabled, which means we should not have the transport read
    for us.

commit 34331e456d0abb2f19e2ecfa28249deeaf410de2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 8 01:09:02 2010 -0400

    The corrected bufferevent filter semantics let us fix our openssl tests

commit ac27eb827655b344a08207bf92a0c25da94ac7eb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 8 00:59:02 2010 -0400

    Correct logic on disabling underlying bufferevents when disabling a filter
    
    Previously, whenever writing was disabled on a bufferevent_filter (or
    a filtering SSL bufferevent), we would stop writing on the underlying
    bufferevent.  This would make for trouble, though, since if you
    implemented common patterns like "stop writing once data X has been
    flushed", your bufferevent filter would disable the underlying
    bufferevent after the data was flushed to the underlying bufferevent,
    but before actually having it written to the network.
    
    Now, we have filters leave their underlying bufferevents enabled for
    reading and writing for reading and writing immediately.  They are not
    disabled, unless the user wants to disable them, which is now allowed.
    To handle the case where we want to choke reading on the underlying
    bufferevent because the filter no longer wants to read, we use
    bufferevent_suspend_read().  This is analogous to the way that we use
    bufferevent_suspend_write() to suspend writing on a filtering
    bufferevent when the underlying bufferevent's output buffer has hit
    its high watermark.

commit 34d64f8a347147aa5a6ac222f302e12b142a8f2e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 12 13:46:14 2010 -0400

    Fix serious bugs in per-bufferevent rate-limiting code
    
    Our old code was too zealous about deleting the refill events that
    would actually make connections able to read or write again after
    they had run out of bandwidth.  Under some circumstances, this could
    cause a bufferevent to never actually refill one of its
    rate-limiting buckets.
    
    Also, the code treated setting a per-connection rate-limit on a
    connection that already had a group-limit as if it were changing the
    limit on a connection whose allocation had already run out.
    
    This patch fixes both of those problems.

commit 819b1715723f1ab8bdf6f3d21d6eac859cf8950e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 12 12:59:13 2010 -0400

    Handle rate-limiting for reading on OpenSSL bufferevents correctly.
    
    We were looking at the number of bytes read on the wbio, not in the
    rbio.  But these are usually different BIOs, and the reading is
    supposed to happen on the rbio.

commit 7ad90f6a25a952836892fbd12b7ad9a43feac9be
Merge: 08ebd267 90651b32
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Oct 9 00:02:31 2010 -0400

    Merge branch '20_internal_prio'

commit a8148cedcd4cbff429cbe60e31ee084d236ccc43
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 8 13:05:13 2010 -0400

    New evhttp_uri(encode|decode) functions to handle + and NUL characters right
    
    The old evhttp_decode_uri() function would act as tough it was doing
    an (illegal, undefined) decode operation on a whole URL at once, and
    treat + characters following a ? as different from + characters
    preceding one.  But that's not useful: If you are decoding a URI
    before splitting off query parameters, you are begging to fail as soon
    as somebody gives you a value with an encoded & in it.
    
    The new evhttp_uridecode() function takes an argument that says
    whether to decode + signs.  Both uridecode and uriencode also now
    support encoding or decoding to strings with internal 0-valued
    characters.

commit 2e63a604da3f3c77800d2a2ff1681d8397ecdac6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 8 12:57:11 2010 -0400

    evhttp_encode_uri encodes all reserved characters, including !$'()*+,/:=@
    
    Perviously, some characters not listed as "unreserved" by RFC 3986
    (notably "!$'()*+,/:=@") were not encoded by evhttp_encode_uri.  This
    made trouble, especially when encoding path components (where @ and /
    are bad news) and parameters (where + should get encoded so it doesn't
    later decode into a space).
    
    Spotted by Bas Verhoeven.

commit 08ebd26730036feed0609b18e62ecf3f3cc783fb
Merge: 12057035 fdc640b0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 7 21:06:25 2010 -0400

    Merge branch 'iovmax'

commit 120570356be98c931beb91bb345c5c7a8fa44461
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 7 18:05:01 2010 -0400

    Turn some booleans in evconnlistener_iocp into one-bit bitfields.

commit 62b429afa8a8138635a891ff668613e7be3c3aa7
Author: Christopher Davis <chrisd@torproject.org>
Date:   Thu Oct 7 13:41:39 2010 -0700

    Make iocp/listener/error work; don't accept again if lev is disabled.

commit 481ef920860cbdf8be2772ee332c03b0fb57da2d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 23 17:41:49 2010 -0400

    Fix allocation error for IOCP listeners. Probably harmless, since struct event is big

commit 127d4f2195638bbfa8b693558f3eb408abdcdf24
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 23 16:49:58 2010 -0400

    Add a LEV_OPT_THREADSAFE option for threadsafe evconnlisteners

commit 3b844893859c08a17c039dccef2e07e42e7c2f69
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 6 12:35:38 2010 -0400

    Tweak evhttp_parse_query hack to avoid breaking abi

commit b1756d019d23656170d0295ed05e13c2fc201ca7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 6 11:48:52 2010 -0400

    Let evhttp_parse_query return -1 on failure
    
    We already detected certain malformed queries, but we responded by
    aborting the query-parsing process half-way through without telling
    the user.  Now, if query-parsing fails, no headers are returned, and
    evhttp_parse_query returns -1.

commit fdc640b02dada6d731452c5a02475a7766d1ecfa
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 5 21:34:07 2010 -0400

    Fix an EINVAL on evbuffer_write_iovec on OpenSolaris.
    
    The writev() call is limited to at most IOV_MAX iovecs (or UIO_MAXIOV,
    depending on whom you ask).  This isn't a problem anywhere we've
    tested except on OpenSolaris, where IOV_MAX was a mere 16.
    
    This patch makes us go from "use up to 128 iovecs when writing" to
    "use up to 128 iovecs when writing, or IOV_MAX/UIO_MAXIOV, whichever
    is less".  This is still wrong if you somehow find a platform that
    defines IOV_MAX < UIO_MAXIOV, but I hereby claim that such a platform
    is too stupid to worry about for now.
    
    Found by Michael Herf.

commit 5b7a37063647760646823215361df8605c36acd6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 5 14:29:48 2010 -0400

    Fix warnings on mingw with gcc 4.5

commit 145f221e8f1f12809a54f0ed3168a930255feee3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 5 13:06:32 2010 -0400

    Define symbolic constants to use in place of SHUT_RD etc

commit e0fd87085d5392039f7406445d1abac47fdde2f5
Author: Christopher Davis <chrisd@torproject.org>
Date:   Tue Oct 5 13:01:54 2010 -0400

    Send a shutdown(SHUT_WR) before closing an http connection
    
    This avoids getting an ECONNRESET from the TCP stack.
    
    Fixes bug 2928690

commit 0faaee016583a46006b46c5c2c82440dad1aefb8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 30 23:15:47 2010 -0400

    Fix a spurious-call bug on epoll.c
    
    We were trying to check whether any events had really been
    notified on an fd before calling evmap_io_active on it, but instead
    we were checking for an event pointer, which was always true.
    
    In practice, this patch shouldn't change much, since epoll_wait
    shouldn't return an event unless there is actually an event going
    on.
    
    Spotted by an anonymous bug reporter on Sourceforge.  Closes bug
    3078425.

commit a8b7674cd5e3636ce36aef9dc1a0cdb4bd3584f2
Merge: a78ac0fa 9c8db0f8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Sep 28 01:09:17 2010 -0400

    Merge remote branch 'github/signed_compare'

commit a78ac0facb406a056554a3fe9247e4c7fb9209a5
Merge: b3953927 d49b5e33
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 27 16:05:20 2010 -0400

    Merge remote branch 'github/win_lib'

commit d49b5e33260d0c5373187e6d0ef08e489f9a0592
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 27 15:12:55 2010 -0400

    Do not search outside of the system directory for windows DLLs
    
    Hardens against some attacks.

commit b395392746f93516bb14cc81ca8b48409b3c359f
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Mon Sep 27 21:14:28 2010 +0200

    Fix compile in kqueue.c
    
    Commit 38d09606 removed the evsigbase pointer, but forgot to remove
    an assignment to it in kqueue.c.

commit 9c8db0f804360325e37f032c56c46ef627d2aaf7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 23 22:45:55 2010 -0400

    Fix all warnings in the main codebase flagged by -Wsigned-compare
    
    Remember, the code
       int is_less_than(int a, unsigned b) {
          return a < b;
       }
    is buggy, since the C integer promotion rules basically turn it into
       int is_less_than(int a, unsigned b) {
          return ((unsigned)a) < b;
       }
    and we really want something closer to
       int is_less_than(int a, unsigned b) {
          return a < 0 || ((unsigned)a) < b;
       }
    .
    
    Suggested by an example from Ralph Castain

commit 045eef4cdea75c12be49327f961d6d2002c105dd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 23 14:23:45 2010 -0400

    Unit tests for listener error callbacks

commit c4be8d82b36a17537b6cc805945e0cf21ab1724c
Author: Simon Perreault <simon.perreault@viagenie.ca>
Date:   Mon Sep 20 12:47:39 2010 -0400

    Add error callback to evconnlistener

commit e1198997bc58403376ec5909ebd8ef872ee48591
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Sep 21 22:44:39 2010 -0400

    Make event.c debugging messages report fds

commit ec2b05edddee6144c33ceff23421598fea7c406f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Sep 21 22:23:32 2010 -0400

    Make debugging output for epoll backend more comprehensive

commit 90651b327a9819e890e8ababe1e46f3fa989850c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 17 00:24:50 2010 -0400

    Put internal events at highest priority
    
    (If we allow user events to starve internal events, then internal events
    never actually happen, signals don't get acked, etc)

commit 38d09606acd9dfa9aba64390435a0901e491317f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 15 12:50:31 2010 -0400

    Remove event_base.evsigbase; nothing used it.

commit 4858b7949c665c3b6dafbf69665b9d126fc33e8f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 15 01:54:51 2010 -0400

    Remove the now-useless evsig_caught and evsig_process

commit 95a7d418ab4ff332bc299813e6fc83c9be4ed0ec
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 15 01:40:02 2010 -0400

    Make default signal backend fully threadsafe
    
    Jason Toffaletti discovered with helgrind that our signal handler was
    messing with evsig_base, which can be set from lots of places in the
    code.  Ordinarly, we'd just stick a lock on it, except that it is
    illegal (and genuinely error-prone) to call pthread_mutex_acquire()
    from inside a signal handler.
    
    The solution is to only store the fd we write to in a static variable,
    write the signal number to the fd, and put evsig_cb in charge of
    activating signal events.
    
    I have no idea how we'll cope if we want to enable this to handle
    siginfo (where available) in the future.

commit 720bd933c8a4e9f0b850be075e055eea98767665
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 15 01:08:39 2010 -0400

    Warn when using the error-prone EV_SIGNAL interface in an error-prone way.  Also, fix a couple of race conditions in signal.c
    
    When using the signal.c signal backend, Libevent currently only allows
    one event_base to actually receive signals at a time.  (This has been
    the behavior since at least 1.4 and probably much earlier.)  Now, we
    detect and warn if you're likely to be racing about which signal goes
    to which thread.
    
    We also add a lock to control modifications of the evsig_base field,
    to avoid race conditions like those found by Jason Toffaletti.
    
    Also, more comments.  Comments are good.

commit 040a019f52a7933b2478fe41c3ab0b56835012b1
Author: Simon Perreault <simon.perreault@viagenie.ca>
Date:   Thu Sep 9 17:19:20 2010 -0400

    Obey enabled status when unsuspending

commit f0bd83ea88788c595fa78ed5da4a91efd36eca48
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 9 16:13:09 2010 -0400

    Bump to the latest version of tinytest
    
    This lets us do without libevent-specific code in tinytest.c, and
    lets us add a feature to skip individual tests from the command
    line.

commit a5ce9ad4aff34fc10689d0c3b01ab2b7d55fabf0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 9 16:01:42 2010 -0400

    Make SSL tests cover enabling/disabling EV_READ.
    
    I want my 80% coverage.

commit 5811d74c6b39b5b619b19a2cebe0e709942effc3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 9 15:59:18 2010 -0400

    Bump version to 2.0.7-rc-dev

commit fe008ed656766266b93cdf2083f5b8bc50e6aad3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 9 14:59:27 2010 -0400

    Make all versioning changes for 2.0.7-rc, and add ChangeLog

commit d98511c027320d6c425ff11720e87e04e5594626
Author: Christopher Davis <chrisd@torproject.org>
Date:   Thu Sep 9 14:36:45 2010 -0400

    Make event_base_virtual_del() notify the base if needed

commit 2756a10cd94485109caae29dc0c914acd25f5137
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 9 13:43:31 2010 -0400

    Add a missing time.h include to test/regress_thread.c

commit fb36f9a7e5456db948263dfb800d2e5bddb27765
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 9 13:00:54 2010 -0400

    Fix an uninitialized-variable warning on windows

commit 71b680142120293fb730ac34576c80f63541cd63
Author: Christopher Davis <chrisd@torproject.org>
Date:   Wed Sep 8 20:33:21 2010 -0700

    Don't decrement virutal event count twice in connect_complete.

commit 3ec65d6984833310ec125a91c88ef8f7654464f4
Author: Christopher Davis <chrisd@torproject.org>
Date:   Wed Sep 8 19:55:13 2010 -0700

    Fix a few Windows compile warnings.

commit 25b6a74be68bc1e8bfcb69193505e7e6d4d39ef5
Merge: 6f821710 1115366e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 8 14:53:57 2010 -0400

    Merge branch 'tests'

commit 6f8217101366642d54d89694c9ff31a9b9a85789
Merge: de412948 e7dc501e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 8 14:52:37 2010 -0400

    Merge remote branch 'github/win_notify'

commit de412948a1f2cf0dce9e0f4c5095e2a5ce5c076e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 8 14:52:24 2010 -0400

    Add a missing header for regress_thread.c

commit e7dc501ee5254083feaee97a93d4a47b04b93553
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 8 14:40:51 2010 -0400

    Implement EVBASE_NEED_NOTIFY on win32

commit 911e0db8f095e9fd386fd90087603327a5339c7c
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Wed Sep 8 20:29:39 2010 +0200

    Fix a compile warning in regress_thread.c

commit 3658b1696df8784b156cc6643a36f7cfa69e0213
Merge: 9580e282 17a14f1a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 8 14:12:12 2010 -0400

    Merge remote branch 'chrisd/iocp-fixes4'
    
    Conflicts:
            test/regress_thread.c

commit 9580e282d7e5801802e935956902a1948525d474
Merge: 57d3413c ce85280b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 8 14:00:45 2010 -0400

    Merge branch 'th_notify_fd_reinit'

commit ce85280beb56c4b1c7e69c542878a8f1fe647f28
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 8 13:29:06 2010 -0400

    Improve testing of when thread-notification occurs

commit 4632b78e01a312ae716bc17322c462be53182eca
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 8 13:22:55 2010 -0400

    Minimize calls to base_notify implementation functions, thereby avoiding needless syscalls
    
    The trick here is that if we already told the base to wake up, and it
    hasn't woken up yet, we don't need to tell it to wake up again.  This
    should help lots with inherently multithreaded code like IOCP.

commit c7a06bfaee7f96327779972214e8b744170531ff
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 8 13:02:58 2010 -0400

    Avoid needlessly calling evthread_notify_base() when the loop is not running
    
    Also make sure that we always hold the base lock when calling evthread_notify_base.

commit 57d3413c55689d623dad4eb2765d8a3bed9b586b
Merge: 42090072 5de2bcb7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 8 11:39:24 2010 -0400

    Merge remote branch 'github/globals'

commit 17a14f1af2ace0201baa1b5bbba031296e62d879
Author: Christopher Davis <chrisd@torproject.org>
Date:   Wed Sep 1 11:04:57 2010 -0700

    Only process up to MAX_DEFERRED deferred_cbs at a time.
    
    If threads queue callbacks while event_process_deferred_callbacks is
    running, the loop may spin long enough to significantly skew timers.
    A unit test stressing this behavior is also in this commit.

commit 2447fe88860c40e968261ad8ea059166cb84a280
Author: Christopher Davis <chrisd@torproject.org>
Date:   Sat Aug 28 04:07:48 2010 -0700

    Add event_config_set_num_cpus_hint for tuning thread pools, etc.

commit 499452f4c24f172bf6846599e3886838a4207aca
Author: Christopher Davis <chrisd@torproject.org>
Date:   Sat Aug 28 02:44:11 2010 -0700

    IOCP-related unit test tweaks

commit 76f7e7ae745ad730795f0a4a3bc1299a00137cc2
Author: Christopher Davis <chrisd@torproject.org>
Date:   Tue Aug 17 05:02:00 2010 -0700

    Some IOCP bufferevent tweaks.
    
    - Increment reference count of bufferevents before initiating overlapped
      operations to prevent the destructor from being called while operations
      are pending. The only portable way of canceling overlapped ops is to
      close the socket.
    
    - Translate error codes to WSA* codes.
    
    - Better handling of errors.
    
    - Add an interface to add and del "virtual" events. Because IOCP
      bufferevents don't register any events with the base, the event loop
      has no way of knowing they exist. This causes the loop to terminate
      prematurely. event_base_{add,del}_virtual increment/decrement base's
      event count so the loop runs while there are any enabled IOCP
      bufferevents.

commit d844242f9b138be4896942ded25d74a91bf29901
Author: Christopher Davis <chrisd@torproject.org>
Date:   Sat Aug 28 02:08:27 2010 -0700

    Stop IOCP when freeing the event_base.

commit 03afa209de96d67f1a4b935460aeabe63f5ef24f
Author: Christopher Davis <chrisd@torproject.org>
Date:   Mon Aug 16 01:23:57 2010 -0700

    IOCP-related evbuffer fixes.
    
    - Prevent evbuffer_{add,prepend}_buffer from moving read-pinned chains.
    - Fix evbuffer_drain to handle read-pinned chains better.
    - Raise the limit on WSABUFs from two to MAX_WSABUFS for overlapped reads.

commit 1115366e95388de70996b5aafda17363db2a44fd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Sep 7 10:28:15 2010 -0400

    Fix a few memory leaks in the tests

commit 42090072c15fedc50231bfbce347d4ffb5432e31
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 6 15:47:07 2010 -0400

    Move the "function to getsockname() on a listener" to regress_testutils
    
    This reverts commit fab50488fcb741884ccdfa7b83643eac3e5c9cbf.
    
    The function was, on reflection, not important enough to break the feature
    freeze, since it's trivial to build on your own.

commit c51826ff50fe030f734a1b1687949e1fb621ea67
Merge: b0f284cb ca9048f1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 6 15:40:13 2010 -0400

    Merge remote branch 'github/sysqueue_include_order'

commit b0f284cb18a6aecb8a5c2a398b0738ba3662c4bc
Author: Shuo Chen <giantchen@gmail.com>
Date:   Mon Sep 6 10:10:17 2010 -0400

    Fix event_del(0) instance in bench.c

commit 749128b2cfe400755b08981f217064e2a5a64641
Merge: 150599e6 e50c0fcc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Sep 4 22:02:32 2010 -0400

    Merge remote branch 'github/win32_posix_underscore'

commit 150599e6e2a6b8a6d8a5b55cee59406c13a73e2f
Merge: b5dd8064 47882773
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Sep 4 22:00:38 2010 -0400

    Merge remote branch 'github/cdecl'

commit b5dd8064fc42bd788c0ee46b483741419c152e39
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 3 22:00:25 2010 -0400

    Fix uninitialized port var in http_delete_test.  Last one, I hope.

commit 3b3fb7438dd7e7108d77c8d61290cbd68f7633b4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 3 21:03:25 2010 -0400

    Fix uninitialized variables in http_bad_request_test. (oops)

commit a97320ac579e58e685c19393e2599accfb5edbe5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 3 18:48:31 2010 -0400

    Allow more than one copy of regression tests to run at once
    
    Mostly this was a matter of just removing all the hardwired ports in
    the test code.  The http/connection_retry test is still a little
    screwy, though.

commit 195214360c7cb107e86bfaa389812c879873f19c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 3 16:42:16 2010 -0400

    Expose a function to add a nameserver by sockaddr

commit fab50488fcb741884ccdfa7b83643eac3e5c9cbf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 3 16:41:16 2010 -0400

    Expose a function to getsockname() on a listener's fd.

commit 7ea8e89d5cce36c7f27ea62c9a68a9208266d569
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 3 15:12:35 2010 -0400

    Prefer autoreconf -ivf to manual autogen.sh
    
    Suggested by Ralph Castain

commit 478827739c0365f398a63f86c08f588ae9a12401
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 2 13:21:17 2010 -0400

    Fix pointer-to-__cdecl-function syntax

commit e50c0fcc85245881eb67dacb5f5e54e0b2482655
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 2 11:10:50 2010 -0400

    Use the _func() replacements for open, fstat, etc in evutil.c on win32
    
    Remember that in a fit of ANSI C compliance, Microsoft decided to
    screw portability by renaming basically all the functions in unistd.h to
    get prefixed with an understore.
    
    For some reason, mingw didn't seem to mind, but at least some people's
    compilers did: see bug 3044490.

commit f0056d041bd890dff8757a3472dd5fa9a1066405
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 2 12:06:58 2010 -0400

    Declare signal handler function as "__cdecl" on Windows.
    
    I swear, they must have half a dozen different calling conventions.
    
    (goes to check)
    
    Holy crud.  They actually do.  There's __cdecl, __stdcall, __fastcall,
    "thiscall", "naked" and the obsolete "__pascal", "__fortran", and
    "__syscall".  And don't forget WINAPI and __far.
    
    Anyways, this should fix 3044488 if I got it right.

commit ca9048f12cf441625ac3e90edb219d7f4c60b430
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 2 11:36:44 2010 -0400

    Move evkeyvalq into a separate header for evhttp_parse_query users
    
    The evhttp_parse_query API is a bit misdesigned; all the other
    evkeyvalq stuff is abstract and lets you get away with having a header
    stub, but evhttp_parse_query seems to require that you instantiate an
    empty evkeyvalq of your own.

commit d3ceca800eb6478b9e0b74680e2bd247d8213187
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 2 11:27:57 2010 -0400

    Declare evkeyvalq and event_list even if event_struct.h comes before sys/queue.h
    
    Fixes bug 3036645 reported by Mihai Draghicioiu

commit 495ed66705d5790de031f9591b47afcbe4fc1156
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 1 16:36:30 2010 -0400

    Close th_notify_fds and open a new pair on reinit
    
    After a fork, you want subthreads to wake up the event_base in the
    child process, not to have the child process and the main process
    fight over who wakes up whom.
    
    Related to a problem found by Nicholas Marriott while debugging
    3048812.

commit 5de2bcb70fa7905d26e608728db24ece01f0c675
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 1 16:03:39 2010 -0400

    On windows, make lock/thread function tables static
    
    This requires us to have a separate implementation of the lock macros
    that indirects to a set of functions.  Fortunately, this isn't too
    hard to do.
    
    This may be a fix for bug 3042969, where our openssl dll and our
    libevent dll each got their own version of the thread stuff.

commit 5218d2a8b186bcf28ffe0a61e321a29585683b45
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 1 15:56:22 2010 -0400

    Make defer-internal.h use lock macros, not direct cess to lock fns

commit 1fdec20f8fb1a4e1bc2eeb66831f9ad5c3455888
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 1 15:01:39 2010 -0400

    Stop using global arrays to implement the EVUTIL_ctype functions
    
    These apparently made libtool sad on win32, and the function call
    overhead here should be negligable anyway.

commit acc4aca49e246a46e03f8978517c9b3d23b1baea
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 30 11:35:06 2010 -0400

    Fix a bug in our win32 condition implementation
    
    The do ... while loop in our wait code could spin while waiting
    because the event object wasn't reset until there were no longer any
    events waiting to be woken up.  We also want to reset the event object
    if the count of events to wake up reaches zero.
    
    Found by Chris Davis.  Fixes bug 3053358.

commit d61b2f33861eacdc0f9d343d38522fd91c1b7e72
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 26 15:09:58 2010 -0400

    Fix an issue with forking and signal socketpairs in select/poll backends
    
    Nicholas Marriott identifies an issue where a signal socketpair
    doesn't get recreated if the event backend doesn't set event_reinit.
    
    See bug 3048812
    
    There may be a similar issue with respect to th_notify_fd

commit 041989fb6600e9eb4abe3075da721199e771e920
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 17 14:44:12 2010 -0400

    Rename regress_pthread.c to regress_thread.c

commit f1074b776a08aa1735752484e25377889140a622
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 23 12:01:45 2010 -0400

    Detect events with no ev_base; warn instead of crashing

commit 743f8665395e7e06800e1a09a0ae701b72290d02
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 23 11:48:46 2010 -0400

    Honor NDEBUG; build without warnings with NDEBUG; make NDEBUG always-off in unit test code

commit 970e6ad2ba4e42963d51c032ae8f9d2bdf2cefda
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 19 14:00:06 2010 -0400

    Avoid deadlock when activating signals.
    
    Fixes bug 3048812.
    
    Based on patch by Nicholas Marriott.

commit 6123d1298fb3433986f35b2eef90d28282e53132
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 19 09:38:44 2010 -0400

    Fix kquue correctness test on x84_64
    
    Apparently, in our configure.in check for a working kqueue, we were
    leaving some fields unset that seemed to irritate 64-bit kqueue a lot.
    
    Found by Christopher Layne

commit 4c32b9de2c707beaf09178e0b7793efa3f585669
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 18 12:02:25 2010 -0400

    Fix logic error in win32 TRY_LOCK that caused problems with rate-limiting

commit d0b884338f62fba233e3f0d00193e6908c84ee2f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 18 10:49:12 2010 -0400

    Set close-on-exec bit for filedescriptors created by dns subsystem.
    
    Based on patch for 1.4 by Ralf Schmitt.

commit da6e7cd49588f6149166e05e7b7b725b360ab72c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 17 13:26:03 2010 -0400

    Correctly detect failure to delete bufferevent read-timeout event
    
    Gilad Benjamini noted that we check the error code for deleting a
    write-timeout event twice, and the read timeout not at all.  This
    shouldn't be a bit problem, since it's really hard for a delete to
    fail on a timeout-only event, but it's worth fixing.
    
    Fixes bug 3046787

commit 5fb10958249a89b2e7f3711fe0eed624086c5336
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 16 22:55:45 2010 -0400

    Add a unit test for conditions

commit d74ae381e00cec22e562c72583739d70bc9aa1bd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 16 12:38:22 2010 -0400

    Make the regress_pthread.c tests work on windows with current test APIs

commit e0972c21389a45c60606ce2b842311c27fea2147
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 17 13:18:18 2010 -0400

    Use conditions instead of current_event_lock to fix a deadlock.
    
    Avi Bab correctly noted as bug 3044479 the fact that any thread
    blocking on current_event_lock will do so while holding
    th_base_lock, making it impossible for the currently running event's
    callback to call any other functions that require th_base_lock.
    
    This patch switches the current_event_lock code to instead use a
    condition variable that we wait on if we're trying to mess with
    a currently-executing event, and that we signal when we're done
    executing a callback if anybody is waiting on it.

commit d4977b52f07d61e215e5d5e98af2216719c06d16
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 17 13:15:34 2010 -0400

    Add a condition variable backend, with implementations for pthreads and win32
    
    The interface from the user's POV is similar to the locking
    implementation: either provide a structure full of function
    pointers, or just call evthread_use_*_threads() and everything will
    be okay.
    
    The internal interface is meant to vaguely resemble pthread_cond_*,
    which Windows people will better recognize as *ConditionVariable*.

commit 3920172821c2ad7862c2e4dab4d45adb1356a724
Author: Gilad Benjamini <gilad@altornetworks.com>
Date:   Fri Aug 13 17:19:18 2010 -0400

    Make definition of WIN32_LEAN_AND_MEAN in event.h conditional.
    
    (Inclusion order might trigger a warning for redefinition on Windows.)

commit 60433a0a1a4f9efb5c2eb130f0dcd721cab67ec7
Author: Gilad Benjamini <gilad@altornetworks.com>
Date:   Fri Aug 13 17:08:59 2010 -0400

    Clean up syntax on TAILQ_ENTRY() usage
    
    Though the C standards allow it, it's apparently possible to get MSVC
    upset by saying "struct { int field; } (declarator);" instead of
    "struct {int field; } declarator;", so let's just not do that.
    
    Bugfix for 3044492
    
    (commit msg by nickm)

commit a4af9be10a7b725d77a2ddbfa5d6ef8712521500
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 13 11:41:37 2010 -0400

    Make include/event2/event-config.h not included in source dist
    
    As a generated file, it shouldn't get included in our source
    distribution.  Apparently there is an automake incant for this:
    nobase_ even stacks with nodist_ .

commit 4022b287f8b096edeea9b461b4a0e5eb3e7ebebf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 13 11:34:39 2010 -0400

    Change include order in Makefile.nmake
    
    If there is an event-config.h in include/event2 (either because we
    screwed up packaging like in 2.0.6-rc or because we previously tried
    building with mingw and we didn't make distclean in the middle), we
    want MSVC to find the one one in WIN32-Code/include/event2 first.
    
    Found by Gilad Benjamini.

commit 4991669b7c7a781ec11740dd7b41683c0175ab4b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 10 21:05:52 2010 -0400

    Update the whatsnew-2.0.txt document

commit 33200e72de88d505c036c2ae1fec28f519ac72af
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 10 15:03:14 2010 -0400

    Document that DNS_NO_SEARCH is an obsolete alias for DNS_QUERY_NO_SEARCH

commit 3808168d21afac0846758dbd2d913f49da8a4155
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 10 15:02:50 2010 -0400

    Completely remove the (mostly-removed) obsolete thread functions.

commit 9b5c19ac870eae15039146c55f574eea744d31b3
Merge: 0bffe43a ebcb1f03
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 10 11:46:00 2010 -0400

    Merge branch 'more_pkgconfig'

commit ebcb1f0387efa1805a01a4a325da67ad786ca201
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 10 11:11:25 2010 -0400

    Add pkgconfig files for libevent_{openssl,pthreads}

commit 90b3ed5bc840480f1c1d40f93bc2d850e3830d64
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 9 13:25:50 2010 -0400

    Add some comments to http.c and make a few functions static.

commit 0bffe43a15fbd43bc7826acb88a3bada528c8adf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 9 12:08:40 2010 -0400

    Fix a nasty dangling-event bug when using rate-limiting groups
    
    When we freed a bufferevent that was in a rate-limiting group and
    blocked on IO, the process of freeing it caused it to get removed
    from the group.  But removing the bufferevent from the group made
    its limits get removed, which could make it get un-suspended and in
    turn cause its events to get re-added.  Since we would then
    immediately _free_ the events, this would result in dangling
    pointers.
    
    Fixes bug 3041007.

commit ff481a8e43999c4ba1556bc472b5e69fce7ea353
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 6 23:22:01 2010 -0400

    Increment vesion to 2.0.6-rc-dev

commit 556d0f4001ae5dae2e98584a7b23e3def6339681
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 6 21:19:44 2010 -0400

    Increment versions to 2.0.6-rc

commit f65826404179bdc059eefb4fe4f156170569e034
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 6 21:11:01 2010 -0400

    Changlog and new acknowledgements for 2.0.6-rc

commit ec347b92251e188a13cbbfe0fe2e00aa14aeeca5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jul 7 16:45:03 2010 -0400

    Move event-config.h to include/event2
    
    This change means that all required include files are in event2, and
    all files not in event2/* are optional.

commit 5fa30d2bf443e9fc4c6ab9bf01f761006b97132d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 6 17:13:27 2010 -0400

    Fix evdns build with -DUNICODE
    
    It turns out that GetProcAddress always takes its second argument as
    a C string, regardless of whether unicode is on or not.

commit 28f31a4f8da9367a950e89f28a4ec2314d0e48e0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 6 16:36:23 2010 -0400

    Fix unit tests with -DUSE_DEBUG enabled
    
    If you were to enable USE_DEBUG and slog through all 700+ MB of
    debugging output, you'd find that one of the unit tests failed,
    since it tested the debug logging code, but the string it expected
    and the string it logged differed by a tab vs 2 spaces.

commit ea1ea3d6eedcaa95ab10eb29401aaa600356e028
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 6 13:34:51 2010 -0400

    Make test-changelist count cpu usage right on win32

commit 9b602096758de9361fdb61b658260da58b03333f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 6 13:03:17 2010 -0400

    Use AF_INET socketpair to test sendfile on Solaris

commit 57b30cd7ccf7aca1d89812389a1e320d012f7a9e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 6 13:01:32 2010 -0400

    Turn our socketpair() replacement into its own function
    
    This patch splits the formerly windows-only case of evutil_socketpair()
    into an (internal-use-only) function named evutil_ersatz_socketpair(), and
    makes it build and work right on non-Windows hosts.
    
    We need this for convenience to test sendfile on solaris, where socketpair
    can't give you an AF_INET pair, and sendfile() won't work on AF_UNIX.

commit de1f5d6d87c8122ede59124ea5d9255cb609af78
Author: Christopher Davis <chrisd@mangrin.org>
Date:   Fri Aug 6 09:33:55 2010 -0400

    Remember to initialize timeout events for bufferevent_async
    
    Fixes segfaults in unit tests.

commit 170ffd2b1d3d8458d39d9f74099c0b381557544b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 5 15:57:30 2010 -0400

    Increase the tolerance in our unit tests for sloppy clocks.
    
    (Apparently openbsd in virtualbox just doesn't keep very accurate time.)

commit e996b3d411dcdf58f0d8b4e527402db089cc878d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 5 15:51:16 2010 -0400

    Make tests quieter on local dns resolver failure

commit 4558ce23220e28e22140afd61a60399f0a8fbb76
Merge: b2c6202d 009f3005
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 4 17:31:28 2010 -0400

    Merge branch 'openssl_ratelim'

commit b2c6202d65f3a057ed76f0296b52156980f2482a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 4 15:52:32 2010 -0400

    Fix an assertion bug in test-ratelim
    
    If the rate limit was low enough, then the echo_conns wouldn't finish
    inside the 300 msec we allowed for them to close.  Instead, count the
    number of connections we have, and keep waiting until they are all
    closed.

commit 42f6b6241444ff66b08956a7c7f4e13f2f5f49f3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 4 15:51:14 2010 -0400

    Add option to test-ratelim to test min_share

commit 6ae53d676242227bc199c69de9244d6c3599ab44
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 4 15:44:08 2010 -0400

    Add an interface to expose min_share in ratelimiting groups

commit 009f300532481d4f3b7237f9a59fd306b371b8c0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 4 14:54:38 2010 -0400

    Fix rate-limit calculation on openssl bufferevents.
    
    When you're doing rate limiting on an openssl connection, you nearly
    always want to limit the number of bytes sent and received over the
    wire, not the number of bytes read or written over the secure
    transport.

commit 13b912e4acb6fea5802ae3005898535af2ae5263
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Sun Aug 1 21:39:48 2010 +0200

    Fixed compilation of sample/le-proxy.c on win32

commit 42a8c7111264ff1469083e50bd5b0c0ee494725b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jul 31 17:10:04 2010 -0400

    Build more cleanly with NetBSDs that dislike toupper(char)
    
    To be fair, when char can be signed, if toupper doesn't take negative
    characters, toupper(char) is a very bad idea.  So let's just use the
    nice safe EVUTIL_TOUPPER instead.  (It explicitly only upcases ASCII,
    but we only use it for identifiers that we know to be ASCII anyway).

commit 840a72fbd52197e443efe413650ef3556cfcee60
Author: Joachim Bauch <mail@joachim-bauch.de>
Date:   Thu Jul 29 20:32:40 2010 -0400

    Fix badly-behaved subtest of dns/bufferevent_connect_hostname
    
    The bufferevent_connect_hostname test was specifying AF_INET, but the
    gethostbyname test we were using to see what error to expect was using
    PF_UNSPEC, leading to possible divergence of results.

commit 9e725f72e72cb9b37b39915a260f9aee265f2c59
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 29 18:12:05 2010 -0400

    Improve error message for failed epoll to make debugging easier.

commit cc2379d2642d2b9d0cbb1098ce1b3095e14551b3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 26 14:48:32 2010 -0400

    Constify a couple of arguments to evdns_server_request_add_*_reply

commit e1c1167cbe7c3c7e60267abe242a2fa91f4c2dfe
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 22 14:38:08 2010 +0200

    Replace (unused,always 0) is_tcp argument to evdns_add_server_port*() with flags
    
    Since we weren't using it for anything, and we always failed if it was
    set, we're allowed to change the future semantics of setting it.

commit 7e87a599bb004574de8e6a9cdd13a27f561df7e9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jul 21 14:33:42 2010 +0200

    Stop asserting when asked for a (unsupported) TCP dns port. Just return NULL.

commit c991317409f7787223fc11541100d0b0f60afa20
Author: Mike Smellie <mike.j.smellie@gmail.com>
Date:   Mon Jul 19 15:31:19 2010 +1200

    Change bufferevent_openssl::do_write so it doesn't call SSL_write with a 0 length buffer
    
    I was running into a problem when using bufferevent_openssl with a
    very simple echo server.  My server simply bufferevent_read_buffer 'd
    data into an evbuffer and then passed that evbuffer straight to
    bufferevent_write_buffer.
    
    The problem was every now and again the write would fail for no
    apparent reason. I tracked it down to SSL_write being called with the
    amount of data to send being 0.
    
    This patch alters do_write in bufferevent_openssl so that it skips
    io_vecs with 0 length.

commit 7c926916b21b88d6c3d6f6aff36406023c4aa89c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 19 15:14:10 2010 +0200

    Make test/test.sh call test-changelist
    
    Eventually test-changelist should expand to try more cases, maybe
    query the status of the actual changelist somehow, and integrate it
    with the rest of the unit tests.
    
    Also, add test-changelist to gitignore.

commit cb927a51731188a4135906b6d7518c04ce12b05e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 19 15:03:43 2010 +0200

    Fix whitespace.

commit b00d4c0452e59b9ca8c8d4454078e1538a3bac8b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 19 14:58:08 2010 +0200

    Remove unused variables in test/test-changelist.c

commit cf249e7d997743523ef5bf8b5328697751d303bc
Author: Mike Smellie <mike.j.smellie@gmail.com>
Date:   Mon Jul 19 13:44:56 2010 +1200

    Possible fix to 100% cpu usage with epoll and openssl
    
    I'm running a fairly simple bit of test code using libevent2 with epoll and
    openssl bufferevents and I've run into a 100% cpu usage problem.
    
    Looking into it 100% usage was caused by epoll_wait constantly
    returning write events on the openssl socket when it shouldn't really have
    been looking for write events at all (N_ACTIVE_CALLBACKS() was returning 0
    also).
    
    Looking a bit deeper eventbuffer_openssl socket seems to be requesting
    that the EV_WRITE event be removed when it should, but the event isn't
    actually being removed from epoll.
    
    Continuing to follow this I think I've found a bug in
    event_changelist_del.
    
    For evpoll event_del calls event_changelist_del which caches the change
    which is then actioned later when evpoll_dispatch is called.
    
    In event_changlist_del there is a check so that if the currently changed
    action is an add then the cached action is changed to a no-op rather than a
    delete (which makes sense). The problem arises if there are more than
    two add or delete operations between calls to dispatch, in this case it's
    possible that the delete is turned into a no-op when it shouldn't have
    been.
    
    For example starting with the event on, a delete followed by an add and
    then another delete results in a no-op when it should have been a delete (I
    added a fair bit of debug output that seems to confirm this behaviour).
    
    I've applied a small change that checks the original old_event stored with
    the change and only converts the delete to a no-op if the event isn't on in
    old_event. This seems to have fixed my problem.

commit 928b7d4960e609e312180b93952c09449bf2d8e3
Merge: 65abdc20 fc5e0a23
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 16 12:38:23 2010 -0400

    Merge branch 'pncalls_fix'

commit 65abdc2011fe1019471cddff78d3cf596b2bccbe
Author: niks <niksniksniks@sourceforge.net>
Date:   Fri Jul 16 09:11:09 2010 -0400

    Fix wrong sie calculation of iovec buffers when exact=1
    
    The old code had a bug where the 'exact' flag to 1 in
    _evbuffer_read_setup_vecs would never actually make the iov_len field
    of the last iovec get truncated.  This patch fixes that.

commit 7c2dea1615fa1488c9cadc9f5aeb885c1ba26a60
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 13 11:06:08 2010 -0400

    Pass flags to fcntl(F_SETFL) and fcntl(F_SETFD) as int, not long
    
    Everybody but Linux documents this as taking an int, and Linux is
    very tolerant of getting an int instead.  If it weren't, everybody
    doing fcntl(fd,F_SETFL,O_NONBLOCK) would break, since the glibc
    headers define O_NONBLOCK as an int literal.

commit e73cbde15f7fe71649c2d9783a03a805edc10027
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 8 14:41:02 2010 -0400

    Suppress a spurious EPERM warning in epoll.c
    
    It's okay for us to get an EPERM when doing an EPOLL_DEL on an fd; it
    just means that before we got a chance to the EPOLL_DEL, we closed the
    fd and reopened a new non-socket that wound up having the same fd.
    
    Partial fix for Bug 3019973.

commit fc5e0a23442f04ccb3b10355a8c5d05419bf0f6c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 5 14:39:39 2010 -0400

    Don't race when calling event_active/event_add on a running signal event
    
    There was previously no lock protecting the signal event's
    ev_ncalls/ev_pncalls fields, which were accessed by all of
    event_signal_closure, event_add_internal, event_del_internal, and
    event_active_nolock.  This patch fixes this race by using the
    current_event_lock in the same way it's used to prevent
    event_del_internal from touching an event that's currently running.

commit 61e1eeec6f914a0c00955e7f376f17010446c78e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 5 13:24:45 2010 -0400

    Tidy up the code in evthread_make_base_notifiable a little
    
    Previously, we had a few conditional statements with the "if (...)"
    inside an #ifdef and the body outside.  That kind of thing is hard to
    read.

commit a5bc15b2e114a39d7b4f14bd1ba17182d6f07ed2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 5 13:24:12 2010 -0400

    Drain th_notify_fd[0] more bytes at a time.

commit 17522d2af846bdeb18bd7e39527caea03a021afa
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 5 13:17:47 2010 -0400

    Fix a deadlock related to event-base notification.  Diagnosed by Zhou Li, Avi Bab, and Scott Lamb.
    
    The problem was that the thread doing the notification could block on
    write in evthread_notify_base_default while holding the th_base_lock.
    The main thread would never drain th_notify_fd[0], since it would need
    th_base_lock to actually trigger events.

commit d89fdba424c654445d0f927670691d9b55f20846
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 5 12:28:22 2010 -0400

    Make sample/hello_world work on windows
    
    We forgot to include the WSAStartup call in main().
    
    Patch from an anonymous user on Sourceforge.
    
    Fixes bug 3025354.

commit 085987093f186dc6eb1145ae861af0d34fc0d9fd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 5 12:26:21 2010 -0400

    never let bufferevent_rlim functions return negative

commit 142500317e84517472a548637efb2844d63cbd47
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Wed Jun 23 01:15:15 2010 +0200

    Really only add libevent_core.la to LIBADD on mingw
    
    Commit fdc629736e1 tried to do this, but added it for mingw and
    for everything else. Fixes a segfault in bufferevent unittests.

commit 215e629cd4244f40769e09df5951c6cbe66ed246
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 21 12:26:21 2010 -0400

    Add bufferevent_lock()/bufferevent_unlock()
    
    Although bufferevent operations are threadsafe, sometimes you need
    to make sure that a few operations on a single bufferevent will all
    be executed with nothing intervening.  That's what these functions
    are for.

commit 7b259b6796fc34948402805e88184c29400db159
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 21 12:24:49 2010 -0400

    Fix sentence fragment in docs for event_get_struct_event_size()

commit 7510aac3b900d876024f968d8fbbb72f6f49671b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 21 12:23:32 2010 -0400

    Unit test for event_get_struct_event_size()

commit 9659eced03c101bf83205c56383f7f52f7f9ee09
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jun 19 18:23:16 2010 -0400

    Add a comment to describe our plan for library versioning

commit b2d7440a9121ab372e8b2b6bf2cec8185bb6b10e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jun 19 18:22:48 2010 -0400

    Set library version for libevent_pthreads correctly

commit e21f5d15ebcc42a2f3300f59afad0c599a0f41a2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jun 19 18:21:40 2010 -0400

    Document a change in the semantics of event_get_struct_event_size()

commit 8a4406230824ed7d6bc5b9c12b2d8a9293f71c94
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 17 10:33:06 2010 -0400

    Have autogen.sh pass --force-missing to automake
    
    Previously, our autogen.sh script wouldn't tell automake to update
    older versions of its copied-in scripts, which would cause problems if
    they got sufficiently out-of-date.

commit 9b14911654dec0ab521f29c3868774fea5a492b3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 17 10:31:35 2010 -0400

    Remove some automake-generated files from version control.

commit 276e7ee97eedd3f3745bff2eecccb4f29fcbfdac
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jun 11 11:57:13 2010 -0400

    Fix a pedantic gcc 4.4 warning in event2/event.h

commit 29b2e233a7a4eb0f1842368770d545a685743d80
Author: Felix Nawothnig <felix.nawothnig@gmail.com>
Date:   Sun May 30 03:17:48 2010 +0200

    Fix possible nullptr dereference in evhttp_send_reply_end()
    
    (The existing implementation had sanity-checking code for the case where
     its argument was NULL, but it erroneously dereferenced it before actually
     doing the sanity-check. --nickm)

commit 17a8e2d72b156f82c7ecaba989a996c943f03042
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 7 12:06:43 2010 -0400

    Add a function to retrieve the other side of a bufferevent pair

commit 44d57eee93724a8f6db24c466de34a410ab22d79
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 3 11:25:54 2010 -0400

    Add test for behavior on remote socket close
    
    On all the backends on this little mac laptop, that behavior is to
    report a remote socket close as both EV_READ and EV_WRITE.
    Historically, we had problem for some of these behaviors on some
    backends, so let's make sure that such behaviors don't come back.

commit 3467f2fa3bbff0dab6865a0ed08475ed3573c230
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 28 15:05:32 2010 -0400

    Fix logic in correcting high values from FIONREAD
    
    The old logic made sense back when buffer.c was an enormous linear
    buffer, but it doesn't make any sense for the chain-based
    implementation.
    
    This patch also refactors the ioctl{socket}? call into its own function.

commit 0798dd1247407fcbae7c8401a41a082b64060e1d
Author: Pierre Phaneuf <pphaneuf@gmail.com>
Date:   Thu May 27 22:37:09 2010 -0400

    Close the file in evutil_read_file whether there's an error or not.
    
    evutil_read_file would close the file if there was an error, but not if things went normally.

commit c21c6631618c71575dd8f372c534af8eedf2f871
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 27 01:32:11 2010 -0400

    Add the libtool-generated /m4/* stuff to .gitignore

commit 39906698ca5db840495af1b68923ae6bd12ae1dd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 26 12:58:02 2010 -0400

    Let evhttp_send_error infer the right error reasons

commit 06bd05634d2f1d098b81859c7b7309a5a4b4a746
Author: Felix Nawothnig <felix.nawothnig@googlemail.com>
Date:   Wed May 26 12:50:59 2010 -0400

    Fix the default HTTP error template
    
    The current template...
    
    <HTML><HEAD><TITLE>%s</TITLE>
    </HEAD><BODY>
    <H1>Method Not Implemented</H1>
    Invalid method in request<P>
    </BODY></HTML>
    
    is highly confusing. The given title is easily overlooked and the
    hard-coded content is just plain wrong in most cases (I really read
    this as "the server did not understand the requested HTTP method)
    
    This patch changes the template to include the error reason in the
    body as well as in the header, and to infer the proper reason from
    the status code whenever the reason argument is NULL.
    
    This patch also removes a redundant evhttp_add_header from
    evhttp_send_error; evhttp_send_page already adds a "Connection:
    close" header.

commit 3689bd2d497d8af224532282c263581ea47b6db5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 26 13:32:32 2010 -0400

    Have the unit tests report errors from test.sh
    
    The default behavior of test.sh was to suppress all output from
    test/regress, and say nothing but OKAY or FAILED.  This wasn't so good
    for getting bugs reported, since lots of people didn't know to set
    TEST_OUTPUT_FILE, or re-run ./test/regress on its own.
    
    Now, when you don't specify an output file for test.sh, it runs
    regress with the --quiet option.  This option makes the unit tests
    only print output on failure, which is what we probably wanted.

commit faf2a04fa5e4c44a356d635502cc7e2dbead34d3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 26 13:31:41 2010 -0400

    Make test.sh exit with nonzero status if tests fail
    
    This behavior makes "make verify" actually fail when the tests fail,
    which is what it's supposed to do.

commit 8bc1e3d6d109c4f72b2c3962e721c0b9399fb855
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 26 13:19:08 2010 -0400

    Remove all non-error prints from test/regress.c
    
    Now, running ./test/regress --quiet will indeed only inform you
    about errors.  Previously, it would also spew extra output.

commit e73f1d792a1c3e8e97a0339fbc20c062c880669a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 26 13:18:30 2010 -0400

    Remove the now-obsolete setup_test() and cleanup_test() functions

commit 899b0a39abdac0af5be956c160b176392c5e6233
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 24 15:24:03 2010 -0400

    Use generic win32 interfaces, not ASCII-only ones, where possible.

commit 4ff247b293c98bae4dc1576f3e9631554cfeb00a
Merge: 47c5dfbe b14f151b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 19 10:49:49 2010 -0400

    Merge branch 'evdns_no_empty_handles'

commit 47c5dfbea9b84e41f4b1579fe245307d3a7fc5a4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 18 17:28:51 2010 -0400

    Remove some dead assignments

commit b14f151b42ca9fddd52bee7c323e1217b28ae8af
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 18 17:27:06 2010 -0400

    If no evdns request can be launched, return NULL, not a handle
    
    Some of our evdns code was willing to return an evdns_request with
    handle->current_req set to NULL.  Really, those cases should just
    return NULL.

commit d14bb926b42a91a1ac48c10b41cfe3a96e8408b9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 18 14:05:01 2010 -0400

    Use -Wlogical-op on gcc 4.5 or higher
    
    It exposed one bug for us (see 8c3452bcb294e07888), and might
    prevent more.

commit 8c3452bcb294e07888f9044030d5e93825537c08
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 18 13:55:32 2010 -0400

    Correctly recognize .255 addresses as link-local when looking for interfaces

commit bda21e7ff96dafd679f8308eed5fa9c7e83a2d93
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 17 11:58:07 2010 -0400

    Avoid close of uninitialized socket in evbuffer unit test
    
    Attempts to fix a crash bug found by Brodie Thiesfield.

commit caca2f451c3ecc97745f578bae9b4ad40145d84d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 14 14:36:49 2010 -0400

    Replace (safe) use of strcpy with memcpy to appease OpenBSD
    
    If Libevent uses strcpy, even safely, it seems OpenBSD's linker will
    complain every time a library links Libevent.  It's easier just not to
    use the old thing, even when it's safe to do so.

commit 75701e897b7a077beb57d49cc1b13df84ec23fb9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 14 14:30:09 2010 -0400

    Add some missing includes to fix Linux build again

commit b5bfc44d6bf97f404e47217a38b80bf75338d6e7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 13 15:38:39 2010 -0400

    Make test-ratelim clean up after itself better.

commit 6d195109eb4c7233486fefe7cef834e912f610ec
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 13 14:59:33 2010 -0400

    Avoid event_del on uninitialized event in event_base_free
    
    This was mostly harmless, since the event was cleared with calloc, but
    still it's not a correct thing to do.

commit 2b44dccaaf632794b22e8e0e3e407702b1719851
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 13 12:01:30 2010 -0400

    Add options to test-ratelim.c to check its results
    
    The new options let you specify a maximum deviation of bandwidth used
    from expected bandwidth used, and make test-ratelim.c exit with a
    nonzero status when those deviations are violated.
    
    This patch also adds a test-ratelim.sh script to run test-ratelim with
    a few sensible options for testing.

commit 218a3c372c9eb0fab8325833342fa7e8e0ce8e86
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 13 11:24:07 2010 -0400

    Do not check that event_base is set in EVBASE_ACQUIRE_LOCK
    
    In every place that we call EVBASE_ACQUIRE_LOCK, the base is either
    set, or must be set, so the test is redundant.

commit fdfc3fc502bf04b2cedf0b9a812e52af315e32b7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 13 11:23:12 2010 -0400

    Remove the now-unusable EVTHREAD_LOCK/UNLOCK constants

commit 33bbbed9dde90b68d3bf88dca1f21b557425db4b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 13 10:57:30 2010 -0400

    Mark the event_err() functions as __attribute__((noreturn))
    
    This attribute tells gcc (and anything else that understands gcc
    attributes) that the functions will never return control, and helps
    the optimizer a little.  With luck, it will also tell
    less-than-full-program dataflow analysis tools that they don't need to
    worry about any code path that involves calling one of these functions
    and then returning.
    
    This patch also forces event_exit() to always exit, no matter what the
    user-supplied fatal_callback does.  This means that the old unit tests
    for the event_err* functions don't work any more, since they assume it
    is safe to call event_err* if you've given it a bogus fatal_callback
    that doesn't exit.  Instead, we have to make the unit tests fork
    before calling event_err(), and have the main unit test process wait
    for the event_err() test to exit with a sane exit code.  On unix,
    that's trivial.  On windows, let's not bother and just assume that
    event_err* works.

commit dfb75ab207f105c780a9819414c78f235548773d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 12 15:38:28 2010 -0400

    Test the unlocked-deferred callback case of bufferevents

commit c5bab56002bd2cdbfe4687b80a6abf5397786d76
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 11 11:44:07 2010 -0400

    Remove the obsolete evthread interfaces
    
    These were added in 2.0.1, and deprecated in 2.0.4 and 2.0.5; we've
    promised that they would be removed, and warned whenever they were
    invoked.  Users should call evthread_set_lock_callbacks instead...  or
    ideally just call evthread_use_windows_threads or
    evthread_use_pthreads.

commit 9cb5bc86a9a03a1fb81764ae5fcd54e98772c767
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 10 14:51:32 2010 -0400

    Bump version to 2.0.5-beta-dev

commit ad9b7f153d4774c444793f335990983b47b68811
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun May 9 00:22:08 2010 -0400

    Increment version numbers for 2.0.5-beta

commit f6aaf176d26e57d1640ed4308e91cf0ce046fea7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun May 9 00:16:35 2010 -0400

    Add a changelog for 2.0.5-beta

commit 7c519dfd4fc62493d4ed07f77f9aa4a7bb472cd6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 8 23:29:29 2010 -0400

    Fix some autoconf issues on OpenBSD
    
    Issue 1: autoconf gets accept when a header works properly with cpp
    but not with cc.  This was true of the sys/sysctl.h header on
    openbsd.  The fix: include sys/param.h (if present) when testing for
    sys/sysctl.h
    
    Issue 2: Somehow, autoconf's macro generation code is messed up on
    some versions of openbsd (including mine, and other people's too) so
    that instead of SIZEOF_VOID_P, it makes SIZEOF_VOID__.
    evutil/util.h now works around that.

commit c1cd32a156b75fa692471def021261126df33f88
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 8 22:21:52 2010 -0400

    Define _REENTRANT as needed on Solaris, elsewhere
    
    It turns out that _REENTRANT isn't only needed to make certain
    functions visible; we also need it to make pthreads work properly
    some places (like Solaris, where forgetting _REENTRANT basically
    means that all threads are sharing the same errno).  Fortunately,
    our ACX_PTHREAD() configure macro already gives us a PTHREAD_CFLAG
    variable, so all we have to do is use it.

commit 3d9e05b17498c8b982a8d34031341fbe9b6dbb0e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 8 19:56:25 2010 -0400

    Fix test.sh on freebsd
    
    It turns out that in all conformant shells, "unset FOO" removes FOO
    both from the shell's variables and from the exported environment.
    (I've tested this on msys, opensolaris, linux, osx, and freebsd.)
    
    And in nearly every shell I can find, "unset FOO; export FOO" does
    the same as unset FOO... except in my FreeBSD VM, where the "export
    FOO" sets the exported value of FOO equal to "".  This broke test.sh
    for us.
    
    The fix is simple: remove the needless exports!

commit 0ee6f6ce805570576755142d28022c27446e27cc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 8 18:00:26 2010 -0400

    Make test.sh support mingw/msys on win32
    
    This required:
       - Adding another WIN32 section in test.sh
       - not running "touch /dev/null"
       - calling WSAStartup in all the test binaries
       - Fixing a dumb windows-only bug in test-time.c

commit 935e1504b1bb090119c4b9b42f3b34141290523c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 8 19:36:05 2010 -0400

    Fix whitespace in evutil.c

commit 35570716988ba70f28f9580818903437b6409bcb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 8 19:16:47 2010 -0400

    Fix another nasty solaris getaddrinfo() behavior
    
    Everybody else thinks that when you getaddrinfo() on an ip address
    and don't specify the protocol and the socktype, it should give you
    multiple answers , one for each protocol/socktype implementation.
    
    OpenSolaris takes a funny view of RFC3493, and leaves the results set
    to 0.
    
    This patch post-processes the getaddrinfo() results for consistency.

commit 2cf2a286e42356601514d754acbcefc3cf0b23ad
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 21 11:57:55 2010 -0400

    Fix getaddrinfo with protocol unset on Solaris 9. Found by Dagobert Michelsen
    
    Apparently when you call Solaris 9's getaddrinfo(), it likes to leave
    ai_protocol unset in the result. This is no way to behave, if I'm
    reading RFC3493 right.
    
    This patch makes us check for a getaddrinfo() that's broken in this way,
    and work around it by trying to infer socktype and protocol from one
    another.
    
    Partial bugfix for 2987542

commit c44de06c766906a7d90f5dcb99877caafad241af
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 8 18:09:27 2010 -0400

    Numerous opensolaris compilation fixes
    
    For future note, opensolaris doesn't have sys/sysctl.h, doesn't like
    comparing iov_buf to a chain_space_ptr without a cast, and is (predictably)
    unforgiving of dumb syntax errors.
    
    Also, we had accidentally broken the devpoll backend test in configure.in

commit f89168e7eafb40bc68e17b8fa3323c23343e400a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 8 19:11:50 2010 -0400

    Make test for bufferevent_connect_hostname system-neutral
    
    Previously, the be5_outcome field for the dns error would be set to
    something dependent on our system resolver.  It turns out that you
    can't rely on nameservers to really give you an NEXIST answer for
    xyz.example.com nowadays: too many of them are annoyingly broken and
    like to redirect you to their locked-in portals.  This patch changes
    the bufferevent_connect_hostname test so that it makes sure that the
    dns_error of be5_outcome is "whatever you would get from resolving
    the target hostname"

commit 88a543fc190c7c3f339e0650b833adfe81caa12e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 8 19:09:09 2010 -0400

    Make unit test for add_file able to tell "error" from "done"
    
    Importantly, we don't actually want to call evbuffer_write() when
    the buffer is empty.  This makes it an error to ever get a -1 return
    value from evbuffer_add_file(), which makes it safe for us to test
    the return value.

commit 384d124581e929e4a9765a8ad16c0edddc0efc2e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 8 17:15:52 2010 -0400

    Fix bench_http build on win32.

commit 05de45d63fa79bb495f9cee5eae707c57f26eb78
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 8 16:47:07 2010 -0400

    add more (currently skipped) add_file tests on win32

commit ad811cdc2b33c0fc72fdd3ae684a5c3763033d90
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 8 16:41:01 2010 -0400

    Fix unused-variable warning when building with threads disabled

commit dcdae6b743b1cfc2dceff0b95b3236dd83742f61
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 8 16:34:18 2010 -0400

    Make evbuffer_add_file() work on windows
    
    Right now only the add_file() mode is supported, when it would be
    nicer to have mmap support.  Perhaps for Libevent 2.1.x.

commit b4f12a17aaa6e9badb25409e59cd32d0c549dbb7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 8 14:49:59 2010 -0400

    Implement regress_make_tempfile on win32 to test evbuffer_add_file
    
    (Conclusion: evbuffer_add_file is broken on win32, since it
    uses recv on a file.)

commit 90d4225137d00bc58eeee82f1a5fa4272dc17bd1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 8 15:31:54 2010 -0400

    Fix some crazy macro mistakes in arc4random.c

commit f37cd4c227397bfbc8c0b635417f0bf85d7ded33
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 21 12:25:29 2010 -0400

    Detect broken unsetenv at unit-test runtime
    
    If we have an unsetenv function that doesn't work, we can't run the
    main/base_environ unit test, so we should skip it.

commit fdc629736e1cedb7bb4ab201e49cb1638c69888e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 6 14:37:23 2010 -0400

    Only add libevent_core.la to LIBADD on mingw
    
    Chris Davis reports that this is also necessary to fix building with
    shared libraries on OSX for him.  Should fix bug 2997775.
    
    There is probably a better fix for the issues solved by commit
    3cbca8661f, but for now, we're trying to get a beta out the door.

commit 25433b96dc071b6b53914b069fd6525a19b839ac
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 6 14:37:23 2010 -0400

    Only specify -no-undefined on mingw
    
    It turns out that commit 3cbca8661f broke building with shared
    libraries on OSX.  Since -no-undefined is only necessary on platforms
    like win32, only use it there.
    
    There may be a better fix for this.  Should fix bug 2997775.

commit a62c8433407c5c6d762394a3395470e34fb20f49
Merge: 7731ec88 0ef40706
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 6 14:16:50 2010 -0400

    Merge commit 'chrisd/connect-hostname-report-err'

commit 7731ec882833e3ca660db3875a61432058495a02
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 6 13:26:05 2010 -0400

    Stop distributing and installing manpages: they were too inaccurate
    
    It would be great to have the manpages come back some time, perhaps
    from a refactoring of my asciidoc book, but for now the existing
    manpages were the single worst, most incomplete, and most misleading
    libevent documentation we had.  (Less misleading: the doxygen output,
    the header files, and my reference book.)

commit c16e68448c546c99d3c0d1a1447214a55e137b35
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 4 13:27:36 2010 -0400

    Rename current_base symbol to event_global_current_base_
    
    The "current_base" symbol was never actually declared in an exported
    header; it's hideously deprecated, and it was the one remaining
    exported symbol (fwict) that was prefixed with neither ev nor
    bufferevent nor _ev nor _bufferevent.
    
    codesearch.google.com turns up no actual attempts to use our
    current_base from outside libevent.

commit 99e50e90bd2a03638f9bef11dae12d9951b0c793
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 4 12:57:40 2010 -0400

    Fix symbol conflict between mm_*() macros and libmm
    
    Our mm_malloc, mm_calloc, etc functions were all exported, since C
    hasn't got a nice portable way to say "we want to use this function
    inside our library but not export it to others".  But they apparently
    conflict with anything else that calls its symbols mm_*, as libmm does.
    
    This patch renames the mm_*() functions to event_mm_*_(, and defines
    maros in mm_internal so that all the code we have that uses mm_*()
    will still work.  New code should also prefer the mm_*() macro names.
    
    Reported by Gernot Tenchio.  Fixes sf bug 2996541

commit 20fda296c5faada095c7122244ecd6beff1c0931
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 3 13:00:00 2010 -0400

    Try /proc on Linux as entropy fallback; use sysctl as last resort
    
    It turns out that the happy fun Linux kernel is deprecating sysctl,
    and using sysctl to fetch entropy will spew messages in the kernel
    logs.  Let's not do that.  Instead, let's call sysctl for our
    entropy only when all other means fail.
    
    Additionally, let's add another means, and try
    /proc/sys/kernel/random/uuid if /dev/urandom fails.

commit 71afc525804f416cfaabf4ec253f725fe3ec6822
Author: Frank Denis <chrysalis@users.sourceforge.net>
Date:   Mon May 3 11:37:16 2010 -0400

    Fix nonstandard TAILQ_FOREACH_REVERSE() definition
    
    Every current BSD system providing TAILQ_* macros define
    TAILQ_FOREACH_REVERSE in this order:
    
    TAILQ_FOREACH_REVERSE(var, head, field, headname)
    
    However, libevent defines it in another order:
    
    TAILQ_FOREACH_REVERSE(var, head, headname, field)
    
    Here's a trivial patch to have libevent compatible with stock queue.h headers.
    
    -Frank.
    
    [From sourceforge patch 2995179. codesearch.google.com confirms that
    the only people defining TAILQ_FOREACH_REVERSE our way are people
    using it in a compatibility header like us.  Did we copy this from
    OpenSSH or something?]
    
    -Nick

commit 953e2290fc9a649c465d5bcc7b26bdb0d5693c3b
Author: Frank Denis <chrysalis@users.sourceforge.net>
Date:   Mon May 3 11:29:22 2010 -0400

    Refuse null keys in evhttp_parse_query()
    
    evhttp_parse_query() currently accepts empty keys, that don't make any
    sense.
    
    -Frank
    
    [From sourceforge patch 2995183]
    -Nick

commit bd1ed5f3c5015999c91a33bd5d7ed69b8b7b81d5
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Sun May 2 12:51:35 2010 +0200

    Fix a compile warning introduced in 739e688

commit 739e6882757a0b6b398f95859da4720ca60269c8
Author: Pierre Phaneuf <pphaneuf@gmail.com>
Date:   Wed Apr 28 21:33:13 2010 -0700

    Allow empty reason line in HTTP status

commit 50ec59f4a6aa662fd80e070b9efd795e627b8d59
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 28 15:16:32 2010 -0400

    Remove redundant checks for lock!=NULL before calling EVLOCK_LOCK
    
    The EVLOCK_LOCK and EVLOCK_UNLOCK macros already check to make sure
    that the lock is present before messing with it, so there's no point
    in checking the lock before calling them.
    
    A good compiler should be able to simplify code like
      if (lock) {
         if (lock)
            acquire(lock);
      }
    , but why count on it?

commit 40c301b76c81257fdf1275eb4cc618b1124391a7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 28 14:56:51 2010 -0400

    Fix compilation when openssl support is disabled
    
    Previously, we'd fail if OpenSSL was present but openssl support was
    disabled.  Now we don't.

commit 9ecf0d486dbfaba16451676ab3ecefa631d63e6a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 28 12:03:08 2010 -0400

    Catch attempts to enable debug_mode too late
    
    Debug mode needs to be enabled before any event is setup or any
    event_base is created.  Otherwise, we will not have recorded when events
    were first setup or added, and so it will look like a bug later when we
    delete or free them.
    
    I have already confused myself because of this requirement, so let's
    make Libevent catch it for the next poor forgetful developer like me.

commit cb6707405cc07e34925e9c9f81a0c4d34ef9b135
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 28 11:51:56 2010 -0400

    Make debug mode catch mixed ET and non-ET events on an fd
    
    Of the backends that support edge-triggered IO, most (all?) do not
    support attempts to mix edge-triggered and level-triggered IO on the
    same FD.  With debugging mode enabled, we now detect and refuse attempts
    to add a level-triggered IO event to an fd that already has an
    edge-triggered IO event, and vice versa.

commit a5208fe4228b0e2c77d43dd2e3991f2fbac9148a
Author: Joachim Bauch <jojo@struktur.de>
Date:   Tue Apr 27 13:42:26 2010 -0400

    Release locks on bufferevents while executing callbacks
    
    This fixes a dead lock for me where bufferevents in different event
    loops use each other and access their input/output buffers (proxy-like
    scenario).

commit 0ef407065e5fb98f704b426d1d4fc878a85a391d
Author: Christopher Davis <chrisd@mangrin.org>
Date:   Sat Apr 24 00:06:38 2010 -0700

    Report DNS error when lookup fails during bufferevent_socket_connect_hostname.

commit 25c442e5825d7ca468b61926c729b2766c75442b
Merge: 601a3ff9 f6ab2a28
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Apr 24 00:15:15 2010 -0400

    Merge branch 'rpc_leaks'

commit 601a3ff98c0152a740aa6710bad1c4443960d35d
Merge: 96730d31 a47a4b7e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Apr 24 00:01:31 2010 -0400

    Merge branch 'arc4seed'

commit f6ab2a2811477547347b395789c0340c38603944
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 23 23:55:30 2010 -0400

    Fix a memory leak when unmarshalling RPC object arrays
    
    The old code would use type_var_add() for its side-effect of expanding the
    array, then leak the new object that was added to the array.
    
    The new code adds a static function to handle the array resizing.

commit 94ee1251cb0984ca2683c682dda0bb4ab8148508
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 23 23:55:03 2010 -0400

    fix a leak when unpausing evrpc requests

commit 96730d319134f2754533ebf7e9a9bd4c0e0acdca
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 23 23:13:26 2010 -0400

    Make http_base_test stop leaking an event_base.

commit d49b92a8358c42d9fe7208571e9ef0cee9b045a8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 23 23:04:20 2010 -0400

    Remove one last bug in last_with_datap logic. Found with valgrind

commit 9d8edf2ff5882aff3c85f2fa6b5eeaf05ef8c9b4
Author: Niels Provos <provos@gmail.com>
Date:   Fri Apr 23 18:59:22 2010 -0700

    do not leak the request object on persistent connections

commit a47a4b7e7e52ad8722771c36c4bc147f679c88d1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 23 16:08:09 2010 -0400

    Fix a couple of bugs in the BSD sysctl arc4seed logic
    
    Of course, FreeBSD has its own arc4random() implementation, so this should
    never actually be needed.  Still, it's good to paint the underside of the
    wagon.

commit a5bf43abb0671ee2ceac7b38cbe36424f621934a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 4 01:14:32 2010 -0500

    Document evutil_secure_rng_init() and evutil_secure_rng_add_bytes()

commit f9807167075aacc512ad7bca007064449eee93d9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 23 15:17:10 2010 -0400

    Make evutil_secure_rng_init() work even with builtin arc4random

commit 71fc3eb08b9acd359ba61b31059bf4220808a03b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 4 01:13:51 2010 -0500

    Seed the RNG using sysctl() as well as /dev/urandom
    
    William Ahern points out that if the user has chrooted, they might not
    have a working /dev/urandom.  Linux and many of the BSDs, however,
    define a sysctl interface to their kernel random number generators.
    
    This patch takes a belt-and-suspenders approach and tries to do use the
    sysctl _and_ the /dev/urandom approach if both are present.  When using
    the sysctl approach, it tries to bulletproof itself by checking to make
    sure that the buffers are actually set by the sysctl calls.

commit b1c795007fd6db4655a66ee2dfb306803a43fc1e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 23 14:42:25 2010 -0400

    Make evdns logging threadsafe
    
    The old logging code was littered with places where we stored messages in
    static char[] fields.  This is fine in a single-threaded program, but if you
    ever tried to log evdns messages from two threads at once, you'd hit a race.
    
    This patch also refactors evdns's debug_ntop function into a more useful
    evutil_sockaddr_port_format() function, with unit tests.

commit ceefbe87303c8c96dc809ad8afc736f2dbaa194a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 23 14:04:03 2010 -0400

    Add a comment to explain why evdns_request is now separte from request

commit 39b870b8a0a40a63851c37b8854399ba370ed2b1
Author: Christopher Davis <chrisd@mangrin.org>
Date:   Thu Apr 22 21:49:05 2010 -0700

    Add dns/search_cancel unit test.

commit 67072f3c3bf362654e2069bd468045a3d354190c
Author: Christopher Davis <chrisd@mangrin.org>
Date:   Thu Apr 22 21:46:05 2010 -0700

    Assert for valid requests as necessary.
    
    A valid request has an associated handle, and the handle must point
    to the request.

commit a62584000af5b2563ee98596f174a3a36c1ae6c1
Author: Christopher Davis <chrisd@mangrin.org>
Date:   Wed Apr 21 22:20:10 2010 -0700

    Free search state when finished searching to avoid an infinite loop.

commit beaa14a46f5db71d890c3aa9326eb223ff176bdf
Author: Christopher Davis <chrisd@mangrin.org>
Date:   Wed Apr 21 22:01:59 2010 -0700

    Move domain search state to evdns_request.
    
    It doesn't seem to make sense to copy the state to each new request
    in the search.

commit 15bb82d690ae0a5df0625b83addcd18d9246afab
Author: Christopher Davis <chrisd@mangrin.org>
Date:   Wed Apr 21 21:21:21 2010 -0700

    Ensure that evdns_request is a persistent handle.
    
    When searching is enabled, evdns may make multiple requests before
    calling the user callback with the result. This is a problem because
    the same evdns_request handle is not retained for each search request,
    so the user cannot reliably cancel the request.
    
    This patch attempts to ensure that evdns_request persists accross
    search requests.

commit b84b598eae8293dc02bf91cfb4f1cde9516f2fe0
Author: Gilad Benjamini <gilad@altornetworks.com>
Date:   Wed Apr 21 01:15:19 2010 -0400

    Clean up properly when adding a signal handler fails.
    
    Previously, when a signation() or signal() call failed, we would free
    the element we added to sh_old, but not actually clear the pointer.
    This would leave a dangling pointer in sh_old that could cause a
    crash later.

commit 899c1dcc9807650ec90e0d5c847d2997fce9b751
Author: Sebastian Sjöberg <Sebastian.Sjoberg@axis.com>
Date:   Wed Apr 14 15:42:57 2010 -0400

    Replace EVUTIL_CLOSESOCKET macro with a function
    
    The EVUTIL_CLOSESOCKET() macro required you to include unistd.h in your
    source for POSIX.  We might as well turn it into a function: an extra
    function call is going to be cheap in comparison with the system call.
    
    We retain the EVUTIL_CLOSESOCKET() macro as an alias for the new
    evutil_closesocket() function.
    
    (commit message from email by Nick and Sebastian)

commit 0861d1708ba6d035ff4c834e2aac0b5855f64afa
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 14 14:41:03 2010 -0400

    Add ctags/etags files to .gitignore

commit 755fbf16c3ce94bfa09e1bf5da27ccdfc1e7e725
Author: Shuo Chen <giantchen@gmail.com>
Date:   Wed Apr 14 14:27:29 2010 -0400

    Add void* arguments to request_new and reply_new evrpc hooks
    
    This makes evprc setup more extensible, and helps with Shuo Chen's
    work on implementing Google protocol buffers rpc on top of Libevent 2
    evrpc.
    
    This patch breaks binary compatibility with previous versions of
    Libevent, since it changes struct evrpc and the signature of
    evrpc_register_generic().  Since all compliant code should be calling
    evrpc_register_generic via EVRPC_REGISTER, it shouldn't break source
    compatibility.
    
    (Code by Shuo Chen; commit message by Nick)

commit 07edf784fab4e25c31eef3fdcccec3975e2741db
Author: Shuo Chen <giantchen@gmail.com>
Date:   Wed Apr 14 14:23:03 2010 -0400

    Expose the request and reply members of rpc_req_generic()
    
    This code adds two accessor functions to evprc, and helps integrate
    evrpc with Google protocol buffers.
    
    (Code by Shuo Chen; commit message by nickm)

commit a0983b67f9d077d59739ed7111cafdd81dd95876
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 14 00:36:09 2010 -0400

    Initialize last_with_datap correctly in evbuffer_overlapped
    
    Fixes bug 2985406

commit 3cbca8661f2ad267ca890304a3dc5acefb8ba630
Author: Giuseppe Scrivano <gscrivano@gnu.org>
Date:   Mon Apr 12 12:52:31 2010 +0200

    Create shared libraries under Windows

commit 10c4c9045032c822463cd48caa46bd3254883057
Author: Giuseppe Scrivano <gscrivano@gnu.org>
Date:   Mon Apr 12 12:50:17 2010 +0200

    Do not inhibit automake dependencies generation
    
    It fixes make parallel builds.

commit d469c503c57df97f3744070ed96950b0990b6124
Author: Giuseppe Scrivano <gscrivano@gnu.org>
Date:   Mon Apr 12 12:18:57 2010 +0200

    Fix compiler warnings under WIN32

commit ab30e553c40b41e124474208a9315763c87c2e2e
Merge: fd902740 eb86c8c5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 13 01:46:29 2010 -0400

    Merge branch 'evbuffer_copyout'

commit eb86c8c5ffc43a4e52881a20132eb03c3f9da283
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 12 22:24:54 2010 -0400

    Add evbuffer_copyout to copy data from an evbuffer without draining
    
    The evbuffer_remove() function copies data from the front of an
    evbuffer into an array of char, and removes the data from the buffer.
    This function behaves the same, but does not remove the data.  This
    behavior can be handy for lots of protocols, where you want the
    evbuffer to accumulate data until a complete record has arrived.
    
    Lots of people have asked for a function more or less like this, and
    though it isn't too hard to code one from evbuffer_peek(), it is
    apparently annoying to do it in every app you write.  The
    evbuffer_peek() function is significantly faster, but it requires that
    the user be able to handle data in separate extents.
    
    This patch also reimplements evbufer_remove() as evbuffer_copyout()
    followed by evbuffer_drain().  I am reasonably confident that this
    won't be a performance hit: the memcpy() overhead should dominate the
    cost of walking the list an extra time.

commit fd902740568c93a2bcf3c27584af9f7d59ff88ce
Merge: 819f949f 8f9e60c8
Author: Christopher Davis <chrisd@mangrin.org>
Date:   Sat Apr 10 11:26:53 2010 -0700

    Merge branch 'safetimevalms'

commit 8f9e60c825768c6dbc22fb6a2874b1f47cb34287
Author: Christopher Davis <chrisd@mangrin.org>
Date:   Fri Apr 9 19:16:09 2010 -0700

    Always round up when there's a fractional number of msecs.

commit 974d004eea27f138c468a278e665db38e52cff53
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 9 20:05:12 2010 -0400

    Use LIST rather than TAILQ for bufferevent_rate_limit_group members
    
    Once again, there's no reason to keep these lists in the order we were
    keeping them in.  Every time we needed to traverse them for any important
    purpose, we started at a random point anyway.

commit d313c29349dc15f11aba7f6f6936d0118546e5af
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 9 20:04:24 2010 -0400

    Use LIST rather than TAILQ for evbuffer callbacks
    
    There's no reason to traverse these out-of-order, and we never defined
    the order that you'd get your callbacks on an evbuffer if you happened
    to add more than one.

commit 6494772e32017b27037ef1f6fc849abbf3d1c9f2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 9 19:54:21 2010 -0400

    Use LIST rather than TAILQ for evmap_io and evmap_signal
    
    These structures used TAILQ for the lists of events waiting on a
    single fd or signal.  But order doesn't matter for these lists; only
    the order of the active events lists actually matters.

commit f9db33d15dac13e98db4d98b07ed0e404897a55b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 9 19:43:54 2010 -0400

    Add LIST_ delaration to event_struct.h to supplment TAILQ_
    
    Generally, LIST_ can be a little faster than TAILQ_ for most
    operations.  We only need to use TAILQ_ when we care about traversing
    lists from tail-to-head, or we need to be able to add items to the end
    of the list.

commit 819f949f4ab61c4c5add40105d299e73c190e94f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 9 19:16:49 2010 -0400

    Limit the maximum number of events on each socket to 65535
    
    This lets us use less RAM for the evmap_io structure, which in turn
    can let us have fewer cache misses for evmap operations.

commit 99210dd9e0f6c2dfbd53c65854bd317cf13054be
Merge: 1234b95a c247adc7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 9 19:14:25 2010 -0400

    Merge branch 'comment'

commit c247adc79c483638890f8150edf2c3213a32c20e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 9 13:32:08 2010 -0400

    Add a few more evmap/changelist comments

commit 1234b95a7593750a248f63af969dcb32def40709
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 9 17:19:39 2010 -0400

    Test another case of evbuffer_prepend

commit 8c83e9957907be7f33529a9f0913690520436091
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 9 16:40:53 2010 -0400

    Add more unit tests for evbuffer_expand

commit 06a4443abed28d3e0e9e27bcb99cf3191c0d3674
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 9 15:28:26 2010 -0400

    Unit-test every evbuffer_add_file() implementation.
    
    Previously, we'd only test the default one, even if the others were still
    compiled in.

commit 28bfed47e289b21e32390411a1a9ea8e057b0e10
Author: Christopher Davis <chrisd@torproject.org>
Date:   Fri Apr 2 19:08:32 2010 -0400

    Clean up a mistake in pointer manipulation in evbuffer_remove

commit 850c3ff232659125262bb5e30bef8451fac386bf
Author: Christopher Davis <chrisd@mangrin.org>
Date:   Wed Mar 31 20:30:55 2010 -0700

    Add evutil_tv_to_msec for safe conversion of timevals to milliseconds.
    
    This is useful for backends that require their timeout values be in
    milliseconds.

commit d5ebcf370debb006964814e0529e73736dcad93b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 30 16:47:37 2010 -0400

    Rewrite evbuffer_expand and its users
    
    The previous evbuffer_expand was not only incorrect; it was
    inefficient too.  On all questions of time vs memory tradeoffs, it
    chose to burn time in order to avoid wasting memory.  The new code
    tries to be a little more balanced: it only resizes an existing chain
    when doing so doesn't require too much copying, and when failing to do
    so would waste a lot of the chain's space.
    
    This patch also rewrites evbuffer_chain_insert to work properly with
    last_with_datap, and adds a few convenience functions to buffer.c.

commit 45068a312c0c2c6c4e9a144a837fd2f9d5310840
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 31 12:03:43 2010 -0400

    Fix a memory leak when appending/prepending to a buffer with unused space.

commit 8e227b04da54b7c4a029a2c9d335c582da4a5dcc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Mar 27 00:09:25 2010 -0400

    Make the no_iovecs case of write_atmost compile
    
    Apparently nobody had tested it before on a system that had sendfile.
    Why would you have sendfile and not writev?  Perhaps you're trying to
    test the no-iovecs code to make sure it still works.

commit 96865c47834f0397a46a38ad992f35167cf12796
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 30 12:48:56 2010 -0400

    Turn the increasingly complex *_CHAIN() macros into functions

commit b7442f8e8354b09f66d0110f2c5c970373a730cb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 26 23:18:40 2010 -0400

    Replace last_with_data with a slightly smarter version
    
    To implement evbuffer_expand() properly, you need to be able to
    replace the last chunk that has data, which means that we need to keep
    track of the the next pointer pointing to the last_with_data chunk,
    not the last_with_data chunk itself.

commit cda56abf194eb70f00c8e6ce95ec31f226048f9f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 31 12:29:26 2010 -0400

    Fix critical bug in evbuffer_write when writev is not available
    
    evbuffer_pullup() returns NULL if you try to pull up more bytes than
    are there.  But evbuffer_write_atmost would sometimes ask for more
    bytes to be pulled up than it had, get a NULL, and fail.

commit c87272b7b91b4f443092eb2a81f03c83457ab03a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 26 14:51:39 2010 -0400

    Make evbuffer_prepend handle empty buffers better
    
    If the first chunk of a buffer is empty, and we're told to prepend to
    the buffer, we should be willing to use the entire first chunk.
    Instead, we were dependent on the value of chunk->misalign.

commit 5c0ebb33f4a646919267fbca11c36eba24003561
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 26 14:50:45 2010 -0400

    Do not use evbuffer_expand() to add the first chain to a buffer
    
    (It's a big function, and using it this way is overkill.)

commit 2014ae4ac630d727f23ca91dad5d0ebf56b694de
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 26 14:30:14 2010 -0400

    Increase MIN_BUFFER_SIZE to 512 (1024 on 64-bit)
    
    This constant decides the smallest (and typical) size of each evbuffer
    chain.  Since this number includes sizeof(evbuffer_chain) overhead,
    the old value (256) was just too low: on 64-bit platforms, it would
    spend nearly 20% of the allocations on overhead.  The new values mean
    that we'll be spending closer to 5% of evbuffer allocations on overhead.
    
    It would be nice to get this number even lower if we can.

commit 6f20492fa27f08524af25914c02bc72d357b4197
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 26 14:20:10 2010 -0400

    Fix a free(NULL) in minheap-internal.h

commit a5276180b790fd3571a8e157c1fdd1a296421681
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 26 13:56:01 2010 -0400

    Fix minheap code to use replacement malloc functions
    
    minheap-internal.h still had an extra realloc and an extra free that
    needed to be replaced with mm_realloc and mm_free().

commit 7204b916669f9b9ff0dae689088a5ab0344edebd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 26 13:46:29 2010 -0400

    Remove a needless min_heap_shift_up_() call
    
    Previously, every call to min_heap_shift_down_() would invoke
    min_heap_shift_up_() at the end.  This used to be necessary in the
    first version of the minheap code, since min_heap_erase() would call
    min_heap_shift_down_() unconditionally.  But when patch 8b7a3b36763
    from Marko Kreen fixed min_heap_erase() to be more sensible, we left
    the weird behavior of min_heap_shift_down_() in place.
    
    Fortunately, "cui" noticed this and reported it on Niels's blog.

commit e1e703d2f5d35118e80be6a0e780682284ce8bc3
Author: Patrick Galbraith <patg@patg.net>
Date:   Tue Mar 23 16:04:59 2010 -0400

    Make evutil_signal_active() match declaration.

commit 3eb044d0a9cdaa9bc6a8fc202f1725bd7eda5e0b
Author: Trond Norbye <trond.norbye@gmail.com>
Date:   Tue Mar 23 13:27:10 2010 -0400

    Never test for select() on windows
    
    On 64-bit windows, configure actually _finds_ select when it tests for
    it, and due to the ordering of the io implementations in event.c it is
    chosen over the win32select implementation.
    
    This modification skips the test for select on win32 (we don't want
    that anyway, because Windows has its own), causing my windows box to
    get the win32select implementation.
    
    (edited by Nick)

commit 7960af51133b76dc2bd48bcf69bc2213fd354206
Merge: 83986414 9eb2fd75
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 22 13:37:39 2010 -0400

    Merge branch 'build'

commit 9eb2fd75becc336b6b9c38071ad4d4495bc83b9a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 22 13:27:47 2010 -0400

    Use dist_bin_SCRIPTS, not EXTRA_DIST, to distribute scripts

commit 83986414b0de36923f32c2c3330db6cbf4b0455f
Author: Jardel Weyrich <jweyrich@gmail.com>
Date:   Fri Mar 12 06:04:56 2010 -0300

    Fix infrequent memory leak in bufferevent_init_common().

commit b557b175c00dc462c1fce25f6e7dd67121d2c001
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Mar 21 13:28:48 2010 -0400

    Detect and refuse reentrant event_base_loop() calls
    
    Calling event_base_loop on a base from inside a callback invoked by
    that same base, or from two threads at once, has long been a way to
    get exceedingly hard-to-diagnose errors.  This patch adds code to
    detect such reentrant invocatinos, and exit quickly with a warning
    that should explain what went wrong.

commit fb366c1d880e49a19c40c9d62cbd7cbef297c6e7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Mar 21 13:16:31 2010 -0400

    Functions to track the total bytes sent over a rate limit group.

commit 33874b05286834b6ec690ee2ae22912691ec6d85
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 16 13:37:15 2010 -0400

    Make 'main/many_events' test 70 fds, not 64.
    
    This is mainly intended to ensure that we don't get hung up on
    the 64-handle limit that lots of O(n) Windows functions (but FWICT
    not select) like to enforce.

commit 657d1b6d3f0f27484d368bca39f99c2c5da107b6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Mar 13 01:06:57 2010 -0500

    Set mem_offset for every bufferevent type

commit 0cf1431e5d85411ac8174ffe3b802c6a37f6e3a8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Mar 13 01:04:30 2010 -0500

    Avoid an (untriggerable so far) crash bug in bufferevent_free()
    
    We were saying
         mm_free(bufev - bufev->be_ops->mem_offset);
    when we should have said
         mm_free(((char*)bufev) - bufev->be_ops->mem_offset);
    
    In other words, if mem_offset had ever been nonzero, then instead of
    backing up mem_offset bytes to find the thing we were supposed to free, we
    would have backed up mem_offset*sizeof(struct bufferevent) bytes, and freed
    something completely crazy.
    
    Spotted thanks to a conversation with Jardel Weyrich

commit 274a7bd9a11fd25339c4b978a25367f6d5ff0238
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Mar 13 00:55:39 2010 -0500

    Fix some memory leaks in the unit tests
    
    These don't matter except inasmuch as they give real memory leaks
    a place to hide.
    
    Found with valgrind

commit 859af6772c8ff929ec73b862bb3b64dc0e57bada
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Mar 13 00:53:54 2010 -0500

    Free evdns_base->req_heads on evdns_base_free
    
    It looks like when we moved from one big inflight-requests list to an
    n-heads structure, we didn't make evdns_base_free() free the array of
    heads.  This patch should fix that.
    
    Found with valgrind

commit 68dc742bf1adc6fb7033788a41520625c516bf48
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 12 20:38:25 2010 -0500

    Fix a write of uninitialized RAM in regression tests
    
    Not actually harmful, but not something we should be doing.
    
    Found by valgrind.

commit b34abf3069bada10c15f09a0073052e32b686708
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 12 18:36:18 2010 -0500

    Do not close(-1) when freeing an uninitialized socket bufferevent

commit 70a44b61bb574d4e550ef7a4f933b95efc1a5316
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 12 18:35:15 2010 -0500

    Avoid a spurious close(-1) on Linux
    
    On Linux, we use only one fd to do main-thread signaling (since we have
    eventfd()), so we don't need to close th_notify_fd[1] as we would if we were
    using a socketpair.

commit 75018951ece71668b56ce688740a62f9d4db9277
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Mar 13 00:23:06 2010 -0500

    Fix a possible double-free bug in SSL bufferevents with CLOSE_ON_FREE
    
    With CLOSE_ON_FREE set, we were telling the BIO to free the bufferevent when
    it was closed, and also freeing it ourselves.

commit 0d047c3f11b4639236816c8f7a166e233d88d10c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Mar 13 00:29:15 2010 -0500

    Fix an obnoxious typo in the bufferevent_timeout_filter test
    
    We were using the same bufferevent as the child of two filtering parents,
    orphaning another.  This made one get freed twice, and the other not at all.
    
    Possible fix for bug 2963306 spotted by Doug Cuthbertson.

commit f1bc125eb453af61cbb750652103532b77c271b0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 12 23:00:49 2010 -0500

    Improve robustness for refcounting
    
    Document that we do intend to double-decref underlying bufferevents under
    some circumstances.  Check to make sure that we don't decref past 0.

commit 77c917ded058a18480685a026622eef94ebb450e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 12 14:37:54 2010 -0500

    Give a better warning for bad automake versions.
    
    If you tried to build with automake-1.6 or earlier, we would
    previously spit out pages and pages of garbage output.  Now, automake
    should just say "Hey, I'm not new enough for this."

commit 0794b0d29c7485d10f8e752339b2ed58ffbb5be3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 12 14:21:52 2010 -0500

    Remove an orphaned RELEASE flag in Makefile.am

commit 2e898f542bb6dd5dcf13a0612ecd1e5855a014ef
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 12 14:16:30 2010 -0500

    Switch to using AM conditionals in place of AC_LIBOBJ
    
    AC_LIBOBJ is really only meant for defining missing library functions,
    not conditional code compilation.  Sticking our conditionally compiled
    modules in SYS_SRC should make stuff easier to maintain.

commit b660edf9db50bff0e437a262506a72f125763756
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 12 13:22:47 2010 -0500

    Remove redundant stuff from EXTRA_DIST
    
    To a first approximation, sources that are mentioned anywhere in an
    automake file don't need to get mentioned in EXTRA_DIST.

commit 426c8fbe9345ee1d3ee0b05c8e35391ef380ad2c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 12 13:09:28 2010 -0500

    Support the standard 'make check' target in place of 'make verify'
    
    Based on patch 2816088 from Zack Weinberg

commit 6c83e6c9725ad61f8d28955ee7a5d1f3162d74d0
Merge: ee41aca6 17da042d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 12 12:26:06 2010 -0500

    Merge branch 'evbuffer_insert_point'

commit ee41aca63e27f6c5a91a01978b409f5994d03817
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 12 00:46:39 2010 -0500

    Functions to manipulate existing rate limiting groups.
    
    This patch adds a function to change the current rate limit of a rate
    limiting group, and another to free an empty rate limiting group.

commit cdd4c4905be7e56675c1fcccf9d04c1777ae0da1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 11 00:38:46 2010 -0500

    Try to comment some of the event code more

commit 17da042db6b8f7fec9064747dc53fa2855e96ab7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 11 15:39:44 2010 -0500

    Add some glass-box tests for the last_with_data code.

commit 1e7b986827f2654de500678ef56dcbaecd5a08d4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 11 14:23:02 2010 -0500

    Fix last_with_data compilation on windows

commit 78772c3503215eb0d55a370f5fc192eca713d0ad
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 11 00:18:02 2010 -0500

    Clarify Christopher Clark's status as writer of original ht code.

commit e470ad3c354c586a3a995ce3a1fe7d093ebf999c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 10 23:39:30 2010 -0500

    Allow evbuffer_read() to split across more than 2 iovecs
    
    Previously it would only accept 2 iovecs at most, because our
    previous_to_last nonsense didn't let it take any more.  This forced us
    to do more reallocations in some cases when an extra small malloc
    would have sufficed.

commit 6f47bd12ed27085f68573a02dfa2e2761eb1e6b0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 10 23:28:51 2010 -0500

    Remove previous_to_last from evbuffer

commit c8ac57f1f58358dfdb1030143ab043b6addd0c3c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 10 23:24:14 2010 -0500

    Use last_with_data in place of previous_to_last
    
    This actually makes some of the code a lot simpler.  The only
    ones that actually used previous_to_last for anything were reserving
    and committing space.

commit 2a6d2a1e4be261e071f5ddb95be183e172643916
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 10 22:16:14 2010 -0500

    Revise evbuffer to add last_with_data
    
    This is the first patch in a series to replace previous_to_last with
    last_with_data.  Currently, we can only use two partially empty chains
    at the end of an evbuffer, so if we have one with 511 bytes free, and
    another with 512 bytes free, and we try to do a 1024 byte read, we
    can't just stick another chain on the end: we need to reallocate the
    last one.  That's stupid and inefficient.
    
    Instead, this patch adds a last_with_data pointer to eventually
    replace previous_to_last.  Instead of pointing to the penultimated
    chain (if any) as previous_to_last does, last_with_data points to the
    last chain that has any data in it, if any.  If all chains are empty,
    last_with_data points to the first chain.  If there are no chains,
    last_with_data is NULL.
    
    The next step is to start using last_with_data everywhere that we
    currently use previous_to_last.  When that's done, we can remove
    previous_to_last and the code that maintains it.

commit c7f1b820fcf3181bccae4dc72dd2d16fbe712887
Merge: b2f2be6e 8111fac0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 10 21:21:33 2010 -0500

    Merge branch 'evport'

commit b2f2be6edca55ed6f51bb3dc77c43cd4e47aa4af
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 10 16:25:16 2010 -0500

    Make evdns use the regular logging system by default
    
    Once, for reasons that made sense at the time, we had evdns.c use its
    own logging subsystem with two levels, "warn" and "debug".  This leads
    to problems, since setting a log handler for Libevent wouldn't actually
    trap these messages, since they weren't on by default, and since some of
    the warns should really be msgs.
    
    This patch changes the default behavior of evdns.c to log to
    event_(debugx,warnx,msgx) by default, and adds a new (internal-use-only)
    log level of EVDNS_LOG_MSG.  Programs that set a evdns logging
    function will see no change.  Programs that don't will now see evdns
    warnings reported like other warnings.

commit 13e4f3bd89225b3a339ac06ac051090e7e4bcab7
Author: Brodie Thiesfield <brofield2@jellycan.com>
Date:   Mon Mar 8 13:46:48 2010 -0500

    Avoid errors in http.c when building with VC 2003 .NET

commit b677032ba239157c0c98a7b74050e730d96f99ab
Author: Brodie Thiesfield <brofield2@jellycan.com>
Date:   Mon Mar 8 13:46:04 2010 -0500

    Avoid errors in evutil.c when building with _UNICODE defined

commit 2c2618d85861c1508f12787f2757459e02f9a002
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 5 13:00:15 2010 -0500

    more whitespace normalization

commit c7cf6f004951615cf775431d4f47663a20f2db6e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Mar 5 12:47:46 2010 -0500

    Replace users of "int fd" with "evutil_socket_t fd" in portable code
    
    Remeber, win32 has a socket type that's actually a handle, so if
    there's a chance that code is run on win32, we can't use "int" as the
    socket type.
    
    This isn't a blind search-and-replace: sometimes an fd is really in
    fact for a file, and not a socket at all.

commit 38b7b571c81d1545bb4b6a1c5e4fd9e1bf0f542d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 4 01:40:32 2010 -0500

    Add Christopher Clark and Maxim Yegorushkin to the LICENSE file

commit 17efc1cdfa5dbd275cbe7ab11e1382170df8a18b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Mar 4 01:25:51 2010 -0500

    Update all our copyright notices to say "2010"

commit cc1600afefc0c30586b12d916bb2a98ecf2d727b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 2 17:00:06 2010 -0500

    Improve the speed of evbuffer_readln()
    
    This makes some cases of bench_http about 5% faster.
    
    Our internal evbuffer_strpbrk() function was overly general (it tried
    to handle all character sets when we only used it for "\r\n"), and
    not very efficient (it called memchr once for each character in the
    buffer until it found a \r or a \n).  It actually showed up in some
    profiles for HTTP testing, since evbuffer_readln() calls it when doing
    loose CRLF detection.  This patch replaces it with a faster
    implementation.

commit 2fac0f70a388d3a35a2d7883eeb673c6fbbe16e1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Mar 3 12:15:15 2010 -0500

    Remove signal_assign() and signal_new() macros.
    
    These were introduced and deprecated in the same version (2.0.1-alpha),
    presumably in two-stage process.  Everybody sane should be using
    evsignal_assign() and evsignal_new() instead.

commit 1273d2f519a386c30149143a85e5175e100cb980
Author: Christopher Davis <chrisd@torproject.org>
Date:   Tue Mar 2 15:16:28 2010 -0800

    VC has no getopt(), so do without in bench_http.

commit 4ac38a5c38f915298a65b10d34bf45c8e9654860
Author: Christopher Davis <chrisd@torproject.org>
Date:   Tue Mar 2 14:34:30 2010 -0800

    Get bench_http to work on Windows; add a switch to enable IOCP.

commit bf3bfd0c044a3110b49ca06621f1b2ca0621dd84
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 1 22:12:04 2010 -0500

    Revert the broken part of 2cffd6c937
    
    It looks like I accidentally removed most of WIN32-Code/event-config.h
    when I was bumping the version.  Fortunately, this happened when I
    bumped to 2.0.4-alpha-dev rather than when I bumped to 2.0.4-alpha. :)
    
    This patch restores the deleted parts of WIN32-Code/event-config.h

commit 22aff0492dc51c8c9ce967871652e62e0144833d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Mar 1 22:06:12 2010 -0500

    Distribute libevent.pc.in, not libevent.pc

commit 2cffd6c937af5097db6a19cdebed3412c5454775
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 28 16:53:42 2010 -0500

    Bump version to 2.0.4-alpha-dev

commit 9669ade5250a159b1c9addd5b329b32176f38440
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 28 12:55:29 2010 -0500

    Bump the version to 2.0.4-alpha

commit 3a5cfb0d381a1b9e7d69903c3005abf1e447658b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 28 12:49:03 2010 -0500

    Add a changelog for 2.0.4-alpha from Git, sorted by hand

commit ad85908a4f6bd8fc1cbfb869fa0b4774f4249e0f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 28 12:52:39 2010 -0500

    Fix compilation with --disable-debug-mode

commit 57b72488233f749cd402d6133b5e4b1fb83878d3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Feb 27 22:27:13 2010 -0500

    Small cleanups on freebsd-connect-refused patch.
    
    There should be no need to call be_socket_enable: that does an
    event_add().  What we really want to do is event_active(), to make
    sure that the writecb is executed.
    
    Also, there was one "} if () {" that was missing an else.
    
    I've noted that the return value for evutil_socket_connect() is
    getting screwy, but since that isn't an exported function, we can fix
    it whenever.

commit 7bc48bfd3ac61aa4ff118cacb44145c6ecda366e
Author: Niels Provos <provos@freebsd.localdomain>
Date:   Sat Feb 27 18:59:06 2010 -0800

    deal with connect() failing immediately

commit 98edb891f89911ab5bdfa2a26ba2c549c66a3b1f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 25 17:14:41 2010 -0500

    Fix arc4random compilation on MSVC.

commit 1e14f826695eeeb856c614e4da57a88a7c8202b4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 25 17:11:28 2010 -0500

    Try to define a sane _EVENT_SIZEOF_SIZE_T for msvc compilation

commit 23170a69f8f3394574652377e446604210d0c464
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 25 16:57:57 2010 -0500

    Fix mingw compilation

commit 7ffd3875747f5a824d2f17872372278704b2ae27
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 24 13:40:06 2010 -0500

    Delete stack-alloced event in new unit test before returning.

commit f3dfe46206d28eb99cd82beec0033ea7fd795f95
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 23 23:59:26 2010 -0500

    Use new timeval diff comparison function in bufferevent test

commit 8fcb7a1b0419b275bd1570044f0e2024723fe4dd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 23 23:55:32 2010 -0500

    Add test for periodic timers that get activated for other reasons
    
    This was already independently verified by the new bufferevent
    timeout tests, but it's good to explicitly check that our code
    does what it should.

commit c02bfe12f8cb695e67ec895443c592d1f3e9bc36
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 23 16:36:52 2010 -0500

    Add a test for timeouts on filtering bufferevents.

commit d3288293fdc6aef510cc217b171187aac19c444b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Feb 20 18:44:35 2010 -0500

    Provide consistent, tested semantics for bufferevent timeouts
    
    The different bufferevent implementations had different behavior for
    their timeouts.  Some of them kept re-triggering the timeouts
    indefinitely; some disabled the event immediately the first time a
    timeout triggered.  Some of them made the timeouts only count when
    the bufferevent was actively trying to read or write; some did not.
    
    The new behavior is modeled after old socket bufferevents, since
    they were here first and their behavior is relatively sane.
    Basically, each timeout disables the bufferevent's corresponding
    read or write operation when it fires.  Timeouts are stopped
    whenever we suspend writing or reading, and reset whenever we
    unsuspend writing or reading.  Calling bufferevent_enable resets a
    timeout, as does changing the timeout value.

commit 38ec0a773b73375410cbb5a4eaeece3d0ab1caa0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 23 14:24:10 2010 -0500

    Fix a bug in resetting timeouts on persistent events when IO triggers.
    
    When we fixed persistent timeouts to make them reset themselves
    based on the previous scheduled time rather than the current
    time... we made them do so regardless of whether the event was
    triggering because of a timeout or not!
    
    This was of course bogus.  When a _timeout_ triggers, we should
    schedule the event for N seconds based on the last
    _schedule_ time... but when IO triggers, we should reset the
    timeout for N seconds after now.

commit e2642f0a880dcee81114c1c25766f0380672ee30
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 23 15:14:57 2010 -0500

    Fix some race conditions in persistent events and event_reinit
    
    I found these by adding an EVENT_BASE_ASSERT_LOCKED() call to most
    of the functions in event.c that can only be called while holding
    the lock.
    
    event_reinit() never grabbed the lock, but it needed to.
    
    event_persist_closure accessed the base to call event_add_internal()
    and gettime() when its caller had already dropped the lock.
    
    event_pending() called gettime() without grabbing the lock.

commit 4b37e6a5eab3d85e01920a679201d1e3a7ed2aa4
Merge: 162ce8a8 b2fbeb3f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 23 00:39:02 2010 -0500

    Merge remote branch 'github/split_free_from_decref'

commit 162ce8a856224bdb3119db41d93fb94194886ddd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 23 00:38:30 2010 -0500

    Expose view of current rate limit as constrained by group limit

commit b2fbeb3f074258e4559aa879ef0cbe0ef415ed0f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 22 15:38:23 2010 -0500

    Make bufferevent_free() clear all callbacks immediately.
    
    This should end the family of bugs where we call bufferevent_free()
    while a pending callback is holding a reference on the bufferevent,
    and the callback tries to invoke the user callbacks before it releases
    its own final reference.
    
    This means that bufferevent_decref() is now a separate function from
    bufferevent_free().

commit db08f640d543bd4ef32ffe1f83c8aeca77bb0ce0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Feb 20 12:55:59 2010 -0500

    Suspend read/write on bufferevents during hostname lookup
    
    When we're doing a lookup in preparation for doing a connect, we
    might have an unconnected socket on hand, and mustn't actually do
    any reading or writing with it.

commit 4faeaea90e5d7a5d76acd8891ba88d4ed099edbd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 19 03:39:50 2010 -0500

    Clean up formatting: function/keyword spacing consistency.
    
    - Keywords always have a space before a paren.  Functions never do.
    
    - No more than 3 blank lines in a row.

commit e5cf98795e3526fadd9e779d4368ed6fbafd6e91
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 18 17:46:56 2010 -0500

    Clean up formatting: remove trailing spaces

commit e5bbd40ad7f66f80170454683342076ec1e92d31
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 18 17:41:15 2010 -0500

    Clean up formatting: use tabs, not 8-spaces, to indent.

commit 8fdf09c09d2f92d7bc1a333b24a6490f65d5369c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 18 17:08:50 2010 -0500

    Clean up formatting: Disallow space-before-tab.

commit 7515de91fe6c721d304d06cedc8af8d334916eaf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 18 14:50:44 2010 -0500

    When connect() succeeds immediately, don't invoke the callback immediately.
    
    We need this to get unit tests to pass on freebsd.

commit b72be50d7a3ff0f69f440edafd5ad5fd86e0c2d9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 18 13:52:04 2010 -0500

    Add some headers to fix freebsd compilation

commit 1ba6bed89a342d7485aadeacd8f9ff6dd1c2eeac
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 18 13:50:15 2010 -0500

    Add the "compile" script to gitignore.

commit 48a29b681619bfd431e987c7cbd623121ef91b13
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 18 01:43:37 2010 -0500

    Add a unit test for secure rng.
    
    Mostly, this is just to make sure our arc4random_buf() implementation isn't
    dumb.

commit ff2a134d6e2ab74f2aa3eb5832128478202dd137
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 18 00:54:44 2010 -0500

    Fix getpid() usage on Windows
    
    On Windows, getpid() is _getpid(), and requires that we first include
    <process.h>.  arc4random.c previously didn't know that.
    
    Actually, I question whether arc4random needs to do its getpid() tricks
    on Windows.  They exist only so that we remember to re-seed the ARC4
    cipher whenever we fork... but Windows has no fork(), so I think we're
    in the clear.

commit cb52838fc501b1c18eec6bad367d29e87654d45b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 18 00:27:35 2010 -0500

    When working without a current event base, don't try to use IOCP listeners
    
    This fixes a bug turned up with the http unit tests, where we create
    the evhttp object using an implicit (NULL) event_base.  This failed
    pretty badly when we tried to use IOCP-based listeners.  We could
    hunt for the current base from inside listener.c in the future, or
    get the iocp base some other way, but for now this is probably the safest
    solution.

commit 32c6f1bacdb40f0d1b57aa6e8b2ce4eaf3979d08
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 15 19:54:15 2010 -0500

    Construct Windows locks using InitializeCriticalSectionAndSpinCount
    
    Previously we were using InitializeCriticalSection, which creates a
    lock that blocks immediately on contention and waits to be
    rescheduled.  This is inefficient; it's better to wait for a little
    while before telling the US to reschedule us, in case the lock becomes
    available again really soon (since most locks mostly do).
    
    Good pthreads implementations do this automatically.  On Windows,
    though, we need to call this magic function, and we need to pick the
    spin count ourselves.

commit ca46d25b01aaf28b319965ee03b8df7816101767
Merge: 7116bf23 e15e1e94
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 17 23:02:28 2010 -0500

    Merge branch 'arc4random'

commit e15e1e9486b12b6790ecb4d5d6a23d049a713826
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 17 22:54:43 2010 -0500

    Add the arc4random.c license to the LICENSE file.

commit 7116bf231433d565da33cee3b7292e212e026c7d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 15 21:03:52 2010 -0500

    Fix two unlocked reads in evbuffer.
    
    Some initializers (in evbuffer_read and evbuffer_commit) were reading
    the last and/or previous_to_last fields without grabbing the evbuffer
    lock.
    
    This may fix a hard-to-trigger race condition or two.

commit aae7db5256e26ef70ba420a1d8f03eb1037221f8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 15 17:53:24 2010 -0500

    Update event-config.h version number to match configure.in

commit 60753da0e941f400ef02c5ea93abad616c9fd302
Merge: 63e868e6 2f782af3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 15 17:07:26 2010 -0500

    Merge commit 'niels/http_close_connection'

commit 63e868e69f404112505e64067a870890c98e3d94
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 15 16:45:19 2010 -0500

    Increment the submicro version number.
    
    We've changed a couple of APIs introduced in 2.0.1-alpha, so it
    behooves us to give high-needs apps (like Tor) a way to tell we've
    done this.
    
    Sensible apps will just say "is it 2.0.3-alpha or 2.0.4-alpha" and
    ignore the existence of 2.0.3-alpha-dev, which is just as it should
    be.

commit 2f782af35b0f17615a43fff0ddc34cde5da39268
Author: Niels Provos <provos@gmail.com>
Date:   Sat Feb 13 17:04:17 2010 -0800

    validate close cb on server when client connection closes

commit e8a9782c1d8a87efb66878c59f4da401da585f43
Author: Niels Provos <provos@gmail.com>
Date:   Sat Feb 13 16:59:37 2010 -0800

    clean up terminate_chunked test

commit 4ec8fea68e59f5e847f3f31af28f7c1f9c9cdccb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Feb 13 00:11:44 2010 -0500

    Make RNG work when we have arc4random() but not arc4random_buf()

commit 3fe60fdf478101cec0f06a3fc4e1f69aa570ef6e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 12 23:40:13 2010 -0500

    Use off_t for the length parameter of evbuffer_add_file

commit d4de062efcf3facf451c826deee9240fac478bfd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 10 17:19:18 2010 -0500

    Add an arc4random implementation for use by evdns
    
    Previously, evdns was at the mercy of the user for providing a good
    entropy source; without one, it would be vulnerable to various
    active attacks.
    
    This patch adds a port of OpenBSD's arc4random() calls to Libevent
    [port by Chris Davis], and wraps it up a little bit so we can use it
    more safely.

commit 1dd7e6dc3aeff29f9de44678d2aeea3bb82e4f24
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 5 01:16:23 2010 -0500

    Remove the 'flags' argument from evdns_base_set_option()
    
    The 'flags' argument made sense when passed to
    evdns_(base_)?parse_resolv_conf when it said which parts of the
    resolv.conf file to obey.  But for evdns_set_option(), it was really
    silly, since you wouldn't be calling evdns_set_option() unless you
    actually wanted to set the option.  Its meaning was basically, "set
    this to DNS_OPTIONS_ALL unless you want a funny surprise."
    
    evdns_base_set_option was new in 2.0.1-alpha, so we aren't committed
    to keeping it source-compatible.

commit 6810bdb10156f5fda1c8172114ea22c61da6e4c5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 5 13:50:51 2010 -0500

    Always use our own gai_strerror() replacement.
    
    This is necessary if we have any errors that the platform gai_strerror()
    doesn't know how to handle.

commit c18490e6429cf5b2c476d3aee26fa046d2b6f8a7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 5 01:09:01 2010 -0500

    Add a check to make soure our EVUTIL_AI flags do not conflict with the native ones

commit cfe7a9ff4cb1eb3bc321fda904e5d5dfe8e7c1db
Merge: a7a94310 39781801
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 4 10:15:39 2010 -0500

    Merge remote branch 'niels/http_chunk'

commit a7a943106cc45cc8d9bbfe813cbcf463a9647e87
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 3 23:49:22 2010 -0500

    Fix some additional -DUNICODE issues on win32.
    
    Brodie's patch didn't catch the ones that were new since 1.4.

commit 000a33ec83daec1c37c84a4370f509b97585dc37
Author: Brodie Thiesfield <brofield2@jellycan.com>
Date:   Wed Feb 3 23:27:40 2010 -0500

    Make Libevent 1.4.12 build on win32 with Unicode enabled.
    
    This patch fixes calls to the win32 api to explicitly call the char* versions
    of the functions. This fixes build failures when libevent is built with the
    UNICODE define.

commit 397818011b6a0a5f17cb1243e2e46ee3d3612382
Author: Niels Provos <provos@gmail.com>
Date:   Wed Feb 3 16:54:18 2010 -0800

    make evhttp_send() safe against terminated connections, too

commit e2d15d81c38925b30891751505ad20679d35d4fd
Merge: 60742d58 93d73691
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 3 17:52:55 2010 -0500

    Merge remote branch 'niels/http_chunk'

commit 93d736910616ad32e6d8c2f7f377b12f5848f5d5
Author: Niels Provos <provos@gmail.com>
Date:   Wed Feb 3 14:34:56 2010 -0800

    do not fail while sending on http connections the client closed.
    
    when sending chunked requests via multiple calls to evhttp_send_reply_chunk,
    the client may close the connection before the server is done sending. this
    used to cause a crash.
    
    we introduce a new function evhttp_request_get_connection() that allows the
    server to determine if the request is still associated with a connection.
    If it's not, evhttp_request_free() needs to be called explicitly or the user
    can call evhttp_send_reply_end() which just frees the request, too.

commit 60742d581bef0e8c234c2ce7343a59556a1af2c9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 3 17:01:45 2010 -0500

    Add the rest of the integer limits, and add a test for them.

commit 8f654678484b7c4ad95626593c0ccdc696d841e8
Merge: 85047a69 ec34533a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 3 16:25:34 2010 -0500

    Merge remote branch 'github/http_listener'
    
    Conflicts:
            http.c

commit 85047a69836391bf095b98c36ec2b17876b2e325
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 3 15:12:04 2010 -0500

    Functions to view and manipulate rate-limiting buckets.
    
    We need these for Tor, and other projects probably need them too.  Uses
    include:
        - Checking whether bandwidth is mostly-used, and only taking some
          actions when there's plenty of bandwidth.
        - Deducting some non-bufferevent activities from a rate-limit group.

commit aba1fff33a9c1060a6a721f01f4d09c884a4ed5d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 3 14:37:42 2010 -0500

    Add EV_*_MAX macros to event2/util.h to expose limits for ev_* types.

commit da6135e356b4ff8489b7810682a70d5a70ac7197
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 3 02:09:19 2010 -0500

    Reduce windows header includes in our own headers.
    
    It turns out that absolutely everything that was including
    windows.h was doing so needlessly; our headers don't need it,
    so we should just include winsock2.h (since that's where
    struct timeval is defined).
    
    Pre-2.0 code will use the old headers, which include windows.h
    for them, so we aren't breaking source compatibility with 1.4.
    
    This solves the bug where we were leaving WIN32_LEAN_AND_MEAN
    defined, in roughly the same way that buying an automobile
    solves the question of what to give your coachman for boxing
    day.

commit 27c9a40f15701244bca209f05abc07792499dbb4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 3 02:08:08 2010 -0500

    Fix a dumb typo in ev_intptr_t definitions.
    
    We said "#define ev_uintptr_t" twice instead of ever saying
    "#define ev_intptr_t".

commit e244a2ea7478c67352f32f89c6af32484e2c69c4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 3 01:26:07 2010 -0500

    Add the msvc-generated .lib files to .gitignore.

commit 6c21c895d9943f2be9662f71ea425cde8cf24658
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 3 01:22:44 2010 -0500

    Remove EVUTIL_CHECK_FMT.
    
    This was never supposed to be an exposed API, so its name should have been
    more like _EVUTIL_CHECK_FMT.  But it was only used in one place, so let's
    just eliminate it.

commit f6b269498af6538d3c2a0c3bf0dae4630584c66a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 3 01:16:47 2010 -0500

    Deprecate EVENT_FD and EVENT_SIGNAL.
    
    These are old aliases for event_get_fd and event_get_signal, and they
    haven't been the preferred way of doing things since 2.0.1-alpha.
    
    For a while, we made them use struct event if it was included, but call
    event_get_(fd|signal) if it wasn't.  This was entirely too cute.

commit d38a7a19316002da9e9184402f9252e11766712b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 2 15:44:10 2010 -0500

    const-ify a few more functions in event.h

commit f4190bfb8553387038ce773947caee047450e9f4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 27 01:47:36 2010 -0500

    Update time-test.c to use event2
    
    time-test.c wasn't crazy, but it used some old interfaces.
    
    There are probably more cleanups and explanations to do beyond the
    ones here.

commit d60a1bd50c8388f6f74522bf0eadb3fe37d6e95a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 27 01:46:41 2010 -0500

    Clarify status of example programs
    
    (That is, add comments to say that dns-example and le-proxy are recent and
    ugly; event-test is old and ugly.)

commit becb9f9cd320d9b3ac571ffc788a01423568e9d0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 27 01:46:23 2010 -0500

    Add a new "hello world" sample program

commit 137f2c602f440327b10e68f5af4e575e23d82362
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 26 12:08:34 2010 -0500

    Try to fix a warning in hash_debug_entry
    
    Apparently some 64-bit platforms don't like it when you say
    
       unsigned hash(void *p)
       {
          return (unsigned)p;
       }
    
    even if you really honestly don't want the high bits of p.  Perhaps
    they will tolerate it if I say the equivalent of
    
       unsigned hash(void *p)
       {
          return (unsigned) (uintptr_t) p;
       }

commit cef61a2f1b6562b0576c56d5fe6e1717962e8755
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 26 12:08:17 2010 -0500

    Use ev_[u]intptr_t types in place of [u]intptr_t

commit 1fa4c81c71517c0b530b71cc6dd4d1812cab5996
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 26 12:06:41 2010 -0500

    Add ev_[u]intptr_t to include/event2/util.h
    
    We already emulate most of the other useful bits of stdint.h, and
    we seem to have started to use uintptr_t in a few places throughout
    the code.  Let's make sure we can continue to do so even on backwards
    platforms that don't do C99.

commit 439aea0d072b98daf13ebe3d6eff8ab8ee5bd875
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 25 14:07:01 2010 -0500

    Try to untangle the logic in server_port_flush().
    
    The logic that prevented the first loop in this function from being
    infinite was rather confusing and hard to follow.  It seems to confuse
    some automatic analysis tools as well as me.  Let's try to replace it
    with something more comprehensible.

commit 361da8f2022fb6c9ca937297f1769eb75a5e56e8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 25 13:54:14 2010 -0500

    Note a missing ratelim function

commit a66e947b8b7ea6da7e246a02a6abf759c63dbe38
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 25 13:44:56 2010 -0500

    Use less memory for each entry in a hashtable
    
    Our hash-table implementation stored a copy of the hash code in each
    element.  But as we were using it, all of our hash codes were
    ridiculously easy to calculate: most of them were just a matter of a
    load and a shift.
    
    This patch lets ht-internal be built in either of two ways: one caches
    the hash-code for each element, and one recalculates it each time it's
    needed.
    
    This patch also chooses a slightly better hash code for
    event_debug_entry.

commit a19b4a05e690601dde105d0a301c75118f013a46
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 25 13:38:07 2010 -0500

    Call event_debug_unassign on internal events
    
    I don't expect that many users will be so religious about calling
    unassign, but we need to be so that it's at least possible to use
    debug mode without eating memory.

commit cd17c3acd57b6b5bdedb31fc4152584fb6e089f7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 22 00:34:37 2010 -0500

    Add support for a "debug mode" to try to catch common errors.
    
    Right now it only catches cases where we aren't initializing events,
    or where we are re-initializing events without deleting them first.
    These are however shockingly common.

commit 70a4a3ef141e8e5f21549669fc4f67ae75d150f1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 23 16:47:54 2010 -0500

    Remove a needless include of rpc_compat.h
    
    Nothing in evrpc.c was using rpc_compat.h, so it's best to take it
    out, especially since it polluted our build process with GCC variadic
    macros.
    
    While we're at it, this patch puts an extra restriction on when the
    variadic macros in rpc_compat.h are defined.  Not only must GCC be the
    compiler, but GCC must not be running in -ansi mode.

commit 5c7a7bca4c7c3d0bbda4bb8e4ff9f1b335f55499
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 23 20:07:05 2010 -0500

    Fix windows and msvc build

commit c8c6a8978e57fcf17135782933b5174b950231bf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 16 15:24:58 2010 -0500

    Minimize epoll_ctl calls by using changelist
    
    The logic here is a little complex, since epoll_add must used called exactly
    when no events were previously set, epoll_mod must be used when any events
    were previously set, and epoll_del only called when the removing all events.

commit 918e9c5e722f53e14396df7596d326ecdb89093e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 23 16:38:36 2010 -0500

    Fix a number of warnings from gcc -pedantic

commit e2ca403faed26e0e709728ddc2efce1da8bd99d7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 23 16:23:45 2010 -0500

    Make it compile under gcc --std=c89.

commit ff3f6cd42b8d58d6db9c2ceb2cf9868d1a8f7ec0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 22 16:14:49 2010 -0500

    Check more internal event_add() calls for failure
    
    Most of these should be unable to fail, since adding a timeout
    generally always works.  Still, it's better not to try to be "too
    smart for our own good here."
    
    There are some remaining event_add() calls that I didn't add checks
    for; I've marked those with "XXXX" comments.

commit 7296971b105ffc2bc9d20b0a24a3055c2ecf5e69
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 29 16:38:03 2009 -0500

    Detect setenv/unsetenv; skip main/base_environ test if we can't fake them.
    
    Previously, we assumed that we would have setenv/unsetenv everywhere
    but WIN32, where we could fake them with putenv.  This isn't so: some
    other non-windows systems lack setenv/unsetenv, and some of them lack
    putenv too.
    
    The first part of the solution, then, is to detect setenv/unsetenv/
    putenv from configure.in, and to fake setenv/unsetenv with putenv
    whenever we have the latter but not one of the former.
    
    But what should we do when we don't even have putenv?  We could do
    elaborate tricks to manipulate the environ pointer, but since we're
    only doing this for the unit tests, let's just skip the one test in
    question that uses setenv/unsetenv.

commit 97a8c79006d41b8196e37e0c64db45e70578e70e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 22 00:34:21 2010 -0500

    Fix compilation of rate-limit code when threading support is disabled

commit 26e1b6f298f4bb66d6d684ed23a468bb8d3f4a37
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 21 01:51:40 2010 -0500

    Remove some commented-out code in evutil

commit 8d4aaf9086b721c0379891ca4a1fea8736f19d8f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 20 12:56:54 2010 -0500

    Don't use a bind address for nameservers on loopback
    
    If the user sets a bind address to use for nameservers, and a
    nameserver happens to be on 127.0.0.1, the nameserver will generally
    fail.  This patch alters this behavior so that the bind address is
    only applied when the nameserver is on a non-loopback address.

commit 068395038423cc42e05f7cd745f00e58b16a5f35
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 19 14:01:36 2010 -0500

    Functions to access more fields of struct event.
    
    Once event_assign() or event_new() had been called, there was no way
    to get at a copy of the event's callback, callback argument, or
    configured events.  This patch adds an accessor function for each, and
    an all-fields accessor for code that wants to re-assign one field of
    an event.
    
    This patch also adds a function to return sizeof(struct event), so
    that code with intense RAM needs can still retain ABI compatibility
    between versions of Libevent without having to heap-allocate every
    struct event individually.
    
    The code here was first proposed by Pavel Pisa.

commit 706700674c303ce32e23ead78a4b8ce2bc6d2d55
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 19 13:55:53 2010 -0500

    Add a LICENSE file so people can find our license easily
    
    For what it's worth, we are aware that "Copyright $YEAR $NAME" is
    sufficient notice of copyright on software under US law and
    Internationally, and saying Copyright (c) $YEAR $NAME is a bit nutty.
    The character sequence (c) has never been ruled to have the same force
    in US law as the actual copyright symbol, and that neither of these
    US-specific symbols adds anything of value beyond saying "Copyright"
    since the Berne convention took effect in the US back in 1989.
    
    Similarly, saying "all rights reserved" doesn't do anything magical
    unless your software goes in a time-warp back to when the Buenos Aires
    Convention was the general rule.  (And what will they run it on back
    then?)  And what would even lead you to say "All Rights Reserved" when
    you're explicitly granting most of those rights to anybody receiving
    the work in accordance with the 3-clause BSD license?
    
    But still the FOSS community retains these ritual notations out of a
    kind of cargo-cult lawyering.  Who knows?  Perhaps one day, if we
    write our copyright notices ineptly enough, John Frum will come and
    give us a DFSG-compatible license that everybody can get behind.
    
    (Also, I am not a lawyer.  The above should not be taken as legal
    advice.  -- Nick)

commit 4b9f307d8d584c91ea606af687528199ea072aad
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 15 10:26:25 2010 -0500

    Add a forgotten header (changelist-internal.h)

commit 854645797b1dcef69ce551ac52599c2708da2901
Merge: 3225dfb9 78a50fe0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 14 23:28:16 2010 -0500

    Merge commit 'niels/http_dns'

commit 78a50fe04cdbe3c69abdef7d1f15c6d09cd21f15
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jan 14 17:39:54 2010 -0800

    forgot to add void to test function

commit 26714ca19f7754c6ddfda7ebdde4d76fc21d2c1f
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jan 14 17:05:00 2010 -0800

    add a test for evhttp_connection_base_new with a dns_base

commit b8226390bcc865ad182449f9dc4ce9d332f83545
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jan 14 16:53:25 2010 -0800

    move dns utility functions into a separate file so that we can use them for http testing

commit 5032e52680f751ce64b3bda4fa4439bebfd13bb0
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jan 14 15:42:07 2010 -0800

    do not use a function to assign the evdns base; instead assign it via evhttp_connection_base_new() which is a new function introduced in 2.0

commit 3225dfb91d73a82939d6e4f848cc7bffb6a3ba5c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 14 17:04:08 2010 -0500

    Remove kqueue->pend_changes.
    
    Since we're no longer writing directly to it from add/del, we don't
    need to worry about it changing as kq_dispatch releases the lock.  We
    would make it a local variable, except that we wouldn't want to malloc
    and free it all the time.

commit 45e5ae3717aa238050a1eb0148beb83f2711c743
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 14 16:31:05 2010 -0500

    Make kqueue use changelists.
    
    This fixes a bug in kqueue identified by Charles Kerr and various
    Transmission users, where adding and deleting an event in succession
    would make the event get reported, even if we didn't actually want to
    see it.
    
    Of course, this also makes the array of changes passed to kevent
    smaller, which could help performance.

commit 27308aae4d921ecc286ab7a734693c2e27737a99
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 14 16:30:40 2010 -0500

    Changelist code to defer event changes until just before dispatch
    
    This is necessary or useful for a few reasons:
    
        1) Sometimes applications will add and delete the same event more
           than once between calls to dispatch.  Processing these changes
           immediately is needless, and potentially expensive (especially
           if we're on a system that makes one syscall per changed event).
    
           Yes, this actually happens in practice for nonpathological
           code, such as in cases where the user's callback conditionally
           re-adds a non-persistent event, or where draining a buffer
           turns off writing and invokes a user callback which adds more
           data which in turn re-enabled writing.
    
        2) Sometimes we can coalesce multiple changes on the same fd into
           a single syscall if we know about them in advance.  For
           example, epoll can do an add and a delete at the same time, but
           only if we have found out about both of them before we tell
           epoll.
    
        3) Sometimes adding an event that we immediately delete can cause
           unintended consequences: in kqueue, this makes pending events
           get reported spuriously.

commit ec34533a9c5aafab741e29e1f8af73654f5e767a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 30 00:41:03 2009 -0500

    Make http use evconnlistener.
    
    Now that we have a generic listen-on-a-socket mechanism, there's no
    longer any reason to have a separate listen-on-a-socket implementation
    in http.c.
    
    This also lets us use IOCP and AcceptEx() when they're enabled.
    
    Possibly, we should have a new mechanism to add a socket given only a
    listener.

commit c698b77d197b809e606ee56881330af41c02fc04
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 30 00:11:27 2009 -0500

    Allow http connections to use evdns for hostname looksups.
    
    This was as simple as using bufferevent_connect_hostname instead of
    calling connect() ourself, which already knows how to use an
    evdns_base if it gets one.
    
    Untangling the bind code might be a little trickier.

commit a334b31c6f4fac24eb30048edb16b188a3ee2250
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 14 14:46:16 2010 -0500

    More unit tests for getaddrinfo_async: v4timeout and cancel.
    
    One covers the case where the v4 request times out but the v6 request
    doesn't.  The other makes sure that cancelling a request actually works.

commit 94131e92b827ab2b46a4cb7ded52cdc143f807a8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 12 15:58:36 2010 -0500

    Fix test.sh on shells without echo -n
    
    Some systems have a version of /bin/sh whose builtin echo doesn't
    support the -n option used in test/test.sh.  /bin/echo, however,
    usually does.  This patch makes us use /bin/echo for echo -n whenever
    it is present.
    
    Also, our use of echo -n really only made sense when suppressing all
    test output.  Since test output isn't suppressed when logging to a
    file, this pach makes us stop using echo -n when logging to a file.

commit b9f43b231fe738789110f99d7045f2535986e997
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 11 20:47:36 2010 -0500

    Add a comment on evthread_enable_lock_debuging.

commit 6cc79c6b40501e32360386fcd7f9e013d0804bda
Author: Pavel Plesov <mclap@users.sourceforge.net>
Date:   Mon Jan 11 19:04:11 2010 -0500

    Add unit-test for bad_request bug fixed in 1.4 recently.
    
    This is a partial forward-port from 4fd2dd9d83a000b6.  There's no need
    to forward-port the bugfix, since the test passes with http.c as-is.
    I believe we fixed this while we were porting evhttp to bufferevent.
    --nickm

commit 510ab6bce0783e49b6e52e8f00b456dd95e003e5
Author: Jardel Weyrich <jweyrich@gmail.com>
Date:   Wed Dec 30 19:24:39 2009 -0200

    Comestic changes in evconnlistener_new(), new_accepting_socket(), accepted_socket_invoke_user_cb() and iocp_listener_enable().

commit fec66f96850b77f77f720d3983ae98fc3594f282
Author: Jardel Weyrich <jweyrich@gmail.com>
Date:   Wed Dec 30 19:22:23 2009 -0200

    Improved error handling in evconnlistener_new_async(). Also keeping the fd open because it is not opened by this function, so the caller is responsible for closing it. Additionally, since evconnlistener_new_bind() creates a socket and passes it to the function above, it required error checking to close the same socket.

commit 4367a33a205c64df92e604aa3c4b01ac40aa821d
Author: Jardel Weyrich <jweyrich@gmail.com>
Date:   Wed Dec 30 19:09:14 2009 -0200

    Fixed a fd leak in start_accepting(), plus cosmetic changes

commit 2f33e00af3e617d4a1fbb22de37f7c382de6961b
Author: Jardel Weyrich <jweyrich@gmail.com>
Date:   Fri Jan 1 04:13:05 2010 -0200

    Fixed a memory leak on windows threads implementation. The CRITICAL_SECTION was not being free'd in evthread_win32_lock_free().

commit 66c02c7826ed7b65ddbd071c6ac0a86b1407ebc4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 8 04:02:19 2010 -0500

    Look at the proper /etc/hosts file on windows.
    
    This is harder than it might initially seem, since the proper filename
    depends on what the admin has decided to call the windows system directory,
    which for all we know might be Q:\tralfamidore\slartibartfast.  And of course,
    this being windows, there are twelve ways to do it, where you can pick a
    nice one or a portable one, but not a really nice portable one.

commit 72dd666777d4e341fc5c066cd7dc1975d0dd0090
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Dec 7 17:21:41 2009 -0500

    evdns_getaddrinfo() now supports the /etc/hosts file.
    
    The regular blocking evutil_getaddrinfo() already supported /etc/hosts
    by falling back to getaddrinfo() or gethostbyname().  But
    evdns_getaddrinfo() had no such facility.  Now it does.
    
    The data structure here isn't very clever.  I guess people with huge
    /etc/hosts files will either need to get out of the 1980s, or submit a
    patch to this code so that it uses a hashtable instead of a linked
    list.
    
    Includes basic unit tests.

commit 0f7144fd8b05e95788ac2877caaf2b7c4688bf82
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Dec 7 17:21:13 2009 -0500

    Refactor code from evdns into a new internal "read a file" function.

commit eaaf27f1f7b834bf60a1003c4d9c32a9a346b1dc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 6 18:41:46 2010 -0500

    Enable branch-prediction hints with EVUTIL_UNLIKELY.
    
    This had been accidentally disabled.  Since it seems to work with GCC, I'm
    turning it back on when GCC is present.

commit 29151e65b754eb254e6cc3596f006a2de85fd2fb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 6 18:42:59 2010 -0500

    Fix byte counts when mixing deferred and non-deferred evbuffer callbacks.
    
    This patch finishes 390e0561, which was somehow committed in a half-finished
    state.  It solves a failing unit test on windows.

commit ba2945f9314fa2f81afe09284d21724d2b5dc31d
Merge: 0546ce11 165d30e3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 6 17:59:44 2010 -0500

    Merge branch 'ratelimit'
    
    Conflicts:
            bufferevent_async.c

commit 0546ce11e88c6c8b20c3ac85cb05fb0155e73a59
Author: Jardel Weyrich <jweyrich@gmail.com>
Date:   Wed Dec 30 05:03:54 2009 -0200

    Eradicated the last free() call. Let mm_free() take care of deallocation.

commit 165d30e31a167215c03a9104423f2767c9ff9c9a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 30 14:29:56 2009 -0500

    Fix compilation of rate-limiting code on win32.

commit 885b42734c2360e95b9acb7a5b202262f24b7626
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 30 13:50:52 2009 -0500

    Fix test-ratelim compilation on Linux.
    
    I'd forgotten to include time.h, and to link against libm.

commit 78ed097267f2db83c9b05915c76b5287cb2c89f7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 30 11:58:36 2009 -0500

    Never believe that we have pthreads on win32, even if gcc thinks we do.
    
    Apparently some newer versions of mingw provide a fake pthreads api to
    let applications work even if they don't know about windows threading.
    That's nice, but we aren't one of those.

commit 2e8eeea3e86b1f577e34ef2bc4f7099d848ae787
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 29 19:50:03 2009 -0500

    Fix crash bugs when a bufferevent's eventcb is not set.
    
    In many places throughout the code, we called _bufferevent_run_eventcb
    without checking whether the eventcb was actually set.  This would
    work fine when the bufferevent's callbacks were deferred, but
    otherwise the code would segfault.  Strangely, we always remembered to
    check before calling the _bufferevent_run_{read,write}cb functions.
    
    To prevent similar errors in the future, all of
    _buferevent_run_{read,write,event}cb now check to make sure the
    callback is actually set before invoking or deferring the callback.
    This patch also removes the now-redundant checks for {read,write}cb.

commit 0b151a9fa1365ad9f6f2e58fcfcfb36840707403
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 29 18:11:52 2009 -0500

    Whitespace fixes in test.sh

commit 7dfbe94aa3873c7e5426deb4a1684a0423c85d41
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 29 18:07:51 2009 -0500

    Allow test.sh to be run as ./test/test.sh

commit c382de6421e1f2330105f74e2a465cf7cd1bfe23
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 29 17:59:55 2009 -0500

    Allow the user to redirect the verbose output of test/test.sh to a file
    
    By default, the test.sh script still suppresses the output of all the
    tests it invokes.  Now, however, you can have that output written to
    a file specified in the TEST_OUTPUT_FILE shell variable.

commit 1e56a32d081a68d03c8ad2a923f702f2a034e76b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 29 16:04:16 2009 -0500

    Make the initial nameserver probe timeout configurable.
    
    When we decide that a nameserver is down, we stop sending queries to
    it, except to periodically probe it to see if it has come back up.
    Our previous probe sechedule was an ad-hoc and hard-wired "10 seconds,
    one minute, 5 minues, 15 minutes, 1 hour, 1 hour, 1 hour...".  There
    was nothing wrong with having it be ad-hoc, but making it hard-wired
    served no good purpose.
    
    Now the user can set the initial timeout via a new
    "initial-probe-timeout:" option; future timeouts back off by a factor
    of 3 on every failure to a maximum of 1 hour.
    
    As a side-benefit, this lets us cut the runtime of the dns/retry test
    from about 40 seconds to about 3 seconds.  Faster unit tests are
    always a good thing.

commit ee4953f89e8b6505bdd7899795b2b7d2395ad4d5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 29 16:03:30 2009 -0500

    Fix the code that allowed DNS options to not end with :
    
    We tried to fix this in 0.2.0.3-alpha, but our fix was buggy.

commit d0939d2b971417cd5714b535dabfdbd4213b26cb
Author: Jardel Weyrich <jweyrich@gmail.com>
Date:   Tue Dec 29 16:21:26 2009 -0200

    Introduced evutil_make_socket_closeonexec() to preserve fd flags for F_SETFD.
    
    Use this to eliminate the various macros that called F_SETFD throughout
    the code.

commit 4df7dbcbdfc9bf169f70b3e74e0a3ec824065bf3
Author: Jardel Weyrich <jweyrich@gmail.com>
Date:   Tue Dec 29 16:19:24 2009 -0200

    Adjusted fcntl() retval comparison on evutil_make_socket_nonblocking().
    
    Apparently, a successful return value on F_SETFL is "anything but
    -1".

commit 8111fac0650c6e4dbb296dfc8f63453e4532f30b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 29 14:38:35 2009 -0500

    Add missing thread imports so that evport.c will build
    
    When I made the changes to release the base lock around the call to
    port_getn(), I didn't add evthread-internal.h to the includes in
    evport.c would build, and I didn't catch it since I haven't got a
    Solaris host to build on.  Tao Feng just reported this on
    Libevent-users.

commit 82743794d37b0ddece31c0d4f637d2f7d0896f2d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 24 17:47:14 2009 -0500

    Do not make bufferevent_setfd implicitly disable EV_READ and EV_WRITE.
    
    This obviates the need for BEV_SUSPEND_CONNECTING, and good riddance.

commit f0c0124e603945f4693ae1457c7b9ef2b08689bf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 23 07:54:13 2009 -0500

    Testing code for bufferevent rate-limiting.
    
    This is not part of the regression tests, since running it necessarily
    takes a while.  There is a new test-ratelim test; run it with '-h'
    for an argument to see its options.

commit 737c9cd87b453d7371ea0b9774aa2bc51124c4eb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 27 13:16:54 2009 -0500

    Rate-limiting for bufferevents; group and individual limits are supported.
    
    The fairness algorithms are not the best, not every bufferevent type
    is supported, and some of the locking tricks here are simply absurd.
    Still, this code should be a good first step.

commit 47854a802a575b44291d27e4b57199942106cf62
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Dec 28 01:40:37 2009 -0500

    Expose our cached gettimeofday value with a new interface
    
    I've got a two use case that wants this for a fairly sensible purpose:
    one external and on internal.

commit 5a43df82b89f5f396d845ced49b9f3f65dee52ab
Author: Jardel Weyrich <jweyrich@users.sourceforge.net>
Date:   Mon Dec 28 16:03:47 2009 -0500

    Improve readability of evutil_unparse_protoname()

commit 0d64051f5b25ed9987c675e3270e7a452b18adf2
Author: Jardel Weyrich <jweyrich@users.sourceforge.net>
Date:   Mon Dec 28 16:01:59 2009 -0500

    Fix a bogus free in evutil_new_addrinfo()

commit 24fb502f7027e59b61934f6f0f586494bd22fdba
Author: Jardel Weyrich <jweyrich@users.sourceforge.net>
Date:   Mon Dec 28 16:01:12 2009 -0500

    Fix an fd leak in evconnlistener_new_bind().

commit 4c8b7cdc64d054e18be3bd6e3f85d277927c639c
Author: Jardel Weyrich <jweyrich@users.sourceforge.net>
Date:   Mon Dec 28 16:00:05 2009 -0500

    Make evutil_make_socket_nonblocking() leave any other flags alone.
    
    Fixes bug 2922121

commit fee2c77919196b59cc5a50bc532b048844972784
Author: Dagobert Michelsen <dmichelsen@users.sourceforge.net>
Date:   Mon Dec 28 15:53:01 2009 -0500

    Fix compilation of devpoll.c by adding missing thread includes.
    
    (Bug 2922156)

commit a47d88d7c2743d4924d395102d3b8e4585f61d6e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 23 07:53:19 2009 -0500

    Replace some cases of uint32_t with ev_uint32_t.
    
    Spotted by Roman Puls.

commit 4a5b53432b1348740534e8a562a82f825d31e3ca
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 23 07:48:43 2009 -0500

    Do not ignore bufferevent_enable(EV_READ) before bufferevent_connect().
    
    Previously, we weren't remembering that we wanted to re-add the read
    event once the connect was finished.  Now we are.

commit 390e056152ba4f92476aebae56ad3bba7bbfee0b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 22 15:52:02 2009 -0500

    Fix up behavior of never-defered callbacks a little

commit 5846bf6cddbed402dbdf51e6268795cf41dbf9ba
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 22 15:51:39 2009 -0500

    Simplify the read high-watermark checking.

commit c69d5a5d3c5e8e3cf406e2919441f30c400cf9e1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 22 12:03:46 2009 -0500

    Remove the contents of WIN32-Prj as unmaintained.
    
    Makefile.nmake is now the preferred way to build with MSVC; the
    project files haven't worked properly in ages.

commit 292467c02e9a9c679d5760c171c74aaa090e0308
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Dec 22 00:58:52 2009 -0500

    Use evutil_socket_t, not int, when logging socket errors.

commit c51bb3c342a02536a74ed8c4e739dc76dd145c70
Author: unknown <Nick Mathewson@.(none)>
Date:   Mon Dec 21 16:36:40 2009 -0500

    Fix a few locking issues on windows.

commit 5a112d3c0748d8e65c0fd36c2717dd3fe7c0639b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Dec 18 23:37:50 2009 -0500

    Set all instances of the version number correctly.
    
    Note that we've made two subtle mistakes: we are supposed to suffix
    any non-released version with "-dev", and we're supposed to use the
    last byte of the numeric version to indicate whether we have done this.
    
    For example, when 2.0.4-alpha is released, its numeric versin will be
    0x 02 00 04 00.  As soon as we tag it, we will change the version in
    the git repository to 2.0.4-alpha-dev, whose numeric version will be
    0x 02 00 04 01 or something.

commit 67995270ff75fb971f7043afa3c8072a8ea8fe3d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Dec 18 17:04:37 2009 -0500

    Drop install-sh from our git repo: a mismatched version could break "make dist"

commit a773df54cef1707984fe2c8b4b5866b35ae0c66d
Author: Joachim Bauch <jojo@struktur.de>
Date:   Fri Dec 18 16:24:41 2009 -0500

    Fix a segfault when freeing SSL bufferevents in an unusual order
    
    Have container bufferevents hold a reference to their underlying bufferevents.
    
    (Commit message and minor revisions by nickm.)

commit a6adeca72ccf1202c013001136d6e3ee3ddc0764
Author: Joachim Bauch <jojo@struktur.de>
Date:   Thu Dec 17 12:38:46 2009 -0500

    Fix a segfault when writing a very fragmented evbuffer onto an SSL
    
    Fixes bug 2916328.

commit f6430ac1e32e77870cd7a10c1e788c217afc621e
Author: Evan Jones <evanj@mit.edu>
Date:   Tue Dec 8 17:02:24 2009 -0500

    Update sample/signal-test.c to use newer APIs and not leak.

commit ea6b1df28806129316f4a6f1ed333b3dcb6052fb
Author: Joachim Bauch <jojo@struktur.de>
Date:   Tue Dec 8 15:38:34 2009 -0500

    Only define _GNU_SOURCE if it is not already defined.

commit 70cdfe49fae83a3662fa72ff803f2ff5b486af9b
Author: Sebastian Hahn <sebastian@torproject.org>
Date:   Sun Dec 6 02:59:19 2009 +0100

    Fix compile on Snow Leopard with gcc warnings enabled

commit 7ae94450fde617375a0a79387bed0090550debf7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Dec 4 16:37:43 2009 -0500

    Fix a snow leopard compile warning in the unit tests.
    
    Reported by Sebastian Hahn.

commit 0d744aa1738f6f16324a07f6185107d28c4f7fe4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 23 18:34:32 2009 -0500

    Refactor our 'suspend operation' logic on bufferevents.
    
    There are lots of things we do internally in bufferevents to indicate
    "the user would like this operation to happen, but we aren't going to
    try until some other condition goes away."  Our logic here has gotten
    entirely too complicated.
    
    This patch tries to fix that by adding the idea of 'suspend flags' for
    read and write.  To say "don't bother reading or writing until
    condition X no longer holds," bufferevent_suspend_read/write(bev,
    BEV_SUSPEND_X).  When X no longer holds, call
    bufferevent_unsuspend_read/write(bev, BEV_SUSPEND_X).
    
    Right now, only the read-watermark logic uses this.

commit 438f9ed26c63bd47c9e1a5cbe52731996f05c3ea
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 23 15:53:24 2009 -0500

    Add the abilitity to mark some buffer callbacks as never-deferred.

commit 689fc091a58dc90826ec90c1ca90a5d21b7184ad
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Nov 28 11:31:39 2009 -0500

    New EVTHREAD_TRY_LOCK function to try to grab a lock.

commit 2b7abf038fc22c3f2b0ab05066733ca388b1a3d0
Merge: b62d979b 6c7c5799
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Dec 4 13:49:27 2009 -0500

    Merge commit 'niels/dnscrash'

commit 6c7c5799a4a3d590fac4c3b87c1c813d9e92f61c
Author: Yasuoka Masahiko <yasuoka@iij.ad.jp>
Date:   Fri Dec 4 10:44:46 2009 -0800

    Fix a crash when reading badly formatted resolve.conf; from Yasuoka Masahiko

commit b62d979b6804f8a7d89e863d1ae46424b4205aed
Author: unknown <Nick Mathewson@.(none)>
Date:   Wed Dec 2 01:24:37 2009 -0500

    Update nmake makefile to build evthread.c

commit 31687b4d8a8e870762d6aa4b115cc36cbeb47773
Author: unknown <Nick Mathewson@.(none)>
Date:   Wed Dec 2 01:22:07 2009 -0500

    Fix regress_iocp.c usage of old lock allocation macros.

commit bd6f1babf7c93c1a4b32ad9bbb0022d203398ac3
Author: Roman Puls <puls@x-fabric.com>
Date:   Wed Dec 2 01:15:15 2009 -0500

    Fix up evthread compilation on windows

commit 56771a3eedb8c5ef55d67a707be91b1906e5a45b
Author: William Ahern <william@25thandClement.com>
Date:   Sun Nov 29 10:20:46 2009 -0500

    Valgrind fix: Clear struct kevent before checking for OSX bug.
    
    William's original commit message:
    
       Valgrind complains on startup because kq_init passes to kevent only
       a partially initialized structure. The code doesn't expect kevent
       to look at .fflags, .udata, or .data, I suppose, because it merely
       tickles the kernel looking for an error response. But perhaps
       that's unwarranted chuminess (notwithstanding that it's checking
       for an OS X bug), and needless noise nonetheless.

commit 0cd3bb9f3a53cce9a64ce1536d6e171848e8da59
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 27 17:22:19 2009 -0500

    Improved optional lock debugging.
    
    There were a couple of places in the code where we manually kept lock
    counts to make sure we never accessed resources without holding a
    lock, and that we never released a lock we didn't have.  The
    lock-debugging code already puts counts on _every_ lock when lock
    debugging is enabled, so there is no need to keep these counts around
    otherwise.  This patch rewrites the ASSERT_FOO_LOCKED macros to all
    use a common EVLOCK_ASSERT_LOCKED().
    
    We also teach the lock debugging code to keep track of who exactly
    holds each lock, so that EVLOCK_ASSERT_LOCKED() means "locked by this
    thread."

commit 2df1f82bfa1b432a277b0e1f8fc65aed7898f5e5
Author: Zhuang Yuyao <mlistz@gmail.com>
Date:   Fri Nov 27 16:02:49 2009 -0500

    Fix an evdns lock violation.
    
    Original message:
    
       evdns contains a bug related to thread lock.
    
       enable thread lock by evthread_use_pthreads() will cause successive
       evdns_base_resolve_ipv4() (and other resolve functions i think) to
       hang on EVDNS_LOCK(base) after one or several successful call to
       evdns_base_resolve_ipv4().

commit da1718b28992076e5cceb68e1715244a7dbd9669
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 27 16:00:59 2009 -0500

    Fix a locking bug in event_base_loop()
    
    We previously were releasing the lock when we exited the main loop
    in some ways, but not in others.

commit d84d8385cda1bf795a927a019b26db8bb9d0a4c4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 27 15:24:32 2009 -0500

    Fix two use-after-free bugs in unit tests spoted by lock debugging

commit 76cd2b70bb64962636cba0073571d0694b9c237a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 27 16:44:47 2009 -0500

    Stop passing EVTHREAD_READ and EVTHREAD_WRITE to non-rw locks.
    
    Previously, our default lock model kind of assumed that every lock was
    potentially a read-write lock.  This was a poor choice, since
    read-write locks are far more expensive than regular locks, and so the
    lock API should only use them when we can actually take advantage of
    them.  Neither our pthreads or win32 lock implementation provided rw
    locks.
    
    Now that we have a way (not currently used!) to indicate that we
    really want a read-write lock, we shouldn't actually say "lock this
    for reading" or "lock this for writing" unless we mean it.

commit 347952ffe0039369ff4e7c94c4e27e7333ba8ecb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 27 15:20:43 2009 -0500

    Revise the locking API: deprecate the old locking callbacks and add trylock.
    
    Previously, there was no good way to request different kinds of lock
    (say, read/write vs writeonly or recursive vs nonrecursive), or for a
    lock function to signal failure (which would be important for a
    trylock mode).
    
    This patch revises the lock API to be a bit more useful.  The older
    lock calls are still supported for now.
    
    We also add a debugging mode to catch common errors in using the
    locking APIs.

commit e1ffbb82e34d786d07a5acdb16077f6526f610c3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Nov 21 01:11:49 2009 -0500

    Fix memory-leak of signal handler array with kqueue.
    
    It turns out that kqueue_dealloc wasn't calling evsig_dealloc()
    (because it doesn't use the main signal handler logic) so the sh_old
    array was leaking.
    
    This patch also introduces a fix in evsig_dealloc() where we set
    the sh_old array to NULL when we free it, so that main/fork can pass.

commit 07e9e9b4b1d6c29fbca214f105567717e29ade2b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 20 16:50:55 2009 -0500

    Parenthesize macro arguments more aggressively

commit f32b57505e7221db068979e22ade5518aa7b4559
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 20 16:38:01 2009 -0500

    Add a warning about the use of event_initialized.

commit 91fe23fc08b2b8e42140c54cbb4757ae1375b9a3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 20 15:46:04 2009 -0500

    Tolerate code that returns from a fatal_cb.
    
    Also, replace more abort() calls with EVUTIL_ASSERT() or event_errx.

commit 94d00651f458fdff584037900ad976419583ee4a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 20 12:56:29 2009 -0500

    Add stub header for 2.0.4-alpha changelog.

commit 0af10d5695ab987678b59e1dcdd22b5cb3695044
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 20 12:46:00 2009 -0500

    Add more people who wrote patches to the acknowledgments
    
    The names came from grepping ChangeLog for 'patch/code from/by'.

commit 0b4272681f35bb516594b88cf9437a24996d585b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 20 12:37:47 2009 -0500

    Improve the README with more information and links.
    
    (Also, try to test out the new commit script.)

commit ba3407142b07f7d9ea7dd61ff9873d2a6f639f8d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 20 12:17:14 2009 -0500

    Add a .gitignore file.
    
    .gitignore plays the same role in Git as the svn:ignore property does in
    subversion.

commit 505040a2b5d41834d69d3412a03bd2e20f6d8598
Author: Niels Provos <provos@gmail.com>
Date:   Fri Nov 20 00:18:35 2009 +0000

    call it 2.0.3-alpha
    
    svn:r1556

commit f169153956d9aa578b96d50cd574c47ee8fd7511
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 19 23:08:50 2009 +0000

    Remove most calls to event_err() in http and deal with memory errors instead
    
    svn:r1555

commit 986500de4db591134832923f5dd8d78477a62f2e
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 19 22:02:33 2009 +0000

    nick found a race condition in the pthreads test case
    
    svn:r1554

commit b8f222e055bbba81790ebf13d294cc30a292c49b
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 19 21:14:31 2009 +0000

    On FreeBSD and other OSes, connect can return ECONREFUSED immediately; instead of failing the function call, pretend with faileld in the callback.
    
    svn:r1553

commit bdfe72f3c5fe085806e53acc5d1bf8d39d16e252
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 19 00:21:48 2009 +0000

    Documentation adjustments
    
    svn:r1552

commit 7511b6a97c7eb055c3b886010423d85e0106f847
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 19 00:21:38 2009 +0000

    Fix a spelling error and remove some dead code
    
    svn:r1551

commit f070a4aed2129a722f10d23e6defc4f901143fea
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 18 23:18:55 2009 +0000

    Do the proper hack for the (Open)BSD getaddrinfo quirk.
    
    From evutil.c:
    
       Some older BSDs (like OpenBSD up to 4.6) used to believe that
       giving a numeric port without giving an ai_socktype was verboten.
       We test for this so we can apply an appropriate workaround.  If it
       turns out that the bug is present, then:
    
        - If nodename==NULL and servname is numeric, we build an answer
          ourselves using evutil_getaddrinfo_common().
    
        - If nodename!=NULL and servname is numeric, then we set
          servname=NULL when calling getaddrinfo, and post-process the
          result to set the ports on it.
    
       We test for this bug at runtime, since otherwise we can't have the
       same binary run on multiple BSD versions.
    
    svn:r1550

commit 07ce7f9991551c571759deabebb7a72527b40840
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 18 21:17:00 2009 +0000

    Make our failing-connection bufferevent test more tolerant.
    
    I thought we had a way to do connect() that would never fail
    immediately, but always wait for a moment before failing.  It
    turns out that on FreeBSD it can fail immediately.  This is not
    FreeBSD's fault, or even a real bug anywhere but in the unit test.
    
    svn:r1549

commit cf749e227c9a064894502d2a04901f0a18edd96a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 18 21:16:53 2009 +0000

    Add a temporary workaround for an ssl bug found on FreeBSD.
    
    Basically, we only want to report the 'connected' event because of
    the socket connect() finishing when we have an actual socket
    bufferevent; on an SSL bufferevent, 'connected' means 'SSL
    connection finished.'
    
    This isn't FreeBSD's fault: it just has a connect() that tends to
    succeed pretty early.
    
    svn:r1548

commit 9bf124bff6d43fd9283c3ceb9629683ed790c136
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 18 21:16:47 2009 +0000

    Build correctly with mm replacement turned off.
    
    svn:r1547

commit 767eb70f5016cf65c3fad8e91ded8b4362bc79b0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 18 21:16:33 2009 +0000

    Fix compilation with threading disabled.
    
    svn:r1546

commit d7d1f1da09f32a14ff4c08dc0f1f0e0673ed5afd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 17 20:31:09 2009 +0000

    Move responsibility for IOCP callback into bufferevent_async.
    
    This patch from Chris Davis saves some callback depth, and adds proper
    ref-counting to bufferevents when there's a deferred evbuffer callback
    inflight.  It could use a couple more comments to really nail down what
    its invariants are.
    
    svn:r1543

commit 201d8d0bafeb2ba1388746ed745cd5d8defb3689
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 17 18:29:44 2009 +0000

    Clarify even more about various system-specific problems with getaddrinfo
    
    svn:r1542

commit 9151d000e674560a2034313d696b39fbe2adc30b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 17 03:36:43 2009 +0000

    Use the common-case code from getaddrinfo_common *always*; OS differences are just too huge.
    
    svn:r1541

commit 3451c870dad6dc3555cfb798149087adb9192b33
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 17 02:57:32 2009 +0000

    Never pass our weird flags to the system getaddrinfo.  Make sure there is no overlap between flag values.
    
    svn:r1540

commit 625a261a530cc273fba062ac59fd6b6ca9ddc8ad
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 17 02:40:14 2009 +0000

    OpenBSD demands that sys/types.h be included before sys/socket.h
    
    svn:r1539

commit 888007f9a4617db574b0455919b52867cc8ce64d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 17 02:38:19 2009 +0000

    Windows *does* have getservbyname, no matter what autoconf says.
    
    TODO: figure out why autoconf is confused about this.
    
    svn:r1538

commit 86f5742015c6ac5e83ffcf5b747cb6ca1139d066
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 16 22:25:46 2009 +0000

    Add two implementations of getaddrinfo: one blocking and one nonblocking.
    
    The entry points are evutil_getaddrinfo and evdns_getaddrinfo respectively.
    There are fairly extensive unit tests.
    
    I believe this code conforms to RFC3493 pretty closely, but there are
    probably more issues.  It should get tested on more platforms.
    
    This code means we can dump the well-intentioned but weirdly-implemented
    bufferevent_evdns and evutil_resolve code.
    
    svn:r1537

commit 72bafc175a75f8775eae9ab7b3c828395bb0eaa6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 16 22:23:55 2009 +0000

    Remove the stupid brokenness where DNS option names needed to end with a
    colon.
    
    svn:r1536

commit f9de8670fd1a88f0db898acd46de38a73d764c18
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 16 22:23:06 2009 +0000

    Fix a declaration of __func__ in rpcgen.
    
    svn:r1535

commit 18a8cfac390a67ac3279b0119aa55d3c2015a00b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 15 19:00:12 2009 +0000

    Prefer calloc(a,b) to malloc(a*b).  via openbsd.
    
    svn:r1531

commit 629a61339823cd65351c7aeb294b3337db06dccb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 15 18:59:59 2009 +0000

    When running set[ug]id, don't check the environment.
    
    Idea from OpenBSD, but made a bit more generic to handle uncivilized lands
    that do not define issetugid.
    
    svn:r1530

commit e2b2de79bfb3e50bfcb943b145ac45e7f68c9616
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 15 18:59:48 2009 +0000

    Use arc4random() for dns transaction ids where available.  Patch taken from OpenBSD
    
    svn:r1528

commit c79a45e0097dd34c7f7024598a5b4c3b1b0fb422
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Nov 14 21:54:30 2009 +0000

    Fix a couple of event_debug calls.
    
    svn:r1527

commit 74871cacb8318116e2cf24958e1456e9b429542b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 9 19:37:27 2009 +0000

    Change event_base.activequeues to "array of eventlist".
    
    Previously, event_base.activequeues was of type "array of pointers to
    eventlist."  This was pointless: none of the eventlists were allowed
    to be NULL.  Worse, it was inefficient:
    
      - It made looking up an active event queue take two pointer
        deferences instead of one, thus risking extra cache misses.
      - It used more RAM than it needed to, because of the extra pointer
        and the malloc overhead.
    
    Also, this patch fixes a bug where we were saying
    calloc(N,N*sizeof(X)) instead of calloc(N,sizeof(X)) when allocating
    activequeues.  That part, I'll backport.
    
    Also, we warn and return -1 on failure to allocate activequeues,
    rather than calling event_err.
    
    svn:r1525

commit cdf58009fc7c81e9b353cf953c8eda94337644fb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 9 19:37:21 2009 +0000

    Change an OOM err to a warn in event_tagging.c
    
    svn:r1524

commit 26573d3de3e35e956fc79eb8c8e3849ca714c109
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 9 19:37:15 2009 +0000

    Change an err to a warn in bufferevent_openssl
    
    svn:r1523

commit 37e23f806be8665f35b83ae61440faece86e7e61
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 9 18:50:20 2009 +0000

    Patch from Ryan Phillips: accept ipv6 addresses returned by getaddrinfo in http.c
    
    svn:r1522

commit b2fe4aedaae559761b5818a964b63deae02dbdf0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 9 18:36:34 2009 +0000

    Unit tests for got_break and got_exit.
    
    svn:r1521

commit e88079a82c52c213b0e335c52a25a00cd9fd1605
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 9 18:30:57 2009 +0000

    Make persistent timeouts more accurate.
    
    Previously, if the user scheduled a persistent timeout for {1,0}, we
    would schedule the first one at "now+one second", and then when we
    were about to run its callback, we would schedule it again for one
    second after that.  This would introduce creeping delays to the event
    that was supposed to run every second.
    
    Now, we schedule the event for one second after it was _last
    scheduled_.  To do this, we introduce internal code to add an event at
    an _absolute_ tv rather than at now+tv.
    
    svn:r1520

commit 59be8942c9e9b30ebc67b83bdf27866d5efb4636
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 9 18:30:48 2009 +0000

    Make sure that common timeouts are inserted in-order.
    
    This code should be a no-op, except under strange thread contention
    situations.
    
    svn:r1519

commit ab96b5f3f5247c7c7500a64536ceb345e0b8a65f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 9 18:30:33 2009 +0000

    Add an option to disable the timeval cache.
    
    svn:r1518

commit 693c24ef9d01c55c81f50fc1d70950dcfa2a524e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 9 17:16:30 2009 +0000

    Implement queued timeouts for case where many timeouts are the same.
    
    Libevent's current timeout code is relatively optimized for the
    randomly scattered timeout case, where events are added with their
    timeouts in no particular order.  We add and remove timeouts with
    O(lg n) behavior.
    
    Frequently, however, an application will want to have many timeouts
    of the same value.  For example, we might have 1000 bufferevents,
    each with a 2 second timeout on reading or writing.  If we knew this
    were always the case, we could just put timeouts in a queue and get
    O(1) add and remove behavior.  Of course, a queue would give O(n)
    performance for a scattered timeout pattern, so we don't want to
    just switch the implementation.
    
    This patch gives the user the ability to explicitly tag certain
    timeout values as being "very common".  These timeout values have a
    cookie encoded in the high bits of their tv_usec field to indicate
    which queue they belong on.  The queues themselves are each
    triggered by an entry in the minheap.
    
    See the regress_main.c code for an example use.
    
    svn:r1517

commit 784b8773a452f36a68b71a42104e241074d208ee
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 6 21:46:57 2009 +0000

    We do not work any more without an event-config.h; stop pretending that it is meaningful to check for HAVE_CONFIG_H
    
    svn:r1516

commit 4d48cf61a2734aa37a7a5904f5c1454a62aa943a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 6 21:13:25 2009 +0000

    Fix kqueue.c build on GNU/kFreeBSD systems.
    
    Yes, some people like to have a BSD-family kernel (thus getting
    kqueue) with a GNU-family libc (thus occasionally mandating
    _GNU_SOURCE).
    
    Thanks to Debian for noticing this.
    
    svn:r1514

commit 5ec43fe446d399464125d7cc0d5d1182756c953f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Nov 6 17:12:39 2009 +0000

    Fix a miscalculated realloc() size in win32select.c.
    
    This bug was introduced by the code to make the backend able to safely release the base lock while calling select().
    
    Also, we change win32select.c to the same 32-fds-to-start default as the rest of the backends, so that the main/many_events test can test it.  It was at 64-to-start, so the test wasn't hitting it.
    
    svn:r1513

commit ae5fbf492f2ba43f05063179a583f4711ddfec20
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 5 22:24:21 2009 +0000

    Actually add the new dns-example.c code. :p
    
    svn:r1512

commit d2e7e65d215a5de8a77ec5e4b7c0d79ddaba0107
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 5 22:19:09 2009 +0000

    Move the evdns sample code into the sample directory and fix it not to use any deprecated APIs.
    
    svn:r1511

commit ac633aebdfb094b19c8c322614e3fb4739dfb0d4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 5 21:22:23 2009 +0000

    Fix some build warnings on MSVC, mostly related to signed/unsigned comparisons.
    
    svn:r1510

commit 43ba66936aa24bde5e2e77a62365e3711cc427c2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 5 20:45:07 2009 +0000

    Export nmakefiles in source distribution.
    
    svn:r1509

commit 4ca9efeaef6a56ae4109053f20e21781bd2c5ea0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 5 20:40:11 2009 +0000

    Add nmake files to build with MSVC.
    
    Right now, they just make static libraries and unit tests.  They probably set lots of options wrong.
    
    svn:r1507

commit 25a5e6819d9f49fd143308fad0d9189a8eef8a97
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 5 20:37:19 2009 +0000

    Build fixes for MSVC
    
    svn:r1506

commit d34019289ca58deb0c1c182f5fbd3cb6b93774ee
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 5 18:49:08 2009 +0000

    Rename win32.c to win32select.c, and take it out of the WIN32-Code ghetto.
    
    svn:r1504

commit d14c3b4570fd3e5e9db827d9b97e4eed69511c83
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 5 18:25:46 2009 +0000

    Fix another ssize_t user
    
    svn:r1503

commit a0b302631ff9ca2c440365a6ba70e78f0c3b11f2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 5 18:07:27 2009 +0000

    Remove win32-code/config.h.  It was apparently confusing.
    
    svn:r1502

commit 34f28e08b3eda22033089c5ca72b5650fa38a21b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 5 15:57:22 2009 +0000

    Fix a few types to use compatible versions
    
    svn:r1501

commit 47bad8abb70c49f1d2bc1ddbc13ec7ec96bc20f5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 4 20:17:32 2009 +0000

    Implement size limits on HTTP header length and body length.
    
    Patch from Constantine Verutin, simplified a little.
    
    svn:r1500

commit 86db1c851be804b13aadebcc0b1a21a4493192dd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 4 05:19:26 2009 +0000

    Commit ConnectEx code to get connect working with async bufferevents.
    
    This is code by Chris Davis, with changes to get the unit tests failing less aggressively.
    
    The unit tests for this code do not completely pass yet; Chris is looking into that.  If they aren't passing by the next release, I'll turn off this code.
    
    svn:r1499

commit 6ca32df11ac92a4c3ab417d656253353e28a7dc3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 4 03:54:05 2009 +0000

    Add a missing include for win32.
    
    svn:r1498

commit f9c65580f0438dacb741cabe3ab96b89422aea33
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 3 20:42:32 2009 +0000

    Oops; add missing bufferevent_evdns.c file
    
    svn:r1497

commit 0b9eb1bffbd5af7d1dc6987f1a859e5f1e8c25e8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 3 20:40:48 2009 +0000

    Add a bufferevent function to resolve a name then connect to it.
    
    This function, bufferevent_socket_connect_hostname() can either use
    evdns to do the resolve, or use a new function (evutil_resolve) that
    uses getaddrinfo or gethostbyname, like http.c does now.
    
    This function is meant to eventually replace the hostname resolution mess in
    http.c.
    
    svn:r1496

commit fcc7668c008ce25d47834019c3d081819851c32d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 3 20:05:06 2009 +0000

    Fix one IOCP-callback signature I missed
    
    svn:r1495

commit 0fd0255fa4b1e60cd49324f79472657c1f1ed24f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 3 19:54:56 2009 +0000

    Remove compat/sys/_time.h
    
    I've gone through everything that it declared to see where it was used,
    and it seems that we probably don't need it anywhere.
    
    Here's what it declared, and why I think we're okay dropping it.
    
    o struct timeval {}
      (Used all over, and we can't really get away with declaring it ourselves;
      we need the same definition the system uses.  If we can't find struct
      timeval, we're pretty much sunk.)
    
    o struct timespec {}
      (Used in event.c, evdns.c, kqueue.c, evport.c.  Of these,
       kqueue.c and event.c include sys/_time.h.  event.c conditions its use on
       _EVENT_HAVE_CLOCK_GETTIME, and kqueue() only works if timespec is defined.)
    
    o TIMEVAL_TO_TIMESPEC
      (Used in kqueue.c, but every place with kqueue has sys/time.h)
    
    o struct timezone {}
      (event2/util.h has a forward declaration; only evutil.c references it and
       doesn't look at its contents.)
    
    o timerclear, timerisset, timercmp, timeradd, timersub
      (Everything now uses the evutil_timer* variants.)
    
    o ITIMER_REAL, ITIMER_VIRTUAL, ITIMER_PROF, struct itemerval
      (These are only used in test/regress.c, which does not include _time.h)
    
    o CLOCK_REALTIME
      (Only used in evdns.c, which does not include _time.h)
    
    o TIMESPEC_TO_TIMEVAL
    o DST_*
    o timespecclear, timespecisset, timespeccmp, timespecadd, timespecsub
    o struct clockinfo {}
    o CLOCK_VIRTUAL, CLOCK_PROF
    o TIMER_RELTIME, TIMER_ABSTIME
      (unused)
    
    svn:r1494

commit 0aa6f5136a10d4d6426ab4abb10ed4cbbde208bd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 2 20:59:13 2009 +0000

    Fix remaining AcceptEx issues.
    
    svn:r1492

commit e794d716a3ed525ca427d35cb1c80fc6bb9f8543
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 2 20:20:40 2009 +0000

    Clean up acceptex code some more: add locking, single-threading, enable/disable.
    
    svn:r1491

commit a84c87d76abcd023ddfb2c0985a65bafd522682b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 2 19:51:26 2009 +0000

    Refactor IOCP callback interface
    
    Chris Davis points out that GetQueuedCompletionStatus
    sometimes returns false not to report "No events for
    you!" but instead to report "An overlapped operation
    failed."  Add a way to tell an event_overlapped that
    its operation failed.
    
    svn:r1490

commit 9a772148f2efcbaadbe8ccc50a2bd5d0004f971d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 2 19:31:29 2009 +0000

    Compilation and correctness fixes for IOCP listener code.
    
    svn:r1489

commit 8283b2f0dcba87974db767e4838434896a92d402
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 2 19:30:25 2009 +0000

    Fix a major parenthesis bug in EVUTIL_UPCAST.
    
    Fortunately, this didn't hurt anything previously, since we had no actual users of the macro where the offset of the base type wasn't 0.
    
    svn:r1488

commit 5f1d6e640f965d468122598b92be609a483d1923
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 2 17:42:16 2009 +0000

    Add more IOCP tests.  They might not pass yet.
    
    svn:r1487

commit 5d2c1650f3c39e89c0c7d687a2fec3f6f66955e4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 2 17:42:09 2009 +0000

    More refactoring for IOCP listener code
    
    svn:r1486

commit e90e14fb94f7bb54f822dd5d3bfbf476649451e5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 2 16:31:13 2009 +0000

    Call the bufferevent_flush_mode variable "mode" more consistently in the documentation. Spotted by Alex.
    
    svn:r1485

commit 7f0ad2f63cd5c7e41a1916e4d8a3a5606880b429
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 2 16:17:06 2009 +0000

    Fix an errant user of ssize_t to use ev_ssize_t.
    
    My usual strategy of grep '[^_]ssize_t' had apparently failed me,
    since this ssize_t was in the first column.
    
    Resolves bug 2890434; spotted by Mihai Draghicioiu.
    
    svn:r1484

commit 315fde1a70da1c1e4b9565f38f52680e23114a84
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 30 22:43:53 2009 +0000

    Remove some duplicate code in kqueue.c and fix a small memory leak.
    
    svn:r1483

commit 96c6956e0247f615d8afd25d79586dfa5b478ef0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 30 22:43:30 2009 +0000

    Add a "many events" regression test.
    
    This is a glass-box test to get more coverage on the event loop
    backends.  We've run into bugs here before with fencepost errors, and
    it turns out that none of our unit tests had enough events to
    exercise the resize code.
    
    Most of the backends have some kind of logic that resizes an array
    when:
        - The highest fd is too high
        - The number of events added since the last iteration of the loop
          is too high
        - The number of active events is too high.
    
    This test hits all 3 cases, and increases coverage in select.c by 7%,
    in poll by 1%, and in kqueue by 9%.
    
    svn:r1482

commit 516452b71a4450f7201bc1a6bd31878c68a81e57
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 30 21:08:29 2009 +0000

    Keep openssl errors associated with the right bufferevent object.
    
    OpenSSL has a per-thread error stack, and really doesn't like you
    leaving errors on the stack.  Rather than discard the errors or force
    the user to handle them, this patch pulls them off the openssl stack
    and puts them on a stack associated with the bufferevent_openssl.  If
    the user leaves them on the stack then, it won't affect any other
    connections.
    
    This bug was found by Roman Puls.  Thanks!
    
    svn:r1481

commit 20f5bdfd6b9c0f51c56f55a9bd349c35576fafc8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 29 19:25:33 2009 +0000

    Refactor evconnlistener to allow multiple implementations; add an (incomplete, not-yet-integrated) IOCP implementation.
    
    svn:r1480

commit fa313f28c57769a819c8d4194180571c6772acf8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 29 18:30:43 2009 +0000

    Extract XP-only functions when initializing the IOCP port
    
    svn:r1479

commit 9976f1e74c1a285a591d8a80af61727af50b4961
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 29 17:11:12 2009 +0000

    reformat weird indentation in dns tests
    
    svn:r1478

commit 3c2198cb48724c1eac117db04dbebf32bb883077
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 29 17:10:36 2009 +0000

    Unit test for reverse ipv6 lookup
    
    svn:r1477

commit 5b3fb5bfa50a23d2a3d973a66b1a0d76195a3cca
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 29 16:35:20 2009 +0000

    More documentation and unit tests for event_tagging.
    
    svn:r1476

commit 1eadb3e3a299da5c384422792a672ff022870f4c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 29 16:35:15 2009 +0000

    Actually use the logic in select.c designed to make the out_sets threadsafe.
    
    svn:r1475

commit c70c25937e6c6f2d20cdf3d19f95dd80790935e5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 29 16:35:09 2009 +0000

    Unit test for strlcpy
    
    svn:r1474

commit e9098203f7df0a3c30db2c07cebfc3a9680f7c06
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 27 18:25:19 2009 +0000

    Fix from Chris Davis: get error-logging to be happy on win32.
    
    svn:r1473

commit 904b5721cb239fd6cc1dd52471f81b4c89f42cbb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 27 06:47:25 2009 +0000

    Avoid calling exit() during event_base_new*()
    
    Previously, each of the three make-an-event-base functions would exit
    under different, weird circumstances, but return NULL on others.
      - All three would exit on OOM sometimes.
      - event_base_new() and event_init() would die if all backends were
        disabled.
      - None of them would die if the socketpair() call failed.
    
    Now, only event_init() exits on failure, and it exits on every kind of
    failure.  event_base_new() and event_base_new_with_config() never do.
    
    svn:r1472

commit a2a7d1d12316c7e317e5f4bd3f8a18aa91027c95
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 27 05:16:32 2009 +0000

    Do not call the locking variant of event_add or event_active in some cases when we know we have the lock.
    
    svn:r1471

commit d386dc89b52fbbe218f1ac192169fd07484c0d8d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 27 05:16:23 2009 +0000

    Refactor event_assing even more to avoid unnecessary calls
    
    svn:r1470

commit e9ee1057e63b33d833b83b404232a0ccde34ae56
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 27 04:25:45 2009 +0000

    Give event_assign a return value, and make it less inclined to exit().
    
    We also refactor event_assign so that it is the core function, and
    event_set() is only the wrapper.
    
    svn:r1469

commit 10cf631e841a9b4272ca62100257b51d6a519654
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 27 04:04:07 2009 +0000

    Do not add a newline to the end of log statements.
    
    svn:r1468

commit 369aafc4d785a7ac65aad138ded6c602bc9381fe
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 27 04:03:58 2009 +0000

    Refactor kq_init error handling.
    
    svn:r1467

commit ed0e91e02af2aa19ed0e7340c52f2f31686cc9b6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 27 04:03:50 2009 +0000

    New test flag to suppress logging for one test.
    
    svn:r1466

commit 7f10fac34296eb856118fd882cc12a576ed39a04
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 26 20:07:06 2009 +0000

    Note assert-related change in changelog
    
    svn:r1465

commit 2e36dbe1a6b1056917c85350e2743a6babe96aa2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 26 20:00:43 2009 +0000

    Use EVUTIL_ASSERT() consistently instead of assert.
    
    svn:r1464

commit 37c3456d70b343588acf09b38b6dde6e9745b2f8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 26 20:00:08 2009 +0000

    Add an EVUTIL_ASSERT() to replace our calls to assert().
    
    The big difference here is that EVUTIL_ASSERT() passes its message on
    via event_errx() before aborting, so that the application has a prayer
    of noticing and recording it.
    
    svn:r1463

commit a8267663de2feb27051682cb51f9596f59613e5f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 26 19:59:51 2009 +0000

    API to replace all calls to exit() with a user-supplied fatal-error handler.
    
    Also, add unit tests for logging.
    
    svn:r1462

commit 38aec9ec7cb7d4bd135b0a02ce9f186871d1f0b9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 23 22:38:35 2009 +0000

    Tweaks to IOCP interface.
    
    svn:r1461

commit 7b10724901aa87d8f819e93796c020463a8ba9f1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 23 22:07:05 2009 +0000

    Fix my fix for the bufferevent_connect_fail() test.
    
    svn:r1460

commit 879420a711453a67c0421968e9592b6cc9f0aae2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 23 22:00:29 2009 +0000

    Expose a narrow window to the IOCP code.
    
    svn:r1459

commit c119e4a13ff171aafff9e0f27f11f8cae389880e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 23 17:40:00 2009 +0000

    Improve the behavior of le-proxy in a few cases.
    
    svn:r1458

commit fdd11c00bb7a90d2f11a8933baa577ac199f74e3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 21 19:21:05 2009 +0000

    Make the bufferevent_connect_fail test faster on OSX.
    
    It seems that connecting to a listener that is bound but not accepting
    or listening doesn't give a 'connection refused' error on OSX, but
    rather makes the connect() time out after 75 seconds.  I couldn't find
    any way to make the timout shorter.  Fortunately, closing the listener
    after a second or so makes the desired error occur after another
    second or so.
    
    svn:r1457

commit b73ad7bc4504882f7b50ed72c2643653fdc43a61
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 21 18:48:22 2009 +0000

    Treat the bitwise OR of two enum values as an int.
    
    This makes our interfaces usable from C++, which doesn't believe
    you can say    "bufferevent_socket_nase(base, -1,
    BEV_OPT_CLOSE_ON_FREE|BEV_OPT_DEFER_CALLBACKS)" but which instead
    would demand "static_cast<bufferevent_options>(BEV_OPT_CLOSE_ON_FREE|
    BEV_OPT_DEFER_CALLBACKS))" for the last argument.
    
    Diagnosis and patch from Chris Davis.
    
    svn:r1456

commit 4fbac2a5aef7bc3dee065241f20f3140c4f57b7e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 21 07:00:19 2009 +0000

    Test failing case of bufferevent_connect().
    
    Code by Chris Davis.
    
    svn:r1455

commit d8164d0cfc5eda8101ad08008e3f3de2032b26a9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 21 07:00:14 2009 +0000

    Fix win32 connect() event handling.
    
    Christopher Davis reported:
    
        Connection failures aren't reported on Windows when
        using bufferevent_socket_connect, because Windows uses
        select's exceptfds to notify of failure, and libevent
        treats them like read events. Only the write event
        handler is currently used to handle connection events.
    
    We should think hard about this one, since it changes
    behavior from 1.4.x.  Anything that worked on Mac/Unix before
    will work more consistently on Windows now... but this might
    break stuff that worked only on Windows, but nowhere else.
    
    Patch from Chris Davis.
    
    svn:r1454

commit b89b58b5f4ea91792883c84e2f7b98befbc1a3a0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 21 06:03:00 2009 +0000

    OSX compilation issues
    
    svn:r1453

commit c9c4ec26eeca16400b9bffab26a8dc655b7354d5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 21 05:36:27 2009 +0000

    Remove an EVBASE_RELEASE_LOCK that I missed.
    
    svn:r1452

commit ed748a48ba8ebd573a3e5d047c9de15958d8417a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 21 04:45:59 2009 +0000

    Fix win32 compilation.
    
    svn:r1451

commit 6b22e74aa187f2bbabb58652070af27fff6f547e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 21 03:54:00 2009 +0000

    Add locking to event_base_loop.
    
    This is harder than it sounds, since we need to make sure to
    release the lock around the key call to the kernel (e.g.,
    select, epoll_wait, kevent), AND we need to make sure that
    none of the fields that are used in that call are touched by
    anything that might be running concurrently in another
    thread.  I managed to do this pretty well for everything but
    poll().  With poll, I needed to introduce a copy of the
    event_set structure.
    
    This patch also fixes a bug in win32.c where we called
    realloc() instead of mm_realloc().
    
    svn:r1450

commit 50825466821c87f55a7549df47086f7412a5a726
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 21 02:14:16 2009 +0000

    Fix windows compilation warnings.
    
    svn:r1449

commit e1c9b84ae6ae5de9fa03a8028a7336f65c5a1d61
Author: Niels Provos <provos@gmail.com>
Date:   Mon Oct 19 16:20:12 2009 +0000

    Fix compilation for listener.h for C++ - missing extern "C".  Patch from Ferenc Szalai.
    
    svn:r1448

commit b812563a6e8f735403e1f1fbcee1d56bd5ff5b4f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 16 13:20:16 2009 +0000

    Add a note that we should change previous_to_last to last_with_space
    
    svn:r1447

commit f3dee9e8be0240a344e75fb275bbc3fb7541274a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 16 13:20:09 2009 +0000

    Correct the signatures for the evmap_io_* functions to use evutil_socket_t.
    
    svn:r1446

commit e3fd294a6d2f498aa72e92fe4b005a28a1b312f1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 16 13:19:57 2009 +0000

    Spelling fixes in comments and strings.
    
    svn:r1445

commit 25af6954411e369c41d452af5e6d95b9d5c73558
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 14 00:46:47 2009 +0000

    When a bufferevent_connect() call fails, give the client an error callback.
    
    Patch from Christopher Davis.
    
    svn:r1444

commit fc83ca3c7086fe1e1988722b95295c96d89a4152
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 14 00:46:40 2009 +0000

    Fix some crash bugs when initializing evdns
    
    svn:r1443

commit e6b747c34a69fbd93e40cbf58530054522f7e5f9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Oct 12 21:06:30 2009 +0000

    Declare struct timezone in util.h so that borken mingw versions do not complain
    
    svn:r1441

commit 633f3fb7aa15b29063de0b26823d1660d2ce6dd2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 2 03:07:29 2009 +0000

    Add changelog for last commit
    
    svn:r1440

commit ba8a17714ead9f36424c4ecc21c009735d1408e5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 2 03:03:58 2009 +0000

    Do not notify the main thread more than needed.
    
    Basically, we suppress the notification when an event is added or deleted
    and:
      - The event has no fd, or there is no change in whether we are
        reading/writing on the event's fd.
      - The event has no timeout, or adding the event did not make the earliest
        timeout become earlier.
    
    This should be a big efficiency win in applications with multiple threads and
    lots of timeouts.
    
    svn:r1439

commit d5b640fc16e9d9e1e709ec73eb938de9eeff3f2c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 1 15:29:08 2009 +0000

    Apply Ka-Hing Cheung's event_base_got_[break|exit] patch, with locking and whitespace fixes.
    
    svn:r1438

commit 8e8d94a3e08d4cfa9cb817ae36fd4181edea84d2
Author: Niels Provos <provos@gmail.com>
Date:   Thu Sep 24 22:18:19 2009 +0000

    Do not drop data from evbuffer when out of memory; reported by Jacek Masiulaniec
    
    svn:r1436

commit 18fe400805699b6d60bfc26896294a34c6990756
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 23 23:51:26 2009 +0000

    Forward-port: fix android compilation
    
    svn:r1435

commit 2622e5ace2863e8e869254d9dba86549bbd9159b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 16 17:17:57 2009 +0000

    Fix the assert I added to epoll.c: spotted by Dmitry Novikov
    
    svn:r1432

commit c2ead9f173b7d3b40132920fbc62d2319e4b9176
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 11 21:02:19 2009 +0000

    Treat events with fd == -1 as addable.
    
    This turns out to simplify a fair bit of logic, including the bufferevent
    code, and should fix bug 2850656.
    
    svn:r1431

commit 85255a63974bf41d153e06b34fa346bd2d2f08b2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 11 18:47:35 2009 +0000

    Make epoll use less RAM.
    
    We do this by not allocating the maximum epoll_event array for the epoll
    backend at startup.  Instead, we start out accepting 32 events at a time, and
    double the array's size when it seems that the OS is generating events faster
    than we're requesting them.  This saves up to 374K per epoll-based
    event_base.  Resolves bug 2839240.
    
    svn:r1428

commit e3f89fa2753da08e4a7b55d5e9d288eea92cba40
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 11 18:21:57 2009 +0000

    Add a trivial race-fix from Chromium: do not try to re-detect whether we have a monotonic clock every time we make a new event_base.
    
    svn:r1427

commit 3b461a6d03927220eae00e232d26053c71afd60f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 11 18:21:37 2009 +0000

    Treat a negative number of bytes to read as the kernel saying "I don't know."
    
    svn:r1426

commit f65b8b0964bfd2653b5c6c9fbf1196310b77e084
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Aug 19 20:55:25 2009 +0000

    On connect, call only one of BEV_EVENT_CONNECTED or writecb.
    
    Previously, if we had a socket bufferevent in connect state, we'd send
    both of these to indicate that the connection was done.  That was broken
    since the point of adding BEV_EVENT_CONNECTED was so that we could
    distinguish "we're connected" and "we wrote something".
    
    Now, writecb is called only when
       A) the connection finished but the user never put the socket into a
          "connecting" state, or
       B) data was actually written.
    
    svn:r1425

commit 2c1b0e442826baec932e614e8c730fd13ab3cd07
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Aug 16 19:22:15 2009 +0000

    Fix build warnings and add changelog entry for evhttp patches.
    
    svn:r1424

commit c8b0fe4ad76bab55fd089ee1a01720e4af31c7f5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Aug 16 19:22:10 2009 +0000

    Define evhttp_del_accept_socket
    
    [Patch from David Reiss]
    
    svn:r1423

commit 6c53334c65769acd79b423cb89bbd456c7c83977
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Aug 16 19:22:04 2009 +0000

    Define evhttp_{bind,accept}_socket_with_handle
    
    [Patch from David Reiss]
    
    svn:r1422

commit 4bcd5646d8f754a38eec606e2dda37a9696160bb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Aug 16 19:21:57 2009 +0000

    Make evhttp_bound_socket visible, and provide an accessor to its fd
    
    Declare the previously private struct evhttp_bound_socket in
    event2/http.h as an opaque struct.
    
    Implement evhttp_bound_socket_get_fd, which returns the file descriptor
    of an evhttp_bound_socket.
    
    [Patch from David Reiss]
    
    svn:r1421

commit 0755833e8410bed8835f75344cc80a7fd6a703d4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Aug 16 19:21:50 2009 +0000

    Minor documentation fixes
    
    [Patch from David Reiss]
    
    svn:r1420

commit 22bd5b4287fdad8a627b286516392078aebcdcf6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Aug 16 16:40:42 2009 +0000

    Support sendfile on solaris: patch from Caitlin Mercer.
    
    svn:r1419

commit f22823982fe9e21bf49529c366b021183e52b826
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 14 20:07:35 2009 +0000

    New function to put an SSL bufferevent into a renegotiating state.
    
    svn:r1418

commit 46a61869ca066405c47ac5d8036e8c9c5a676f52
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 14 20:07:17 2009 +0000

    Disable whichever struct event we don't want during ssl handshaking.
    
    svn:r1417

commit 58b0708e1881e82a4abf660c7cd8693b17cb594a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 14 20:07:09 2009 +0000

    Only send a connected event _after_ we've adjusted the SSL state.
    
    This is important if the callback adjusts it to something else.
    
    svn:r1416

commit d17c720c052ea639521da7b9d2bb50ec6c3f1bf8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 14 20:07:01 2009 +0000

    Remove an extraneous puts().
    
    svn:r1415

commit eff09a299cb7759a63c988cf542b4eeff7ed0c8f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 14 20:06:48 2009 +0000

    tab/whitespace fixes in bufferevent_sock.c
    
    Also note that write() doesn't usually say 0.
    
    svn:r1414

commit bd26bace0d2f97efe04c20f9cd949edeb541963c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Aug 11 19:47:46 2009 +0000

    When running with deferred callbacks, always send the "connected" event
    before any read/write events, and send timeout/error/eof events after.
    
    svn:r1413

commit 7a55c48d775e94f158fb6db0470c9a68abbec068
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Aug 9 20:18:00 2009 +0000

    Add a few missing changelog entries
    
    svn:r1412

commit 800f9aa607e4fd48d50615c10bb6f71d831c7071
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Aug 9 20:17:29 2009 +0000

    When bufferevent_socket_connect is called with no address, assume that our existing fd is connecting and put the connection into "connecting" mode.
    
    svn:r1411

commit 8a99083f0123765b6b73d7b5efccae1e88fff608
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 7 17:16:52 2009 +0000

    Add an  evbuffer_search_range() to search a bounded range of a  buffer
    
    This can be handy when you have one search to find the end of a header
    section, and then you want to find a substring within the header
    section without looking at the body.
    
    svn:r1410

commit 0c09fe5adac221d2c74fa9891f39fef4600b7461
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 3 20:50:56 2009 +0000

    Add a couple more evdns tests.  Libevent is now, for me, at 80.02% coverage.
    
    svn:r1409

commit 94e8f9b9010e748cfccfaf3c6c46ff1f5009ed1f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 3 20:15:45 2009 +0000

    Another DNS unit tests, to handle reissues.
    
    The evdns module is now up to ~72% coverage; Libevent is up to nearly 80%.
    
    svn:r1408

commit dc1f5b1ee0ae0ebca6f6f2f5228814f3e0dd9ac6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 3 20:15:39 2009 +0000

    why say fprintf(stdout, X) when you can say printf?
    
    svn:r1407

commit 213dc2a2ef719a310de867cbae858e98360952d0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 3 20:15:32 2009 +0000

    Fix an annoying evdns crash bug, and add more unit tests for evdns.
    
    svn:r1406

commit a5006d80cd5ef4d1b38155ee790255ac54ec7e09
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 3 16:15:57 2009 +0000

    Unit tests for DNS search.
    
    svn:r1405

commit d41347722a8599d6daf82a765efe53de573afd2b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 31 17:35:42 2009 +0000

    Refactor evbuffer_readln() into a search-for-eol function and an extract-line function.
    
    svn:r1404

commit a26d2d1b87f373a4d4e48a91575fb6fd4163186a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 31 17:34:47 2009 +0000

    Refactor evbuffer_readln to use evbuffer_ptr; remove old evbuffer_iterator.
    
    svn:r1403

commit 6dc488bd7ee616c84dd2867e34ec6ad26e5f49ac
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 31 17:34:18 2009 +0000

    Improved coverage for evbuffer_readln()
    
    svn:r1402

commit 7c688dd9a2380a8af3f1903d34510ef3feaaa275
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 31 14:41:45 2009 +0000

    New function to expose bufferevent.enabled
    
    svn:r1401

commit 621aafd27a3aafaab6c061f0522a27d62390b3bc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 30 22:11:23 2009 +0000

    Export sockaddr comparison functionality.
    
    svn:r1400

commit cf54d74a651064f93d2fa4074b15abbb2da42b45
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 30 20:41:41 2009 +0000

    More unit tests for Openssl, including initializing with no socket. Up to 75% coverage.
    
    svn:r1399

commit d1a2254bf25e449cf7f0f989e0e9e05792fb585a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 30 20:41:31 2009 +0000

    Fix some bugs in bufferevent_socket_connect
    
    svn:r1398

commit 7a2a51a3a1ea6ece8bab492f9f494dece207eaf7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 30 20:41:21 2009 +0000

    Add unit tests for SSL session renegotiation.
    
    This tickles the write-blocked-on-read code, and in this case turned
    up a bug in it.
    
    svn:r1397

commit 595f7e3877c7597ce2349e725b901f0d5c4e4479
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 30 20:41:12 2009 +0000

    Always retry SSL_write() with the same number you told it last time.
    
    svn:r1396

commit eecefc50e77041c588b2c281f57b5609ae80885c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 30 20:41:00 2009 +0000

    Add a function to extract the SSL object from a bufferevent_openssl.
    
    svn:r1395

commit d5a3f1f11685af21bd38ffceddcb949b7997cd46
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 30 20:40:50 2009 +0000

    Set the SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER flag, and explain why.
    
    svn:r1394

commit 44715517e869afed7fb32419aecd7410b4ab458c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 30 20:40:40 2009 +0000

    Use SSL_do_handshake in place of SSL_connect/SSL_accept
    
    svn:r1393

commit 8a3007efb97f1b0dd1091a366cf341fad6417c7f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 30 17:01:38 2009 +0000

    More evconnlistener unit tests: bump its coverage from 71% to 83%.
    
    svn:r1392

commit 7c20a6ae5231971a49596d12d64beeb98e1562f0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 30 17:01:21 2009 +0000

    Export an ev_socklen_t.
    
    svn:r1391

commit 75fe762e03be63577ccbfa78baf9c78e8be40d7f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 30 17:00:56 2009 +0000

    Accessor function to get a listener's associated fd
    
    svn:r1390

commit 625116295a25e438114f137323d0b5db1c748b4c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 30 17:00:46 2009 +0000

    Add unit test for parsing addresses with bad ports.
    
    svn:r1389

commit 3c99c79df9509ce4da489e237ead4c8104af7b21
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 28 19:45:54 2009 +0000

    Changelog entry for msvc fixes.
    
    svn:r1388

commit 72ea534f8e0eb217695035b549f734eed1695d9e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 28 19:41:57 2009 +0000

    Export evutil_str[n]casecmp as evutil_ascii_str[n]casecmp.
    
    svn:r1387

commit a826a75800ce614a06ae53ddb95c54ccaf2f51d2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 28 19:41:48 2009 +0000

    Some tweaks to Brodie Thesfield's MSVC patch.
    
    svn:r1386

commit 5b5b880be7452eaf42d401f3ad54474ae60a9dbf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 28 19:41:39 2009 +0000

    Various MSVC cleanups from Brodie Thiesfield.
    
    svn:r1385

commit 12199fa7a51ee93479fa0db30c2f7b9c8159bb94
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 28 17:11:03 2009 +0000

    Fix segfault during failed allocatino of locked evdns base.
    
    We need to comb the rest of the code to make sure that we don't blindly wrap
    functions in LOCK(x), UNLOCK(x) when those functions might contain a FREE(x)
    in the middle.
    
    Rocco Carbone found and reported this bug.
    
    svn:r1384

commit f8b527e6a1b3a1cc2b90397b827bf219d0ba3aa6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 28 05:09:06 2009 +0000

    Fix a dumb bug where we would allocate too little memory in event_get_supported_methods().
    
    svn:r1383

commit 709c21c48ca541c75bf803e6801c335d8ae3d043
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 28 04:03:57 2009 +0000

    Bufferevent support for openssl.
    
    This code adds a new Bufferevent type that is only compiled when the
    openssl library is present.  It supports using an SSL object and an
    event alert mechanism, which can either be an fd or an underlying
    bufferevent.
    
    There is still more work to do: the unit tests are incomplete, and we
    need to support flush and shutdown much better.  Sometimes events are
    generated needlessly: this will hose performance.
    
    There's a new encrypting proxy in sample/le-proxy.c.
    
    This code has only been tested on OSX, and nowhere else.
    
    svn:r1382

commit b06b2649b4c7f5feaedea97c31001c14708e4d1f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Jul 26 01:29:39 2009 +0000

    Make "deferred callback queue" independent of event_base.
    
    This way, we can more easily have an IOCP bufferevent implementation
    that does not need an event_base at all.  Woot.
    
    svn:r1381

commit 8cc68835245dd3f542d28299ecfa5c2bc3d471eb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jul 25 03:35:32 2009 +0000

    Fix the main/methods unit test to pass from "make verify".
    
    The problem was introduced when we changed the semantics of
    get_supported_methods() to reflect all the methods that exist.
    Previously, it had not returned methods disabled from the environment,
    but the test didn't know that.
    
    svn:r1379

commit 6fbeb9237c68df4ae2ea6e5119ca6d9b8bc0ca1e
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jul 25 03:23:46 2009 +0000

    call it 2.0.2-alpha
    
    svn:r1378

commit 8eb155a1c0812da33fceb47462c9380d71c320d3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jul 23 14:48:24 2009 +0000

    Fix build on platforms (like Solaris 10, reportedly) which lack a MAP_FILE.
    
    svn:r1375

commit 49de08ef35c77d44cbf7fb4698d0d91612f616ad
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 21 19:20:44 2009 +0000

    Push coverage of event.c a little higher
    
    svn:r1373

commit 59e8e959dcaa9208bf0fa107a5709fa65a660f72
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 21 19:20:25 2009 +0000

    Add clarifying "static" to definitions of fns in event.c
    
    svn:r1372

commit 670658ebd7485e61e32932d35be0e26900a447b8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 21 18:32:57 2009 +0000

    Correct the signatures for evdns_configure_windows_nameservers(), now that it is exposed.
    
    svn:r1369

commit f4775918cd4faeddc090e7755c259cfcf0e094c6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 20 14:55:51 2009 +0000

    Refactor evtag tests into their own suite.
    
    svn:r1366

commit e8400a43ca3f67e44e7593907353c6e5335c304e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 20 14:55:35 2009 +0000

    Rename encode_int(64) to avoid polluting the global namespace.
    
    They're now called evtag_encode_int(64).  The old names are available
    as macros in event2/tag_compat.h.
    
    Also, add unit tests for encode/decode_int64.
    
    svn:r1365

commit dc031990e083bef785ec107271559ccc60705873
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 20 14:55:07 2009 +0000

    Add strcasecmp tests to improve evutil coverage a bit
    
    svn:r1364

commit 1fb2e818a6273571c01aed5ccce30a5d846a1663
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 17 21:47:45 2009 +0000

    Use a uniform strategy when a function is not working: do not expose
    it.
    
    Rather than failing at runtime, it is better to fail at compile or
    link time.
    
    svn:r1363

commit 9cf4ee7e17aa9bb9b53f9135ec2efa9e6563bf23
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 17 21:47:35 2009 +0000

    Fix a simple warning
    
    svn:r1362

commit d3bef1a1e3b93190ef8b1a4459f2c6fb9c205095
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 17 20:32:25 2009 +0000

    Finish implementing new convention that whenever an optional function is declared, a corresponding macro is defined.
    
    svn:r1361

commit a386fde321dd20874a31f8659fa7337b170415de
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 17 20:28:03 2009 +0000

    Checking for MS_WINDOWS rather than WIN32 is a Tor-ism. Fix that!
    
    svn:r1360

commit c02b305ae59a2ac8c01bce36c6c0dbc195503195
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 17 20:23:12 2009 +0000

    Trivial tests to exercise deferred and locking bufferevent code.
    
    These are done as variations of test_bufferevent_connect, since that
    one exercises event callbacks as well as read/write callbacks.
    
    The coverage for bufferevent.c is now up to about 87%, from about 70%.
    
    svn:r1358

commit 61f2a45de165edbb149dd476ec03b9ff134afc63
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 17 20:23:05 2009 +0000

    Add a tinytest flag to initialize threading.
    
    svn:r1357

commit 4ba6eda48fb8cc451f649a19f5a3d2006995073d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 17 20:22:56 2009 +0000

    Make evthread_use_pthreads() actually return 0 on success.
    
    svn:r1356

commit ed038295cdaf1095776f2849b05b9c685fdc78f2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 17 20:22:48 2009 +0000

    Define a macro to indicate that we have defined one of the optional evthread_use macros
    
    svn:r1355

commit 69601fc2f63ff7ed144cd9b42c659d90a564b198
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 17 18:59:22 2009 +0000

    Update event_tv when time jumps backwards, so that we only note each jump once. Fix for 1939984
    
    svn:r1353

commit 9c2ecba7f819072cd562b8bf20060c78a4a63f97
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 17 18:42:12 2009 +0000

    Oops. -1 is an integer, not a pointer.
    
    svn:r1352

commit d6f2e199243ef6eb4b1b96dbff16793a5fe2c202
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 17 18:38:46 2009 +0000

    Unit tests for bufferevent_get(fd|_underlying)
    
    svn:r1351

commit 5d71b25b516332af4dec0fe29d44fea28c06ccd0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 17 18:38:38 2009 +0000

    Remove all trailing whitespace from end-of-line.
    
    svn:r1350

commit d4e3671fb43b8ab2c743fec0f1deb6634e382d7d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 17 18:38:21 2009 +0000

    Add a test to free_active_base to free a base with an active event.
    
    svn:r1349

commit 638116cacd7e6239760fc8ddd76f046a921549c2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 17 18:38:14 2009 +0000

    Add a check for event_add failure to evthread_make_base_notifiable()
    
    svn:r1348

commit a62283a9c3a46c4ba0d72eb3bc18a3db7f9648e2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 17 17:46:17 2009 +0000

    Always hold a reference to a bufferevent when calling its callbacks.
    
    Rationale: we hold a lock on the bufferevent when its callbacks are
    executing, so we need to release the lock afterwards.  But the
    callback might free the bufferevent, so unless we're holding a
    reference on the bufferevent, the lock might not be there for us to
    release.
    
    svn:r1347

commit e83a32dfe1c10c90c27ccf1f4f93a59820517108
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 14 19:31:20 2009 +0000

    Do not define _FORTIFY_SOURCE if the platform GCC already defined it for us.
    
    svn:r1346

commit 9fcd84d196205e3eb6dcd0477005cb04974e703f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 14 19:19:45 2009 +0000

    Include disabled methods in event_get_supported_methods() output.
    
    Previously, events that were disabled using EVENT_NO* were left out of
    event_get_supported_methods().  This was wrong, broke unit tests
    (under some circumstances) and left the user with no good way to tell
    which methods were actually compiled in.
    
    Fixes bug 2821015.
    
    svn:r1344

commit 043515bc52dcc11109c7460fcfd92b67105f3f2a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 14 18:50:06 2009 +0000

    Stop using C++ style comments.
    
    svn:r1343

commit e224321c6413d8245d88655b7d88e5b3a2da0690
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 14 18:49:42 2009 +0000

    Convert and expand free_active_base/event_base_new tests to avoid dbl-free. Patch from Zack Weinberg
    
    svn:r1342

commit 6b4b77a26590f862dff5b490630d2a4b1ea994cd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jul 14 16:54:48 2009 +0000

    Make event_del(E) block while E is running in another thread.
    
    This gives you the property that once you have called event_del(E),
    you know that E is no longer running or pending or active at all, and
    so it is safe to delete the resource used by E's callback.
    
    svn:r1341

commit d866f055857794b8bfad93d93b247b2936a4f7a0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 13 20:03:00 2009 +0000

    Patch from Zack Weinberg: normalize perror() tt functions and add tt_fail/tt_abort_printf
    
    svn:r1340

commit 0cc10e419c6d1bca947a31315138d32d5addf480
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jul 13 20:02:49 2009 +0000

    Use -version-info, not -release.
    
    Patch from Zack Weinberg.  His description:
    
    This one might be a little more controversial. Libtool's -release and
    -version-info options are supposed to be mutually exclusive, but it doesn't
    either enforce that or make it sufficiently clear in the manual. Using
    both makes the -version-info switch ineffective; you will get sonames like
    "libevent-2.0.so.1", "libevent-2.1.so.1", etc., even though version 2.1
    will presumably be backward ABI compatible with 2.0.
    
    This patch just takes out the -release switches and bumps the -version-info
    value to 2:0:0 so that people looking at the files in /usr/lib will not be
    confused (it'll be "libevent.so.2"). This does change the soname, but the
    current release is labeled an alpha, and it would be better to stop using
    both switches as soon as possible, before someone over at libtool
    headquarters decides to enforce the mutual exclusivity here...
    
    Note that libevent_pthreads is not being linked with any versioning
    switches I didn't change that because I wasn't sure whether it was
    intentional.
    
    svn:r1339

commit d3a8ccb8073c3d76b8bfbb4205cfddfd5a351831
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 10 19:38:16 2009 +0000

    Change use of AC_CHECK_LIB to AC_SEARCH_LIBS.
    
    Patch from Zack Weinberg.  His message:
    
      This one eliminates all use of AC_CHECK_LIB in the configure script.
      AC_CHECK_LIB has a serious flaw: if the library you mention *exists*
      but is not *necessary* for the function you want, it adds it to
      $(LIBS) anyway.  This was fine in the days of static libraries,
      because the linker would ignore an .a library that didn't contain
      anything you needed. However, ELF shared libraries are different
      (let's not get into why): the linker will by default record a
      DT_NEEDED entry for every shared object mentioned on the link
      command line. Thus, every use of AC_CHECK_LIB is a potential
      unnecessary DT_NEEDED, making extra work for the dynamic loader. The
      cure is simply to use AC_SEARCH_LIBS instead; it first tries to find
      the function you ask for in libc, and only if that doesn't work does
      it try to use the extra library you mention.
    
      For the same reasons, pkg-config .pc files should distinguish
      between the libraries to use for shared linkage (Libs:) and the
      additional libraries needed for static linkage (Libs.private:). I
      have also made that correction in this patch. I also took the
      opportunity to clean up the substitution variables a little and make
      absolutely sure that the core library does not get linked against
      zlib.
    
    svn:r1338

commit a501d6833bae3415381e62acd6e45f4a22fea5b6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jul 10 19:34:00 2009 +0000

    Add a lock/unlock pair inside the event callbacks in bufferevents.
    
    This fixes part of bug 2800642, I believe, though there is still a
    general race condition in multithreaded use of events that we need to
    think about.
    
    svn:r1337

commit 6469598e568a62072c35a3e9322ad09e102b81a7
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 3 17:43:26 2009 +0000

    Allow C identifiers as struct names; allow multiple comments in .rpc files; from Zack Weinberg; plus a tiny tweak
    
    svn:r1336

commit fbb181d1aaa0cbc22ac8c1ce91a8f2216be95ed9
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 3 17:31:17 2009 +0000

    Allow specifying the output filename for rpcgen; based on work by jmansion; patch from Zack Weinberg.
    
    svn:r1335

commit bbcc54ef9ce0dbbdf4a26b4bcc43cfb9c4e3bec4
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 3 17:25:45 2009 +0000

    fix preamble of rpcgen-generated files to rely on event2 includes; based on work by jmansion; patch from Zack Weinberg.
    
    svn:r1334

commit 37d3e16ce9fe71a7112fd4e35c31629e470dff04
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 3 17:20:56 2009 +0000

    Raise RpcGenError in event_rpcgen.py; from jmanison and Zack Weinberg
    
    svn:r1333

commit 342ad3550ba685c0b0e95a8aa98d86f1509f36ab
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jun 30 14:23:18 2009 +0000

    The truncated bit is in the 3rd byte of a dns reply, not the 4th. [fwd-port]
    
    svn:r1332

commit 5aefb8a6d62c5d9f346d0104fb831d33eb55b88d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 25 15:22:36 2009 +0000

    Fix type on freebsd sendfile. Patch from navin seshadri.  Fixes bug 2811991
    
    svn:r1330

commit f901f9867c3c8a18334e108cb087fa6880864e4e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jun 24 22:40:15 2009 +0000

    When our IP address changes, do not break all existing dns server sockets.  Patch from Christopher Davis
    
    svn:r1329

commit 01be8708e9cbccf4c7ca951853d072fdd2e48c9c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 11 19:09:08 2009 +0000

    Fix compile on cygwin.  This isnt the solution I would like: I would prefer to get pton and ntop to work even when AF_INET6 is not defined.
    
    svn:r1326

commit bbd14de0537bec133dd6fa8e686b5390704bee38
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jun 11 17:55:08 2009 +0000

    Add sometimes-needed header to regress_bufferevent.c
    
    svn:r1325

commit d1ffba1d7ce3979e8aefbdd0a26036fe974e5242
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jun 5 19:52:13 2009 +0000

    Replace some read/write instances with send/recv to work properly on win32.
    
    svn:r1324

commit a43a1c2b237b2bcd0806635055a62f7406a16f2f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 28 20:44:04 2009 +0000

    Fix compilation problems in win32.c
    
    svn:r1322

commit eb97bb76e1a99eed4850f78421392f4765c63a73
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 28 15:58:28 2009 +0000

    Make the headers compile happily with pedantic C compilers.
    
    Original message from SF patch 2797966:
    
        While commas at the end of enumerator lists are valid in c99, they
        are not valid +in c89 nor in c++. When using gcc/g++ with the
        -pedantic flag, users will +receive a warning (gcc) or an
        error(g++) when including the event2/event.h and
        +event2/bufferevent.h. The errors look something like
    
        event2/event.h:159: error: comma at end of enumerator list
    
    Patch from Akita Noek on Sourceforge.
    
    svn:r1321

commit 0b4ab122514f391a24711af0f92b04b8dd0c6055
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 28 15:47:15 2009 +0000

    Spell-check the the headers
    
    svn:r1320

commit 3f0e49283b88c577b9d23fadcc89959a5676778f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 27 23:48:59 2009 +0000

    small doc fix.
    
    svn:r1319

commit cdaca02c2909452de23244738630f408b8eee8e1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 27 15:35:00 2009 +0000

    Activate fd events in a pseudorandom order on older backends.
    
    New backends like poll and kqueue and so on add fds to the queue in
    the order that they are triggered.  But the select backend currently
    activates low-numbered fds first, whereas the poll and win32 backends
    currently favor whatever fds have been on for the longest.  This is no
    good for fairness.
    
    svn:r1318

commit 11a178f2bdd533d4f4cf7448653b0adc30c9779f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 25 23:11:31 2009 +0000

    Defer EOF on paired bufferevent correctly.
    
    svn:r1317

commit 5232cfa357e2d1a7cf2c6936e565fd79dade7aae
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 25 23:11:20 2009 +0000

    Consistently say "eventcb" instead of "errorcb"
    
    svn:r1316

commit 2f655f008cf6d019114cbdd8cac30ffcd4c44140
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 25 23:10:47 2009 +0000

    Add documentation for bufferevent-internal.h stuff
    
    svn:r1315

commit 34574db0f8bad98f59e66e62b94a2abec6211d5f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 25 23:10:23 2009 +0000

    Add a generic mechanism to implement timeouts in bufferevents.
    
    Paired and asynchronous bufferevents didn't do timeouts, and filtering
    bufferevents gave them funny semantics.  Now they all should all work
    in a way consistent with what socket bufferevents do now: a [read/write]
    timeout triggers if [reading/writing] is enabled, and if the timeout is
    set, and the right amount of time passes without any data getting
    [added to the input buffer/drained from the output buffer].
    
    svn:r1314

commit 49f18a0aab4a6456f9da9d2367d9f680310039fc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 25 20:02:51 2009 +0000

    Add requirement in configure.in for autoconf 2.59c.  Needed for ssize_t test.  Spotted by Yang Hong.
    
    svn:r1313

commit dfe321e1ee27cc5d128c932f584535b089cd80d8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 22 20:11:29 2009 +0000

    Add missing windows include in time-test.c
    
    svn:r1311

commit e8343e9ff18b768fdc0944da18350349ef26cdf0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 22 19:11:59 2009 +0000

    work around missing __func__ in sample code
    
    svn:r1310

commit 0b22ca192991aa5fa95e958cd6b010d89915bdb3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 22 19:11:48 2009 +0000

    Use ev_ssize_t in place of ssize_t *everywhere*.
    
    svn:r1309

commit 7289d7f80071cffe1b0e4886c9efc6d688f6d3b1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 22 18:20:59 2009 +0000

    Fix a potentially very annoying evdns bug that we found in Tor.
    
    Generally speaking, it way better to event_assign() an event when you
    allocate it than to assign it before every time you event_add it: if
    it is already event_add()ed, the assign will mess it up so that it
    doesn't _look_ added, and event_add() will insert a second copy.
    Later, event_del() will only delete the second copy.  Eventually, the
    event_base will have a dangling pointer to freed memory.  Ouch!
    
    svn:r1307

commit 7a844735d531e9b5fc0de28a3eafb87e88199396
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 22 17:20:05 2009 +0000

    Fix some small win32 build issues on trunk.
    
    svn:r1306

commit 8c66eb2e9b13e409cda3b296d292c3def1c20cd1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 22 14:48:40 2009 +0000

    Try to contain the failure when we are running without socketpair().
    
    Some win32 systems (mostly those using Kaspersky, it would seem)
    prevent us from faking socketpair().  This makes our signal
    notification code just not work.  Our response since 1.4 has been to
    assert.  For users who would rather work without signals than not work
    at all, this has been a regression from 1.3e.
    
    This patch makes adding signal events fail in this case; there's no
    reason to kill the whole process.
    
    svn:r1303

commit 59cd49363c470195b892693e2c394f74ddc1f5ce
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 22 14:31:07 2009 +0000

    Do not free the event base lock until we are done removing all the events.  Spotted by Joachim Bauch; fixes bug 2795402.
    
    svn:r1302

commit 1ee65b7f94dd94ce0bc5159fd6117f916857dcd9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 21 20:59:17 2009 +0000

    Do not assume we know the value for FD_CLOEXEC.
    
    svn:r1301

commit 7e3ea82ee6f89d9d7035aec388c766e235752f79
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 21 20:59:09 2009 +0000

    Disallow backlog==0 in evconnlistener_new_bind().
    
    svn:r1300

commit 8997f234f23ce0599250ce7b831d56a04f240f61
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 21 20:59:00 2009 +0000

    Use the native "struct iovec" as our "struct evbuffer_iovec" when available, so we do not need to copy more pointers than necessary.
    
    svn:r1299

commit 594842970ead07fd3e100234c908744563d0f734
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 20 12:24:13 2009 +0000

    Fix a deadlock: there were some LOCKs that should have been UNLOCKs.  Resolves bug 2794244
    
    svn:r1298

commit 66df9dafe1a8f25760f2a5eefb04aa3ad0a448d5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 19 21:49:53 2009 +0000

    Add changelog for last commit
    
    svn:r1297

commit 23243b8a985e26e19deafd81e58159d545a31f34
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 19 21:39:35 2009 +0000

    Replace reserve/commit with new iovec-based interface.  Add a new evbuffer_peek.
    
    svn:r1296

commit ed1bbc7a9f41be00607b3f56933378a625838d6a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 18 16:15:56 2009 +0000

    Tweak the evconnlistener interface a little.
    
    svn:r1295

commit dc4c7b95707864d09d710fbe4736f05a39e823a0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 15 22:44:18 2009 +0000

    Change the interface of evbuffer_add_reference: give the cleanup function more info.
    
    svn:r1294

commit bba69e03f8101ec3efe7db69973fc93151e242ba
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 15 20:23:59 2009 +0000

    New semantics for evbuffer_cb_set_flags().
    
    Previously, set_flags() would replace all previous user-visible flags.
    Now it just sets the flags, and there is a clear_flags() function to
    clear other flags.
    
    svn:r1293

commit b4886ec80d11a20f0b247db2378a5eea9dee1e24
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 15 18:44:44 2009 +0000

    Trim 22 bytes from struct event on 32 bit platforms, more on 64-bit platforms.
    
    svn:r1292

commit 85b0a7a23f83370af1f029b744fa1387cab6fa06
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 15 01:38:23 2009 +0000

    We were distributing the wrong event-config.h with our source distributions.  Fix that.
    
    svn:r1289

commit 27fef1ef2699f71faaaab1d0d2051704da05474a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 14 18:06:41 2009 +0000

    Note problems with some newer evbuffer interfaces.
    
    svn:r1286

commit 3e759a0172b935b900ac6058c62716cce7c9af52
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 14 18:06:29 2009 +0000

    Actually, do not provide a compatibility name "EVBUFFER_CONNECTED": there is no old code that uses it.
    
    svn:r1285

commit 31d89f274bc28655bca3e6aec19b90080cb09add
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 13 20:37:21 2009 +0000

    Add a "ctrl" mechanism to bufferevents for property access.
    
    OpenSSL uses something like this to implement get/set access for
    properties on its BIOs, so that it doesn't need to add a pair of
    get/set functions to the vtable struct for every new abstract property
    it provides an accessor for.
    
    Doing this lets us make bufferevent_setfd abstract, and implement an
    abstract bufferevent_getfd.
    
    svn:r1284

commit 83f46e51d77759cc1857519f4bc94e833404980d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 13 20:36:56 2009 +0000

    Do not use the "evbuffer_" prefix to denote parts of bufferevents.
    
    This is a bit of an interface doozy, but it's really needed in order
    to be able to document this stuff without apologizing it.  This patch
    does the following renamings:
    
       evbuffercb -> bufferevent_data_cb
       everrorcb -> bufferevent_event_cb
       EVBUFFER_(READ,WRITE,...) -> BEV_EVENT_(...)
       EVBUFFER_(INPUT,OUTPUT) -> bufferevent_get_(input,output)
    
    All the old names are available in event2/bufferevent_compat.h
    
    svn:r1283

commit f11dff2c7a40ee723c7ef6d32c3c333d2538c3c4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 7 03:45:51 2009 +0000

    Add and use locale-independent strcasecmp functions.
    
    svn:r1280

commit 89109010200c3702b8f2c031aa7982ed80f86733
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 6 02:34:10 2009 +0000

    Addition to bufferevent_async unit test
    
    svn:r1279

commit a8bcbfd4160b7f55ace800f632108333b56dc327
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 6 02:33:37 2009 +0000

    Fix bufferevent_async to use lock/unlock, not unlock/unlock.
    
    You do NOT want to know what windows does when you unlock a lock that is already unlocked.
    
    svn:r1278

commit fe47003d06e4f036de6874c1d00098cd6a687de5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 5 16:52:37 2009 +0000

    Make unit tests for bufferevent_async compile and _almost_ work.
    
    Either I need to make the callbacks get deferred in a base with no events (doable), or I need to make it okay to call launch_read from inside the callback for read (tricky).
    
    svn:r1277

commit 02801e5be5e14ef783d5a4095cca32d21fc7da8f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 5 15:36:28 2009 +0000

    Add a trival start of a be_async test.
    
    svn:r1276

commit af8b82224bffd93c885dfcb84c64ca63a0e6cc7e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 5 15:30:58 2009 +0000

    Add missing include to buffer_iocp.c
    
    svn:r1275

commit b69d03b5a8eaf906575d44615e5bf0cab6fbe66a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 5 14:18:14 2009 +0000

    Add a constructor for bufferevent_async.
    
    svn:r1274

commit 6b21fe2be89c2be0974aa125fc2c3fe12e24522e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 5 03:01:24 2009 +0000

    oops; do not forget to distribute listener.h
    
    svn:r1273

commit 659d54d5304c476f5cf0ec502235e376e1d2d8a1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 5 02:59:26 2009 +0000

    Add new code to make and accept connections.
    
    This is stuff that it's easy to get wrong (as I noticed when writing
    bench_http), and that takes up a fair amount of space (see http.c).
    Also, it's something that we'll eventually want to abstract to use
    IOCP, where available.
    
    svn:r1272

commit 0fd70978c8d83f0f677a0d119f2737d0b68ac511
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue May 5 01:09:03 2009 +0000

    Add an event_get_base() function to remove one more reason to include event_struct.h
    
    svn:r1271

commit 0e63e72a0515559b972b9c525593d6d94471c949
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun May 3 18:56:08 2009 +0000

    Nothing ever sets event_sigcb or event_gotsig any more: remove them.
    
    svn:r1270

commit bd73ed48e5cfe72dae168e9534398accb88b349a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 2 16:24:23 2009 +0000

    Revise regress_pthreads.c to not use event_set
    
    svn:r1269

commit 5a3eddf03f9a2c2d9bf52326e504be1555e2882f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 2 16:24:05 2009 +0000

    Use fewer _compat.h headers in our own code.
    
    svn:r1268

commit d5ca076379a82677d7148456e975bcb2f9f1b4b5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 2 16:23:29 2009 +0000

    Move event_set() and friends to event2/event_compat.h.
    
    These functions are deprecated in favor of event_assign().
    
    svn:r1267

commit 00ecd1d8e4571e019406293b28042b0628a676fd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 2 16:23:08 2009 +0000

    Make evrpc use event2/rpc*.h, not evrpc.h
    
    svn:r1266

commit 7b24d72ad616fe4927f452518bd058164db44854
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 2 16:22:55 2009 +0000

    Remove some duplicated includes in evdns.c
    
    svn:r1265

commit a109d95c72635e6c4ea046af31a6b0cb261600ca
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 2 16:11:06 2009 +0000

    Add changelog entry for vc++ fixes
    
    svn:r1264

commit 1aebcd50476c0341d04a351351be228ed2b41d56
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 1 01:42:33 2009 +0000

    Initial core implementation of bufferevent_async.c
    
    svn:r1263

commit e865eb938ca5614b1897f265f50587bc71f2c6b1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 1 00:54:14 2009 +0000

    More msvc build tweaks.
    
    svn:r1262

commit b2e8fd0e41d3437d7214fb4604e22476ddc94e4d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 30 23:56:53 2009 +0000

    Apparently MSVC lacks a ssize_t.  Define an ev_ssize_t for headers, and make ssize_t work elsewhere.
    
    svn:r1261

commit ebf294559e47717872fb7cc31764bcfba2d0e840
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 30 23:49:15 2009 +0000

    Compilation fixes for vc++ 2008 express.  Not the end of them.
    
    svn:r1260

commit 7f9678079fdef0a1373b91dc4c8a7df62763f673
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 30 20:48:40 2009 +0000

    Initial unit test for overlapped evbuffer usage.  It's lame, but it doesn't crash any more.
    
    svn:r1259

commit efc24f7cf108e87b9b5b001af87deb08755d2425
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 30 20:47:38 2009 +0000

    Get launch_read and launch_write to (apparently) work.
    
    svn:r1258

commit 23121bfb41c70351877cd7e4a2f6a0b80671fad0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 30 19:56:23 2009 +0000

    Fix a reversed check in upcast_evbuffer
    
    svn:r1257

commit 16612eb936ef702c8bcdfc7330d159bb09a6bc28
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 30 19:20:42 2009 +0000

    Beef up the events in the last test a little.
    
    svn:r1256

commit ec1468832e182406049e975c7b546732329054a7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 30 19:05:43 2009 +0000

    Oops: actually commit changes to build and use regress_iocp
    
    svn:r1255

commit f1090833b2557bc18353aee293a61ee556da80df
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 30 19:04:44 2009 +0000

    First tests for IOCP loop, and related fixes.
    
    The fixes are: a shutdown mode that works, and a way to activate an
    arbitrary event_overlapped.
    
    svn:r1254

commit b45cead762ca0d9b59a71d9a97fe95ce9a4639c3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 30 18:05:33 2009 +0000

    Make environment-variable tests work on win32, which has only one method and lacks (un)setenv.
    
    svn:r1253

commit 24607a397c5f63c73d82b1ac55ce9b9530187a5f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 29 20:48:43 2009 +0000

    Note a place we might do better about lock releasing.
    
    svn:r1252

commit 50e20fe076ce1b4f6728a6fd715e14629b0b25ca
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 29 20:48:35 2009 +0000

    fix a typo in a comment
    
    svn:r1251

commit 37bc34662b22afd96e44e81c4da251383a1a8f15
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 29 20:48:28 2009 +0000

    Catch attempts to event_base_once a persistent event.
    
    svn:r1250

commit 1959414120308bd72d82a7a9736870fa7b32a927
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 29 20:48:21 2009 +0000

    Clarify semantics on event_pending()
    
    svn:r1249

commit 9ad45eef75a8dd6e6895707a7f1ace8c376732d2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 28 19:08:36 2009 +0000

    Patch from Eric Hopper: the test for EVENT_BASE_FLAG_IGNORE_ENV was inverted.
    
    svn:r1248

commit 586aa46886ae0868e690b5ac698733896d992b86
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 28 19:08:27 2009 +0000

    Unit test for disabling events with EVENT_NO*, and for EVENT_BASE_FLAG_IGNORE_ENV.
    
    svn:r1247

commit 2ebfd3bafde18cadc4c337d507e7d2739112a652
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 28 19:08:17 2009 +0000

    Oops. We never actually defined event_config_set_flag().
    
    svn:r1246

commit 11cab334189a473b4f51368787251df4fa655641
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 28 19:08:07 2009 +0000

    Fix compile: #elif FOO is not the same as #elif defined(FOO).
    
    svn:r1245

commit a146af1db892bf2e85cd80599ab992b8a79420ea
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 25 00:15:55 2009 +0000

    move more code directly into evrpc.c; provide backwards compatible vararg macros
    
    svn:r1244

commit b228ff91b857158933dd2162bdf872749a6b9cb8
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 25 00:15:31 2009 +0000

    remove vararg macros for accessing evrpc structs
    
    svn:r1243

commit f69cd80d17b6118503dc39dc676471ab452a59d4
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 25 00:15:09 2009 +0000

    refactor evrpc.h header filer
    
    svn:r1242

commit bbf79707f9b19c1b732baa75e9943ff106173a80
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 25 00:14:58 2009 +0000

    refactor evrpc.h header filer
    
    svn:r1241

commit 5c4c13d8c24ae4451d753c5b5bfa9444d7bc08da
Author: Niels Provos <provos@gmail.com>
Date:   Fri Apr 24 03:24:22 2009 +0000

    make sendfile work on freebsd
    
    svn:r1239

commit a5897917da9549daf56173fc7a59c3ac97a92597
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 23 21:43:44 2009 +0000

    Changelog entry for r1237
    
    svn:r1238

commit ec6bfd033566562730d2f37333b3f26bf0ba1391
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 23 21:41:53 2009 +0000

    Fix for evbuffer_read() when all data fits in penultimate chain.
    
    Previously we were reading into the next-to-last chain, but incrementing
    the fullness of the last.  Bug found by Victor Goya.
    
    svn:r1237

commit faa756c7c19190dd8d5c27fa519870bac0c78cee
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 23 21:34:37 2009 +0000

    Oops. event_config.flags was never initialized.  Bugfix on 2.0.1-alpha.  Found by Victor Goya.
    
    svn:r1236

commit d70b0804888beef9d562ab73e4fde8962e1b5635
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 23 18:08:42 2009 +0000

    Make main/methods test pass on systems where only one backend exists.
    
    svn:r1235

commit 1ad03264408238061cf894e7b4a0ffb4b8660315
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 23 18:04:50 2009 +0000

    Fix win32 compilation issues.
    
    svn:r1234

commit c5c9589fb0a37bdbe101a05256ec93eaa865ea6f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 23 06:27:58 2009 +0000

    Add missing case to make http.c compile with warnings enabled.
    
    svn:r1232

commit 9516df0e2eeb28234f679a65062631d409781346
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 23 05:40:06 2009 +0000

    Fix c89 bugs reported by Cory Stup.
    
    Others may remain.  I wasn't able to get gcc --std=c89 to build libevent
    at all, so I don't know what compiler the original reporter is using here.
    
    Note that this change requires us to disable the part of our rpc code
    that uses variadic macros when using a non-gcc compiler.  This is a
    problem if we want our rpc api to be portable.
    
    svn:r1231

commit 8ba25b9ec7b66facafdd2c59bf55aefaeeab9042
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 23 05:20:08 2009 +0000

    Add missing regress_minheap.c file
    
    svn:r1230

commit 5c104cef5198473441d40e760fb4ea6fea989231
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 23 00:33:37 2009 +0000

    Add a randomized test for heap correctness.
    
    svn:r1229

commit df0617f28978f809a93bbaf1efc24372a2d8d39f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 23 00:21:23 2009 +0000

    Use signal.h, not sys/signal.h.
    
    This is patch 2673214 from mmadia.  It is correct, since we unconditionally
    include signal.h in many other places, and only sometimes include sys/signal.h.
    It is necessary to compile on Haiku, I'm told.
    
    svn:r1228

commit 8b7a3b3676375d145e0b89d3f3d9194c7031a760
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 23 00:01:24 2009 +0000

    Fix min_heap_erase when we remove an element from the middle of the heap.
    
    Previously, we could lose the heap property when we removed an item
    whose parent was greater than the last element in the heap.  We would
    replace the removed item with the last element, and consider shifting
    it down, but we wouldn't consider shifting it up.
    
    Patch from Marko Kreen.
    
    svn:r1226

commit 0068c98ad2653c3ed3ac70250893531d072c2fbb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 23 00:01:14 2009 +0000

    Make version test ignore the bottom byte of the version number.
    
    svn:r1225

commit e2b987ede1ee90a94977f5284e33e8e8ce153802
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 23 00:01:05 2009 +0000

    bump the numeric version; this is not the same as the alpha.
    
    svn:r1224

commit b21be2454553b245844c9bd91979257ee38d1140
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 23 00:00:55 2009 +0000

    Somehow free_active_base was using the socketpair, but not saying it needed it.  How did this ever work?
    
    svn:r1223

commit 253151c54cc224aefe0c7123d0fb44fa762b0f70
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 22 20:28:30 2009 +0000

    Detect and reject n_priorities less than 1.
    
    svn:r1222

commit 01bda2b8fa4c34a633efedacb95b64689d6b366a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 22 20:27:21 2009 +0000

    Add forgotten changelog.
    
    svn:r1221

commit 11ff74cf648f2b934a5b75d23611abbd92a88e7c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 22 19:41:23 2009 +0000

    Add a flag to disable checking the EVENT_* environment variables.
    
    svn:r1220

commit 1f9c9e5137128ba63831fe77f3dac1efebb350a2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 22 15:38:50 2009 +0000

    Add a missing "static".
    
    svn:r1219

commit 133a015dba3d80c99de89ac427108a783179b871
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 21 18:48:05 2009 +0000

    Make sure the test case for mem_functions hits strdup too.
    
    svn:r1218

commit d3fbe7fa05680ecf4c8a01c0db5277ef5d3db5f8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 21 18:47:53 2009 +0000

    Do not free the signal index unless it was at some point allocated
    
    svn:r1217

commit 7f1855d064a6676a82802b481b75e1eae4aec73f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 21 18:47:35 2009 +0000

    Add a basic test for set_mem_functions
    
    svn:r1216

commit ea8cc76cf8553ceff764407d49360e0b36bcd835
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 21 18:47:23 2009 +0000

    Fix the documentation of event_pending.
    
    svn:r1215

commit 386279d051a644b9d895a55414af648ca8d4e24b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 21 18:47:02 2009 +0000

    Add a test for event_pending; especially the timeout part.
    
    svn:r1214

commit ff1f429510b2fc946e65d46b57adb6f1c96e49f2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 21 18:46:43 2009 +0000

    Unit tests for event_base_once.
    
    svn:r1213

commit ea664bf29a76966ffbc613e10689e17d18245472
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 21 18:46:30 2009 +0000

    Refactor test wrappers to divide legacy items from useful stuff.
    
    svn:r1212

commit 122e934e92fe27e76d469dab58e50f47f0a358a9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 21 18:46:11 2009 +0000

    Add unit tests for version methods and feature-based backend selection
    
    svn:r1211

commit 7cf8a7b0e04e5c853734d1648d398ccc7e7aeb3d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 21 18:45:59 2009 +0000

    Call the main testcases "main", not "legacy".
    
    svn:r1210

commit 1bb8e010f99fa0bfe64f4440caf6e9ef80013fb4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 21 16:17:59 2009 +0000

    Format microseconds correctly in bench_httpclient
    
    svn:r1209

commit eda27f9557eaf25d10b02c0b498be1a292491874
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 19 20:54:12 2009 +0000

    Update copyright notices, add some missing license statements
    
    svn:r1208

commit 0c15d6ab7d50d7d17c5dce766ec46dc72d196825
Author: Niels Provos <provos@gmail.com>
Date:   Sun Apr 19 13:33:52 2009 +0000

    defer-internal.h was missing from dist; so our first tar ball did not even compile. ouch.
    
    svn:r1207

commit b7907a7bfb3b44548ef47df2d0b1eef02b632036
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 19 01:59:25 2009 +0000

    Note dns work in changelog and whatsnew
    
    svn:r1206

commit 2d9619d78f05b475148b0efce59b6fd59382c36c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 19 01:59:09 2009 +0000

    Make dns callbacks run deferred
    
    svn:r1205

commit 327165b339bbe996cfee0eea12b06e43bdc5aa63
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 19 01:58:54 2009 +0000

    Add locks to evdns.
    
    svn:r1204

commit ac3fc9913a9336f0aed4a178a553200b9c01801e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 19 01:58:41 2009 +0000

    Use new-style headers in evdns.c
    
    svn:r1203

commit 4d8919ec442ede9e479c861f5d31476c8be946ab
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 19 01:58:26 2009 +0000

    Do not try to double-free the nameserver in regression test
    
    svn:r1202

commit b182ed765e3484719eab1281e1b0b440745feae4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Apr 18 18:28:18 2009 +0000

    More tweaks to http stress-tester
    
    svn:r1201

commit a835c7cf1843a4232ba7f76b4a3c2bfedd39f833
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Apr 18 18:27:56 2009 +0000

    fix a misindent
    
    svn:r1200

commit f00f0c253354b319b9ef23a7208daf20b14f78f2
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 18 04:34:45 2009 +0000

    make doxygen happier
    
    svn:r1199

commit e4f24219ee93f3b9dc20991b18e71230468b7b94
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Apr 18 00:12:52 2009 +0000

    Add a new bench_httpclient for a trivial codecon demo.
    
    svn:r1198

commit a98a512bc1dc85a87cd00fa7682aeccaeea2859c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 23:12:34 2009 +0000

    Add a generic way for any bufferevent to make its callback deferred
    
    svn:r1197

commit 99de18670e59616e6794c2b371ffde17f002d339
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 23:07:48 2009 +0000

    Bump version to 2.0.1-alpha-dev so that nobody mistakes a svn checkout for 2.0.1-alpha.
    
    svn:r1196

commit d047b323bd030d81cb03e286dac3a935862427c7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 17:22:32 2009 +0000

    Increment version to 2.0.1-alpha, and add a numeric version facility
    
    svn:r1193

commit b346038724c827ed487653d35a1ed1a05d10fc67
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 06:58:18 2009 +0000

    Even _more_ recent tinytest, designed to give better help output.
    
    svn:r1192

commit 2c4c294ed8168c3d9bea99d02896235cd8d7385f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 06:58:04 2009 +0000

    note new unit test framework.
    
    svn:r1191

commit 812800629b15c20c7d5fc15c6999c0df47136005
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 06:57:52 2009 +0000

    Add the latest tinytest.  This one supports a --terse flag and a --no-fork flag, and outputs nicer.
    
    svn:r1190

commit 91039e4d48c6306c749e44853891416d131cee6d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 06:57:38 2009 +0000

    Add reference counts to bufferevents.
    
    svn:r1189

commit 1351e61cf671c94f665b16c7fd97bae99266a350
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 06:57:25 2009 +0000

    Write a huge pile of whatsnew-2.0.txt
    
    svn:r1188

commit 49354138425021ecc2a576efc1d51a5bcad63ad5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 06:57:13 2009 +0000

    Oh hey.  There is no support for suspend/unsuspend.
    
    svn:r1187

commit 7fa8451d7e9310d0aac2f619ffecb3bd93dca267
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 06:56:57 2009 +0000

    Add a configure flag to hardcode all of our mm functions.
    
    svn:r1186

commit 64a37e61a12330b2e3793c63eb11bfa7025ffaf6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 06:56:36 2009 +0000

    Fix evmap indentation to be less stupid.
    
    svn:r1185

commit 9097c95b6ea003bcf5f7a9536adb7bc7d65a682d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 06:56:23 2009 +0000

    Rename whatsnew file to reflect actual version.
    
    svn:r1184

commit a8f6d961eb3bec921473e91c72675c1dbe853f2e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 06:56:09 2009 +0000

    Actually stop using EVBUFFER_LENGTH/DATA, and move them to buffer_compat.h
    
    svn:r1183

commit 796ba15fc6b6e2e0e17e78ac92e00ee79d4d69c0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 06:55:25 2009 +0000

    Stop claiming that APIs we have are missing.
    
    svn:r1182

commit 838d0a81c3343432897739d14e2af1a4e5edb7db
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 06:55:08 2009 +0000

    Document many internal functions and pieces of code.
    
    svn:r1181

commit 433e2339ca1605326f35c2d873a42f6d2abe505d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 17 06:54:28 2009 +0000

    Remove long copy-and-paste section full of windows api notes.
    
    svn:r1180

commit 30648529e888dd7438d13d7a0b86625a24c6abcf
Author: Niels Provos <provos@gmail.com>
Date:   Fri Apr 17 01:03:07 2009 +0000

    have evhttp_set_cb return an int; -1 on failure, 0 on success; this is better than returning a pointer
    
    svn:r1179

commit edfc28caef29a203deaef4c0b808ad8caa7fa012
Author: Niels Provos <provos@gmail.com>
Date:   Fri Apr 17 00:24:58 2009 +0000

    pkgconfig support from Ted Bullock
    
    svn:r1177

commit 0b987813537b74835a5c3990de756d35ea9b4fbc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 16 00:32:52 2009 +0000

    More hacking on event_iocp.c: make it compile, and give it more of an interface.  This code is now testable.
    
    svn:r1176

commit 09c23b6a5679b1a4a871bdd3143e615209aac05d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 16 00:27:32 2009 +0000

    It seems support for GetCompletionEventEx is not in my mingw.  Use the simpler interface instead, for now.
    
    svn:r1175

commit 93d4f884aa2f42d832b4fefa0fe4d39bb0098750
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 14 20:11:10 2009 +0000

    Make buffer iocp stuff compile happily
    
    svn:r1174

commit fe95df15d3c5ad424c76f75596452f0229e191b2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 13 18:32:24 2009 +0000

    Fix typo in mm_free
    
    svn:r1173

commit ca737ff3b5e0b5e93e3b2bd49d5434ff20e95d1e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 13 18:29:31 2009 +0000

    Add draft (nonworking) versions of iocp code to hack on more.
    
    svn:r1172

commit 4e8cdc6f086bcf0b31df203451aa38741e149ac3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 13 18:23:02 2009 +0000

    Fix two windows compilation bugs.
    
    svn:r1171

commit 915193e7df010fb3f280208b1e7af8c74b462686
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 13 03:17:19 2009 +0000

    Locking support for bufferevents.
    
    svn:r1170

commit 1becc4c4e656213d0f71938029a08a2da04dc97f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 13 03:08:11 2009 +0000

    Refactor new elements of bufferevent into bufferevent_private structure
    
    This way we don't expose more of a bufferevent than we need to.  One
    motivation is to make it easier to automatically get deferred callbacks
    with a bufferevent without exposing the deferred_cb structure.
    
    svn:r1169

commit 6567ecd4c587563be843ee8803417b53d3318cbd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 13 03:07:37 2009 +0000

    Remove if0 code in bufferevent_struct.h
    
    svn:r1168

commit 8dec59bb35c16aa18f90135f23cb4307817f140d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 13 03:07:17 2009 +0000

    Use freeze operations to prevent shenanegans on bufferevent pair evbuffers.
    
    svn:r1167

commit 0e32ba54dcccdd40e6cf02124827a9b57d9fd97d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 13 03:06:59 2009 +0000

    Do not remove an empty chain that we have pinned for reading when we drain the whole buffer.
    
    svn:r1166

commit 9f1a94ecec836aae50ce761f1a269881a5f42167
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 13 03:06:47 2009 +0000

    add pin/unpin functions, and a deref-and-free pair.
    
    svn:r1165

commit dcda7915acb64e67b8cb6089e2ff265e83f7ee3e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 13 03:06:27 2009 +0000

    Add a reference count to evbuffers.
    
    svn:r1164

commit b01891fe1d48fc2ee7a0f39e671447195ada8177
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 13 03:06:05 2009 +0000

    Make evbuffer_commit_space trigger callbacks.
    
    svn:r1163

commit 829b52b6c1af2c43aa240d3d4e832b5914c34124
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 13 03:05:46 2009 +0000

    Refactor the code that sets up iovecs for reading into its own function.  iocp needs this.
    
    svn:r1162

commit 0b47b125cfe584f6d6c12a748208ceec3430990e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 12 22:02:54 2009 +0000

    Add a new EVUTIL_UPCAST macro so that I do not need to keep figuring out the right offsetof magic over and over.
    
    svn:r1160

commit bbd6a332e17fd934d7ec9cac6b9dd2f327c60bcb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 12 22:02:12 2009 +0000

    reindent macros in util-internal.h
    
    svn:r1159

commit d475fb5861a6203fc4fa3bd9e6957e2a34159a91
Author: Niels Provos <provos@gmail.com>
Date:   Sun Apr 12 00:38:31 2009 +0000

    http benchmark: add a way to change the size of the buffer; also use add_reference
    
    svn:r1158

commit d2794e65e018166c2ecf598f8e77c4f4d5abd2f4
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 11 15:26:29 2009 +0000

    document evhttp_parse_query better
    
    svn:r1157

commit 382a1587a040f2c771484d64c631832249fff14e
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 11 04:18:49 2009 +0000

    previous commit changed the semantics of evhttp_decode_uri; need a test for that
    
    svn:r1156

commit b29b875d8476d2e1603e7703ef5309cbd7cae79f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 10 20:43:08 2009 +0000

    Facility to make evbuffers get their callbacks deferred.
    
    svn:r1154

commit decdacfaf8265cf9520eabcf4215501566376d84
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 10 20:42:53 2009 +0000

    Better explanation for bufferevent_pair
    
    svn:r1153

commit 23085c92477035507c499530d4a200bceee5d8a1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 10 15:01:31 2009 +0000

    Add a linked-pair abstraction to bufferevents.
    
    The new bufferevent_pair abstraction works like a set of buferevent_sockets
    connected by a socketpair, except that it doesn't require a socketpair,
    and therefore doesn't need to get the kernel involved.
    
    It's also a good way to make sure that deferred callbacks work.  It's a good
    use case for deferred callbacks: before I implemented them, the recursive
    relationship between the evbuffer callback and the read callback would
    make the unit tests overflow the stack.
    
    svn:r1152

commit 8161662007e4ffe8c71e3f8267733b2131d8d619
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 10 14:58:15 2009 +0000

    A couple of tweaks for deferred callbacks.
    
    svn:r1151

commit 4868f4d217d19d4b0f4e45c4648460c21bc5f80f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 10 14:22:33 2009 +0000

    Initial support for a lightweight 'deferred callbacks'.
    
    A 'deferred callback' is just a function that we've queued in the
    event base.  This ability is needed for some mt stuff, and for complex
    callback chains.  For internal use only.
    
    svn:r1150

commit e3d82497c99d9cb3b1b23cc746b448811910e260
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 10 14:21:53 2009 +0000

    Don't allow internal events to starve lower-priority events.
    
    This is exceptionally important with multithreaded stuff, where we use
    an event to notify the base that other events have been made active.
    If the activated events have a prioirty number greater than that of the
    notification event, it will starve them, and that's no good.
    
    svn:r1149

commit ce146eb1cb02a6ed29beecc16da611030d471937
Author: Niels Provos <provos@gmail.com>
Date:   Fri Apr 10 05:43:45 2009 +0000

    Fix parsing of queries where the encoded queries contained \r, \n or +
    
    svn:r1148

commit 6dece3e980a5f4d3f8dd40436603772d59e821dd
Author: Niels Provos <provos@gmail.com>
Date:   Fri Apr 10 05:22:15 2009 +0000

    revert last commit; git user error
    
    svn:r1147

commit f43f1d14c50d54630b05b2da4ea792709b358d17
Author: Niels Provos <provos@gmail.com>
Date:   Fri Apr 10 05:18:18 2009 +0000

    initial version of query decoding patch
    
    svn:r1146

commit f98385a4074a0d90bbec89ea57652e3baf112568
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 8 16:57:38 2009 +0000

    add a missing "static" to timeout_process.
    
    svn:r1145

commit 72b6ffe869f63180a55f7c3d2582dc1c37314cc5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 8 03:05:42 2009 +0000

    Prevent unsupported modifications to bufferevent_sock buffers.
    
    In particular, we don't allow adding any data to end front of inbuf
    (we do that when we read), or removing it from the front of outbuf (we
    drain data only when we write).
    
    svn:r1144

commit 747331d164ea4839a89e168f9f712159509984db
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 8 03:04:39 2009 +0000

    Add freeze support to evbuffers.
    
    From the documentation:
       Prevent calls that modify an evbuffer from succeeding. A buffer may
       frozen at the front, at the back, or at both the front and the back.
    
       If the front of a buffer is frozen, operations that drain data from
       the front of the buffer, or that prepend data to the buffer, will
       fail until it is unfrozen.   If the back a buffer is frozen, operations
       that append data from the buffer will fail until it is unfrozen.
    
    We'll use this to ensure correctness on an evbuffer when we're waiting
    for an overlapped IO call to finish.
    
    svn:r1143

commit d9086fc00777ff841209fdc8373a1b3ae784dec6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 8 03:03:59 2009 +0000

    Add a new facility to "pin" the memory in an evbuffer chain.
    
    For overlapped IO (and possibly other stuff) we need to be able to
    label an evbuffer_chain as "pinned", meaning that every byte in it
    must remain at the same address as it is now until it unpinned. This
    differs from being "immutable": it is okay to add data to the end
    of a pinned chain, so long as existing data is not moved.
    
    svn:r1142

commit 68d0139f19c876fae18120689f384fc36779d676
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 7 04:49:25 2009 +0000

    Refactor the zlib and pthreads tests to appear in the regular tinytest tree structure.
    
    svn:r1141

commit 684c022a21d00214ebd598ad1ba8cf656f4432be
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 6 20:38:42 2009 +0000

    Avoid a double event_del() in evdns.c.
    
    The bug could occur when a nameserver was marked as up, but then an
    outstanding probe sent to the nameserver failed.  Now, evdns_up() cancels
    any outstanding probe.
    
    svn:r1140

commit d2e9caa6fcff77d5f69e10ef3b24d5e3e65d961e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Apr 6 20:38:19 2009 +0000

    Fix evdns_cancel to alert callback and free associated RAM.
    
    Also, we add a test to make sure evdns_cancel is working properly.
    
    svn:r1139

commit 0f3c0983c0e1779f9d690830b3b1c2a0e1c94883
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 5 17:50:18 2009 +0000

    Fix a double-delete on the request timeout event.  Port from Tor.
    
    svn:r1138

commit 28255a26357afde52f2e73cd163bdde929480477
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 5 04:26:46 2009 +0000

    Finally, get unit tests to pass with threading turned off again.
    
    svn:r1137

commit 6a18f4b0057587a46a21503e3cc23f7e87046d52
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 5 04:15:01 2009 +0000

    Munge the read_suspended flag before re-enabling reads on the underlying bufferevent.  This makes it so the enabled thing has some idea whether reads are supposed to be suspended or not.
    
    svn:r1136

commit 661b5eea092920dcb316f8e1b4b0843096c707c7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 5 04:10:05 2009 +0000

    Actually, move EVUTIL_NIL_STMT to util-internal.h
    
    svn:r1135

commit 60e0d59b33277755c532dae8242d120e5877bef4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 5 02:44:17 2009 +0000

    Add locking to evbuffers.
    
    svn:r1134

commit d13b59ce372f167135ea1eaec1c6d7e399e9777d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 5 02:44:04 2009 +0000

    Fix build with thread support disabled, and make no-op macros a little more no-oppy.
    
    svn:r1133

commit 70ee390fc9696f555d383b64541c5fe205443d72
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Apr 5 02:43:55 2009 +0000

    Add some more utility macros to evthread-internal.h
    
    svn:r1132

commit f1b1bad415332f6d49a59eb40004ca1d7946c4da
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 3 14:27:03 2009 +0000

    Make the new evbuffer callbacks use a new struct-based interface.
    
    The old interface would fail pretty hard when we had to batch up
    multiple adds and drains in a single call.
    
    svn:r1131

commit f90500a5df9af60502215d640ccbf2ba031d30e0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 3 01:21:36 2009 +0000

    Add a new improved search function.
    
    The old evbuffer_find didn't allow iterative searching, and forced us
    to repack the buffer completely every time we searched in it.  The
    new evbuffer_search addresses both of these.  As a side-effect, the
    evbuffer_find implementation is now a little more efficient.
    
    svn:r1130

commit 0afb1f7ffbdb229c3adbaae18899c6b5c4774558
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 1 16:08:34 2009 +0000

    Glibc mkstemp requires exactly 6 Xs.
    
    svn:r1129

commit 994e85781c2b3ccd9736d7b751c4cc02b9f7c774
Author: Niels Provos <provos@gmail.com>
Date:   Mon Mar 30 17:36:22 2009 +0000

    correct evbuffer_drain documentation from John Khvatov
    
    svn:r1127

commit 23655dfb87e88482a9152140ad62b0667b5fa916
Author: Niels Provos <provos@gmail.com>
Date:   Thu Mar 12 17:43:43 2009 +0000

    include Doxyfile in tar ball; from Jeff Garzik
    
    svn:r1125

commit 73094d595208ff45ec44d8d399b1811472156b8f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 13 13:43:35 2009 +0000

    Make tmpfile code compile without warnings
    
    svn:r1123

commit 79b7799bd1a2023864e1f2124444692a289ff72b
Author: Niels Provos <provos@gmail.com>
Date:   Fri Feb 13 01:42:59 2009 +0000

    a simple test for evbuffer_add_file
    
    svn:r1122

commit ec35eb5520514769818fa4440d4801f803e8fb4c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 12 22:19:54 2009 +0000

    Make threading functions global, like the mm_ functions.  Use the libevent_pthread.la library in regress_pthread.
    
    svn:r1121

commit d0a9c90e9300f7dc5701e9682d80c85025504573
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 11 17:29:17 2009 +0000

    Fix some of the crazier indentation and tabbing choices in evdns.c
    
    svn:r1120

commit 77c80b8dcf26b2cef66bce03cb25835a9a939306
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 11 17:24:11 2009 +0000

    New bind-to option to allow DNS clients to bind to arbitrary ports for their outgoing addresses.
    
    svn:r1119

commit acaf65c359d7e0b0c2f7f4d44c97dd187ac2ed61
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 11 17:23:32 2009 +0000

    Make evutil_parse_sockaddr_port give a useful socket-length output.
    
    svn:r1118

commit f2a24d6e58df45229015f6d32fcf95f87faea701
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 11 17:22:40 2009 +0000

    Better comments for some confusing-to-me code.
    
    svn:r1117

commit c6f4dc987c153c9a347d6275d2e8d6bebbca9371
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 11 17:21:48 2009 +0000

    Port some evdns changes over from Tor.
    
    svn:r1116

commit ac36f4047e8c4b7cb9fb5908741e885f11cfdb35
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Feb 11 05:17:27 2009 +0000

    oops; coding too quickly on nil-filter patch.  Caught by niels.
    
    svn:r1115

commit cd731b77d7e6d0398010ff45bb80e9a3534eaccc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 10 21:40:12 2009 +0000

    Do not use ctypes functions in cases when we need the "net" locale.
    
    This patch adds a new set of EVUTIL_IS* functions to replace use of
    the ctypes is* functions in all cases where we care about characters'
    interpretations in net ascii rather than in the locale.  For example,
    when we're working with DNS hostnames, we don't want to do the 0x20
    hack on non-ascii characters, even if the host thinks they should be
    isalpha.
    
    svn:r1114

commit 1ed27048e4807fe2bf182e9544dc9c7b4741cbc0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 10 21:39:56 2009 +0000

    Stop rolling our own offsetof twice.
    
    svn:r1113

commit f04b90e5b3a6ebf0588c6e55ebe3b25364021a28
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 10 19:43:19 2009 +0000

    Make a couple of newer evdns functions more bulletproof.
    
    svn:r1112

commit da49d6a3b05cd7d3c9d417f4f08cb63431635617
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 10 19:43:11 2009 +0000

    Stop using platform inet_aton/inet_addr; they can behave strangely on certain misformed addresses.
    
    svn:r1111

commit 01456265c3113c401579895f60c410202d633788
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 10 19:39:22 2009 +0000

    Explode less badly in the case where we're told to prepend/append/remove a buffer to itself. Note some API/implementation deficiencies.
    
    svn:r1110

commit 20f809ce8c4001f279a208fe3118f51cd8a1abad
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 10 19:39:12 2009 +0000

    Make default (nil) filter use evbuffer_remove_buffer to respect the high-water mark of the target buffer.
    
    svn:r1109

commit e7fd1034cfc6cd8a28f03178b3d8fd2bd4729d27
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 10 19:39:03 2009 +0000

    Test some formerly untested prepend cases of evbuffer. Now evbuffer coverage is over 80 percent.
    
    svn:r1108

commit 9e3e7b360d1ccce5fbd94e32b3a0d10a3d15ebe2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 10 19:38:54 2009 +0000

    More unit tests for evbuffer_add_reference to make sure that certain interleaved data patterns work; that free invokes callback; that callbacks are not invoked too early or later; etc.
    
    svn:r1107

commit 98b7046b9761896e05f84413a4e3589730ffd117
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 10 19:38:43 2009 +0000

    A few more comments on evbuffer-internal structures.
    
    svn:r1106

commit edfdb698e3b2e5132bb474478b0b9daa6676e8fa
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 10 19:38:34 2009 +0000

    Add an assertion to evbuffer_chain_align so we can't reuse it in the future.
    
    svn:r1105

commit 71604d85be2ee20d6d4408249217f34625b9bd20
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 10 19:38:25 2009 +0000

    Remove some needless includes
    
    svn:r1104

commit deb2a1210bffcf9a902ae449d7d79bb29c617f4a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 10 19:38:14 2009 +0000

    use new evutil_make_listen_socket_reuseable() in http.c
    
    svn:r1103

commit c7b2f8fdc955fa06999c73dbab58c07492cfb6e9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 10 19:38:05 2009 +0000

    New function to abstract SO_REUSEADDR.
    
    svn:r1102

commit f9e4e0f98e4ccce8a589948cfec3a4840b3aa2bf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 3 18:28:53 2009 +0000

    Move bufferevent tests to regress_bufferevent.c file.
    
    svn:r1101

commit cc049bfc306436d0d2ff94a4d47fa1c003a3c6e9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 3 05:22:57 2009 +0000

    Enable (and debug) WSARecv for evbuffer iovec-like reads.
    
    The two things we were missing: the flags parameter is not optional, and an error can actually indicate a close.
    
    svn:r1100

commit ea11f8195fae2e559b369ad868c334947d84e055
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 2 22:17:32 2009 +0000

    Compile http_connection_retry_test, but mark it skipped on win32.
    
    svn:r1099

commit 722885fba96b4195479d4c335946f714beb119eb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 2 21:59:53 2009 +0000

    Some mingws have AF_UNIX, which may have prevented our socketpair from working at all on them.  Fix that.
    
    svn:r1098

commit 3502a472b564e289acf89c06d0e3d6e8eaa21d2f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 2 21:24:04 2009 +0000

    convert new bufferevent_*.c files to event-config.h only.
    
    svn:r1097

commit 4d92e4261b5915658fbdc5dfb0f1c7a1dd86d9db
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 2 19:22:27 2009 +0000

    forward-port: Make evdns_resolve_reverse args const.
    
    svn:r1096

commit ea4b8724c088934412401bdf32f52f2e2f1840b1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 2 19:22:13 2009 +0000

    checkpoint work on big bufferevent refactoring
    
    svn:r1095

commit e84c765615352d094ce331aefe60c25c8c6a7702
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 1 05:26:47 2009 +0000

    Allocate callback entries with contents 0d out.
    
    svn:r1093

commit 2e3f0f682a94f4651143e912780ca0114be71c09
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 1 02:20:16 2009 +0000

    Enable the edge-triggered test again
    
    svn:r1092

commit 8d3a10f8f1a820ec6ebe2780dc2b676926dcfeb2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 1 01:43:58 2009 +0000

    Support temporarily suspending an evbuffer callback.  This is different from disabling the callback, since we want to process changes, but not just yet.
    
    svn:r1091

commit e3e1153109c250bdd308e3bb2370f0d93648d9d7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 1 01:07:42 2009 +0000

    Unit tests for evbuffer callback manipulation
    
    svn:r1090

commit 2e50658d8d99ca071872eeca15b38ed5a0fa642e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 1 01:07:33 2009 +0000

    Fix a typo in buffer.h
    
    svn:r1089

commit ca37fef95164de326df95a626a398f13b3ca41c7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 1 01:07:22 2009 +0000

    Change evbuffer callbacks to use tinytest natively and never assert.
    
    svn:r1088

commit a30c9eb1ac05cbf71130e046959996025f18a939
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Feb 1 01:07:12 2009 +0000

    Move evbuffer tests into their own file.
    
    svn:r1087

commit ff7a5e1272dcdca3af5f8b74121da01a07bad597
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 31 19:32:20 2009 +0000

    slightly more coverage for evutil.
    
    svn:r1086

commit 12e8db5b23160e2d77db585230113992ca2001c1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 31 18:36:47 2009 +0000

    Convert evtag test.
    
    svn:r1085

commit 5831d11a4251eea6e63eb1bb5a63979c10600997
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 31 18:36:37 2009 +0000

    Move rpc_test to regress_rpc.
    
    svn:r1084

commit fa6ae16992c95632afea1b9c24669a48f2688f3b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 31 18:36:24 2009 +0000

    Convert RPC suite.  There are still some places it can exit(1), but those always run forked, so no big deal.
    
    svn:r1083

commit d9628ef4ffcaa2adf0298547894707ba7616ac8a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 31 18:36:08 2009 +0000

    Add missing initializers
    
    svn:r1082

commit eac75f91e4839ba289dd599ce36da5cf2a5303ef
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 31 07:32:14 2009 +0000

    Port DNS tests.
    
    svn:r1081

commit e6ba208ba30fd22f52508a865f448c24ffaaed96
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 31 07:32:00 2009 +0000

    Tinytest update: mostly just to allow test skipping.
    
    svn:r1080

commit 52eb4951302554dd696d6a0120ad5d3f6cffb7bb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 31 07:31:47 2009 +0000

    Build with the -fno-strict-aliasing flag on GCC.
    
    You do not want to know about the 2 hours I just spent tracking down
    an evdns bug that only affected me on some platforms to the way we
    were using sockaddr* and sockaddr_in*.  Suffice it to say that I do
    not think this is the only C99-aliasing-dubiousness in our code, nor
    that I am smart enough to keep my code correct with the GCC's strict
    aliasing optimizations in place.
    
    svn:r1079

commit 2546ea665e9ba4c4215f4b62a87c664d7bda6057
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 31 05:45:26 2009 +0000

    Do not attempt to pass a va_args to regular snprintf.  Hilarity will ensue.  Fortunately, 1.4 does not have this bug.
    
    svn:r1078

commit 4ec690d35ef82e98799497a89cb8b720153925e8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 31 05:45:16 2009 +0000

    Rename a couple of http tests so they all end with _test.  This lets us simplify the naming.
    
    svn:r1077

commit 153093ecc346b51fd3df20d8480a17414aeda1a6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 30 17:44:13 2009 +0000

    Port the HTTP unit tests.  Most are still legacy (since they use test_ok so much), but at least they no longer exit(1) on failure
    
    svn:r1076

commit 241690b230301fa9388cd84b33030938df7b1853
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 30 17:43:59 2009 +0000

    Move util tests to regress_util.c
    
    svn:r1075

commit 4e9470b481f2ad2e1ddb9967de8e5599d9b5fe6d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 30 17:43:48 2009 +0000

    Convert test_evutil_strtoll to new framework.
    
    svn:r1074

commit a8203b3490b3ab6ee17460ddd32c0efb355fee02
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 29 23:19:57 2009 +0000

    Refactor unit tests using my spiffy new "tinytest" framework.
    
    The big win here is that we can get process-level isolation.
    
    This has been tested to work okay on at least Linux and Win32.  Only
    the tests in regress.c have been converted wrapped in the new wrapper
    functions; the others are still on the old system.
    
    svn:r1073

commit 39c8dbe073bf13c9c08d8901465a0d7641119126
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 29 20:07:59 2009 +0000

    Make ht-internal.h get distributed.
    
    svn:r1072

commit cc7a53c152b4ef2b32d44545e281be843baea5d1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 29 18:15:36 2009 +0000

    fix signed/unsigned warning in unit tests.  can we just use "char*" on all new APIs?  this void/unsigned char*/char* business is awful.
    
    svn:r1071

commit 7dd362b15871096430e078a6b94406563634ebe7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 29 15:09:24 2009 +0000

    Have util-internal.h define socklen_t if we need it, and include it appropriately.  This fixes win32 compilation.
    
    svn:r1070

commit a0cae310d05d99a1f235a1814ba5ef7893959ec8
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jan 29 03:22:47 2009 +0000

    make it so that evbuffer_add_file where we read the complete contents of the file can fail without side effects
    
    svn:r1069

commit 66b2a7ffb72e68a059c7479362bfe4863e2331df
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jan 29 03:20:40 2009 +0000

    test evbuffer_add_reference
    
    svn:r1068

commit f13bede758cd419c407a9124a13b7955f8ea0068
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 28 20:31:19 2009 +0000

    Fix an unlikely degenerate case of evutil_vsnprintf
    
    svn:r1067

commit e3e696c822917fcf909e71b7822130c73f442e56
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 28 20:24:12 2009 +0000

    Use size_t for name length in DNS requests.  Not that it matters much.
    
    svn:r1066

commit b85b710cf5e693294e0d68ce682ecb1c5e357383
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 27 22:34:36 2009 +0000

    Update copyright statements to reflect the facts that:
    a) this is 2009
    b) niels and nick have been comaintainers for a while
    c) saying "all rights reserved" when you then go on to explicitly
       disclaim some rights is sheer cargo-cultism.
    
    svn:r1065

commit 8889a7703999d3ce5902b5b8e239107579c75ca0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 27 22:30:46 2009 +0000

    Replace all use of config.h with event-config.h.
    
    svn:r1064

commit 9993137cbbd9508dbf28e431e0f84d809c516128
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 27 21:10:31 2009 +0000

    Remove all trailing whitespace in all the source files.
    
    svn:r1063

commit 3065389973fcfb724981376c31a51b11b679abc0
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jan 27 16:35:28 2009 +0000

    make it so that test_persistent_timeout can call loopexit only once; reported by Alexander Drozdov
    
    svn:r1062

commit 1c927b7d2fad4b2f1d96cd2d91e116acf53f5123
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jan 27 16:29:48 2009 +0000

    fix memory leak whens etting up priorities; reported by Alexander Drozdov
    
    svn:r1061

commit 88f2b7a00fd60bbf353b4a33cb2374bc491e1ee7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 27 13:37:09 2009 +0000

    Fix some warnings on linux gcc with --enable-gcc-warnings
    
    svn:r1060

commit 1757cf717f487c3c78b7104b52738ff804f69c42
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jan 27 06:21:12 2009 +0000

    use %zu for off_t
    
    svn:r1059

commit 8b5bd77415fb6634fadf08357676926fecf5f032
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jan 27 06:18:45 2009 +0000

    make it compile on linux
    
    svn:r1058

commit fdf694933ceafbf379e038597e56eb2498dea1e0
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jan 27 06:05:38 2009 +0000

    sendfile/mmap and memory reference implementation for evbuffers
    
    svn:r1057

commit b93e50545231ffb85254fa2d6c0fe50d0de39d8e
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jan 27 05:33:39 2009 +0000

    second argument to evbuffer_pullup should be ssize_t
    
    svn:r1056

commit 4f02a9630d7a982254d20696c306ac2e1017e3d1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 26 18:04:18 2009 +0000

    More docs and example code in whatsnew
    
    svn:r1055

commit c0712b16085b7f4e3c8f9f2ae5b951ce976a3476
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 26 17:29:45 2009 +0000

    Initial documentation for evdns server functions.  Also deprecate the one that didn't take an event_base.
    
    svn:r1054

commit 2b1d535e0d41ea12a8f61f026e366dcfc0b4c53f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 26 17:29:27 2009 +0000

    Accept evutil_socket_t for evdns_server_ports.
    
    svn:r1053

commit bdbd5e0e2fda62f2f0d277867319d470d096b096
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 26 17:09:37 2009 +0000

    For every deprecated function, explain why it is deprecated and what you should call instead.
    
    svn:r1052

commit 52a75f18e17cde5f7e4f705ae9ef32ee008b6c6f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 26 17:09:22 2009 +0000

    Documentation (or more accurate documentation) for a few more functions.
    
    svn:r1051

commit dddd58ba1375a9e78c01771299c820c22f04795e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 26 17:09:09 2009 +0000

    Reformat util.h slightly so that it looks ok with 8-char tabs.
    
    svn:r1050

commit 0e779906f9a14f7c9f3bd818be5b9ff082b32553
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jan 26 06:13:24 2009 +0000

    fix memleak in evmap_signal_clear; from Alexander Drozdov
    
    svn:r1049

commit 765ff1b9def2ec0423bee8617763d7b182ca4fa2
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jan 24 17:38:27 2009 +0000

    really install the buffer_compat.h file
    
    svn:r1048

commit 81dd04a726c8fa3a95a8780b06648187b15b1b2d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 23 18:04:34 2009 +0000

    Add a "flags" field to evbuffer callbacks.
    
    For now, there is just one: enabled.  This lets us avoid lots of
    mallocs/frees/tailq-manipulations just to turn a callback on and off.
    The revised bufferevent code wants this.
    
    svn:r1047

commit de7f7a84a32045a706559ae37ccaa325fe9b2720
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 23 18:03:45 2009 +0000

    Remove in_callbacks check: allow full recursion in evbuffer callbacks.  If you get yourself in an infinite loop, that's not our fault.  Note this in the docs.  Also reindent some docs now that my tabs match Niels's.
    
    svn:r1046

commit b1495865aa2d876bf1545f5ae399775f70e7e155
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jan 23 02:04:41 2009 +0000

    also install the buffer_compat.h header file
    
    svn:r1044

commit ec2f4cbc0961d562f39639a1ea3eb4044fc402c7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 23 01:35:57 2009 +0000

    Move obsolete evbuffer function into include/event2/buffer_compat.h
    
    svn:r1043

commit c735f2b45aaca4d9c118245e407a00e6b8f4d234
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 23 01:11:13 2009 +0000

    Code to allow multiple callbacks per evbuffer.
    
    svn:r1042

commit 86d526a0648a884dd966b52142c620f2f5180c28
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 23 01:04:10 2009 +0000

    Start writing more of whatsnew-xx.txt, which will become whatsnew-2.0.txt
    
    svn:r1041

commit f20902a2902b85f5d63d785a32b00fdbbd64a52d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 22 17:56:15 2009 +0000

    Remove evperiodic_assign and its related parts: its functionality is subsumed by EV_PERSIST timeouts.
    
    svn:r1040

commit 5e6f6dcd1b9d50b39d2878619c5b4c0d6d34591f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 22 17:48:55 2009 +0000

    Use EV_PERSIST on notify event for efficiency and simplicity.
    
    svn:r1039

commit 20c20466fb55647823a4db865f8cb042e87788e0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 22 17:48:27 2009 +0000

    Use EV_PERSIST in bufferevents for efficiency and simplicity.
    
    svn:r1038

commit dc1526e0da9c13eba2138c8a551d2535ede385d8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Jan 22 17:48:16 2009 +0000

    Fix warnings on compile: make static functions static.
    
    svn:r1037

commit fe72c885d938881a876affe1c930aedb64a11306
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jan 22 06:23:14 2009 +0000

    fix signal processing for non-kqueue backends; when a signal callback delivers a signal; from Alexander Drozdov
    
    svn:r1035

commit a077fb8c099e90523d1365bbd9f2db8328a46ca1
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jan 22 02:47:35 2009 +0000

    rename sys/signal.h to signal.h; configure m4 macro dir; this assist with compilation on Haiku
    
    svn:r1033

commit 56ea4687a5e6cf131c825c99a8f0ffe04afa4c2d
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jan 22 02:33:38 2009 +0000

    Change the semantics of timeouts in conjunction with EV_PERSIST; timeouts in that case will now repeat until deleted.
    
    svn:r1032

commit 309fc7c4ad34f7e50245c305a776a5e04b4a0555
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 21 07:51:25 2009 +0000

    New functions to provide sane threading callbacks with pthreads and win32 threading implementations.
    
    svn:r1031

commit 70405e3c7a184a11be506e2e4fd4774e867f978b
Author: Niels Provos <provos@gmail.com>
Date:   Wed Jan 21 07:18:31 2009 +0000

    fix freebsd compile; from Alexander Drozdov
    
    svn:r1030

commit fa1c9a6d096b0be115db99095912750a4e12dca9
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jan 19 23:52:21 2009 +0000

    rename the backend from "event ports" to "evport" - this will allow environment based disabling to work
    
    svn:r1027

commit ed7e0e77ed573d9f5b4123d7874de3efb02763d1
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jan 19 23:40:11 2009 +0000

    bug fix and potentital race condition from Alexander Drozdov
    
    svn:r1025

commit f6eb1f816c77f2b3e209690551b9c2f7d7d2e454
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 19 21:53:03 2009 +0000

    Change evbuffer_read implementation to split data across chunks, and use readv when available.  This should make us use less space.
    
    svn:r1024

commit a5901991c74590d81e35b5b3f44877f00b6e3397
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 19 20:37:24 2009 +0000

    Use eventfd for main-thread notification where available (i.e., linux).
    
    svn:r1023

commit c3e9fcf672b87ba9314899cfcc9f60400cfb73fb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 19 20:22:47 2009 +0000

    Change the semantics of notify so we can implement it with eventfd or (given a different backend for win32) a windows Event.
    
    svn:r1022

commit 34d2fd063472d088fea1d7730123cdbda93cc0db
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 19 19:46:03 2009 +0000

    Debug and enable pipe notification
    
    svn:r1021

commit ddf3ee976d60e5d17f73cdd441cbc260b3f72f6a
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jan 19 07:00:51 2009 +0000

    make event ports compile again
    
    svn:r1020

commit ec4cfa33c91b9df4dc1621315999cba60cc839e2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 19 01:34:14 2009 +0000

    Make event_break threadsafe; make notify-thread mechanism a little more generic; let it use pipes where they work.
    
    svn:r1019

commit 2b7febc80a447b4ee4a2a2dc7339b6226be9bb1a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Jan 18 01:33:18 2009 +0000

    Fix osx compile
    
    svn:r1018

commit fed2fd094402790a329ff769286bdf54fb470210
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jan 17 07:50:34 2009 +0000

    try to make devpoll work again; i dont have access to a machine
    
    svn:r1017

commit 5e796901c11fc7b52b143aa3dd24d6260f64f553
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jan 16 00:25:54 2009 +0000

    clean up buffered data on reset; reported by Brian O'Kelley
    
    svn:r1015

commit 83d2a34c99ba73a23a7031d525f6278d1859dc8a
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jan 15 06:15:24 2009 +0000

    rename time-test in comment to signal-test
    
    svn:r1013

commit 8278c9be548f8357f124f4691f0b7cc12703ea3f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 14 22:17:46 2009 +0000

    Note the one restriction on what you can do with the evbuffers of a bufferevent.
    
    svn:r1011

commit 840318196b3bdf500ac3d3002feb249f20f900ef
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 14 22:17:31 2009 +0000

    Make some evbuffer functions const
    
    svn:r1010

commit 89fe316779d0323a7ef5786f3aea81892ee82122
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 14 21:13:58 2009 +0000

    Update win32 code to put indices in evmap.
    
    svn:r1009

commit 554e14934e46f11fcec09d5c69bff5d231db2ea9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 14 20:52:32 2009 +0000

    Move per-fd info from eventops into evmap.  Not done for win32.c yet.
    
    svn:r1008

commit 3552ac1eb3af86fcc0b6d8015b4ba9c72ed0f54a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 14 19:39:17 2009 +0000

    Do not allow chain length to expand indefinitely.
    
    svn:r1007

commit ad7f1b4ae99d0d0652087ab23abd2717745f2d27
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 14 18:45:42 2009 +0000

    The element size for our linear evmaps is a pointer, not the whole struct.
    
    svn:r1006

commit 6bb2f84216ef82184b3502ee77b98aa8b608805a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 14 18:38:03 2009 +0000

    Add initializer functions for evmap types.
    
    svn:r1005

commit 6d3ed0657d1be559cc3376ed3f8473ddfa2aadb6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Jan 14 14:58:48 2009 +0000

    Simplify evbuffer_write logic: combine nearly all of WSASend and writev cases.
    
    svn:r1004

commit bab8f2e1827d47f622806404bdc765515f81e8c2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 13 22:02:32 2009 +0000

    Fix compilation on win32 WSASend evbuffer_write() code.
    Still not enabled until I make sure that the unit tests test this.  They _do_ pass.
    
    svn:r1003

commit 9935d5b01e4345829a7ea5c06e86d45156ea8944
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 13 21:39:32 2009 +0000

    Fix win32 compilation.  Surprisingly, unit tests pass too.
    
    svn:r1002

commit 574d320217b07023ac2e50a16f7999f04aceffae
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 13 20:50:34 2009 +0000

    There is no WSAEAGAIN.  There is only Zuul^WSAEWOULDBLOCK.
    
    svn:r1001

commit 169321c9e6aebee26c1fe3e6deaf51ce00d7308e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 13 20:26:37 2009 +0000

    Rename four internal headers to follow the -internal.h convention.
    
    svn:r1000

commit 822ca048add2b10f73054914fd0ff7c2bf241661
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 13 19:34:50 2009 +0000

    Untested (and compiled-out) evbuffer_write backend to use WSASend on win32 where we use writev on unix.
    
    svn:r998

commit fbd5e820d7c02f16d43568e281cd9ffde9f834a4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 13 19:20:22 2009 +0000

    Stop linking backends into libevent_extra.la
    
    svn:r997

commit 554909420dc1db14c0b1764f1be5ca5dd5459840
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 13 19:20:14 2009 +0000

    Move internal headers into noinst_HEADERS automake target where they belong.
    
    svn:r996

commit 81ab45add511fd02ac08924841ec811186b3e4bb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 13 19:20:04 2009 +0000

    Use new EVUTIL_ERR_*_RETRIABLE macros when we're testing an errno for blocking.
    Previously, we used inconsistent and incompletely ported ifdefs.
    (We don't use these macros in platform-specific files like evpoll.c, since
    they don't need to work on win32.)
    
    svn:r995

commit 5ebd23ad7472ce00dc8e5e2467df7ec02ef8584c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Jan 13 19:19:50 2009 +0000

    New EVUTIL_ERR_*_RETRIABLE macros to tell if an errno blocked or failed.
    
    svn:r994

commit 99db0e7f72ecbc81de2d73da98e3f9be66db1e68
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 12 20:42:19 2009 +0000

    Add a new evbuffer_write_atmost() functino to write no more than a given number of bytes to an fd.
    
    svn:r993

commit f446f1493a81fbbc2c3c22d4acfd125e70093e78
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 12 20:42:06 2009 +0000

    Small cleanups to buffer.h documentation.
    
    svn:r992

commit 1df57d2b97311ecb59c86873e9cccf2b9e0be401
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jan 12 20:36:24 2009 +0000

    Move strlcpy.c into libevent-core, so that code built against libevent-core on platforms without strlcpy can link.
    
    svn:r991

commit 8a72441077548fc327163ed19ccb5658d4e7ca7e
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jan 12 05:22:29 2009 +0000

    make it compile with USE_DEBUG again; reported by Alexander Drozdov
    
    svn:r990

commit 91e3ead85eb81c3f8aabb8a193e3cc952755d87a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jan 10 14:37:45 2009 +0000

    Improve the hashsocket function.
    
    svn:r989

commit 55bcd7d2f0cae7f60dedf9b48265bb155bec157f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 9 13:42:21 2009 +0000

    On win32, use a hashtable to map sockets to events rather  than using an array.
    
    svn:r988

commit 8f5777e692e7e85dc711174da6d129bc43a836d4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 9 05:01:48 2009 +0000

    Document internal evmap functions, add a couple of asserts, and fix up some things that did not need to be void* any more
    
    svn:r987

commit 980bcd68f7e49f8c0a9042f64d62e624f8c5f76b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 2 21:21:58 2009 +0000

    Work better with platforms that do not have ipv6 structures, or that do not have sin_len fields, etc.
    
    svn:r986

commit 135591aeab4ac58f91f2109aa4cafdeeb0ce040b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 2 20:46:35 2009 +0000

    Change the type of nameserver.address from u32 to sockaddr_storage, so that we can handle nameservers at IPv6 addresses.
    
    svn:r985

commit cfbd1680080cc917f0d15d2a840dd05d9f462217
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 2 20:46:26 2009 +0000

    Add another function to parse the common address:port combination formats into a sockaddr.
    
    svn:r984

commit 0d9d5cfe22c89391a1ee25e2104cbf1fd6e1fcfb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 2 20:46:12 2009 +0000

    New functions in evutil to clone inet_pton and inet_ntop, with tests.
    Adapted from Tor code.
    
    svn:r983

commit 172b657567777078296442f5363b9a1e764886b9
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jan 2 18:18:30 2009 +0000

    malloc fd only if it is needed.
    
    svn:r982

commit f37d1685df84cd7da52a21f4e4469faa641d1aaa
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Jan 2 04:56:56 2009 +0000

    Include http_compat.h in http.c so we do not get warnings about functions with no prototypes.
    
    svn:r981

commit 87be18daa192bdb2e75e56f1ef5226a0df6b2f73
Author: Niels Provos <provos@gmail.com>
Date:   Thu Dec 25 16:25:37 2008 +0000

    implement evdns_cancel_request; test one of the new evdns_base functions
    
    svn:r980

commit 49f4c0ef883e822b98b03ca422fd69590697380b
Author: Niels Provos <provos@gmail.com>
Date:   Thu Dec 25 16:21:13 2008 +0000

    generate documentation for move dns header files
    
    svn:r979

commit eed234519c5abee420a255aa7fccfd779ee3a08f
Author: Niels Provos <provos@gmail.com>
Date:   Thu Dec 25 16:20:45 2008 +0000

    forgot to re-enable dns tests
    
    svn:r978

commit 30cba6d0b3a7d3de4bfdc3a939729b73d36a2a49
Author: Niels Provos <provos@gmail.com>
Date:   Thu Dec 25 09:22:13 2008 +0000

    we cannot realloc memory used by TAILQ; instead malloc each slot individually
    
    svn:r977

commit 17bfc07e940f981168b136ce08570dbd0a99bff1
Author: Niels Provos <provos@gmail.com>
Date:   Tue Dec 23 22:38:01 2008 +0000

    remove http_compat include
    
    svn:r976

commit b55ca7de1c58043fd04d1fcc934870aa1e7b5cf6
Author: Niels Provos <provos@gmail.com>
Date:   Tue Dec 23 22:31:27 2008 +0000

    reduce void *age a little bit
    
    svn:r975

commit b225e756ae6a50578cacfcf7bfd1a51c1362834b
Author: Niels Provos <provos@gmail.com>
Date:   Tue Dec 23 22:24:32 2008 +0000

    remove unused variable
    
    svn:r974

commit d776f8462be6c68ac4cd7bf3903710aad5dd842b
Author: Niels Provos <provos@gmail.com>
Date:   Tue Dec 23 22:23:37 2008 +0000

    deprecate the usage of signal_{add,del,set} and name it evsignal_{add,del,set} instead; move the old definitions to compat
    
    svn:r973

commit 02b2b4d1bee7dfd5d75d0a376ce64fc7298e350f
Author: Niels Provos <provos@gmail.com>
Date:   Tue Dec 23 16:37:01 2008 +0000

    Restructure the event backends so that they do not need to keep track of events themselves, as a side effect multiple events can use the same fd or signal.
    
    svn:r972

commit 97cebce8fdc400401093f669a56e46bef518386e
Author: Niels Provos <provos@gmail.com>
Date:   Tue Dec 23 14:53:55 2008 +0000

    the switch of bufferevents for http connections did not handle the EVBUFFER_ERROR case correctly
    
    svn:r971

commit ebcf5efcfe208ee4381ac6d5ed6783b77fbd6056
Author: Niels Provos <provos@gmail.com>
Date:   Fri Dec 19 22:42:51 2008 +0000

    fix memory leaks in the regression tools; add another close detection test that validates that there are no dangling connections on the server
    
    svn:r969

commit f1728d94eb0fe93fc503ef9cda42a8d78e223f96
Author: Niels Provos <provos@gmail.com>
Date:   Fri Dec 19 22:41:07 2008 +0000

    fix the close detection problem correctly by not running close detection on the server
    
    svn:r968

commit f700566cb947f7229be3909e3c926b096ca826a8
Author: Niels Provos <provos@gmail.com>
Date:   Fri Dec 19 21:31:43 2008 +0000

    Make the http connection close detection work properly with bufferevents and fix a potential memory leak associated with it
    
    svn:r963

commit 8c594168785feb1b899350b03538ed24756d3be6
Author: Niels Provos <provos@gmail.com>
Date:   Fri Dec 19 21:03:42 2008 +0000

    memory leak: forgot to free paused rpcs in server
    
    svn:r962

commit 77867244a9bb7af857a198cfc2ed08227895e88f
Author: Niels Provos <provos@gmail.com>
Date:   Fri Dec 19 21:02:36 2008 +0000

    memory leak: forgot to free the configuration object
    
    svn:r961

commit 808f00e1a1351b1b5a14276c928ecd778a9d3e2d
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 13 06:11:12 2008 +0000

    constify structs; from Andrei Nigmatulin
    
    svn:r959

commit dd73168556961d690e355c9eb7c086f633543461
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Dec 3 20:09:13 2008 +0000

    Implement increased DSN-poisoning resistance via the 0x20 hack.
    
    svn:r958

commit 1eeb96aa8863d6ed3e8eb9080a618df48b688baa
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 29 01:12:41 2008 +0000

    move cirular queue removal into its own function
    
    svn:r957

commit cdf9453af44dceed3274d33a279d5181b3a81237
Author: Niels Provos <provos@gmail.com>
Date:   Fri Nov 28 20:55:11 2008 +0000

    install the header files, too
    
    svn:r956

commit 1c765b78fb0c633f377b2fee8fee6d4bb07965e4
Author: Niels Provos <provos@gmail.com>
Date:   Fri Nov 28 20:11:24 2008 +0000

    move dns header files into the include directory; move old functions into compat and structs into a struct header file
    
    svn:r955

commit 4fa4a56253fda85d5451eb66bcddc1bf960756cb
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 27 19:57:48 2008 +0000

    fix a typo in setting the global event base; reported by lance
    
    svn:r953

commit ffb3966ec2a9975a103d78b0d30a318737b1e22a
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 27 19:34:07 2008 +0000

    minor compilation and regresson fixes; from Frank Denis
    
    svn:r952

commit 4fe25cefb59bdda688acf0ba54aacf640374e4d2
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 27 19:27:33 2008 +0000

    Clear the timer cache when leaving the event loop; reported by Robin Haberkorn
    
    svn:r950

commit 5792d42f0ff130380d036ff427d8408ecd61b6f2
Author: Niels Provos <provos@gmail.com>
Date:   Sun Nov 16 23:22:14 2008 +0000

    Allow setting of local port for evhttp connections to support millions of connections from a single system; from Richard Jones
    
    svn:r948

commit 50202d757d719316f5d6d92d1fb6941fcef66b72
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 15 05:27:23 2008 +0000

    only bind the socket on connect when a local address has been provided; reported by Ajejo Sanchez
    
    svn:r946

commit 31cfe52662fe14c24f0b6794fe2e16cc3aac0696
Author: Niels Provos <provos@gmail.com>
Date:   Thu Oct 30 19:38:31 2008 +0000

    clear the timer cache on entering event loop; reported by Victor Chang
    
    svn:r944

commit c97ee898dca9b1d18cddb0dcc0cf2c9bb3346065
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 26 13:36:15 2008 +0000

    Fix: do not crash when asked to configure an impossible event_base
    
    svn:r942

commit b3d6a569e7a0bee12718b1ff0da6277d470cdf76
Author: Niels Provos <provos@gmail.com>
Date:   Sun Sep 7 23:24:54 2008 +0000

    do not remove accept-encoding header in make request
    
    svn:r938

commit fded0a8783f3a8d688f60f176b87598164aeb650
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 5 16:47:04 2008 +0000

    Fix compilation of recent error code with win32.
    
    svn:r937

commit de069b99774221193530f9eaa43ebfa417be941f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 5 16:29:56 2008 +0000

    On win32, errno is not the last socket error.  Worse, WSAGetLastError() is not the last socket error sometimes (i.e., EWOULDBLOCK).  Also, strerror() does not handle winsock errors. Therefore, event_err() and event_warn() are completely wrong for windows socket errors.  Fix that.
    
    svn:r936

commit a710d817ad67dccbf75526738d658b881126d6d1
Author: Niels Provos <provos@gmail.com>
Date:   Sat Aug 30 23:19:49 2008 +0000

    Match the query in DNS replies to the query in the request; from Vsevolod Stakhov
    
    svn:r930

commit c968eb3e01ff80b9959952b858d152d62a3ac9b6
Author: Niels Provos <provos@gmail.com>
Date:   Tue Aug 19 11:26:47 2008 +0000

    Fix a bug where headers arriving in multiple packets were not parsed; fix from Jiang Hong; test by me.
    
    svn:r928

commit b89a3de044077b851c669b967d599bf24982e2cd
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 25 05:22:28 2008 +0000

    do not warn on accept when errno is egain|eintr
    
    svn:r925

commit cca2f8fa0eee370e1b75de198dc755c9a4a23bf2
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 25 01:29:54 2008 +0000

    make event_add not change any state if it fails; repoted by Ian Bell
    
    svn:r923

commit 1aa6826f62880be761834bc1317ac0cb8dc398f4
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 25 01:18:40 2008 +0000

    fix off by one errors in devpoll; from Ian Bell
    
    svn:r921

commit 3b24f4eedc2a60247496de74c85bc0997461edba
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 25 00:48:30 2008 +0000

    another fix; we also need to remove the signal event from the queue
    
    svn:r918

commit e67a5ea9bb546587f6143643f6201d4574f474b7
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 25 00:19:15 2008 +0000

    fix a problem with epoll and event_reinit; reported by Alexander Drozdov
    
    svn:r917

commit a4e2f52a4467af1ce6724d04df14fc98a6f06359
Author: Niels Provos <provos@gmail.com>
Date:   Sun Jul 20 23:31:28 2008 +0000

    add a signal and free the base for reinit test
    
    svn:r915

commit 1c164cebb892bd355f9dfbbd4bbc147e7b15466b
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jul 19 23:35:29 2008 +0000

    restore signal handlers correctly when we deallocate the signal base
    
    svn:r913

commit 5e905c9dd52a601d0af581c28ca3c96e7163b79b
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jul 17 14:09:07 2008 +0000

    if we change the timeouts on bufferevents, we might have to readd pending events
    
    svn:r911

commit 12077b4e2ed997206c0e02291263c432ac51bca2
Author: Niels Provos <provos@gmail.com>
Date:   Wed Jul 16 03:47:47 2008 +0000

    support setting of AA or RD in dns server response
    
    svn:r910

commit 506f3d0c8df77b0b6d52fa491c451901228c65a6
Author: Niels Provos <provos@gmail.com>
Date:   Sun Jul 13 20:18:41 2008 +0000

    fix cname replies
    
    svn:r907

commit c4af6211bd692a3faa3f7b4390e7f2a493eeae0b
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 11 16:11:16 2008 +0000

    forgot to add Alexander Drozdov as bug reporter in ChangeLog
    
    svn:r905

commit 4bf44654a6429eaff145434e4b60e4eeeee1227f
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 11 16:04:07 2008 +0000

    assert(a & b) -> assert(a && b)
    
    svn:r903

commit f7e61870e95efded87d17f2cf29ec9af815b9d30
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 11 15:49:04 2008 +0000

    support multiple events listening on the same signal; make signals regular events that go on the same event queue
    
    svn:r901

commit 5512be01765f3d0607bf6c48d7fe00b80f9d83fa
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 11 15:15:04 2008 +0000

    fix a bug where deleting signals with kqueue would delete subsequent adds
    
    svn:r899

commit df97fca9ca112c4ed24a0b81b5115b53c3f2fc47
Author: Niels Provos <provos@gmail.com>
Date:   Wed Jul 2 06:08:16 2008 +0000

    From Scott Lamb:
    * Allow the user to set the Content-Length: then stream a reply.
      This is useful for large requests of a known size. Added unit test.
    
    * Don't send a response body on HEAD requests, 1xx status codes, 204
      status codes, or 304 status codes, as described in RFC 2616 section
      4.3. (Doing otherwise causes problems - in particular, if a 304 has a
      chunked body (even an empty one), Safari 3.1.1 issues and then fails
      the next request on the connection with the non-sequitur error message
      "Too many HTTP redirects"!)
    
    * Specify a default Content-Type: when a response body is required, not
      when we have data in the response buffer by the time we make the
      header. (I.e., do this on evhttp_send_reply_start() for consistency.)
    
    * Don't expect a body in response to HEAD requests.
    
    
    
    svn:r898

commit 409236a77d40f234e93684e51eb5928c30854daa
Author: Niels Provos <provos@gmail.com>
Date:   Wed Jul 2 04:39:09 2008 +0000

    detect CLOCK_MONOTONIC at runtime for evdns
    
    svn:r896

commit 707f67849aeafc491b24019f972e78062290adcb
Author: Niels Provos <provos@gmail.com>
Date:   Wed Jul 2 04:22:48 2008 +0000

    reject negative content-length headers
    
    svn:r894

commit cb7c3bd671097bf247ed1a84f11a5c4e1612e910
Author: Niels Provos <provos@gmail.com>
Date:   Sun Jun 29 01:30:06 2008 +0000

    support multi-line http headers; based on a patch from Moshe Litvin
    
    svn:r890

commit 9998c0cbc814decba91f90f3cdcda8da5cc1f5e3
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jun 26 00:40:57 2008 +0000

    correct handling of trailing headers in chunked replies; from Scott Lamb.
    
    svn:r887

commit 21f76156b115299ffd8438ed323b03cee050cb77
Author: Niels Provos <provos@gmail.com>
Date:   Wed Jun 25 16:32:47 2008 +0000

    change min_heap_idx to signed
    
    svn:r883

commit 52161b47b6df9e2abb5d1b5fa5039cd8c7936ecf
Author: Niels Provos <provos@gmail.com>
Date:   Wed Jun 25 14:56:35 2008 +0000

    fix a bug in which nameservers would not be added to the correct base in windows.
    
    svn:r873

commit 8aa94ced6d8a04511d4366bb9232e0718dbcf8d4
Author: Niels Provos <provos@gmail.com>
Date:   Wed Jun 25 01:01:11 2008 +0000

    proper library dependencies for regress.
    
    svn:r872

commit 637508144c723d17f85628f5e868cbb8b72a72fc
Author: Niels Provos <provos@gmail.com>
Date:   Wed Jun 25 01:00:29 2008 +0000

    add a visual studio 2005 solution
    
    svn:r871

commit 9816192ac434e585f78d4a69f8d1f3807b74a53a
Author: Niels Provos <provos@gmail.com>
Date:   Wed Jun 25 00:59:21 2008 +0000

    add log.h header file
    
    svn:r870

commit ac0c7e2c7db4328362b54cab8753ebe05d2769e8
Author: Niels Provos <provos@gmail.com>
Date:   Wed Jun 25 00:58:08 2008 +0000

    skip connection-retry test on windows
    
    svn:r869

commit 0bee2ff3830b041ed758225007adf4144a827aeb
Author: Niels Provos <provos@gmail.com>
Date:   Wed Jun 25 00:34:24 2008 +0000

    void function should not return a value
    
    svn:r868

commit c3dc717a38d07f89850b9ddfe5b46c3859392d40
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jun 24 23:37:37 2008 +0000

    close fd if evhttp_get_requestion_connection fails
    
    svn:r867

commit 24580e2b586f48ade544be64c8d57ed2c21bbc84
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jun 24 22:43:19 2008 +0000

    fix build on unix side
    
    svn:r866

commit 60e4c0674a5cf31fa256054e6d26e95730c2bc19
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jun 24 22:41:43 2008 +0000

    add an event_debug statement for executing active events.
    
    svn:r865

commit 30abfd99a2e1b12d21f896c9546588e4d701ded9
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jun 24 22:38:37 2008 +0000

    provide fake_getnameinfo so that the http layer works under windows.
    
    svn:r864

commit f80f90ed8bcd83e41a14cf120b69b7444ffa73fa
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jun 24 21:01:44 2008 +0000

    fix a bug in http_connect for windows; the address was not copied correctly.
    
    svn:r863

commit 2f8708db3ff01c8402eb0f3fc5de651161c7258d
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jun 24 18:04:41 2008 +0000

    ifdef out a whole bunch of sections; gettimeofday to evutil_gettimeofday
    
    svn:r862

commit 994a7c50e1935ab0ae9c08384b386657ddbeff7d
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jun 24 16:39:45 2008 +0000

    close -> EVUTIL_CLOSESOCKET()
    gettimeofday -> evutil_gettimeofday()
    
    svn:r861

commit 55f914941d134bf86a3da504fce7fe5c67d47bbd
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jun 24 16:29:02 2008 +0000

    fix evutil_snprintf on windows
    
    svn:r860

commit 35b1236c84a7f06359f7d389bd7716550c4e5d00
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jun 24 15:29:41 2008 +0000

    change write to send for windows.
    
    svn:r859

commit e736991aea9b8c8cf706b2f39e82ef4d14640460
Author: Niels Provos <provos@gmail.com>
Date:   Sun Jun 22 16:00:48 2008 +0000

    make it work with older versions of automake; from Scott Lamb
    
    svn:r858

commit e711ce454ae94cd76c5bcc54395d3a395c32f92f
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jun 21 06:10:10 2008 +0000

    reintroduce a memmove when there is enough misalignment to hold the new data; otherwise the size of the buffer may grow without bounds
    
    svn:r857

commit 99a1063e735f70443268b50d14f042c87cb9b99a
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jun 21 02:21:25 2008 +0000

    support 64-bit integers in rpc structs
    
    svn:r856

commit 4c56ba1cede32ba30624208e8e84672531e644e3
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jun 20 06:52:13 2008 +0000

    do not use SO_REUSEADDR when connecting
    
    svn:r854

commit 774d056c46dbe7c3075b2628f7d57c514d404249
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jun 17 01:14:58 2008 +0000

    warn on connection failures
    
    svn:r853

commit 2baaac7fdb330dc98ca5d117d8fcc7ab049396be
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Jun 14 17:50:36 2008 +0000

    Forward-port:  Rename INPUT and OUTPUT to EVRPC_INPUT and EVRPC_OUTPUT, but keep the INPUT/OUTPUT aliases on non-win32 platforms to maintain backwards compatibility.
    
    svn:r852

commit a6ce520cfbcfa21406406b1649ee3ba99307a797
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jun 12 14:43:35 2008 +0000

    allow min_heap_erase to be called on removed members; from liusifan
    
    svn:r849

commit c584741baf59d9bf69cb59ae05f943ab4cbcee45
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Jun 2 18:35:02 2008 +0000

    Fix line ending style on windows projects files.
    
    
    
    svn:r847

commit 344c2b56f1b3eb7bcbb9a732c5b6221146f915ba
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jun 2 05:45:26 2008 +0000

    deliver partial data to request callbacks when chunked callback is set even if there is no chunking on the http level; allows cancelation of requests from within the chunked callback; from Scott Lamb.
    
    svn:r846

commit 9586a1cbb00d84d2c913d6719aa0ba614dbc1d7a
Author: Niels Provos <provos@gmail.com>
Date:   Sun Jun 1 16:21:24 2008 +0000

    fix an evbuffer corruption when adding an empty evbuffer; from Scott Lamb
    
    svn:r845

commit 480d8142b8dc12a051ebd99d34a2a4aa44444181
Author: Niels Provos <provos@gmail.com>
Date:   Sun Jun 1 01:19:08 2008 +0000

    do not define a variable in a header file; it will lead to duplicate symbols when linking
    
    svn:r844

commit f9707a01e582818a71085f1c45bd8f8f1c923e3b
Author: Niels Provos <provos@gmail.com>
Date:   Sat May 31 18:57:21 2008 +0000

    we need to declare the enum first before it can be used; c++ compilation errors
    
    svn:r843

commit 05965921ab76880bf1faf3e405ca6c40c32fdf30
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat May 31 14:37:31 2008 +0000

    Add new functions to access backends by their features and to query the features of a backend.
    
    svn:r842

commit 9515c8076ee3e60580903338594c86a9b344619e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 30 17:35:20 2008 +0000

    Oops; add regress_et.c
    
    svn:r841

commit 39400e68b6202dc40545b5ac26468fc3f7a11184
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 30 16:56:34 2008 +0000

    Patch from Valery Kholodkov: support for edge-triggered events with epoll and kqueue.  Changed from original patch: made test into a regression test, with explicit success/failure for edge-triggered and non-edge-triggered cases. Closes SF request 1968284.
    
    svn:r840

commit 9ca7a3a3d6be5741095b3ba2c7e1c979f66628cb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 30 16:19:01 2008 +0000

    Resolve two conflicts.
    
    svn:r839

commit 2deb3ce061adffccbacff6b87401134c4047b8b3
Author: Niels Provos <provos@gmail.com>
Date:   Thu May 29 01:39:43 2008 +0000

    simplify handling of environment variables for disabling backends;
    make event_get_supported_methods obey environment variables; this
    fixes make verify; problem reported by Scott Lamb.
    
    
    svn:r838

commit 8b66f1bd4dd7c4e5e2b913062ea6c9ee1836e7ec
Author: Niels Provos <provos@gmail.com>
Date:   Sat May 17 02:14:17 2008 +0000

    constify struct timeval *
    
    svn:r836

commit 134344b79ebbda2ff765f7381e49da686bed9f7c
Author: Niels Provos <provos@gmail.com>
Date:   Fri May 16 01:55:40 2008 +0000

    Fix use of freed memory in event_reinit; pointed out by Peter Postma
    
    svn:r834

commit bc5e27190f11e23d1737a0644fa221f1642f3f6a
Author: Niels Provos <provos@gmail.com>
Date:   Thu May 15 06:36:36 2008 +0000

    Attempt to make a project for the regression test. There are several problems:
       - no gettimeofday on windows
       - no varargs macros on windows (all the rpc stuff does not build)
       - no zlib on windows (zlib test does not build)
       - some library dependencies seem to be missing
    
    svn:r833

commit 89a1512a74a8ae8b920ce52c7b0f706bf59832b8
Author: Niels Provos <provos@gmail.com>
Date:   Thu May 15 06:33:23 2008 +0000

    close -> EVUTIL_CLOSESOCKET
    
    svn:r832

commit 9e8688a749297b88b1841f723b51f60dfa314a07
Author: Niels Provos <provos@gmail.com>
Date:   Thu May 15 06:10:40 2008 +0000

    windows does not have varargs macros, so this is all useless
    
    svn:r831

commit a35529c60faa45e551fef155bfa6f8646f3f3583
Author: Niels Provos <provos@gmail.com>
Date:   Thu May 15 06:03:23 2008 +0000

    add the code here until we figure out how to generate it on windows
    
    svn:r830

commit a68de2525d3e3bc39cfaa9e3eac055a284ad6c00
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 15 03:49:03 2008 +0000

     r19749@catbus:  nickm | 2008-05-14 23:48:44 -0400
     New function to dump inserted and active events.  Also do not recv() on an int array.
    
    
    svn:r829

commit f9b4ee0aa4cc786cbc567de12edb914122614107
Author: Niels Provos <provos@gmail.com>
Date:   Thu May 15 03:19:05 2008 +0000

    replace write/read/close with send/recv/EVUTIL_CLOSESOCKET
    
    svn:r828

commit 35245a6037bd1a2e3d678014b05a22276e022c09
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 15 03:16:34 2008 +0000

    Minor project content tweaks
    
    svn:r827

commit 90ddd91ff046b01158a2f9c88e49960b294a8697
Author: Niels Provos <provos@gmail.com>
Date:   Thu May 15 03:14:48 2008 +0000

    do not include sys/time.h on windows
    
    svn:r826

commit 3ca22aa837262bdb9a5960de750217dc5e8fe5d3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 15 03:05:10 2008 +0000

     r19739@catbus:  nickm | 2008-05-14 23:05:03 -0400
     Use our offsetof; do not rely on platform offsetof
    
    
    svn:r825

commit c3c11f27b0915e5ba91ba00293381c962494ea0d
Author: Niels Provos <provos@gmail.com>
Date:   Thu May 15 01:54:20 2008 +0000

    add a simple http server for potential benchmarking
    
    svn:r823

commit ec3956ba48f2212cd23cfdb88d4e777b51441146
Author: Niels Provos <provos@gmail.com>
Date:   Thu May 15 01:53:48 2008 +0000

    fix connection keep-alive behavior for HTTP/1.0
    
    svn:r822

commit 7be8f13b95b85816329d725307e9f8fc8839e6e4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 14 15:56:17 2008 +0000

     r19736@catbus:  nickm | 2008-05-14 11:50:49 -0400
     Add casts to make some printf formats in regress.c happier.
    
    
    svn:r821

commit aa4b92574b4ca57f1172119d66b6559409410a68
Author: Niels Provos <provos@gmail.com>
Date:   Tue May 13 05:05:30 2008 +0000

    move some structure definitions from evrpc.h to evrpc-internal.h
    
    svn:r817

commit 1bce6f74349051fbda3e435f1e7dce7ae8c80644
Author: Niels Provos <provos@gmail.com>
Date:   Tue May 13 03:51:10 2008 +0000

    use evhttp_connection_base_new()
    
    svn:r816

commit ef0221cc3957fa3103e4f24db10eb090ae2db0f1
Author: Niels Provos <provos@gmail.com>
Date:   Tue May 13 03:42:47 2008 +0000

    document chunked replies plus fix doxygen warnings
    
    svn:r815

commit 0cafdeb6f53370877a74fa4687bcaf1b269396a5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 12 17:16:47 2008 +0000

    Tweaks to make unit tests fail less badly on mingw on trunk.
    
    svn:r814

commit c6da86ffcb85636e56dd4ea14a6d65ba7970d921
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 12 16:44:24 2008 +0000

     r19709@catbus:  nickm | 2008-05-12 12:42:48 -0400
     Possible fix for [1960723] snprintf and vsnprintf return values are wrong on win32
    
    
    svn:r813

commit 1080852e91291bcb1fb46dbc9e493d255aaa06fb
Author: Niels Provos <provos@gmail.com>
Date:   Mon May 12 03:12:09 2008 +0000

    allow cancelation of user initiated http requests; this will allow cancelation of rpc requests eventually
    
    svn:r812

commit 03fafae0068ed014dfe9ee97a3e150fbe6ff6ba0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 12 01:03:36 2008 +0000

    Make trunk event.c build happily on win32 under mingw.
    
    
    svn:r811

commit 054159f59c0de3fe3a73cad011883f6c02ce6f3f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 12 00:56:19 2008 +0000

     r19679@catbus:  nickm | 2008-05-11 20:56:12 -0400
     Windows does not have alloca().
    
    
    svn:r810

commit 04366d5acc691783083c5e746056694943924b3a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 12 00:51:48 2008 +0000

     r19677@catbus:  nickm | 2008-05-11 20:51:41 -0400
     Oops; we had not changed event_malloc() to mm_malloc() [etc] in win32.c
    
    
    svn:r809

commit 6bf1ca780c5f60618e59e02b61eae4bfee199f46
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 12 00:40:04 2008 +0000

     r19675@catbus:  nickm | 2008-05-11 20:39:39 -0400
     Stop pretending that u_char and u_short are standard types that win32 is dumb not to have.  In fact, u_char can really just be spelled out, and u_short was usually just a bad way of saying ev_uint16_t.
    
    
    svn:r808

commit a57767faf8d140797b0adf3fe885b7eb8928057c
Author: Niels Provos <provos@gmail.com>
Date:   Sun May 11 16:22:35 2008 +0000

    more accessors for evhttp_request
    
    svn:r807

commit 687be1241bd1c931f724ceeb562d64037f4e13f1
Author: Niels Provos <provos@gmail.com>
Date:   Sat May 10 07:32:05 2008 +0000

    dispatch the callbacks against the decoded uri to be more http compliant
    
    svn:r806

commit 7bbe185b0e54f3d3228ed7e17c78ed3c5ec05836
Author: Niels Provos <provos@gmail.com>
Date:   Sat May 10 06:32:53 2008 +0000

    evhttp_request_uri -> evhttp_request_get_uri
    
    svn:r805

commit 950af186791c01636fe37ef8c3720154e48f975c
Author: Niels Provos <provos@gmail.com>
Date:   Sat May 10 05:58:17 2008 +0000

    replace fnmatch with homegrown function
    
    svn:r804

commit 7868ab5a435d6697cc0c70ab085d7970e5b97384
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 9 04:00:17 2008 +0000

     r19667@catbus:  nickm | 2008-05-08 23:49:26 -0400
     fwd-port: Always include winsock2.h before windows.h.  Apparently some SDKs need this.
    
    
    svn:r803

commit 64ce7990831e76038285bb78b9c061b6fcba4370
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 8 23:57:31 2008 +0000

     r15555@tombo:  nickm | 2008-05-08 19:56:51 -0400
     fwd-port The IRIX compiler thinks #error means warn.  Fix configure.in to tolerate this.
    
    
    svn:r801

commit 8acb80b4f9a19469dd0d93e5b7cd149e7f89da3b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 8 22:51:39 2008 +0000

     r15551@tombo:  nickm | 2008-05-08 14:49:20 -0400
     Use _get_ convention for new accessor functions.  (These are all new ones as of 2.0, I believe).
    
    
    svn:r799

commit 7defe4cbc16a53b10e8b03ed618140121cc91144
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 8 15:55:09 2008 +0000

     r15549@tombo:  nickm | 2008-05-08 11:53:11 -0400
     Make new http headers include minimal parts of event2/ tree; make old evhttp.h incldue event.h, since the old one did too.
    
    
    svn:r798

commit a29f7eefac8f3c66434fb5d7461546d1c7234675
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 8 15:38:31 2008 +0000

    svn:r797

commit 3d60bccc8ef2ef9413d198bc670f00efb21149af
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 8 14:25:44 2008 +0000

     r19656@catbus:  nickm | 2008-05-08 10:25:08 -0400
     forward-port: Remove #include "misc.h"s.
    
    
    svn:r795

commit a26442c5acba29b315793e67bc802c4fed13e31d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu May 8 14:06:33 2008 +0000

     r19649@catbus:  nickm | 2008-05-08 10:00:14 -0400
     Replace gettimeofday() usage with a new evutil_gettimeofday().  This removes all previous need for win32-code/misc.[ch]
    
    
    svn:r792

commit 85ed7133439658bf7b44a99100fcf82eed1d232e
Author: Niels Provos <provos@gmail.com>
Date:   Thu May 8 07:00:16 2008 +0000

    deprecate timeout_* event functions by moving them to event_compat.h
    
    svn:r791

commit de1c43926b032954a91f7edf50bbf4f233bd791e
Author: Niels Provos <provos@gmail.com>
Date:   Thu May 8 06:15:04 2008 +0000

    migrate evhttp to event2; accessors are still missing
    
    svn:r790

commit 3f56e364b76ccc3a688768e92952d08052556120
Author: Niels Provos <provos@gmail.com>
Date:   Thu May 8 05:56:20 2008 +0000

    event_base_new_with_config() and related methods
    
    svn:r789

commit 3b2022ef3a9eba280b256ac7bbe99f224a8584ad
Author: Niels Provos <provos@gmail.com>
Date:   Thu May 8 05:33:15 2008 +0000

    provide an api for retrieving the supported event mechanisms
    
    svn:r788

commit 0a804f3c837f7969d04f6604a40897a9b5aa8c57
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 7 21:51:49 2008 +0000

     r19641@catbus:  nickm | 2008-05-07 17:51:26 -0400
     Forward-port: Fix win32 vc-2005 build.
    
    
    svn:r786

commit f2d65f8a9cdbfd5500d1b3a01b5c9de8e1f89f5c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 7 20:29:33 2008 +0000

     r19634@catbus:  nickm | 2008-05-07 16:10:37 -0400
     the C syntax is fn(void), not fn().
    
    
    svn:r784

commit 68fecb7ab6c24c13a2693464e62228601d0af10b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed May 7 20:29:11 2008 +0000

     r19633@catbus:  nickm | 2008-05-07 16:10:00 -0400
     Fix bug 1958901: stop overriding CPPFLAGS in test directory.
    
    
    svn:r783

commit 300a4efb2d3b28fd0dfbb7cfb004ddf7a19d5ef4
Author: Niels Provos <provos@gmail.com>
Date:   Wed May 7 01:52:24 2008 +0000

    test virtual hosts
    
    svn:r780

commit caa368e1cc901abf75c02ae19d70d148a95e79ba
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 5 19:19:47 2008 +0000

     r19610@catbus:  nickm | 2008-05-05 15:18:52 -0400
     Switch strcmp() tests in test_evbuffer() to use memcmp instead.  Previously they broke on my Linux box.
    
    
    svn:r779

commit 803dc36ad8dde5964d87ee87bc1e4f64277f4903
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 5 19:19:08 2008 +0000

     r19609@catbus:  nickm | 2008-05-05 15:16:52 -0400
     Reename evdns-internal struct request to evdns_request, and expose the name. switch new evdns resolve APIs to return evdns_request*.  This is a prereq to making evdns requests cancelable.
    
    
    svn:r778

commit 957e9fd829b64dc8f54824a34601eff95e71d669
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 5 17:49:52 2008 +0000

     r19607@catbus:  nickm | 2008-05-05 13:49:44 -0400
     Hack to make sure that there is always a working fast EVENT_FD()
    
    
    svn:r777

commit 4e8a339ef7afaecaa230ef4acd68c87c78f51e96
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 5 15:46:00 2008 +0000

     r19602@catbus:  nickm | 2008-05-05 11:45:18 -0400
     Make most of the tests use the new headers.
    
    
    svn:r776

commit bb37fbb22ef403b993c86ce8930a5061c3d49c93
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 5 15:45:47 2008 +0000

     r19601@catbus:  nickm | 2008-05-05 11:45:04 -0400
     Make event_rpcgen.py use the new headers.
    
    
    svn:r775

commit bc6da5ea79be0083c6b276d9fd6a62cb8278f096
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 5 15:45:39 2008 +0000

     r19600@catbus:  nickm | 2008-05-05 11:34:06 -0400
     Move EV_* flags into event.h; they are a necessary part of the public API.
    
    
    svn:r774

commit d0c3644e63667380ff08645621eefaea0231241a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 5 15:45:30 2008 +0000

     r19599@catbus:  nickm | 2008-05-05 11:26:18 -0400
     Turn event_initialized() and friends into a function; add function equivalents for EVENT_FD and EVENT_SIGNAL.
    
    
    svn:r773

commit 891dba4376535df407189de3a2af7c3951280752
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon May 5 15:00:53 2008 +0000

     r19597@catbus:  nickm | 2008-05-05 11:00:29 -0400
     define _GNU_SOURCE before including fnmatch.h so that FNM_CASEFOLD gets defined and linux build gets fixed.  This whole fnmatch() business will be a bit hard to port, though: windows doesn't have one IIUC, so we'll have to reimplement our own to work there.
    
    
    svn:r772

commit f2a81fbc67b90551a50e07f4af5a266ac081ccd4
Author: Niels Provos <provos@gmail.com>
Date:   Mon May 5 07:17:05 2008 +0000

    add support for virtual http hosts; no tests yet
    
    svn:r771

commit f940eb4b8d26f677af4bcaa21ed98cfdb9db0acc
Author: Niels Provos <provos@gmail.com>
Date:   Sun May 4 22:21:29 2008 +0000

    fix a bug where it was not possible to bind multiple sockets to the same http
    server; test that binding multiple sockets works.
    
    
    svn:r769

commit 5786d5255a3a906b0768304d28171ef95c05bdbb
Author: Niels Provos <provos@gmail.com>
Date:   Sun May 4 20:05:39 2008 +0000

    improve doxygen documentation for evhttp.h - still incomplete
    
    svn:r768

commit 36d7ab508293985ac08f8df043d837b96028cd0f
Author: Niels Provos <provos@gmail.com>
Date:   Sun May 4 18:31:21 2008 +0000

    trust in naming: rename evbuffer.c to bufferevent.c
    
    svn:r767

commit 40a44b36bbc108a97e65517b98bc2bb65896ff07
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun May 4 17:23:20 2008 +0000

     r19564@catbus:  nickm | 2008-05-04 13:23:10 -0400
     Fix compile with --enable-gcc-warnings and clock_gettime()
    
    
    svn:r766

commit a83caa6b29b1d86dd2e8121bc782a5ce92bbdbb9
Author: Niels Provos <provos@gmail.com>
Date:   Sun May 4 03:52:24 2008 +0000

    remove too agressive assert
    
    svn:r765

commit 181007b9cf52ae6aea8d97e64e114895c7f885f0
Author: Niels Provos <provos@gmail.com>
Date:   Sat May 3 22:14:44 2008 +0000

    make event_assign void; it cannot return an error
    
    svn:r763

commit 1d30750b1de39c25ff930d8a52e2f3228fac353b
Author: Niels Provos <provos@gmail.com>
Date:   Sat May 3 22:10:09 2008 +0000

    support for periodic timeouts
    
    svn:r762

commit 8c750eaff8412b8387eeca1e75d62540ad725f00
Author: Niels Provos <provos@gmail.com>
Date:   Sat May 3 21:37:33 2008 +0000

    separate signal events from io events
    
    svn:r760

commit 45e6fb0dd263f878135bd210d3d410906eb45c9f
Author: Niels Provos <provos@gmail.com>
Date:   Sat May 3 18:23:44 2008 +0000

    cache clock_gettime/gettimeofday values in base
    
    svn:r758

commit f04497e493c6b665d6cc889a57f2441d71d176d1
Author: Niels Provos <provos@gmail.com>
Date:   Sat May 3 03:05:28 2008 +0000

    introduce evbuffer_reserve_space() and evbuffer_commit_space() to make processing in filters more efficient
    
    svn:r757

commit becc89b7788984924b3041d5a187b1c978bac458
Author: Niels Provos <provos@gmail.com>
Date:   Sat May 3 02:37:18 2008 +0000

    introduce evbuffer_contiguous_space() and use it in the zlib filter test
    
    svn:r756

commit 5fbc7f0aeedcc5e57ac40aad01211bce7a7c7a0d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri May 2 16:28:25 2008 +0000

     r15439@tombo:  nickm | 2008-05-02 12:28:08 -0400
     use event_assign internall; switch uses of event_set to use event_assign instead.
    
    
    svn:r755

commit e8f450f232cdb01349e5639181dd115ed5a663f0
Author: Niels Provos <provos@gmail.com>
Date:   Thu May 1 02:08:26 2008 +0000

    expose a way to create the rpc context manually
    
    svn:r754

commit 85c4904bc526103e5702c716ee80d03937083168
Author: Niels Provos <provos@gmail.com>
Date:   Thu May 1 01:45:00 2008 +0000

    allow connections to be removed from an rpc pool
    
    svn:r753

commit d76cca72736a0918221506c64d76124e65a71f1a
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 30 04:36:26 2008 +0000

    fix missing printf format argument
    
    svn:r752

commit ccb70f1bc747068e960dd721669f0298b4f7870c
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 30 04:31:10 2008 +0000

    provide example bufferevent filters doing compression and decompression as additional regression test
    
    svn:r751

commit 522480f5cebeb8bb9ff9c09d14b8ae6280f15038
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 30 01:01:57 2008 +0000

    improve documentation for bufferevent.h
    
    svn:r750

commit c58a01a23bc3fb649b3c45a625ebb643864166a9
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 30 00:50:20 2008 +0000

    fix regression test; oops
    
    svn:r749

commit 682adc443b03a47c849f028474639c5d8254101c
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 30 00:09:16 2008 +0000

    support input/output filters for bufferevents
    
    svn:r748

commit 28add6b9e2d03b96ff73d06f825c3186101ac445
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 29 23:18:04 2008 +0000

    add more header files to doxygen
    
    svn:r747

commit 98dc98c59fb7833bb60319a988beea596698b98a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 29 21:19:26 2008 +0000

     r15346@tombo:  nickm | 2008-04-29 17:19:18 -0400
     Remove the never-exported, never-used, never-threadsafe evhttp_hostportfile()
    
    
    svn:r746

commit 9626a421de2e3b4e2eed34bfdffdd0d417655c78
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 29 18:11:23 2008 +0000

     r15341@tombo:  nickm | 2008-04-29 14:09:50 -0400
     Use internal implementation for evutil_timercmp() everywhere, to avoid bugs when the platform timercmp() has never heard of <= or >=.  Also, replace timercmp() usage in min_heap.c with call to evutil_timercmp().
    
    
    svn:r744

commit 4cff82bb4f2519d139559c308b63be54cb86b002
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Apr 29 18:11:10 2008 +0000

     r15339@tombo:  nickm | 2008-04-29 14:03:48 -0400
     Note that evhttp_hostportfile is not threadsafe, and so its usage will change.  Mark its first argument const. Remove a now-redundant declaration for it in http-internal.h.
    
    
    svn:r743

commit e44ef375ee9a8b4c7e8d21a752e9e4864595758f
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 29 04:52:50 2008 +0000

    convert evhttp_connection to use bufferevents
    
    svn:r742

commit 0ec09b550795d19a74425c1756fcc598b1f3f8b3
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 29 04:35:26 2008 +0000

    also try client connection for chunked requests
    
    svn:r741

commit 9c480533bf1181d41eadf21fde0df6f4481d8e55
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 29 02:33:27 2008 +0000

    test the server side of sending chunked replies
    
    svn:r740

commit 72a3902e5c25272c0c6f690971633c5be947a392
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 29 00:24:00 2008 +0000

    test some primitives from http.c
    
    svn:r739

commit 9485ff9a6629e2b5f73a775a7fa799f56d589e30
Author: Niels Provos <provos@gmail.com>
Date:   Sun Apr 27 20:40:56 2008 +0000

    introduce bufferevent_setcb and bufferevent_setfd to allow better manipulation of bufferevents
    
    svn:r737

commit 22c8a404027c7efcd486d70568c5d6f723781635
Author: Niels Provos <provos@gmail.com>
Date:   Sun Apr 27 20:04:33 2008 +0000

    test connection retry logic
    
    svn:r736

commit 7b29ad57d95513ff806c4bbdace0861330dd8054
Author: Niels Provos <provos@gmail.com>
Date:   Sun Apr 27 19:41:26 2008 +0000

    test server behavior when connection times out while reading the headers
    
    svn:r735

commit dd183f7c97777e8937187c0041be383338d0c0ad
Author: Niels Provos <provos@gmail.com>
Date:   Sun Apr 27 00:32:10 2008 +0000

    provide bufferevent_input and bufferevent_output without requiring knowledge of the structure
    
    svn:r734

commit f6c40173819c911e99b61867c53daa766618c4c5
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 26 05:13:56 2008 +0000

    fix a bug in which bufferevent_write_buffer would not schedule a write event
    
    svn:r733

commit 3a17aeed7a481e614c65925cbe07b286ae257e54
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 26 01:00:44 2008 +0000

    fix a bug in buffrevent read water marks and add a test for them
    
    svn:r731

commit 3278012f33bc5bf3a965244d570803dd6b7e663f
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 26 00:35:17 2008 +0000

    expose bufferevent_setwatermark via header files and fix high watermark on read
    
    svn:r729

commit 89f63b205d29b9ff9642713d22ca59427c1ffab5
Author: Niels Provos <provos@gmail.com>
Date:   Fri Apr 25 02:44:46 2008 +0000

    add bufferevent_read_buffer function
    
    svn:r728

commit fe2e7307f3a2d7915098a3fa671da3c3e89bdd64
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 25 01:29:15 2008 +0000

     r15320@tombo:  nickm | 2008-04-24 21:29:06 -0400
     Yes, niels says this is safe.
    
    
    svn:r727

commit 94fb4d0a1e95f140dd840535bb066fb7dbb3013c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 25 01:18:18 2008 +0000

     r15317@tombo:  nickm | 2008-04-24 21:17:49 -0400
     Add new functions to be more threadsafe (and structure-ignorant) than event_set.
    
    
    svn:r726

commit 49868b618a55c375d6c378edc174cd81e478f213
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 25 01:18:08 2008 +0000

     r15316@tombo:  nickm | 2008-04-24 20:58:36 -0400
     Rename internal memory management functions from event_malloc() etc to mm_malloc() etc.
    
    
    svn:r725

commit a55a67d56e989b9f7fa2027f2c75bec8a55a9a87
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 18 13:46:13 2008 +0000

     r15249@tombo:  nickm | 2008-04-18 09:46:02 -0400
     Avoid leaking a string in the unlikely OOM case from name_from_addr. spotted by niels.
    
    
    svn:r724

commit a404bf9877ad2cca2f4bb403afff6818bb94d6e8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 18 13:28:00 2008 +0000

     r15245@tombo:  nickm | 2008-04-18 09:27:50 -0400
     Oops; use libevent-internal type instead of uint32_t.
    
    
    svn:r722

commit 8d2a61605b6c32a06b961238eb5d3195b8b452d1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 18 13:25:05 2008 +0000

     r15242@tombo:  nickm | 2008-04-18 09:24:44 -0400
     Make tagging code thread-safe, and fix a bug in encode_int_internal
    
    
    svn:r721

commit a2d4a06298173e0db43ae4012edb48f538825fd6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 17 19:27:54 2008 +0000

     r15228@tombo:  nickm | 2008-04-17 15:27:39 -0400
     Use new includes in evport.c and devpoll.c.  I do not have the hardware to compile these on; somebody else should test them.
    
    
    svn:r720

commit 3eb21c0d33683302e1acd7e14a899889f28b2931
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 17 19:25:35 2008 +0000

     r15226@tombo:  nickm | 2008-04-17 15:25:25 -0400
     Fix a couple of gcc warnings on 64-bit platforms
    
    
    svn:r719

commit 8863ff7625c3d4fd81063029738bb7c31471e79d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 17 19:19:36 2008 +0000

     r15224@tombo:  nickm | 2008-04-17 15:19:24 -0400
     Oops. We need to make sure that strdup wasn't oom.
    
    
    svn:r718

commit ae09ac4ae0194880fe7871dc4b6704d99901bd8a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 17 19:18:40 2008 +0000

     r15220@tombo:  nickm | 2008-04-17 15:16:02 -0400
     Use new includes in more files still
    
    
    svn:r717

commit 3f3a16757f2843c1edebe8df58a85aed965f7fd9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 17 19:17:50 2008 +0000

     r15219@tombo:  nickm | 2008-04-17 15:12:17 -0400
     Use new includes in epoll.c
    
    
    svn:r716

commit beb39f577032cc7ba1c727fda00fc63816a90262
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 17 19:16:30 2008 +0000

     r15218@tombo:  nickm | 2008-04-17 15:10:13 -0400
     Add a missing #include <stdarg.h>
    
    
    svn:r715

commit e688a88a821506e8cfb43155496c8e2b1b39af53
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 17 17:55:35 2008 +0000

     r15216@tombo:  nickm | 2008-04-17 13:55:05 -0400
     Add new thread-safe interfaces to evdns functions. Needs review.
    
    
    svn:r714

commit fc41ffde4d21a61a070c88ae57e1e18f3055b08b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 17 15:50:28 2008 +0000

     r15214@tombo:  nickm | 2008-04-17 11:47:10 -0400
     Make name_from_addr() threadsafe in http.c
    
    
    svn:r713

commit 963ae2cf42af8f9fea2729d5c424ef9ffa0a9a6c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 16 21:01:31 2008 +0000

     r15212@tombo:  nickm | 2008-04-16 17:01:21 -0400
     Remove some needless includes
    
    
    svn:r712

commit 0ac73078ed42b5185a45610534ce3475ba6c27e7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 16 20:01:51 2008 +0000

     r15193@tombo:  nickm | 2008-04-16 16:00:35 -0400
     Split event.h into several new headers in include/event2.  event.h is now just a wrapper that includes all the subheaders.
    
    
    svn:r711

commit f560198e4598fe1b1fe471c9f3da2251edf87105
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Apr 16 20:01:27 2008 +0000

     r15192@tombo:  nickm | 2008-04-16 15:59:51 -0400
     Fix a compilation error on OSX.
    
    
    svn:r710

commit f9f4d4fe1720f888ff1d89d7edfdc9725f62432d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Apr 11 20:02:50 2008 +0000

     r19309@catbus:  nickm | 2008-04-11 16:02:07 -0400
     Fix for epoll-on-linux bug (#1908866) where timeout values over (LONG_MAX-999)/HZ) (35 for me, or maybe 6 hours 50 min for some people, or maybe 3 hours 25 minutes for a special few) get treated as "wait forever".  This actually deserves to be fixed in the kernel, but even if it is we will need to support Linux versions with this bug.
    
    
    svn:r709

commit 44ceb945a37cc3b791b59b4ac1a9c669eb3e7e2e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 10 19:34:50 2008 +0000

     r19305@catbus:  nickm | 2008-04-10 15:34:10 -0400
     Fix bug 1938754: do not warn when epoll_create() fails with ENOSYS.
    
    
    svn:r706

commit 0c843507abcf18c8a7c766fa5b7a307b2030bd8f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Apr 10 19:25:11 2008 +0000

     r19301@catbus:  nickm | 2008-04-10 14:54:46 -0400
     Forward-port: Correct the documentation on evbuffer_add_[v]printf: Fix for bug 1914464.
    
    
    svn:r705

commit 812d2fd8fd4dfab158bbc8e278a723363cf29e6e
Author: Niels Provos <provos@gmail.com>
Date:   Thu Apr 3 14:27:01 2008 +0000

    proxy one more generator
    
    svn:r701

commit a7e395512efd5622ad81dc0e10a41ce157301cee
Author: Niels Provos <provos@gmail.com>
Date:   Thu Apr 3 03:33:07 2008 +0000

    slight refactoring
    
    svn:r700

commit 193c06a7ed9730f5f08ca3958fbacee2c3e28e36
Author: Niels Provos <provos@gmail.com>
Date:   Mon Mar 31 02:04:34 2008 +0000

    fix a bug in which evbuffer_add_vfprintf would loop forever;  avoid
    fragmentation in evbuffer_expand by increasing the size of the last buffer
    in the chain; as a result with have to keep track of the previous_to_last
    chain;   provide a evbuffer_validate() function in the regression test to
    make sure that all evbuffer are internally consistent.
    
    
    svn:r699

commit 3ef1f5041596672affcfe8af01d6d73eb86865de
Author: Niels Provos <provos@gmail.com>
Date:   Mon Mar 31 00:33:46 2008 +0000

    do not delete uninitialized timeout event in evdns
    
    svn:r697

commit 502929cdf21ba9433f9956c1e3f177a28a1d5b0f
Author: Niels Provos <provos@gmail.com>
Date:   Mon Mar 31 00:31:53 2008 +0000

    add a check that base != NULL for threading; might want to drop this later
    
    svn:r696

commit 8920ac4ddf509be3981b00d5b13ed349359e4834
Author: Niels Provos <provos@gmail.com>
Date:   Sun Mar 30 21:06:33 2008 +0000

    make RPC replies use application/octet-stream
    
    svn:r694

commit ca42671a1443b695bc9a7640d4eb223d1a34fbcc
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 29 01:45:45 2008 +0000

    make event methods static so that they are not exported; from Andrei Nigmatulin
    
    svn:r692

commit cb50f615d4902a0703a604bf64b1a5d014bcbb70
Author: Niels Provos <provos@gmail.com>
Date:   Tue Mar 11 05:26:30 2008 +0000

    rename lock create callback functions; as suggested by nick
    
    svn:r691

commit c182baca1028af0b12142e26a571e180232039b1
Author: Niels Provos <provos@gmail.com>
Date:   Mon Mar 10 03:17:20 2008 +0000

    switch thread support so that locks get allocated as they are needed.
    
    svn:r690

commit 6a92ec0b0f43d7b074f856152d24a1f45384c787
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Mar 4 19:47:01 2008 +0000

     r18547@catbus:  nickm | 2008-03-04 14:46:42 -0500
     Fix compilation with --enable-gcc-warnings
    
    
    svn:r689

commit 0c49e456f1c80fed988342b90cf28bb1f88273e8
Author: Niels Provos <provos@gmail.com>
Date:   Tue Mar 4 05:42:20 2008 +0000

    document thread functions
    
    svn:r688

commit d5c15b2ebb609414358216cd62ca135b5658c104
Author: Niels Provos <provos@gmail.com>
Date:   Mon Mar 3 03:36:51 2008 +0000

    make event_rpcgen.py generate code include event-config.h
    
    svn:r686

commit 968fd5c06fc8dc5cf3cf6cad48fe7bc517d1fe99
Author: Niels Provos <provos@gmail.com>
Date:   Sun Mar 2 21:39:49 2008 +0000

    forgot this header file
    
    svn:r685

commit 558de9b3776bf378fe2416c1c86639bc7abef3db
Author: Niels Provos <provos@gmail.com>
Date:   Sun Mar 2 21:18:33 2008 +0000

    Provide OpenSSL style support for multiple threads accessing the same event_base
    
    svn:r684

commit 19dad16699ddf396c87e7c44c174e6716c0d160c
Author: Niels Provos <provos@gmail.com>
Date:   Sun Mar 2 01:46:00 2008 +0000

    Do not free the kqop file descriptor in other processes, also allow it to be 0; from Andrei Nigmatulin
    
    svn:r682

commit 593b5f99b334da9a5090792910d39b4de16d0f1f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Feb 29 22:33:01 2008 +0000

     r18492@catbus:  nickm | 2008-02-29 17:32:55 -0500
     Add another missing _REENTRANT.
    
    
    svn:r681

commit 00382110b268891ced706f9d84ec80031213bc89
Author: Niels Provos <provos@gmail.com>
Date:   Fri Feb 29 05:23:49 2008 +0000

    address nick's comments and make evbuffer_pullup more efficient
    
    svn:r680

commit 72105927770952445009742663e95f04ba702806
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 28 20:57:01 2008 +0000

     r18490@catbus:  nickm | 2008-02-28 15:56:55 -0500
     Replace www.google.com with google.com; fix EVDNS_MAIN code.
    
    
    svn:r679

commit 697177306f8dcf7781b5adc8bebe4dfae54f472a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 28 20:41:34 2008 +0000

     r18488@catbus:  nickm | 2008-02-28 15:41:27 -0500
     Define reentrant in evdns.c so that we get a declaration for strtok_r
    
    
    svn:r678

commit 0322ce0a3ba144cbf00f0a359c21aaf76e9f2063
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 28 18:36:03 2008 +0000

     r18486@catbus:  nickm | 2008-02-28 13:35:53 -0500
     Make offsetof into evutil_offsetof.  Be a little more willing to call evbuffer_chain_align() from evbuffer_expand().  Clarify some docs, and add some XXX comments to note questionable areas.
    
    
    svn:r677

commit d71da6f73748c063814c07c47c0d6fad90b2e8dd
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 28 17:47:30 2008 +0000

     r18484@catbus:  nickm | 2008-02-28 12:47:20 -0500
     Use event_warn() function, not fprintf-to-stderr.
    
    
    svn:r676

commit 0e7cbe6508a296952a05ddc9cb883fef0a13cf1e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Feb 28 17:38:52 2008 +0000

     r18482@catbus:  nickm | 2008-02-28 12:38:40 -0500
     Fix GCC 4.2 warnings; fix includes in subdirs.
    
    
    svn:r675

commit 5c70ea4c9d8720525405063658ccd3e24b6966b1
Author: Niels Provos <provos@gmail.com>
Date:   Thu Feb 28 02:47:43 2008 +0000

    improved code for evbuffer; avoids memcpy
    
    svn:r674

commit eb9b958089bcf59ad712c747e294da95c6baf20c
Author: Niels Provos <provos@gmail.com>
Date:   Wed Feb 27 06:20:48 2008 +0000

    add some basic tests for DELETE/PUT; from Josh Rotenberg
    
    svn:r673

commit e7ad5493908731707df6c9434decb0fecb7767eb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Feb 26 20:24:29 2008 +0000

     r14507@tombo:  nickm | 2008-02-26 15:23:44 -0500
     Patch from Tani Hosokawa: make some functions in http.c threadsafe.  Also, note some functions in http.c that still are not threadsafe.
    
    
    svn:r671

commit bd31d00fc19e426ed98a1483274e093789789f87
Author: Niels Provos <provos@gmail.com>
Date:   Tue Feb 26 04:54:19 2008 +0000

    move signal callbacks closer to test code
    
    svn:r670

commit 7470ce52c5670bae0ef2a9aa6a77988e0a77e0cb
Author: Niels Provos <provos@gmail.com>
Date:   Tue Feb 26 03:49:00 2008 +0000

    increase listen queue for http sockets to 128
    
    svn:r669

commit 960be58869f63c2a7814a984f7a34d69c159fbc3
Author: Niels Provos <provos@gmail.com>
Date:   Tue Feb 26 03:29:36 2008 +0000

    deal correctly with http/1.0 and keep-alive
    
    svn:r667

commit 0b114da2b64eac386b43933d3243100b4abf82ee
Author: Niels Provos <provos@gmail.com>
Date:   Tue Feb 26 03:12:07 2008 +0000

    introduce evhttp_accept_socket() to accept from an already created socket
    
    svn:r666

commit b14cd655d1eac14eed28ca749a4abf6889e2afca
Author: Niels Provos <provos@gmail.com>
Date:   Mon Feb 25 07:49:22 2008 +0000

    add support (without tests!) to PUT/DELETE requests; from Josh Rotenberg
    
    svn:r662

commit bb914ed9af5f509f80f72c289178c0e467864aed
Author: Niels Provos <provos@gmail.com>
Date:   Mon Feb 25 07:34:07 2008 +0000

    do not insert event into list when evsel->add fails
    
    svn:r660

commit 5a2ece1895d5cf4b3f07aad52ba88dc0edcb4990
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Feb 23 19:04:26 2008 +0000

     r18370@catbus:  nickm | 2008-02-23 14:04:00 -0500
     clean up some corner cases in evutil.h.
    
    
    svn:r655

commit 67bf29ad72572aaa433350438534ad78f0d0ec41
Author: Niels Provos <provos@gmail.com>
Date:   Sat Feb 23 06:02:04 2008 +0000

    simplify evbuffer by removing orig_buffer
    
    svn:r654

commit 87bef9e9740cba70007209eed70e3f55985d9a06
Author: Niels Provos <provos@gmail.com>
Date:   Wed Feb 20 21:49:09 2008 +0000

    update event_base_loop documentation; from Tani Hosokawa
    
    svn:r652

commit 0d26f1605f54527afb26d64e4fbfa2ff42bdb06e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 18 20:13:27 2008 +0000

     r18169@catbus:  nickm | 2008-02-18 15:13:20 -0500
     Rebuild and re-run configure etc when configure.in or Makefile.am changes.  Also, have automake do its dependency tracking.
    
    
    svn:r651

commit 11230f7e1620c663842e9993ac3cdaa29afec7c2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Feb 18 20:04:01 2008 +0000

     r18145@catbus:  nickm | 2008-02-18 15:02:20 -0500
     Stop using deprecated autoconf code to set integer types; detect actual files to include more thoroughly.   This should make us work on solaris 9 again.  This should be a backport candidate, if it works.  Also, make all libevent code use ev_uint32_t etc, rather than uint_32_t.
    
    
    svn:r649

commit 506d4dbcf469f100ffd490098647384c294e82e1
Author: Niels Provos <provos@gmail.com>
Date:   Sun Feb 17 01:31:31 2008 +0000

    remove NDEBUG ifdefs from evdns.c
    
    svn:r647

commit 23ef0d093661a0a0219190b2bbbdf8254af0000b
Author: Niels Provos <provos@gmail.com>
Date:   Sun Feb 17 01:15:36 2008 +0000

    allow regression code to be build even without Python installed
    
    svn:r645

commit f09e9d91b14e549b0b98d26c2c248e283bf8a85f
Author: Niels Provos <provos@gmail.com>
Date:   Sun Feb 17 01:12:09 2008 +0000

    1.3.99-trunk -> 1.4.99-trunk
    
    svn:r644

commit d47907a73036b07ce61c7ce81d19cde6bc2c4056
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Feb 16 20:50:02 2008 +0000

     r14213@tombo:  nickm | 2008-02-16 15:48:07 -0500
     Patch from Scott Lamb: make http content length into a 64-bit value.
    
    
    svn:r641

commit 807ab182d08971651b3cff66353e3145fb8e4ef2
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Feb 16 20:49:47 2008 +0000

     r14211@tombo:  nickm | 2008-02-16 15:28:54 -0500
     Add new evutil_strtoll() function so we can apply 64-bit content-length patch from Scott Lamb in a portable way.
    
    
    svn:r640

commit 677a95864be43749c82705f9f8f3f56f0b8a1f4b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Feb 16 16:56:34 2008 +0000

     r14205@tombo:  nickm | 2008-02-16 11:55:57 -0500
     Fix bug 1894184: add a CRLF after each chunk when sending chunked HTTP data.  Original patch from propanbutan.
    
    
    svn:r637

commit 8ab618916fc9ba06ff5e84d3ea858a8b4eec9f1b
Author: Niels Provos <provos@gmail.com>
Date:   Sat Feb 16 06:09:39 2008 +0000

    event_base_get_method; from Springande Ulv
    
    svn:r635

commit f38aec8bb733c57b5257bede429fa7f992131270
Author: Niels Provos <provos@gmail.com>
Date:   Tue Feb 12 06:01:46 2008 +0000

    devpoll and evport need reinit; tested by W.C.A. Wijngaards
    
    svn:r633

commit 2fde2217592db3be65a5b0d53e3ee054724139c4
Author: Niels Provos <provos@gmail.com>
Date:   Sat Feb 9 16:03:01 2008 +0000

    address some compiler warnings in debug mode
    
    svn:r630

commit 6baff52296073f668322e74f397e91ebb29030b9
Author: Niels Provos <provos@gmail.com>
Date:   Wed Feb 6 16:14:42 2008 +0000

    EAGAIN check for event ports; from Wijngaards
    
    svn:r629

commit 8c66d4e289290c58cfd34865e0405b549320d532
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jan 26 07:29:57 2008 +0000

    remove pending timeouts on event_base_free
    
    svn:r627

commit 9859bc783adcd51729b3d7563902ac8caca67b42
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Dec 31 20:47:12 2007 +0000

     r15764@tombo:  nickm | 2007-12-31 15:46:16 -0500
     Forward-port from 1.4 branch: Make generated rpc files build-depend on event_rpcgen.
    
    
    svn:r626

commit 992bc85b96b3ca3eeff05e030468392894cc7195
Author: Niels Provos <provos@gmail.com>
Date:   Mon Dec 31 20:42:21 2007 +0000

    dereference the right field and associate the right connection
    
    svn:r624

commit 2460aa5939c91fe75761c75c3d0a90f32b9a73b2
Author: Niels Provos <provos@gmail.com>
Date:   Mon Dec 31 19:33:30 2007 +0000

    allow hooks to get access to the connection object
    
    svn:r623

commit 5a5609c75317a8c011b02daf3853ebd3b6bab9fc
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 29 22:45:54 2007 +0000

    allow association of meta data with RPC requests for hook processing
    
    svn:r622

commit 024804cce7101c5d09bb58e85d4ca7cc83f3e44d
Author: Niels Provos <provos@gmail.com>
Date:   Fri Dec 28 07:58:29 2007 +0000

    the win32 changes for regress_http broke the regression test under unix.  making the socket non-blocking can return -1 on connect; so now, we need to check the errno; not sure if that is supported under windows.
    
    
    svn:r621

commit 955c6abf5327f3ebfa01d58a870a458f6aca0504
Author: Niels Provos <provos@gmail.com>
Date:   Fri Dec 28 00:36:47 2007 +0000

    pausing an rpc via a hook needs to deal with the fact that http callbacks free the request after they return; provide a way for a callback to take ownership of the request structure; the user then needs to explicitly free it.
    
    
    svn:r620

commit 6d291da240607b5ab6a3931ae761439c1880a9a4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Dec 28 00:34:05 2007 +0000

    Fix at least two bugs that are keeping the HTTP regression tests from running on windows.  There are some more bugs somewhere, since the HTTP regression tests still fail on windows.  But now they fail less.
    
    svn:r619

commit 819d4a33d766d1d585f73abb9d7c77d4f862970f
Author: Niels Provos <provos@gmail.com>
Date:   Thu Dec 27 23:17:24 2007 +0000

    allow hooks to pause RPC processing; this will allow hooks to do meaningful work before resuming the
    RPC processing; this is not backwards compatible.
    
    
    svn:r617

commit 76945273c674d51f1c2f12e646a5248a2f52ed0b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 27 21:37:52 2007 +0000

     r15733@tombo:  nickm | 2007-12-27 16:37:33 -0500
     Add another "what's new" file -- this one for svn trunk
    
    
    svn:r616

commit 616a64c87cd8c8f0348e2bee1cba5b87b3e760c4
Author: Niels Provos <provos@gmail.com>
Date:   Thu Dec 27 20:08:21 2007 +0000

    additional add argument was missing const qualifier
    
    
    svn:r615

commit 7e3a7af7d068a9b97d5d802d104cb30dd75a0e07
Author: Niels Provos <provos@gmail.com>
Date:   Mon Dec 24 23:59:41 2007 +0000

    support string arrays in event_rpcgen
    
    svn:r613

commit 03589ccb12c61e4ec9879298ddcceb80c930c008
Author: Niels Provos <provos@gmail.com>
Date:   Mon Dec 24 22:49:30 2007 +0000

    rollback r594: restructuring to make event activation independent.
    changes are going to wait for api design
    
    
    svn:r612

commit 68725dc8bddb083ede57a89ca5bba27ea905838b
Author: Niels Provos <provos@gmail.com>
Date:   Sun Dec 23 07:38:11 2007 +0000

    support integer arrays in rpc structures;  this involved some refactoring of the event_rpcgen code, so that other types should be able to get arrays fairly easily
    
    
    svn:r609

commit a5176a65ccfcec344d4827ab4ea1cb816bdba778
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 20 22:45:30 2007 +0000

    Fix a win32 warning in regress.c
    
    svn:r608

commit 127888bded88781b93be0b95b27737433ba7d516
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 20 22:20:06 2007 +0000

     r17291@catbus:  nickm | 2007-12-20 17:19:55 -0500
     Add tree.h to distributed files in trunk.
    
    
    svn:r607

commit fdafb66bb56d5982fa88243d4fd6930c28aba4ee
Author: Niels Provos <provos@gmail.com>
Date:   Wed Dec 19 06:33:05 2007 +0000

    removed linger from http server socket; reported by Ilya Martynov
    
    
    svn:r604

commit d4bdbca847ff1c788d6467e915d0b94e57da35bb
Author: Niels Provos <provos@gmail.com>
Date:   Tue Dec 18 03:54:19 2007 +0000

    add -Wstrict-aliasing and remove bogus evtag_test from event.h
    
    
    svn:r602

commit d80c1c368959de2b5383eb3c2a921699e04e809d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Dec 16 19:34:09 2007 +0000

     r17185@catbus:  nickm | 2007-12-16 14:33:40 -0500
     Fix compilation with --enable-gcc-warnings enabled.
    
    
    svn:r599

commit d56a34e4669afa708831554e78afe1759ff774d9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Dec 16 19:33:52 2007 +0000

     r16991@catbus:  nickm | 2007-12-06 15:05:56 -0500
     Move event_init in regress.c to the function that actually messed up the current_base value.
    
    
    svn:r598

commit 7ab26a2c3296738fd96842f526858271380cce38
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Dec 16 18:55:16 2007 +0000

     r15519@tombo:  nickm | 2007-12-16 13:54:12 -0500
     Fix for bug 1846282: accept as well-formed DNS replies with questions but no answers.
    
    
    svn:r595

commit 7aa845b73b93f84bf46276bb5669ee0cb5e81b6c
Author: Niels Provos <provos@gmail.com>
Date:   Sun Dec 16 04:10:30 2007 +0000

    restructure the code to make event activation independent of regular event logic
    
    svn:r594

commit 622f69cc5a2d3e40e60c203bdf2c3a8c68539609
Author: Niels Provos <provos@gmail.com>
Date:   Fri Dec 14 07:12:05 2007 +0000

    forgot to make new member optional
    
    svn:r590

commit 850534734be9e18ed24630d506bc252816229b77
Author: Niels Provos <provos@gmail.com>
Date:   Thu Dec 13 06:36:54 2007 +0000

    fix a bug with event_rpcgen for integers
    
    svn:r588

commit ffd606cd6dbb0df57a2d3c7f2ae4e68268ca4ea6
Author: Niels Provos <provos@gmail.com>
Date:   Thu Dec 13 06:14:18 2007 +0000

    prefix {encode,decode}_tag functions with evtag to avoid collisions
    
    svn:r587

commit 3b345f3e2d7870ce23a14e1c11217dbd7aa62d8e
Author: Niels Provos <provos@gmail.com>
Date:   Wed Dec 12 07:02:55 2007 +0000

    pull setters/getters out of RPC structures to reduce their memory footprint
    
    
    svn:r585

commit ba48719946f2f1ea80db28b77dc23b27010e01e5
Author: Niels Provos <provos@gmail.com>
Date:   Wed Dec 12 04:39:42 2007 +0000

    support for 32-bit tag numbers in rpc structures
    
    svn:r583

commit e8b916c36e4b042e14154242d548e0401bba7832
Author: Niels Provos <provos@gmail.com>
Date:   Sun Dec 9 05:07:48 2007 +0000

    update ChangeLog; forgot about it
    
    svn:r582

commit fbe24f43ab56deb2fd50fa4ca1756069c2c9123e
Author: Niels Provos <provos@gmail.com>
Date:   Sun Dec 9 05:07:20 2007 +0000

    remove obsoleted recalc code
    
    svn:r581

commit fa89d661d91b584df308c097c0eec2d949b6fc55
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 6 19:40:49 2007 +0000

    Adjust more unit tests to pass on win32.
    
    svn:r580

commit fd418645ffe8e0cd0002efaa1ad4cba3dc183af3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 6 19:36:49 2007 +0000

    Add winsock init functions to bench.c so it can run on win32.
    
    svn:r579

commit 9cc67e5f78c9d9f783a6a55514e2b604198de09e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 6 19:35:55 2007 +0000

    Compile regression tests by default even on win32.
    
    svn:r578

commit 77861fa7f177586d361059563987f691e8b7d143
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 6 19:20:24 2007 +0000

     r16931@catbus:  nickm | 2007-12-06 14:19:58 -0500
     Fix warnings in debug messages
    
    
    svn:r577

commit cd666f8071baee5cc4834738253d82d86a5307a1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 6 19:18:14 2007 +0000

    Debug new win32 code: make bufferevents test pass.
    
    svn:r576

commit 78d0de30b8e08429c57ccfbf667655e334042ab3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 6 18:38:50 2007 +0000

    Fix compile warnings and errors in win32 build.
    
    svn:r575

commit 2e2104f4cea0932a04d98452ab36f2c41786c5d7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 6 18:13:03 2007 +0000

     r15172@tombo:  nickm | 2007-12-06 12:54:37 -0500
     Rewrite win32.c to use a red-black tree to map sockets to events.  This changes the performance from O(N^2) to O(N lg N).  Needs testing.  (This was made possible by recent changes to the implementation of non-persistent events.)
    
    
    svn:r574

commit 3206bbca46f55e4eb4570566a9566dd10c182c6d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 6 18:12:56 2007 +0000

     r15171@tombo:  nickm | 2007-12-06 12:47:47 -0500
     Use GCC attributes (where available) to verify printf type-correctness.  Fix some bugs this turned up.
    
    
    svn:r573

commit 1e435af17e658c973f644c9c751ab58296413fcb
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 6 18:12:44 2007 +0000

     r15170@tombo:  nickm | 2007-12-06 12:38:03 -0500
     Fix a warning in regress.c
    
    
    svn:r572

commit 5482192bb3cd0d4ece6fdcc641f85ec852c0437d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Dec 6 04:36:18 2007 +0000

     r15166@tombo:  nickm | 2007-12-05 23:35:10 -0500
     Apply patch from bug 1841036: set the base of the correct event in evhttp_connection_start_detectclose()
    
    
    svn:r571

commit 60103d25a96c46043386edaa3b78175225ff0189
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 1 16:36:00 2007 +0000

    remove duplicate submit of test_evbuffer_readln
    
    svn:r569

commit 395dd198cb64f03bf0fc12a4dbb33999906dc9d7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Dec 1 09:30:07 2007 +0000

     r15096@tombo:  nickm | 2007-12-01 04:29:39 -0500
     Test for corner-cases of re-adding non-persistent events from one another's handlers
    
    
    svn:r568

commit d73cf1e1f28c7df624488749276f9ebc1e13f4d3
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Dec 1 09:29:52 2007 +0000

    svn:r567

commit 876c3af7b042624a9c0efd70e1cc571e0a852fe6
Author: Niels Provos <provos@gmail.com>
Date:   Fri Nov 30 02:21:33 2007 +0000

    add another benchmark that tests cascading events
    
    svn:r566

commit 74b3db50ae9cdbc9ffcafd761251935d7f1a2216
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 29 06:08:24 2007 +0000

    always generate Date and Content-Length headers for HTTP/1.1
    
    svn:r564

commit f175befac9e6c8a26ce1f99810816e2d03b5cd86
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 29 04:03:36 2007 +0000

    small improvements to evhttp documentation
    
    svn:r562

commit eeb5e4cd883536ac95c746d42cd844047590f45b
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 29 02:52:32 2007 +0000

    a bug in the regression test of event_reinit caused epoll to fail
    
    svn:r560

commit ef085e84c6614fef3110c6c3448874d0f7ab44f1
Author: Niels Provos <provos@gmail.com>
Date:   Tue Nov 27 06:45:25 2007 +0000

    we need to pass the evbase to evsel->add
    
    svn:r558

commit e2e4cf1f6c847a3987af140c21b54903659e1127
Author: Niels Provos <provos@gmail.com>
Date:   Tue Nov 27 06:11:28 2007 +0000

    more complete test for forking behavior
    
    svn:r556

commit 5f3e31596b1a231a6041b9a1302d8059293a9b02
Author: Niels Provos <provos@gmail.com>
Date:   Tue Nov 27 01:39:10 2007 +0000

    move EV_PERSIST handling out of the event backends
    
    svn:r555

commit a7a7a1904507bb7fcc22a3c045c030d2837c3510
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 26 19:25:09 2007 +0000

     r16735@catbus:  nickm | 2007-11-26 14:24:58 -0500
     Fix test for EVBUFFER_LENGTH in evhttp_make_header().  Since appending an empty buffer to another is a no-op, this is not really a bug-fix.
    
    
    svn:r554

commit ce4ee418d2fffd0a5ce7208e35a19a2fc7205826
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Nov 26 19:18:49 2007 +0000

     r16733@catbus:  nickm | 2007-11-26 14:18:25 -0500
     Add an --enable-gcc-warnings option (lifted from Tor) to the configure script.  When provided, and when we are using GCC, we enable a bunch of extra GCC warnings in the compiler.  Also, make the code all build happily with these warnings.
    
    
    svn:r553

commit 1120f04f3eaafe98259ef286eecb648337b2214f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 25 21:53:06 2007 +0000

     r16731@catbus:  nickm | 2007-11-25 16:52:53 -0500
     Replace all fds on non-unix-specific APIs with evutil_socket_t, which is int on unix and intptr_t on win32.
    
    
    svn:r552

commit cbf9cfdf4507651ba39489158b17cf11703bb43d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 25 21:35:02 2007 +0000

     r16729@catbus:  nickm | 2007-11-25 16:34:50 -0500
     Add missing changelog entry for last commit.
    
    
    svn:r551

commit 6773a59721365a793bfbf8da91c512a449bdaf4f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 25 21:32:26 2007 +0000

     r14953@tombo:  nickm | 2007-11-25 15:56:40 -0500
     Replace evbuffer_readline with a more powerful evbuffer_readln that can handle more EOL styles, and that can give useful results when there are NUL characters inside the returned values. Includes regression tests.
    
    
    svn:r550

commit ab010e161f5877f99a3122bf2726f3a40ceb3204
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 25 21:32:15 2007 +0000

     r14952@tombo:  nickm | 2007-11-25 14:47:45 -0500
     Fix an unused variable warning.
    
    
    svn:r549

commit d1ad9403cb39da4c5daae9bd7ab0fc3e6b4da4b9
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 25 21:28:51 2007 +0000

    svn:r547

commit fa95fe469aa666de53505f565bb69c8cd16ae6d8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 25 21:28:43 2007 +0000

     r16704@catbus:  nickm | 2007-11-19 15:58:54 -0500
     Check return value of event_add in signal.c
    
    
    svn:r546

commit 2823cb057927110719a7203c2346d6be8aa8468f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 25 17:15:28 2007 +0000

     r14944@tombo:  nickm | 2007-11-25 12:12:28 -0500
     Make kqueue pass more unit tests.
    
    
    svn:r544

commit 566ca340224c39e517f14d7a45cde68b874acde1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 25 17:15:17 2007 +0000

    svn:r543

commit 555e300ab282812f6fe4d776908584275993ba76
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 25 17:14:24 2007 +0000

     r14940@tombo:  nickm | 2007-11-25 12:01:37 -0500
     New mm-internal.h header that includes internal memory management functions.
    
    
    svn:r542

commit 7eb250e9c52813f30fef256b97f08a6871fd381a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 25 17:14:19 2007 +0000

     r14939@tombo:  nickm | 2007-11-25 11:59:26 -0500
     New function event_set_mem_functions to replace internal calls to malloc, free, etc with a user-supplied functions.
    
    
    svn:r541

commit 98b5453ecdd6a474ba8c3495285e607d5b7a8e57
Author: Niels Provos <provos@gmail.com>
Date:   Sun Nov 25 07:11:59 2007 +0000

    forgot to dealloc previous base
    
    svn:r540

commit 88897852fc72c2cd43c057f2fc550b5842d5b857
Author: Niels Provos <provos@gmail.com>
Date:   Sun Nov 25 06:57:59 2007 +0000

    provide event_reinit() to reinitialized an event_base after fork - necessary for epoll/kqueue
    
    svn:r539

commit 8c3396b0c60bd6c0dcc4f8baeb9174810247e557
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 22 16:41:29 2007 +0000

     r14935@tombo:  nickm | 2007-11-22 11:36:54 -0500
     Always set test_ok to zero after finishing a test, and before starting one.  This turns up some failures we had been missing.
    
    
    svn:r537

commit 1c23e219527b8342639f49e0884e209f7232502a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Nov 17 22:21:42 2007 +0000

     r14931@tombo:  nickm | 2007-11-17 17:21:09 -0500
     Patch from Scott Lamb: Implement event_{base_}loopbreak.  Includes documentation and tests.  From sf.net Feature Request 1826546.
    
    
    svn:r535

commit 70248ca8ad0dd426798d1e11328970b1f537e505
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Nov 17 22:21:33 2007 +0000

     r14930@tombo:  nickm | 2007-11-17 17:01:14 -0500
     documentation fix on loopexit and elsewhere from Scott Lamb.
    
    
    svn:r534

commit af6f331a0b777bedab38bfed254310134617c9e4
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 17 01:32:30 2007 +0000

    use a const pointer for bufferevent_write
    
    svn:r531

commit f586f42885b7558b1617396f53f19299f7c46ba8
Author: Niels Provos <provos@gmail.com>
Date:   Wed Nov 14 17:52:21 2007 +0000

    provide event_base_new() as a mechanism for not setting the current_global
    
    
    svn:r529

commit 56934d5d977892afa1342c8c3f55035989626bc5
Author: Niels Provos <provos@gmail.com>
Date:   Tue Nov 13 17:36:58 2007 +0000

    debug cleanups in signal.c; from Christopher Layne
    
    svn:r527

commit d50afbb3700f6938387128c0e9283b9b4987d3c9
Author: Niels Provos <provos@gmail.com>
Date:   Tue Nov 13 03:32:10 2007 +0000

    free minheap; from Christopher Layne
    
    svn:r525

commit d1e03054a30a79ee0574d8d2b98395f6445d63a7
Author: Niels Provos <provos@gmail.com>
Date:   Mon Nov 12 07:34:29 2007 +0000

    clean up event-config.h to fix make distcheck; from sourceforge tracker
    
    svn:r521

commit 3742868ab54c82bc77686f8f89f3cae7191a2fe1
Author: Niels Provos <provos@gmail.com>
Date:   Mon Nov 12 06:54:35 2007 +0000

    We do not need to specially remove a timeout before calling event_del; patch from Christopher Layne.
    
    svn:r519

commit 568095bfa1ba6c9fffe93250420471baf13c574f
Author: Niels Provos <provos@gmail.com>
Date:   Mon Nov 12 05:34:10 2007 +0000

    srcdir for verify; from Christopher Layne
    
    svn:r516

commit 7add3d364197ff8ec3dce91cd8110a1f3fcf231e
Author: Niels Provos <provos@gmail.com>
Date:   Mon Nov 12 02:44:02 2007 +0000

    stick autogen.sh into EXTRA_DIST
    
    svn:r515

commit df667b96ea57a2d00b5c3cdd150a675591ffacac
Author: Niels Provos <provos@gmail.com>
Date:   Mon Nov 12 02:32:35 2007 +0000

    we no longer need acconfig.h
    
    svn:r510

commit 4a1a2e0d52a83a3b38f651a4480af3d8f7dcf435
Author: Niels Provos <provos@gmail.com>
Date:   Mon Nov 12 02:31:07 2007 +0000

    Make the logic for active events work better with internal events; patch from Christopher Layne
    
    svn:r509

commit bbed0954b18de634a8fed50b8b08af6ea3bf3dae
Author: Niels Provos <provos@gmail.com>
Date:   Sun Nov 11 03:05:03 2007 +0000

    revert r505; it introduced errors in epoll
    
    svn:r508

commit 97917e68e7b225ee0d2d77963e30290d095a74e6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Nov 10 07:49:13 2007 +0000

     r16588@catbus:  nickm | 2007-11-10 02:47:14 -0500
     Another include for sample.  Patch from Christopher Layne.
    
    
    svn:r507

commit 321dfd55d4d37ad7060272abf933adaf9d22f7b6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Nov 10 05:18:17 2007 +0000

     r16585@catbus:  nickm | 2007-11-10 00:16:11 -0500
     Patch from Christopher Layne: Make event_del() restore previous signal handlers, not the default.
    
    
    svn:r506

commit 9f0f3d6da29f5e323c025f2955a9d21a0efa4af0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Nov 10 05:18:11 2007 +0000

     r16584@catbus:  nickm | 2007-11-10 00:00:59 -0500
     Patch from Christopher Lane: reduce branch count in epoll_dispatch.c and generally improve clarity.
    
    
    svn:r505

commit cabcd62f38345d31a37b62b08fb166f34c8bc4f5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Nov 8 17:36:28 2007 +0000

     r16578@catbus:  nickm | 2007-11-08 12:34:51 -0500
     The == operator in shell is a bash-ism; do not use it in autogen.sh
    
    
    svn:r503

commit 8fd2124ef9e12228f41023bcf02bdbdf6800a208
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 22:57:08 2007 +0000

     r16556@catbus:  nickm | 2007-11-07 17:55:39 -0500
     MSVC6 does not seem to define a useful "what is the name of this function" macro
    
    
    svn:r502

commit 74e5e8f439f86e6e5ac699f0513beb4a19d115de
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 22:35:15 2007 +0000

     r16554@catbus:  nickm | 2007-11-07 17:33:49 -0500
     Mention autogen.sh in the README, now that we are more vocally encouraging people to try svn.
    
    
    svn:r501

commit 92cd548f80336e26fb44b519248476bf345be0aa
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 21:14:04 2007 +0000

     r16544@catbus:  nickm | 2007-11-07 16:12:37 -0500
     Oops; forgot the log entry.
    
    
    svn:r500

commit 4e1ec3e05e39699025e087929b84f3634929ae4c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 21:01:26 2007 +0000

    Make all the C files in the libraries compile under MSVC 2005 Express.  There are still a few warnings, and probably some subtle issues, but it's better than nothing.
    
    svn:r499

commit 45c7ab25de2dea155332cc144c1f94f5c073c919
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 07:33:36 2007 +0000

     r16510@catbus:  nickm | 2007-11-07 02:29:42 -0500
     Try not to shadow local variables or function arguments.
    
    
    svn:r498

commit e72661d2ff04ce1020fce74ecb97130fb5ea9aab
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 07:33:31 2007 +0000

     r16509@catbus:  nickm | 2007-11-07 02:08:32 -0500
     Stop using C++ style comments.
    
    
    svn:r497

commit 1f50f412834c8b150a37bb5742f6702537093d52
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 07:33:26 2007 +0000

     r16508@catbus:  nickm | 2007-11-07 02:01:03 -0500
     Note a dubious point in http.c
    
    
    svn:r496

commit 7feba57010f4d5024083abc055864f292f9a6063
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 07:33:21 2007 +0000

     r16507@catbus:  nickm | 2007-11-07 01:34:55 -0500
     Never assign a string constant to a non-const char *.
    
    
    svn:r495

commit a3f122d66756626bdd69ad00757ea8208cc38021
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 07:33:16 2007 +0000

     r16506@catbus:  nickm | 2007-11-07 01:29:59 -0500
     Make all rpc and http functions not prototyped in evrpc.h and evhttp.h into static functions.  I believe that these functions were meant to be private, yes?
    
    
    svn:r494

commit 794857242f09a687f73200d5e95e6d7311900eb4
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 06:07:54 2007 +0000

    Remove spurious #include <sys/tree.h> in win32.c.
    
    svn:r493

commit f74e7258fd29a341b4ecf08dfdb83e50aaee3255
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 06:01:57 2007 +0000

     r16501@catbus:  nickm | 2007-11-07 01:00:31 -0500
     This is one of those patches which will either make matters far
     simpler after the bugs shake out, or will get reverted pretty quick
     once we realize that it is a stupid idea.
    
     We now post-process the config.h file into a new event-config.h file,
     whose macros are prefixed with _EVENT_ and which is thus safe for
     headers to include.  Using this, we can define replacement timeval
     manipulation functions in evutil.h, and use them uniformly through our
     code.  We can also detect which headers are needful in event.h, and
     include them as required.
    
     This is also the perfect time to remove the long-deprecated acconfig.h
     file, so that autoheader no longer warns.
    
     Should resolve the following issues:
    
     [ 1826530 ] Header files should have access to autoconf output.
     [ 1826545 ] acconfig.h is deprecated.
     [ 1826564 ] On some platforms, event.h can't be included alone.
    
    
    
    svn:r492

commit d0ce7d4ed7f6f269fdc93039d739fecf28495c24
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 06:01:45 2007 +0000

     r16500@catbus:  nickm | 2007-11-07 00:27:44 -0500
     Remove from the (deprecated) acconfig.h file stubs that are already generated by autoheader.
    
    
    svn:r491

commit 206d43363817c4dc77976f85a9df04a411c7913c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 05:02:21 2007 +0000

     r16497@catbus:  nickm | 2007-11-07 00:01:02 -0500
     Resolve issue 1826588: make event_base_free() succeed even if there are pending non-INTERNAL events still in the base.  This can leak memory and fds if used injudiciously, but at least it no longer crashes.
    
    
    svn:r490

commit 29420339dcf85d133313083823db7cf68c21fd32
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 05:02:14 2007 +0000

     r16496@catbus:  nickm | 2007-11-06 23:58:52 -0500
     Clarify some doxygen in event.h
    
    
    svn:r489

commit bab0e6d440f1c5dc6615bd1b72712c663929b87f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 04:28:54 2007 +0000

     r16492@catbus:  nickm | 2007-11-06 23:27:32 -0500
     Fix unit tests so that an outdated nameserver means "Skip IPv6 tests", not "Abort."
    
    
    svn:r487

commit 7c507668d7ba0e4488730ce1d607673dd2585f73
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 03:52:20 2007 +0000

     r16489@catbus:  nickm | 2007-11-06 22:51:05 -0500
     Do not use "class" as identifier in evdns.h; but use a backward-compatible fix. (Should fix bug 1826515, originally reported by Roger Clark)
    
    
    svn:r486

commit e9564eceb349d76cf83cffb2291b34d59ac9a4a0
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 03:40:26 2007 +0000

     r16487@catbus:  nickm | 2007-11-06 22:38:44 -0500
     Remove rtsig method, as discussed in July.  It hasn't compiled for quite a while, and nobody has seemed to miss it much.  Please let us know if this was a bad call. [Tracker issue 1826539].
    
    
    svn:r485

commit 4555f755094e25e5bd1b6483e09a5bfc9984764f
Author: Niels Provos <provos@gmail.com>
Date:   Wed Nov 7 03:25:03 2007 +0000

    remove tree.h from EXTRA_DIST; from Charles Kerr
    
    svn:r484

commit 3c1bbca672a43f6457fad0b0d6d6649a17375368
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Nov 7 02:30:17 2007 +0000

     r14744@tombo:  nickm | 2007-11-06 21:30:11 -0500
     Fix coding error: patch from Charles Kerr.
    
    
    svn:r483

commit a527151846e06aac3674fae5b79d5ba6ec75154a
Author: Niels Provos <provos@gmail.com>
Date:   Wed Nov 7 01:48:44 2007 +0000

    make event_init should return struct event_base *
    
    svn:r481

commit 81802bf98c2608ec96c8fa299ecb761a26b0755c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 6 20:57:37 2007 +0000

     r16473@catbus:  nickm | 2007-11-06 15:55:35 -0500
     Increment MAX_ADDRS in evdns so as to be quite large.  This is not as good as a general solution, but it may be good enough for practical use.
    
    
    svn:r479

commit d257a4c0d6527fff60bfa19f05b7937213375695
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 6 20:57:32 2007 +0000

     r16454@catbus:  nickm | 2007-11-06 09:59:45 -0500
     Small code cleanups in epoll_dispatch(): remove a needless variable and some redundant conditionals.
    
    
    svn:r478

commit d7d91461c853d87fa78b467d6c5fdf386d9c10e1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Nov 6 03:04:49 2007 +0000

     r14732@tombo:  nickm | 2007-11-05 22:03:28 -0500
     Quick hack to make evhttp.h build when there is no TAILQ to be found.  Based on patch from Paul Fisher.  We could perhaps do this more elegantly, but it _does_ need to be done.
    
    
    svn:r475

commit dc2317f921f6d0041ae387cccdf7e0368f4920b0
Author: Niels Provos <provos@gmail.com>
Date:   Sun Nov 4 06:35:29 2007 +0000

    improve doxygen documentation
    
    svn:r473

commit 1bcb112b20ae193f05a9e3381e6fe13f36ccc7b1
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Nov 4 02:21:31 2007 +0000

     r14698@tombo:  nickm | 2007-11-03 22:20:23 -0400
     Use libtool versioning correctly. Add comment to Makefile.am explaining how to keep this working.
    
    
    svn:r472

commit 22bd8b00942732ae1ac8a77523a509c327a26623
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 3 23:54:27 2007 +0000

    remove last vestiges of RBTREE
    
    svn:r471

commit 2026b21598d8f6f47148db088dbb76a6cc9e0a59
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 3 23:53:49 2007 +0000

    remove last vestiges of RBTREE
    
    svn:r470

commit 881731028b90bb196450105ea04b3d22107052d8
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 3 23:45:38 2007 +0000

    split libevent into two extra libraries libevent_core and libevent_extra
    
    
    svn:r469

commit 1d3a008af3433485256d8386366ceaac4d48af5f
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 3 22:51:26 2007 +0000

    provide hooks for outgoing pools; associate a base with a pool
    
    svn:r468

commit 30ae40cc52300a79b8153db3ca40b77c544de76c
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 3 18:04:53 2007 +0000

    switch timeouts to a min heap; from Maxim Yegorushkin
    
    svn:r467

commit 65236aa8578aeb17c088b41818da17311672aed1
Author: Niels Provos <provos@gmail.com>
Date:   Fri Nov 2 06:34:04 2007 +0000

    simple hooks for processing incoming and outgoing rpcs
    
    
    svn:r466

commit 18ac92486fc7b4f2ac7092ce56dc89ebad41c729
Author: Niels Provos <provos@gmail.com>
Date:   Sat Oct 27 17:50:07 2007 +0000

    Solaris event port improvements
    
    
    svn:r464

commit ccdc59905b36686d3331607362197e08f1c8b0ae
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Oct 18 17:49:52 2007 +0000

     r15922@catbus:  nickm | 2007-10-18 13:48:46 -0400
     Patch to event.3 from Christopher Lane.
    
    
    svn:r463

commit c91794e25dc412ff102b700eeba3c1e519e485dc
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 12 18:02:56 2007 +0000

    Instead of read/write in regress.c, use send/recv.  Now all of the win32 regression tests pass, except for http and rpc.
    
    svn:r461

commit e1f09dfe5c7fa0736318ec42e77d7884db390085
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Oct 12 17:55:37 2007 +0000

    Fix evutil code to use correct EVUTIL_SET_SOCKET_ERROR macro.
    
    svn:r460

commit 49ede3be00c7461d54fa289005db8ef6e8e76225
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 3 17:19:22 2007 +0000

     r15517@catbus:  nickm | 2007-10-03 13:14:05 -0400
     Correct the pointer manipulation in fake_getaddrinfo(), and do the right thing for fake_getaddrinfo(NULL,&ai).  Based on a patch by Lubmir Marinov, hacked until the unit tests passed on Linux with #undef HAVE_GETADDRINFO.
    
    
    svn:r459

commit bc7b7c249c470fe916c337b03605410f32dcd7fa
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Oct 3 04:14:54 2007 +0000

    Fix implementation of strsep.
    
    svn:r457

commit 4ed4867375f26dc01af1db00de43624bcbba6f7b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Oct 2 19:11:41 2007 +0000

     r15496@catbus:  nickm | 2007-10-02 15:06:22 -0400
     Move end of "extern C {" block to the end of evdns.h.
    
    
    svn:r456

commit 3550be9387dd451da3c32caff29dddb0ff0bd112
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Sep 25 15:50:50 2007 +0000

     r15331@catbus:  nickm | 2007-09-25 11:46:52 -0400
     Add EVPORT to test.sh script.  Patch from Trond Norbye.
    
    
    svn:r454

commit fe4829776bacef6f75790337a0fd5c0b0e18890b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 24 16:26:11 2007 +0000

     r15324@catbus:  nickm | 2007-09-24 12:22:21 -0400
     New evutil.h macros to manipulate winsock errors.  Use them in http.c and in evutil_socketpair().
    
    
    svn:r451

commit 3c1a6a68d2b9938a387c694928ab97b948eb09de
Author: Niels Provos <provos@gmail.com>
Date:   Sun Sep 23 03:49:28 2007 +0000

    first attempts at refactoring this code to make it more readable;
    mostly changing to dictionaries for format strings
    
    
    svn:r450

commit a4cc3d148a7b346143a0143f46589104bc50bea5
Author: Niels Provos <provos@gmail.com>
Date:   Sat Sep 22 23:57:11 2007 +0000

    rename the rpc member from kill to attack; that way the
    structure does not have the same name.  might find some
    bugs.
    
    
    svn:r449

commit db43c1e111f1fb7a6c5912154dce4a46034eed7a
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 20 19:36:03 2007 +0000

    On win32, sockets apparently can't be used with ReadFile and WriteFile: You need send() and recv() instead. Also, you need to use ioctlsocket() with sockets, not ioctl. [Fixes evbuffer regression tests.]
    
    svn:r448

commit 1e1f77c5b02fca9622e9e1d249adec4b5428a245
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 20 19:08:20 2007 +0000

    Make the test/ subdirectory buildable under Windows.  Well, mingw at least.  The tests still don't all pass, but at least now we know that.
    
    svn:r447

commit d85bce4e96eeadf3248b9298926c957e39851504
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 20 18:38:31 2007 +0000

    Remove gratuitous tor-isms in evutil_socketpair(); fix a windows warning in http.c.
    
    svn:r446

commit f4c84e862877a0f2f13aa33665b8b4d5adb795ca
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 20 18:27:01 2007 +0000

     r15220@catbus:  nickm | 2007-09-20 14:22:57 -0400
     Another patch from Trond: Skip calling gettime() in timeout_process if we have no events in the timetree.
    
    
    svn:r445

commit 5a0d671f0e05af014c55447e28e8b1b8be4a84ee
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 20 18:26:56 2007 +0000

     r15219@catbus:  nickm | 2007-09-20 14:17:32 -0400
     Apply patch from Trond Norbye with recommendations from Magne Mahre and Hannah Schroeter: make autogen.sh work on systems where /bin/sh is not bash.
    
    
    svn:r444

commit 8b256b8e86bfcf38e79fb17975d903f892572386
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 20 18:26:51 2007 +0000

     r15218@catbus:  nickm | 2007-09-20 14:14:05 -0400
     More win32 fixes: Use evutil_make_socket_nonblocking and EVUTIL_CLOSESOCKET consistently throughout the code.
    
    
    svn:r443

commit f0e06d75e50913ce9786a675ff69dee68d41c3f5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 20 18:26:46 2007 +0000

     r15217@catbus:  nickm | 2007-09-20 14:04:32 -0400
     Fix win32 signals: teach win32 that we have per-base signal queues; teach signal.c that not everybody has sigaction().
    
    
    svn:r442

commit 250071830a701193c72aa8a65bd9afa5f74692fe
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Sep 20 18:26:40 2007 +0000

     r15216@catbus:  nickm | 2007-09-20 13:58:23 -0400
     Add a new evutil module to contain the usual cross-platform hacks: socketpair, closesocket, and make_socket_nonblocking()
    
    
    svn:r441

commit 626cc5f982f648e4d669178dc5e0bbb1f4ddb6d6
Author: Nick Mathewson <nickm@torproject.org>
Date:   Wed Sep 19 15:27:53 2007 +0000

     r15168@catbus:  nickm | 2007-09-19 11:24:30 -0400
     Add a new function to evdns to override the default transaction ID generation code.
    
    
    svn:r440

commit 7f57289f99900ee5210f62be55b7109f016eab85
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Sep 18 15:16:23 2007 +0000

     r15103@catbus:  nickm | 2007-09-18 11:13:09 -0400
     Use a dummy target to ensure that doxygen gets rebuilt every time we "make doxygen".
    
    
    svn:r439

commit 47ed792cb6ac47b629786157e0b5ccdd7c100410
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Sep 18 15:16:17 2007 +0000

     r15102@catbus:  nickm | 2007-09-18 11:12:43 -0400
     Make the autogen.sh script executable.
    
    
    svn:r438

commit d69a4c9ec4158b6f09bfc6bf3c646e06fc6554ac
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Sep 18 15:12:20 2007 +0000

     r15097@catbus:  nickm | 2007-09-18 11:08:42 -0400
     Wrap all newly-added Doxygen comments to fit in a consistent 80 columns, and remove all their trailing whitespace.
    
    
    svn:r437

commit 7135ffb6fc4fe231f2cbdb8a0b4188b6b7d65a9f
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Sep 18 15:12:09 2007 +0000

     r15096@catbus:  nickm | 2007-09-18 11:02:12 -0400
     Add Doxygen documentation to header files; patch from Mark Heily.
    
    
    svn:r436

commit c895ee46180e1b8bbfea0e37a05b3a5e122cf385
Author: Nick Mathewson <nickm@torproject.org>
Date:   Tue Sep 18 15:11:53 2007 +0000

     r15094@catbus:  nickm | 2007-09-18 10:52:11 -0400
     Patch from Christopher Lane: Make regress.gen.* buildable from outside source directory.
    
    
    svn:r434

commit 7b7742fce7b694977579b9f2e11bc974b1c346da
Author: Niels Provos <provos@gmail.com>
Date:   Sun Sep 16 02:26:37 2007 +0000

    optimize by removing a variable
    
    svn:r433

commit bfd27f58da9d5fba6e2ed0c0d4f436fa240dbc47
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sat Sep 15 18:45:57 2007 +0000

     r15086@catbus:  nickm | 2007-09-15 14:42:55 -0400
     Patch from Trond Norbye: Fix two solaris bugs.
    
    
    svn:r432

commit b835ee085f537aa6a45df865930626688e984009
Author: Niels Provos <provos@gmail.com>
Date:   Sat Sep 15 15:50:11 2007 +0000

    fix http.c to compile properly with USE_DEBUG; from Christopher Layne
    
    
    svn:r430

commit 640c61bac92550c97c3ad2b04d437c559df5c119
Author: Niels Provos <provos@gmail.com>
Date:   Sat Sep 15 00:53:47 2007 +0000

    deal with out of memory situations for realloc
    
    svn:r429

commit 82153e6e92117d092b1ea0630f2ba96ebb006fe7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 10 14:56:00 2007 +0000

     r15025@catbus:  nickm | 2007-09-10 10:54:46 -0400
     More DNS standard correctness changes: we preserve the CD flag,not the TC flag on responses.  When we get a nonstandard query, we should say "NOTIMPL" rather than ignoring it.
    
    
    svn:r428

commit 8b39254926c96587e74ec334f001d17f4d09f4d8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 10 14:55:55 2007 +0000

     r15024@catbus:  nickm | 2007-09-10 10:49:15 -0400
     Fix evdns_resolve_reverse_ipv6() so buffer is bug enough, and so the string ends with ".ip6.arpa" rather than "..ip6.arpa".
    
    
    svn:r427

commit c396c767e2abf4d15ce8bf485588f67dbe10c14e
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Sep 10 14:55:50 2007 +0000

     r15023@catbus:  nickm | 2007-09-10 10:46:16 -0400
     Add a missing begin-comment to the DNS_USE_OPENSSL_FOR_ID code in evdns.c.
    
    
    svn:r426

commit fc1211ed8a8c0ba7f167f92796c3887d659b2f1d
Author: Niels Provos <provos@gmail.com>
Date:   Mon Sep 10 01:37:57 2007 +0000

    fix another memory leak
    
    svn:r424

commit 7c66bf33e18939d7ee6fabc47ed624c8caa6c46c
Author: Niels Provos <provos@gmail.com>
Date:   Mon Sep 10 01:30:11 2007 +0000

    fix a memory leak in the dns server; found by valgrind
    
    svn:r422

commit babd622f7ab9e8d3cb4004700fcf2f9dadd4bd4b
Author: Niels Provos <provos@gmail.com>
Date:   Sun Sep 9 03:10:16 2007 +0000

    make allocating array members in event_rpcgen more efficient, but doubling the size of
    available slots every time we run out.
    
    
    svn:r421

commit e2f564116e1bcdcf2c6500c1552fcc25de810c53
Author: Niels Provos <provos@gmail.com>
Date:   Sun Sep 9 02:33:10 2007 +0000

    Fix a memory leak in which failed HTTP connections whould not free the request object
    
    svn:r419

commit 8ee20a3fa46f7d603f5fa98cd47992fcdbb3beb6
Author: Niels Provos <provos@gmail.com>
Date:   Sun Sep 9 02:15:34 2007 +0000

    fix memory leaks/unitialized memory found by valgrind
    
    svn:r418

commit e678f009a82b38745baac9874a3573136d0658b6
Author: Niels Provos <provos@gmail.com>
Date:   Sun Sep 9 01:46:35 2007 +0000

    fix a couple memory leaks; time buffer marshaling
    
    svn:r417

commit 98f9616bf45951901f264b75269d1c554d50511e
Author: Niels Provos <provos@gmail.com>
Date:   Fri Sep 7 02:49:46 2007 +0000

    support setting local address on an evhttp_connection
    
    
    svn:r416

commit 23866b765739016f0723fae22b688a82c14a2b5d
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 7 01:18:53 2007 +0000

    Another tweak on the date patch: win32 has no gmtime_r, but its gmtime() function uses thread-local storage for safety.  Backportable.
    
    svn:r414

commit 003698c0dfcb29fc435d7d2d862ff838d797d3d8
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 7 01:03:01 2007 +0000

     r14975@catbus:  nickm | 2007-09-06 21:00:38 -0400
     Oops; we were already including sys/time.h.  Remove the redundant include.
    
    
    svn:r413

commit 8d5ef326baa461201b1c948f9b29c5c4ae22533c
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 7 01:02:56 2007 +0000

     r14974@catbus:  nickm | 2007-09-06 20:59:14 -0400
     Changes to http.c: Add a Date header on replies if there is none already set.  Also, include time.h unconditionally to be sure that struct tm is declared: every platform has time.h; the conditional should have been for sys/time.h.
    
    
    svn:r412

commit 9c3ac4e444bdacff2b904b1d175e4ac3cb2f7da5
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Sep 7 00:10:15 2007 +0000

     r14970@catbus:  nickm | 2007-09-06 20:09:39 -0400
     Fix compilation on Solaris; Patch from Magne Mahre.
    
    
    svn:r409

commit ff9e1af68f2fc7e808fbaca5d7e45f10f616fa8c
Author: Niels Provos <provos@gmail.com>
Date:   Sun Sep 2 01:33:38 2007 +0000

    demote most warnings to debug messages;
    execute callback later to allow freeing of connection object
    
    
    svn:r407

commit 11a0a9e42fd74f723c6d4670ef403eb10d9abeb5
Author: Niels Provos <provos@gmail.com>
Date:   Sat Aug 25 18:47:22 2007 +0000

    allow \r or \n individually to separate HTTP headers instead of
    the standard "\r\n"; from Charles Kerr.
    
    
    svn:r406

commit 49e01ff789ae1aa0a5666ac62062f27cce2cbb46
Author: Niels Provos <provos@gmail.com>
Date:   Sat Aug 25 18:42:42 2007 +0000

    include event.h in evhttp.h; found by Charles Kerr
    
    svn:r404

commit 5f04e3b7b5b234e6ccfc3ced1321619d209928b7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 24 01:08:39 2007 +0000

    Bump version number in svn trunk to 1.3.99.
    
    svn:r403

commit 9a99bab0db8f13f12ea1829e8af8d5d0b66a4cad
Author: Niels Provos <provos@gmail.com>
Date:   Thu Aug 23 15:36:38 2007 +0000

    let's try to keep a log of changes; as suggested by Nick
    
    
    svn:r401

commit a36d4a930d75bc9ed6caf1cbfa86e02bc68f7df7
Author: Nick Mathewson <nickm@torproject.org>
Date:   Mon Aug 20 14:44:15 2007 +0000

     r14699@catbus:  nickm | 2007-08-20 10:42:57 -0400
     Use $top_srcdir and $srcdir variables to refer to source paths in Makefile.am.  This makes it possible to build libevent from a separate directory.  Patch from Kelly Anderson.
    
    
    svn:r400

commit 41c69fc335e116de8b9a6889798a7dd5bc295fd3
Author: Niels Provos <provos@gmail.com>
Date:   Sun Aug 19 17:26:02 2007 +0000

    fix typo in comments
    
    svn:r399

commit 3d2320b2187f5e4635f829c0de417c961f02f007
Author: Nick Mathewson <nickm@torproject.org>
Date:   Sun Aug 19 17:25:52 2007 +0000

     r14697@catbus:  nickm | 2007-08-19 13:24:39 -0400
     Remove redundant typedef of socklen_t in evdns.c: On windows, it is already defined by autoconf in config.h.
    
    
    svn:r398

commit 67947ce38192f31fd67d9cac63ba5baaf112885b
Author: Niels Provos <provos@gmail.com>
Date:   Sun Aug 19 02:41:23 2007 +0000

    provide evhttp_new and evhttp_bind_socket instead of evhttp_start;
    using evhttp_new, it is possible to associate an event_base with
    the http server so that multi-threaded applications can have their
    own http server per thread; add appropriate testing.
    
    
    svn:r397

commit 35983cd60ff2972add1db2c7236b3c7b244c7968
Author: Nick Mathewson <nickm@torproject.org>
Date:   Thu Aug 16 21:12:53 2007 +0000

     r14618@catbus:  nickm | 2007-08-16 17:11:47 -0400
     In ANSI C, int func() is a function with unspecified arguments, whereas int func(void) is a function that takes no arguments.  Using int func() to mean a function with no arguments is a C++ism, so let's not use or generate it.
    
    
    svn:r395

commit 12fe087e124f2f66049e4dffe9402baf7881f284
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 10 16:37:33 2007 +0000

     r14505@catbus:  nickm | 2007-08-10 12:35:52 -0400
     Fix win32 build errors (reported by Phobos): mingw gcc seems to dislike unnamed function parameters.
    
    
    svn:r390

commit 7d821580e81072e0eba32d4789fdadca6683329b
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 10 16:31:02 2007 +0000

    Fix compile warning on osx: the udata field in struct kevent is supposed to be void*, not intptr_t.
    
    svn:r387

commit 21a7e7ed67979b9f2444f4671d9bd668ef2ebabf
Author: Nick Mathewson <nickm@torproject.org>
Date:   Fri Aug 10 15:59:31 2007 +0000

     r14498@catbus:  nickm | 2007-08-10 11:58:32 -0400
     Fix compilation warnings in trunk on linux with gcc 4.1.2.  In time-test.c, always include time.h, so that time() is defined.  In test/Makefile.am, put -I../compat in CPPFLAGS, and fix a typo.  In test/regress.c, cast unsigned char pointers to char* before passing them to str[n]cmp.
    
    
    svn:r385

commit cd6dd9516d8bd7a7b94bf7a9ed6f5e63643b7c34
Author: Niels Provos <provos@gmail.com>
Date:   Mon Aug 6 21:00:49 2007 +0000

    add a proper test for filtering new lines in headers
    
    
    svn:r384

commit 073d35906117ce1276b16cdfc70d744deb04575d
Author: Niels Provos <provos@gmail.com>
Date:   Mon Aug 6 20:53:33 2007 +0000

    fix an embarassing bug where strchr was used with a cstring instead of a char
    
    
    svn:r383

commit 8ea5ffefc32e5950beeec8db0cd862e6bd9eab76
Author: Niels Provos <provos@gmail.com>
Date:   Sun Aug 5 02:15:10 2007 +0000

    request dispatching fix from Elliot Foster
    
    
    svn:r382

commit b7ff0248c7993bf1b437598f53ce7ec56a0f2bdb
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jul 31 00:32:00 2007 +0000

    fix memory leak; found by Elliot F
    
    
    svn:r378

commit 5e0ac7f239457e6fceac199ad649d762950e0c9b
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jul 31 00:25:22 2007 +0000

    check for sys/select.h
    
    
    svn:r377

commit aa106169a0e5b960c2a82958912bc41a1e76b4c5
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jul 31 00:21:04 2007 +0000

    use AM_CLFAGS from Jan Kneschke
    
    
    svn:r376

commit 9e0333a8d56970514acbdb792a04e6db2b0d56fe
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jul 30 23:56:05 2007 +0000

    include config.h if HAVE_CONFIG_H from Jan Kneschke
    
    
    svn:r375

commit 72c479e76a6dacaa47482f418b00b3dee3998336
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jul 30 23:54:25 2007 +0000

    remove c99 variable declarations; from Jan Kneschke
    
    
    svn:r374

commit 7c6df310c98cd50aac9e34839b6f475020939c98
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jul 30 23:53:10 2007 +0000

    remove c++ comments from Jan Kneschke
    
    
    svn:r373

commit 10267216a6ff7d94db7deb3269e379c94adc190d
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jul 30 23:49:00 2007 +0000

    initalize ev_res from Scott Lamb
    
    
    svn:r372

commit 3ad6b47e03993f688e92fb202c89e3be984a8f56
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jul 30 22:41:00 2007 +0000

    make clock_monotonic work; do not use default timeout;
    from Scott Lamb, plus some fixes from me.
    
    
    svn:r371

commit d7918e7963db292b49d575fbd3b9c47f4d59c9cf
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jul 30 21:27:33 2007 +0000

    drop illegal header values
    
    
    svn:r370

commit b15d715cbc77f5ce9b8da27938ad07426f7f2e57
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 6 03:36:31 2007 +0000

    make event_rpcgen.py use the uint_ types;
    make event.h include stdint.h (wonder which OS that will break)
    
    
    svn:r369

commit 753ffa563b67feee30069d8637c920da809107da
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jun 30 19:08:46 2007 +0000

    convert u_int8_t types to uint8_t types
    
    
    svn:r368

commit f0ff792afabecc032bc9f92e504ff6601057b415
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jun 30 18:58:34 2007 +0000

    fixes from Joerg Sonnenberger:
    http.c is a violation of the ctype(3) interface and an unused function.
    
    test/regress_http.c are incorrect format strings.
    
    test/regress.c uses raise(3) from signal.h.
    
    evdns.c: evdns_error_strings is unused. The GET* macros can eat the
    semicolon from the expression. pos is passed in as off_t, so just pass
    that down. When assigning negativ values to unsigned variables, an
    explicit cast is considered good style.
    
    
    svn:r367

commit aa5c8068888ffa501c81d191b93ca1b5765b54b7
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jun 16 03:23:15 2007 +0000

    make it compile on solaris; from Andrei Nigmatulin
    
    
    svn:r366

commit d1848a8872c9596d1f30a5edbd1f9050e8124611
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jun 14 04:38:42 2007 +0000

    include config.h
    
    
    svn:r365

commit cf5c1fcebbb698a39603c92ea0928d1c603abbd5
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jun 8 16:06:23 2007 +0000

    made the wrong fd non-blocking in accept_socket; from szjwwu
    
    
    svn:r364

commit 3794534feb99f94e052359c7cce61462ed909383
Author: Niels Provos <provos@gmail.com>
Date:   Tue May 29 05:38:58 2007 +0000

    change the signature of the client rpc callback to pass in an rpc status; the status
    allows us to determine if an error happened.
    
    
    svn:r363

commit f0d0559c3e01bc378c3cb960013fc34245128291
Author: Niels Provos <provos@gmail.com>
Date:   Mon May 28 21:21:59 2007 +0000

    allow DNS server to get access to the IP address for the requestor; from tor cvs via Nick Mathewson
    
    
    svn:r362

commit 5d3b6a83870d68c0ec4ed4fc60a6710d8ad938df
Author: Niels Provos <provos@gmail.com>
Date:   Mon May 28 21:20:57 2007 +0000

    fail quicker on bad replies; from tor cvs via Nick Mathewson
    
    
    svn:r361

commit d06ab8569e26b3535967be5c8fcc5efad6850e85
Author: Niels Provos <provos@gmail.com>
Date:   Mon May 28 21:19:18 2007 +0000

    fix bug where req was freed and dereferenced afterwards; from tor cvs via Nick Mathewson
    
    
    svn:r360

commit 28246587c0520a9e812fc6ed64b3d7c173864789
Author: Niels Provos <provos@gmail.com>
Date:   Mon May 28 21:17:35 2007 +0000

    treat SERVERFAILED as a timeout; from tor cvs via Nick Mathewson
    
    
    svn:r359

commit 5be24333aec311d776e7d6c5fde9e74fcf04217d
Author: Niels Provos <provos@gmail.com>
Date:   Mon May 28 21:09:00 2007 +0000

    solaris may return short reads on resolve.conf; fix from tor cvs via Nick Mathewson
    
    
    svn:r358

commit d0111a29e9e53899e0ea2e529b43f2f26353b853
Author: Niels Provos <provos@gmail.com>
Date:   Sun May 27 06:27:11 2007 +0000

    evdns_shutdown fix from Adam Langley
    
    
    svn:r357

commit 621a1b2947b39d662123c98c49404fe71353c241
Author: Niels Provos <provos@gmail.com>
Date:   Wed May 23 05:31:33 2007 +0000

    support freeing of evrpc base
    
    
    svn:r356

commit 0c2808246a5db1515f0392ef6f65a557e5832ccb
Author: Niels Provos <provos@gmail.com>
Date:   Wed May 23 05:20:59 2007 +0000

    support removing of http callbacks and removing of registered RPCs
    
    
    svn:r355

commit 5b5400f66bb3959dbed81f6f544aa6f392ca18f5
Author: Niels Provos <provos@gmail.com>
Date:   Sat May 12 06:23:52 2007 +0000

    permit connection free from callback; from Ben Rigas
    
    
    
    svn:r354

commit 4408a5f8fc5028c67fc847e34a10891cb3523351
Author: Niels Provos <provos@gmail.com>
Date:   Thu Apr 19 03:13:12 2007 +0000

    fix evbuffer_find off by one; found by Ken Cox; regression test by him
    and fix by me
    
    
    svn:r353

commit f5aa65c9b369a6b34be7eb019087e06b64cd1e5b
Author: Niels Provos <provos@gmail.com>
Date:   Thu Mar 22 15:09:30 2007 +0000

    man page fixes from todd miller
    
    
    svn:r352

commit 41b7cbc38105a540ade7d02bb6137898a94abc89
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 10 06:37:53 2007 +0000

    more the signal base into the event base; this removes global state and makes signals
    work better with threading; from Wouter Wijngaards
    small fixes for kqueue and style by me
    
    
    svn:r351

commit a968da742598e9e6720c883cb78b1f0f6e912ae2
Author: Niels Provos <provos@gmail.com>
Date:   Tue Mar 6 06:26:10 2007 +0000

    split finding of callbacks out of code
    
    
    
    svn:r350

commit 50edb19f17555389f18c0d2cef488eed2a643497
Author: Niels Provos <provos@gmail.com>
Date:   Mon Mar 5 07:28:15 2007 +0000

    EVRPC_MAKE_REQUEST needs the pool argument
    
    
    svn:r349

commit fcd55934ae57b3af2e67ba2d4c47da8342348260
Author: Niels Provos <provos@gmail.com>
Date:   Mon Mar 5 06:49:45 2007 +0000

    spell Oleson correctly
    
    
    svn:r348

commit 729487deb380bd8f0fa6591a8f6184595080a490
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 3 08:27:52 2007 +0000

    better conversion; cannot use event_err here.
    
    
    svn:r344

commit 660662517c717b53d7340ed0198bffbe154ef0b1
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 3 08:18:20 2007 +0000

    proper casting for conversion
    
    svn:r343

commit 74f7118d66e2b31d2d113bcb3674bb8074676165
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 3 08:16:40 2007 +0000

    install evrpc.h header
    
    svn:r342

commit b5d2f9a255dbd5eb7d650cd8d829fb85c9c69f2c
Author: Niels Provos <provos@gmail.com>
Date:   Thu Mar 1 06:25:18 2007 +0000

    rolling back r339: evconfig.h does not work
    
    svn:r341

commit 8d94bd03ebac666171fbbc75a598ef01f63390f5
Author: Niels Provos <provos@gmail.com>
Date:   Wed Feb 28 04:29:18 2007 +0000

    signal fixes from scott lamb
    
    
    svn:r340

commit 127c260bb7f8e972fffab9bc72bd1f53eae48730
Author: Niels Provos <provos@gmail.com>
Date:   Wed Feb 28 04:02:29 2007 +0000

    make evconfig.h available as installed header file; not
    really ideal but good enough for me; from Nick Mathewson
    
    
    svn:r339

commit 995a58a374c4b1ce28c214d22dfdf00329b28957
Author: Niels Provos <provos@gmail.com>
Date:   Tue Feb 27 08:16:50 2007 +0000

    missing return (-1) for failures on make_socket
    
    
    svn:r338

commit f86cead09999380887752d9a391e0ebd3ee38807
Author: Niels Provos <provos@gmail.com>
Date:   Sat Feb 24 08:33:07 2007 +0000

    remove artifical 16-bit restriction on evrpc entries
    
    
    svn:r337

commit 4356b6813376ae48478ab7af0f593d34e1af9c26
Author: Niels Provos <provos@gmail.com>
Date:   Tue Feb 20 03:35:31 2007 +0000

    remove redundant \n from event_warn
    
    
    svn:r336

commit 72a3f29da36a8d9fa49dce8eaa8e5f5a86cb4e7f
Author: Niels Provos <provos@gmail.com>
Date:   Sun Feb 18 19:33:19 2007 +0000

    1.3a on trunk?
    
    svn:r333

commit 06d0f8c0824651631e68c5c593051098c4008753
Author: Niels Provos <provos@gmail.com>
Date:   Fri Feb 16 08:48:55 2007 +0000

    O(n^2) is bad
    
    
    svn:r332

commit 7398790296fa8e8fdb226cd8f6d76c8705d4e366
Author: Niels Provos <provos@gmail.com>
Date:   Thu Feb 15 22:46:04 2007 +0000

    missing reference to strlcpy-internal
    
    
    svn:r330

commit fe2662384db52b1e4c500bbb9939a97545178c46
Author: Niels Provos <provos@gmail.com>
Date:   Thu Feb 15 02:16:07 2007 +0000

    try to make it work with proxy-connections
    
    
    svn:r329

commit 58f42c79e7df54dd5f7136b6c006ba67b55f624f
Author: Niels Provos <provos@gmail.com>
Date:   Wed Feb 14 16:59:47 2007 +0000

    fix handling of chunked requests
    
    
    svn:r328

commit 8901c141c9bef59baf308764c8c0f4dcadc6a487
Author: Niels Provos <provos@gmail.com>
Date:   Wed Feb 14 06:10:32 2007 +0000

    make chunked requests work correctly; this is done by providing
    a separate callback for invidiual chunks.  if this callback is
    not set, all the data is going to be delivered at the end.
    
    
    svn:r327

commit 36950cef58fc02495dffcc143bb2ec147dc7e9ad
Author: Niels Provos <provos@gmail.com>
Date:   Tue Feb 13 06:25:16 2007 +0000

    close connections for http/1.0 unless there is keep-alive
    
    
    svn:r326

commit 19373b3dda45af29663926cdbc4121f8289e2f0e
Author: Niels Provos <provos@gmail.com>
Date:   Tue Feb 13 06:14:42 2007 +0000

    when parsing query parameters, we automatically unquote them
    
    
    svn:r325

commit 9a65d0135fd39753858686dbb0eec2d807c29583
Author: Niels Provos <provos@gmail.com>
Date:   Sun Feb 11 07:58:39 2007 +0000

    set content length even if content-type is specified
    
    svn:r324

commit ba748012bacf371824a961efddc2e4db024303d2
Author: Niels Provos <provos@gmail.com>
Date:   Fri Feb 9 07:52:04 2007 +0000

    add prototype for bufferevent_base_set; from thorsten glaser
    
    
    svn:r323

commit bfb9f44f370ab0afa230f9e7795236043da7a5ea
Author: Niels Provos <provos@gmail.com>
Date:   Fri Feb 9 07:49:55 2007 +0000

    make mingw happy; from Nick Mathewson
    
    
    svn:r322

commit faf5f73a694ecfa720a7af4405298f5cb40349f0
Author: Niels Provos <provos@gmail.com>
Date:   Thu Feb 8 16:39:15 2007 +0000

    dns server support from Nick Mathewson; tiny tweaks
    to the regression test from me to make it run on
    systems where stack variables get initialized with
    trash.
    
    
    svn:r321

commit 3b8e27a58f240e38040a2c15a9592d6ce7fbae28
Author: Niels Provos <provos@gmail.com>
Date:   Thu Feb 8 16:27:26 2007 +0000

    add people I forgot to give credit to;  but in alphabetical order;
    from dug song (he had to remind me of this; how embarassing)
    
    
    svn:r320

commit 121efe6530075e1e0d64956cd5b00600218407a6
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jan 27 08:38:51 2007 +0000

    small bug fixes to AAAA resolution and regression test; from Nick Mathewson!
    
    we love regresson tests.
    
    
    
    svn:r319

commit 78f2aa300c941029c7cf808755df9b1e7007fc05
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jan 27 04:27:59 2007 +0000

    Allow setting of more DNS options via API; from Nick Mathewson!!!
    
    
    svn:r318

commit b776b2da7282414d9bf42bb21c7c1fd4293cbd02
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jan 27 04:25:46 2007 +0000

    dns name compression; from Nick Mathewson!!
    
    
    
    svn:r317

commit 5baf8ecf6916fa9b91c59bb7e1307b7a94d26195
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jan 27 04:23:33 2007 +0000

    minor fixes; spelling corrections; compatibility from Nick Mathewson!
    
    
    svn:r316

commit 6318fca29e9d3ebe9300a229d0b84e16ec5e5626
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jan 27 04:22:36 2007 +0000

    AAAA support for DNS; from Nick Mathewson.
    
    unfortunately, no regression test
    
    
    
    svn:r315

commit 22e53c7a849b95f2f32640b846e2fc98dc3bcc1c
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jan 27 04:10:08 2007 +0000

    make it work on freebsd; from phil oleson
    
    
    svn:r314

commit 4922f342fcbad0f56c6de5f40a00b029d6757823
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jan 27 04:06:52 2007 +0000

    extern "C" guard for header file.
    
    assert activeq in event.c;
    
    from Phil Oelson.
    
    
    
    svn:r313

commit b04043ae51589899021d306af299dbad6668a621
Author: Niels Provos <provos@gmail.com>
Date:   Sun Jan 21 17:28:55 2007 +0000

    fix ddos in dns parsing due to infinite loop;
    patch from Nick Mathewson; also received
    notification from Jon Oberheide.
    
    
    svn:r311

commit d5d04949e3550823c2935562f5e07b423de46871
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jan 18 06:28:42 2007 +0000

    fix http server so it can accept on high ports;
    better warning messages for getnameinfo;
    from Philip Lewis
    
    
    svn:r310

commit ff12220703d4bd45169fb2f1aab61c4979340df9
Author: Niels Provos <provos@gmail.com>
Date:   Wed Jan 10 02:42:29 2007 +0000

    make accept socket non-blocking; from dug song
    
    
    svn:r309

commit de4e25f1d0a27a4d603d1834b090437237323d06
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jan 6 02:25:50 2007 +0000

    evbuffer_find fix from Dug Song
    
    
    svn:r308

commit ba8289bea55a2b0013fc4c2cfd6ffda9a6a82c21
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jan 4 18:05:17 2007 +0000

    from dug song:
    the original code failed in the case of a large single client
    request+body write - for instance, over loopback (with a larger MTU
    exceeding EVBUFFER_MAX_READ).
    
    
    
    svn:r307

commit 0db257b828ff7d9b480c6499651e469d2b20154b
Author: Niels Provos <provos@gmail.com>
Date:   Wed Jan 3 07:11:17 2007 +0000

    rename strlcpy so that it does not conflict with other tests; from
    Nick Mathewson.
    
    
    svn:r306

commit 894b63654303649ee1b0fc888cbfded616e6d54e
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 23 07:30:10 2006 +0000

    fix a bug in an assert; from Weston Andros Adamson
    
    
    svn:r305

commit 557e0f62be87b54db604bb95b063a7838b7a4164
Author: Niels Provos <provos@gmail.com>
Date:   Mon Dec 18 15:26:19 2006 +0000

    http chunking support from dug song;
    some refactoring and extra error checking by me
    
    
    svn:r304

commit 0147ef3ac71cb393443af2250fe658940020f880
Author: Niels Provos <provos@gmail.com>
Date:   Tue Dec 12 04:02:07 2006 +0000

    From Nick Mathewson:
    This patch resets the successive timeout count to zero when:
      - A nameserver comes up
      - We receive a reply from a nameserver
      - We decide to not use the nameserver for a while because of its
        timeout count.
    
    This patch also changes the timeout threshold from 3 to 5 seconds.
    
    
    svn:r303

commit a91d2b2b8ce9ce4a1dd437c30a8c88b5609fa653
Author: Niels Provos <provos@gmail.com>
Date:   Tue Dec 12 03:51:30 2006 +0000

    do close-detection via a separate event
    
    
    svn:r301

commit 04bdb2488c61489f91f67c68f308b0cfc84076f1
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 9 05:14:37 2006 +0000

    detect if a client to a streaming reply hangs up; from dug song
    comments from me :-)
    
    
    svn:r300

commit de7db33a61f13f94fe3b60a084d20735b06bd72f
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 9 02:58:12 2006 +0000

    low-level interfaces for streaming; from dug song
    i applied some bug fixes and slight re-arranged the logic
    on when to call the close notification callback;
    i also don't like the streaming interface; i'd rather
    see it do the chunked response formatting explicitly.
    
    
    svn:r298

commit 852d05a3c093ecaaacffb5ee339307782f706c96
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 9 01:41:57 2006 +0000

    support retrying for connections; from dug song
    small tweaks from me.
    
    
    svn:r297

commit 2225eec22b1e62c6b24113e7e8915de3ef26a209
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 9 01:33:03 2006 +0000

    decode uri when sending a request; from dug song
    
    
    svn:r296

commit 785923704c6d55af0fa1f06086349d1d707fea37
Author: Niels Provos <provos@gmail.com>
Date:   Wed Dec 6 04:12:11 2006 +0000

    fix a bug where event_set was called on a pending event;
    don't read body for return codes that do not require a body;
    from dug song.
    
    
    svn:r294

commit c6e285d31a1892a6bbfdab2137d83c5041f97742
Author: Niels Provos <provos@gmail.com>
Date:   Wed Dec 6 03:38:41 2006 +0000

    allow gotsig to terminate active event loop;
    free http connection on failed incoming connections;
    bugs pointed out by Dug Song.
    
    
    svn:r293

commit ec0679199fbdddcb3308a72a90a15b342cc3c0a3
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 2 21:28:39 2006 +0000

    fix cases where there is no content or transfer encoding was specified
    from Dug Song
    
    
    svn:r291

commit 7fe5edf50c5ccad3c4dddc2a8756ea241fd94b89
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 2 21:25:21 2006 +0000

    use CLOCK_REALTIME when CLOCK_MONOTONIC is not available; from Phil Oleson
    
    
    svn:r290

commit c1aa5480de538c63e6015f690226a84e7569e3f7
Author: Niels Provos <provos@gmail.com>
Date:   Sun Nov 26 16:13:17 2006 +0000

    support #define in .rpc descriptions
    
    
    svn:r278

commit 942656bb5cd89b131ad119e395a770e6a1488e9b
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 23 06:32:20 2006 +0000

    persistent connections are somewhat complicated; detect on the client side if the
    server closes a persistent connection.  previously, we would have failed the next
    request on that connection.  provide test case.
    
    
    svn:r277

commit 3882669d3e20bcbca991e6775d0d05401d58a1b6
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 23 05:27:15 2006 +0000

    transaction id fixes from richard nyberg; return correct
    error code when file for resolv.conf cannot be found.
    
    
    svn:r276

commit 30a49b57dab3baa8b53775563ff03210b357db03
Author: Niels Provos <provos@gmail.com>
Date:   Wed Nov 22 07:30:34 2006 +0000

    test that rpc timeouts work correctly
    
    
    svn:r275

commit 2d028ef6c189a2c53d64ca9d1ceff813d62755f0
Author: Niels Provos <provos@gmail.com>
Date:   Wed Nov 22 06:54:28 2006 +0000

    fix a bug where rpc would not be scheduled when they were queued; test for it.
    allow a configurable timeout for connections and RPCs.
    
    
    svn:r274

commit ce436242ad05172d2abe53ed83ab46f956edc789
Author: Niels Provos <provos@gmail.com>
Date:   Wed Nov 22 05:03:02 2006 +0000

    an attempt at differentiated error handling for timeouts and eof.
    really this needs to be propagated all the way to the callback.
    
    
    svn:r273

commit 51fde16666a3402959cab77cd0313c9ff4b4c66a
Author: Niels Provos <provos@gmail.com>
Date:   Wed Nov 22 04:35:56 2006 +0000

    forgot to add this
    
    
    svn:r272

commit 868f10e7c9abe1cb38cd3cc84e6dd4a9b1d966cc
Author: Niels Provos <provos@gmail.com>
Date:   Wed Nov 22 01:21:10 2006 +0000

    mingw fixes from Nick
    
    
    svn:r271

commit 4aa780d6adf37a23985aa8f544087bc3b14aba9b
Author: Niels Provos <provos@gmail.com>
Date:   Mon Nov 20 07:57:36 2006 +0000

    don't require string literal for message name
    
    
    svn:r270

commit ff43ed5b3379125e3b57044016ca71b9b8f4739f
Author: Niels Provos <provos@gmail.com>
Date:   Mon Nov 20 07:44:37 2006 +0000

    finish RPC client support
    
    
    svn:r269

commit fda1216b6e18df98b8f3c32ce4132f955c346a90
Author: Niels Provos <provos@gmail.com>
Date:   Mon Nov 20 03:32:53 2006 +0000

    generate client request code via macro; flesh out the pools a little bit.
    
    
    svn:r268

commit 3a15f7d4e4f3de810e2b81634b4e60f286605066
Author: Niels Provos <provos@gmail.com>
Date:   Sun Nov 19 02:03:43 2006 +0000

    make it work with python2.2
    
    
    svn:r267

commit 226fd50a99761f5e874e7376d99674ae54b1aeed
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 18 21:27:42 2006 +0000

    use more python builtins; dont use reserved keywords
    
    
    svn:r266

commit 31ba30abfee720e49c19e7a4790854cfbe0e9d5e
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 18 08:51:12 2006 +0000

    make regression test work for poll and select
    
    
    svn:r265

commit 1a64c982eb0f8f72e5e2766a5eec88d350fdfb06
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 18 07:30:21 2006 +0000

    some compilers don't like C99 inline variable declaration
    
    
    svn:r264

commit ddf70659ad7db0f4bdf8c4f8aa0259fd36abeab3
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 18 03:52:27 2006 +0000

    forgot ifdef guard around stdint.h
    
    
    svn:r263

commit 9d81ac48f8031e6a49afb1c7c35358d9751f414c
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 18 03:43:26 2006 +0000

    test both piplining on persistent and non-persistent connections
    
    
    svn:r262

commit 36212f9df0664c3d9056d18d962ef37acf9a45e3
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 18 03:05:26 2006 +0000

    make persistent connections work; needs more testing
    
    
    svn:r261

commit d2c27da1145e81267737e9a52dd9cf2fd45721f9
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 18 02:10:25 2006 +0000

    introduce is connection close
    
    
    svn:r260

commit a67d9cb1153a16bd314471a22eb86782fac41dc0
Author: Niels Provos <provos@gmail.com>
Date:   Fri Nov 17 07:45:42 2006 +0000

    add "Connection: close" to the output headers of the HTTP server reply;
    we don't currently support persistent connections; although that's going
    to be easy to add.
    
    
    svn:r259

commit c4836d10539e9937d2ee0afce2675362dce01e00
Author: Niels Provos <provos@gmail.com>
Date:   Fri Nov 17 06:06:17 2006 +0000

    make sure that the rpc callback receives an unmarshaled payload;
    make sure that the rpc reply contains a good rpc structure, too.
    
    
    svn:r258

commit 1caff9bcc8f26223ddfd9056d99e7581bc484805
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 16 15:59:42 2006 +0000

    we indicate a failed request by removing the uri from the request object
    
    
    svn:r257

commit 44bd5ab4e03a7fd943520243dd07bc3e6fdba249
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 16 08:49:26 2006 +0000

    prefix was missing /; malformed request caused server to crash
    
    
    svn:r256

commit 9d9d60b1ff0b588ee20b1b7a4f73ea409fad232d
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 16 08:21:27 2006 +0000

    forgot to add file
    
    
    svn:r255

commit f554234f74e9e80c0faabe385dd8537fc7b1ab9f
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 16 07:36:20 2006 +0000

    first stab at an rpc layer;  this breaks the regression test.
    
    
    svn:r254

commit 768aa15c77073b5799033854c332553eea4929fd
Author: Niels Provos <provos@gmail.com>
Date:   Sun Nov 12 00:59:56 2006 +0000

    don't need to include getopt here
    
    
    svn:r253

commit 79d2ca8cac2ebb3f8be06d93376b036d5e73ef50
Author: Niels Provos <provos@gmail.com>
Date:   Fri Nov 10 02:16:16 2006 +0000

    fix a potential problem in multiple handling of va_list; use va_copy instead;
    from Alejo.
    
    
    svn:r251

commit 025b009bb67e402c75dcb92bd06485f8c0ed8097
Author: Niels Provos <provos@gmail.com>
Date:   Sun Nov 5 17:24:24 2006 +0000

    fail without leaking memory when poll set extension fails
    
    
    svn:r249

commit d6989659281f67acc88bd6255f67680f9004e7f9
Author: Niels Provos <provos@gmail.com>
Date:   Sat Oct 28 03:20:22 2006 +0000

    fix a potential memory leak in event_once from Scott Lamb
    
    
    svn:r244

commit 3eec7f7c64c2356157ed123e5ad2ce8e75a6ae16
Author: Niels Provos <provos@gmail.com>
Date:   Sun Oct 15 21:55:13 2006 +0000

    make it 1.2; fix some size issues for printf in regression code
    
    
    svn:r242

commit ea52d9fd8d12126643f21007f279ef2e03dfca1e
Author: Niels Provos <provos@gmail.com>
Date:   Sun Oct 15 21:41:56 2006 +0000

    improved nroff mdoc for the man page
    
    
    svn:r241

commit 152f570047d7cdcb8d2e437c0d5751a7ddd3fa83
Author: Niels Provos <provos@gmail.com>
Date:   Mon Oct 9 01:55:23 2006 +0000

    install evdns.3 man page
    
    
    svn:r240

commit cf47f86b74fe5f60b21458f14503657e6f6a4476
Author: Niels Provos <provos@gmail.com>
Date:   Mon Oct 9 00:48:42 2006 +0000

    put the evdns documentation into the header file.  pathetic start of evdns manpage.  a little bit
    more testing and debug output for the DNS regression test.   add a BSD copyright to evdns.h with
    appropriate explanations.
    
    
    svn:r239

commit fe1dfe0f40776ef18f5318149f981387d386b962
Author: Niels Provos <provos@gmail.com>
Date:   Thu Oct 5 22:59:44 2006 +0000

    sync evdns changes with tor - from Nick Mathewson
    
    
    svn:r238

commit b6b933af5c3405e44f8fe134e989193cc369afa9
Author: Niels Provos <provos@gmail.com>
Date:   Wed Oct 4 03:45:10 2006 +0000

    Protect EVENT_* macros - () were missing
    
    
    
    svn:r237

commit 9f7d28bb81b65094dd63a65607bbb9972f1af006
Author: Niels Provos <provos@gmail.com>
Date:   Wed Sep 27 03:07:38 2006 +0000

    make it compile with mingw; from Nick
    
    
    svn:r235

commit 64c76fbea4fe4443cfa70876b7a289c117101f35
Author: Niels Provos <provos@gmail.com>
Date:   Sun Sep 3 21:12:59 2006 +0000

    typo in kqueue delete; from Bert JW Regeer
    
    
    
    svn:r232

commit e9c1e3f7f0c262c529300e58e1f5724c52ab76d2
Author: Niels Provos <provos@gmail.com>
Date:   Mon Aug 28 00:57:49 2006 +0000

    introduce evdns_init() which works on windows and unix.
    
    
    svn:r231

commit 07c3fb50675fa9a80b928f24028431e92358df3c
Author: Niels Provos <provos@gmail.com>
Date:   Sun Aug 27 20:04:20 2006 +0000

    add a simple regression test for the DNS resolver; requires internet access.
    do some KNF on evdns.c; add checks to prevent potential buffer overflows.
    fix one memory leak.
    
    
    svn:r230

commit e80e52ceb7846d4f081e5106a19a767d2aa51dab
Author: Niels Provos <provos@gmail.com>
Date:   Sun Aug 27 19:43:00 2006 +0000

    include evdns.h header - fix windows distribution files
    
    
    svn:r229

commit b0b5e2c2acfb13a67935c12187dca84e16ead9bb
Author: Niels Provos <provos@gmail.com>
Date:   Sat Aug 26 04:34:43 2006 +0000

    document that read and write callbacks may be NULL.
    
    
    svn:r228

commit c1eec7aae52af93d5c763859e4b8dab8e780e329
Author: Niels Provos <provos@gmail.com>
Date:   Sat Aug 26 04:32:31 2006 +0000

    allow both read and write callbacks for bufferevents to be NULL
    
    
    svn:r227

commit 52bfcab894c0644318dc9e067a87931d16b7e061
Author: Niels Provos <provos@gmail.com>
Date:   Thu Aug 24 06:10:50 2006 +0000

    rename eventdns to evdns to match libevent naming scheme
    
    
    svn:r226

commit d0d8f9b468a5401d9c3da770d1b14572e384843e
Author: Niels Provos <provos@gmail.com>
Date:   Sun Aug 13 06:59:37 2006 +0000

    configure evdns and make it compile
    
    
    svn:r225

commit cca7249ed6ad71eb8d0be56891451b26bedb7a5a
Author: Niels Provos <provos@gmail.com>
Date:   Sun Aug 13 06:33:45 2006 +0000

    unmodified eventdns from Adam Langley via tor repository
    
    
    svn:r224

commit 296739e022dc8d6415a573b8dda557b280caff3d
Author: Niels Provos <provos@gmail.com>
Date:   Sun Aug 13 00:03:35 2006 +0000

    fix regression test
    
    svn:r223

commit 4596f82e1733df39fce93384b4c375aa4e924f3b
Author: Niels Provos <provos@gmail.com>
Date:   Fri Aug 11 15:20:10 2006 +0000

    windows makefile fixes from branch
    
    svn:r222

commit 49ef242f6e524e7d3a4f70cc280daa6b9220b184
Author: Niels Provos <provos@gmail.com>
Date:   Wed Aug 9 01:04:12 2006 +0000

    add back the original sun copyright block
    
    
    svn:r219

commit 94af961f362dc654c77524e2b51c590d6628ebda
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jul 18 06:35:48 2006 +0000

    get rid of err.h
    
    
    svn:r218

commit ba7262ebdf82da9c285f39200d69aac54013c16a
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jul 17 00:33:57 2006 +0000

    reorganization of the http functionality; we separate http handling into a
    connection object and a request object; also make it clear which buffers are
    used for input and output; unittests not complete yet.
    
    
    svn:r217

commit 00bc7e37fd8f9cc5c749fa83d4152c3395e14975
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jul 15 02:55:57 2006 +0000

    1.2-rc1; Solaris' event port support from Dave Pacheco
    
    
    svn:r216

commit f0ecf50727b291356ed2776d7b03a69cbc9f35b1
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jul 15 02:39:31 2006 +0000

    need to report one less file descriptor to solaris then the limit; reported
    by Dave Pacheco
    
    
    svn:r215

commit 6813af3f11c4fdffa68efce687d46023aa195773
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jun 10 22:37:21 2006 +0000

    move http related prototypes to evhttp.h
    
    
    svn:r214

commit 147b71e33c34bd8fae7ea339b7ecdb742768656f
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jun 10 22:28:21 2006 +0000

    rename http.h to http-internal.h - i wish there were decent refactoring tools
    for open source programmers.
    
    
    svn:r213

commit ebf5333f97a342fc0e53a985daa54b1b57794fea
Author: Niels Provos <provos@gmail.com>
Date:   Wed May 17 13:13:31 2006 +0000

    oops.  the enums were actually creating symbols
    
    
    svn:r212

commit 71108cd98b6485fabdecc0522ca0a1918f303dd5
Author: Niels Provos <provos@gmail.com>
Date:   Tue Mar 28 16:57:19 2006 +0000

    uhm - i obliterated a gettimeofday that was required for remapping the
    timeouts to "real" time.  thanks to claudio for pointing that out.
    
    
    svn:r211

commit 2e8051f593abd20b961e85c3f99dfa0ac0ee375d
Author: Niels Provos <provos@gmail.com>
Date:   Tue Mar 28 04:40:54 2006 +0000

    introduce a way to free the base from Nick Mathewson <nickm@freehaven.net>
    
    
    svn:r210

commit 571ac95430c344d4688c28adaa8aa53956cd12a7
Author: Niels Provos <provos@gmail.com>
Date:   Tue Mar 28 04:33:41 2006 +0000

    use clock_gettime if available from Claudio Jeker <claudio@openbsd.org>
    
    
    svn:r209

commit a32839c8ecfee948bc8c051857c9ea454de937e6
Author: Niels Provos <provos@gmail.com>
Date:   Tue Mar 28 04:17:51 2006 +0000

    some nit-picking from poul-henning kamp
    
    
    svn:r208

commit 7517ef2a81eab41b8aeda699dc8ed050c01092b6
Author: Niels Provos <provos@gmail.com>
Date:   Tue Mar 28 04:16:14 2006 +0000

    some fixes from openbsd via brad
    
    
    svn:r207

commit 682d598ada027ef7713168b776955143d07417de
Author: Niels Provos <provos@gmail.com>
Date:   Mon Feb 27 02:33:02 2006 +0000

    add log.c to build file; remove err.c; reported by Sreekant Sreedharan
    
    
    svn:r206

commit 38b33048ebbef976bb1e77499a9487ee9bfc072c
Author: Niels Provos <provos@gmail.com>
Date:   Mon Feb 27 02:27:37 2006 +0000

    make a simple test for HTTP POST requests
    
    
    svn:r205

commit 60192b462563034cfa179c98f50a1bf51e0f3859
Author: Niels Provos <provos@gmail.com>
Date:   Sun Feb 26 20:18:35 2006 +0000

    improved/well-completely rewritten rtsig support by Mathew Mills; fix some
    cases where regress would not pass on Linux
    
    
    svn:r204

commit f6550f407c6c74386f3bdcabf0a5e211a9b98e04
Author: Niels Provos <provos@gmail.com>
Date:   Sun Feb 26 20:13:04 2006 +0000

    provide strlcpy for the unenlightened libcs
    
    
    svn:r203

commit 88bd79439d0c37468e9da9ee7354cd2405fba532
Author: Niels Provos <provos@gmail.com>
Date:   Mon Feb 13 04:53:58 2006 +0000

    make it compile on mac os x
    
    
    svn:r202

commit 896bf3a2607c25ded5b732de35da63bd8016f9ed
Author: Niels Provos <provos@gmail.com>
Date:   Mon Feb 13 02:22:48 2006 +0000

    many changes for fixing a small bug: post requests would not send the post
    data.  I took the opportunity to reorganize a bit.
    
    
    svn:r201

commit 7b78c82823a8d65338503b8aabd3a606116d7cfc
Author: Niels Provos <provos@gmail.com>
Date:   Mon Feb 13 01:51:58 2006 +0000

    limit the amount of data bufferevents are going to consume to something
    reasonable; in some circumstances it could happen that libevent happily
    allocated 100MB in read buffers without telling the user; found by
    christopher maxwell - parts of these changes are from his patch.
    
    
    svn:r200

commit f296e6336ac80c8c46e563e84372501434d8884b
Author: Niels Provos <provos@gmail.com>
Date:   Fri Feb 3 19:26:06 2006 +0000

    allow setting an event base for bufferevents; from phil oleson
    
    
    svn:r199

commit 6717cf313ac8b06f8f588f071d333854a6e1fe1e
Author: Niels Provos <provos@gmail.com>
Date:   Fri Feb 3 19:24:28 2006 +0000

    fix a compile problem when USE_DEBUG is enabled
    
    
    svn:r198

commit c398d788119564faf16ef856aef897b4c02b4839
Author: Niels Provos <provos@gmail.com>
Date:   Thu Feb 2 22:36:37 2006 +0000

    disable bufferevent after we have received the data that we care for.
    
    
    svn:r197

commit a3bb4a035fe27dcdf52158d115c4caea153dabf5
Author: Niels Provos <provos@gmail.com>
Date:   Sun Jan 22 05:08:50 2006 +0000

    I often need some very simple HTTP functionality, so this is a first stab
    at integrating something really simple with HTTP.  The interface is still
    evolving as I start messing with it.  Not all the interfaces are properly
    exported yet.
    
    I am also trying to figure out how to intelligently hide the details about
    the different structures from users, so that that things can be changed
    around later.
    
    
    svn:r196

commit 8af2db10d95a3bcae2702b25ded991e6ed3be12a
Author: Niels Provos <provos@gmail.com>
Date:   Sun Jan 22 05:06:29 2006 +0000

    version 1.2
    
    
    svn:r195

commit 36bedaef19b18ba1d6633c94622e9134a463b6ef
Author: Niels Provos <provos@gmail.com>
Date:   Sun Jan 22 05:06:14 2006 +0000

    another fix from art
    
    
    svn:r194

commit 3c74f06f428c83c400146cdaace47e52347b72d6
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jan 21 03:04:31 2006 +0000

    improved manpage from Phil Oleson
    
    
    svn:r193

commit 1d308e88139bd549b99cddae4025ce4d499070b7
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 17 20:25:22 2005 +0000

    mostly whitespace fixes from OpenBSD via Brad
    
    
    svn:r192

commit 686dede71bd2da2e6352c2e59efc7b99d692a937
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 17 20:18:10 2005 +0000

    do not undefine USE_DEBUG in header file; allow CFLAGS specification; from
    Stas Bekman
    
    
    svn:r191

commit 139e862e32d76d0fd04f754eaf532c1608faebe7
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 17 20:15:25 2005 +0000

    do not remove kq inkernel flag before event_del gets to it; bug reported by
    Tassilo von Parseval; also add a test for this behavior.
    
    
    svn:r190

commit 0c48c70680727ea0d6aed694b271d40019f2aa15
Author: Niels Provos <provos@gmail.com>
Date:   Thu Dec 8 23:05:42 2005 +0000

    windows memory corruption bug fix from I-M Weasel via Nick Mathewson.
    
    
    svn:r189

commit 8d1317d71c46e27c5073d3429a64af69de0351a6
Author: Niels Provos <provos@gmail.com>
Date:   Tue Dec 6 03:26:28 2005 +0000

    add evbuffer_add_vprintf interface from artur grabowski; add some testing
    
    
    svn:r188

commit 9c9f0651842bbb84d16e301640d8e5e6a1c34297
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 3 20:51:23 2005 +0000

    avoid double recacle when loop_once is used; from Richard Nyberg
    
    
    svn:r187

commit 68292e2f45dabe21a301c0bb5864e2c2026176f3
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 3 17:52:47 2005 +0000

    signal handler satefy improvements from Theo DeRaadt
    
    
    svn:r186

commit 65644dfb80f4aa1b0501d300f015efeb3bd35dd7
Author: Niels Provos <provos@gmail.com>
Date:   Sat Nov 12 19:04:17 2005 +0000

    solaris kernel changes are not backwards compatible - how retarded.  problem
    pointed out by: Geoffrey Giesemann
    
    
    svn:r185

commit 11a40d478efcc69a379a07f005beb0415f6954e6
Author: Niels Provos <provos@gmail.com>
Date:   Tue Sep 20 15:59:00 2005 +0000

    event.3
    
    
    svn:r184

commit 50f7aaef6b7742263a3212264cb746f456d55168
Author: Niels Provos <provos@gmail.com>
Date:   Fri Sep 9 06:56:12 2005 +0000

    make it compile on mac os x
    
    
    svn:r183

commit 3b9b3f6b7e7325c380bddec6ff86e1ead63dd582
Author: Niels Provos <provos@gmail.com>
Date:   Fri Sep 2 05:34:14 2005 +0000

    don't spam on stderr
    
    
    svn:r182

commit acafd9942f4829205229b80ee32f1c3edfc071a6
Author: Niels Provos <provos@gmail.com>
Date:   Fri Sep 2 05:34:01 2005 +0000

    make it run on older shells; from tor user via Nick Mathewson <nickm@freehaven.net>
    
    
    svn:r181

commit 7000fe664d16094741e6e6728f7998a2c45b7eb2
Author: Niels Provos <provos@gmail.com>
Date:   Tue Aug 30 06:02:09 2005 +0000

    remove dos opportunity
    
    
    svn:r180

commit 5c5145dc1ca44fab0e6f543dbb2cbf95583e0bbf
Author: Niels Provos <provos@gmail.com>
Date:   Mon Aug 29 07:23:51 2005 +0000

    oops forgot this one
    
    
    svn:r179

commit b4ab56dc045e2d8a04600a8579e35b52532d3859
Author: Niels Provos <provos@gmail.com>
Date:   Sun Aug 28 23:48:16 2005 +0000

    support for arrays on structs.
    
    
    svn:r178

commit 32acc283c8ae44d9c4e306dbaf6a9fead5e71952
Author: Niels Provos <provos@gmail.com>
Date:   Sat Aug 27 06:29:52 2005 +0000

    a few more bug fixes
    
    
    svn:r177

commit 2813f1b0f14967cabb0c59fc44518670f38bec37
Author: Niels Provos <provos@gmail.com>
Date:   Fri Aug 26 02:15:54 2005 +0000

    constify
    
    
    svn:r176

commit aaf56fb61e0a8f2299e758f44cac93ba60cd9807
Author: Niels Provos <provos@gmail.com>
Date:   Tue Aug 23 07:43:11 2005 +0000

    fix API problems for get in some types
    
    
    svn:r175

commit 6e55da606ced033562be6d8a023b89c6ca484c4b
Author: Niels Provos <provos@gmail.com>
Date:   Mon Aug 22 01:39:54 2005 +0000

    typo
    
    
    svn:r174

commit e5ab86a726c26fc775589182d4290603df7e12d3
Author: Niels Provos <provos@gmail.com>
Date:   Mon Aug 22 01:38:23 2005 +0000

    make use of the built in warn/err code
    
    
    svn:r173

commit c4e60994a2cf955908f236b4945ea7288950ec45
Author: Niels Provos <provos@gmail.com>
Date:   Mon Aug 22 01:34:34 2005 +0000

    including the tagging code that is required by event_rpcgen.py; test the
    new functionality.
    
    
    svn:r172

commit 949cbd12fa314a1d0f4296985cdfaa6ec63e960b
Author: Niels Provos <provos@gmail.com>
Date:   Sun Aug 21 16:25:02 2005 +0000

    generate marshalling code based on libevent
    
    
    svn:r171

commit fbee901e2326effd07d8c29f07621148648c17a7
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jul 14 04:09:55 2005 +0000

    correctly test against SIG_ERR
    
    
    svn:r170

commit e1759c7bbde90093709b70020fadc8a9f90416d5
Author: Niels Provos <provos@gmail.com>
Date:   Sun Jun 19 20:28:20 2005 +0000

    fix issue with signedness warnings; from Alexander von Gernler
    
    
    svn:r169

commit 9938aaf5114110c60a8a4f59866be3de5cd88c48
Author: Niels Provos <provos@gmail.com>
Date:   Sat Jun 11 21:15:22 2005 +0000

    treate EINVAL as per fd error in kqueue; use argument for debug macros in
    poll; version 1.1a; EINVAL fix from Nick Mathewson
    
    
    svn:r168

commit 81bd0a0687f1350f5d1a427ca2ed5858fcfa3af4
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jun 10 07:42:14 2005 +0000

    bufferevents would not correctly detect EOF on read; reported by
    Jonathan Brannan
    
    
    svn:r167

commit 7a0c530b5645ea0b50e7524eae9ddab170293a18
Author: Niels Provos <provos@gmail.com>
Date:   Wed May 11 04:08:51 2005 +0000

    performance improvements of select handler by Nick Mathewson; I added
    better recovery when memory allocation fails; something that needs to be
    done for the poll improvements, too.
    
    
    svn:r166

commit 57fafe6b5f9b416367f01e77540c7f72ae019c5d
Author: Niels Provos <provos@gmail.com>
Date:   Wed May 11 03:34:42 2005 +0000

    detect kqueue bug in Mac OS X 10.4; from Nick Mathewson
    
    
    svn:r165

commit 145c11fd6d69b52f3549698a2084b9c32bdeabee
Author: Niels Provos <provos@gmail.com>
Date:   Tue May 10 17:27:58 2005 +0000

    more credits
    
    
    svn:r164

commit dc816fdc7adeb3703b0ad548ce4023fd9714721b
Author: Niels Provos <provos@gmail.com>
Date:   Tue May 10 17:27:11 2005 +0000

    type; from Alexander von Gernler
    
    
    svn:r163

commit cdcfae7fc1c2fe974094caef649ab9ba9a8f139a
Author: Niels Provos <provos@gmail.com>
Date:   Tue May 10 08:14:39 2005 +0000

    call epoll_ctl after changing our state table; in case that epoll_ctl fails
    we need to make sure that the table is consistent. from William Ahern
    
    
    svn:r162

commit c15db0349af138302a2749b5a80390941a428b6d
Author: Niels Provos <provos@gmail.com>
Date:   Tue May 10 04:40:03 2005 +0000

    performance improvements by Nick Mathewson; we modify the arrays directly
    in poll_add and poll_del; some minor tweaks by me.  earmark this as 1.0f
    
    
    svn:r161

commit d6e56988a769f97653205f57d32bdd48091642b5
Author: Niels Provos <provos@gmail.com>
Date:   Tue May 10 04:16:17 2005 +0000

    sync
    
    
    svn:r160

commit e444040f3d4aa96f7e0e726fc9542f596910d938
Author: Niels Provos <provos@gmail.com>
Date:   Fri Apr 29 02:55:20 2005 +0000

    fix rule that depended on obsolete libevent.a
    
    
    svn:r159

commit 1585013558c04d7e366d8db260c0c1f102731e8c
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 26 15:48:42 2005 +0000

    prototype addition; from Alexander von Gernler
    
    
    svn:r158

commit dfe4e16e138a48c8593c03a5db0b9a67a83ddeb4
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 26 07:17:42 2005 +0000

    pointer arithmetic bug; from Nick Mathewson
    
    
    svn:r157

commit 0f5b0389e54990972e36a062dd443d163f5d1edc
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 23 15:40:14 2005 +0000

    fix memory leak; from Andrey Matveev
    
    
    svn:r156

commit c09a817563b505a7ebe7b1ceb75e829a70d7ebb2
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 23 03:03:28 2005 +0000

    1.0d
    
    
    svn:r155

commit 425fc0d5747936ebe4af7f46571bab0e427cc243
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 23 02:53:39 2005 +0000

    provide a function to read lines from buffers; comes in handy for many
    AscII protocols.
    
    
    svn:r154

commit fdfa743ccc7466e0532411098ee1ad655dfe393b
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 23 02:48:49 2005 +0000

    libtoolize; from Nick Mathewson
    
    
    svn:r153

commit 0cce9a01d72b65a95175ff2b48868fc5d0cbc853
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 23 02:48:27 2005 +0000

    better comment
    
    
    svn:r152

commit 2fa38549d7b33b94994894bcb6d696127bd946dc
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 23 02:40:26 2005 +0000

    compress read and write events for the same file descriptor into on poll
    descriptor; from Nick Mathewson plus bug fixes from me.
    
    
    svn:r151

commit bca504e41cd146f39b1fdf749ee6ea3718c34f02
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 23 02:38:30 2005 +0000

    fix typos
    
    
    svn:r150

commit 1d0d4bc66e96e9782db3c53dfea6ba41f1c3b944
Author: Niels Provos <provos@gmail.com>
Date:   Sun Apr 17 06:51:10 2005 +0000

    make gotsig volatile. from Alexander von Gernler
    
    
    svn:r149

commit 5e2ba12a89b47a0d075e51e526b57333e712fa0e
Author: Niels Provos <provos@gmail.com>
Date:   Thu Apr 14 23:28:06 2005 +0000

    fixes from alexander von gernler
    
    
    svn:r148

commit bc2c695b7672490e320b28f602e8207ce2dd3cac
Author: Niels Provos <provos@gmail.com>
Date:   Sun Apr 10 07:18:18 2005 +0000

    type; set the priorities based on the correct base; reported by Vinh D. Lee
    
    
    svn:r147

commit 6ba5e0d03ed6db885ceec5313e66e02c5aaa8db1
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 9 03:32:11 2005 +0000

    fix a windows bug; from nick mathewson
    
    
    svn:r146

commit d47798be5a106177a7ce99b314878d8d77fa8a96
Author: Niels Provos <provos@gmail.com>
Date:   Thu Apr 7 03:35:56 2005 +0000

    return error code when kqueue fails on a specific fd; from alexander von
    gernler.
    
    
    svn:r145

commit 8f0541af3e0c0126ad4b1997a102ca162d936355
Author: Niels Provos <provos@gmail.com>
Date:   Mon Apr 4 00:37:26 2005 +0000

    forgot
    
    
    svn:r144

commit 4157d33ee9456e4468ffc3ad1de3d6b6d6a43a8f
Author: Niels Provos <provos@gmail.com>
Date:   Mon Apr 4 00:35:14 2005 +0000

    acknowledgements and new version
    
    
    svn:r143

commit bc9b24876b41077e567655ccbc6011f4be951f0d
Author: Niels Provos <provos@gmail.com>
Date:   Mon Apr 4 00:10:17 2005 +0000

    make it compile on solaris
    
    
    svn:r142

commit 1e128e2d05888c86a2058ab5979607450c605c64
Author: Niels Provos <provos@gmail.com>
Date:   Sun Apr 3 07:46:27 2005 +0000

    fix bug that broke poll/select stuff
    
    
    svn:r141

commit 720f7fcc0d313af430d8a4ac1b4ed8e5bc53c5fc
Author: Niels Provos <provos@gmail.com>
Date:   Sat Apr 2 08:43:55 2005 +0000

    event_base_loop and some event logging fixes.
    
    
    svn:r140

commit 32bed8f9b640757766937dec613ca9b1feb704a4
Author: Niels Provos <provos@gmail.com>
Date:   Fri Apr 1 04:20:39 2005 +0000

    build fixes from nick mathewson
    
    
    svn:r139

commit 1919a4aed60dc9c95aef10974dc6945f01832377
Author: Niels Provos <provos@gmail.com>
Date:   Thu Mar 31 19:53:06 2005 +0000

    suppress valgrind warnings from knew -a- pimb.org
    
    
    svn:r138

commit d85d47f8ca128f4b4f8b9cae1dfb2be5da0f4173
Author: Niels Provos <provos@gmail.com>
Date:   Tue Mar 29 07:16:52 2005 +0000

    devpoll improvements from Andrew Danforth <adanforth@gmail.com>
    
    
    svn:r137

commit fbdaf3ab6229f036c0561a347f06b7f913a2b165
Author: Niels Provos <provos@gmail.com>
Date:   Tue Mar 29 07:03:10 2005 +0000

    debugging callbacks from Nick Mathewson <nickm@freehaven.net>
    
    
    svn:r136

commit 99442c6f00c16502afa517e063ff15e20c00212a
Author: Niels Provos <provos@gmail.com>
Date:   Tue Mar 29 06:54:36 2005 +0000

    windows fixes from Nick Mathewson <nickm@freehaven.net>
    
    
    svn:r135

commit da971e5fc81c86038bb99513e993171d9d5a0c43
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 12 02:30:32 2005 +0000

    bug fix in event_once by Jody Belka <knew@pimb.org>
    
    
    svn:r134

commit c5e4eee03b7852754f7a843ee0f9350ef2579fcb
Author: Niels Provos <provos@gmail.com>
Date:   Fri Feb 25 05:28:57 2005 +0000

    event_get_version() and event_get_method() from
    Nick Mathewson <nickm@freehaven.net>
    
    
    svn:r133

commit a46c2609bfa4d68e78665dd55461af9b1ce9651b
Author: Niels Provos <provos@gmail.com>
Date:   Tue Feb 22 16:12:34 2005 +0000

    compilation fixes for IRIX; from Nick Mathewson <nickm@freehaven.net>
    
    
    svn:r132

commit 905ee67d0032eb86e4de37878c45cc4bd67cda47
Author: Niels Provos <provos@gmail.com>
Date:   Tue Feb 22 15:47:53 2005 +0000

    provide maintainer mode in automake; put event_gotsig back into global
    state; return proper error code
    
    
    svn:r131

commit 42b97958672d382435ed2db47468176e3518cb77
Author: Niels Provos <provos@gmail.com>
Date:   Fri Feb 4 11:17:18 2005 +0000

    make it compile again; from dug song
    
    
    svn:r130

commit 3ba224dbd5e5e482bb2be47fa704beff46540a28
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jan 3 18:58:40 2005 +0000

    fixes for threaded operations from Andrew Danforth
    
    
    svn:r129

commit bd6999b4a2b60fdd4e2e317ca84d382f2b9b0ace
Author: Niels Provos <provos@gmail.com>
Date:   Tue Dec 14 03:36:12 2004 +0000

    fix issue where event_del is called before event_set.  bad bad thing to do.
    pointed out by Mark Kidwell <MKidwell@looksmart.net>
    
    
    svn:r128

commit d9cf6fe2f16eae6d97251b905473aea4e57ed0c6
Author: Niels Provos <provos@gmail.com>
Date:   Sun Dec 5 22:16:35 2004 +0000

    version 1.0
    
    
    svn:r127

commit cacd83983f20af59b9a137886131a63f834a06e9
Author: Niels Provos <provos@gmail.com>
Date:   Wed Dec 1 20:10:16 2004 +0000

    documentation on thread safe events
    
    
    svn:r126

commit 256460459e6e9a8358337f64b8080c6665f34c1a
Author: Niels Provos <provos@gmail.com>
Date:   Wed Dec 1 20:04:54 2004 +0000

    provide more base-based functions :-)
    
    
    svn:r125

commit f5a62ed30e895fb622db889b24184851f8f7ea04
Author: Niels Provos <provos@gmail.com>
Date:   Wed Dec 1 19:59:00 2004 +0000

    make a separate verify target
    
    
    svn:r124

commit b011b734eb6cfe3ea15f926dbfa696a262d7cff7
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 25 09:54:33 2004 +0000

    forgot printf parameter
    
    
    svn:r123

commit 8773c4c96c47078ee502030daef36078bc0e75a4
Author: Niels Provos <provos@gmail.com>
Date:   Thu Nov 25 09:50:18 2004 +0000

    make libevent thread-safe; first cut
    
    
    svn:r122

commit 96a25ae6a2d4f63f1df483cd3d49b779175031b0
Author: Niels Provos <provos@gmail.com>
Date:   Sun Sep 19 22:38:34 2004 +0000

    when converting usec to msec round up; so that libevent does not spin until
    the time conversion has caught up; from Aaron Hopkins <aaron at die.net>
    
    
    svn:r121

commit fa6c304d9e11982058ea8fc1b6f970924c599f52
Author: Niels Provos <provos@gmail.com>
Date:   Sun Sep 19 21:08:09 2004 +0000

    support for event priorities; active events are scheduled into priority queues;
    lower priorities get always processed before higher priorities
    
    
    svn:r120

commit 6df2ede5f5e2b3db8c2647327274e83cc485600b
Author: Niels Provos <provos@gmail.com>
Date:   Tue Aug 10 18:29:37 2004 +0000

    close file descriptors on exec(); suggested by aaron at die.net
    
    
    svn:r119

commit 6d4bafd03c84b03b1f904ca466ac2ac173a9626f
Author: Niels Provos <provos@gmail.com>
Date:   Tue Aug 10 17:49:53 2004 +0000

    work around a bug in Solaris by using pwrite instead of write; reported by
    michael.wookey at citrix.com.au
    
    
    svn:r118

commit 60216e8b1d3cad7992923335fbdb21446386d476
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 30 05:15:59 2004 +0000

    mention devpoll
    
    
    svn:r117

commit 5de7f4eea5d629b27359897a351ebae1c484a426
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 30 05:04:36 2004 +0000

    devpoll support. weeh
    
    
    svn:r116

commit 98c14269929187c1abab83737a15e19d92a74b78
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 30 05:03:55 2004 +0000

    fix compiler warning
    
    
    svn:r115

commit d829ccea3d25ce1f7ec4514d1735c26182b3beff
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 30 05:00:44 2004 +0000

    fix a warning on freebsd;
    
    
    svn:r114

commit 06aaa92fe298e376d432947c6eef9ddabfd5faec
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 30 04:57:21 2004 +0000

    devpoll support
    
    
    svn:r113

commit 6f2f98bd26a04476387e26132fd3ef406b387981
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jul 20 06:12:30 2004 +0000

    make it compile on solaris
    
    
    svn:r112

commit 6db3da27e2ef340b7547db2be0c0559d410575c2
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jul 19 06:18:10 2004 +0000

    should work a little bit better with solaris compiler
    
    
    svn:r111

commit 44d88ea6068f5926f8d04b837819216235a7779d
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jul 13 08:02:45 2004 +0000

    change evbuffer_read so that it reads directly into the memory allocated to
    the evbuffer; this avoids one unnecessary data copy.
    
    
    svn:r110

commit ee739151a155d358edc48c4ddf88a63b9e0132f0
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jul 13 08:01:05 2004 +0000

    make the sockets non-blocking; increase the data size for bufferevent
    testing
    
    
    svn:r109

commit a78472da72d9b3ac765997a9ce1dba7cca436618
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jul 13 07:55:01 2004 +0000

    fix a bug for persistent events when using select()
    
    
    svn:r108

commit de5fc61928cd202ef35c860039ab16000b89fd5b
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jun 11 04:42:56 2004 +0000

    make it compile on systems without vasprintf
    
    
    svn:r107

commit 49dbb7ea4c0938da3c5a0a531030452e6a8b400b
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jun 11 04:39:11 2004 +0000

    reformat comment
    
    
    svn:r106

commit 025d1bc2206c5b7edb2fb0c2ad58e7322f4b8b4d
Author: Niels Provos <provos@gmail.com>
Date:   Mon May 24 00:19:52 2004 +0000

    fix some of the windows compile issues; make buffer.c faster; support
    signals via pipes.
    
    
    svn:r105

commit 849d5249120e6d6c95b655672900b1381d8f7613
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 13 06:22:48 2004 +0000

    license
    
    
    svn:r104

commit 24ffe1cb5571506e1b9ae212ef1b17b45a7ea396
Author: Niels Provos <provos@gmail.com>
Date:   Sun Apr 4 04:04:16 2004 +0000

    add a section about BUGS
    
    
    svn:r103

commit 8f2e1f6d3ac14c67d38c86edfd8efb50d83039a0
Author: Niels Provos <provos@gmail.com>
Date:   Sun Apr 4 03:59:22 2004 +0000

    add section about buffered events
    
    
    svn:r102

commit fbf01c7f044f143046df7b9c566b5f49770ba0cb
Author: Niels Provos <provos@gmail.com>
Date:   Sun Apr 4 02:20:21 2004 +0000

    support for low and high watermarks
    
    
    svn:r101

commit 3772ec8e95d2c5eed60ff37024fe2ab04326b0ec
Author: Niels Provos <provos@gmail.com>
Date:   Sun Apr 4 02:19:52 2004 +0000

    add new functions
    
    
    svn:r100

commit 8f7a7a910c4b940e3bac0923df6661d6eada619a
Author: Niels Provos <provos@gmail.com>
Date:   Sun Apr 4 02:19:39 2004 +0000

    version 0.8
    
    
    svn:r99

commit 57a51a161dd9a453bc1abf2ffa9b6149d1ce9ae2
Author: Niels Provos <provos@gmail.com>
Date:   Sun Apr 4 02:19:08 2004 +0000

    provide more regression tests
    
    
    svn:r98

commit 85fbdbb243a17da6fb804b14a4782d2795889c82
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 27 17:42:49 2004 +0000

    faster insertion of timeouts; ensure uniqueness in RB-tree compare function
    
    
    svn:r97

commit 246d8583c08dc31d70479d538c8b1f4056f49c43
Author: Niels Provos <provos@gmail.com>
Date:   Tue Mar 23 04:05:37 2004 +0000

    allow the write callback to called even if there is no buffered data
    
    
    svn:r96

commit 5908bd721368a9aebc752fffbe6ec5b753ed7e3a
Author: Niels Provos <provos@gmail.com>
Date:   Tue Mar 23 03:43:53 2004 +0000

    provided buffered events
    
    
    svn:r95

commit cd699abf44d6da49dffff09f72f843bbb0211aae
Author: Niels Provos <provos@gmail.com>
Date:   Mon Mar 22 21:46:45 2004 +0000

    support event_loopexit(); idea from marius; and fix event_once()
    
    
    svn:r94

commit ec2c1db47e2931fc4be55f9653b3b4182d674cc7
Author: Niels Provos <provos@gmail.com>
Date:   Sun Feb 22 21:17:23 2004 +0000

    new event_once interface; start of buffering interface for buffered events
    
    
    svn:r93

commit 1b974101b9617b0fdceac534e7e0fd73ab6c90d8
Author: Niels Provos <provos@gmail.com>
Date:   Sat Dec 20 20:05:17 2003 +0000

    fix kqueue behaviour; requires special kernel patch to make kqueue
    semantics consistent; from marius@umich.edu
    
    
    svn:r92

commit 8a92823c67843cf7ab8f7735adc3aac5dcd4b9c8
Author: Niels Provos <provos@gmail.com>
Date:   Sat Oct 25 21:59:24 2003 +0000

    make rtsig optional
    
    
    svn:r91

commit e1cd86d73e9959f50fa24ac39dbb6cea9a14b386
Author: Niels Provos <provos@gmail.com>
Date:   Sat Oct 25 21:58:33 2003 +0000

    fixes to handle error cases by Anatoly Vorobey at pobox.com
    
    
    svn:r90

commit d780375fc486b189c64c13e5cf6bd5e0559bde61
Author: Niels Provos <provos@gmail.com>
Date:   Sat Oct 25 21:49:44 2003 +0000

    fix source files
    
    
    svn:r89

commit e2f06f4f6a6b76e217cb290a6d47918521da6f1e
Author: Niels Provos <provos@gmail.com>
Date:   Sat Oct 25 21:49:25 2003 +0000

    fix license
    
    
    svn:r88

commit e9cd9b56a3fbf5f19f5f241c730666c7f3d89bcd
Author: Niels Provos <provos@gmail.com>
Date:   Sat Oct 11 02:54:41 2003 +0000

    bad realloc; found by awohl at chessclub
    
    
    svn:r87

commit 1d66008bbf3ce97ec23e7193cb4daefda06d1955
Author: Niels Provos <provos@gmail.com>
Date:   Sun Oct 5 22:02:49 2003 +0000

    make it work with more shells
    
    
    svn:r86

commit 98af43a351fe571c5d562a8c63de5b3839a0e897
Author: Niels Provos <provos@gmail.com>
Date:   Sat Oct 4 23:33:04 2003 +0000

    3-clause license and changes to the benchmark by davide
    
    
    svn:r85

commit c3f496c71b598194ee9efe74906ecfe57155678b
Author: Niels Provos <provos@gmail.com>
Date:   Sat Oct 4 23:27:26 2003 +0000

    minor corrections; change license to 3-clause BSD license
    
    
    svn:r84

commit 763f6a77307f0ff66755f1e0732cb9f7cf3b43c3
Author: Niels Provos <provos@gmail.com>
Date:   Thu Sep 25 23:18:52 2003 +0000

    proper rtsig
    
    
    svn:r83

commit f08bf5325eb9bb2afa3b68f629a69de59920406b
Author: Niels Provos <provos@gmail.com>
Date:   Thu Sep 25 23:07:09 2003 +0000

    fix poll hup support
    
    
    svn:r82

commit ec70653b61cdf20f4640a9e3d445a2f77c63e738
Author: Niels Provos <provos@gmail.com>
Date:   Thu Sep 25 17:55:17 2003 +0000

    more tests
    
    
    svn:r81

commit c61a2547e26d073d8acf7b9503d9633bbadb3c48
Author: Niels Provos <provos@gmail.com>
Date:   Thu Sep 25 03:30:49 2003 +0000

    __FUNCTION__ -> __func__
    
    
    svn:r80

commit 9d26a46c39b312985988c849f519d330b1177405
Author: Niels Provos <provos@gmail.com>
Date:   Thu Sep 25 03:29:37 2003 +0000

    windows support
    
    
    svn:r79

commit e0216ed7096c05356fb18f394dcf454a6314d036
Author: Niels Provos <provos@gmail.com>
Date:   Thu Sep 25 03:28:43 2003 +0000

    credits
    
    
    svn:r78

commit e506eaf79e11f34a15efa8d91aab883d7dff3160
Author: Niels Provos <provos@gmail.com>
Date:   Thu Sep 25 03:26:53 2003 +0000

    constify; some windows stuff by mike davis; fix a poll bug
    
    
    svn:r77

commit dd0b36ab03d0fd966f694f5152220987d84b2c5d
Author: Niels Provos <provos@gmail.com>
Date:   Thu Sep 25 03:25:17 2003 +0000

    update build stuff
    
    
    svn:r76

commit 2bf53326c06f0ddee544e64c9281192253767aac
Author: Niels Provos <provos@gmail.com>
Date:   Thu Sep 25 02:53:39 2003 +0000

    Real time signal support from Taral <taral@taral.net>
    
    
    svn:r75

commit ee8cc84e9f4d3a5d5b9f4d7e67e9c2f2b2adf037
Author: Niels Provos <provos@gmail.com>
Date:   Tue Sep 23 22:28:01 2003 +0000

    Windows support from Mike Davis
    
    
    svn:r74

commit cde427c1ecd987401f4407fef4d87bc4d77633e2
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jun 24 14:45:21 2003 +0000

    found a bug where specifying both read|write for a single event let to
    a crash; found by Bruno Achauer
    
    
    svn:r73

commit 6ce5b876ea564782600a92ef482485f60d5ae5d5
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jun 12 23:33:19 2003 +0000

    clean up from NetBSD integration
    
    
    svn:r72

commit 6551780aefb8f0a8b4d41dc5641b136338fbb2d8
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jun 2 19:37:13 2003 +0000

    bug fix from Ira Lee
    
    
    svn:r71

commit 6809f060b2ab9172e0a71cf17b7f4cbdae4be514
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jun 2 19:36:52 2003 +0000

    bug fix from Pierre Phaneuf
    
    
    svn:r70

commit b6b1e4ebe9c463767a37eb882a56b359d7251614
Author: Niels Provos <provos@gmail.com>
Date:   Mon Jun 2 19:36:22 2003 +0000

    forgot
    
    
    svn:r69

commit 833f0c095d50627b38451de9e887aab07e8464b9
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 30 19:23:27 2003 +0000

    fix a bug where a event fires twice due to bad active list handling
    
    
    svn:r68

commit bdf5a68b95d61051687507abe29349494c3fcc18
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 29 18:29:16 2003 +0000

    updated tree code
    
    
    svn:r67

commit 670b94e479791707584b38f8473b51ca4fc11569
Author: Niels Provos <provos@gmail.com>
Date:   Mon Apr 14 17:32:19 2003 +0000

    version 0.7
    
    
    svn:r66

commit f9e0c44925d28fd719cd96b7b64927d5af4857a0
Author: Niels Provos <provos@gmail.com>
Date:   Thu Apr 10 19:14:03 2003 +0000

    if a timeout on the active list is rescheduled before it can execute it
    gets removed from the active list;  bug report from Jon Poland AT arbor.net
    
    
    svn:r65

commit 30eff294f0d0c469b762db95f2a21f6b3eee1f9d
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 9 18:16:07 2003 +0000

    document environment variables
    
    
    svn:r64

commit b0b72eb05eb1567ddd56bfafbc056a535c97b728
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 9 18:12:11 2003 +0000

    use maximum number of fds for epoll_create; from Davide Libenzi
    
    
    svn:r63

commit 9eb31e5307cab71aa5ede2f835b3e388061c0457
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 9 18:11:31 2003 +0000

    proper indent
    
    
    svn:r62

commit 7e4e52045e898f2f5bc3412582140e04c30da805
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 9 18:11:06 2003 +0000

    add some timer macros for operating systems that dont support them
    
    
    svn:r61

commit 04153adb66e1456de3efad0e9ce183e57f99b47d
Author: Niels Provos <provos@gmail.com>
Date:   Sun Mar 30 20:19:07 2003 +0000

    EVENT_SHOW_METHOD environment prints which event mechanism we are using;
    from Davide Libenzi <davidel@xmailserver.org>
    
    
    svn:r60

commit 012a0b53e1b4f3136f3b08ba0742e71b48fadc32
Author: Niels Provos <provos@gmail.com>
Date:   Mon Mar 10 05:39:41 2003 +0000

    add benchmark
    
    
    svn:r59

commit 1ed00256d50d5ea4a04e9a864664a4d40aedf23f
Author: Niels Provos <provos@gmail.com>
Date:   Mon Mar 10 05:13:02 2003 +0000

    fix type
    
    
    svn:r58

commit ebb73c0db86a39d3aba49f3c5a174f562ce82a8e
Author: Niels Provos <provos@gmail.com>
Date:   Mon Mar 10 04:56:41 2003 +0000

    simple bench mark
    
    
    svn:r57

commit 34d794b293a7103a77cf8bfb78a8af90484b4dad
Author: Niels Provos <provos@gmail.com>
Date:   Sun Mar 9 23:29:57 2003 +0000

    some cleanup
    
    
    svn:r56

commit d5009e8ad6787274337673b0bb75a566a5dfef2e
Author: Niels Provos <provos@gmail.com>
Date:   Sun Mar 9 23:29:26 2003 +0000

    -g
    
    
    svn:r55

commit eb646205bdb48129d1fbcdfda657331a64dd8fc3
Author: Niels Provos <provos@gmail.com>
Date:   Sun Mar 9 23:29:04 2003 +0000

    style
    
    
    svn:r54

commit adf0bb84cde497f7ae6c4e4af73be0d5fff720bb
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 8 20:14:39 2003 +0000

    another test
    
    
    svn:r53

commit 28d248e0067fb91917ab5e60633e71687974a6ed
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 8 16:50:27 2003 +0000

    copyright
    
    
    svn:r52

commit c48e71d839977ced6aff4eb52ca7e01f7d410d83
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 8 16:44:51 2003 +0000

    oneshot means that its removed from the kernel list already
    
    
    svn:r51

commit 0036d79ab6d7663618c76ca49ca5173b2ab4424a
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 8 16:33:18 2003 +0000

    fix kqueue problem
    
    
    svn:r50

commit 33b1c6c4745a769c1d14454d1f22e378757fe80f
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 8 14:44:08 2003 +0000

    include config.h
    
    
    svn:r49

commit 251c7f6808fc0ab338e1e03402fb043a7670f2e0
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 8 14:41:00 2003 +0000

    sync
    
    
    svn:r48

commit 481799afd2d4b3161d97399a67f219bb33f17b84
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 8 14:21:14 2003 +0000

    add persist test
    
    
    svn:r47

commit bedded8230ff24d96629f912ee8ab659e1bfa6b5
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 8 06:39:30 2003 +0000

    more comprehensive regression test
    
    
    svn:r46

commit cde7a3528d38baf89b1c1022191397904bec9ed0
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 8 06:37:56 2003 +0000

    fix signal usage
    
    
    svn:r45

commit ea1d95d2fb03801de52ab3a369bad87c8eb3b132
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 8 05:24:26 2003 +0000

    automake-ify test dir, too
    
    
    svn:r44

commit 71e513296d99948e350e68bd0885af73c0bc7c6a
Author: Niels Provos <provos@gmail.com>
Date:   Fri Mar 7 23:21:01 2003 +0000

    check for linux eventpoll
    
    
    svn:r43

commit 3e41f17afacd87c3bf0a48adc395c3f7e4b7d8bf
Author: Niels Provos <provos@gmail.com>
Date:   Fri Mar 7 23:20:36 2003 +0000

    support for Linux eventpoll mechanism
    
    
    svn:r42

commit 01a932fe1fd385fdb961efdbac991dd4b481fc49
Author: Niels Provos <provos@gmail.com>
Date:   Fri Mar 7 23:19:05 2003 +0000

    fix signal usage
    
    
    svn:r41

commit e72dff13d9ecfee512aa03bfcbdba39ea84bde48
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 1 20:31:28 2003 +0000

    replace references to __FUNCTION__ with __func__
    
    
    svn:r40

commit 3c2916aa1318bfd9f5031ddd34f5fa3326d685da
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 1 19:48:05 2003 +0000

    ifdef config.h
    
    
    svn:r39

commit b5b585c1f9a13577e28549436bb7b95c0c427f6b
Author: Niels Provos <provos@gmail.com>
Date:   Sat Mar 1 19:46:27 2003 +0000

    support disabling of event mechanisms via the environment; error out
    if no event mechanism is available
    
    
    svn:r38

commit b3d1c6a854e10d00bd79403ccd2f1b6790512f81
Author: Niels Provos <provos@gmail.com>
Date:   Fri Feb 28 22:38:30 2003 +0000

    support poll(2) and split out the signal handling
    
    
    svn:r37

commit ac44ddda99627b82012db5b0c097bb9aa9dd9703
Author: Niels Provos <provos@gmail.com>
Date:   Mon Oct 7 17:56:25 2002 +0000

    grammar from jsyn@nthought.com
    
    
    svn:r36

commit 9d2401fffcc6694bb59a2ac42c338ff943cb073a
Author: Niels Provos <provos@gmail.com>
Date:   Mon Oct 7 00:47:34 2002 +0000

    portability fixes from marius@umich.edu.
    
    
    svn:r35

commit acf7a8e321a482434f9e179528a554018a1e6ca9
Author: Niels Provos <provos@gmail.com>
Date:   Sun Sep 15 19:01:42 2002 +0000

    version 0.6
    
    
    svn:r34

commit 2ccd77d4778f4b8a00ee18c121c392253523a8fe
Author: Niels Provos <provos@gmail.com>
Date:   Sun Sep 15 18:55:21 2002 +0000

    test timeouts
    
    
    svn:r33

commit e0ca1ef203a00670c7863d0981c5c07fd96adee5
Author: Niels Provos <provos@gmail.com>
Date:   Sun Sep 15 18:52:28 2002 +0000

    signal fixes from ericj@monkey.org via dugsong@monkey.org
    
    
    svn:r32

commit eb15f4d86639b37362e19564b536661661aba091
Author: Niels Provos <provos@gmail.com>
Date:   Sun Sep 8 02:46:44 2002 +0000

    fix from marius@umich.edu
    
    
    svn:r31

commit f1cf632254f290b88120b49b12108a9d4b6e73ac
Author: Niels Provos <provos@gmail.com>
Date:   Fri Sep 6 17:13:08 2002 +0000

    add timeout_ defines back for backward compatibility.
    
    
    svn:r30

commit 5f8658582ec1ee084e1f1a9da6c9d0a0f40ac9b5
Author: Niels Provos <provos@gmail.com>
Date:   Fri Jul 26 14:45:50 2002 +0000

    sync with openbsd;  API change: timeout_ is now evtimer_
    
    
    svn:r29

commit 8bb9fd5842dea6af0893e68db0c093103a3db391
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jun 13 01:58:34 2002 +0000

    version 0.5
    
    
    svn:r28

commit 3821c7e2015e95f7b6479fe94c15940186db9017
Author: Niels Provos <provos@gmail.com>
Date:   Thu Jun 13 01:54:07 2002 +0000

    make kqueue signal callback work with sigchld.  cast and better timeout.
    
    
    svn:r27

commit 484e594e5cee77a4fc7b5c3c70809a8ae5aa9784
Author: Niels Provos <provos@gmail.com>
Date:   Tue Jun 11 18:38:37 2002 +0000

    make kqueue work for callbacks that use both read and write events
    simultaneously
    
    
    svn:r26

commit 3107493c971bc11e09649a448282331f697dfb78
Author: Niels Provos <provos@gmail.com>
Date:   Mon May 20 21:51:53 2002 +0000

    signal fix from dugsong@monkey.org
    
    
    svn:r25

commit cc32570a080e176def54ab37bcb74df4c803babc
Author: Niels Provos <provos@gmail.com>
Date:   Mon May 20 21:47:04 2002 +0000

    updating a timeout might corrupt RB tree.  Remove before changing time.
    
    
    svn:r24

commit 4ec4cddecee9100da65c4f7874fbb36ae5ec31ba
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 17 02:07:31 2002 +0000

    forgot to initialize elements
    
    
    svn:r23

commit dcf6cbe45d2652df57b173be65e6d712f6bcdc25
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 16 14:09:21 2002 +0000

    correct date
    
    
    svn:r22

commit 409fcdd2fa94d25719af65e8a1c5f78c8a22f717
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 10 14:48:31 2002 +0000

    remove queue.h include
    
    
    svn:r21

commit 59137c119f9deaca9244811040aa3fee2f7b293c
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 10 03:15:19 2002 +0000

    deal correctly with deleting an event, now that we allow multiple callbacks
    for signal delivery.
    
    
    svn:r20

commit 06630e311655f1fde0f9d7fb42a197340caaa133
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 10 02:20:26 2002 +0000

    describe signal_*
    
    
    svn:r19

commit d10f85dbce67c2835eb09c712da691a46d319aac
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 10 02:10:47 2002 +0000

    signal support for kqueue; support of EV_PERSIST flag to event_set
    
    
    svn:r18

commit b855bc55000e64d0adb12822fcf8b8117e8f3309
Author: Niels Provos <provos@gmail.com>
Date:   Wed Apr 10 00:31:31 2002 +0000

    initial support for signals (only for select now) based on code from
    Dug Song <dugsong@monkey.org>
    
    
    svn:r17

commit dbaa408ea5bbbdeeb60bd2bd69b6c7ec93fa0177
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 9 19:30:22 2002 +0000

    port to solaris
    
    
    svn:r16

commit db48ac015458237170e27952cc62cdb99cc7a336
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 9 19:21:39 2002 +0000

    change includes
    
    
    svn:r15

commit 361c1cc0b7f9d78bc86bb3af699a8127c079061d
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 9 19:09:32 2002 +0000

    add compat dir to includes
    
    
    svn:r14

commit 409c7ff72d121a6b8673ea6ebe053413038628d4
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 9 19:06:18 2002 +0000

    another one
    
    
    svn:r13

commit abef3b7e64539f82ceac9bbe145aa3ffef2a3db8
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 9 19:03:24 2002 +0000

    one more file required by automake
    
    
    svn:r12

commit 4cbc77da52f7fbf34cff95e3c52edd7515df9c69
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 9 17:52:23 2002 +0000

    missing files
    
    
    svn:r11

commit 5b27aa0323a4c51442ce040dcfe5844d0b39ad92
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 9 17:42:15 2002 +0000

    further automake conversion
    
    
    svn:r10

commit 6c6c936bcbfb3e83599e5fef96e59dc5c6326094
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 9 17:02:38 2002 +0000

    change to automake
    
    
    svn:r9

commit 61cb68467cff31416295b3e548a3061a3a42e45c
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 9 16:35:06 2002 +0000

    move stuff
    
    
    svn:r8

commit e99653d0286249761e688782cdbba46209f10930
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 9 15:29:12 2002 +0000

    type
    
    
    svn:r7

commit aa6567fe6475d3230c7c745a7ca208735af0c331
Author: Niels Provos <provos@gmail.com>
Date:   Tue Apr 9 15:14:06 2002 +0000

    Initial revision
    
    
    svn:r2
